#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 2 72 2 26 1 279 1 146 1 343 1 368 1 127 1 370 2 348 6 152 9 35 2 261 4 373 1 156 1 132 2 101 1 207 5 268 9 375 1 39 1 65 2 41 3 294 1 271 1 165 1 336 1 91 2 
295 2 72 2 26 1 279 1 146 1 343 1 368 1 127 1 370 2 348 6 152 9 35 2 261 4 373 1 156 1 132 2 101 1 207 5 268 9 375 1 39 1 65 2 41 3 294 1 271 1 165 1 336 1 91 2 
295 2 72 2 26 1 279 1 146 1 343 1 368 1 127 1 370 2 348 7 152 10 35 2 261 5 373 1 156 1 132 2 101 1 207 6 268 10 375 1 39 1 65 2 41 4 294 1 271 1 165 1 336 1 91 2 
295 2 72 2 26 1 279 1 146 1 343 1 368 1 370 2 348 4 152 7 35 2 261 3 373 1 156 1 132 1 101 1 207 4 268 7 375 1 39 1 65 2 41 2 294 1 271 1 165 1 336 1 91 2 
295 1 35 1 261 2 373 1 26 1 132 2 101 1 207 3 268 4 146 1 65 1 41 1 294 1 127 1 370 1 348 3 91 1 152 4 
295 1 60 1 35 1 373 1 156 1 72 1 101 1 207 1 340 1 268 2 39 1 294 1 370 1 152 2 91 1 192 1 
35 2 261 1 373 1 72 1 101 1 207 2 268 3 343 1 41 1 294 1 370 2 348 1 152 3 
295 1 72 1 26 1 146 1 343 1 125 1 370 2 127 1 348 7 152 9 261 4 35 2 373 1 132 2 101 1 207 5 268 9 65 1 41 3 89 1 294 1 271 1 165 1 91 1 
295 1 72 1 26 1 146 1 343 1 125 1 370 2 127 1 348 7 152 9 261 4 35 2 373 1 132 2 101 1 207 5 268 9 65 1 41 3 89 1 294 1 271 1 165 1 91 1 
284 1 162 1 299 1 
66 1 281 2 299 1 
352 2 3 2 302 2 264 2 38 2 63 1 34 1 64 2 
25 1 214 1 3 3 145 1 4 2 175 2 248 1 148 1 254 1 122 1 31 2 302 2 283 1 98 1 259 1 34 1 325 1 352 2 327 1 83 1 82 1 11 1 264 2 38 2 15 1 133 1 63 1 64 3 163 1 357 2 292 1 69 1 210 1 141 1 212 1 92 1 22 2 
352 1 253 1 366 1 3 1 302 1 264 1 38 1 34 1 30 1 64 1 
3 1 245 1 38 1 104 1 118 1 299 1 64 1 121 1 253 1 189 1 139 1 19 1 284 1 167 1 
352 1 3 1 264 1 38 1 104 1 118 1 299 1 64 1 121 1 253 1 302 1 139 2 19 2 284 1 167 1 
186 1 215 1 139 1 19 1 374 1 
111 1 365 1 215 1 139 2 19 2 284 1 374 1 299 1 
139 1 19 1 374 1 
352 1 215 1 3 1 264 1 38 1 30 1 64 1 253 1 366 1 302 1 139 1 33 1 19 1 34 1 
299 1 
365 1 215 1 139 2 19 2 284 1 374 1 45 1 299 1 
193 1 372 1 1 1 215 2 180 1 330 1 374 2 364 2 319 1 299 1 342 1 184 1 365 1 79 2 223 1 139 5 19 5 284 1 379 2 
352 1 327 1 214 1 171 1 11 1 3 2 264 1 267 1 38 1 133 1 248 1 76 1 64 2 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
162 1 63 1 
352 1 3 2 264 1 38 2 63 2 64 2 302 1 126 1 164 1 
110 1 177 1 76 1 
327 1 214 1 11 1 3 1 133 1 63 1 248 1 64 1 137 1 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
352 4 171 2 3 5 245 1 264 4 221 1 38 5 267 1 63 1 208 1 64 5 302 1 6 1 126 1 
352 2 253 1 366 1 3 2 264 2 38 2 168 1 64 2 
352 3 171 1 302 1 3 3 264 3 38 3 63 1 64 3 
352 1 253 1 366 1 3 1 264 1 38 1 64 1 
352 1 253 1 3 1 302 1 126 1 164 1 264 1 38 1 64 1 
25 1 214 1 171 1 3 4 145 1 4 2 175 1 248 1 118 1 148 1 121 1 254 1 253 1 31 1 5 1 302 2 256 1 126 1 98 1 259 1 34 1 325 1 327 1 352 3 83 1 11 1 264 3 38 3 267 1 15 1 133 1 63 1 104 1 64 4 357 1 292 1 139 1 69 1 19 1 210 1 212 1 167 1 92 1 22 1 
352 1 171 1 3 2 6 1 245 1 264 1 38 2 63 1 64 2 
352 3 171 2 3 3 264 3 267 1 38 3 104 1 118 1 299 1 64 3 121 1 253 1 302 1 126 1 139 1 256 1 95 1 19 1 167 1 
352 2 171 1 3 2 264 2 38 2 177 1 64 2 76 1 302 1 126 1 
327 1 214 1 11 1 3 1 133 1 63 1 248 1 64 1 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
214 1 12 1 3 1 144 1 133 1 63 1 248 1 64 1 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
25 1 241 1 217 1 4 2 175 4 76 2 177 2 147 1 283 2 324 1 81 1 259 1 154 1 131 1 15 1 105 1 17 1 69 1 210 1 110 2 380 1 212 2 314 1 92 1 
121 1 352 1 253 1 3 1 264 1 38 1 168 1 64 1 
363 1 42 1 
363 1 42 1 
222 1 381 1 
222 1 381 1 
222 1 381 1 
363 1 42 1 102 1 
54 1 282 1 363 2 42 2 222 1 381 1 
363 1 42 1 108 1 
363 1 42 1 102 1 
363 1 42 1 102 1 
316 1 363 1 42 1 
316 1 363 1 42 1 
316 1 363 1 42 1 
112 1 8 1 352 2 288 1 363 1 115 1 3 2 264 2 219 1 38 2 63 1 182 1 64 2 310 1 378 1 42 1 124 1 108 1 139 1 140 1 19 1 43 1 203 1 56 1 
8 2 362 1 100 1 363 2 115 2 216 1 339 1 161 2 299 1 176 1 54 1 310 2 42 2 139 2 140 3 19 2 203 1 56 2 238 1 
295 1 91 1 65 1 
295 1 340 1 91 1 
295 3 240 1 114 1 340 1 287 1 65 2 
48 1 295 2 240 1 340 1 287 1 65 1 
295 2 240 2 340 1 65 1 287 1 
112 1 169 1 113 1 215 4 217 1 247 1 364 1 299 2 281 3 365 1 79 1 32 1 124 1 223 2 324 1 284 1 178 1 155 1 131 1 330 3 87 2 374 1 134 2 182 1 105 1 66 1 184 1 139 5 188 2 109 1 19 5 379 1 
169 1 113 2 215 7 298 1 217 3 52 1 247 3 364 2 299 5 344 1 281 9 365 1 79 2 124 4 223 6 324 3 284 1 204 1 178 2 10 1 180 1 131 3 160 1 354 5 330 8 87 6 374 6 134 6 105 3 66 3 184 1 186 5 139 9 19 9 379 2 
113 1 215 2 217 1 364 1 247 1 299 3 281 4 32 1 79 1 124 1 223 2 284 1 324 1 178 1 180 1 131 1 330 3 87 2 134 2 105 1 66 2 139 3 188 1 109 1 19 3 379 1 
113 1 215 3 217 2 52 1 364 1 247 2 299 4 344 1 281 7 79 1 32 1 124 2 223 4 284 1 324 2 178 1 180 1 131 2 160 1 330 5 87 4 134 4 105 2 66 3 139 4 188 2 19 4 109 1 379 1 
214 1 246 1 162 1 
214 1 123 1 
376 1 
254 1 214 1 248 1 
214 1 2 1 
254 1 214 1 
254 1 214 3 246 2 248 1 191 1 326 1 
24 1 217 1 159 1 218 1 197 1 175 7 269 1 201 1 367 2 151 1 324 1 283 4 81 3 212 3 314 2 59 1 273 1 
24 1 217 1 159 1 218 1 197 1 175 7 269 1 201 1 367 2 151 1 324 1 283 4 81 3 212 3 314 2 59 1 273 1 
24 1 217 1 159 1 218 1 14 1 197 1 175 7 269 1 201 1 367 2 151 1 324 1 283 4 81 3 212 3 314 2 59 1 273 1 
24 1 217 4 218 1 197 2 4 2 175 31 247 3 341 4 367 3 201 2 151 2 257 1 283 16 324 4 81 10 99 1 59 2 9 1 291 1 159 5 131 3 86 1 15 1 269 1 105 3 270 3 333 1 69 1 234 1 210 1 212 15 314 5 92 1 273 1 
24 1 317 1 217 1 197 1 4 4 175 9 367 2 201 1 151 1 257 1 324 1 283 5 81 4 59 1 159 1 15 2 269 1 69 2 210 2 212 4 314 3 20 1 92 2 273 1 
295 2 72 1 114 1 195 1 318 1 340 1 252 1 301 1 31 1 77 1 370 1 348 1 98 1 152 2 35 1 373 1 101 1 207 1 133 1 268 2 65 1 331 1 357 1 332 1 358 1 294 1 91 1 47 1 22 1 93 1 
295 2 23 1 72 1 114 1 195 1 318 1 278 1 340 1 252 1 301 1 31 1 370 1 348 2 98 1 152 3 35 1 373 1 207 1 133 1 268 3 65 1 331 1 357 1 332 1 358 1 294 1 91 1 22 1 70 1 93 1 
295 2 72 1 114 1 318 1 278 1 340 1 252 1 301 1 31 1 348 2 98 1 152 2 373 1 207 1 133 1 268 2 331 1 65 1 357 1 332 1 358 1 294 1 91 1 22 1 70 1 
23 1 35 1 214 1 72 2 194 1 220 1 133 1 268 1 252 2 254 1 301 2 357 1 31 1 332 2 138 1 187 1 67 1 255 1 370 1 98 1 152 1 325 1 22 1 
295 2 72 1 114 1 195 1 318 1 340 1 252 1 301 1 31 1 370 1 98 1 152 1 35 1 101 1 133 1 268 1 65 1 331 1 357 1 332 1 358 1 91 1 47 1 22 1 70 1 93 1 
142 1 
337 2 196 1 3 1 245 1 299 2 254 1 253 1 345 4 199 1 96 1 98 1 304 1 97 1 351 1 260 2 158 2 353 2 104 1 106 2 64 1 66 2 357 2 19 5 167 1 21 1 22 2 113 1 214 1 220 1 364 1 118 1 121 1 281 2 365 3 31 2 78 1 79 1 223 2 225 1 284 1 325 2 179 2 227 1 228 1 230 2 330 2 374 6 38 1 133 1 40 1 184 1 138 1 139 5 189 1 379 1 
228 1 3 1 245 1 374 2 38 1 104 1 118 1 64 1 121 1 253 1 365 1 345 2 78 1 199 1 139 3 189 1 19 3 96 1 304 1 45 1 167 1 179 1 
158 1 228 1 3 1 245 1 374 1 38 1 104 1 118 1 299 1 64 1 121 1 253 1 365 1 345 3 78 1 199 1 139 3 189 1 19 3 284 1 96 1 304 1 45 1 167 1 
3 1 245 1 118 1 299 1 121 1 253 1 365 1 345 3 199 1 78 1 96 1 284 1 304 1 179 1 260 1 158 1 228 1 374 2 38 1 104 1 64 1 189 1 139 3 19 3 45 1 167 1 
3 2 245 1 30 1 118 1 299 1 121 1 253 2 365 1 345 2 366 1 199 1 78 1 302 1 33 1 284 1 96 1 304 1 34 1 179 1 352 1 260 1 228 1 264 1 374 2 38 2 104 1 64 2 312 1 189 1 139 3 19 3 45 1 167 1 
337 2 196 1 3 1 245 1 299 2 253 1 345 4 199 1 96 1 304 1 351 1 260 2 158 2 353 2 104 1 106 2 64 1 66 2 19 4 167 1 364 1 118 1 121 1 281 2 365 2 78 1 79 1 223 1 284 1 179 2 228 1 230 2 330 1 374 4 38 1 184 1 40 1 139 4 189 1 379 1 
337 2 196 1 3 1 245 1 364 1 118 1 299 1 121 1 253 1 365 2 345 4 322 1 199 1 78 1 79 1 223 1 284 1 96 1 304 1 371 1 179 2 260 2 158 2 228 1 230 2 329 1 353 2 330 1 374 4 38 1 104 1 106 2 64 1 66 2 40 1 184 1 189 1 139 4 19 4 379 1 167 1 
337 2 196 1 3 1 245 1 364 1 118 1 299 1 121 1 253 1 365 2 345 4 322 1 199 1 78 1 79 1 223 1 284 1 96 1 304 1 371 1 179 2 260 2 158 2 228 1 230 2 329 1 353 2 330 1 374 4 38 1 104 1 106 2 64 1 66 2 40 1 184 1 189 1 139 4 19 4 379 1 167 1 
143 1 3 1 243 1 245 1 364 1 118 1 299 1 121 1 281 2 253 1 365 2 345 4 199 1 78 1 79 1 223 1 284 1 96 1 304 1 371 1 179 2 260 2 158 2 228 1 306 1 230 2 353 2 330 1 374 4 38 1 104 1 356 2 64 1 40 1 184 1 189 1 139 4 19 4 379 1 190 2 167 1 
275 1 337 2 196 1 3 1 245 1 364 1 118 1 299 1 121 1 253 1 365 2 322 1 345 5 199 1 78 1 79 1 223 1 284 1 96 1 304 1 371 1 179 3 260 3 158 3 228 1 230 2 329 1 353 2 330 1 374 5 38 1 104 1 106 2 64 1 66 2 40 1 184 1 189 1 139 4 19 4 379 1 167 1 
275 1 337 2 196 1 3 1 245 1 364 1 118 1 299 1 121 1 253 1 365 2 322 1 345 5 199 1 78 1 79 1 223 1 284 1 96 1 304 1 371 1 179 3 260 3 158 3 228 1 230 2 329 1 353 2 330 1 374 5 38 1 104 1 106 2 64 1 66 2 40 1 184 1 189 1 139 4 19 4 379 1 167 1 
3 1 243 1 245 1 364 1 118 1 299 1 121 1 281 2 253 1 365 2 345 4 199 1 78 1 79 1 223 1 284 1 96 1 304 1 351 1 179 2 260 2 158 2 228 1 230 2 353 2 330 1 374 4 38 1 104 1 356 2 64 1 40 1 184 1 189 1 139 4 19 4 379 1 190 2 167 1 
24 1 25 1 217 1 4 2 175 6 177 1 76 1 367 1 151 1 324 1 283 3 81 2 259 1 59 1 162 1 15 1 63 2 269 1 69 1 210 1 110 1 380 1 314 2 212 3 92 1 273 1 
50 1 25 1 297 1 217 1 145 1 27 1 4 4 175 14 247 2 341 3 76 11 177 4 200 1 283 8 324 2 81 2 259 2 159 1 13 1 131 2 15 2 63 1 105 1 163 1 270 3 333 1 234 1 69 2 210 2 110 11 314 1 212 6 92 2 
214 1 25 1 171 1 3 2 244 1 145 1 4 2 175 2 248 1 321 1 177 1 254 1 31 1 283 1 98 1 259 1 325 1 327 1 352 1 11 1 13 1 264 1 38 1 267 1 133 1 15 1 63 1 64 2 137 1 163 1 357 1 292 1 69 1 210 1 44 1 212 1 92 1 22 1 
296 2 3 3 145 1 4 6 247 2 248 2 148 2 254 2 151 1 98 2 259 3 59 1 352 1 11 2 13 1 159 4 264 1 267 1 15 3 62 2 63 2 269 1 105 2 64 3 163 1 357 3 69 3 210 3 110 7 314 4 212 10 70 1 273 1 22 3 24 1 25 3 214 2 171 1 217 3 29 1 175 20 76 7 177 7 31 3 367 1 369 1 324 3 283 10 81 8 325 1 327 2 131 2 38 1 133 2 183 2 292 2 236 1 46 2 92 3 
49 1 214 3 25 2 171 1 3 1 145 1 220 1 4 4 175 2 251 1 249 1 254 2 77 1 31 8 122 2 224 1 346 1 283 1 98 2 259 2 325 2 352 1 264 1 38 1 133 2 15 2 103 1 64 1 163 1 357 7 359 1 138 1 69 2 210 2 380 1 212 1 92 2 70 1 22 8 
25 1 3 1 217 1 4 2 247 1 175 3 177 1 76 1 302 1 126 1 324 1 283 1 81 1 259 1 352 1 13 1 131 1 264 1 266 1 38 1 15 1 105 1 64 1 69 1 110 1 210 1 314 1 212 2 92 1 
25 1 241 1 159 1 131 1 4 2 15 1 175 2 177 1 76 1 69 1 110 1 210 1 324 1 283 2 81 1 380 1 259 1 92 1 
25 1 217 1 4 2 15 1 175 2 105 1 177 1 76 1 69 1 110 1 210 1 81 1 314 1 380 1 212 2 259 1 92 1 154 1 
25 1 217 1 159 1 131 1 4 2 15 1 175 4 247 1 105 1 177 2 76 2 69 1 110 2 210 1 324 1 283 2 81 2 314 1 212 2 380 1 259 1 92 1 
25 1 241 1 159 1 131 1 4 2 15 1 175 2 103 1 177 1 76 1 69 1 110 1 210 1 324 1 283 2 81 1 259 1 92 1 
25 1 217 1 4 2 15 1 175 2 103 1 105 1 177 1 76 1 69 1 110 1 210 1 81 1 314 1 212 2 259 1 92 1 154 1 
25 1 217 1 159 1 131 1 4 2 15 1 175 4 103 1 247 1 105 1 177 2 76 2 69 1 110 2 210 1 324 1 283 2 81 2 314 1 212 2 259 1 92 1 
25 1 217 1 159 1 131 1 4 2 15 1 247 1 175 4 105 1 177 2 76 2 69 1 110 2 210 1 324 1 283 2 81 2 314 1 212 2 259 1 92 1 
214 1 25 1 3 1 145 1 4 2 175 2 248 1 148 1 254 1 31 1 283 1 98 1 259 1 325 1 327 1 11 1 133 1 15 1 63 1 64 1 163 1 357 1 292 1 69 1 210 1 212 1 92 1 22 1 
214 1 25 1 144 1 3 1 276 1 145 1 4 2 175 2 248 1 254 1 31 1 283 1 98 1 259 1 325 1 12 1 133 1 15 1 63 1 64 1 163 1 357 1 292 1 69 1 210 1 212 1 92 1 22 1 
25 1 217 1 159 1 13 1 131 1 4 2 15 1 175 4 247 1 105 1 177 2 76 2 69 1 110 2 210 1 324 1 283 2 81 2 314 1 212 2 259 1 92 1 
214 1 25 1 217 1 3 1 4 2 175 4 247 1 248 1 177 2 76 2 148 1 254 1 31 1 77 1 283 2 324 1 81 2 98 1 259 1 327 1 11 1 159 1 131 1 133 1 62 1 15 1 105 1 64 1 357 1 292 1 69 1 110 2 210 1 314 1 212 2 92 1 22 1 
25 1 217 1 3 1 4 2 247 1 175 3 117 1 76 1 177 1 302 1 126 1 324 1 283 2 81 1 259 1 352 1 159 1 13 1 131 1 264 1 38 1 15 1 105 1 64 1 69 1 210 1 110 1 212 1 92 1 
217 3 73 1 4 4 175 19 247 3 320 2 341 2 128 1 283 9 324 3 81 6 159 3 131 3 206 1 15 2 309 1 105 3 136 1 107 2 270 1 333 1 334 1 234 1 69 2 18 1 210 2 314 3 212 10 20 1 92 2 
217 2 94 1 73 1 4 6 175 26 247 3 320 4 341 2 257 2 128 2 80 1 283 14 324 3 81 4 153 1 159 2 131 3 88 1 15 3 309 1 105 2 136 1 107 1 270 2 69 3 234 2 18 2 210 3 166 1 272 1 314 2 212 12 20 1 92 3 
24 1 217 5 94 1 73 1 4 6 175 41 247 4 320 4 341 4 367 1 151 1 7 1 257 1 80 1 128 1 283 20 324 5 81 8 59 1 153 1 159 4 131 4 206 1 88 1 15 3 269 1 309 1 105 4 136 1 107 1 270 3 333 1 234 3 69 3 18 2 210 3 166 1 272 1 314 4 212 21 20 1 92 3 273 1 
24 1 217 4 94 1 73 1 4 8 175 38 247 4 320 4 341 4 367 1 151 1 7 1 257 2 80 1 128 1 283 20 324 5 81 7 59 1 153 1 159 3 131 4 206 1 88 1 15 4 269 1 309 1 105 3 136 1 107 1 270 3 333 1 234 3 69 4 18 2 210 4 166 1 272 1 314 4 212 18 20 1 92 4 273 1 
24 1 217 8 94 1 73 1 4 4 175 52 247 7 320 4 341 4 367 1 200 2 151 1 257 1 80 1 128 1 283 27 324 8 81 14 59 1 153 1 159 7 131 7 88 1 15 2 269 1 309 1 105 7 136 1 107 1 270 4 333 2 234 2 69 2 18 1 210 2 166 1 272 1 314 7 212 25 20 1 92 2 273 1 
54 1 8 1 310 1 115 1 363 1 42 1 229 1 339 1 56 1 238 1 
108 1 219 1 
8 1 310 1 115 1 363 1 42 1 85 1 232 1 56 1 58 1 
102 1 53 1 
16 1 282 1 316 1 
8 1 100 1 363 1 115 1 216 1 339 1 161 1 299 1 176 1 54 1 310 1 42 1 139 1 140 2 19 1 203 1 56 1 238 1 
8 1 100 1 363 1 115 1 216 1 339 1 161 1 299 1 176 1 54 1 310 1 42 1 139 1 140 2 19 1 203 1 56 1 238 1 
8 1 100 1 363 1 115 1 216 1 339 1 161 1 299 1 176 1 54 1 310 1 42 1 139 1 140 2 19 1 203 1 56 1 238 1 
282 1 102 1 53 1 
282 1 102 1 53 1 
16 1 316 1 
16 1 282 1 316 1 
378 1 43 1 
112 1 215 1 115 1 363 1 3 2 219 1 176 1 124 1 56 1 8 1 352 2 288 1 264 2 161 1 38 2 63 1 182 1 64 2 310 1 378 1 42 1 139 1 108 1 140 1 19 1 43 1 360 1 
49 1 214 1 25 1 3 2 145 1 4 2 175 2 198 1 280 1 254 1 31 2 122 2 149 1 283 1 98 1 259 1 130 1 13 1 38 2 133 1 15 1 64 2 377 1 163 1 357 2 359 1 69 1 210 1 212 1 92 1 22 2 
295 2 114 1 195 1 263 1 340 1 133 1 65 1 331 1 301 1 357 2 31 2 77 1 358 1 98 1 305 1 91 1 286 1 70 1 22 2 
295 2 114 1 195 1 263 1 340 1 133 1 65 1 331 1 301 1 357 1 31 1 358 1 98 1 285 1 91 1 70 1 22 1 
214 1 220 1 133 1 254 1 301 1 357 1 31 1 187 1 138 1 202 1 98 1 305 1 325 1 22 1 
295 2 114 1 195 1 263 1 340 1 133 1 65 1 331 1 301 1 357 1 31 1 358 1 98 1 305 1 91 1 286 1 70 1 22 1 
119 1 
193 1 1 1 223 1 330 1 284 1 162 1 299 1 
337 1 196 1 364 1 299 2 281 1 365 1 79 1 223 1 284 1 330 1 374 1 106 1 66 1 184 1 139 1 19 1 379 1 
193 1 239 1 296 2 1 1 2 2 242 1 246 2 247 2 248 3 299 8 254 3 55 2 98 4 57 2 308 2 265 1 104 2 105 2 66 6 357 3 19 5 21 1 22 3 71 2 113 2 214 10 170 2 217 2 116 2 173 2 28 1 364 4 281 12 77 1 123 3 31 3 365 3 79 4 223 8 284 2 324 2 325 1 289 2 328 1 131 2 330 9 374 5 87 6 133 3 134 6 184 4 139 5 379 4 191 1 
71 1 274 1 113 1 217 2 94 1 364 2 247 2 341 1 299 5 281 6 365 1 79 2 223 5 80 1 324 2 284 2 349 1 153 1 308 2 131 2 330 8 374 1 87 5 134 5 105 2 66 3 184 2 270 1 139 1 234 1 19 1 379 2 166 1 272 1 21 1 
71 1 3 1 217 1 364 1 30 1 253 1 322 1 366 1 79 1 302 1 223 2 151 1 33 1 324 2 34 1 59 1 352 1 231 1 308 2 330 2 264 1 38 1 64 1 184 1 139 1 19 1 379 1 273 1 
193 1 1 1 330 1 364 1 299 1 184 1 79 1 223 1 379 1 284 1 
71 1 296 1 217 2 308 2 131 2 330 5 87 5 134 5 247 2 105 2 299 5 66 5 281 10 223 5 324 2 
365 1 139 1 19 1 284 1 374 1 299 1 
214 1 113 2 28 2 220 1 364 2 254 1 31 4 365 2 79 2 223 2 225 1 347 1 303 1 98 1 325 2 227 1 328 1 180 1 330 2 374 4 133 1 184 1 357 4 138 1 139 3 19 3 379 2 21 2 22 4 
214 1 25 1 3 3 145 1 4 2 175 1 248 1 148 1 254 1 31 1 302 2 98 1 34 1 259 1 325 1 352 2 327 1 83 1 11 1 264 2 38 2 15 1 133 1 63 1 64 3 357 1 292 1 69 1 210 1 212 1 92 1 22 1 
113 1 330 1 87 2 134 2 364 1 299 4 66 2 281 4 184 1 367 1 79 1 223 2 379 1 284 2 21 1 
115 1 56 1 205 1 
378 1 115 1 339 1 335 1 56 1 
115 1 56 1 205 1 
115 1 56 1 205 1 
115 1 56 1 75 1 
115 1 56 1 75 1 
115 1 56 1 75 1 
115 1 56 1 
363 1 42 1 
24 1 217 1 159 1 4 4 15 2 175 8 269 1 367 1 69 2 151 1 257 1 324 1 283 4 210 2 81 3 212 4 314 2 59 1 92 2 273 1 
24 1 217 1 162 1 175 6 269 1 367 1 151 1 324 1 283 3 81 2 212 3 314 2 59 1 273 1 
157 1 217 1 159 1 131 1 4 2 15 1 247 1 175 4 105 1 69 1 210 1 324 1 283 2 81 2 314 1 212 2 92 1 
217 1 159 1 131 1 175 7 247 1 105 1 341 2 270 1 333 1 234 1 283 3 324 1 81 2 314 1 212 4 
24 1 50 1 217 3 4 4 247 2 175 23 341 2 367 1 200 1 151 2 257 2 324 3 283 11 81 9 59 2 159 4 131 2 15 2 269 1 105 2 270 2 333 1 69 2 68 1 210 2 212 12 314 5 92 2 273 1 
212 1 175 1 341 1 
270 1 283 1 175 1 
157 1 296 1 217 1 159 1 131 1 15 1 4 2 175 6 247 1 105 1 69 1 210 1 324 1 283 3 81 3 212 3 314 2 92 1 
217 2 94 1 4 2 175 12 247 2 341 1 80 1 283 6 324 2 81 2 153 1 159 1 131 2 15 1 105 2 270 1 234 1 69 1 210 1 166 1 212 6 314 1 272 1 20 1 92 1 
217 1 159 1 175 6 151 1 324 1 283 3 81 2 212 3 314 1 59 1 273 1 
24 1 159 1 4 2 15 1 175 3 269 1 151 1 68 1 69 1 257 1 283 1 210 1 81 2 314 1 212 2 59 1 92 1 
217 2 231 1 159 2 15 1 4 2 175 10 69 1 151 2 210 1 283 5 324 2 81 5 314 3 212 5 20 1 59 2 92 1 273 1 
159 1 131 1 4 2 15 1 175 2 69 1 210 1 324 1 283 2 81 1 20 1 92 1 
217 1 159 1 131 1 4 2 15 1 247 1 175 4 105 1 69 1 210 1 324 1 283 2 81 2 314 1 212 2 20 1 92 1 
159 1 206 1 4 6 15 3 175 3 68 1 69 3 151 1 257 1 210 3 283 1 81 2 212 2 314 1 20 1 59 1 92 3 
24 1 217 5 4 10 175 34 247 3 341 4 367 1 151 3 257 2 283 16 324 5 81 12 99 1 59 3 9 1 157 1 291 1 159 5 131 3 206 1 15 5 269 1 105 3 270 3 333 1 68 1 234 1 69 5 210 5 212 18 314 7 20 1 92 5 273 2 
24 1 217 1 4 2 175 8 341 1 367 1 151 1 80 1 324 1 283 4 81 2 59 1 15 1 269 1 270 1 234 1 69 1 210 1 212 4 314 2 20 1 92 1 273 1 
24 1 217 1 4 4 175 11 247 1 341 2 367 1 151 1 80 1 283 6 324 2 81 3 59 1 157 1 159 1 131 1 15 2 269 1 270 1 333 1 234 1 69 2 210 2 314 2 212 5 20 1 92 2 273 1 
24 1 217 3 94 1 4 6 175 19 247 2 341 1 367 1 151 1 80 1 257 1 283 9 324 3 81 4 59 1 153 1 157 1 159 1 131 2 15 3 269 1 105 2 270 1 234 1 69 3 210 3 166 1 272 1 212 10 314 3 20 1 92 3 273 1 
24 1 217 2 94 1 4 6 175 17 247 2 341 1 367 1 151 1 257 1 80 1 283 10 324 3 81 5 59 1 153 1 157 1 159 2 131 2 15 3 269 1 105 1 270 1 234 1 69 3 210 3 166 1 212 7 314 3 272 1 20 1 92 3 273 1 
24 1 217 1 4 2 175 8 341 1 367 1 151 1 80 1 324 1 283 4 81 2 59 1 15 1 269 1 270 1 234 1 69 1 210 1 212 4 314 2 20 1 92 1 273 1 
217 2 94 1 4 2 175 12 247 2 341 1 80 1 283 6 324 2 81 2 153 1 159 1 131 2 15 1 105 2 270 1 234 1 69 1 210 1 166 1 212 6 314 1 272 1 20 1 92 1 
24 1 217 2 94 1 4 8 175 18 247 2 341 1 367 1 151 1 80 1 257 2 283 10 324 3 81 5 59 1 153 1 157 1 159 2 131 2 15 4 269 1 105 1 270 1 234 1 69 4 210 4 166 1 272 1 212 8 314 3 20 1 92 4 273 1 
217 2 94 1 4 8 175 16 247 3 341 1 80 1 257 2 283 9 324 3 81 6 153 1 159 3 131 3 206 1 15 4 105 2 270 1 234 1 69 4 210 4 166 1 272 1 212 7 314 3 20 1 92 4 
24 1 217 1 159 3 175 7 269 2 151 3 324 1 283 3 81 6 212 4 314 3 59 3 273 1 
24 1 217 2 94 1 4 8 175 18 247 2 341 1 367 1 151 1 80 1 257 2 283 10 324 3 81 4 59 1 153 1 159 1 131 2 206 1 15 4 269 1 105 1 270 1 234 1 69 4 210 4 166 1 272 1 212 8 314 3 20 1 92 4 273 1 
120 1 3 1 6 1 245 1 38 1 63 1 64 1 
3 1 51 1 245 1 181 1 38 1 63 1 64 1 120 1 6 1 313 1 350 1 226 1 
254 1 214 1 31 1 357 1 138 1 98 1 220 1 133 1 162 1 325 1 22 1 
352 1 214 1 171 1 11 1 3 2 264 1 38 1 133 1 63 1 248 1 64 2 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
352 1 214 3 171 1 2 1 11 1 3 2 264 2 38 2 28 1 133 1 63 1 118 1 248 2 64 2 121 1 253 1 254 2 357 1 31 1 292 1 55 1 98 1 22 1 
352 1 214 3 171 1 2 1 3 2 144 1 264 2 38 2 28 1 133 1 63 1 118 1 248 2 64 2 121 1 253 1 254 2 357 2 31 2 292 1 55 1 235 1 98 1 22 2 
214 4 2 1 246 1 355 1 374 1 28 1 133 1 104 1 248 1 299 1 254 1 357 3 31 3 123 1 55 1 139 2 293 1 235 1 19 2 284 1 98 1 325 1 22 3 
170 1 214 4 2 1 246 1 374 1 28 1 133 1 104 1 248 1 299 1 254 1 357 3 31 3 123 1 55 1 139 2 235 1 19 2 284 1 98 1 325 1 22 3 
31 1 357 1 98 1 133 1 251 1 22 1 
0 1 214 3 133 2 251 1 249 1 248 1 250 1 254 2 122 1 77 1 357 6 31 7 359 1 224 1 346 1 98 3 129 1 325 2 191 1 70 1 22 7 
3 2 4 4 248 1 148 1 254 1 151 1 98 1 259 2 59 1 352 1 11 1 13 1 264 1 62 1 15 2 63 2 269 1 64 2 357 1 69 2 210 2 110 1 314 2 212 3 22 1 273 1 24 1 25 2 214 1 171 1 217 1 175 6 177 1 76 1 280 1 31 1 77 1 367 1 324 1 283 3 81 2 327 1 38 1 133 1 183 1 292 1 92 2 
193 1 170 1 214 2 1 1 215 1 246 1 173 1 116 1 364 2 299 1 31 1 123 1 365 1 79 2 223 1 284 1 325 1 289 1 328 1 330 1 374 2 104 1 184 2 357 1 139 3 19 3 379 2 22 1 
239 1 214 2 246 1 133 1 251 1 248 1 254 1 77 1 357 2 31 2 98 2 191 1 22 2 
214 1 37 1 220 1 133 1 254 1 357 4 31 4 77 1 138 1 235 1 98 1 325 1 22 4 
0 1 214 1 28 1 133 1 248 1 250 1 209 1 254 1 357 2 31 2 369 1 98 2 315 1 22 2 
295 1 31 1 357 1 98 1 340 1 133 1 91 1 325 1 331 1 22 1 
254 1 214 1 130 1 31 2 357 2 77 1 359 1 98 1 133 1 70 1 22 2 
214 3 37 1 28 1 220 1 133 2 249 1 254 2 357 4 31 5 77 1 138 1 359 1 224 1 98 2 325 1 22 5 
214 3 37 1 28 1 220 1 133 2 249 1 254 2 357 4 31 5 77 1 323 1 138 1 359 1 98 2 325 1 22 5 
352 1 214 1 171 1 3 2 144 1 264 1 38 1 133 1 63 1 248 1 64 2 254 1 357 1 31 1 292 1 98 1 325 1 22 1 
0 1 214 1 28 1 133 1 248 1 250 1 254 1 357 1 31 1 98 2 129 1 191 1 22 1 
361 1 307 1 174 1 211 1 63 1 
361 1 36 1 61 1 262 1 215 1 307 2 174 2 63 1 104 1 118 1 299 1 121 1 253 1 139 2 256 1 19 2 284 1 211 2 167 1 
361 1 3 1 307 1 38 1 198 1 64 1 377 1 149 1 211 1 
361 1 61 1 36 1 
373 1 294 1 207 1 162 1 
35 1 373 1 294 1 370 1 207 1 268 1 152 1 
72 1 252 1 152 1 
35 1 373 1 101 1 207 1 268 3 300 1 39 2 185 1 294 1 370 1 152 3 90 1 
35 1 373 1 294 1 132 1 370 1 348 1 207 1 268 2 152 2 
295 1 35 1 261 1 101 1 207 1 268 1 146 1 65 1 370 1 152 1 91 1 
35 1 294 1 370 1 101 1 207 1 268 1 152 1 
35 1 373 1 294 2 370 1 101 1 268 1 152 1 
35 2 311 1 290 1 294 1 370 2 101 1 207 1 268 2 152 2 237 1 
35 1 261 1 373 1 101 1 207 2 268 3 41 1 294 1 271 1 370 1 165 1 348 2 152 3 
295 2 35 1 373 1 114 1 101 1 207 1 340 1 268 2 65 1 294 1 370 1 348 1 152 2 91 1 213 1 
261 1 35 2 373 1 41 1 294 1 132 1 127 1 370 2 348 2 101 1 207 2 268 4 152 4 
35 1 373 1 294 1 370 1 101 1 207 1 268 1 152 1 
35 1 261 1 373 2 207 3 268 4 39 1 185 1 41 1 294 2 370 1 258 1 348 2 90 1 152 4 
35 1 373 1 125 1 294 1 74 1 370 1 348 1 101 1 207 1 268 2 152 2 233 1 
35 1 373 1 338 1 101 1 207 1 268 3 39 2 185 2 294 1 370 1 90 1 152 3 
172 1 84 2 207 2 135 1 
35 1 370 1 277 1 101 1 268 1 152 1 
35 1 373 1 294 1 370 1 348 1 165 1 101 1 207 1 268 2 152 2 
150 1 
35 1 373 1 294 1 370 1 101 1 207 1 268 1 152 1 
35 1 373 1 101 1 207 1 268 3 39 1 294 1 370 1 348 1 165 1 152 3 
261 1 41 1 258 1 207 1 
294 1 207 1 

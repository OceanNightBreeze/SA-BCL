#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 318 99 13 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 166 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 4694 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 2 139 3 92 1 258 4 354 2 276 1 236 1 143 1 4 1 325 2 49 1 173 9 283 1 285 1 306 5 221 1 195 6 151 1 198 9 105 1 33 1 246 2 316 1 35 1 379 2 378 2 348 2 107 1 
112 2 139 3 92 1 258 4 354 2 276 1 236 1 143 1 4 1 325 2 49 1 173 9 283 1 285 1 306 5 221 1 195 6 151 1 198 9 105 1 33 1 246 2 316 1 35 1 378 2 379 2 348 2 107 1 
112 2 139 4 92 1 258 5 354 2 276 1 236 1 143 1 4 1 325 2 49 1 173 10 283 1 285 1 306 6 221 1 195 7 151 1 198 10 105 1 33 1 246 2 316 1 35 1 378 2 379 2 348 2 107 1 
112 2 139 2 92 1 258 3 354 2 276 1 236 1 143 1 4 1 325 2 49 1 173 7 283 1 285 1 306 4 221 1 195 4 151 1 198 7 33 1 246 2 316 1 35 1 378 2 379 1 348 2 107 1 
139 1 195 3 112 1 92 1 258 2 354 1 276 1 198 4 4 1 105 1 325 1 246 1 316 1 173 4 35 1 306 3 378 1 379 2 
92 1 19 1 151 1 308 1 354 1 198 2 236 1 4 1 325 1 246 1 316 1 173 2 306 1 378 1 348 1 108 1 
139 1 195 1 92 1 258 1 198 3 4 1 246 2 316 1 173 3 306 2 378 2 107 1 348 1 
112 1 349 1 195 7 139 3 92 1 258 4 354 1 276 1 355 1 198 9 143 1 4 1 105 1 325 1 246 2 316 1 35 1 173 9 285 1 306 5 379 2 378 2 107 1 348 1 
112 1 349 1 195 7 139 3 92 1 258 4 354 1 276 1 355 1 198 9 143 1 4 1 105 1 325 1 246 2 316 1 35 1 173 9 285 1 306 5 379 2 378 2 107 1 348 1 
185 1 295 1 166 1 
78 2 185 1 262 1 
274 1 62 2 360 2 125 2 116 2 130 1 270 2 102 2 
274 1 39 1 116 2 211 1 45 1 324 2 23 1 122 1 172 1 359 1 51 1 302 1 360 3 125 2 175 1 77 1 337 2 194 1 177 1 289 2 309 2 130 1 12 1 270 2 102 2 226 1 34 1 84 1 157 1 62 3 374 1 249 1 86 1 319 1 253 1 381 2 68 1 
62 1 360 1 125 1 116 1 130 1 270 1 14 1 102 1 111 1 327 1 
113 1 129 1 367 1 244 1 14 1 281 1 62 1 301 1 360 1 125 1 185 1 295 1 338 1 90 1 
113 1 129 1 116 1 270 1 367 1 244 2 14 1 102 1 301 2 62 1 360 1 125 1 185 1 295 1 90 1 
219 1 301 1 142 1 244 1 104 1 
301 2 303 1 185 1 142 1 295 1 244 2 65 1 104 1 
301 1 244 1 104 1 
142 1 130 1 116 1 270 1 244 1 14 1 102 1 227 1 327 1 301 1 62 1 360 1 125 1 111 1 
185 1 
301 2 185 1 142 1 295 1 244 2 251 1 65 1 104 1 
314 1 301 3 63 1 318 1 191 1 142 2 244 3 13 1 99 1 320 1 
274 1 166 1 
274 2 116 1 270 1 22 1 102 1 218 1 62 2 360 2 125 2 
315 1 58 1 95 1 
274 1 141 1 309 1 23 1 34 1 84 1 172 1 62 1 51 1 359 1 360 1 374 1 77 1 289 1 381 1 68 1 
309 1 366 1 116 1 270 1 58 1 23 1 34 1 84 1 172 1 359 1 51 1 62 2 374 1 360 2 125 1 77 1 11 1 289 1 68 1 381 1 
274 1 366 2 116 4 270 4 22 1 102 1 72 1 281 1 62 5 360 5 125 5 231 1 305 1 11 1 
62 2 360 2 125 2 116 2 270 2 216 1 14 1 111 1 
274 1 62 3 360 3 125 3 366 1 116 3 270 3 102 1 
62 1 360 1 125 1 116 1 270 1 14 1 111 1 
218 1 62 1 360 1 125 1 116 1 270 1 22 1 14 1 102 1 
274 1 113 1 116 3 211 1 22 1 45 1 324 2 23 1 122 1 172 1 359 1 51 1 301 1 302 1 360 4 125 3 77 1 337 1 177 1 11 1 289 1 129 1 309 1 366 1 130 1 12 1 270 3 367 1 244 1 14 1 102 2 226 1 84 1 34 1 157 1 135 1 62 4 374 1 249 1 346 1 86 1 90 1 68 1 381 1 
274 1 281 1 62 2 360 2 125 2 116 1 366 1 270 1 72 1 
113 1 129 1 366 2 116 3 270 3 244 1 367 1 22 1 14 1 102 1 6 1 301 1 62 3 360 3 125 3 346 1 185 1 90 1 11 1 
366 1 116 2 270 2 22 1 58 1 102 1 315 1 62 2 360 2 125 2 
274 1 309 1 23 1 34 1 84 1 172 1 62 1 51 1 359 1 360 1 374 1 77 1 289 1 381 1 68 1 
274 1 309 1 5 1 23 1 34 1 172 1 62 1 51 1 359 1 360 1 184 1 77 1 289 1 381 1 68 1 
259 1 211 1 45 1 324 2 122 1 95 2 48 1 302 1 97 1 363 1 337 4 364 1 194 2 177 2 127 1 180 1 12 1 58 2 103 1 61 1 315 2 36 1 249 1 347 1 
62 1 360 1 125 1 116 1 270 1 367 1 14 1 216 1 
118 1 192 1 
118 1 192 1 
56 1 287 1 
56 1 287 1 
56 1 287 1 
118 1 192 1 255 1 
118 1 192 1 255 1 
260 1 118 1 192 1 
159 1 56 1 118 2 287 1 192 2 176 1 
118 1 192 1 255 1 
132 1 118 1 192 1 
132 1 118 1 192 1 
132 1 118 1 192 1 
274 1 260 1 209 1 116 2 298 1 118 1 170 1 7 1 24 1 300 1 301 1 329 1 360 2 125 2 267 1 29 1 192 1 152 1 270 2 244 1 293 1 182 1 372 1 62 2 
261 1 209 2 31 2 298 2 244 2 118 2 144 1 293 2 300 2 372 1 159 1 301 2 9 1 185 1 334 1 333 1 273 1 192 2 29 3 
112 1 354 1 325 1 
19 1 354 1 325 1 
112 2 19 1 286 1 252 1 307 1 325 3 
112 1 238 1 19 1 252 1 307 1 325 2 
112 1 19 1 252 1 307 2 325 2 
259 1 142 4 262 1 170 1 169 3 24 1 48 1 171 2 189 1 282 2 301 5 329 1 266 2 332 1 191 1 75 1 76 1 78 3 180 1 244 5 104 1 292 1 314 1 63 1 162 1 185 2 347 1 250 1 295 1 65 1 233 1 17 2 
259 3 142 7 262 3 263 5 169 8 24 4 48 3 171 6 282 6 219 5 301 9 331 1 266 6 191 2 268 1 76 2 243 1 78 9 180 3 244 9 104 6 15 1 292 2 314 2 63 2 162 3 185 5 347 3 250 1 64 1 295 1 89 1 65 1 320 1 233 1 
259 1 142 2 262 2 169 3 24 1 48 1 171 2 301 3 282 2 332 1 191 1 266 2 75 1 76 1 78 4 180 1 244 3 292 1 314 1 63 1 185 3 162 1 347 1 295 1 320 1 17 1 
259 2 142 3 262 3 169 5 24 2 48 2 171 4 282 4 301 4 331 1 266 4 191 1 332 1 75 1 76 1 243 1 78 7 180 2 244 4 292 1 314 1 63 1 185 4 162 2 347 2 295 1 64 1 320 1 17 2 
83 1 166 1 
23 1 94 1 
313 1 
359 1 77 1 23 1 
23 1 134 1 
359 1 23 1 
155 1 23 1 83 2 313 1 265 1 359 1 77 1 
40 1 259 1 342 2 153 1 180 1 356 1 312 1 183 1 158 1 375 1 164 1 363 2 364 3 165 1 337 7 177 3 194 4 
40 1 259 1 342 2 153 1 180 1 356 1 312 1 183 1 158 1 375 1 164 1 363 2 364 3 165 1 337 7 177 3 194 4 
40 1 275 1 259 1 342 2 153 1 180 1 356 1 312 1 183 1 158 1 375 1 164 1 363 2 364 3 165 1 337 7 177 3 194 4 
40 2 350 3 259 4 167 1 356 2 43 1 45 1 324 2 122 1 48 3 124 1 302 1 10 1 363 5 337 31 364 10 177 15 194 16 54 1 342 3 153 2 180 4 12 1 312 1 183 1 158 1 272 1 375 5 162 3 347 3 164 1 137 4 165 2 380 1 
40 1 259 1 114 1 356 1 45 2 324 4 122 2 302 2 10 1 363 3 337 9 364 4 194 5 177 4 342 2 153 1 180 1 12 2 183 1 158 1 375 1 164 1 165 1 18 1 
112 1 92 1 19 1 354 1 353 1 323 1 4 1 325 2 8 1 26 1 172 1 190 1 173 2 220 1 286 1 306 1 362 1 336 1 289 1 195 1 241 1 309 1 198 2 246 1 316 1 345 1 378 1 348 1 381 1 68 1 
112 1 19 1 354 1 353 1 323 1 4 1 325 2 8 1 26 1 172 1 190 1 173 3 286 1 306 1 362 1 336 1 289 1 240 1 195 2 309 1 198 3 80 1 246 1 316 1 345 1 378 1 254 1 348 1 381 1 68 1 
112 1 19 1 353 1 354 1 323 1 4 1 325 2 8 1 172 1 190 1 173 2 286 1 306 1 362 1 289 1 195 2 309 1 198 2 80 1 316 1 345 1 254 1 348 1 381 1 68 1 
69 1 353 2 352 1 188 1 23 1 172 1 359 1 190 2 173 1 362 2 289 1 240 1 309 1 198 1 34 1 246 1 200 1 160 1 378 1 206 1 348 2 68 1 381 1 
112 1 92 1 19 1 354 1 353 1 323 1 325 2 8 1 26 1 172 1 190 1 173 1 220 1 286 1 362 1 336 1 289 1 309 1 198 1 80 1 246 1 345 1 378 1 348 1 381 1 68 1 
146 1 
148 1 281 1 150 1 191 1 98 2 338 1 100 1 289 2 55 1 57 2 244 5 290 1 14 1 104 6 200 1 62 1 201 2 63 1 161 1 295 1 203 2 65 3 67 1 68 1 257 1 69 1 113 1 262 2 169 2 23 1 25 2 171 2 172 1 359 1 301 5 360 1 125 1 74 2 76 1 269 1 128 1 78 2 309 2 129 1 367 1 81 1 34 2 314 1 370 1 229 4 230 2 185 2 90 1 233 1 381 2 
113 1 281 1 148 1 150 1 301 3 360 1 125 1 338 1 55 1 128 1 129 1 244 3 367 1 14 1 104 2 62 1 229 2 230 1 251 1 65 1 90 1 257 1 
113 1 25 1 281 1 148 1 150 1 301 3 360 1 125 1 338 1 55 1 128 1 129 1 244 3 367 1 14 1 104 1 62 1 229 3 185 1 295 1 251 1 65 1 90 1 257 1 
113 1 25 1 281 1 148 1 150 1 301 3 360 1 125 1 98 1 338 1 55 1 128 1 129 1 244 3 367 1 14 1 104 2 62 1 229 3 230 1 185 1 295 1 251 1 65 1 90 1 257 1 
44 1 148 1 281 1 147 1 150 1 191 1 98 4 338 1 55 1 244 5 57 2 14 1 104 7 62 1 63 1 201 2 161 1 295 5 203 2 251 1 65 3 257 1 113 1 262 2 169 1 121 1 25 4 171 1 301 5 360 1 125 1 74 2 269 1 128 1 129 1 367 1 369 1 314 1 229 6 230 4 185 5 87 1 90 1 233 1 
281 1 148 1 150 1 191 1 98 2 338 1 55 1 244 4 57 2 14 1 104 4 62 1 63 1 201 2 161 1 203 2 295 1 65 2 257 1 113 1 262 2 169 1 25 2 171 1 301 4 360 1 125 1 74 2 269 1 128 1 129 1 78 2 367 1 81 1 314 1 229 4 230 2 185 2 90 1 233 1 
113 1 262 2 44 1 169 1 25 2 147 1 171 1 281 1 148 1 150 1 301 4 360 1 125 1 191 1 74 2 98 2 338 1 55 1 269 1 128 1 129 1 57 2 244 4 367 1 14 1 104 4 314 1 62 1 229 4 201 2 63 1 230 2 161 1 185 1 87 1 295 1 203 2 65 2 90 1 257 1 233 1 
113 1 262 2 44 1 169 1 25 2 147 1 171 1 281 1 148 1 150 1 301 4 360 1 125 1 191 1 74 2 98 2 338 1 55 1 269 1 128 1 129 1 57 2 244 4 367 1 14 1 104 4 314 1 62 1 229 4 201 2 63 1 230 2 161 1 185 1 87 1 295 1 203 2 65 2 90 1 257 1 233 1 
113 1 169 1 25 2 147 1 171 1 281 1 148 1 150 1 301 4 360 1 125 1 191 1 98 2 193 2 338 1 55 1 128 1 78 2 129 1 244 4 367 1 343 1 14 1 104 4 314 1 62 1 229 4 201 2 63 1 85 1 230 2 161 1 185 1 295 1 203 2 65 2 232 1 90 1 110 2 257 1 233 1 
113 1 262 2 44 1 169 1 25 3 147 1 171 1 281 1 148 1 150 1 301 4 360 1 125 1 191 1 74 2 98 3 338 1 55 1 269 1 128 1 129 1 57 2 244 4 367 1 14 1 369 1 104 5 314 1 62 1 229 5 201 2 63 1 230 3 161 1 185 1 87 1 295 1 203 2 65 2 90 1 233 1 257 1 
113 1 262 2 44 1 169 1 25 3 147 1 171 1 281 1 148 1 150 1 301 4 360 1 125 1 191 1 74 2 98 3 338 1 55 1 269 1 128 1 129 1 57 2 244 4 367 1 14 1 369 1 104 5 314 1 62 1 229 5 201 2 63 1 230 3 161 1 185 1 87 1 295 1 203 2 65 2 90 1 233 1 257 1 
281 1 148 1 150 1 191 1 98 2 193 2 338 1 55 1 244 4 14 1 104 4 62 1 63 1 201 2 161 1 203 2 295 1 65 2 110 2 257 1 113 1 169 1 25 2 171 1 301 4 360 1 125 1 128 1 129 1 78 2 367 1 81 1 314 1 229 4 230 2 185 1 232 1 90 1 233 1 
40 1 274 2 259 1 211 1 45 1 324 2 122 1 95 1 302 1 363 2 364 2 337 6 194 3 177 3 342 1 180 1 12 1 58 1 103 1 183 1 315 1 158 1 249 1 164 1 165 1 166 1 
274 1 0 1 350 3 259 2 167 1 211 1 45 2 324 4 122 2 95 11 48 1 50 1 302 2 363 1 364 2 337 14 177 6 194 8 341 1 180 1 12 2 58 11 315 4 375 1 249 2 86 1 162 2 347 2 253 1 137 3 380 1 138 1 208 1 
274 1 91 1 1 1 141 1 116 1 211 1 45 1 324 2 23 1 122 1 172 1 359 1 51 1 360 2 302 1 125 1 27 1 77 1 337 2 289 1 11 1 177 1 194 1 309 1 366 1 12 1 270 1 84 1 34 1 315 1 62 2 374 1 249 1 86 1 253 1 68 1 381 1 208 1 
274 2 40 1 2 2 45 3 46 1 324 6 95 7 48 2 51 2 337 20 289 3 11 1 194 10 342 1 12 3 58 7 157 2 158 1 62 3 249 3 162 2 347 2 164 1 253 1 165 1 208 1 68 2 351 2 259 3 116 1 211 3 215 2 23 2 122 3 172 2 359 2 302 3 360 3 125 1 363 4 77 2 364 8 177 10 309 3 180 3 366 1 79 2 270 1 80 1 183 1 34 1 84 2 315 7 374 2 375 4 86 1 37 1 187 1 381 3 
69 1 277 1 297 1 116 1 321 1 211 2 45 2 324 4 23 3 122 2 172 2 359 2 360 1 302 2 304 1 125 1 337 2 289 8 194 1 177 1 196 1 241 1 309 7 366 1 270 1 12 2 80 1 103 1 34 2 133 1 228 1 200 1 62 1 249 2 86 1 319 2 253 1 68 2 381 8 
259 1 116 1 211 1 22 1 45 1 324 2 95 1 122 1 48 1 302 1 360 1 125 1 363 1 364 1 337 3 194 1 177 2 242 1 180 1 12 1 270 1 58 1 102 1 315 1 62 1 249 1 162 1 347 1 208 1 
259 1 211 1 12 1 58 1 45 1 324 2 103 1 95 1 122 1 315 1 302 1 36 1 375 1 249 1 347 1 364 1 337 2 194 2 
180 1 211 1 12 1 58 1 45 1 324 2 103 1 95 1 122 1 48 1 315 1 61 1 302 1 249 1 363 1 364 1 337 2 177 2 
259 1 211 1 45 1 324 2 122 1 95 2 48 1 302 1 363 1 337 4 364 2 194 2 177 2 180 1 12 1 58 2 103 1 315 2 249 1 375 1 162 1 347 1 
259 1 211 1 12 1 58 1 45 1 324 2 95 1 122 1 133 1 315 1 302 1 36 1 375 1 249 1 347 1 364 1 337 2 194 2 
180 1 211 1 12 1 58 1 45 1 324 2 95 1 122 1 133 1 48 1 315 1 61 1 302 1 249 1 363 1 364 1 337 2 177 2 
259 1 180 1 211 1 12 1 58 2 45 1 324 2 95 2 122 1 48 1 133 1 315 2 302 1 375 1 249 1 162 1 347 1 363 1 364 2 337 4 177 2 194 2 
259 1 180 1 211 1 12 1 58 2 45 1 324 2 95 2 122 1 48 1 315 2 302 1 375 1 249 1 162 1 347 1 363 1 364 2 337 4 177 2 194 2 
274 1 211 1 45 1 324 2 23 1 122 1 172 1 359 1 51 1 360 1 302 1 77 1 337 2 194 1 289 1 177 1 309 1 12 1 84 1 34 1 157 1 62 1 374 1 249 1 86 1 253 1 68 1 381 1 
274 1 117 1 211 1 45 1 324 2 5 1 23 1 122 1 172 1 359 1 51 1 360 1 302 1 77 1 337 2 194 1 289 1 177 1 309 1 12 1 34 1 62 1 184 1 249 1 86 1 253 1 68 1 381 1 
259 1 180 1 211 1 12 1 58 2 45 1 324 2 95 2 122 1 48 1 315 2 302 1 375 1 249 1 162 1 347 1 363 1 364 2 337 4 177 2 194 2 208 1 
2 1 259 1 211 1 45 1 324 2 23 1 95 2 122 1 48 1 172 1 51 1 359 1 360 1 302 1 363 1 77 1 364 2 337 4 177 2 194 2 289 1 241 1 309 1 180 1 12 1 58 2 84 1 315 2 157 1 62 1 374 1 375 1 249 1 162 1 347 1 68 1 381 1 
259 1 116 1 211 1 22 1 45 1 324 2 122 1 95 1 48 1 302 1 360 1 125 1 364 1 337 3 177 1 194 2 179 1 180 1 12 1 270 1 58 1 102 1 315 1 62 1 375 1 249 1 162 1 347 1 208 1 
350 1 259 3 167 1 114 1 45 2 280 1 324 4 122 2 299 1 48 3 73 2 302 2 53 1 363 3 337 19 364 6 177 10 194 9 30 1 180 3 12 2 310 1 225 1 373 1 202 2 375 3 162 3 347 3 137 2 380 1 
350 2 259 3 167 2 114 1 70 1 45 3 280 1 324 6 122 3 217 1 299 1 48 2 73 1 302 3 53 1 10 2 363 2 364 4 337 26 177 12 194 14 223 1 180 2 12 3 181 1 310 2 225 2 82 1 344 1 202 4 375 2 162 3 347 3 137 2 
40 1 350 3 259 5 167 3 114 1 70 1 45 3 280 1 324 6 217 1 122 3 299 1 48 4 73 1 302 3 53 1 10 1 363 4 337 41 364 8 177 21 194 20 223 1 30 1 342 1 180 5 12 3 181 1 310 1 225 2 82 1 183 1 158 1 344 1 202 4 375 4 162 4 347 4 164 1 137 4 165 1 380 1 66 1 
40 1 350 3 259 5 167 3 114 1 70 1 45 4 280 1 324 8 217 1 122 4 299 1 48 3 73 1 302 4 53 1 10 2 363 4 337 38 364 7 177 18 194 20 223 1 30 1 342 1 180 4 12 4 181 1 310 1 225 2 82 1 183 1 158 1 344 1 202 4 375 3 162 4 347 4 164 1 137 4 165 1 380 1 66 1 
40 1 350 4 259 8 167 2 114 1 70 1 45 2 280 1 324 4 217 1 122 2 299 1 48 7 73 1 302 2 53 1 10 1 363 7 337 52 364 14 177 25 194 27 223 1 341 2 342 1 180 8 12 2 181 1 310 1 225 1 82 1 183 1 158 1 344 1 202 4 375 7 162 7 347 7 164 1 137 4 165 1 380 2 
234 1 300 1 159 1 9 1 261 1 209 1 298 1 118 1 192 1 293 1 
260 1 267 1 
300 1 96 1 197 1 209 1 298 1 163 1 118 1 192 1 293 1 
212 1 255 1 
132 1 213 1 176 1 
261 1 209 1 31 1 298 1 244 1 118 1 293 1 300 1 372 1 159 1 301 1 9 1 185 1 334 1 333 1 273 1 192 1 29 2 
261 1 209 1 31 1 298 1 244 1 118 1 293 1 300 1 372 1 159 1 301 1 9 1 185 1 334 1 333 1 273 1 192 1 29 2 
261 1 209 1 31 1 298 1 244 1 118 1 293 1 300 1 372 1 159 1 301 1 9 1 185 1 334 1 333 1 273 1 192 1 29 2 
212 1 176 1 255 1 
212 1 176 1 255 1 
132 1 213 1 
132 1 213 1 176 1 
152 1 182 1 
274 1 260 1 209 1 142 1 116 2 298 1 119 1 118 1 170 1 7 1 24 1 300 1 301 1 329 1 360 2 125 2 333 1 267 1 192 1 29 1 152 1 31 1 270 2 244 1 293 1 182 1 62 2 
140 1 297 1 211 1 93 1 71 1 45 1 120 1 324 2 23 1 122 1 172 1 359 1 360 2 302 1 125 2 337 2 289 2 194 1 177 1 196 1 309 2 12 1 62 2 249 1 376 1 86 1 319 2 253 1 68 1 381 2 208 1 
112 1 19 1 241 1 3 1 354 1 309 2 353 1 322 1 80 1 323 1 325 2 8 1 172 1 26 1 286 1 38 1 289 2 68 1 381 2 
112 1 19 1 3 1 354 1 309 1 353 1 80 1 323 1 325 2 8 1 26 1 172 1 286 1 289 1 109 1 381 1 68 1 
69 1 309 1 353 1 322 1 23 1 34 1 172 1 200 1 359 1 294 1 206 1 289 1 68 1 381 1 
112 1 19 1 3 1 354 1 309 1 353 1 322 1 80 1 323 1 325 2 8 1 26 1 172 1 286 1 38 1 289 1 68 1 381 1 
284 1 
171 1 185 1 154 1 295 1 278 1 169 1 166 1 
262 1 169 1 171 1 301 1 191 1 74 1 269 1 78 1 57 1 244 1 104 1 314 1 63 1 185 2 295 1 65 1 233 1 
235 1 278 1 94 3 48 2 149 2 237 2 282 6 191 4 335 2 289 3 241 1 154 1 244 5 291 2 104 5 245 1 63 4 162 2 347 2 295 2 65 3 207 2 67 1 16 2 68 4 259 2 21 1 262 6 214 1 215 2 169 9 23 8 171 8 172 3 359 3 265 1 301 5 266 6 76 2 77 3 28 2 309 3 78 12 180 2 83 2 34 1 134 2 314 4 371 2 185 8 377 1 90 2 233 4 381 3 
350 1 259 2 167 1 262 3 70 1 169 8 217 1 48 2 149 2 171 5 301 1 282 5 266 5 191 2 335 1 76 1 288 1 223 1 78 6 180 2 181 1 244 1 82 1 104 1 314 2 63 2 185 5 162 2 347 2 295 2 137 1 65 1 88 1 67 1 233 2 
40 1 259 2 116 1 44 1 169 2 327 1 149 2 171 2 301 1 360 1 125 1 191 1 335 1 180 1 130 1 270 1 244 1 14 1 102 1 156 1 227 1 314 1 158 1 62 1 63 1 165 1 111 1 233 1 
154 1 278 1 169 1 314 1 171 1 63 1 191 1 185 1 295 1 233 1 
259 2 78 10 180 2 262 5 215 1 169 5 48 2 149 2 171 5 282 5 162 2 266 5 185 5 347 2 335 1 
301 1 185 1 295 1 244 1 65 1 104 1 
69 1 214 2 169 2 23 1 171 2 172 1 359 1 301 3 191 2 76 2 100 1 289 4 365 1 309 4 244 3 104 4 34 2 370 1 314 2 200 1 63 2 317 1 377 1 65 2 320 1 67 2 68 1 233 1 381 4 
274 1 116 2 211 1 45 1 324 2 23 1 122 1 172 1 51 1 359 1 302 1 360 3 125 2 77 1 337 1 177 1 289 1 309 1 130 1 270 2 12 1 102 2 226 1 34 1 84 1 157 1 62 3 374 1 249 1 86 1 381 1 68 1 
342 1 78 4 262 2 169 1 171 2 314 1 282 2 63 1 266 2 191 1 185 4 295 2 76 1 67 1 233 1 
330 1 209 1 298 1 
330 1 209 1 298 1 
261 1 152 1 209 1 298 1 205 1 
330 1 209 1 298 1 
41 1 209 1 298 1 
41 1 209 1 298 1 
41 1 209 1 298 1 
209 1 298 1 
118 1 192 1 
40 1 342 1 259 1 180 1 12 2 45 2 324 4 122 2 183 1 158 1 302 2 375 1 10 1 164 1 363 2 337 8 364 3 165 1 177 4 194 4 
40 1 342 1 259 1 180 1 183 1 158 1 164 1 363 2 165 1 364 2 337 6 177 3 194 3 166 1 
259 1 115 1 180 1 12 1 45 1 324 2 122 1 48 1 302 1 375 1 162 1 347 1 363 1 364 2 337 4 177 2 194 2 
350 1 259 1 167 1 180 1 48 1 375 1 162 1 347 1 363 1 137 2 337 7 380 1 364 2 177 4 194 3 
40 2 259 3 350 2 45 2 324 4 122 2 48 2 50 1 302 2 10 2 363 5 364 9 337 23 194 11 177 12 341 1 342 1 180 3 12 2 311 1 183 1 158 1 375 4 162 2 347 2 164 1 137 2 165 2 380 1 
137 1 337 1 177 1 
350 1 337 1 194 1 
259 1 115 1 180 1 12 1 45 1 215 1 324 2 122 1 48 1 302 1 375 1 162 1 347 1 363 2 337 6 364 3 177 3 194 3 
350 1 259 2 167 1 114 1 70 1 45 1 324 2 122 1 217 1 48 2 302 1 363 1 337 12 364 2 177 6 194 6 223 1 180 2 12 1 181 1 82 1 375 1 162 2 347 2 137 1 
40 1 259 1 180 1 158 1 375 1 363 1 337 6 165 1 364 2 194 3 177 3 
40 1 12 1 311 1 45 1 324 2 122 1 183 1 302 1 375 1 10 1 164 1 363 1 364 2 165 1 337 3 194 1 177 2 
40 2 259 2 114 1 180 2 12 1 45 1 324 2 122 1 156 1 158 1 302 1 375 2 363 3 165 2 364 5 337 10 194 5 177 5 
259 1 114 1 12 1 45 1 324 2 122 1 302 1 375 1 347 1 337 2 364 1 194 2 
259 1 114 1 180 1 12 1 45 1 324 2 122 1 48 1 302 1 375 1 162 1 347 1 363 1 364 2 337 4 177 2 194 2 
40 1 30 1 114 1 12 3 311 1 45 3 324 6 122 3 302 3 375 1 10 1 363 1 337 3 165 1 364 2 177 2 194 1 
40 3 350 3 259 5 167 1 115 1 114 1 43 1 45 5 324 10 122 5 48 3 124 1 302 5 10 2 363 7 337 34 364 12 177 18 194 16 342 1 30 1 180 5 12 5 311 1 183 1 158 2 272 1 375 5 162 3 347 3 164 1 137 4 165 3 380 1 
40 1 259 1 350 1 167 1 114 1 70 1 45 1 324 2 122 1 302 1 363 2 337 8 364 2 177 4 194 4 342 1 180 1 12 1 183 1 158 1 164 1 137 1 165 1 
40 1 350 1 259 2 167 1 114 1 115 1 70 1 45 2 324 4 122 2 302 2 363 2 337 11 364 3 177 5 194 6 342 1 180 1 12 2 183 1 158 1 375 1 162 1 347 1 164 1 137 2 165 1 380 1 
40 1 350 1 259 3 167 1 115 1 114 1 70 1 45 3 324 6 122 3 217 1 48 2 302 3 10 1 363 3 337 19 364 4 177 10 194 9 223 1 342 1 180 3 12 3 181 1 82 1 183 1 158 1 375 1 162 2 347 2 164 1 137 1 165 1 
40 1 350 1 259 3 167 1 115 1 114 1 70 1 45 3 324 6 122 3 217 1 48 1 302 3 10 1 363 3 337 17 364 5 177 7 194 10 223 1 342 1 180 2 12 3 181 1 82 1 183 1 158 1 375 2 162 2 347 2 164 1 137 1 165 1 
40 1 259 1 350 1 167 1 114 1 70 1 45 1 324 2 122 1 302 1 363 2 337 8 364 2 177 4 194 4 342 1 180 1 12 1 183 1 158 1 164 1 137 1 165 1 
350 1 259 2 167 1 114 1 70 1 45 1 324 2 122 1 217 1 48 2 302 1 363 1 337 12 364 2 177 6 194 6 223 1 180 2 12 1 181 1 82 1 375 1 162 2 347 2 137 1 
40 1 350 1 259 3 167 1 115 1 114 1 70 1 45 4 324 8 122 4 217 1 48 1 302 4 10 2 363 3 337 18 364 5 177 8 194 10 223 1 342 1 180 2 12 4 181 1 82 1 183 1 158 1 375 2 162 2 347 2 164 1 137 1 165 1 
350 1 259 3 167 1 114 1 70 1 45 4 324 8 122 4 217 1 48 2 302 4 10 2 363 3 337 16 364 6 177 7 194 9 223 1 30 1 180 2 12 4 181 1 82 1 375 3 162 3 347 3 137 1 
40 3 259 1 180 1 183 1 158 1 375 3 164 2 363 3 337 7 165 3 364 6 177 4 194 3 
40 1 350 1 259 3 167 1 114 1 70 1 45 4 324 8 122 4 217 1 48 1 302 4 10 2 363 3 337 18 364 4 177 8 194 10 223 1 342 1 30 1 180 2 12 4 181 1 82 1 183 1 158 1 375 1 162 2 347 2 164 1 137 1 165 1 
274 1 281 1 62 1 360 1 125 1 126 1 72 1 
274 1 101 1 32 1 72 1 281 1 62 1 360 1 174 1 125 1 106 1 126 1 339 1 
172 1 200 1 359 1 69 1 309 1 23 1 289 1 68 1 166 1 381 1 34 1 
274 1 309 1 366 1 116 1 270 1 23 1 34 1 172 1 359 1 51 1 62 2 360 2 374 1 125 1 77 1 289 1 68 1 381 1 
274 1 129 1 309 1 366 1 116 1 270 2 367 1 214 1 14 1 23 3 134 1 371 1 172 1 359 2 51 1 62 2 360 2 374 1 125 2 77 2 289 1 68 1 381 1 
274 1 129 1 309 2 366 1 116 1 270 2 367 1 214 1 14 1 23 3 5 1 134 1 371 1 172 1 359 2 51 1 62 2 360 2 125 2 136 1 77 2 289 2 68 1 381 2 
309 3 244 2 214 1 104 1 94 1 23 3 83 1 34 1 134 1 371 1 123 1 172 1 359 1 301 2 185 1 136 1 295 1 77 1 90 1 222 1 289 3 68 1 381 3 
309 3 244 2 214 1 104 1 94 1 23 3 83 1 34 1 134 1 371 1 172 1 359 1 301 2 185 1 136 1 295 1 77 1 207 1 90 1 289 3 68 1 381 3 
228 1 172 1 309 1 289 1 68 1 381 1 
241 1 277 1 309 6 297 1 321 1 80 1 357 1 47 1 23 3 34 2 228 1 172 2 265 1 359 2 304 1 239 1 319 1 77 1 289 7 381 7 68 3 
40 1 274 2 2 1 45 2 324 4 95 1 51 1 337 6 289 1 194 3 241 1 342 1 12 2 58 1 157 1 158 1 62 2 249 2 164 1 165 1 208 1 68 1 259 1 116 1 211 2 23 1 122 2 172 1 359 1 302 2 360 2 125 1 363 2 77 1 364 2 177 3 309 1 79 1 366 1 180 1 270 1 84 1 183 1 315 1 374 1 376 1 381 1 
142 1 278 1 169 1 94 1 23 2 171 1 237 1 172 1 359 1 301 3 191 2 77 1 289 1 309 1 154 1 244 3 291 1 104 2 83 1 34 1 314 2 371 1 63 2 185 1 295 1 377 1 65 1 207 1 90 1 16 1 233 2 381 1 68 1 
309 1 313 1 83 1 23 1 245 1 228 1 172 1 265 1 359 1 77 1 289 1 381 1 68 2 
241 1 69 1 309 4 60 1 23 1 34 1 200 1 172 1 359 1 136 1 289 4 68 1 381 4 
309 2 214 1 59 1 46 1 47 1 326 1 23 1 172 1 359 1 239 1 77 1 289 2 381 2 68 2 
172 1 19 1 354 1 309 1 323 1 325 1 289 1 68 1 381 1 34 1 
172 1 359 1 241 1 309 2 297 1 80 1 71 1 23 1 289 2 68 1 381 2 
241 1 69 1 309 4 277 1 297 1 321 1 214 1 60 1 23 3 34 1 200 1 172 2 359 2 289 5 381 5 68 2 
178 1 241 1 69 1 309 4 297 1 321 1 214 1 60 1 23 3 34 1 200 1 172 2 359 2 289 5 381 5 68 2 
274 1 309 1 366 1 116 1 270 1 23 1 5 1 34 1 172 1 359 1 51 1 62 2 360 2 125 1 77 1 289 1 68 1 381 1 
309 1 214 1 357 1 47 1 23 1 172 1 265 1 359 1 239 1 77 1 289 1 381 1 68 2 
274 1 328 1 20 1 168 1 210 1 
274 1 20 1 129 1 168 2 113 1 142 1 210 2 367 1 244 2 14 1 328 2 247 1 301 2 346 1 185 1 295 1 361 1 90 1 296 1 
62 1 140 1 360 1 20 1 125 1 168 1 210 1 93 1 120 1 
20 1 361 1 296 1 
316 1 306 1 4 1 166 1 
246 1 316 1 173 1 198 1 306 1 378 1 4 1 
198 1 362 1 348 1 
246 1 316 1 358 1 92 1 173 3 198 3 236 2 306 1 378 1 4 1 145 1 256 1 
246 1 195 1 316 1 173 2 198 2 306 1 379 1 378 1 4 1 
246 1 112 1 258 1 92 1 35 1 173 1 354 1 198 1 306 1 378 1 325 1 
246 1 316 1 92 1 173 1 198 1 306 1 378 1 
246 1 316 2 92 1 173 1 198 1 378 1 4 1 
92 1 198 2 131 1 279 1 246 2 316 1 173 2 306 1 378 2 340 1 
195 2 139 1 92 1 258 1 198 3 143 1 4 1 246 1 316 1 173 3 285 1 306 2 378 1 
112 1 195 1 92 1 19 1 354 1 198 2 4 1 325 2 246 1 316 1 248 1 173 2 286 1 306 1 378 1 
195 2 139 1 92 1 258 1 198 4 4 1 105 1 246 2 316 1 173 4 306 2 378 2 379 1 
246 1 316 1 92 1 173 1 198 1 306 1 378 1 4 1 
195 2 139 1 258 1 198 4 236 1 4 2 145 1 246 1 358 1 316 2 173 4 186 1 306 3 378 1 
224 1 195 1 92 1 355 1 198 2 4 1 199 1 246 1 316 1 173 2 306 1 378 1 
246 1 316 1 358 2 92 1 173 3 42 1 198 3 236 2 306 1 378 1 4 1 145 1 
52 1 271 2 306 2 264 1 
246 1 92 1 173 1 198 1 368 1 378 1 
246 1 195 1 316 1 92 1 173 2 198 2 306 1 143 1 378 1 4 1 
204 1 
246 1 316 1 92 1 173 1 198 1 306 1 378 1 4 1 
246 1 195 1 316 1 92 1 173 3 198 3 236 1 306 1 143 1 378 1 4 1 
139 1 258 1 186 1 306 1 
316 1 306 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 1 213 9 22 2 216 1 55 1 129 2 78 1 307 1 59 6 282 5 9 1 284 2 354 1 287 9 197 1 13 1 82 4 111 2 180 2 255 1 140 1 258 1 162 1 316 3 338 1 143 2 377 1 381 2 
93 1 213 9 22 2 216 1 55 1 129 2 78 1 307 1 59 6 282 5 9 1 284 2 354 1 287 9 197 1 13 1 82 4 111 2 180 2 255 1 140 1 258 1 162 1 316 3 338 1 377 1 143 2 381 2 
93 1 213 10 22 2 216 1 55 1 129 2 78 1 307 1 59 7 282 6 9 1 284 2 354 1 287 10 197 1 13 1 82 5 111 2 180 2 255 1 140 1 258 1 162 1 316 4 338 1 377 1 143 2 381 2 
93 1 213 7 22 2 216 1 55 1 129 2 78 1 307 1 59 4 282 4 284 2 354 1 287 7 197 1 13 1 82 3 111 2 180 2 255 1 140 1 258 1 162 1 316 2 338 1 377 1 143 1 381 2 
287 4 213 4 22 1 13 1 82 2 216 1 111 1 255 1 180 1 129 1 258 1 316 1 162 1 143 2 381 1 59 3 282 3 9 1 
354 1 287 2 197 1 213 2 22 1 108 1 13 1 216 1 255 1 180 1 129 1 376 1 262 1 381 1 282 1 284 1 
287 3 93 1 213 3 13 1 82 1 216 1 255 1 180 2 129 2 316 1 59 1 282 2 284 1 
93 1 213 9 22 1 216 1 302 1 129 2 307 1 59 7 282 5 284 1 9 1 287 9 13 1 82 4 111 1 180 2 255 1 258 1 316 3 229 1 162 1 377 1 143 2 381 1 
93 1 213 9 22 1 216 1 302 1 129 2 307 1 59 7 282 5 284 1 9 1 287 9 13 1 82 4 111 1 180 2 255 1 258 1 316 3 229 1 162 1 377 1 143 2 381 1 
0 2 374 1 365 1 
137 1 357 1 141 2 270 2 252 2 147 2 149 2 347 2 
137 1 270 1 252 1 312 1 147 1 149 1 168 1 124 1 290 1 347 1 25 1 141 1 249 1 371 1 
365 1 
146 1 343 1 124 1 169 1 290 2 371 2 365 1 48 1 
146 1 313 1 124 2 14 1 290 5 169 2 24 1 365 1 98 2 126 2 320 1 263 1 234 1 46 2 321 1 371 5 209 1 48 1 285 1 
362 1 365 1 48 1 
92 2 323 1 211 1 270 2 165 1 236 1 147 2 149 3 241 1 125 1 348 1 347 2 306 1 305 1 350 1 175 1 60 2 8 1 137 1 373 1 252 3 226 1 199 2 158 1 15 1 336 1 112 2 159 1 114 2 357 1 141 2 318 1 317 1 116 1 71 1 47 1 90 1 
137 1 141 1 270 1 252 1 312 1 147 1 149 1 249 1 347 1 25 1 
36 1 252 1 149 1 335 1 290 1 254 1 365 1 347 1 170 1 249 1 69 1 89 1 371 1 48 1 
36 1 270 1 252 1 147 1 149 1 335 1 290 2 365 1 347 1 141 1 249 1 69 1 89 1 371 2 48 1 
124 1 169 1 290 1 371 1 17 1 
146 1 124 1 169 1 290 2 371 2 365 1 48 1 164 1 
169 1 290 1 371 1 
92 1 373 1 323 1 270 1 252 2 149 2 158 1 199 1 336 1 125 1 1 1 348 1 347 1 114 1 67 1 141 1 317 1 194 1 175 1 8 1 
270 1 252 2 147 1 149 2 188 1 347 2 244 1 357 2 141 1 
81 1 67 1 115 1 
92 1 373 1 323 1 252 1 149 1 199 1 158 1 125 1 336 1 348 1 114 1 357 1 317 1 329 1 175 1 8 1 
357 1 362 1 
357 1 141 3 270 3 252 3 147 1 149 3 194 1 347 3 
141 1 270 1 252 1 312 1 149 1 249 1 347 1 
244 1 141 1 270 1 252 1 147 1 149 1 249 1 188 1 347 1 
92 1 323 1 211 1 270 3 165 1 147 2 149 4 241 1 125 1 1 1 348 1 347 3 244 1 306 1 305 1 249 1 193 1 194 1 371 1 175 1 60 1 8 1 36 1 137 1 373 1 252 4 158 1 199 1 336 1 15 1 335 1 290 1 112 2 159 1 114 1 357 1 141 3 318 1 317 1 69 1 71 1 89 1 47 1 145 1 
357 1 141 1 270 1 252 2 230 1 149 2 254 1 194 1 347 2 
36 1 270 3 252 3 147 1 149 3 290 1 335 1 1 1 365 1 347 3 244 1 141 3 249 1 69 1 6 1 89 1 371 1 194 2 145 1 
81 1 270 2 252 2 147 1 149 2 347 2 244 1 141 2 67 1 194 1 
92 1 323 1 373 1 252 1 149 1 199 1 158 1 125 1 336 1 348 1 114 1 357 1 317 1 175 1 8 1 
92 1 373 1 252 1 149 1 199 1 158 1 336 1 337 1 348 1 114 1 357 1 317 1 281 1 175 1 8 1 
211 1 96 1 325 1 241 1 245 1 5 1 305 1 306 2 30 1 102 1 35 1 60 4 81 2 12 1 109 1 112 2 159 1 44 1 67 2 115 2 318 1 71 1 90 2 50 1 
314 1 141 1 270 1 252 1 149 1 249 1 335 1 347 1 
270 4 252 5 147 1 149 5 1 1 254 1 347 5 244 1 357 1 141 4 230 1 266 1 194 2 210 1 
314 1 141 2 270 2 252 2 312 1 149 2 249 1 347 2 
11 1 132 1 23 1 
261 1 73 1 132 2 23 2 76 1 152 1 
132 1 23 1 
132 1 23 1 
73 1 152 1 
73 1 152 1 
73 1 152 1 
85 1 132 1 23 1 
85 1 132 1 23 1 
85 1 132 1 23 1 
132 1 23 1 136 1 
132 1 23 1 136 1 
132 1 23 1 136 1 
139 2 94 1 23 2 290 2 365 1 261 1 132 2 28 2 191 3 349 2 32 2 379 1 33 2 103 1 118 1 371 2 283 1 359 1 340 1 
270 2 271 1 149 2 23 1 218 1 347 2 132 1 191 1 28 1 32 1 33 1 371 1 176 1 139 1 11 1 252 2 290 1 256 1 357 1 141 2 86 1 233 1 88 1 359 1 
22 1 381 1 111 1 
22 1 262 1 381 1 
196 1 52 1 262 1 300 1 111 2 381 3 
52 2 262 1 111 1 300 1 381 2 
52 1 262 1 300 1 111 1 331 1 381 2 
146 1 271 1 148 2 0 3 298 1 124 4 169 1 98 1 365 2 126 1 128 1 5 1 221 1 30 1 330 1 369 1 371 5 285 1 353 2 374 1 109 1 290 5 86 1 88 1 234 3 46 1 339 1 321 2 120 2 48 1 50 1 51 1 
146 1 148 6 0 9 124 7 169 6 365 5 98 2 126 2 100 1 5 3 221 3 30 3 369 1 371 9 7 1 372 1 285 1 353 6 374 3 109 3 41 1 355 5 290 9 17 5 259 1 263 1 88 4 234 8 46 2 339 2 321 6 235 1 48 1 50 3 51 2 
148 2 0 4 298 1 124 2 365 3 98 1 126 1 128 1 221 1 5 1 30 1 371 3 353 2 374 2 109 1 290 3 263 1 88 1 234 3 46 1 339 1 321 2 48 1 120 1 50 1 51 1 
148 4 0 7 298 1 124 3 365 4 98 1 126 1 128 1 221 2 5 2 30 2 371 4 7 1 353 4 374 3 109 2 41 1 290 4 259 1 263 1 88 2 234 5 46 1 339 1 321 4 48 1 120 2 50 2 51 1 
373 1 27 1 
333 1 
373 1 299 1 362 1 
373 1 348 1 
373 3 4 1 317 1 299 2 356 1 348 1 
373 1 317 1 348 1 
373 1 119 1 
185 1 12 3 288 1 151 1 130 1 205 1 5 1 228 1 306 3 315 1 30 1 102 2 192 1 280 2 90 4 60 7 61 1 49 1 
183 1 211 1 185 5 237 4 215 3 75 1 151 1 130 2 221 3 5 4 305 1 306 15 190 1 192 2 30 4 102 5 31 1 280 3 173 1 60 31 332 1 61 1 12 10 109 3 288 2 112 2 159 1 205 1 228 2 315 1 318 1 294 1 90 16 50 3 
211 2 185 1 123 1 151 1 326 1 130 1 5 1 305 2 306 4 30 1 102 3 31 1 192 1 280 2 60 9 61 1 12 4 288 1 112 4 159 2 205 1 228 1 318 2 90 5 
185 1 12 3 288 1 151 1 130 1 205 1 5 1 228 1 306 3 315 1 30 1 102 2 192 1 280 2 90 4 60 7 61 1 
185 1 12 3 288 1 151 1 130 1 205 1 5 1 228 1 306 3 315 1 30 1 102 2 192 1 280 2 90 4 60 7 61 1 
92 1 373 1 178 1 287 1 361 1 213 1 158 1 199 1 242 1 2 2 180 1 348 1 243 2 303 1 114 1 129 1 133 1 101 1 175 1 251 2 8 1 284 2 105 1 
92 1 196 1 72 1 287 1 122 1 238 1 213 1 22 1 158 1 179 1 199 1 345 1 111 1 2 1 255 1 180 1 243 1 114 1 129 1 207 1 182 1 262 1 381 2 251 1 8 1 284 1 
92 1 72 1 213 2 238 1 22 1 345 1 216 1 2 1 243 1 129 1 59 1 282 1 251 1 8 1 284 1 196 1 287 2 199 1 179 1 158 1 13 1 111 1 180 1 255 1 114 1 207 1 182 1 262 1 381 2 268 1 
92 1 122 1 213 3 238 1 22 1 345 1 216 1 2 1 243 1 129 1 131 1 59 2 282 1 251 1 8 1 284 1 105 1 196 1 287 3 199 1 179 1 158 1 13 1 111 1 180 1 114 1 207 1 182 1 262 1 381 2 
92 1 122 1 213 2 238 1 22 1 216 1 2 1 243 1 131 1 59 2 282 1 251 1 8 1 284 1 196 1 287 2 199 1 158 1 13 1 111 1 114 1 207 1 182 1 262 1 381 2 
34 1 
92 2 146 3 0 2 149 1 98 1 348 1 347 1 303 1 249 1 58 1 308 1 8 1 252 1 199 2 158 1 65 1 254 1 253 1 160 2 114 2 204 2 206 1 18 1 70 1 69 1 321 2 169 6 364 1 365 2 126 1 170 1 277 2 171 1 223 1 368 1 279 2 371 5 175 2 285 1 80 4 36 1 178 1 373 1 374 2 375 2 290 5 335 1 231 2 234 2 89 1 46 1 295 2 48 1 91 1 51 1 
36 1 146 1 343 1 252 1 149 1 169 2 335 1 290 3 253 1 254 1 160 1 347 1 170 1 171 1 249 1 69 1 70 1 89 1 58 1 371 3 91 1 80 2 
146 1 343 1 149 1 169 1 365 1 347 1 170 1 277 1 171 1 249 1 58 1 371 3 80 3 36 1 252 1 290 3 335 1 254 1 253 1 70 1 69 1 89 1 48 1 91 1 
146 1 343 1 149 1 169 2 365 1 347 1 170 1 277 1 171 1 249 1 58 1 371 3 80 3 36 1 252 1 290 3 335 1 254 1 253 1 160 1 231 1 70 1 69 1 89 1 48 1 91 1 
146 3 343 1 149 1 98 1 347 1 249 1 58 1 10 1 252 1 63 1 253 1 254 1 160 4 204 2 206 1 208 1 69 1 70 1 321 1 169 7 365 5 126 1 170 1 277 4 366 1 171 1 278 1 223 1 279 2 371 5 80 6 285 1 36 1 374 2 335 1 290 5 375 2 231 4 89 1 234 1 46 1 295 2 48 5 91 1 
146 2 149 1 0 2 98 1 347 1 249 1 58 1 252 1 253 1 254 1 160 2 204 2 206 1 69 1 70 1 321 1 169 4 364 1 365 2 126 1 170 1 277 2 171 1 223 1 279 2 371 4 80 4 285 1 36 1 374 2 335 1 290 4 375 2 231 2 89 1 234 1 46 1 295 2 48 1 91 1 
146 2 149 1 169 4 365 1 98 1 347 1 126 1 170 1 277 2 171 1 223 1 249 1 279 2 58 1 371 4 10 1 80 4 285 1 36 1 252 1 63 1 374 2 375 2 290 4 335 1 254 1 253 1 160 2 204 2 206 1 208 1 231 2 70 1 69 1 234 1 89 1 46 1 295 2 321 1 48 1 91 1 
146 2 149 1 169 4 365 1 98 1 347 1 126 1 170 1 277 2 171 1 223 1 249 1 279 2 58 1 371 4 10 1 80 4 285 1 36 1 252 1 63 1 374 2 375 2 290 4 335 1 254 1 253 1 160 2 204 2 206 1 208 1 231 2 70 1 69 1 234 1 89 1 46 1 295 2 321 1 48 1 91 1 
146 2 0 2 149 1 169 4 365 1 98 1 347 1 99 1 126 1 170 1 277 2 171 1 223 1 249 1 58 1 371 4 352 2 10 1 80 4 285 1 36 1 252 1 227 1 157 1 200 2 375 2 290 4 335 1 254 1 253 1 160 2 204 2 231 2 70 1 69 1 234 1 89 1 46 1 321 1 48 1 91 1 
146 2 149 1 169 5 365 1 98 1 126 1 347 1 170 1 277 3 366 1 171 1 223 1 249 1 279 2 58 1 371 4 10 1 285 1 80 5 36 1 63 1 252 1 374 2 375 2 290 4 335 1 254 1 253 1 160 3 204 2 206 1 208 1 231 3 70 1 69 1 234 1 89 1 46 1 295 2 321 1 48 1 91 1 
146 2 149 1 169 5 365 1 98 1 126 1 347 1 170 1 277 3 366 1 171 1 223 1 249 1 279 2 58 1 371 4 10 1 285 1 80 5 36 1 63 1 252 1 374 2 375 2 290 4 335 1 254 1 253 1 160 3 204 2 206 1 208 1 231 3 70 1 69 1 234 1 89 1 46 1 295 2 321 1 48 1 91 1 
146 2 149 1 0 2 98 1 347 1 249 1 58 1 352 2 252 1 200 2 253 1 254 1 160 2 204 2 69 1 70 1 321 1 169 4 364 1 365 1 126 1 170 1 277 2 171 1 223 1 371 4 80 4 285 1 36 1 227 1 335 1 290 4 375 2 231 2 89 1 234 1 46 1 48 1 91 1 
92 8 270 1 211 2 122 1 236 2 149 1 325 1 241 2 347 1 348 2 127 1 303 1 26 1 220 1 248 1 305 2 306 1 367 1 194 1 175 2 60 2 8 2 373 3 178 1 252 1 226 1 158 2 199 7 42 1 112 4 159 2 113 1 114 8 141 1 318 2 71 2 47 1 268 1 90 1 
270 1 211 1 147 1 149 1 241 1 347 1 244 1 221 1 5 1 305 1 306 2 102 1 30 1 60 3 81 1 252 1 12 1 156 1 109 1 112 2 159 1 161 1 67 1 141 1 115 1 318 1 71 1 90 1 50 1 
211 1 325 1 241 1 362 1 151 1 130 1 5 1 305 1 306 3 192 1 102 2 30 1 280 1 60 6 61 1 81 1 12 2 112 2 159 1 205 1 357 2 67 1 115 1 318 1 71 1 90 3 
183 1 211 2 185 1 237 3 215 3 241 2 221 2 5 2 306 6 305 2 102 1 30 1 153 1 173 1 60 14 37 1 81 4 226 1 12 2 156 1 109 2 289 1 112 4 159 2 203 1 357 1 67 11 115 11 318 2 71 1 47 1 90 8 50 1 
81 1 211 1 185 1 96 1 12 1 325 1 109 1 241 1 159 1 112 2 67 1 5 1 305 1 115 1 318 1 71 1 60 2 90 2 
81 1 211 1 12 1 325 1 241 1 159 1 112 2 44 1 67 1 305 1 306 2 115 1 318 1 102 1 30 1 71 1 60 2 50 1 
211 1 185 1 325 1 241 1 5 1 221 1 305 1 306 2 30 1 102 1 60 4 81 2 12 2 109 1 112 2 159 1 67 2 115 2 318 1 71 1 90 2 50 1 
81 1 211 1 185 1 96 1 12 1 109 1 241 1 159 1 112 2 127 1 67 1 5 1 305 1 115 1 318 1 71 1 60 2 90 2 
81 1 211 1 12 1 241 1 159 1 112 2 127 1 44 1 67 1 305 1 306 2 115 1 318 1 102 1 30 1 71 1 60 2 50 1 
211 1 185 1 241 1 127 1 5 1 221 1 305 1 306 2 30 1 102 1 60 4 81 2 12 2 109 1 112 2 159 1 67 2 115 2 318 1 71 1 90 2 50 1 
211 1 185 1 241 1 5 1 221 1 305 1 306 2 30 1 102 1 60 4 81 2 12 2 109 1 112 2 159 1 67 2 115 2 318 1 71 1 90 2 50 1 
92 1 323 1 211 1 149 1 241 1 125 1 348 1 305 1 306 1 175 1 60 2 8 1 373 1 252 1 226 1 158 1 199 1 336 1 15 1 159 1 112 2 114 1 357 1 317 1 318 1 71 1 47 1 90 1 
92 1 211 1 149 1 241 1 348 1 305 1 306 1 56 1 281 1 175 1 60 2 8 1 373 1 252 1 226 1 158 1 199 1 336 1 337 1 159 1 112 2 114 1 357 1 317 1 318 1 71 1 47 1 90 1 
211 1 185 1 241 1 5 1 221 1 305 1 306 2 30 1 102 1 60 4 81 2 156 1 12 2 109 1 112 2 159 1 67 2 115 2 318 1 71 1 90 2 50 1 
92 1 323 1 211 1 185 1 149 1 241 1 125 1 348 1 5 1 221 1 306 2 305 1 102 1 30 1 57 1 60 4 8 1 373 1 81 2 252 1 12 2 158 1 199 1 109 1 336 1 15 1 159 1 112 2 114 1 67 2 115 2 317 1 318 1 71 1 90 2 268 1 50 1 
270 1 211 1 185 1 147 1 149 1 241 1 347 1 244 1 221 1 5 1 306 1 305 1 30 1 60 3 104 1 81 1 252 1 12 1 156 1 109 1 112 2 159 1 141 1 67 1 115 1 318 1 71 1 90 2 50 1 
92 1 323 1 211 1 270 1 149 2 241 1 125 1 1 1 348 1 347 1 305 1 306 1 29 1 329 1 225 1 175 1 194 1 60 2 8 1 373 1 81 1 252 2 226 1 156 1 158 1 199 1 336 1 159 1 112 2 292 1 114 1 357 1 141 1 317 1 318 1 71 1 47 1 90 1 
92 3 185 4 149 3 241 3 344 2 1 1 151 1 347 1 348 2 5 3 306 10 305 3 192 1 102 4 250 1 57 2 194 1 60 20 61 1 8 2 252 3 156 1 12 8 199 3 158 2 109 2 15 2 112 6 159 3 114 3 357 2 205 1 67 7 115 7 318 3 317 2 264 1 71 3 323 2 270 1 211 3 122 1 125 2 217 1 130 1 221 2 79 2 224 2 30 3 280 1 175 1 373 2 81 7 226 1 336 2 141 1 47 1 90 10 50 2 
183 3 269 1 211 3 185 4 237 4 215 3 123 1 53 1 151 1 150 1 189 4 275 1 130 1 221 4 5 5 305 3 306 21 192 1 31 1 102 4 30 5 280 1 370 1 174 1 173 1 60 41 61 1 38 2 311 1 12 8 109 4 112 6 159 3 205 1 319 1 318 3 293 1 90 20 19 1 163 1 50 4 322 1 20 1 
183 3 269 1 211 4 185 3 237 4 215 3 123 1 53 1 151 1 150 1 189 4 275 1 130 1 221 4 5 5 305 4 306 18 192 1 31 2 102 4 30 4 280 1 370 1 174 1 173 1 60 38 61 1 38 2 311 1 12 7 109 4 112 8 159 4 205 1 319 1 318 4 293 1 90 20 19 1 163 1 50 3 322 1 20 1 
183 2 269 1 211 2 185 7 237 4 215 4 123 1 53 1 151 1 150 1 189 4 275 1 130 1 221 7 5 8 305 2 306 25 192 1 31 1 102 7 30 8 280 1 370 1 174 1 173 2 60 52 61 1 38 1 311 1 12 14 109 7 289 2 112 4 159 2 205 1 318 2 90 27 19 1 163 1 50 7 322 1 20 1 
183 1 269 1 211 2 185 3 237 2 215 1 123 1 189 2 275 1 221 3 5 3 305 2 306 10 102 3 30 3 174 1 173 1 60 19 38 1 12 6 109 3 112 4 159 2 319 1 318 2 265 1 90 9 19 2 50 3 322 1 
183 2 269 1 211 3 185 2 237 2 215 2 123 1 53 1 189 4 150 1 275 2 221 3 5 3 306 12 305 3 31 2 102 2 30 2 370 1 174 1 60 26 38 2 311 1 12 4 109 3 112 6 159 3 318 3 90 14 19 1 163 1 50 2 322 1 20 1 
139 1 261 1 132 1 134 1 28 1 32 1 23 1 33 1 103 1 118 1 
11 1 256 1 
358 1 139 1 142 1 214 1 132 1 28 1 32 1 23 1 33 1 
139 1 94 1 23 1 290 1 365 1 261 1 132 1 28 1 191 2 349 1 32 1 379 1 33 1 103 1 118 1 371 1 359 1 340 1 
139 1 94 1 23 1 290 1 365 1 261 1 132 1 28 1 191 2 349 1 32 1 379 1 33 1 103 1 118 1 371 1 359 1 340 1 
139 1 94 1 23 1 290 1 365 1 261 1 132 1 28 1 191 2 349 1 32 1 379 1 33 1 103 1 118 1 371 1 359 1 340 1 
327 1 85 1 76 1 
327 1 85 1 76 1 
246 1 136 1 
246 1 76 1 136 1 
176 1 233 1 
270 2 94 1 271 1 149 2 23 1 124 1 218 1 347 2 132 1 349 1 28 1 191 1 32 1 33 1 371 1 176 1 139 1 11 1 252 2 290 1 256 1 357 1 141 2 86 1 233 1 88 1 267 1 
327 1 85 1 
246 1 76 1 136 1 
92 2 211 1 236 2 149 2 239 1 241 1 97 1 348 1 347 2 220 1 222 1 305 1 306 1 154 1 60 2 8 1 373 1 252 2 226 1 156 1 158 1 199 2 64 1 159 1 112 2 113 1 114 2 318 1 71 1 47 1 90 1 
92 1 373 1 39 1 178 1 361 1 158 1 199 1 348 1 243 1 114 1 303 1 380 1 175 1 8 1 
92 1 196 1 342 1 122 1 238 1 22 1 199 1 179 1 158 1 111 1 243 1 114 1 207 1 262 1 380 1 381 2 135 1 8 1 
92 2 196 1 342 1 122 1 238 1 22 1 158 1 199 2 179 1 111 1 243 1 114 2 207 1 262 1 380 1 381 2 135 1 268 1 8 1 
92 1 196 1 342 1 122 1 238 1 22 1 199 1 179 1 158 1 83 1 111 1 243 1 114 1 207 1 262 1 381 2 8 1 
328 1 
313 1 14 1 98 1 365 1 126 1 234 1 46 1 321 1 48 1 285 1 
353 5 21 2 148 5 0 10 374 5 109 2 365 5 247 1 221 2 5 2 224 1 30 2 234 5 321 5 50 2 
146 1 290 1 169 1 371 1 365 1 48 1 
92 4 341 1 146 2 95 2 169 4 98 2 348 2 126 2 303 1 368 2 175 2 371 3 8 3 285 1 195 1 373 2 178 1 158 2 199 4 65 1 290 3 202 1 114 4 45 1 18 1 317 1 232 1 263 1 378 1 234 2 46 2 321 2 296 1 51 2 
313 1 234 1 14 1 362 1 321 1 365 1 48 1 
146 1 0 1 169 1 98 1 365 2 126 1 279 1 371 1 285 1 374 1 290 1 206 1 234 1 46 1 295 1 321 1 48 1 
92 3 341 1 146 3 95 1 297 2 148 6 0 12 299 2 346 2 98 4 348 3 247 2 5 2 8 4 353 6 158 3 199 3 313 1 109 2 14 1 356 1 114 3 257 2 317 3 69 2 119 2 321 8 268 1 166 2 360 1 21 2 324 1 169 5 365 8 126 4 273 1 272 2 221 2 27 3 224 2 368 1 30 2 175 1 371 5 285 4 373 10 374 6 334 2 290 5 234 9 46 4 48 2 50 2 51 2 
183 1 146 1 184 1 21 2 148 5 237 1 0 6 215 1 169 1 53 1 98 2 365 5 150 1 126 2 247 1 221 2 5 2 368 1 30 2 370 1 371 1 285 2 353 5 311 1 198 1 374 3 109 2 290 1 234 8 46 2 321 5 48 2 50 2 51 1 20 1 
270 1 21 2 147 1 149 1 168 1 98 1 126 1 347 1 304 1 25 1 247 1 130 1 5 2 249 1 192 1 30 1 371 1 61 1 285 1 137 1 252 1 63 1 312 1 290 1 141 1 234 2 46 1 321 2 
92 1 323 1 270 2 165 1 211 1 147 2 149 3 241 1 125 1 347 2 348 1 306 1 305 1 175 1 60 1 8 1 137 1 373 1 252 3 199 1 158 1 15 1 336 1 112 2 159 1 114 1 357 1 141 2 318 1 317 1 71 1 47 1 
353 2 148 2 0 4 374 2 98 1 365 4 126 1 368 1 280 1 234 1 46 1 321 2 48 2 285 1 51 1 
139 1 233 1 32 1 103 1 219 1 
139 1 187 1 32 1 
139 1 187 1 32 1 
139 1 187 1 32 1 
276 1 139 1 32 1 
276 1 139 1 32 1 
276 1 139 1 32 1 
139 1 32 1 
132 1 23 1 
183 1 211 1 237 1 215 1 123 1 150 1 151 1 130 1 5 1 306 4 305 1 30 1 192 1 102 2 280 1 60 8 61 1 12 2 112 2 159 1 205 1 318 1 90 4 
183 1 211 2 185 1 237 2 215 1 123 1 151 1 150 1 130 1 221 1 5 2 306 5 305 2 30 1 102 2 192 1 280 1 173 1 60 11 61 1 40 1 12 3 109 1 112 4 159 2 205 1 318 2 90 6 
183 1 211 3 185 1 237 1 215 1 123 1 53 1 151 1 150 1 130 1 221 2 5 3 306 10 305 3 192 1 30 3 102 3 31 1 280 1 370 1 60 19 61 1 311 1 40 1 12 4 109 2 112 6 159 3 205 1 318 3 90 9 50 2 20 1 
183 1 211 3 185 2 237 1 215 1 123 1 53 1 151 1 150 1 130 1 221 2 5 3 306 7 305 3 192 1 31 1 30 2 102 3 280 1 370 1 60 17 61 1 311 1 40 1 12 5 109 2 112 6 159 3 205 1 318 3 90 10 50 1 20 1 
183 1 211 1 237 1 215 1 123 1 150 1 151 1 130 1 5 1 306 4 305 1 30 1 192 1 102 2 280 1 60 8 61 1 12 2 112 2 159 1 205 1 318 1 90 4 
183 1 211 1 185 1 237 1 215 1 123 1 53 1 150 1 221 2 5 2 306 6 305 1 30 2 102 1 370 1 60 12 311 1 12 2 109 2 112 2 159 1 318 1 90 6 50 2 20 1 
183 1 211 4 185 2 237 1 215 1 123 1 53 1 151 1 150 1 130 1 221 2 5 3 306 8 305 4 192 1 30 2 102 3 31 2 280 1 370 1 60 18 61 1 311 1 40 1 12 5 109 2 112 8 159 4 205 1 318 4 90 10 50 1 20 1 
183 1 211 4 185 3 237 1 215 1 123 1 53 1 150 1 221 3 5 3 306 7 305 4 30 2 102 3 31 2 370 1 60 16 311 1 12 6 109 3 112 8 159 4 318 4 319 1 90 9 50 2 20 1 
185 3 12 6 151 2 205 1 130 3 5 1 306 4 30 1 192 3 102 3 60 7 90 3 61 1 
183 1 211 4 185 1 237 1 215 1 123 1 53 1 151 1 150 1 130 1 221 2 5 3 306 8 305 4 192 1 30 2 102 3 31 2 280 1 370 1 60 18 61 1 311 1 12 4 109 2 112 8 159 4 205 1 318 4 319 1 90 10 50 1 20 1 
211 1 185 2 12 5 123 1 112 2 159 1 304 1 130 2 5 2 305 1 306 5 318 1 192 2 102 3 30 2 90 5 60 10 61 1 
211 1 185 1 12 1 109 1 123 1 159 1 112 2 5 1 305 1 318 1 90 2 60 2 
211 1 185 1 12 2 109 1 123 1 159 1 112 2 221 1 5 1 306 2 305 1 318 1 102 1 30 1 90 2 60 4 50 1 
211 3 185 1 12 2 123 1 159 3 112 6 201 1 130 1 306 2 305 3 319 1 318 3 31 1 192 1 102 1 60 3 90 1 
183 1 211 5 185 5 237 4 75 1 215 3 123 1 151 1 130 3 221 3 5 5 306 18 305 5 190 1 192 3 31 2 30 5 102 7 280 1 173 1 332 1 60 34 61 2 40 1 12 12 109 3 112 10 159 5 201 1 205 1 319 1 318 5 90 16 50 3 
211 2 185 1 12 3 159 2 112 4 151 1 205 1 130 1 5 1 306 4 305 2 318 2 30 1 102 2 31 1 192 1 280 1 60 8 90 4 61 1 
130 1 205 1 5 1 306 3 12 2 30 1 102 2 192 1 280 1 362 1 60 6 90 3 61 1 151 1 
211 1 185 1 40 1 12 2 109 1 159 1 112 2 221 1 5 1 306 2 305 1 318 1 102 1 30 1 90 2 60 4 50 1 
183 1 185 1 237 2 12 2 215 1 109 1 221 1 5 1 306 4 102 1 30 1 173 1 60 7 90 3 50 1 
211 2 185 4 237 2 215 2 151 1 130 2 5 3 221 2 306 12 305 2 192 2 30 3 102 5 31 2 280 1 173 1 60 23 61 1 12 9 109 2 289 1 159 2 112 4 201 1 203 1 205 1 318 2 90 11 50 2 
306 1 237 1 60 1 
215 1 60 1 90 1 
211 1 185 1 40 1 12 3 109 1 112 2 159 1 221 1 5 1 305 1 306 3 318 1 224 1 30 1 102 2 60 6 90 3 50 1 
183 1 211 1 185 1 237 1 215 1 123 1 53 1 150 1 221 2 5 2 306 6 305 1 30 2 102 1 370 1 60 12 311 1 12 2 109 2 112 2 159 1 318 1 90 6 50 2 20 1 
185 1 12 2 130 1 5 1 306 3 30 1 192 1 102 1 90 3 60 6 61 1 
211 1 185 1 12 2 159 1 112 2 201 1 151 1 130 1 205 1 306 2 305 1 318 1 102 1 192 1 31 1 90 1 60 3 
357 1 252 1 149 1 230 1 110 1 254 1 347 1 
62 1 252 1 149 1 74 1 110 1 291 1 66 1 254 1 347 1 357 1 230 1 117 1 
92 4 178 1 373 1 199 4 158 1 363 1 43 1 348 1 114 4 303 1 175 1 268 1 8 1 
92 2 373 1 95 1 199 2 158 1 217 1 348 1 114 2 45 1 317 1 232 1 378 1 296 1 8 2 
92 1 238 1 22 1 262 1 158 1 199 1 381 1 175 1 8 1 114 1 
92 2 373 1 122 1 158 1 199 2 239 1 268 1 8 1 348 1 113 1 114 2 
92 5 178 1 373 3 95 1 199 4 158 2 363 1 113 1 348 2 303 1 114 5 26 1 248 1 175 1 268 1 8 2 
92 5 178 1 373 3 95 1 212 1 199 4 158 2 363 1 113 1 348 2 303 1 114 5 26 1 175 1 268 1 8 2 
92 1 373 1 178 1 158 1 199 1 362 1 175 1 8 1 348 1 303 1 114 1 
92 1 373 1 270 1 252 2 149 2 199 1 158 1 336 1 125 1 348 1 347 1 114 1 357 1 141 1 317 1 194 1 175 1 8 1 
92 1 373 3 270 1 252 2 95 1 149 2 199 1 158 1 334 1 335 1 336 1 125 1 348 2 347 2 114 1 357 1 141 2 317 2 249 1 89 1 119 1 194 1 8 1 
92 2 270 1 95 1 149 2 347 2 348 2 249 1 194 1 8 1 373 3 252 2 158 1 199 2 334 1 336 1 335 1 43 1 337 1 114 2 357 1 141 2 317 2 89 1 119 1 
92 3 373 4 95 1 107 1 199 3 158 1 334 1 290 2 169 1 299 1 43 1 365 1 348 1 114 3 317 1 27 1 69 1 87 1 175 1 119 1 371 2 48 1 8 1 
92 3 373 4 95 1 297 1 199 3 158 1 334 1 290 2 169 1 299 1 43 1 365 1 348 1 114 3 317 1 27 1 69 1 175 1 119 1 371 2 48 1 8 1 
92 1 158 1 199 1 42 1 8 1 114 1 
92 7 373 3 236 1 122 1 199 6 158 2 42 1 356 1 113 1 348 2 114 7 26 1 181 1 248 1 45 1 367 1 317 1 175 2 268 1 296 1 8 3 
92 1 323 1 211 2 270 1 149 2 241 2 97 1 125 1 151 1 348 1 347 1 130 1 5 1 306 3 305 2 79 1 30 1 102 2 192 1 280 1 57 1 194 1 60 6 61 1 8 1 373 1 81 1 252 2 12 2 156 1 158 1 199 1 336 1 15 1 159 2 112 4 114 1 357 2 205 1 67 1 141 1 115 1 317 1 318 2 71 2 90 3 268 1 
92 1 341 1 146 1 297 1 124 1 169 2 299 1 365 1 98 2 346 1 126 2 272 1 27 1 175 1 371 3 285 2 373 2 199 1 313 1 14 1 290 3 114 1 257 1 69 1 234 1 46 2 321 1 48 1 
92 2 373 2 324 1 199 2 158 1 299 1 42 1 356 1 348 1 114 2 317 1 268 1 8 2 
92 1 373 1 270 1 252 2 149 2 199 1 158 1 336 1 337 1 348 1 347 1 114 1 357 1 141 1 317 1 194 1 175 1 8 1 
92 1 373 1 95 1 199 1 158 1 356 1 348 1 114 1 181 1 45 1 317 1 296 1 8 2 
286 1 252 1 149 1 64 1 347 1 77 1 260 1 222 1 154 1 
286 1 240 1 16 1 
286 1 357 1 84 1 260 1 77 1 
286 1 106 1 36 1 240 1 124 1 335 1 290 2 16 1 365 1 357 1 84 2 77 2 260 2 249 1 69 1 89 1 371 2 48 1 145 1 
129 1 287 1 213 1 13 1 216 1 282 1 180 1 255 1 
177 1 138 1 287 4 197 1 213 4 13 2 82 1 216 2 180 1 129 1 172 1 316 1 59 2 282 3 
287 2 213 2 13 1 216 1 255 1 180 1 129 1 229 1 144 1 59 1 282 1 310 1 
177 1 287 3 213 3 197 2 186 1 13 1 216 1 255 1 180 1 129 1 172 2 282 1 
167 1 3 1 282 2 309 2 
129 1 287 1 213 1 180 1 255 1 351 1 
129 1 287 2 213 2 307 1 13 1 216 1 59 1 282 1 180 1 255 1 
274 1 
129 1 287 1 213 1 13 1 216 1 282 1 180 1 255 1 
13 1 216 1 362 1 282 1 
129 1 287 1 213 1 13 1 216 1 282 1 180 1 
213 1 2 1 284 1 
177 1 155 1 287 3 213 3 197 2 13 1 216 1 255 1 180 1 129 1 172 1 282 1 
129 1 287 2 213 2 143 1 13 1 216 1 59 1 282 1 180 1 
129 1 287 1 162 1 213 1 22 1 82 1 381 1 111 1 282 1 180 1 255 1 
129 1 287 1 213 1 216 1 282 1 180 1 255 1 
129 1 287 1 213 1 13 1 216 2 180 1 255 1 
287 2 213 2 216 1 255 1 180 2 54 1 129 2 68 1 282 1 121 1 
287 3 213 3 13 1 82 1 216 1 255 1 180 1 129 1 316 1 377 1 307 1 59 2 282 2 
196 1 287 2 213 2 22 1 13 1 216 1 301 1 111 1 255 1 180 1 129 1 262 1 381 2 59 1 282 1 
287 4 213 4 13 1 82 1 216 1 255 1 180 2 129 2 316 1 143 1 59 2 282 2 9 1 
129 1 287 3 197 1 213 3 307 1 13 1 216 1 59 1 282 1 180 1 255 1 
138 1 316 1 82 1 282 1 
216 1 282 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) (89,158) (89,158) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) (89,158) (89,158) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) (89,158) (89,158) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) (89,158) (89,158) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 134 (21,213,312,323) 104 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) 65 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 134 26 (244,335) 65 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 134 (21,213,312,323) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 169 (111,279) (111,279) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 134 26 347 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 134 26 68 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 134 26 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 1 289 2 247 1 46 1 8 2 169 1 228 1 81 3 89 1 34 1 183 2 158 1 127 1 333 1 26 1 113 3 134 1 174 1 99 1 244 1 
335 1 289 2 247 1 8 2 46 1 169 1 228 1 81 3 89 1 34 1 183 2 158 1 127 1 333 1 26 1 113 3 134 1 174 1 99 1 244 1 
335 1 289 2 247 1 8 2 46 1 169 1 228 1 81 3 89 1 34 1 183 2 158 1 127 1 333 1 26 1 113 3 134 1 174 1 99 1 244 1 
335 1 289 2 247 1 8 2 46 1 169 1 228 1 81 3 89 1 34 1 183 2 158 1 127 1 333 1 26 1 113 3 134 1 174 1 99 1 244 1 
183 1 289 1 60 1 213 1 333 1 113 2 169 1 104 1 81 2 134 1 106 1 34 1 
289 1 8 1 247 1 228 1 279 1 350 1 81 2 141 1 124 1 183 1 333 1 111 1 113 2 174 1 99 1 
183 2 289 2 8 1 333 1 26 1 113 2 169 1 81 2 134 1 34 1 244 1 
289 2 323 1 8 1 169 1 81 3 106 1 34 1 65 1 183 2 333 1 113 3 26 1 134 1 244 1 
289 2 323 1 8 1 169 1 81 3 106 1 34 1 65 1 183 2 333 1 113 3 26 1 134 1 244 1 
264 1 381 1 344 1 
129 2 344 1 243 1 
257 2 112 2 31 2 138 2 295 1 287 2 210 2 351 1 
191 2 364 1 167 2 316 1 368 1 48 2 295 1 196 1 73 1 233 1 234 1 53 2 340 1 24 1 301 1 210 2 274 1 212 1 176 1 348 1 257 2 155 1 31 2 138 2 308 2 351 1 83 1 156 1 182 1 221 1 40 1 112 3 14 1 287 3 114 1 116 1 224 1 
257 1 112 1 66 1 31 1 138 1 287 1 241 1 210 1 351 1 271 1 
166 1 252 1 315 1 2 1 31 1 272 1 271 1 379 1 109 1 112 1 381 1 287 1 117 1 344 1 
166 2 315 1 257 1 2 1 31 1 138 1 272 1 271 1 379 2 109 1 112 1 381 1 287 1 210 1 344 1 
157 1 166 1 379 1 47 1 222 1 
166 2 379 2 102 1 47 1 381 1 222 1 3 1 344 1 
166 1 379 1 47 1 
166 1 257 1 19 1 31 1 138 1 351 1 271 1 379 1 66 1 112 1 287 1 222 1 241 1 210 1 
344 1 
166 2 379 2 47 1 178 1 381 1 222 1 3 1 344 1 
166 5 47 2 375 1 376 1 370 2 3 1 123 1 379 5 126 2 11 1 38 2 13 1 357 1 95 1 381 1 222 2 153 1 344 1 211 1 
264 1 295 1 
257 1 31 2 138 1 295 2 140 1 112 2 287 2 239 1 210 1 
236 1 229 1 181 1 
191 1 364 1 316 1 295 1 308 1 83 1 233 1 156 1 234 1 53 1 221 1 339 1 24 1 112 1 287 1 274 1 
191 1 364 1 257 1 316 1 31 1 229 1 308 1 150 1 233 1 83 1 156 1 234 1 319 1 221 1 53 1 24 1 112 2 287 2 210 1 274 1 
257 3 112 3 31 3 138 1 295 1 287 3 150 1 210 3 
257 1 112 1 31 1 287 1 241 1 210 1 271 1 
257 1 112 1 31 1 138 1 287 1 239 1 140 1 210 1 271 1 
166 1 191 1 364 1 167 2 315 1 316 1 2 1 48 1 295 1 196 1 150 1 233 1 272 1 271 1 234 1 319 1 94 1 53 1 340 1 24 1 301 1 239 1 210 3 274 1 176 1 348 1 257 3 155 1 31 3 138 2 139 1 308 1 83 1 351 1 156 1 182 1 379 1 221 1 109 1 40 1 112 4 14 1 287 4 224 1 
298 1 252 1 257 1 112 2 31 2 295 1 287 2 150 1 210 1 
166 1 315 1 257 3 2 1 31 3 138 1 278 1 139 1 150 2 271 1 272 1 379 1 319 1 109 1 112 3 239 1 287 3 210 3 344 1 
257 2 31 2 138 1 229 1 150 1 181 1 112 2 239 1 287 2 210 2 
191 1 364 1 316 1 295 1 308 1 83 1 233 1 156 1 234 1 53 1 221 1 24 1 112 1 287 1 274 1 
191 1 364 1 295 1 308 1 296 1 233 1 156 1 234 1 53 1 221 1 373 1 24 1 112 1 287 1 274 1 
167 2 368 2 48 4 229 2 236 2 172 1 340 1 301 1 209 1 348 1 137 1 155 1 62 1 216 1 181 2 35 1 182 1 352 1 40 1 161 1 14 2 43 1 67 1 288 1 
257 1 4 1 112 1 31 1 287 1 210 1 271 1 272 1 
252 1 257 4 31 5 138 1 295 1 150 2 298 1 319 1 311 1 262 1 112 5 287 5 239 1 210 4 
4 1 257 2 112 2 31 2 287 2 241 1 210 2 271 1 
194 1 168 1 
194 1 168 1 
177 1 207 1 
177 1 207 1 
177 1 207 1 
194 1 168 1 187 1 
194 1 168 1 360 1 
171 1 177 1 194 2 265 1 168 2 207 1 
194 1 168 1 187 1 
194 1 168 1 187 1 
345 1 194 1 168 1 
345 1 194 1 168 1 
345 1 194 1 168 1 
166 2 322 3 86 1 305 1 194 2 265 1 168 2 148 2 231 1 328 1 219 1 379 2 353 2 331 1 108 2 250 2 163 1 344 1 242 2 
166 1 194 1 1 1 168 1 148 1 268 1 295 1 336 1 76 1 210 2 242 1 136 1 322 1 257 2 31 2 248 1 105 1 379 1 353 1 108 1 112 2 287 2 360 1 163 1 
247 1 46 1 228 1 
247 1 228 1 350 1 
189 1 255 1 46 2 228 3 350 1 122 1 
189 1 255 1 46 1 342 1 228 2 350 1 
189 1 46 1 255 2 228 2 350 1 
166 5 47 1 268 1 370 1 336 1 3 1 123 2 126 1 129 3 205 2 56 2 153 3 135 1 243 1 344 2 6 1 137 1 62 1 326 1 248 1 180 2 33 1 379 5 329 1 11 1 38 1 380 1 381 1 161 1 115 1 222 4 67 1 
361 1 166 9 47 6 370 2 336 4 3 1 123 6 126 2 129 9 205 6 56 6 153 8 243 3 344 5 6 2 154 1 137 3 375 1 62 3 259 1 9 1 33 1 157 5 379 9 329 2 11 1 36 5 38 2 159 1 381 1 161 3 115 3 222 7 67 3 225 1 
166 3 370 1 336 1 123 2 126 1 129 4 205 2 56 2 153 3 344 3 243 2 6 1 137 1 375 1 326 1 62 1 180 1 379 3 329 1 38 1 380 1 381 1 161 1 222 2 115 1 67 1 
166 4 370 1 336 2 123 4 126 1 129 7 205 4 56 4 153 5 344 4 243 3 6 1 154 1 137 2 375 1 326 1 62 2 259 1 180 2 379 4 329 1 38 1 380 1 381 1 161 2 222 3 115 2 67 2 225 1 
264 1 364 1 179 1 
364 1 79 1 
293 1 
234 1 364 1 
234 1 364 3 42 1 179 2 280 1 233 1 
234 1 364 1 233 1 
364 1 22 1 
253 1 62 1 258 1 368 4 214 1 215 1 48 7 143 1 261 1 354 1 52 2 285 1 14 3 161 1 209 2 288 3 145 1 
253 1 62 1 258 1 368 4 214 1 215 1 48 7 143 1 261 1 354 1 52 2 285 1 14 3 161 1 209 2 288 3 145 1 
253 1 62 1 258 1 368 4 214 1 215 1 48 7 143 1 261 1 354 1 52 2 285 1 55 1 14 3 161 1 209 2 288 3 145 1 
167 2 253 1 226 1 368 16 48 31 269 3 270 1 52 3 340 1 25 1 299 1 152 1 301 1 209 5 348 1 137 3 214 1 80 1 62 4 258 5 215 2 143 1 182 1 261 1 354 2 285 2 356 4 332 1 14 15 161 4 115 3 288 10 67 3 145 2 
167 4 253 1 266 1 368 5 48 9 52 2 201 1 340 2 299 1 301 2 209 3 348 2 62 1 258 1 215 1 143 1 182 2 261 1 354 1 285 1 161 1 14 4 288 4 145 1 
191 1 190 1 289 1 46 1 228 2 122 1 125 1 53 1 274 1 30 1 100 1 246 1 247 1 8 1 308 1 279 1 350 1 281 1 81 2 106 1 183 1 221 1 333 1 111 1 113 2 160 1 41 1 359 1 286 1 
191 1 190 1 289 1 46 1 228 2 72 1 122 1 125 1 151 1 53 1 54 1 274 1 30 1 100 1 246 1 247 1 8 1 308 1 279 1 350 1 281 1 81 3 106 2 183 1 221 1 111 1 113 3 359 1 286 1 
191 1 190 1 46 1 228 2 122 1 125 1 151 1 53 1 54 1 274 1 30 1 100 1 8 1 247 1 308 1 279 1 350 1 281 1 81 2 106 2 221 1 111 1 113 2 286 1 
191 1 289 1 363 1 364 1 291 1 227 1 72 1 125 2 234 1 53 1 27 1 131 1 274 1 30 2 8 2 308 1 81 1 281 2 156 1 183 1 221 1 113 1 119 1 
191 1 190 1 289 1 46 1 228 2 122 1 125 1 151 1 53 1 274 1 30 1 100 1 246 1 247 1 8 1 308 1 350 1 281 1 81 1 183 1 221 1 333 1 113 1 41 1 359 1 286 1 
341 1 
191 2 44 4 252 1 47 6 2 1 3 3 199 2 338 1 51 1 53 2 206 1 96 1 153 2 344 2 6 1 61 1 349 1 307 2 308 2 156 2 11 1 221 1 109 1 112 1 162 2 118 2 117 1 223 1 166 5 363 1 364 1 315 1 370 1 123 2 272 1 271 1 234 1 126 1 235 2 129 2 27 1 237 2 75 1 243 2 274 1 245 2 31 1 282 1 82 1 32 1 379 5 38 1 381 1 287 1 251 1 
166 3 44 2 315 1 252 1 47 2 2 1 3 1 272 1 271 1 51 1 338 1 75 1 349 1 31 1 178 1 307 1 379 3 109 1 112 1 287 1 251 1 117 1 
166 3 44 3 315 1 252 1 47 1 2 1 3 1 272 1 271 1 51 1 338 1 199 1 75 1 344 1 349 1 31 1 178 1 379 3 109 1 112 1 381 1 287 1 251 1 117 1 
166 3 44 3 315 1 252 1 47 2 2 1 3 1 272 1 271 1 51 1 338 1 199 1 75 1 344 1 349 1 178 1 31 1 307 1 379 3 109 1 112 1 381 1 287 1 162 1 251 1 117 1 
44 6 252 1 254 1 47 7 2 1 3 3 338 1 51 1 199 4 203 1 153 1 344 5 7 1 61 1 349 1 307 4 11 1 109 1 112 1 162 4 117 1 118 2 166 5 315 1 370 1 123 1 271 1 272 1 126 1 235 2 75 1 237 2 243 2 245 2 78 1 178 1 31 1 32 1 379 5 38 1 381 5 287 1 251 1 188 1 
44 4 252 1 47 4 2 1 3 2 338 1 51 1 199 2 153 1 344 2 61 1 349 1 307 2 11 1 109 1 112 1 162 2 117 1 118 2 166 4 315 1 370 1 123 1 271 1 272 1 126 1 235 2 129 2 75 1 237 2 243 2 245 2 31 1 32 1 282 1 379 4 38 1 381 1 287 1 251 1 
166 4 44 4 315 1 252 1 47 4 2 1 370 1 3 2 123 1 272 1 271 1 126 1 235 2 199 2 51 1 338 1 203 1 237 2 75 1 153 1 344 1 243 2 245 2 7 1 61 1 349 1 31 1 307 2 32 1 379 4 11 1 38 1 109 1 112 1 381 1 287 1 162 2 251 1 118 2 117 1 188 1 
166 4 44 4 315 1 252 1 47 4 2 1 370 1 3 2 123 1 272 1 271 1 126 1 235 2 199 2 51 1 338 1 203 1 237 2 75 1 153 1 344 1 243 2 245 2 7 1 61 1 349 1 31 1 307 2 32 1 379 4 11 1 38 1 109 1 112 1 381 1 287 1 162 2 251 1 118 2 117 1 188 1 
120 2 166 4 44 4 315 1 252 1 47 4 2 1 370 1 3 2 123 1 272 1 271 1 126 1 235 2 199 2 129 2 51 1 338 1 203 1 75 1 153 1 240 2 344 1 29 1 61 1 349 1 31 1 307 2 142 1 379 4 220 1 11 1 38 1 109 1 112 1 381 1 287 1 162 2 251 1 118 2 117 1 
166 4 44 5 315 1 252 1 47 5 2 1 370 1 3 2 123 1 272 1 271 1 126 1 235 2 51 1 338 1 199 3 203 1 237 2 75 1 153 1 344 1 243 2 245 2 78 1 7 1 61 1 349 1 31 1 307 3 32 1 379 4 11 1 38 1 109 1 112 1 381 1 287 1 162 3 251 1 118 2 117 1 188 1 
166 4 44 5 315 1 252 1 47 5 2 1 370 1 3 2 123 1 272 1 271 1 126 1 235 2 51 1 338 1 199 3 203 1 237 2 75 1 153 1 344 1 243 2 245 2 78 1 7 1 61 1 349 1 31 1 307 3 32 1 379 4 11 1 38 1 109 1 112 1 381 1 287 1 162 3 251 1 118 2 117 1 188 1 
44 4 252 1 47 4 2 1 3 2 338 1 51 1 199 2 153 1 344 1 61 1 349 1 307 2 220 1 11 1 109 1 112 1 162 2 117 1 118 2 166 4 120 2 315 1 370 1 123 1 271 1 272 1 126 1 235 2 129 2 75 1 240 2 31 1 282 1 379 4 38 1 381 1 287 1 251 1 
264 1 167 2 253 1 368 3 48 6 229 1 295 2 236 1 52 1 340 1 301 1 209 2 348 1 155 1 62 1 181 1 143 1 182 1 261 1 352 1 354 1 285 1 40 1 161 1 14 3 288 2 
167 4 368 8 226 1 48 14 295 1 229 11 269 3 236 11 202 1 25 1 340 2 301 2 209 1 176 1 346 1 348 2 137 2 325 1 155 2 258 1 62 2 181 4 107 1 182 2 356 3 40 1 358 1 14 6 161 1 115 2 288 2 67 1 116 1 
191 1 364 1 167 2 366 1 316 1 368 1 48 2 295 1 150 1 233 1 234 1 319 1 53 1 339 1 24 1 340 1 301 1 210 1 274 1 176 1 257 1 348 1 155 1 31 1 308 1 83 1 181 1 156 1 107 1 182 1 37 1 221 1 40 1 112 2 287 2 185 1 14 1 116 1 
191 3 253 1 48 20 295 2 196 2 150 1 151 1 52 1 53 3 340 3 301 3 209 4 98 2 210 1 348 3 257 1 155 3 62 3 258 4 308 3 217 1 309 2 156 1 107 1 261 1 354 1 221 2 110 1 112 3 263 2 161 3 14 10 115 2 67 2 116 1 364 2 167 6 316 2 368 10 229 7 233 2 234 2 319 1 236 7 24 2 274 2 176 1 275 2 137 2 31 1 83 2 181 7 378 1 143 1 182 3 285 1 40 3 287 3 288 8 
191 8 364 3 363 1 167 4 20 1 368 1 48 2 49 1 150 1 73 2 234 2 151 1 53 7 340 2 27 1 301 2 5 1 210 1 274 2 321 1 58 1 77 1 176 1 257 1 348 2 155 2 31 1 308 8 156 2 182 2 352 1 221 2 40 2 112 1 160 1 287 1 14 1 144 1 116 1 
167 2 368 1 48 3 229 1 236 1 128 1 340 1 301 1 209 1 239 1 210 1 348 1 257 1 137 1 155 1 31 1 62 1 138 1 181 1 107 1 182 1 40 1 112 1 287 1 161 1 14 2 115 1 288 1 67 1 
167 2 348 1 137 1 155 1 258 1 62 1 368 2 48 2 229 1 216 1 181 1 182 1 352 1 236 1 40 1 340 1 301 1 288 1 
167 2 348 1 155 1 48 2 229 1 181 1 182 1 35 1 352 1 236 1 40 1 340 1 301 1 209 1 161 1 14 2 288 1 67 1 
167 2 368 2 48 4 229 2 236 2 340 1 301 1 209 1 137 1 348 1 155 1 62 1 258 1 181 2 182 1 352 1 40 1 161 1 14 2 115 1 288 2 67 1 
77 1 167 2 348 1 137 1 155 1 258 1 62 1 368 2 48 2 229 1 216 1 181 1 182 1 236 1 40 1 340 1 301 1 288 1 
77 1 167 2 348 1 155 1 48 2 229 1 181 1 182 1 35 1 236 1 40 1 340 1 301 1 209 1 161 1 14 2 288 1 67 1 
167 2 368 2 48 4 229 2 236 2 340 1 301 1 209 1 77 1 137 1 348 1 155 1 62 1 258 1 181 2 182 1 40 1 161 1 14 2 115 1 288 2 67 1 
167 2 348 1 137 1 155 1 258 1 62 1 368 2 48 4 229 2 181 2 182 1 236 2 40 1 340 1 301 1 209 1 14 2 161 1 115 1 67 1 288 2 
191 1 364 1 167 2 316 1 368 1 48 2 295 1 196 1 233 1 234 1 53 1 24 1 340 1 301 1 274 1 176 1 348 1 155 1 308 1 83 1 156 1 182 1 221 1 40 1 112 1 287 1 14 1 116 1 
191 1 364 1 167 2 18 1 368 1 48 2 295 1 296 1 233 1 234 1 53 1 373 1 24 1 340 1 301 1 274 1 176 1 348 1 155 1 308 1 156 1 182 1 221 1 40 1 112 1 287 1 14 1 116 1 
167 2 368 2 48 4 229 2 236 2 340 1 301 1 209 1 137 1 348 1 155 1 62 1 258 1 181 2 107 1 182 1 40 1 161 1 14 2 115 1 288 2 67 1 
191 1 364 1 167 2 316 1 368 2 48 4 229 2 196 1 233 1 234 1 236 2 53 1 24 1 340 1 301 1 209 1 274 1 137 1 348 1 155 1 258 1 62 1 308 1 181 2 83 1 182 1 221 1 40 1 112 1 263 1 160 1 14 2 161 1 287 1 115 1 67 1 288 2 
167 2 368 2 48 3 229 1 236 1 340 1 301 1 239 1 210 1 348 1 257 1 137 1 155 1 258 1 31 1 62 1 138 1 218 1 181 1 107 1 182 1 40 1 112 1 14 1 161 1 287 1 115 1 67 1 288 1 
87 1 167 4 294 2 266 1 88 2 368 9 226 1 48 19 269 1 25 1 23 1 340 2 301 2 209 3 304 1 348 2 137 3 62 3 258 3 84 1 182 2 12 1 284 1 356 2 313 1 14 10 161 3 115 3 288 6 67 3 
87 1 0 1 167 6 294 4 266 1 88 1 367 1 368 14 48 26 318 1 269 2 337 1 204 1 299 2 23 2 340 3 25 2 301 3 209 2 304 1 348 3 137 3 258 2 62 3 84 1 182 3 39 1 356 2 313 2 161 2 14 12 115 3 288 4 67 2 
87 1 0 1 167 6 253 1 294 4 266 1 88 1 367 1 368 20 226 1 318 1 48 41 269 3 337 1 93 1 52 1 204 1 299 1 25 3 23 1 340 3 301 3 209 4 304 1 348 3 137 4 62 5 258 4 143 1 84 1 182 3 261 1 284 1 354 1 285 1 39 1 356 4 313 2 14 21 161 5 115 4 288 8 67 4 
87 1 0 1 167 8 253 1 294 4 266 1 88 1 367 1 368 20 226 1 318 1 48 38 269 3 337 1 93 1 52 1 204 1 299 2 25 3 23 1 340 4 301 4 209 4 304 1 348 4 137 4 62 5 258 3 143 1 84 1 182 4 261 1 284 1 354 1 285 1 39 1 356 4 313 2 14 18 161 4 115 4 288 7 67 3 
87 1 0 1 167 4 253 1 294 4 266 1 88 1 367 1 368 27 226 2 318 1 48 52 269 4 337 1 52 1 299 1 204 1 25 2 23 1 340 2 301 2 209 7 304 1 346 2 348 2 137 7 62 8 258 7 143 1 84 1 182 2 261 1 354 1 285 1 39 1 356 4 313 1 14 25 161 8 115 7 288 14 67 7 
86 1 353 1 194 1 108 1 265 1 168 1 148 1 219 1 334 1 242 1 
360 1 76 1 
353 1 194 1 108 1 168 1 208 1 148 1 130 1 197 1 242 1 
166 1 322 2 86 1 305 1 194 1 265 1 168 1 148 1 231 1 328 1 219 1 379 1 353 1 108 1 250 1 163 1 344 1 242 1 
166 1 322 2 86 1 305 1 194 1 265 1 168 1 148 1 231 1 328 1 219 1 379 1 353 1 108 1 250 1 163 1 344 1 242 1 
166 1 322 2 86 1 305 1 194 1 265 1 168 1 148 1 231 1 328 1 219 1 379 1 353 1 108 1 250 1 163 1 344 1 242 1 
171 1 372 1 187 1 
171 1 372 1 187 1 
345 1 184 1 
171 1 345 1 184 1 
136 1 105 1 
166 1 194 1 1 1 168 1 148 1 268 1 295 1 336 1 76 1 210 2 242 1 136 1 322 1 257 2 276 1 31 2 248 1 328 1 105 1 379 1 353 1 108 1 112 2 250 1 287 2 222 1 360 1 
372 1 187 1 
171 1 345 1 184 1 
191 2 364 1 45 1 167 2 20 1 368 1 48 2 73 2 234 1 53 2 340 1 28 1 301 1 173 1 274 1 321 1 176 1 348 1 155 1 31 2 308 2 107 1 182 1 283 1 221 1 40 1 112 2 287 2 14 1 116 1 164 1 
191 2 190 1 100 1 247 1 46 1 195 1 228 2 308 2 350 1 281 1 260 1 122 1 151 1 221 1 53 2 300 1 160 1 359 1 274 1 
191 1 190 1 100 1 247 1 46 1 195 1 277 1 228 2 308 1 350 1 281 1 122 1 151 1 53 1 221 1 359 1 274 1 
191 1 364 1 365 1 363 1 291 1 308 1 281 1 260 1 156 1 234 1 221 1 53 1 27 1 274 1 
191 1 190 1 100 1 247 1 46 1 195 1 228 2 308 1 350 1 281 1 260 1 122 1 151 1 221 1 53 1 300 1 359 1 274 1 
230 1 
264 1 95 1 376 1 381 1 153 1 123 1 344 1 
166 1 47 1 370 1 3 1 123 1 126 1 129 1 237 1 153 1 243 1 344 2 245 1 32 1 379 1 11 1 38 1 381 1 
191 3 290 2 47 5 3 3 200 1 53 3 205 6 95 1 96 1 97 2 57 2 56 6 153 9 344 8 6 2 101 2 62 2 308 3 156 1 10 1 11 4 221 4 109 2 160 1 161 2 115 2 67 2 314 2 165 1 166 5 364 10 267 2 370 4 233 3 123 8 234 3 126 4 22 2 74 2 129 12 320 1 273 2 175 1 274 3 243 6 275 2 137 2 376 1 79 3 179 2 379 5 38 4 42 1 381 2 
166 1 0 1 47 1 370 2 318 1 269 1 337 1 3 1 123 5 126 2 74 2 129 6 204 1 205 5 25 1 96 1 302 1 273 1 56 5 153 8 243 3 344 5 6 1 137 2 62 2 379 1 11 2 38 2 39 1 356 1 381 2 161 2 186 1 115 2 67 2 
166 1 253 1 19 1 370 1 123 2 271 1 126 1 74 2 273 1 153 2 241 1 210 1 7 1 257 1 62 2 31 1 138 1 377 1 351 1 379 1 11 1 354 1 38 1 285 1 112 1 66 1 287 1 161 1 
376 1 370 1 123 1 126 1 11 1 38 1 95 1 381 1 153 1 344 1 
275 1 137 2 62 2 123 5 74 2 129 10 205 5 161 2 273 1 115 2 56 5 67 2 153 5 243 5 344 5 
166 1 379 1 47 1 381 1 3 1 344 1 
165 2 191 4 166 3 364 1 363 1 47 4 370 2 71 1 3 2 123 2 234 1 126 2 53 4 206 1 96 2 27 1 133 1 153 2 175 1 274 1 6 2 375 1 308 4 156 2 379 3 11 1 38 2 221 1 223 1 
191 1 364 1 167 2 316 1 48 1 295 1 196 1 233 1 234 1 53 1 340 1 24 1 301 1 210 2 274 1 176 1 348 1 257 2 155 1 31 2 138 2 308 1 351 1 83 1 156 1 182 1 221 1 40 1 112 3 14 1 287 3 224 1 
6 1 370 1 123 2 126 1 11 1 52 1 129 4 38 1 205 2 96 1 381 2 56 2 153 1 243 2 344 4 
108 1 92 1 242 1 
136 1 108 1 232 1 219 1 242 1 
108 1 92 1 242 1 
108 1 92 1 242 1 
108 1 327 1 242 1 
108 1 327 1 242 1 
108 1 327 1 242 1 
108 1 242 1 
194 1 168 1 
167 4 253 1 348 2 62 1 368 4 258 1 48 8 143 1 182 2 261 1 52 1 354 1 285 1 340 2 299 1 301 2 161 1 14 4 209 2 288 3 
264 1 253 1 62 1 368 3 48 6 143 1 261 1 52 1 354 1 285 1 14 3 209 2 161 1 288 2 
17 1 167 2 348 1 137 1 62 1 368 2 258 1 48 4 182 1 340 1 301 1 209 1 14 2 161 1 115 1 67 1 288 2 
137 1 368 3 226 1 62 1 258 1 48 7 269 1 356 2 25 1 209 1 161 1 14 4 115 1 67 1 288 2 
167 4 253 1 226 1 368 11 48 23 269 2 52 1 299 2 340 2 301 2 209 5 374 1 346 1 137 2 348 2 258 4 62 3 143 1 182 2 261 1 354 2 285 2 356 2 358 1 14 12 161 3 115 2 288 9 67 2 
356 1 48 1 14 1 
368 1 48 1 269 1 
17 1 275 1 167 2 348 1 137 1 62 1 368 3 258 1 48 6 182 1 340 1 301 1 14 3 161 1 209 2 115 1 288 3 67 1 
0 1 167 2 266 1 368 6 48 12 318 1 269 1 337 1 25 1 340 1 204 1 301 1 209 1 348 1 137 2 258 1 62 2 182 1 356 1 39 1 14 6 161 2 115 2 67 2 288 2 
253 1 62 1 368 3 258 1 48 6 354 1 285 1 161 1 14 3 209 1 288 2 
374 1 167 2 348 1 368 1 258 1 48 3 143 1 182 1 261 1 354 1 285 1 299 1 340 1 301 1 209 1 14 2 288 2 
167 2 253 1 348 1 266 1 258 2 368 5 62 2 48 10 377 1 182 1 354 2 285 2 340 1 301 1 209 3 14 5 161 2 288 5 
167 2 348 1 137 1 266 1 62 1 368 2 258 1 48 2 182 1 340 1 301 1 288 1 
167 2 348 1 137 1 266 1 62 1 368 2 258 1 48 4 182 1 340 1 301 1 209 1 14 2 161 1 115 1 67 1 288 2 
374 1 167 6 348 3 266 1 258 1 368 1 48 3 182 3 284 1 354 1 285 1 299 1 340 3 301 3 14 2 209 1 288 2 
17 1 167 10 253 2 266 1 368 16 226 1 48 34 269 3 270 1 52 1 299 2 25 1 340 5 301 5 209 7 374 1 348 5 137 3 80 1 62 5 258 5 143 1 182 5 261 1 284 1 354 3 285 3 356 4 332 1 14 18 161 5 115 3 288 12 67 3 
0 1 167 2 253 1 266 1 368 4 48 8 269 1 52 1 25 1 340 1 301 1 209 2 348 1 62 1 143 1 182 1 261 1 354 1 356 1 285 1 161 1 14 4 288 2 
17 1 0 1 167 4 253 1 266 1 368 6 226 1 48 11 269 1 52 1 25 1 340 2 301 2 209 2 348 2 137 1 62 2 258 1 143 1 182 2 261 1 354 1 285 1 356 2 161 1 14 5 115 1 288 3 
17 1 0 1 167 6 253 1 266 1 368 9 48 19 318 1 269 1 337 1 52 1 204 1 25 1 340 3 299 1 301 3 209 3 348 3 137 2 258 1 62 3 143 1 182 3 261 1 354 1 285 1 356 1 39 1 14 10 161 3 115 2 67 2 288 4 
17 1 0 1 167 6 253 1 266 1 368 10 48 17 318 1 269 1 337 1 52 1 299 1 25 1 340 3 204 1 301 3 209 3 348 3 137 2 258 2 62 3 143 1 182 3 261 1 354 1 285 1 356 1 39 1 14 7 161 2 115 2 67 1 288 5 
0 1 167 2 253 1 266 1 368 4 48 8 269 1 52 1 25 1 340 1 301 1 209 2 348 1 62 1 143 1 182 1 261 1 354 1 356 1 285 1 161 1 14 4 288 2 
0 1 167 2 266 1 368 6 48 12 318 1 269 1 337 1 25 1 340 1 204 1 301 1 209 1 348 1 137 2 258 1 62 2 182 1 356 1 39 1 14 6 161 2 115 2 67 2 288 2 
17 1 0 1 167 8 253 1 266 1 368 10 48 18 318 1 269 1 337 1 52 1 204 1 25 1 340 4 299 2 301 4 209 3 348 4 137 2 258 2 62 3 143 1 182 4 261 1 354 1 285 1 39 1 356 1 14 8 161 2 115 2 67 1 288 5 
0 1 167 8 266 1 368 9 48 16 318 1 269 1 337 1 204 1 25 1 340 4 299 2 301 4 209 3 348 4 137 3 258 3 62 3 182 4 284 1 39 1 356 1 14 7 161 2 115 3 67 2 288 6 
253 1 258 3 62 1 368 3 48 7 143 1 261 2 354 3 285 3 14 4 161 1 209 3 288 6 
0 1 167 8 253 1 266 1 368 10 48 18 318 1 269 1 337 1 52 1 204 1 25 1 340 4 299 2 301 4 209 3 348 4 137 2 258 1 62 3 143 1 182 4 261 1 284 1 354 1 285 1 39 1 356 1 14 8 161 2 115 2 67 1 288 4 
298 1 252 1 69 1 112 1 31 1 295 1 287 1 
252 1 69 1 31 1 295 1 103 1 70 1 371 1 310 1 198 1 298 1 112 1 287 1 
234 1 191 1 264 1 364 1 363 1 221 1 53 1 27 1 308 1 274 1 156 1 
191 1 364 1 257 1 316 1 31 1 295 1 308 1 150 1 233 1 156 1 234 1 221 1 53 1 24 1 112 2 287 2 210 1 274 1 
191 1 165 1 364 3 316 1 2 1 295 1 150 1 233 2 272 1 271 1 234 2 22 1 53 1 24 1 210 1 274 1 101 1 257 2 31 2 308 1 221 1 112 2 287 2 
191 2 165 1 364 3 2 1 295 1 150 1 233 2 272 1 271 1 234 2 22 1 53 2 373 1 24 1 210 1 274 1 324 1 101 1 257 2 31 2 308 2 221 1 112 2 287 2 
166 2 165 1 191 3 364 4 324 1 101 1 47 1 79 1 179 1 308 3 63 1 233 1 156 1 234 1 379 2 22 1 330 1 221 1 53 3 109 1 381 1 344 1 274 1 
166 2 165 1 191 3 290 1 364 4 324 1 101 1 47 1 79 1 179 1 308 3 233 1 156 1 234 1 379 2 22 1 221 1 53 3 109 1 381 1 344 1 274 1 
191 1 221 1 53 1 308 1 144 1 274 1 
58 1 191 7 364 3 20 1 317 1 308 7 73 1 49 1 233 1 156 2 234 2 151 1 53 6 221 3 160 1 42 1 343 1 132 1 144 1 5 1 274 2 
191 1 253 1 48 6 295 2 196 1 150 1 52 1 53 1 340 2 301 2 209 2 210 1 348 2 257 1 155 2 62 1 308 1 309 1 107 1 261 1 354 1 221 1 112 2 263 1 160 1 161 1 14 3 364 1 167 4 316 1 368 3 229 1 233 1 234 1 236 1 24 1 173 1 274 1 31 1 181 1 83 1 143 1 182 2 285 1 40 2 287 2 288 2 
191 1 166 3 290 1 364 2 47 2 267 1 370 2 3 1 123 1 126 2 53 1 95 1 97 1 57 1 153 1 175 1 344 1 376 1 79 1 179 1 308 1 156 1 379 3 11 2 38 2 109 1 381 1 222 1 
191 2 364 2 179 1 308 2 233 1 234 1 200 1 53 2 221 2 160 1 42 1 144 1 274 1 
191 4 192 1 363 1 364 1 324 1 308 4 156 1 234 1 221 1 53 4 160 1 27 1 274 1 
165 1 191 2 364 1 193 1 317 1 308 2 297 1 233 1 378 1 234 1 53 2 221 2 343 1 274 1 
191 1 100 1 221 1 53 1 247 1 228 1 308 1 350 1 274 1 156 1 
191 2 364 1 20 1 308 2 234 1 151 1 53 2 221 1 160 1 28 1 274 1 
165 1 191 5 58 1 192 1 363 1 364 3 20 1 308 5 156 1 234 2 53 4 221 2 27 1 160 1 5 1 274 2 
165 1 191 5 192 1 363 1 364 3 20 1 308 5 170 1 156 1 234 2 53 4 221 2 27 1 160 1 5 1 274 2 
191 1 364 1 257 1 31 1 295 1 308 1 150 1 233 1 156 1 234 1 221 1 53 1 373 1 24 1 112 2 287 2 210 1 274 1 
165 1 191 1 364 1 317 1 308 1 233 1 234 1 53 1 221 2 42 1 343 1 132 1 274 1 
59 1 283 1 45 1 112 1 31 1 287 1 149 1 90 1 164 1 
59 1 91 1 16 1 
59 1 355 1 295 1 149 1 90 1 
166 2 59 1 315 1 2 1 295 1 139 1 149 2 90 2 91 1 271 1 272 1 379 2 355 2 109 1 381 1 85 1 222 1 16 1 344 1 
264 1 111 1 279 1 
183 1 289 1 111 1 113 1 279 1 81 1 
125 1 8 1 113 1 
289 1 256 1 292 1 279 1 81 3 183 1 50 1 333 1 113 3 111 1 174 2 
183 1 289 1 60 1 111 1 113 2 279 1 81 2 106 1 
183 1 289 1 213 1 333 1 113 1 169 1 81 1 134 1 34 1 
183 1 289 1 333 1 111 1 113 1 81 1 
183 1 289 1 333 1 111 1 113 1 169 1 279 1 81 1 
289 2 306 1 81 2 64 1 183 2 333 1 111 1 113 2 238 1 
183 1 289 1 347 1 333 1 26 1 113 2 369 1 169 1 81 2 134 1 106 1 34 1 
289 1 46 1 247 1 121 1 228 2 279 1 350 1 81 2 106 1 122 1 183 1 333 1 111 1 113 2 
183 1 289 1 60 1 333 1 26 1 113 2 169 1 81 2 134 1 106 1 68 1 34 1 
183 1 289 1 333 1 111 1 113 1 279 1 81 1 
183 1 289 1 26 1 113 2 169 1 81 2 134 1 106 1 34 2 
289 1 323 1 21 1 279 1 81 2 106 1 183 1 333 1 312 1 111 1 113 2 
362 1 183 1 289 1 256 2 292 1 333 1 111 1 113 3 279 1 81 3 174 2 
249 1 169 2 303 1 146 2 
183 1 289 1 333 1 113 1 15 1 81 1 
183 1 289 1 333 1 111 1 113 2 369 1 279 1 81 2 106 1 
147 1 
183 1 289 1 333 1 111 1 113 1 279 1 81 1 
183 1 289 1 333 1 111 1 113 3 369 1 279 1 81 3 106 1 174 1 
113 1 26 1 169 1 81 1 106 1 134 1 
111 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (138,352) (138,352) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (141,178,368) (256,337,346) (256,337,346) (256,337,346) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (141,178,368) (256,337,346) (256,337,346) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (141,178,368) (256,337,346) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (141,178,368) (256,337,346) (256,337,346) (256,337,346) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (141,178,368) (141,178,368) (141,178,368) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (141,178,368) (141,178,368) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (141,178,368) (141,178,368) (141,178,368) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
130 1 131 2 269 3 158 1 135 2 206 1 323 5 108 9 366 2 145 1 211 9 212 2 236 1 354 1 369 2 356 6 88 1 147 1 39 4 89 1 42 2 15 1 172 1 173 1 125 1 67 1 128 1 363 2 
130 1 131 2 269 3 158 1 135 2 206 1 323 5 108 9 366 2 145 1 212 2 211 9 236 1 354 1 369 2 356 6 88 1 147 1 39 4 89 1 42 2 15 1 172 1 173 1 125 1 67 1 128 1 363 2 
130 1 131 2 269 4 158 1 135 2 206 1 323 6 108 10 366 2 145 1 212 2 211 10 236 1 354 1 369 2 356 7 88 1 147 1 39 5 89 1 42 2 15 1 172 1 173 1 125 1 67 1 128 1 363 2 
130 1 131 1 269 2 158 1 135 2 206 1 323 4 108 7 366 2 145 1 212 2 211 7 236 1 354 1 369 2 356 4 88 1 147 1 39 3 89 1 42 2 15 1 172 1 125 1 67 1 128 1 363 2 
366 1 130 1 211 4 212 1 236 1 131 2 269 1 369 1 356 3 39 2 42 1 172 1 173 1 323 3 67 1 128 1 363 1 108 4 
135 1 366 1 89 1 352 1 42 1 138 1 211 1 203 1 172 1 108 1 
135 1 366 2 130 1 42 2 15 1 211 3 236 1 269 1 172 1 356 1 323 2 39 1 108 3 
130 1 131 2 269 3 135 1 206 1 185 1 323 5 108 9 366 2 145 1 211 9 212 1 236 1 369 1 356 7 39 4 63 1 42 2 15 1 172 1 173 1 67 1 128 1 363 1 
130 1 131 2 269 3 135 1 206 1 185 1 323 5 108 9 366 2 145 1 211 9 212 1 236 1 369 1 356 7 39 4 63 1 42 2 15 1 172 1 173 1 67 1 128 1 363 1 
104 1 177 1 271 1 
177 1 113 2 232 1 
129 2 28 2 169 2 195 1 34 2 263 2 163 1 154 2 
308 1 129 2 292 2 336 1 195 1 340 1 95 1 25 1 73 1 296 1 76 1 28 3 139 1 249 1 184 1 105 1 163 1 56 1 280 1 208 1 82 1 59 1 34 2 61 1 169 2 149 2 150 1 359 1 20 1 263 3 333 1 154 2 265 2 47 2 156 1 307 1 291 2 
129 1 201 1 28 1 169 1 34 1 263 1 163 1 154 1 274 1 167 1 
129 1 326 1 177 1 338 1 196 1 87 1 179 1 104 1 201 1 28 1 263 1 207 1 127 1 32 1 
129 1 177 1 338 2 34 1 196 1 87 1 179 1 104 1 201 1 169 1 28 1 263 1 207 1 154 1 32 2 
358 1 338 1 370 1 152 1 32 1 
104 1 177 1 338 2 237 1 122 1 370 1 152 1 32 2 
338 1 370 1 32 1 
129 1 338 1 34 1 273 1 274 1 167 1 201 1 169 1 28 1 152 1 263 1 163 1 154 1 32 1 
177 1 
104 1 177 1 338 2 237 1 370 1 375 1 152 1 32 2 
233 1 177 1 338 5 339 2 237 1 370 2 244 1 50 1 12 2 51 1 104 1 41 1 171 1 320 1 205 1 152 2 321 2 325 1 32 5 
195 1 271 1 
129 2 195 2 96 1 34 1 189 1 28 2 169 1 263 2 154 1 
234 1 142 1 332 1 
195 1 95 1 25 1 76 1 28 1 139 1 149 1 150 1 350 1 249 1 20 1 263 1 333 1 56 1 265 1 47 1 
129 5 83 1 195 1 328 2 96 1 34 1 169 4 28 5 276 1 263 5 55 1 127 1 154 4 221 1 
129 2 201 1 28 2 169 2 263 2 154 2 357 1 167 1 
129 1 95 1 328 1 25 1 76 1 139 1 169 1 28 2 150 1 149 1 249 1 20 1 263 2 332 1 56 1 333 1 154 1 265 1 47 1 221 1 
129 3 28 3 169 3 195 1 34 1 328 1 263 3 154 3 
129 1 201 1 28 1 169 1 263 1 154 1 167 1 
129 1 201 1 28 1 169 1 34 1 96 1 189 1 263 1 154 1 
129 3 292 2 195 1 340 1 95 1 338 1 96 1 196 1 25 1 179 1 296 1 76 1 201 1 139 1 28 4 249 1 184 1 207 1 56 1 163 1 280 1 6 1 208 1 32 1 59 1 34 2 328 1 87 1 61 1 259 1 169 3 150 1 149 1 359 1 20 1 263 4 333 1 154 3 265 1 47 1 221 1 156 1 307 1 291 1 
129 2 83 1 28 2 169 1 195 1 328 1 263 2 127 1 154 1 
129 3 177 1 338 1 34 1 96 1 328 2 196 1 87 1 179 1 259 1 201 1 169 3 28 3 137 1 263 3 207 1 154 3 221 1 32 1 
129 2 328 1 96 1 34 1 169 2 28 2 142 1 263 2 332 1 154 2 
195 1 95 1 25 1 76 1 28 1 139 1 149 1 150 1 249 1 20 1 263 1 333 1 56 1 265 1 47 1 
195 1 223 1 9 1 95 1 25 1 28 1 149 1 150 1 249 1 20 1 263 1 333 1 56 1 265 1 47 1 
292 2 340 1 341 1 79 1 184 1 317 1 105 2 229 1 142 2 208 1 324 1 281 1 234 2 59 2 283 1 61 1 91 1 359 1 153 1 332 2 361 1 306 1 156 1 291 4 
129 1 201 1 28 1 169 1 179 1 263 1 154 1 357 1 
92 1 17 1 
92 1 17 1 
14 1 344 1 
14 1 344 1 
14 1 344 1 
92 1 17 1 98 1 
92 1 17 1 98 1 
92 1 17 1 10 1 
14 1 92 2 17 2 124 1 344 1 252 1 
92 1 17 1 98 1 
94 1 92 1 17 1 
94 1 92 1 17 1 
94 1 92 1 17 1 
129 2 266 1 195 1 338 1 71 1 180 1 74 1 28 2 78 1 299 1 351 1 32 1 109 1 58 1 371 1 10 1 36 1 169 2 92 1 17 1 45 1 263 2 154 2 48 1 
57 2 58 1 177 1 338 2 71 2 180 2 197 1 74 2 247 1 219 1 13 1 182 1 92 2 78 3 17 2 124 1 45 2 222 1 32 2 
212 1 369 1 363 1 
203 1 
203 1 
203 1 
203 1 
339 1 338 5 177 2 341 1 244 1 51 2 104 1 27 1 52 1 79 1 53 1 5 2 205 3 321 1 351 1 209 1 232 1 32 5 109 1 165 2 235 1 237 1 113 3 303 1 370 1 12 1 260 1 373 2 152 4 153 1 361 1 48 1 
23 5 338 9 177 5 339 2 341 3 244 1 51 6 104 1 27 2 79 3 53 3 3 1 320 1 5 6 205 8 321 2 351 4 232 3 32 9 165 6 235 2 110 1 237 1 113 9 303 1 370 6 12 2 358 5 220 1 151 1 152 7 289 1 153 3 361 3 175 1 
177 3 339 1 338 3 341 1 51 2 104 1 27 1 52 1 79 1 53 1 320 1 205 3 5 2 321 1 351 1 232 2 32 3 165 2 235 1 113 4 12 1 260 1 373 1 152 2 153 1 361 1 
177 4 339 1 338 4 341 2 51 4 104 1 27 1 52 1 79 2 53 2 3 1 320 1 5 4 205 5 321 1 351 2 232 3 32 4 165 4 235 1 110 1 113 7 12 1 260 1 373 2 151 1 152 3 153 2 361 2 
241 1 95 1 271 1 
95 1 374 1 
194 1 
95 1 249 1 25 1 
95 1 174 1 
95 1 249 1 
241 2 119 1 327 1 95 3 249 1 25 1 
59 3 242 1 284 1 134 1 347 2 26 1 162 1 278 1 288 1 229 2 66 1 105 4 153 1 361 1 324 3 282 1 291 7 
59 3 242 1 284 1 134 1 347 2 26 1 162 1 278 1 288 1 229 2 66 1 105 4 153 1 361 1 324 3 282 1 291 7 
59 3 242 1 284 1 134 1 347 2 26 1 372 1 162 1 278 1 288 1 229 2 66 1 105 4 153 1 361 1 324 3 282 1 291 7 
292 2 340 1 341 3 312 1 242 1 134 2 347 3 101 1 26 2 162 2 278 1 53 3 79 3 204 1 251 1 105 16 229 5 106 3 208 1 324 10 282 1 353 4 111 1 59 15 61 1 284 1 115 1 40 1 288 5 66 2 153 4 361 4 156 1 291 31 
292 4 340 2 59 4 242 1 61 2 134 1 347 2 26 1 162 1 2 1 278 1 204 1 288 1 66 1 229 3 105 5 153 1 361 1 68 1 324 4 208 2 156 2 282 1 291 9 
366 1 337 1 211 1 311 1 112 1 343 1 178 1 60 1 256 1 100 1 346 1 135 1 42 1 150 1 149 1 203 1 172 1 56 1 265 1 47 1 143 1 108 1 
366 1 337 1 211 2 311 1 343 1 178 1 60 1 356 1 355 1 100 1 346 1 135 1 42 1 150 1 44 1 149 1 203 1 56 1 265 1 253 1 47 1 143 1 108 2 
211 1 343 1 178 1 60 1 356 1 100 1 346 1 135 1 150 1 44 1 149 1 203 1 56 1 265 1 253 1 47 1 143 1 108 1 
95 1 343 2 97 1 313 1 135 2 249 1 56 1 143 2 108 1 366 1 211 1 85 1 60 2 214 1 355 1 329 1 42 1 150 1 149 1 65 1 333 1 265 1 47 1 
366 1 337 1 211 1 311 1 343 1 178 1 60 1 256 1 100 1 346 1 135 1 42 1 150 1 44 1 149 1 203 1 172 1 56 1 265 1 47 1 143 1 108 1 
7 1 
338 5 339 1 95 1 157 2 196 1 345 1 244 1 51 2 104 1 201 1 202 1 249 1 205 2 207 1 56 1 210 1 300 1 113 2 214 1 215 1 258 2 12 1 118 2 16 1 263 1 127 1 265 2 362 1 129 1 177 2 70 2 310 1 179 1 272 1 227 1 28 1 228 2 316 1 321 1 232 2 32 5 326 1 235 1 84 4 86 2 237 3 87 1 370 6 35 1 329 1 149 2 150 1 193 2 333 2 47 2 
129 1 338 3 196 1 179 1 272 1 227 1 201 1 28 1 207 1 32 3 210 1 326 1 84 2 237 1 87 1 370 2 215 1 35 1 118 1 263 1 375 1 127 1 
129 1 338 3 177 1 196 1 179 1 272 1 227 1 104 1 201 1 28 1 207 1 32 3 210 1 326 1 84 3 237 1 87 1 370 1 215 1 35 1 193 1 263 1 375 1 127 1 
129 1 338 3 177 1 196 1 179 1 272 1 227 1 104 1 201 1 28 1 207 1 32 3 210 1 326 1 84 3 237 1 87 1 370 2 215 1 35 1 258 1 118 1 193 1 375 1 263 1 127 1 
338 5 339 1 196 1 157 2 0 1 244 1 102 1 51 1 104 5 201 1 207 1 205 1 210 1 300 1 215 1 258 4 11 1 12 1 118 4 263 1 127 1 129 1 177 5 70 2 179 1 272 1 227 1 28 1 228 2 316 1 321 1 32 5 232 2 33 1 326 1 187 1 84 6 86 2 237 3 87 1 370 7 35 1 193 4 375 1 
338 4 339 1 196 1 157 2 244 1 51 1 104 1 201 1 202 1 207 1 205 1 210 1 300 1 113 2 215 1 258 2 12 1 118 2 263 1 127 1 129 1 177 2 70 2 179 1 272 1 227 1 28 1 228 2 316 1 321 1 32 4 232 2 326 1 84 4 86 2 237 2 87 1 370 4 35 1 193 2 
129 1 177 1 339 1 338 4 70 2 157 2 196 1 179 1 272 1 0 1 244 1 102 1 51 1 104 1 227 1 201 1 28 1 228 2 316 1 205 1 207 1 321 1 232 2 32 4 210 1 33 1 300 1 326 1 84 4 86 2 237 2 87 1 370 4 215 1 258 2 35 1 12 1 118 2 193 2 263 1 127 1 
129 1 177 1 339 1 338 4 70 2 157 2 196 1 179 1 272 1 0 1 244 1 102 1 51 1 104 1 227 1 201 1 28 1 228 2 316 1 205 1 207 1 321 1 232 2 32 4 210 1 33 1 300 1 326 1 84 4 86 2 237 2 87 1 370 4 215 1 258 2 35 1 12 1 118 2 193 2 263 1 127 1 
129 1 177 1 339 1 338 4 157 2 196 1 179 1 272 1 198 2 244 1 200 2 51 1 297 1 104 1 227 1 201 1 28 1 228 2 316 1 205 1 207 1 321 1 32 4 210 1 33 1 326 1 84 4 237 2 113 2 87 1 370 4 215 1 258 2 35 1 12 1 118 2 43 1 193 2 263 1 126 1 127 1 
129 1 177 1 339 1 338 4 70 2 157 2 196 1 179 1 272 1 0 1 244 1 102 1 51 1 104 1 227 1 201 1 28 1 228 2 316 1 205 1 207 1 321 1 232 2 32 4 210 1 33 1 300 1 326 1 187 1 84 5 86 2 237 2 87 1 370 5 215 1 35 1 258 3 12 1 118 3 193 3 263 1 127 1 
129 1 177 1 339 1 338 4 70 2 157 2 196 1 179 1 272 1 0 1 244 1 102 1 51 1 104 1 227 1 201 1 28 1 228 2 316 1 205 1 207 1 321 1 232 2 32 4 210 1 33 1 300 1 326 1 187 1 84 5 86 2 237 2 87 1 370 5 215 1 35 1 258 3 12 1 118 3 193 3 263 1 127 1 
338 4 339 1 196 1 157 2 244 1 198 2 200 2 297 1 51 1 104 1 201 1 202 1 207 1 205 1 210 1 113 2 215 1 258 2 12 1 118 2 263 1 127 1 129 1 177 1 179 1 272 1 227 1 28 1 228 2 316 1 321 1 32 4 326 1 84 4 237 2 87 1 370 4 35 1 193 2 
292 2 340 1 195 2 242 1 271 1 134 1 347 1 278 1 184 1 229 2 105 3 142 1 208 1 324 2 282 1 234 1 59 3 61 1 66 1 359 1 332 1 153 1 361 1 306 1 156 1 291 6 
292 2 305 1 340 1 192 1 184 1 61 1 359 1 208 1 156 1 
129 1 308 1 292 2 24 1 195 1 95 1 340 1 25 1 296 1 246 1 76 1 139 1 28 2 249 1 350 1 184 1 105 1 142 1 56 1 208 1 328 1 59 1 61 1 261 1 169 1 150 1 149 1 192 1 20 1 359 1 263 2 333 1 265 1 154 1 47 1 221 1 156 1 291 2 
292 6 195 2 340 3 95 2 341 2 294 2 242 1 243 2 347 1 296 1 249 2 53 2 105 10 56 2 208 3 59 10 61 3 169 1 66 1 359 3 20 2 263 3 265 3 361 3 221 1 308 1 129 1 309 2 25 2 134 1 76 2 315 1 28 3 139 2 278 1 318 1 184 3 79 2 229 4 142 7 280 2 324 8 231 1 282 1 234 7 328 1 44 1 149 3 150 2 192 1 288 4 153 3 333 1 332 7 154 1 47 3 156 3 49 2 291 20 
129 1 308 1 292 4 336 2 95 3 340 2 296 1 136 1 28 1 249 2 184 2 105 1 56 2 365 1 208 2 328 1 59 1 112 1 61 2 214 1 329 1 168 1 169 1 44 1 150 2 149 8 331 1 21 1 359 2 290 1 263 1 333 2 154 1 265 8 46 1 47 7 306 1 156 2 291 2 
129 1 292 2 340 1 96 1 341 1 270 1 28 1 184 1 53 1 79 1 229 1 105 1 142 1 324 1 208 1 234 1 34 1 59 2 61 1 169 1 192 1 359 1 263 1 332 1 153 1 154 1 361 1 156 1 291 3 
234 1 292 2 340 1 283 1 341 1 61 1 184 1 288 1 359 1 105 2 142 1 332 1 361 1 324 1 306 1 208 1 156 1 291 2 
234 1 292 2 340 1 59 2 61 1 184 1 79 1 229 1 359 1 142 1 332 1 153 1 324 1 306 1 208 1 156 1 291 2 281 1 
234 2 292 2 340 1 59 2 341 1 61 1 79 1 184 1 53 1 288 1 229 1 359 1 105 2 142 2 153 1 332 2 361 1 324 2 306 1 208 1 156 1 291 4 
234 1 292 2 340 1 283 1 341 1 61 1 184 1 288 1 359 1 105 2 142 1 332 1 46 1 361 1 324 1 208 1 156 1 291 2 
234 1 292 2 340 1 59 2 61 1 184 1 79 1 229 1 359 1 142 1 332 1 153 1 46 1 324 1 208 1 156 1 291 2 281 1 
234 2 292 2 340 1 59 2 341 1 61 1 79 1 184 1 53 1 288 1 229 1 359 1 105 2 142 2 153 1 332 2 46 1 361 1 324 2 208 1 156 1 291 4 
234 2 292 2 340 1 59 2 341 1 61 1 79 1 184 1 53 1 288 1 229 1 359 1 105 2 142 2 153 1 332 2 361 1 324 2 208 1 156 1 291 4 
308 1 292 2 195 1 95 1 340 1 25 1 296 1 76 1 139 1 28 1 249 1 184 1 105 1 56 1 280 1 208 1 59 1 61 1 150 1 149 1 20 1 359 1 263 1 333 1 265 1 47 1 156 1 291 2 
308 1 292 2 195 1 223 1 95 1 340 1 25 1 225 1 296 1 28 1 249 1 184 1 105 1 56 1 208 1 9 1 59 1 61 1 150 1 149 1 20 1 359 1 263 1 333 1 265 1 47 1 156 1 291 2 
234 2 292 2 340 1 59 2 341 1 61 1 192 1 79 1 184 1 53 1 288 1 229 1 359 1 105 2 142 2 153 1 332 2 361 1 324 2 208 1 156 1 291 4 
309 1 292 2 95 1 340 1 341 1 25 1 76 1 139 1 28 1 249 1 79 1 184 1 53 1 229 1 105 2 142 2 56 1 280 1 324 2 208 1 234 2 59 2 112 1 61 1 150 1 149 1 288 1 20 1 359 1 263 1 153 1 332 2 361 1 265 1 47 1 156 1 291 4 
129 1 292 2 340 1 96 1 341 1 28 1 79 1 184 1 53 1 105 2 142 1 324 1 208 1 234 1 59 1 34 1 61 1 37 1 169 1 192 1 288 1 359 1 263 1 153 1 332 1 154 1 361 1 156 1 291 3 
292 6 293 4 340 3 341 4 242 1 295 1 159 1 347 1 348 1 2 1 53 4 204 1 105 20 251 3 106 3 164 1 208 3 353 4 59 21 61 3 213 1 304 1 262 1 66 1 361 5 312 1 314 1 134 1 79 4 278 1 29 1 229 4 140 1 324 8 230 2 282 1 146 1 288 4 287 1 153 5 240 1 156 3 291 41 
293 4 292 8 340 4 341 4 312 1 295 1 242 1 159 1 314 1 347 1 134 1 348 1 2 1 278 1 53 4 79 3 29 1 204 2 140 1 229 4 251 3 105 20 106 3 164 1 208 4 324 7 230 2 282 1 353 4 59 18 61 4 213 1 146 1 304 1 262 1 287 1 288 3 66 1 153 4 361 5 240 1 156 4 291 38 
293 4 292 4 340 2 341 7 312 2 242 1 159 1 347 1 134 1 348 1 2 1 278 1 53 7 79 7 29 1 204 1 140 1 229 7 251 2 105 27 106 4 164 1 208 2 324 14 230 1 282 1 254 2 353 4 59 25 61 2 213 1 146 1 304 1 262 1 287 1 288 7 66 1 153 8 361 8 240 1 156 2 291 52 
293 2 292 4 340 2 341 3 312 1 314 1 2 1 53 3 79 3 29 1 229 3 251 1 105 9 106 1 208 2 324 6 230 1 353 2 59 10 61 2 146 1 217 1 262 1 287 2 288 3 153 3 361 3 240 1 156 2 291 19 
293 4 292 6 340 3 341 3 159 1 348 1 2 1 53 3 79 2 29 1 204 2 229 2 105 14 251 2 140 1 106 2 164 1 324 4 208 3 230 2 353 2 59 12 61 3 213 1 146 1 304 1 262 1 287 1 288 2 153 2 361 3 240 2 156 3 291 26 
219 1 92 1 71 1 17 1 180 1 124 1 45 1 197 1 74 1 160 1 
371 1 10 1 
92 1 71 1 17 1 319 1 133 1 180 1 114 1 45 1 74 1 
98 1 103 1 
94 1 188 1 252 1 
57 1 58 1 177 1 338 1 71 1 180 1 197 1 74 1 219 1 13 1 182 1 92 1 78 2 17 1 124 1 45 1 222 1 32 1 
57 1 58 1 177 1 338 1 71 1 180 1 197 1 74 1 219 1 13 1 182 1 92 1 78 2 17 1 124 1 45 1 222 1 32 1 
57 1 58 1 177 1 338 1 71 1 180 1 197 1 74 1 219 1 13 1 182 1 92 1 78 2 17 1 124 1 45 1 222 1 32 1 
98 1 252 1 103 1 
98 1 252 1 103 1 
94 1 188 1 
94 1 188 1 252 1 
266 1 36 1 
129 2 266 1 195 1 338 1 71 1 180 1 74 1 28 2 182 1 78 1 299 1 107 1 351 1 32 1 109 1 57 1 371 1 10 1 36 1 169 2 92 1 17 1 263 2 152 1 45 1 154 2 48 1 
129 2 308 1 292 2 336 2 95 1 340 1 99 1 296 1 136 1 28 2 249 1 184 1 54 1 105 1 56 1 208 1 59 1 61 1 166 1 38 1 117 1 168 1 150 1 149 2 192 1 359 1 263 2 265 2 47 2 156 1 291 2 
334 1 311 1 112 1 178 1 368 1 100 1 150 1 44 1 149 2 203 1 141 1 56 1 265 2 47 2 143 1 
150 1 149 1 44 1 311 1 203 1 178 1 368 1 56 1 100 1 265 1 143 1 47 1 155 1 
334 1 335 1 95 1 214 1 313 1 329 1 150 1 149 1 249 1 56 1 333 1 265 1 47 1 143 1 
334 1 311 1 178 1 368 1 100 1 150 1 44 1 149 1 203 1 141 1 56 1 265 1 47 1 143 1 
248 1 
104 1 233 1 177 1 205 1 271 1 50 1 51 1 
339 1 177 2 338 1 70 1 244 1 51 1 104 1 205 1 321 1 232 1 32 1 300 1 86 1 237 1 113 1 370 1 12 1 
241 2 95 10 339 4 338 5 342 1 341 2 244 4 50 1 51 8 104 2 249 3 53 2 205 9 5 6 56 3 165 6 8 1 112 1 113 12 257 2 12 4 62 2 218 2 120 2 174 2 265 3 361 2 362 1 176 2 177 8 25 3 224 2 77 1 183 2 79 2 279 2 321 4 81 1 32 5 232 6 233 1 367 1 235 2 327 1 237 3 87 2 370 5 150 4 149 3 374 3 333 1 153 2 47 3 49 2 
338 1 339 2 177 5 341 2 159 1 244 2 348 1 51 5 104 2 298 1 53 2 79 2 279 2 251 1 140 1 5 5 205 8 106 1 164 1 321 2 32 1 232 3 165 5 235 1 353 1 237 1 113 6 370 1 12 2 304 1 120 1 153 2 361 2 362 1 69 1 
129 1 339 1 338 1 244 1 273 1 274 1 134 1 102 1 51 2 201 1 28 1 279 2 205 2 321 1 163 1 32 1 282 1 34 1 12 1 167 1 120 1 121 1 169 1 66 1 263 1 153 1 361 2 154 1 
233 1 339 1 177 1 244 1 50 1 12 1 51 1 104 1 205 1 321 1 
165 5 177 5 341 2 113 10 51 5 120 1 53 2 79 2 279 2 5 5 205 5 153 2 361 2 49 1 232 5 
104 1 177 1 338 1 237 1 370 1 32 1 
267 1 95 1 339 2 338 3 310 1 345 1 244 1 245 1 51 2 249 1 320 1 205 2 56 1 321 2 32 3 367 2 8 1 235 2 237 2 370 4 214 1 329 1 12 2 150 1 149 4 333 2 265 4 47 4 362 2 
129 2 292 2 195 1 340 1 95 1 25 1 296 1 76 1 28 3 139 1 249 1 184 1 163 1 56 1 280 1 208 1 59 1 34 2 61 1 169 2 149 1 150 1 20 1 359 1 263 3 333 1 265 1 154 2 47 1 307 1 156 1 291 1 
165 2 235 1 339 1 177 4 113 4 244 1 347 1 12 1 51 2 104 2 5 2 205 1 321 1 362 1 232 2 
364 1 71 1 180 1 
364 1 71 1 180 1 
71 1 180 1 197 1 264 1 36 1 
364 1 71 1 180 1 
71 1 123 1 180 1 
71 1 123 1 180 1 
71 1 123 1 180 1 
71 1 180 1 
92 1 17 1 
292 2 340 1 242 1 347 1 134 1 2 1 278 1 251 1 105 4 229 2 106 1 208 1 324 2 282 1 353 1 59 4 61 1 304 1 66 1 153 1 361 1 156 1 291 8 
292 4 340 2 132 1 341 1 312 1 242 1 347 1 134 1 2 1 278 1 53 1 229 2 251 1 105 6 106 1 208 2 324 3 282 1 353 2 59 5 61 2 304 1 288 1 66 1 153 1 361 2 156 2 291 11 
292 6 340 3 132 1 341 2 242 1 159 1 347 1 134 1 348 1 2 1 278 1 53 2 79 2 204 1 251 1 105 9 140 1 229 3 106 1 164 1 208 3 324 4 282 1 353 1 59 10 61 3 304 1 288 1 66 1 153 3 361 3 156 3 291 19 
292 6 340 3 132 1 341 2 242 1 159 1 347 1 134 1 348 1 2 1 278 1 53 2 79 1 204 1 251 1 105 10 140 1 229 3 106 1 164 1 208 3 324 5 282 1 353 1 59 7 61 3 304 1 288 2 66 1 153 2 361 3 156 3 291 17 
292 2 340 1 242 1 347 1 134 1 2 1 278 1 251 1 105 4 229 2 106 1 208 1 324 2 282 1 353 1 59 4 61 1 304 1 66 1 153 1 361 1 156 1 291 8 
292 2 340 1 341 2 159 1 348 1 2 1 53 2 79 2 251 1 105 6 140 1 229 1 106 1 164 1 208 1 324 2 353 1 59 6 61 1 304 1 288 1 153 2 361 2 156 1 291 12 
292 8 340 4 132 1 341 2 242 1 159 1 347 1 134 1 348 1 2 1 278 1 53 2 79 1 204 2 251 1 105 10 140 1 229 3 106 1 164 1 208 4 324 5 282 1 353 1 59 8 61 4 304 1 288 2 66 1 153 2 361 3 156 4 291 18 
292 8 340 4 341 3 159 1 314 1 348 1 2 1 53 3 79 2 204 2 251 1 105 9 140 1 229 3 106 1 164 1 208 4 324 6 353 1 59 7 61 4 304 1 288 3 153 2 361 3 156 4 291 16 
59 4 242 2 134 3 278 1 288 3 66 3 229 3 105 3 153 1 361 1 324 6 291 7 282 1 
292 8 340 4 341 2 242 1 159 1 314 1 347 1 134 1 348 1 2 1 278 1 53 2 79 1 204 2 251 1 105 10 140 1 229 3 106 1 164 1 208 4 324 4 282 1 353 1 59 8 61 4 304 1 288 1 66 1 153 2 361 3 156 4 291 18 
292 4 340 2 59 4 61 2 242 1 347 1 134 1 278 1 288 1 204 1 105 4 229 2 66 1 153 1 361 1 324 3 208 2 156 2 282 1 291 8 
59 3 242 1 271 1 347 1 134 1 278 1 66 1 229 2 105 3 153 1 361 1 324 2 282 1 291 6 
292 2 340 1 59 2 132 1 341 1 61 1 79 1 53 1 288 1 229 1 105 2 153 1 361 1 324 2 208 1 156 1 291 4 
353 2 59 4 341 1 312 1 79 1 53 1 288 1 229 1 251 1 105 3 106 1 153 1 361 1 324 2 291 7 
292 4 340 2 341 2 312 1 242 1 347 1 134 2 278 1 53 2 79 2 204 2 105 11 229 5 106 2 4 1 324 9 208 2 282 1 254 1 186 1 353 2 59 12 61 2 288 4 66 2 153 3 361 3 156 2 291 23 
353 1 59 1 291 1 
105 1 106 1 291 1 
292 2 340 1 132 1 59 3 341 1 61 1 53 1 79 1 288 1 105 3 229 2 153 1 361 1 208 1 324 3 156 1 49 1 291 6 
292 2 340 1 341 2 159 1 348 1 2 1 53 2 79 2 251 1 105 6 140 1 229 1 106 1 164 1 208 1 324 2 353 1 59 6 61 1 304 1 288 1 153 2 361 2 156 1 291 12 
59 3 134 1 288 1 105 3 66 1 229 1 153 1 361 1 324 2 282 1 291 6 
292 2 340 1 59 2 242 1 61 1 134 1 278 1 288 1 204 1 105 1 229 1 66 1 324 2 208 1 156 1 186 1 291 3 
292 2 340 1 59 5 61 1 134 2 121 1 2 1 288 2 66 2 229 3 105 5 153 2 361 2 208 1 324 5 156 1 291 10 282 1 
292 2 340 1 341 1 61 1 2 1 288 1 105 2 361 1 208 1 324 1 156 1 291 2 
292 2 340 1 59 2 341 1 61 1 2 1 79 1 53 1 288 1 229 1 105 2 153 1 361 1 324 2 208 1 156 1 291 4 
292 6 340 3 59 2 61 3 314 1 134 1 2 1 204 1 288 1 66 1 229 1 105 1 208 3 324 2 156 3 186 1 291 3 
292 10 340 5 132 1 341 3 312 1 242 1 314 1 347 1 134 3 101 1 2 1 278 1 53 3 79 3 204 2 251 1 105 16 229 7 106 3 208 5 324 12 282 2 186 1 353 4 111 1 59 18 61 5 115 1 288 5 66 3 153 5 361 5 156 5 291 34 
129 1 28 1 83 1 195 1 263 1 127 1 75 1 
129 1 83 1 195 1 75 1 286 1 28 1 161 1 277 1 263 1 322 1 127 1 80 1 
150 1 95 1 149 1 249 1 214 1 271 1 56 1 333 1 265 1 329 1 47 1 
129 1 195 1 95 1 328 1 25 1 169 1 28 2 139 1 150 1 149 1 249 1 20 1 263 2 333 1 56 1 154 1 265 1 47 1 
129 2 195 1 95 3 196 1 25 2 179 1 201 1 139 1 28 2 249 2 56 1 367 1 328 1 62 1 169 1 149 1 150 1 20 1 263 2 174 1 265 1 154 2 47 1 
129 2 195 1 95 3 196 1 25 2 179 1 201 1 28 2 249 2 30 1 56 1 367 1 9 1 328 1 62 1 169 1 149 2 150 1 20 1 263 2 174 1 265 2 154 2 47 2 
241 1 367 1 177 1 338 2 95 4 87 1 25 1 370 1 62 1 104 1 150 1 149 3 170 1 249 1 374 1 30 1 333 1 174 1 56 1 265 3 22 1 47 3 32 2 
241 1 367 1 177 1 338 2 95 4 87 1 25 1 370 1 62 1 104 1 150 1 149 3 249 1 183 1 374 1 30 1 333 1 174 1 56 1 265 3 47 3 32 2 
150 1 149 1 56 1 265 1 365 1 47 1 
336 1 327 1 268 1 95 3 112 1 25 1 181 1 285 1 168 1 44 1 149 7 150 3 249 2 331 1 21 1 290 1 333 2 56 2 365 1 265 7 47 6 
129 1 292 4 309 1 195 2 95 1 340 2 25 1 242 1 243 1 99 1 347 1 134 1 76 1 28 2 139 1 249 1 278 1 184 2 105 3 229 2 142 1 56 1 280 1 324 2 208 2 282 1 234 1 59 3 328 1 112 1 61 2 169 1 150 1 149 1 192 1 66 1 20 1 359 2 263 2 332 1 153 1 361 1 154 1 265 1 47 1 156 2 291 6 
241 1 177 1 339 2 338 3 95 2 224 1 244 2 50 1 51 1 104 1 183 1 205 1 321 2 32 3 233 1 8 1 237 1 87 1 257 1 370 2 12 2 149 1 374 1 152 1 333 1 265 1 47 1 176 1 
241 1 327 1 95 2 112 1 25 1 77 1 149 2 150 2 249 1 56 1 365 1 265 2 47 2 
95 1 112 1 214 1 199 1 329 1 150 1 149 4 249 1 30 1 333 1 56 1 265 4 47 4 
367 1 268 1 95 1 25 1 181 1 315 1 149 2 64 1 150 2 249 1 56 1 265 2 47 2 376 1 
150 1 149 1 203 1 56 1 100 1 333 1 265 1 47 1 
168 1 150 1 95 1 44 1 149 2 249 1 112 1 54 1 56 1 265 2 47 2 
367 1 95 3 112 1 214 1 199 1 329 1 168 1 149 5 150 2 249 2 331 1 21 1 333 1 56 2 265 5 47 4 
367 1 95 3 112 1 214 1 199 1 329 1 168 1 149 5 150 2 249 2 331 1 333 1 31 1 56 2 265 5 47 4 
129 1 195 1 95 1 9 1 328 1 25 1 169 1 28 2 150 1 149 1 249 1 20 1 263 2 333 1 56 1 154 1 265 1 47 1 
367 1 327 1 268 1 95 1 25 1 181 1 285 1 149 1 150 2 249 1 56 1 265 1 47 1 
195 1 93 1 360 1 1 1 190 1 
195 1 177 1 338 2 196 1 87 1 179 1 1 1 238 1 259 1 190 2 104 1 201 1 349 1 93 2 18 1 152 1 360 2 207 1 32 2 
129 1 117 1 28 1 93 1 263 1 1 1 166 1 38 1 190 1 
349 1 1 1 238 1 
130 1 236 1 271 1 323 1 
366 1 130 1 42 1 211 1 236 1 323 1 108 1 
135 1 211 1 343 1 
366 1 130 1 211 3 236 1 147 2 42 1 90 1 330 1 250 1 172 1 323 1 108 3 
366 1 130 1 42 1 211 2 236 1 131 1 356 1 323 1 108 2 
366 1 42 1 212 1 211 1 172 1 369 1 323 1 67 1 363 1 39 1 108 1 
366 1 42 1 211 1 236 1 172 1 323 1 108 1 
366 1 130 1 42 1 211 1 236 2 172 1 108 1 
366 2 42 2 211 2 236 1 172 1 301 1 116 1 323 1 148 1 108 2 
145 1 366 1 130 1 42 1 211 3 236 1 269 1 172 1 356 2 206 1 323 2 39 1 108 3 
366 1 255 1 42 1 211 1 172 1 203 1 108 1 
366 2 130 1 211 4 236 1 131 1 269 1 356 2 39 1 42 2 172 1 173 1 323 2 108 4 
366 1 130 1 42 1 211 1 236 1 172 1 323 1 108 1 
366 1 130 2 211 4 236 2 269 1 356 2 147 1 39 1 42 1 90 1 250 1 19 1 323 3 108 4 
366 1 130 1 42 1 211 2 236 1 172 1 356 1 323 1 275 1 144 1 63 1 108 2 
366 1 130 1 211 3 236 1 302 1 147 2 42 1 90 1 250 2 172 1 323 1 108 3 
191 2 239 1 72 1 323 2 
366 1 42 1 211 1 172 1 216 1 108 1 
366 1 130 1 42 1 211 2 236 1 172 1 356 1 206 1 323 1 108 2 
226 1 
366 1 130 1 42 1 211 1 236 1 172 1 323 1 108 1 
366 1 130 1 211 3 236 1 356 1 147 1 42 1 172 1 206 1 323 1 108 3 
269 1 19 1 323 1 39 1 
236 1 323 1 

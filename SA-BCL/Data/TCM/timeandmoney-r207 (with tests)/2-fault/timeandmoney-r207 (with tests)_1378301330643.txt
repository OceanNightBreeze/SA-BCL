#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 342 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 41 1 17 1 254 5 3 2 255 3 273 1 118 1 324 9 167 1 142 2 236 6 221 1 10 2 348 1 259 2 351 1 302 4 224 9 264 1 176 1 309 1 76 1 329 1 83 2 58 2 333 1 227 2 
212 1 41 1 17 1 254 5 3 2 255 3 273 1 118 1 324 9 167 1 142 2 236 6 221 1 348 1 10 2 259 2 351 1 302 4 224 9 264 1 176 1 309 1 76 1 329 1 83 2 58 2 333 1 227 2 
212 1 41 1 17 1 254 6 3 2 255 4 273 1 118 1 324 10 167 1 142 2 236 7 221 1 348 1 10 2 259 2 351 1 302 5 224 10 264 1 176 1 309 1 76 1 329 1 83 2 58 2 333 1 227 2 
212 1 41 1 17 1 254 4 3 2 255 2 273 1 118 1 324 7 167 1 142 2 236 4 221 1 348 1 10 1 259 2 351 1 302 3 224 7 264 1 176 1 76 1 329 1 83 2 58 2 333 1 227 2 
351 1 302 2 224 4 17 1 254 3 255 1 3 1 309 1 76 1 273 1 83 1 324 4 58 1 142 1 236 3 221 1 10 2 259 1 
224 2 41 1 254 1 17 1 3 1 76 1 67 1 329 1 30 1 83 1 324 2 142 1 221 1 90 1 227 1 259 1 
302 1 224 3 17 1 254 2 3 2 255 1 76 1 324 3 167 1 236 1 221 1 227 1 259 2 
17 1 254 5 255 3 3 2 273 1 167 1 324 9 142 1 236 7 51 1 221 1 348 1 10 2 259 2 351 1 302 4 224 9 176 1 309 1 76 1 83 1 58 1 227 1 92 1 
17 1 254 5 255 3 3 2 273 1 167 1 324 9 142 1 236 7 51 1 221 1 348 1 10 2 259 2 351 1 302 4 224 9 176 1 309 1 76 1 83 1 58 1 227 1 92 1 
117 1 84 1 295 1 
84 1 235 1 162 2 
269 2 294 2 206 1 166 1 59 2 42 2 361 2 327 2 
269 2 15 1 213 1 336 2 42 3 161 2 231 1 344 1 294 2 7 1 141 2 166 1 279 1 123 1 124 1 297 1 148 1 171 1 262 1 265 2 308 1 266 1 327 2 268 1 358 1 29 2 312 1 206 1 359 1 360 1 156 1 59 2 86 1 88 1 361 3 109 1 132 1 
260 1 269 1 294 1 166 1 182 1 59 1 42 1 361 1 327 1 310 1 
300 1 103 1 226 1 214 1 42 1 327 1 256 1 165 1 23 1 117 1 182 1 84 1 361 1 133 1 
269 1 300 1 226 2 214 1 42 1 327 1 256 1 23 2 294 1 117 1 182 1 84 1 59 1 361 1 133 1 
101 1 23 1 155 1 226 1 78 1 
101 1 23 2 155 1 117 1 84 1 330 1 226 2 121 1 
101 1 23 1 226 1 
260 1 269 1 226 1 42 1 327 1 310 1 155 1 23 1 294 1 166 1 182 1 59 1 129 1 361 1 
84 1 
101 1 23 2 155 1 117 1 84 1 330 1 226 2 216 1 
101 2 229 1 226 5 193 1 18 1 155 2 23 5 117 1 68 1 180 1 84 1 330 1 184 2 219 1 157 1 247 2 147 1 317 2 28 1 
269 1 336 1 42 2 265 1 266 1 327 1 231 1 116 1 358 1 294 1 312 1 29 1 360 1 316 1 86 1 109 1 361 2 297 1 171 1 134 1 
206 1 295 1 
269 1 42 2 327 2 294 1 206 2 59 1 220 1 361 2 27 1 
116 1 139 1 34 1 
135 1 336 1 42 1 265 1 231 1 266 1 358 1 312 1 29 1 206 1 360 1 86 1 361 1 109 1 297 1 171 1 
269 3 294 3 206 1 59 1 42 3 361 3 327 3 134 1 
260 1 269 1 294 1 182 1 42 1 361 1 327 1 
269 1 294 1 182 1 59 1 220 1 42 1 361 1 327 1 27 1 
269 3 336 1 214 1 42 4 161 1 231 1 256 1 7 1 294 3 23 1 141 2 166 1 279 1 144 1 27 1 123 1 124 1 297 1 148 1 171 1 300 1 262 1 226 1 265 1 308 1 266 1 327 3 14 1 358 1 312 1 29 1 206 1 359 1 182 1 360 1 316 1 59 2 86 1 88 1 109 1 361 4 132 1 133 1 134 1 
269 1 52 1 165 1 294 1 206 1 42 2 361 2 327 2 134 1 
269 3 300 1 226 1 214 1 42 3 327 3 204 1 256 1 23 1 294 3 182 1 84 1 316 1 59 1 144 1 361 3 27 1 133 1 134 2 
269 2 42 2 327 2 116 1 294 2 34 1 59 1 361 2 27 1 134 1 
336 1 42 1 265 1 231 1 266 1 312 1 29 1 358 1 206 1 360 1 86 1 361 1 109 1 297 1 171 1 
336 1 42 1 265 1 266 1 22 1 312 1 29 1 358 1 206 1 346 1 360 1 86 1 361 1 109 1 297 1 
251 1 112 1 113 1 161 4 139 2 116 2 141 2 120 1 279 1 237 1 123 1 124 1 325 1 200 1 173 1 262 1 303 1 308 1 286 1 156 2 34 2 88 1 132 2 189 1 
269 1 294 1 335 1 182 1 42 1 361 1 327 1 133 1 
269 4 52 1 64 1 42 5 327 5 126 1 165 1 294 4 206 1 316 1 59 1 361 5 27 1 134 2 
260 1 269 2 294 2 335 1 182 1 42 2 361 2 327 2 
244 1 71 1 
244 1 71 1 
232 1 326 1 
232 1 326 1 
232 1 326 1 
47 1 244 1 71 1 
47 1 244 1 71 1 
244 1 339 1 71 1 
244 2 44 1 232 1 285 1 71 2 326 1 
47 1 244 1 71 1 
244 1 4 1 71 1 
244 1 4 1 71 1 
244 1 4 1 71 1 
250 1 136 1 226 2 43 2 178 1 285 1 321 2 153 1 107 2 46 2 23 2 8 1 208 1 84 1 244 2 287 3 210 2 71 2 158 1 
269 2 291 1 319 1 42 2 43 1 115 1 339 1 341 1 321 1 46 1 294 2 23 1 69 1 71 1 226 1 327 2 153 1 311 1 313 1 206 1 287 1 244 1 361 2 210 1 
83 1 58 1 142 1 
67 1 83 1 142 1 
67 1 271 1 277 1 58 2 142 3 105 1 
67 1 48 1 277 1 58 1 142 2 105 1 
67 1 58 1 277 2 142 2 105 1 
291 1 40 2 93 2 115 1 162 3 23 5 68 2 117 1 199 1 219 3 235 1 258 1 147 1 11 1 200 1 101 1 173 1 226 5 303 1 239 2 155 4 313 1 31 1 184 1 330 1 84 2 36 1 247 1 130 1 317 1 189 1 190 1 
228 1 40 6 111 1 162 9 23 9 68 6 117 1 199 2 219 8 235 3 122 1 258 2 147 1 200 3 101 6 173 3 352 1 226 9 303 3 239 6 205 1 78 5 82 5 155 7 313 4 31 3 84 5 330 1 184 2 157 1 247 2 211 1 130 1 317 2 189 3 
40 2 93 1 162 4 23 3 117 1 68 2 199 1 219 3 235 2 258 1 11 1 200 1 173 1 226 3 303 1 239 2 155 2 313 1 31 1 84 3 184 1 247 1 157 1 317 1 189 1 190 1 
228 1 40 4 93 2 111 1 162 7 23 4 117 1 68 4 199 1 219 5 235 3 258 1 11 1 200 2 173 2 226 4 303 2 239 4 155 3 313 2 31 2 84 4 184 1 247 1 157 1 211 1 317 1 189 2 190 1 
358 1 243 1 295 1 
358 1 55 1 
281 1 
358 1 297 1 
243 2 358 3 73 1 246 1 266 1 297 1 
358 1 266 1 297 1 
358 1 175 1 
173 1 191 1 251 2 174 1 304 1 161 7 354 1 65 1 106 1 286 3 331 1 156 4 132 3 350 1 299 2 200 1 149 1 
173 1 191 1 251 2 174 1 304 1 161 7 354 1 65 1 106 1 286 3 331 1 156 4 132 3 350 1 299 2 200 1 149 1 
173 1 191 1 251 2 174 1 304 1 161 7 354 1 65 1 106 1 274 1 286 3 331 1 156 4 132 3 350 1 299 2 200 1 149 1 
191 1 270 1 251 5 161 31 338 1 65 1 234 1 195 4 141 2 279 1 25 1 123 1 350 2 299 3 149 2 200 4 72 3 173 4 284 1 174 2 303 3 304 1 308 1 305 1 354 5 267 1 106 1 31 3 286 10 156 16 331 2 88 1 132 15 189 3 
191 1 251 3 161 9 141 4 9 1 279 2 25 1 123 2 299 2 350 1 200 1 149 1 173 1 174 1 304 1 308 2 354 1 106 1 127 1 286 4 156 5 331 1 88 2 132 4 
336 1 271 1 254 1 17 1 3 1 67 1 323 1 345 1 324 2 278 1 142 2 236 1 221 1 70 1 259 1 282 1 201 1 224 2 225 1 265 1 76 1 179 1 29 1 83 1 58 1 360 1 35 1 86 1 89 1 227 1 
336 1 271 1 254 1 17 1 3 1 114 1 67 1 323 1 345 1 324 3 278 1 142 2 236 2 221 1 70 1 259 1 282 1 224 3 225 1 265 1 203 1 179 1 29 1 83 1 58 1 360 1 35 1 86 1 227 1 159 1 
336 1 271 1 254 1 17 1 114 1 67 1 323 1 345 1 324 2 278 1 142 2 236 2 221 1 70 1 224 2 265 1 203 1 179 1 29 1 83 1 360 1 58 1 35 1 86 1 227 1 
0 1 224 1 336 1 150 1 265 1 3 1 77 1 66 1 164 1 179 2 323 2 358 1 312 1 29 1 324 1 360 1 185 1 86 1 70 2 297 1 227 2 159 1 259 1 
336 1 271 1 3 1 67 1 323 1 345 1 324 1 278 1 142 2 70 1 259 1 282 1 224 1 225 1 265 1 203 1 76 1 179 1 29 1 83 1 58 1 360 1 35 1 86 1 89 1 227 1 
62 1 
1 1 336 2 214 1 42 1 342 1 66 1 256 1 165 1 23 3 68 1 198 1 219 1 26 1 258 1 147 1 297 1 300 1 101 2 103 1 226 3 150 1 265 2 327 1 154 1 358 1 29 2 312 2 182 1 360 1 184 1 330 1 86 1 361 1 247 1 332 1 133 1 317 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 101 1 103 1 226 3 214 1 42 1 327 1 216 1 342 1 256 1 154 1 23 3 165 1 182 1 330 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 184 1 361 1 247 1 26 1 147 1 133 1 317 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 361 1 26 1 133 1 
300 1 103 1 226 2 214 1 42 1 327 1 342 1 256 1 154 1 23 2 165 1 182 1 184 1 361 1 247 1 26 1 147 1 133 1 317 1 
191 1 251 2 161 6 116 1 139 1 141 2 295 1 279 1 123 1 124 1 325 1 350 1 299 1 149 1 200 1 173 1 262 1 304 1 308 1 106 1 206 2 286 2 34 1 156 3 88 1 132 3 
251 1 253 1 161 14 338 1 195 3 234 1 344 1 139 11 116 11 141 4 279 2 123 2 124 1 349 1 200 1 72 3 173 2 262 2 303 2 75 1 308 2 354 1 81 1 206 1 359 1 286 2 31 2 156 8 34 4 60 1 88 2 132 6 189 1 
269 1 336 1 135 1 253 1 42 2 231 1 161 2 344 1 294 1 141 2 279 1 123 1 297 1 124 1 12 1 171 1 262 1 265 1 54 1 266 1 327 1 308 1 358 1 29 1 312 1 206 1 359 1 360 1 316 1 34 1 156 1 86 1 109 1 88 1 361 2 187 1 132 1 134 1 
269 1 191 1 320 1 42 3 231 2 96 2 139 7 7 2 141 6 279 3 149 1 200 3 203 1 327 1 106 1 206 2 286 8 156 10 109 2 290 1 251 4 336 3 253 1 161 20 163 2 344 1 116 7 294 1 119 2 123 3 124 3 297 2 299 1 350 1 171 2 173 3 262 3 303 2 304 1 265 3 308 3 266 2 354 4 356 2 29 3 312 1 358 2 359 1 31 2 316 1 360 2 34 7 86 2 361 3 88 3 37 1 132 10 134 1 189 2 
269 1 39 1 15 2 336 8 42 1 161 2 66 1 344 1 294 1 141 4 279 2 123 2 146 1 124 2 297 2 325 1 201 1 262 2 263 1 150 1 104 1 203 1 265 8 327 1 308 2 152 1 358 3 29 7 312 2 359 1 315 1 360 2 156 1 86 2 361 1 88 2 334 1 132 1 134 1 
269 1 251 1 253 1 42 1 161 3 116 1 139 1 294 1 141 2 279 1 27 1 123 1 124 1 200 1 173 1 262 1 303 1 308 1 327 1 286 1 32 1 31 1 34 1 59 1 156 1 88 1 361 1 132 2 189 1 
173 1 262 1 113 1 303 1 161 2 308 1 354 1 116 1 139 1 141 2 286 1 34 1 279 1 156 2 88 1 123 1 124 1 325 1 
251 1 262 1 161 2 308 1 116 1 139 1 141 2 286 1 34 1 279 1 88 1 237 1 123 1 124 1 325 1 132 2 189 1 200 1 
251 1 161 4 139 2 116 2 141 2 279 1 123 1 124 1 325 1 200 1 173 1 262 1 303 1 308 1 354 1 31 1 286 2 156 2 34 2 88 1 132 2 189 1 
173 1 262 1 104 1 113 1 303 1 161 2 308 1 354 1 116 1 139 1 141 2 286 1 34 1 279 1 156 2 88 1 123 1 124 1 
251 1 262 1 104 1 161 2 308 1 116 1 139 1 141 2 286 1 34 1 279 1 88 1 237 1 123 1 124 1 132 2 189 1 200 1 
251 1 161 4 139 2 116 2 141 2 279 1 123 1 124 1 200 1 173 1 262 1 303 1 104 1 308 1 354 1 31 1 286 2 156 2 34 2 88 1 132 2 189 1 
251 1 161 4 139 2 116 2 141 2 279 1 123 1 124 1 200 1 173 1 262 1 303 1 308 1 354 1 31 1 286 2 156 2 34 2 88 1 132 2 189 1 
336 1 42 1 161 2 231 1 344 1 7 1 141 2 279 1 123 1 297 1 124 1 171 1 262 1 265 1 266 1 308 1 29 1 312 1 358 1 206 1 359 1 360 1 156 1 86 1 109 1 361 1 88 1 132 1 
336 1 42 1 161 2 344 1 22 1 346 1 141 2 97 1 279 1 123 1 297 1 124 1 262 1 265 1 266 1 308 1 29 1 312 1 358 1 206 1 359 1 360 1 156 1 86 1 109 1 361 1 88 1 132 1 
253 1 251 1 161 4 139 2 116 2 141 2 279 1 123 1 124 1 200 1 173 1 262 1 303 1 308 1 354 1 31 1 286 2 156 2 34 2 88 1 132 2 189 1 
251 1 336 1 42 1 161 4 231 1 163 1 116 2 139 2 7 1 141 2 279 1 123 1 297 1 124 1 200 1 171 1 173 1 201 1 262 1 303 1 265 1 266 1 308 1 354 1 29 1 358 1 286 2 31 1 360 1 34 2 156 2 86 1 109 1 361 1 88 1 132 2 189 1 
249 1 269 1 253 1 42 1 161 3 139 1 116 1 294 1 141 2 279 1 27 1 123 1 124 1 200 1 173 1 262 1 303 1 308 1 327 1 354 1 286 1 31 1 59 1 156 2 34 1 88 1 361 1 132 1 189 1 
251 3 161 19 338 1 19 1 195 2 234 1 5 1 141 4 279 2 296 1 123 2 100 1 200 3 72 1 283 1 173 3 102 2 222 1 303 3 308 2 354 3 127 1 31 3 286 6 183 2 156 9 88 2 61 1 132 10 189 3 
251 2 161 26 338 2 19 2 195 2 141 6 24 1 279 3 25 2 123 3 98 1 100 1 200 2 72 2 283 1 173 3 102 4 222 2 303 3 308 3 307 1 354 2 241 1 80 1 127 1 286 4 31 3 183 1 156 14 88 3 61 1 132 12 318 1 189 2 
191 1 234 1 195 4 141 6 279 3 98 1 100 1 200 5 149 1 283 1 102 4 241 1 106 1 286 8 156 20 61 1 251 4 161 41 338 3 19 2 24 1 25 1 296 1 123 3 350 1 299 1 72 3 173 5 222 1 303 4 304 1 308 3 307 1 177 1 354 4 80 1 127 1 31 4 183 1 88 3 132 21 189 4 318 1 
191 1 251 4 161 38 338 3 19 2 195 4 234 1 141 8 24 1 279 4 25 2 296 1 123 4 98 1 299 1 350 1 100 1 149 1 200 4 72 3 283 1 173 5 102 4 222 1 303 4 304 1 177 1 307 1 308 4 354 3 241 1 106 1 80 1 127 1 31 4 286 7 183 1 156 20 88 4 61 1 132 18 318 1 189 3 
191 1 251 7 161 52 338 2 19 1 195 4 234 2 141 4 24 1 279 2 25 1 123 2 98 1 299 1 350 1 100 1 149 1 200 8 72 4 283 1 173 8 102 4 222 1 303 7 304 1 307 1 308 2 354 7 241 1 106 1 80 1 81 2 127 1 31 7 286 14 183 1 156 27 88 2 61 1 132 25 318 1 189 7 
46 1 292 1 8 1 136 1 244 1 43 1 210 1 285 1 71 1 321 1 
69 1 339 1 
46 1 57 1 276 1 244 1 43 1 210 1 71 1 242 1 321 1 
250 1 136 1 226 1 43 1 178 1 285 1 153 1 321 1 107 1 46 1 23 1 8 1 84 1 244 1 287 2 210 1 71 1 158 1 
250 1 136 1 226 1 43 1 178 1 285 1 153 1 321 1 107 1 46 1 23 1 8 1 84 1 244 1 287 2 210 1 71 1 158 1 
250 1 136 1 226 1 43 1 178 1 285 1 153 1 321 1 107 1 46 1 23 1 8 1 84 1 244 1 287 2 210 1 71 1 158 1 
47 1 44 1 188 1 
47 1 44 1 188 1 
248 1 4 1 
248 1 44 1 4 1 
319 1 341 1 
269 2 291 1 319 1 42 2 43 1 115 1 339 1 341 1 321 1 46 1 23 1 294 2 69 1 347 1 71 1 226 1 327 2 178 1 107 1 311 1 155 1 313 1 206 1 244 1 287 1 361 2 210 1 
47 1 188 1 
248 1 44 1 4 1 
39 1 192 1 15 2 336 2 253 1 42 2 161 2 194 1 344 1 141 2 279 1 123 1 146 1 297 1 124 1 238 1 262 1 265 2 327 2 308 1 358 1 29 2 359 1 207 1 360 1 156 1 86 1 88 1 361 2 186 1 132 1 
282 1 201 1 336 2 230 1 63 1 271 1 203 1 265 2 67 1 29 2 83 1 58 1 360 1 218 1 142 2 278 1 86 1 35 1 70 1 
38 1 282 1 336 1 63 1 271 1 203 1 265 1 67 1 29 1 83 1 58 1 360 1 142 2 278 1 35 1 86 1 70 1 
336 1 150 1 265 1 66 1 358 1 312 1 29 1 360 1 218 1 143 1 185 1 86 1 70 1 297 1 
282 1 336 1 230 1 63 1 271 1 203 1 265 1 67 1 29 1 83 1 58 1 360 1 218 1 142 2 278 1 35 1 86 1 70 1 
353 1 
117 1 68 1 180 1 229 1 84 1 295 1 219 1 
252 1 162 1 23 1 68 1 117 1 219 1 235 1 145 1 147 1 101 1 226 1 184 1 84 2 330 1 288 1 247 1 317 1 
40 6 229 1 96 2 45 1 138 1 322 2 50 2 49 2 235 6 147 4 200 2 101 5 201 1 13 1 202 2 239 6 55 3 243 2 330 3 247 4 209 2 332 1 289 2 336 3 162 12 256 2 20 2 23 5 117 2 68 8 219 9 258 2 169 2 297 3 173 2 223 1 226 5 175 2 303 2 265 3 73 1 266 3 355 1 358 10 312 1 29 3 180 1 31 2 360 4 184 4 84 8 86 3 317 4 189 2 
40 5 338 1 272 1 162 6 195 1 322 1 23 1 68 5 117 2 24 1 219 8 235 3 258 1 147 2 99 1 98 1 200 2 72 1 101 1 173 2 226 1 202 2 303 2 239 5 307 1 241 1 80 1 31 2 330 1 184 2 84 5 247 2 332 1 317 2 189 2 
269 1 191 1 16 1 42 1 322 1 23 1 294 1 68 2 166 1 219 2 147 1 350 1 149 1 200 1 260 1 173 2 226 1 202 2 327 1 310 1 79 1 182 1 184 1 59 1 361 1 247 1 129 1 317 1 
229 1 180 1 68 1 117 1 184 1 84 1 219 1 247 1 147 1 317 1 
173 2 40 5 202 2 303 2 239 5 96 1 162 10 322 1 68 5 31 2 84 5 219 5 235 5 189 2 200 2 
101 1 23 1 117 1 84 1 226 1 330 1 
1 1 336 4 66 1 138 1 23 3 68 2 198 1 219 2 280 1 258 2 297 1 147 1 101 4 226 3 150 1 265 4 355 2 358 1 29 4 312 2 245 1 360 1 184 2 330 2 86 1 157 1 247 2 332 2 317 2 
269 2 336 1 42 3 161 1 231 1 294 2 7 1 141 2 166 1 279 1 123 1 297 1 124 1 148 1 171 1 262 1 265 1 308 1 327 2 266 1 29 1 312 1 358 1 206 1 359 1 360 1 59 2 86 1 361 3 109 1 88 1 132 1 
40 2 239 2 162 4 68 2 117 2 184 1 84 4 219 1 235 2 247 1 258 1 332 1 147 1 317 1 299 1 
46 1 301 1 321 1 
46 1 301 1 321 1 
46 1 8 1 74 1 341 1 321 1 
46 1 301 1 321 1 
46 1 181 1 321 1 
46 1 181 1 321 1 
46 1 181 1 321 1 
46 1 321 1 
244 1 71 1 
173 1 191 1 251 2 304 1 161 8 308 2 354 1 106 1 141 4 286 3 156 4 279 2 25 1 88 2 123 2 132 4 299 1 350 1 200 1 149 1 
191 1 173 1 251 2 304 1 161 6 106 1 286 2 295 1 156 3 132 3 299 1 350 1 149 1 200 1 
173 1 251 1 303 1 308 1 161 4 354 1 293 1 141 2 286 2 31 1 279 1 156 2 88 1 123 1 132 2 200 1 189 1 
72 1 173 1 251 1 303 1 161 7 338 1 354 1 195 2 234 1 31 1 286 2 156 3 132 4 200 1 189 1 
191 1 251 5 94 1 161 23 234 1 195 2 141 4 279 2 25 2 123 2 299 1 350 2 149 2 200 3 72 2 173 3 303 2 304 1 308 2 354 4 106 1 81 1 286 9 31 2 156 11 60 1 88 2 132 12 189 2 
161 1 132 1 195 1 
72 1 156 1 161 1 
173 1 251 2 303 1 308 1 161 6 354 1 96 1 293 1 141 2 31 1 286 3 279 1 156 3 88 1 123 1 132 3 189 1 200 1 
251 1 161 12 338 1 195 1 141 2 24 1 279 1 123 1 98 1 200 2 72 1 173 2 303 2 308 1 307 1 354 1 241 1 80 1 127 1 31 2 286 2 156 6 88 1 132 6 189 2 
191 1 173 1 251 1 161 6 354 1 286 2 156 3 132 3 350 1 200 1 149 1 
251 1 94 1 304 1 161 3 308 1 354 1 106 1 141 2 286 2 156 1 279 1 25 1 88 1 123 1 132 2 350 1 149 1 
191 1 173 2 251 3 308 1 161 10 354 2 79 1 127 1 141 2 286 5 279 1 156 5 88 1 123 1 132 5 350 2 149 2 200 2 
173 1 303 1 308 1 161 2 354 1 127 1 141 2 286 1 279 1 156 2 88 1 123 1 
173 1 251 1 303 1 308 1 161 4 354 1 127 1 141 2 286 2 31 1 279 1 156 2 88 1 123 1 132 2 200 1 189 1 
251 1 94 1 161 3 308 3 354 1 127 1 141 6 286 2 279 3 156 1 25 1 88 3 296 1 123 3 132 2 350 1 149 1 
191 2 270 1 251 7 94 1 161 34 338 1 195 4 234 1 293 1 141 10 279 5 25 2 296 1 123 5 299 1 350 3 149 3 200 5 72 3 173 5 303 3 304 1 305 1 308 5 354 5 267 1 106 1 127 1 31 3 286 12 156 16 88 5 132 18 189 3 
191 1 251 2 161 8 338 1 195 1 141 2 279 1 123 1 98 1 299 1 350 1 200 1 149 1 72 1 173 1 304 1 308 1 106 1 127 1 286 2 156 4 88 1 132 4 
191 1 251 2 161 11 338 1 195 2 234 1 293 1 141 4 279 2 123 2 98 1 299 1 350 1 200 1 149 1 72 1 173 2 303 1 304 1 308 2 354 1 106 1 127 1 31 1 286 3 156 6 88 2 132 5 
191 1 251 3 161 19 338 1 195 1 293 1 141 6 24 1 279 3 25 1 123 3 98 1 299 1 350 1 149 1 200 3 72 1 173 3 303 2 304 1 308 3 307 1 354 1 241 1 106 1 80 1 127 1 31 2 286 4 156 9 88 3 132 10 189 2 
191 1 251 3 161 17 338 1 195 1 293 1 141 6 24 1 279 3 25 1 123 3 98 1 299 1 350 1 149 1 200 2 72 1 173 3 303 2 304 1 308 3 307 1 354 2 241 1 106 1 80 1 127 1 31 2 286 5 156 10 88 3 132 7 189 1 
191 1 251 2 161 8 338 1 195 1 141 2 279 1 123 1 98 1 299 1 350 1 200 1 149 1 72 1 173 1 304 1 308 1 106 1 127 1 286 2 156 4 88 1 132 4 
251 1 161 12 338 1 195 1 141 2 24 1 279 1 123 1 98 1 200 2 72 1 173 2 303 2 308 1 307 1 354 1 241 1 80 1 127 1 31 2 286 2 156 6 88 1 132 6 189 2 
191 1 251 3 161 18 338 1 195 1 293 1 141 8 24 1 279 4 25 2 123 4 98 1 299 1 350 1 149 1 200 2 72 1 173 3 303 2 304 1 308 4 307 1 354 2 241 1 106 1 80 1 127 1 31 2 286 5 156 10 88 4 132 8 189 1 
251 3 161 16 338 1 195 1 141 8 24 1 279 4 25 2 296 1 123 4 98 1 200 2 72 1 173 3 303 3 308 4 307 1 354 3 241 1 80 1 127 1 31 3 286 6 156 9 88 4 132 7 189 2 
191 1 173 1 251 3 304 1 161 7 354 3 106 2 286 6 156 3 132 4 350 3 200 1 149 3 
191 1 251 3 161 18 338 1 195 1 141 8 24 1 279 4 25 2 296 1 123 4 98 1 299 1 350 1 149 1 200 2 72 1 173 3 303 2 304 1 308 4 307 1 354 1 241 1 106 1 80 1 127 1 31 2 286 4 156 10 88 4 132 8 189 1 
52 1 165 1 206 1 160 1 42 1 361 1 327 1 
52 1 160 1 42 1 327 1 233 1 21 1 165 1 206 1 33 1 168 1 361 1 110 1 
358 1 29 1 312 1 336 1 360 1 150 1 295 1 86 1 265 1 297 1 66 1 
269 1 336 1 42 2 265 1 266 1 327 1 358 1 294 1 312 1 29 1 206 1 360 1 86 1 109 1 361 2 297 1 134 1 171 1 
269 2 336 1 175 1 214 1 42 2 265 1 266 2 327 2 355 1 358 3 294 1 29 1 206 1 182 1 49 1 360 1 86 1 109 1 361 2 297 2 133 1 134 1 171 1 
269 2 336 2 214 1 42 2 294 1 346 1 49 1 297 2 175 1 265 2 306 1 327 2 266 2 355 1 29 2 358 3 206 1 182 1 360 1 86 1 361 2 109 1 133 1 134 1 
336 3 256 1 196 1 23 2 117 1 49 1 297 1 298 1 101 1 226 2 175 1 265 3 306 1 266 1 355 1 55 1 243 1 358 4 29 3 312 1 360 1 84 1 86 1 
101 1 336 3 175 1 226 2 265 3 306 1 266 1 355 1 55 1 256 1 312 1 23 2 29 3 358 4 243 1 117 1 84 1 49 1 360 1 86 1 209 1 297 1 
29 1 336 1 315 1 360 1 86 1 265 1 
53 1 39 1 201 1 261 1 15 1 336 7 263 1 203 1 265 7 73 1 266 1 152 1 312 2 29 6 358 3 197 1 315 1 360 3 86 2 297 2 334 1 
269 1 191 1 192 1 42 2 231 1 139 1 7 1 141 4 279 2 149 1 200 1 201 1 327 1 106 1 206 2 286 2 156 3 109 1 336 1 253 1 251 2 161 6 163 1 116 1 294 1 119 1 123 2 124 2 297 1 350 1 299 1 171 1 173 1 262 2 265 1 304 1 308 2 266 1 29 1 358 1 360 1 34 1 86 1 361 2 88 2 132 3 134 1 
229 1 336 1 256 1 138 1 20 1 23 3 117 1 68 1 50 1 219 1 169 1 147 2 101 2 226 3 265 1 55 1 29 1 312 1 155 1 358 2 243 1 180 1 84 1 184 2 330 1 247 2 209 1 317 2 
201 1 336 2 223 1 265 2 73 1 266 1 243 1 29 2 358 2 315 1 360 2 86 1 297 1 
201 1 336 4 150 1 265 4 306 1 66 1 312 1 29 4 358 1 360 1 86 1 297 1 172 1 
53 1 336 2 320 1 265 2 266 1 355 1 328 1 29 2 358 1 314 1 197 1 360 2 86 1 297 1 
67 1 29 1 312 1 83 1 336 1 360 1 142 1 278 1 86 1 265 1 
358 1 39 1 29 2 201 1 336 2 360 1 86 1 203 1 265 2 297 1 186 1 
201 1 39 1 336 5 263 1 150 1 265 5 355 1 66 1 312 1 29 4 358 3 360 2 86 2 297 2 334 1 172 1 
201 1 39 1 336 5 337 1 263 1 150 1 265 5 355 1 66 1 312 1 29 4 358 3 360 2 86 2 297 2 172 1 
269 1 336 1 42 2 265 1 266 1 327 1 358 1 294 1 312 1 29 1 206 1 346 1 360 1 86 1 109 1 361 2 297 1 134 1 
53 1 261 1 336 1 265 1 73 1 266 1 355 1 29 1 358 1 197 1 360 2 86 1 297 1 
357 1 207 1 42 1 361 1 327 1 194 1 238 1 151 1 343 1 
275 1 137 1 151 1 
357 1 206 1 128 1 151 1 343 1 
300 1 226 2 214 1 137 1 151 1 256 1 217 1 343 2 357 2 155 1 23 2 117 1 275 1 206 1 182 1 84 1 128 2 144 1 133 1 
295 1 254 1 17 1 221 1 
224 1 324 1 254 1 17 1 3 1 221 1 259 1 
323 1 224 1 227 1 
2 1 224 3 41 2 254 1 17 1 3 1 215 1 76 1 324 3 85 1 221 1 259 1 
224 2 324 2 254 1 17 1 236 1 3 1 221 1 10 1 259 1 
302 1 224 1 254 1 3 1 76 1 273 1 83 1 324 1 58 1 142 1 259 1 
224 1 324 1 254 1 3 1 221 1 76 1 259 1 
224 1 324 1 17 1 3 1 221 2 76 1 259 1 
56 1 140 1 224 2 324 2 254 1 3 2 221 1 76 1 131 1 259 2 
302 1 224 3 176 1 17 1 254 2 3 1 255 1 76 1 324 3 236 2 221 1 348 1 259 1 
224 2 271 1 254 1 17 1 3 1 76 1 240 1 67 1 83 1 324 2 58 1 142 2 236 1 221 1 259 1 
302 1 224 4 17 1 254 2 3 2 255 1 309 1 76 1 324 4 236 2 221 1 10 1 259 2 
224 1 324 1 254 1 17 1 3 1 221 1 76 1 259 1 
302 1 2 1 224 4 41 1 17 2 254 3 3 1 255 1 340 1 324 4 85 1 236 2 221 2 259 1 
125 1 224 2 254 1 95 1 17 1 3 1 76 1 324 2 236 1 51 1 221 1 259 1 
2 1 224 3 41 2 254 1 17 1 3 1 76 1 257 1 324 3 85 2 221 1 259 1 
6 1 254 2 87 2 170 1 
224 1 324 1 108 1 3 1 76 1 259 1 
224 2 324 2 254 1 17 1 236 1 3 1 221 1 348 1 76 1 259 1 
91 1 
224 1 324 1 254 1 17 1 3 1 221 1 76 1 259 1 
224 3 41 1 17 1 254 1 3 1 76 1 324 3 236 1 221 1 348 1 259 1 
302 1 254 1 255 1 340 1 
254 1 221 1 

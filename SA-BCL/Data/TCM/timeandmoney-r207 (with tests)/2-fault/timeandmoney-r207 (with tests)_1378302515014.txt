#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 96 10 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 96 196 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 96 196 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 96 196 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 96 196 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 22 2 77 2 24 2 176 1 204 1 123 1 27 1 150 1 155 2 58 1 61 2 282 1 254 3 183 6 235 5 160 9 185 9 11 1 191 2 64 1 161 1 114 4 15 1 194 1 264 2 18 1 92 1 
1 1 22 2 77 2 24 2 176 1 204 1 123 1 27 1 150 1 155 2 58 1 61 2 282 1 254 3 183 6 235 5 160 9 185 9 11 1 191 2 64 1 161 1 114 4 15 1 194 1 264 2 18 1 92 1 
1 1 22 2 77 2 24 2 176 1 204 1 123 1 27 1 150 1 155 2 58 1 61 2 282 1 254 4 183 7 235 6 160 10 185 10 11 1 191 2 64 1 161 1 114 5 15 1 194 1 264 2 18 1 92 1 
1 1 22 2 77 2 24 2 176 1 204 1 123 1 27 1 150 1 155 2 58 1 61 2 282 1 254 2 183 4 235 4 160 7 185 7 11 1 191 1 64 1 161 1 114 3 15 1 194 1 264 2 18 1 
254 1 183 3 1 1 235 3 22 1 185 4 160 4 191 2 77 1 24 1 114 2 204 1 15 1 264 1 150 1 92 1 61 1 282 1 
349 1 0 1 235 1 1 1 185 2 160 2 77 1 24 1 161 1 204 1 264 1 150 1 55 1 58 1 155 1 61 1 
254 1 183 1 1 1 235 2 185 3 160 3 11 1 24 2 114 1 204 1 150 1 155 1 61 2 
1 1 22 1 77 1 24 2 204 1 150 1 178 1 155 1 61 2 282 1 254 3 183 7 235 5 160 9 185 9 11 1 191 2 64 1 114 4 15 1 194 1 264 1 166 1 92 1 
1 1 22 1 77 1 24 2 204 1 150 1 178 1 155 1 61 2 282 1 254 3 183 7 235 5 160 9 185 9 11 1 191 2 64 1 114 4 15 1 194 1 264 1 166 1 92 1 
283 1 51 1 126 1 
283 1 206 1 259 2 
124 2 89 1 72 2 137 2 91 2 351 1 30 2 286 2 
72 2 316 1 95 1 248 2 320 1 48 2 124 2 80 1 277 1 231 1 179 2 369 1 300 2 30 2 281 1 31 1 129 1 130 1 325 1 132 1 65 1 378 1 351 1 193 2 331 1 286 2 308 1 218 1 69 1 89 1 263 1 288 1 265 1 137 3 290 1 91 3 169 1 
124 1 72 1 137 1 151 1 209 1 91 1 358 1 351 1 30 1 286 1 
234 1 348 1 283 1 142 1 225 1 237 1 286 1 261 1 342 1 137 1 126 1 209 1 91 1 180 1 
348 2 283 1 72 1 142 2 225 1 286 1 261 1 342 1 124 1 137 1 126 1 209 1 91 1 180 1 30 1 
348 1 142 1 353 1 159 1 287 1 
348 2 283 1 173 1 142 2 353 1 159 1 126 1 208 1 
348 1 142 1 353 1 
348 1 72 1 142 1 159 1 351 1 286 1 124 1 197 1 137 1 151 1 209 1 91 1 358 1 30 1 
283 1 
348 2 283 1 315 1 142 2 353 1 159 1 126 1 208 1 
348 5 283 1 142 5 336 1 284 1 159 2 186 1 25 2 294 1 162 1 310 1 125 1 198 2 353 2 126 1 81 1 279 2 208 1 200 1 
89 1 51 1 
72 1 286 2 297 1 124 1 89 2 137 2 91 2 19 1 30 1 
97 1 70 1 9 1 
316 1 325 1 132 1 320 1 48 1 308 1 89 1 137 1 265 1 277 1 91 1 179 1 369 1 300 1 168 1 31 1 
72 1 316 1 325 1 337 1 132 1 320 1 286 1 48 1 308 1 309 1 124 1 277 1 265 1 137 2 369 1 91 2 179 1 300 1 31 1 9 1 
124 3 89 1 72 3 137 3 337 1 91 3 30 1 286 3 
124 1 72 1 137 1 209 1 91 1 358 1 286 1 
124 1 72 1 137 1 209 1 91 1 19 1 30 1 286 1 297 1 
72 3 142 1 316 1 225 1 337 1 248 2 320 1 48 1 342 1 124 3 80 1 277 1 209 1 369 1 179 1 180 1 300 1 31 1 281 1 30 2 348 1 256 1 130 1 325 1 132 1 378 1 351 1 193 1 331 1 286 3 261 1 308 1 218 1 309 1 69 1 89 1 288 1 265 1 137 4 290 1 19 1 91 4 169 1 170 1 
124 1 89 1 72 1 137 2 337 1 91 2 237 1 146 1 286 2 
348 1 283 1 72 3 142 1 225 1 337 2 13 1 286 3 261 1 342 1 309 1 124 3 137 3 209 1 19 1 91 3 180 1 30 1 170 1 
72 2 337 1 286 2 124 2 137 2 19 1 91 2 30 1 70 1 9 1 
316 1 325 1 132 1 320 1 48 1 308 1 89 1 137 1 265 1 277 1 91 1 179 1 369 1 300 1 31 1 
316 1 325 1 320 1 48 1 333 1 89 1 380 1 137 1 265 1 277 1 91 1 179 1 369 1 300 1 31 1 
73 1 23 1 76 1 144 1 97 2 248 2 365 1 80 1 231 2 7 1 8 1 181 1 9 2 130 1 378 1 193 4 218 1 288 1 16 1 290 2 20 1 292 1 169 1 70 2 
124 1 72 1 137 1 104 1 225 1 209 1 91 1 286 1 
72 4 111 1 337 2 237 1 146 1 286 5 124 4 309 1 89 1 137 5 90 1 91 5 19 1 30 1 
124 2 72 2 137 2 104 1 209 1 91 2 358 1 286 2 
285 1 128 1 
285 1 128 1 
233 1 49 1 
233 1 49 1 
233 1 49 1 
285 1 128 1 330 1 
285 1 128 1 330 1 
285 1 128 1 273 1 
285 2 327 1 128 2 233 1 156 1 49 1 
285 1 128 1 330 1 
236 1 285 1 128 1 
236 1 285 1 128 1 
236 1 285 1 128 1 
86 1 348 2 283 1 142 2 43 3 110 2 285 2 327 1 122 2 329 1 260 2 250 1 102 1 205 1 56 2 291 2 128 2 83 1 33 1 
348 1 72 2 142 1 43 1 110 1 285 1 317 1 2 1 122 1 228 1 286 2 273 1 306 1 124 2 89 1 334 1 137 2 56 1 38 1 91 2 291 1 128 1 83 1 32 1 
22 1 264 1 77 1 
264 1 55 1 77 1 
22 2 55 1 77 3 203 1 67 1 60 1 
22 1 345 1 55 1 77 2 67 1 60 1 
22 1 55 1 77 2 67 2 60 1 
142 5 73 1 317 1 2 1 76 1 25 1 145 1 294 3 365 1 103 2 206 1 126 1 279 1 208 1 181 1 348 5 34 1 283 2 159 4 131 1 259 3 213 1 306 1 162 1 163 2 310 2 311 2 198 1 353 1 356 1 39 1 41 1 
142 9 73 3 121 5 76 3 3 1 25 2 294 8 364 1 365 3 103 6 81 1 206 3 126 1 279 2 154 1 208 1 181 3 348 9 34 2 283 5 159 7 259 9 115 1 306 4 162 1 262 1 163 6 310 6 353 6 198 2 287 5 243 1 356 1 39 2 41 3 
142 3 73 1 76 1 25 1 145 1 294 3 365 1 103 2 126 1 206 2 81 1 279 1 181 1 348 3 34 1 283 3 159 2 213 1 259 4 306 1 163 2 311 1 310 2 198 1 39 1 41 1 
142 4 73 2 76 2 25 1 145 1 294 5 365 2 103 4 126 1 206 3 81 1 279 1 154 1 181 2 348 4 34 1 283 4 159 3 259 7 213 1 306 2 262 1 163 4 311 2 310 4 198 1 243 1 39 1 41 2 
184 1 51 1 320 1 
199 1 320 1 
85 1 
277 1 320 1 
184 2 240 1 277 1 265 1 320 3 253 1 
277 1 265 1 320 1 
165 1 320 1 
269 1 140 1 73 1 144 3 215 1 46 1 193 7 340 1 149 1 290 3 346 1 152 2 231 4 8 2 370 1 181 1 106 1 
269 1 140 1 73 1 144 3 215 1 46 1 193 7 340 1 149 1 290 3 346 1 152 2 231 4 8 2 370 1 181 1 106 1 
269 1 87 1 140 1 73 1 144 3 215 1 46 1 193 7 340 1 149 1 290 3 346 1 152 2 231 4 8 2 370 1 181 1 106 1 
269 1 140 1 73 4 76 3 144 10 46 2 248 2 340 1 26 1 149 2 80 1 365 3 207 3 231 16 152 3 346 2 8 5 370 2 106 1 181 4 107 4 373 1 255 1 130 1 215 5 66 1 378 1 193 31 288 1 290 15 17 1 222 1 41 3 360 1 
140 1 73 1 144 4 248 4 46 1 341 1 340 1 149 1 80 2 100 1 231 5 152 2 346 1 8 3 370 1 181 1 106 1 130 2 378 2 215 1 66 1 193 9 288 2 290 4 
1 1 22 1 143 1 77 2 24 1 203 1 204 1 48 1 363 1 150 1 55 1 179 1 369 1 300 1 82 1 155 1 31 1 61 1 183 1 374 1 235 1 62 1 160 2 185 2 375 1 303 1 88 1 264 1 266 1 313 1 
1 1 22 1 143 1 77 2 24 1 203 1 48 1 363 1 321 1 150 1 55 1 179 1 369 1 300 1 155 1 31 1 61 1 183 2 374 1 235 1 62 1 160 3 185 3 375 1 303 1 264 1 266 1 267 1 313 1 359 1 
1 1 22 1 77 2 203 1 48 1 363 1 150 1 55 1 179 1 369 1 155 1 300 1 31 1 183 2 235 1 62 1 160 2 185 2 375 1 303 1 264 1 266 1 267 1 313 1 359 1 
42 1 316 1 109 1 185 1 160 1 375 2 303 2 24 1 320 1 78 1 48 1 6 1 277 1 321 1 266 2 369 1 57 1 179 1 155 2 300 1 59 1 31 1 61 1 
374 1 22 1 62 1 143 1 185 1 160 1 375 1 303 1 88 1 77 2 24 1 203 1 204 1 363 1 48 1 264 1 55 1 267 1 266 1 313 1 369 1 179 1 155 1 300 1 31 1 61 1 
252 1 
142 5 339 1 294 2 98 1 48 2 342 1 50 2 52 2 343 4 206 2 53 1 208 3 209 1 57 1 300 2 157 2 348 5 258 1 112 1 259 2 216 1 305 2 261 1 162 1 310 2 353 6 118 2 357 1 224 2 316 2 225 1 361 1 25 1 320 1 78 1 277 1 126 1 279 1 280 2 179 2 369 1 180 1 31 1 34 1 234 1 283 2 187 1 376 1 237 1 286 1 198 1 137 1 241 1 91 1 381 1 
315 1 142 3 225 1 342 1 343 2 53 1 209 1 280 1 208 1 180 1 234 1 348 3 258 1 376 1 216 1 237 1 286 1 261 1 353 2 137 1 91 1 357 1 
315 1 142 3 225 1 342 1 343 3 126 1 53 1 209 1 208 1 180 1 234 1 348 3 283 1 258 1 376 1 216 1 237 1 286 1 261 1 353 1 137 1 118 1 91 1 357 1 
315 1 142 3 224 1 225 1 342 1 343 3 126 1 53 1 208 1 209 1 280 1 180 1 234 1 348 3 283 1 258 1 376 1 216 1 237 1 286 1 261 1 353 2 137 1 118 1 91 1 357 1 
142 5 294 1 342 1 50 2 343 6 52 2 206 2 53 1 209 1 208 3 301 1 348 5 157 2 258 1 216 1 305 2 261 1 162 1 310 1 353 7 118 4 357 1 268 1 315 1 224 4 225 1 361 1 25 1 126 5 279 1 280 4 180 1 234 1 283 5 187 1 376 1 133 1 237 1 286 1 379 1 198 1 137 1 91 1 201 1 
142 4 294 1 98 1 342 1 50 2 343 4 52 2 206 2 53 1 209 1 208 2 348 4 157 2 258 1 259 2 216 1 305 2 261 1 162 1 310 1 353 4 118 2 357 1 224 2 225 1 361 1 25 1 126 1 279 1 280 2 180 1 234 1 283 2 187 1 376 1 237 1 286 1 198 1 137 1 91 1 
224 2 142 4 225 1 361 1 25 1 294 1 342 1 50 2 52 2 343 4 126 1 206 2 53 1 279 1 280 2 208 2 209 1 180 1 301 1 157 2 234 1 348 4 283 1 258 1 187 1 376 1 216 1 237 1 305 2 286 1 261 1 379 1 162 1 310 1 353 4 198 1 137 1 118 2 91 1 357 1 201 1 
224 2 142 4 225 1 361 1 25 1 294 1 342 1 50 2 52 2 343 4 126 1 206 2 53 1 279 1 280 2 208 2 209 1 180 1 301 1 157 2 234 1 348 4 283 1 258 1 187 1 376 1 216 1 237 1 305 2 286 1 261 1 379 1 162 1 310 1 353 4 198 1 137 1 118 2 91 1 357 1 201 1 
224 2 142 4 225 1 25 1 294 1 342 1 147 1 275 2 50 2 343 4 126 1 53 1 279 1 280 2 208 2 209 1 180 1 323 2 234 1 348 4 283 1 158 1 258 1 187 1 259 2 376 1 216 1 237 1 305 2 286 1 261 1 379 1 162 1 310 1 353 4 198 1 137 1 220 1 118 2 91 1 357 1 
268 1 142 4 224 3 225 1 361 1 25 1 294 1 342 1 50 2 52 2 343 5 126 1 206 2 53 1 279 1 208 2 209 1 280 3 180 1 301 1 157 2 234 1 348 4 283 1 258 1 187 1 376 1 216 1 237 1 305 2 286 1 261 1 379 1 162 1 310 1 198 1 353 5 137 1 118 3 91 1 357 1 201 1 
268 1 142 4 224 3 225 1 361 1 25 1 294 1 342 1 50 2 52 2 343 5 126 1 206 2 53 1 279 1 208 2 209 1 280 3 180 1 301 1 157 2 234 1 348 4 283 1 258 1 187 1 376 1 216 1 237 1 305 2 286 1 261 1 379 1 162 1 310 1 198 1 353 5 137 1 118 3 91 1 357 1 201 1 
142 4 294 1 98 1 342 1 50 2 343 4 53 1 209 1 208 2 348 4 158 1 258 1 259 2 216 1 305 2 261 1 162 1 310 1 353 4 118 2 357 1 224 2 225 1 25 1 275 2 126 1 279 1 280 2 180 1 323 2 234 1 283 1 187 1 376 1 237 1 286 1 198 1 137 1 91 1 
140 1 73 1 144 2 97 1 46 1 248 2 340 1 80 1 51 1 231 3 152 1 8 2 370 1 106 1 181 1 9 1 130 1 378 1 193 6 218 1 89 2 288 1 290 3 20 1 169 1 70 1 
73 1 174 1 76 2 144 2 97 11 248 4 26 1 80 2 365 1 368 1 207 3 231 8 8 1 181 2 9 11 107 3 130 2 190 1 328 1 215 1 378 2 331 1 193 14 218 1 89 1 263 1 288 2 290 6 17 1 21 1 169 2 70 4 41 2 
72 1 337 1 248 2 124 1 80 1 368 1 153 1 231 1 209 1 130 1 378 1 331 1 193 2 286 1 332 1 218 1 309 1 89 1 263 1 137 1 288 1 290 1 164 1 91 1 169 1 70 1 93 1 
140 1 293 2 245 1 337 1 144 8 97 7 46 1 248 6 340 1 48 3 152 1 8 4 300 3 106 1 9 7 304 2 215 4 116 2 308 2 309 1 218 3 263 1 265 2 267 1 169 3 70 7 72 1 316 1 73 3 76 2 320 2 177 2 124 1 80 3 365 2 277 2 368 1 231 10 179 3 369 2 370 1 281 2 31 2 181 3 130 3 325 2 189 1 132 2 378 3 331 1 193 20 286 1 37 1 89 2 288 3 137 3 290 10 91 3 41 2 
72 1 316 2 337 1 248 4 296 1 320 3 4 1 48 7 78 1 124 1 80 2 276 1 277 2 231 1 369 2 179 8 57 1 347 1 82 1 300 8 31 2 130 2 214 1 65 2 378 2 193 2 331 1 286 1 135 1 218 2 263 1 137 1 288 2 290 1 267 1 91 1 20 1 167 1 169 2 
72 1 73 1 76 1 144 1 97 1 248 2 47 1 124 1 80 1 365 1 368 1 231 1 8 1 30 1 181 1 9 1 130 1 378 1 193 3 286 1 218 1 288 1 137 1 290 2 19 1 91 1 169 1 70 1 41 1 
130 1 23 1 76 1 144 1 215 1 97 1 378 1 248 2 193 2 218 1 80 1 288 1 231 2 20 1 169 1 181 1 70 1 9 1 
130 1 73 1 144 1 97 1 378 1 248 2 193 2 218 1 80 1 365 1 288 1 16 1 290 2 8 1 20 1 169 1 70 1 9 1 
73 1 76 1 144 2 97 2 248 2 80 1 365 1 231 2 8 1 181 1 9 2 130 1 378 1 215 1 193 4 218 1 288 1 290 2 20 1 169 1 70 2 41 1 
130 1 23 1 76 1 144 1 215 1 97 1 378 1 248 2 193 2 135 1 218 1 80 1 288 1 231 2 169 1 181 1 70 1 9 1 
130 1 73 1 144 1 97 1 378 1 248 2 193 2 135 1 218 1 80 1 365 1 288 1 16 1 290 2 8 1 169 1 70 1 9 1 
73 1 76 1 144 2 97 2 248 2 80 1 365 1 231 2 8 1 181 1 9 2 130 1 378 1 215 1 193 4 135 1 218 1 288 1 290 2 169 1 70 2 41 1 
73 1 130 1 76 1 144 2 215 1 97 2 378 1 248 2 193 4 218 1 365 1 80 1 288 1 290 2 231 2 8 1 169 1 181 1 70 2 9 2 41 1 
316 1 248 2 320 1 48 1 80 1 277 1 231 1 369 1 179 1 300 1 31 1 281 1 325 1 130 1 132 1 378 1 193 2 331 1 308 1 218 1 89 1 263 1 265 1 137 1 288 1 290 1 91 1 169 1 
316 1 248 2 320 1 48 1 80 1 277 1 231 1 369 1 179 1 300 1 31 1 325 1 130 1 14 1 378 1 193 2 331 1 333 1 218 1 89 1 380 1 263 1 265 1 137 1 288 1 290 1 91 1 169 1 
73 1 76 1 144 2 97 2 248 2 80 1 365 1 368 1 231 2 8 1 181 1 9 2 130 1 378 1 215 1 193 4 218 1 288 1 290 2 169 1 70 2 41 1 
73 1 293 1 76 1 144 2 97 2 248 2 320 1 48 1 365 1 80 1 277 1 231 2 369 1 179 1 8 1 300 1 82 1 181 1 31 1 281 1 9 2 325 1 130 1 132 1 215 1 378 1 193 4 308 1 218 1 265 1 137 1 288 1 290 2 91 1 169 1 70 2 41 1 
72 1 73 1 76 1 144 1 97 1 248 2 124 1 365 1 80 1 368 1 231 2 30 1 181 1 9 1 257 1 130 1 215 1 378 1 193 3 286 1 218 1 288 1 137 1 290 1 19 1 91 1 169 1 70 1 41 1 
73 1 96 1 76 1 246 1 144 2 248 4 26 1 80 2 100 1 229 1 365 1 207 1 231 4 8 1 181 1 107 2 130 2 10 1 188 1 378 2 215 1 193 9 352 1 117 1 288 2 290 5 17 1 335 1 41 1 
139 1 223 1 73 1 96 1 76 2 144 2 246 1 248 6 80 3 100 1 229 1 365 1 231 11 207 2 29 1 8 1 181 2 182 1 107 2 212 1 130 3 188 3 215 1 66 2 378 3 193 20 196 1 117 2 288 3 290 9 17 2 335 2 40 1 41 2 
73 1 96 1 76 1 246 1 144 2 248 4 26 1 80 2 100 1 229 1 365 1 207 1 231 4 8 1 181 1 107 2 130 2 188 1 378 2 215 1 193 9 352 1 196 1 117 1 288 2 290 5 17 1 335 1 41 1 
73 1 96 1 76 1 246 1 144 2 248 4 26 1 80 2 100 1 229 1 365 1 207 1 231 4 8 1 181 1 107 2 130 2 188 1 378 2 215 1 193 9 352 1 196 1 117 1 288 2 290 5 17 1 335 1 41 1 
140 1 139 1 223 1 73 7 96 1 76 6 246 1 144 12 46 1 248 4 340 1 26 2 80 2 100 1 229 1 365 6 152 1 207 4 231 24 29 1 8 6 370 1 106 1 181 7 182 1 107 4 212 1 130 2 188 3 66 1 378 2 215 6 193 46 196 1 117 1 288 2 290 22 17 2 335 1 21 2 40 1 41 6 
102 1 110 1 285 1 327 1 56 1 122 1 329 1 128 1 291 1 79 1 
228 1 273 1 
251 1 278 1 110 1 285 1 56 1 122 1 128 1 291 1 217 1 
86 1 348 1 283 1 142 1 43 2 110 1 285 1 327 1 122 1 329 1 260 1 250 1 102 1 205 1 56 1 291 1 128 1 83 1 
86 1 348 1 283 1 142 1 43 2 110 1 285 1 327 1 122 1 329 1 260 1 250 1 102 1 205 1 56 1 291 1 128 1 83 1 
86 1 348 1 283 1 142 1 43 2 110 1 285 1 327 1 122 1 329 1 260 1 250 1 102 1 205 1 56 1 291 1 128 1 83 1 
330 1 272 1 156 1 
330 1 272 1 156 1 
236 1 171 1 
236 1 156 1 171 1 
334 1 38 1 
72 2 142 1 43 1 317 1 122 1 2 1 228 1 250 1 273 1 124 2 56 1 128 1 32 1 348 1 159 1 110 1 285 1 260 1 238 1 286 2 306 1 89 1 334 1 137 2 91 2 291 1 38 1 
330 1 272 1 
236 1 156 1 171 1 
227 1 248 2 320 1 296 1 4 1 48 2 80 1 277 1 368 1 54 1 231 1 369 1 179 2 300 2 105 1 31 1 324 1 130 1 113 1 65 2 378 1 193 2 331 1 286 2 218 1 263 1 137 2 288 1 290 1 91 2 169 1 
374 1 22 1 62 1 244 1 375 1 77 2 203 1 338 1 48 2 264 1 55 1 267 1 313 1 369 1 179 2 300 2 82 1 31 1 119 1 
374 1 22 1 62 1 375 1 77 2 203 1 48 1 99 1 264 1 55 1 267 1 313 1 179 1 369 1 300 1 31 1 119 1 
316 1 244 1 375 1 320 1 48 1 78 1 6 1 277 1 138 1 369 1 179 1 57 1 300 1 31 1 
374 1 22 1 62 1 244 1 375 1 77 2 203 1 338 1 48 1 264 1 55 1 267 1 313 1 179 1 369 1 300 1 31 1 119 1 
28 1 
283 1 310 1 125 1 284 1 51 1 126 1 294 1 
348 1 157 1 283 2 142 1 259 1 361 1 25 1 294 1 162 1 310 1 353 1 198 1 52 1 126 1 206 1 279 1 208 1 
142 5 339 1 294 9 48 3 342 2 103 6 206 6 298 2 344 2 208 3 300 3 211 2 348 5 259 12 116 2 162 4 163 6 219 1 310 8 353 5 265 3 165 2 120 2 316 1 73 2 76 2 25 4 362 1 320 10 365 2 125 1 277 3 126 2 279 4 369 3 179 3 82 1 31 4 181 2 84 1 372 1 34 2 184 2 283 8 284 1 326 2 192 2 134 1 136 2 198 4 240 1 289 2 199 3 41 2 
270 1 142 1 223 1 73 2 74 1 76 2 25 2 339 1 294 8 365 2 103 5 206 3 126 2 344 2 279 2 207 1 208 1 29 1 181 2 182 1 107 1 34 1 212 1 348 1 283 5 259 6 162 2 163 5 310 5 353 1 198 2 17 1 120 1 40 1 41 2 
72 1 142 1 73 1 25 1 46 1 294 2 124 1 344 2 279 1 151 1 209 1 370 1 106 1 181 2 30 1 301 1 348 1 351 1 286 1 162 1 310 2 198 1 197 1 137 1 91 1 358 1 314 1 120 1 
283 1 284 1 25 1 294 1 162 1 125 1 310 1 198 1 126 1 279 1 
283 5 73 2 259 10 76 2 294 5 116 1 163 5 365 2 310 5 103 5 206 5 344 2 181 2 120 1 41 2 
348 1 283 1 142 1 353 1 126 1 208 1 
316 2 142 3 25 2 294 2 339 2 295 1 320 1 274 1 48 4 78 1 277 1 81 1 279 2 208 2 369 1 179 4 57 1 300 4 31 1 84 1 34 2 348 3 162 1 219 2 310 2 198 2 353 4 241 1 381 1 
72 2 316 1 248 2 320 1 48 1 124 2 80 1 277 1 179 1 369 1 300 1 30 2 281 1 31 1 130 1 325 1 132 1 378 1 351 1 193 1 331 1 286 2 308 1 69 1 218 1 89 1 288 1 137 3 265 1 290 1 91 3 169 1 
34 1 283 4 259 4 25 1 294 1 339 1 162 1 163 2 310 2 103 2 198 1 206 2 126 2 152 1 279 1 
366 1 110 1 56 1 
366 1 110 1 56 1 
110 1 354 1 56 1 329 1 38 1 
366 1 110 1 56 1 
110 1 36 1 56 1 
110 1 36 1 56 1 
110 1 36 1 56 1 
110 1 56 1 
285 1 128 1 
140 1 73 1 130 2 144 3 215 1 378 2 66 1 248 4 46 1 193 8 340 1 80 2 288 2 290 4 152 1 231 4 8 2 370 1 181 1 106 1 
140 1 73 1 144 2 46 1 193 6 340 1 51 1 290 3 152 1 231 3 8 2 370 1 106 1 181 1 
73 1 130 1 76 1 144 2 377 1 378 1 215 1 248 2 193 4 365 1 80 1 288 1 290 2 231 2 8 1 181 1 41 1 
73 1 76 1 144 2 215 1 193 7 26 1 365 1 290 4 17 1 207 1 231 3 8 1 181 1 107 2 41 1 
140 1 73 3 76 2 144 9 46 2 248 4 340 1 26 1 365 2 80 2 152 1 231 11 207 2 127 1 8 5 370 2 106 1 181 3 107 2 130 2 190 1 215 4 66 2 378 2 193 23 288 2 290 12 21 1 41 2 
290 1 193 1 107 1 
231 1 207 1 193 1 
130 1 73 1 76 1 377 1 144 3 378 1 215 1 248 2 193 6 116 1 80 1 365 1 288 1 290 3 231 3 8 2 181 1 41 1 
223 1 73 2 76 2 144 2 248 2 80 1 100 1 365 2 207 1 231 6 29 1 8 1 181 2 182 1 107 1 212 1 130 1 215 1 378 1 193 12 288 1 290 6 17 1 40 1 41 2 
73 1 144 2 215 1 46 1 193 6 290 3 231 3 8 1 370 1 106 1 181 1 
140 1 130 1 144 2 215 1 66 1 378 1 46 1 248 2 193 3 340 1 80 1 288 1 290 2 231 1 127 1 8 1 370 1 
130 1 73 2 144 5 378 1 215 2 248 2 46 2 193 10 80 1 100 1 288 1 290 5 231 5 8 3 314 1 370 2 106 1 181 2 
130 1 76 1 144 1 378 1 215 1 248 2 193 2 100 1 80 1 288 1 231 2 181 1 
73 1 130 1 76 1 144 2 378 1 215 1 248 2 193 4 365 1 100 1 80 1 288 1 290 2 231 2 8 1 181 1 41 1 
130 3 144 2 66 1 378 3 215 1 248 6 46 1 193 3 352 1 100 1 80 3 288 3 290 2 127 1 231 1 8 1 370 1 
140 1 73 5 76 3 144 12 46 3 248 10 340 1 26 1 80 5 100 1 365 3 152 1 127 1 207 3 231 16 8 7 370 3 106 2 181 5 107 4 255 1 130 5 377 1 66 2 378 5 215 5 193 34 352 1 288 5 290 18 17 1 222 1 360 1 41 3 
140 1 73 1 144 2 248 2 46 1 340 1 80 1 100 1 152 1 207 1 231 4 29 1 8 2 370 1 181 1 106 1 107 1 130 1 378 1 193 8 288 1 290 4 17 1 
140 1 73 1 76 1 144 3 46 1 248 4 340 1 26 1 100 1 80 2 152 1 207 1 231 6 29 1 8 2 370 1 106 1 181 2 107 2 130 2 377 1 378 2 215 1 193 11 288 2 290 5 17 1 41 1 
140 1 223 1 73 3 76 2 144 4 46 1 248 6 340 1 80 3 100 1 365 2 152 1 207 1 231 9 29 1 8 3 370 1 106 1 181 3 182 1 107 1 212 1 130 3 377 1 215 1 378 3 66 1 193 19 288 3 290 10 17 1 40 1 41 2 
140 1 223 1 73 2 76 2 144 5 46 1 248 6 340 1 80 3 100 1 365 1 152 1 207 1 231 10 29 1 8 3 370 1 106 1 181 3 182 1 107 1 212 1 130 3 377 1 66 1 215 2 378 3 193 17 288 3 290 7 17 1 40 1 41 2 
140 1 73 1 144 2 248 2 46 1 340 1 80 1 100 1 152 1 207 1 231 4 29 1 8 2 370 1 181 1 106 1 107 1 130 1 378 1 193 8 288 1 290 4 17 1 
223 1 73 2 76 2 144 2 248 2 80 1 100 1 365 2 207 1 231 6 29 1 8 1 181 2 182 1 107 1 212 1 130 1 215 1 378 1 193 12 288 1 290 6 17 1 40 1 41 2 
140 1 223 1 73 2 76 2 144 5 46 1 248 8 340 1 80 4 100 1 365 1 152 1 207 1 231 10 29 1 8 3 370 1 106 1 181 3 182 1 107 1 212 1 130 4 377 1 215 2 378 4 66 2 193 18 288 4 290 8 17 1 40 1 41 2 
223 1 73 2 76 3 144 6 248 8 100 1 80 4 365 2 207 1 231 9 29 1 8 3 181 3 182 1 107 1 212 1 130 4 215 3 378 4 66 2 193 16 352 1 288 4 290 7 17 1 40 1 41 3 
140 1 73 1 144 6 215 3 46 3 193 7 340 2 290 4 231 3 8 3 370 3 106 1 181 1 
140 1 223 1 73 2 76 2 144 4 46 1 248 8 340 1 100 1 80 4 365 1 152 1 207 1 231 10 29 1 8 3 370 1 106 1 181 3 182 1 107 1 212 1 130 4 215 1 378 4 66 2 193 18 352 1 288 4 290 8 17 1 40 1 41 2 
71 1 89 1 137 1 91 1 237 1 286 1 146 1 
71 1 172 1 89 1 137 1 242 1 94 1 91 1 237 1 68 1 286 1 146 1 202 1 
316 1 51 1 277 1 369 1 57 1 179 1 300 1 31 1 320 1 78 1 48 1 
72 1 316 1 325 1 337 1 320 1 286 1 48 1 308 1 124 1 89 1 277 1 265 1 137 2 91 2 179 1 369 1 300 1 31 1 
72 1 325 1 225 1 337 1 320 3 286 2 48 1 308 1 124 2 89 1 219 1 277 2 265 2 137 2 298 1 209 1 91 2 179 1 369 1 165 1 180 1 300 1 31 1 
72 1 225 1 337 1 320 3 48 2 124 2 367 1 277 2 298 1 209 1 369 1 179 2 300 2 180 1 31 1 325 1 286 2 333 1 89 1 219 1 137 2 265 2 91 2 165 1 
142 2 316 1 320 4 48 3 342 1 367 1 277 1 126 1 298 1 369 1 179 3 300 3 31 1 348 2 184 1 283 1 219 1 353 1 265 1 199 1 312 1 221 1 165 1 
348 2 283 1 184 1 316 1 142 2 320 4 48 3 342 1 219 1 353 1 367 1 277 1 265 1 289 1 126 1 298 1 199 1 179 3 369 1 165 1 300 3 31 1 
276 1 369 1 179 1 300 1 31 1 48 1 
316 2 350 1 65 1 214 1 319 1 296 1 320 3 48 6 195 1 276 1 240 1 265 1 277 2 267 1 179 7 369 2 347 1 82 1 300 7 167 1 31 3 
72 1 140 1 73 1 293 1 337 1 144 2 227 1 97 1 46 1 248 4 340 1 320 1 48 1 177 1 124 1 80 2 277 1 368 1 152 1 231 3 369 1 179 1 8 2 82 1 300 1 370 1 181 1 106 1 31 1 281 1 9 1 325 1 130 2 132 1 378 2 193 6 286 1 308 1 218 2 89 2 265 1 137 2 288 2 290 3 91 2 169 2 70 1 
316 1 142 3 25 2 294 1 320 2 48 1 342 1 125 1 126 1 279 2 208 1 179 1 300 1 84 1 211 1 348 3 283 1 184 1 284 1 159 1 192 1 162 2 136 1 310 1 198 2 353 2 289 1 199 1 
184 1 134 1 320 2 48 2 276 1 240 1 265 1 277 1 179 2 369 1 82 1 300 2 31 2 
316 1 320 1 48 4 78 1 367 1 277 1 179 4 57 1 369 1 300 4 82 1 31 1 210 1 
45 1 319 1 320 1 48 2 195 1 37 1 219 1 265 1 277 1 179 2 369 1 300 2 31 2 371 1 
316 1 264 1 55 1 77 1 313 1 369 1 179 1 300 1 31 1 48 1 
324 1 296 1 320 1 48 2 277 1 267 1 179 2 369 1 82 1 300 2 31 1 
316 1 214 1 296 1 320 3 78 1 48 4 219 1 277 2 57 1 179 5 369 2 300 5 82 1 347 1 31 2 210 1 
316 1 247 1 296 1 320 3 78 1 48 4 219 1 277 2 57 1 179 5 369 2 300 5 82 1 347 1 31 2 210 1 
72 1 316 1 325 1 337 1 320 1 286 1 48 1 333 1 124 1 89 1 277 1 265 1 137 2 91 2 179 1 369 1 300 1 31 1 
350 1 319 1 320 1 48 1 195 1 219 1 240 1 265 1 277 1 179 1 369 1 300 1 31 2 
318 1 226 1 113 1 286 1 239 1 137 1 54 1 91 1 105 1 
35 1 226 1 249 1 
239 1 89 1 12 1 318 1 226 1 
348 2 283 1 35 1 142 2 159 1 225 1 12 2 226 1 318 2 249 1 261 1 342 1 239 2 89 1 126 1 355 1 209 1 180 1 170 1 
235 1 1 1 51 1 150 1 
235 1 1 1 160 1 185 1 150 1 24 1 61 1 
160 1 303 1 155 1 
235 1 1 1 302 1 185 3 160 3 44 1 175 1 24 1 161 2 204 1 150 1 61 1 
183 1 235 1 1 1 160 2 185 2 150 1 191 1 24 1 61 1 
235 1 22 1 185 1 160 1 77 1 24 1 114 1 204 1 264 1 61 1 282 1 
235 1 1 1 160 1 185 1 24 1 204 1 61 1 
1 2 160 1 185 1 150 1 24 1 204 1 61 1 
235 1 1 1 108 1 185 2 160 2 75 1 24 2 204 1 148 1 61 2 
183 2 254 1 1 1 235 2 185 3 160 3 64 1 24 1 114 1 204 1 194 1 150 1 61 1 
183 1 235 1 1 1 22 1 185 2 160 2 77 2 24 1 203 1 204 1 307 1 264 1 150 1 55 1 61 1 
183 2 254 1 1 1 235 2 185 4 160 4 191 1 24 2 114 1 204 1 150 1 92 1 61 2 
235 1 1 1 160 1 185 1 150 1 24 1 204 1 61 1 
183 2 254 1 1 2 235 3 185 4 160 4 44 1 175 1 24 1 161 1 114 1 5 1 150 2 61 1 
183 1 235 1 1 1 185 2 160 2 63 1 24 1 204 1 230 1 150 1 166 1 61 1 
235 1 1 1 185 3 160 3 44 2 175 1 24 1 161 2 204 1 101 1 150 1 61 1 
235 2 299 2 271 1 322 1 
160 1 185 1 232 1 24 1 204 1 61 1 
183 1 235 1 1 1 160 2 185 2 150 1 64 1 24 1 204 1 61 1 
141 1 
235 1 1 1 160 1 185 1 150 1 24 1 204 1 61 1 
183 1 235 1 1 1 160 3 185 3 150 1 64 1 24 1 161 1 204 1 61 1 
254 1 235 1 114 1 5 1 
235 1 1 1 

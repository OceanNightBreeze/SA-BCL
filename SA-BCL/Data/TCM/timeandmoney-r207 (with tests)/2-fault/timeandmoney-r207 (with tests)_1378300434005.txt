#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (243,313,326) (243,313,326) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (243,313,326) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (243,313,326) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (170,342) (170,342) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (243,313,326) (243,313,326) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 270 1 315 1 149 2 246 2 293 6 40 1 322 1 251 1 126 2 349 2 252 9 372 1 111 5 301 2 87 1 231 3 374 1 355 4 377 1 356 1 378 9 135 1 71 1 357 2 195 1 308 2 27 1 
218 1 270 1 315 1 149 2 246 2 293 6 40 1 322 1 251 1 126 2 349 2 252 9 372 1 111 5 301 2 87 1 231 3 374 1 355 4 377 1 356 1 378 9 135 1 71 1 357 2 195 1 308 2 27 1 
218 1 270 1 315 1 149 2 246 2 293 7 40 1 322 1 251 1 126 2 349 2 252 10 372 1 111 6 301 2 87 1 231 4 374 1 355 5 377 1 356 1 378 10 135 1 71 1 357 2 195 1 308 2 27 1 
218 1 270 1 315 1 149 1 246 2 293 4 322 1 251 1 126 2 349 2 252 7 372 1 111 4 301 2 87 1 231 2 374 1 355 3 377 1 356 1 378 7 135 1 71 1 357 2 195 1 308 2 27 1 
252 4 218 1 111 3 301 1 231 1 355 2 315 1 356 1 378 4 149 2 135 1 246 1 357 1 293 3 40 1 322 1 349 1 126 1 
252 2 111 1 67 1 177 1 315 1 378 2 335 1 135 1 246 1 357 1 195 1 322 1 251 1 126 1 308 1 349 1 
252 3 111 2 231 1 355 1 377 1 315 1 378 3 135 1 246 2 357 2 293 1 322 1 308 1 
218 1 97 1 315 1 149 2 246 2 293 7 322 1 40 1 126 1 349 1 252 9 111 5 87 1 301 1 231 3 355 4 377 1 69 1 356 1 378 9 135 1 357 2 308 1 27 1 
218 1 97 1 315 1 149 2 246 2 293 7 322 1 40 1 126 1 349 1 252 9 111 5 87 1 301 1 231 3 355 4 377 1 69 1 356 1 378 9 135 1 357 2 308 1 27 1 
167 1 187 1 61 1 
167 1 73 1 261 2 
316 2 221 2 292 2 122 1 358 2 240 1 144 2 225 2 
56 1 309 1 198 2 116 1 361 2 238 1 122 1 240 1 311 2 7 1 144 3 269 1 99 1 123 1 316 2 367 1 151 1 221 3 292 2 318 1 320 1 78 2 38 2 183 1 181 1 225 2 42 1 127 1 298 1 155 1 277 1 84 1 352 1 353 1 330 1 358 2 286 1 
244 1 226 1 316 1 221 1 292 1 358 1 240 1 236 1 144 1 225 1 
167 1 187 1 21 1 31 1 144 1 190 1 244 1 271 1 161 1 221 1 381 1 305 1 358 1 275 1 
167 1 187 1 21 1 31 2 144 1 244 1 316 1 271 1 161 1 292 1 221 1 305 2 381 1 358 1 225 1 
158 1 268 1 305 1 31 1 289 1 
167 1 268 1 76 1 305 2 187 1 31 2 289 1 263 1 
305 1 31 1 289 1 
226 1 142 1 268 1 240 1 31 1 144 1 244 1 316 1 292 1 221 1 305 1 358 1 236 1 225 1 
167 1 
167 1 268 1 76 1 79 1 305 2 187 1 31 2 289 1 
167 1 168 1 4 1 257 1 57 1 268 2 76 1 187 1 20 2 31 5 110 1 331 1 289 2 145 1 147 1 305 5 216 2 106 1 196 2 
42 1 309 1 127 1 198 1 155 1 277 1 278 1 361 1 352 1 330 1 144 2 23 1 316 1 367 1 337 1 292 1 221 2 78 1 358 1 183 1 
122 1 61 1 
124 1 316 1 292 1 221 2 122 2 37 1 358 2 225 1 144 2 
337 1 370 1 174 1 
309 1 42 1 198 1 127 1 155 1 361 1 277 1 122 1 352 1 330 1 144 1 367 1 221 1 78 1 183 1 16 1 
23 1 316 3 221 3 292 3 122 1 358 3 225 1 144 3 
244 1 226 1 316 1 221 1 292 1 358 1 144 1 
124 1 244 1 316 1 221 1 292 1 37 1 358 1 144 1 225 1 
56 1 309 1 198 1 116 1 361 1 238 1 122 1 240 1 311 1 31 1 144 4 269 1 123 1 244 1 367 1 271 1 316 3 103 1 151 1 318 1 221 4 292 3 320 1 78 1 38 2 179 1 37 1 183 1 225 2 42 1 127 1 155 1 277 1 278 1 352 1 21 1 353 1 330 1 23 1 161 1 381 1 305 1 358 3 286 1 
23 1 360 1 316 1 221 2 292 1 122 1 358 2 275 1 144 2 
167 1 278 1 21 1 31 1 160 1 144 3 23 2 244 1 316 3 271 1 161 1 292 3 221 3 37 1 305 1 381 1 179 1 358 3 225 1 
23 1 316 2 337 1 221 2 292 2 37 1 358 2 174 1 144 2 225 1 
309 1 42 1 198 1 127 1 361 1 277 1 155 1 122 1 352 1 330 1 144 1 367 1 221 1 78 1 183 1 
309 1 198 1 254 1 127 1 361 1 277 1 155 1 157 1 122 1 352 1 330 1 144 1 221 1 78 1 183 1 
55 1 56 1 116 1 238 1 311 4 33 1 174 2 123 1 151 1 370 2 38 2 156 1 129 1 84 2 130 1 229 1 353 2 300 1 65 1 337 2 194 1 262 1 26 1 286 1 
244 1 297 1 316 1 221 1 292 1 21 1 358 1 144 1 
360 1 278 1 128 1 117 1 122 1 144 5 23 2 316 4 292 4 221 5 37 1 358 5 275 1 225 1 
297 1 244 1 226 1 316 2 221 2 292 2 358 2 144 2 
166 1 302 1 
166 1 302 1 
153 1 70 1 
153 1 70 1 
153 1 70 1 
166 1 284 1 302 1 
166 1 260 1 302 1 
166 2 153 1 70 1 267 1 109 1 302 2 
166 1 284 1 302 1 
166 1 284 1 302 1 
166 1 182 1 302 1 
166 1 182 1 302 1 
166 1 182 1 302 1 
166 2 167 1 115 1 253 1 185 1 93 2 267 1 77 1 159 1 31 2 302 2 312 2 212 1 178 2 11 2 192 1 305 2 15 2 80 3 
166 1 115 1 350 1 169 1 120 1 6 1 122 1 31 1 302 1 144 2 312 1 178 1 316 2 11 1 214 1 260 1 221 2 292 2 305 1 358 2 15 1 80 1 107 1 125 1 
301 1 349 1 126 1 
349 1 126 1 67 1 
35 1 139 1 339 1 301 2 126 3 67 1 
139 1 339 1 301 1 333 1 126 2 67 1 
301 1 339 1 139 2 126 2 67 1 
0 2 265 1 167 2 73 1 168 2 169 1 239 1 57 3 268 4 6 1 76 1 31 5 33 1 289 1 245 1 345 2 222 2 347 1 83 1 129 1 257 1 229 1 20 1 187 1 86 1 300 1 303 1 214 1 261 3 305 5 216 1 196 1 
0 6 265 3 167 5 73 3 168 6 4 1 57 8 6 4 268 7 76 1 31 9 33 3 289 6 242 1 245 2 101 5 345 6 83 1 129 3 257 1 44 1 158 5 229 3 187 1 20 2 86 2 300 3 132 1 88 1 51 1 261 9 305 9 382 1 216 2 196 2 
265 1 0 2 167 3 73 2 168 2 4 1 239 1 57 3 268 2 6 1 31 3 33 1 245 1 222 1 345 2 347 1 129 1 187 1 20 1 229 1 86 1 300 1 305 3 261 4 216 1 196 1 
0 4 265 2 167 4 73 3 168 4 4 1 239 1 57 5 6 2 268 3 31 4 33 2 245 1 345 4 222 2 347 1 129 2 44 1 187 1 20 1 229 2 86 1 300 2 51 1 261 7 305 4 382 1 216 1 196 1 
155 1 241 1 61 1 
155 1 344 1 
281 1 
155 1 183 1 
364 1 155 3 150 1 241 2 183 1 330 1 
155 1 183 1 330 1 
24 1 155 1 
140 1 29 1 237 1 130 3 84 4 229 1 353 3 311 7 65 2 33 1 188 1 12 1 134 1 319 1 41 1 274 1 306 2 
140 1 29 1 237 1 130 3 84 4 229 1 353 3 311 7 65 2 33 1 188 1 12 1 134 1 319 1 41 1 274 1 306 2 
140 1 29 1 237 1 130 3 131 1 84 4 229 1 353 3 311 7 65 2 33 1 188 1 12 1 134 1 319 1 41 1 274 1 306 2 
265 3 140 2 29 2 237 1 116 1 238 1 94 1 311 31 9 1 33 4 123 1 314 1 12 5 220 1 319 1 38 2 39 1 274 1 41 2 129 3 84 16 130 10 229 4 353 15 300 3 65 5 66 4 188 2 133 1 134 1 162 1 53 3 306 3 286 1 
140 1 29 1 237 1 116 2 238 2 130 4 84 5 280 1 229 1 353 4 311 9 203 1 65 3 33 1 188 1 123 2 12 1 134 1 220 1 319 1 38 4 41 1 306 2 286 2 
243 1 313 1 252 1 47 1 198 1 361 1 378 1 246 1 78 1 357 1 322 1 308 1 224 1 
252 2 198 1 361 1 243 1 47 1 68 1 378 2 246 1 293 1 357 1 163 1 78 1 81 1 308 1 
252 1 47 1 68 1 198 1 361 1 378 1 78 1 163 1 293 1 326 1 308 1 
252 1 309 1 198 1 361 1 170 1 342 1 47 2 378 1 104 1 246 1 357 1 78 1 81 1 308 2 
243 1 313 1 252 1 47 1 198 1 361 1 378 1 246 1 78 1 163 1 357 1 322 1 308 1 
325 1 
141 1 198 2 199 1 200 1 5 2 57 2 289 6 144 1 146 2 244 1 148 1 206 2 155 1 17 1 257 1 20 1 352 1 21 1 208 2 161 1 261 2 305 5 359 2 358 1 216 1 167 2 73 2 309 2 168 2 361 2 119 1 310 2 76 3 171 1 31 5 219 1 271 1 368 2 221 1 78 2 183 1 275 1 277 1 187 1 86 1 45 1 46 1 189 1 190 1 89 1 336 1 50 1 381 1 138 4 196 1 
206 1 17 1 76 1 21 1 31 3 289 2 144 1 189 1 190 1 244 1 148 1 89 1 271 1 161 1 336 1 221 1 79 1 381 1 305 3 358 1 138 2 275 1 
167 1 17 1 5 1 76 1 187 1 21 1 31 3 289 1 144 1 189 1 190 1 244 1 148 1 89 1 271 1 161 1 336 1 221 1 79 1 381 1 305 3 358 1 138 3 275 1 
167 1 5 1 76 1 31 3 289 2 144 1 146 1 244 1 271 1 148 1 221 1 79 1 275 1 206 1 17 1 21 1 187 1 189 1 190 1 89 1 161 1 336 1 305 3 381 1 358 1 138 3 
5 4 57 1 289 7 144 1 146 4 244 1 148 1 343 1 206 4 17 1 257 1 21 1 20 1 208 2 161 1 305 5 358 1 359 2 216 1 167 5 73 2 168 1 121 1 76 3 310 2 31 5 219 1 271 1 368 2 221 1 79 1 275 1 327 1 187 5 189 1 46 1 190 1 334 1 89 1 379 1 336 1 381 1 138 6 196 1 
167 2 73 2 168 1 200 1 5 2 57 1 76 2 310 2 31 4 289 4 144 1 219 1 146 2 244 1 148 1 271 1 368 2 221 1 275 1 206 2 17 1 257 1 187 1 20 1 21 1 208 2 46 1 189 1 190 1 89 1 161 1 336 1 261 2 305 4 381 1 359 2 358 1 216 1 138 4 196 1 
167 1 73 2 168 1 5 2 121 1 57 1 76 2 310 2 31 4 289 4 219 1 144 1 146 2 244 1 271 1 148 1 368 2 343 1 221 1 275 1 206 2 327 1 17 1 257 1 187 1 21 1 20 1 208 2 46 1 189 1 190 1 89 1 161 1 336 1 305 4 381 1 359 2 358 1 216 1 138 4 196 1 
167 1 73 2 168 1 5 2 121 1 57 1 76 2 310 2 31 4 289 4 219 1 144 1 146 2 244 1 271 1 148 1 368 2 343 1 221 1 275 1 206 2 327 1 17 1 257 1 187 1 21 1 20 1 208 2 46 1 189 1 190 1 89 1 161 1 336 1 305 4 381 1 359 2 358 1 216 1 138 4 196 1 
167 1 168 1 5 2 121 1 57 1 143 1 76 2 310 2 31 4 289 4 144 1 146 2 244 1 271 1 148 1 221 1 82 2 295 1 275 1 206 2 17 1 257 1 85 1 187 1 21 1 20 1 332 2 46 1 189 1 190 1 89 1 161 1 336 1 261 2 305 4 381 1 359 2 358 1 216 1 138 4 196 1 
167 1 73 2 168 1 121 1 57 1 5 3 76 2 310 2 31 4 289 5 219 1 144 1 146 3 244 1 271 1 148 1 368 2 343 1 221 1 275 1 206 3 327 1 17 1 257 1 187 1 20 1 21 1 208 2 46 1 189 1 190 1 89 1 161 1 379 1 336 1 305 4 381 1 359 2 358 1 216 1 138 5 196 1 
167 1 73 2 168 1 121 1 57 1 5 3 76 2 310 2 31 4 289 5 219 1 144 1 146 3 244 1 271 1 148 1 368 2 343 1 221 1 275 1 206 3 327 1 17 1 257 1 187 1 20 1 21 1 208 2 46 1 189 1 190 1 89 1 161 1 379 1 336 1 305 4 381 1 359 2 358 1 216 1 138 5 196 1 
167 1 168 1 200 1 5 2 57 1 76 2 310 2 31 4 289 4 144 1 146 2 244 1 148 1 271 1 221 1 82 2 295 1 275 1 206 2 17 1 257 1 187 1 20 1 21 1 332 2 46 1 189 1 190 1 89 1 161 1 336 1 261 2 305 4 381 1 359 2 358 1 216 1 138 4 196 1 
56 1 29 1 237 1 116 1 238 1 122 2 311 6 174 1 33 1 123 1 151 1 319 1 370 1 38 2 61 1 130 2 84 3 229 1 353 3 65 2 188 1 134 1 337 1 194 1 306 1 286 1 
56 2 116 2 238 2 122 1 311 4 362 1 204 1 205 1 123 2 244 1 151 1 370 3 320 1 38 4 152 1 62 1 84 1 353 3 66 1 283 1 337 3 53 1 286 2 
56 1 309 1 198 1 361 1 116 1 238 1 122 1 311 2 174 1 362 1 144 2 123 1 99 1 367 1 316 1 151 1 221 2 292 1 78 1 320 1 38 2 273 1 183 1 16 1 42 1 296 1 127 1 155 1 277 1 278 1 186 1 84 1 352 1 353 1 330 1 23 1 358 1 286 1 
56 3 198 3 3 2 237 1 238 3 144 3 99 1 12 4 292 1 151 3 249 2 155 2 351 1 207 1 352 2 353 10 65 4 300 2 23 1 163 1 358 1 306 1 307 2 265 2 309 1 29 1 361 3 116 3 122 2 311 20 33 3 362 1 363 2 174 7 175 1 123 3 316 1 367 2 319 1 221 3 318 2 320 1 78 3 370 7 38 6 183 2 42 2 127 2 278 1 277 2 129 2 84 10 130 8 229 3 330 2 188 1 134 1 337 7 286 3 
56 2 309 2 198 8 361 8 116 2 238 2 171 1 311 2 7 2 144 1 176 1 123 2 99 1 316 1 221 1 292 1 151 2 78 7 320 1 38 4 183 2 323 1 224 1 277 2 155 3 64 1 84 1 258 1 352 2 353 1 45 1 23 1 380 1 163 1 194 1 358 1 286 2 54 1 264 1 
265 1 56 1 116 1 238 1 311 3 174 1 362 1 33 1 144 1 123 1 316 1 292 1 151 1 221 1 370 1 37 1 38 2 225 1 129 1 299 1 130 1 84 1 229 1 353 2 65 1 300 1 337 1 358 1 286 1 
56 1 116 1 238 1 156 1 129 1 130 1 84 2 229 1 311 2 174 1 123 1 12 1 337 1 151 1 370 1 194 1 38 2 286 1 
55 1 56 1 116 1 238 1 130 1 311 2 353 2 65 1 300 1 174 1 33 1 123 1 337 1 151 1 370 1 194 1 38 2 286 1 
265 1 56 1 116 1 238 1 311 4 174 2 33 1 123 1 12 1 151 1 370 2 38 2 129 1 84 2 130 2 229 1 353 2 300 1 65 1 337 2 194 1 286 1 
56 1 116 1 238 1 156 1 129 1 130 1 84 2 229 1 311 2 174 1 123 1 12 1 337 1 151 1 370 1 38 2 54 1 286 1 
55 1 56 1 116 1 238 1 130 1 311 2 353 2 65 1 300 1 174 1 33 1 123 1 337 1 151 1 370 1 38 2 54 1 286 1 
265 1 56 1 116 1 238 1 311 4 174 2 33 1 123 1 12 1 151 1 370 2 38 2 129 1 84 2 130 2 229 1 353 2 300 1 65 1 337 2 286 1 54 1 
265 1 56 1 116 1 238 1 311 4 174 2 33 1 123 1 12 1 151 1 370 2 38 2 129 1 84 2 130 2 229 1 353 2 300 1 65 1 337 2 286 1 
56 1 309 1 198 1 361 1 116 1 238 1 122 1 311 2 144 1 99 1 123 1 367 1 318 1 221 1 151 1 78 1 320 1 38 2 183 1 42 1 127 1 277 1 155 1 84 1 352 1 353 1 330 1 286 1 
56 1 309 1 198 1 361 1 116 1 238 1 122 1 311 2 144 1 99 1 123 1 221 1 151 1 78 1 320 1 38 2 183 1 223 1 127 1 254 1 277 1 155 1 157 1 84 1 352 1 353 1 330 1 286 1 
265 1 56 1 116 1 238 1 311 4 362 1 174 2 33 1 123 1 12 1 151 1 370 2 38 2 129 1 84 2 130 2 229 1 353 2 300 1 65 1 337 2 286 1 
265 1 56 1 198 1 361 1 116 1 238 1 311 4 33 1 174 2 363 1 144 1 123 1 367 1 12 1 318 1 221 1 151 1 370 2 78 1 38 2 183 1 224 1 42 1 127 1 277 1 155 1 129 1 130 2 84 2 229 1 352 1 353 2 65 1 300 1 330 1 337 2 286 1 
265 1 56 1 116 1 238 1 311 3 33 1 362 1 174 1 144 1 123 1 316 1 12 1 292 1 151 1 221 1 370 1 37 1 38 2 225 1 129 1 130 1 84 2 229 1 353 1 300 1 337 1 358 1 137 1 286 1 
2 1 237 1 238 3 94 3 202 1 9 1 341 1 12 4 14 1 353 21 300 4 354 1 65 4 66 4 213 1 304 1 164 1 306 1 265 4 74 4 29 1 116 3 118 1 311 41 33 5 123 3 366 1 220 1 319 1 38 6 129 4 130 8 84 20 280 1 229 5 188 1 48 1 49 1 191 1 134 1 235 2 53 3 286 3 
265 4 74 4 2 1 29 1 237 1 116 4 238 4 118 1 94 3 202 1 311 38 341 1 9 1 33 4 123 4 366 1 12 3 220 2 319 1 14 1 38 8 129 4 280 1 84 20 130 7 229 5 353 18 65 4 354 1 300 3 66 4 188 1 48 1 213 1 191 1 304 1 49 1 134 1 235 2 164 1 306 1 53 3 286 4 
265 7 74 4 2 1 29 1 237 1 116 2 238 2 118 1 94 2 202 1 311 52 341 1 9 2 33 8 123 2 366 1 12 7 220 1 319 1 14 1 38 4 129 7 280 1 84 27 130 14 229 8 353 25 65 7 354 1 300 7 66 4 232 2 188 1 48 1 213 1 49 1 134 1 235 1 164 1 306 1 53 4 286 2 
265 3 74 2 116 2 238 2 94 1 202 2 311 19 9 1 33 3 123 2 366 1 12 3 14 1 38 4 154 1 129 3 280 1 84 9 130 6 229 3 353 10 65 3 354 1 300 3 66 2 304 1 235 1 164 1 53 1 286 2 
265 3 74 4 2 1 116 3 238 3 118 1 94 2 202 1 311 26 33 2 341 1 123 3 366 1 12 2 220 2 14 1 38 6 129 3 130 4 280 1 84 14 229 3 353 12 65 2 354 1 300 2 66 2 48 1 213 1 49 1 235 2 164 2 53 2 286 3 
166 1 312 1 212 1 178 1 11 1 185 1 267 1 272 1 15 1 302 1 
260 1 125 1 
166 1 312 1 178 1 11 1 96 1 52 1 15 1 302 1 209 1 
166 1 167 1 115 1 253 1 185 1 93 1 267 1 159 1 31 1 302 1 312 1 212 1 178 1 11 1 192 1 305 1 15 1 80 2 
166 1 167 1 115 1 253 1 185 1 93 1 267 1 159 1 31 1 302 1 312 1 212 1 178 1 11 1 192 1 305 1 15 1 80 2 
166 1 167 1 115 1 253 1 185 1 93 1 267 1 159 1 31 1 302 1 312 1 212 1 178 1 11 1 192 1 305 1 15 1 80 2 
109 1 230 1 284 1 
109 1 230 1 284 1 
112 1 182 1 
112 1 109 1 182 1 
120 1 107 1 
166 1 169 1 93 1 120 1 268 1 6 1 122 1 31 1 144 2 312 1 100 1 178 1 316 2 11 1 221 2 292 2 15 1 80 1 107 1 125 1 253 1 350 1 302 1 214 1 260 1 305 1 358 2 
230 1 284 1 
112 1 109 1 182 1 
56 1 198 2 361 2 116 1 238 1 287 1 30 1 311 2 7 2 362 1 144 2 123 1 99 1 317 1 36 1 151 1 221 2 320 1 78 2 38 2 183 1 277 1 155 1 64 1 84 1 352 1 353 1 380 1 358 2 25 1 286 1 
198 2 277 1 361 2 43 1 201 1 352 1 301 1 288 1 340 1 67 1 35 1 211 1 163 1 78 2 247 1 338 1 349 1 126 2 224 1 
198 1 361 1 277 1 43 1 201 1 352 1 301 1 340 1 67 1 35 1 211 1 259 1 163 1 78 1 338 1 349 1 126 2 
309 1 198 1 277 1 155 1 361 1 43 1 352 1 171 1 288 1 45 1 375 1 59 1 78 1 183 1 
198 1 277 1 361 1 43 1 201 1 352 1 301 1 288 1 340 1 67 1 35 1 211 1 163 1 78 1 247 1 338 1 349 1 126 2 
60 1 
167 1 168 1 57 1 187 1 61 1 331 1 106 1 
167 2 73 1 168 1 257 1 57 1 76 1 187 1 20 1 31 1 208 1 289 1 219 1 368 1 305 1 261 1 216 1 196 1 
0 6 198 3 3 2 199 1 57 9 241 2 289 5 150 1 13 1 344 3 294 1 345 6 250 2 106 1 108 1 155 10 256 2 18 1 257 4 19 2 352 3 20 4 300 2 24 2 305 5 261 12 216 4 265 2 167 8 309 1 73 6 168 8 361 3 76 3 31 5 172 2 33 2 365 2 78 3 183 3 224 1 324 2 276 2 277 4 129 2 184 2 187 2 229 2 86 2 331 1 330 3 282 1 381 2 196 4 
217 1 0 5 265 2 167 5 73 3 168 5 2 1 199 1 94 1 57 8 76 1 31 1 289 1 341 1 33 2 345 5 324 2 276 1 129 2 257 2 20 2 229 2 187 2 86 1 300 2 66 1 48 1 213 1 49 1 193 1 305 1 261 6 216 2 53 1 196 2 
168 2 29 1 142 1 57 2 240 1 31 1 33 1 144 1 244 1 316 1 221 1 319 1 292 1 321 1 324 2 225 1 226 1 327 1 276 1 257 1 20 1 229 2 188 1 305 1 358 1 216 1 236 1 196 1 
167 1 168 1 257 1 57 1 20 1 187 1 331 1 216 1 106 1 196 1 
265 2 0 5 167 5 73 5 168 5 276 1 3 1 129 2 57 5 229 2 300 2 33 2 345 5 261 10 324 2 
167 1 305 1 76 1 187 1 31 1 289 1 
309 2 141 1 198 4 168 2 4 1 361 4 199 2 119 1 57 2 76 2 171 1 31 3 289 4 102 1 13 2 78 4 183 1 108 1 277 1 155 1 257 1 352 1 20 2 86 2 45 1 376 1 305 3 216 2 196 2 
56 1 309 1 198 1 116 1 361 1 238 1 122 1 240 1 311 1 144 3 269 1 123 1 316 2 367 1 221 3 292 2 318 1 151 1 320 1 78 1 38 2 183 1 225 2 42 1 127 1 277 1 155 1 352 1 353 1 330 1 358 2 286 1 
0 2 167 4 73 2 168 2 199 1 257 1 57 1 20 1 187 2 86 1 261 4 345 2 216 1 306 1 196 1 
178 1 228 1 15 1 
28 1 178 1 185 1 120 1 15 1 
178 1 228 1 15 1 
178 1 228 1 15 1 
178 1 113 1 15 1 
178 1 113 1 15 1 
178 1 113 1 15 1 
178 1 15 1 
166 1 302 1 
29 1 116 1 237 1 238 1 94 1 311 8 33 1 341 1 123 1 319 1 38 2 280 1 84 4 130 2 229 1 353 4 65 2 66 1 188 1 134 1 306 1 53 1 286 1 
265 1 29 1 237 1 116 2 238 2 94 1 311 11 33 1 341 1 9 1 123 2 12 1 319 1 38 4 227 1 129 1 280 1 84 6 130 3 229 2 353 5 65 2 66 2 188 1 134 1 306 1 53 1 286 2 
265 2 2 1 29 1 237 1 116 3 238 3 94 1 311 19 341 1 33 3 123 3 12 1 220 1 319 1 38 6 227 1 129 2 280 1 84 9 130 4 229 3 353 10 300 2 65 3 66 1 188 1 48 1 213 1 49 1 134 1 306 1 53 1 286 3 
265 2 2 1 29 1 237 1 116 3 238 3 94 1 311 17 341 1 33 2 123 3 12 2 220 1 319 1 38 6 227 1 129 2 280 1 84 10 130 5 229 3 353 7 300 1 65 3 66 1 188 1 48 1 213 1 49 1 134 1 306 1 53 1 286 3 
29 1 116 1 237 1 238 1 94 1 311 8 33 1 341 1 123 1 319 1 38 2 280 1 84 4 130 2 229 1 353 4 65 2 66 1 188 1 134 1 306 1 53 1 286 1 
265 2 2 1 116 1 238 1 94 1 311 12 341 1 33 2 123 1 12 1 38 2 129 2 280 1 84 6 130 2 229 2 353 6 300 2 65 1 66 1 48 1 213 1 49 1 53 1 286 1 
265 2 2 1 29 1 237 1 116 4 238 4 94 1 311 18 341 1 33 2 123 4 12 2 220 2 319 1 38 8 227 1 129 2 280 1 84 10 130 5 229 3 353 8 300 1 65 3 66 1 188 1 48 1 213 1 49 1 134 1 306 1 53 1 286 4 
265 3 2 1 116 4 238 4 94 1 311 16 341 1 33 2 123 4 12 3 220 2 38 8 129 3 280 1 84 9 130 6 229 3 353 7 300 2 65 3 66 1 48 1 213 1 49 1 304 1 53 1 286 4 
29 3 237 1 130 6 84 3 229 1 353 4 311 7 65 3 33 1 188 3 12 3 134 2 319 1 
265 2 2 1 29 1 237 1 116 4 238 4 94 1 311 18 341 1 33 2 123 4 12 1 220 2 319 1 38 8 129 2 280 1 84 10 130 4 229 3 353 8 300 1 65 3 66 1 188 1 48 1 213 1 49 1 304 1 134 1 306 1 53 1 286 4 
29 1 116 2 237 1 238 2 84 4 130 3 229 1 353 4 311 8 65 2 33 1 188 1 123 2 12 1 220 1 134 1 319 1 38 4 306 1 286 2 
29 1 237 1 130 2 84 3 229 1 353 3 311 6 65 2 33 1 188 1 134 1 319 1 61 1 306 1 
265 1 227 1 116 1 238 1 129 1 130 2 84 2 229 1 353 2 311 4 65 1 300 1 33 1 123 1 12 1 38 2 286 1 
265 1 129 1 94 1 84 3 130 2 229 1 353 4 311 7 65 1 300 1 33 1 66 2 9 1 12 1 53 1 
29 2 116 1 237 1 238 1 311 15 33 2 205 1 123 1 12 3 220 1 319 1 321 1 38 2 84 7 130 6 229 2 353 8 65 3 66 1 188 2 134 1 283 1 53 1 286 1 
311 1 353 1 66 1 
84 1 311 1 53 1 
265 1 227 1 3 1 116 1 238 1 129 1 84 3 130 3 229 1 353 3 311 6 300 1 65 2 33 1 123 1 12 1 38 2 286 1 
265 2 2 1 116 1 238 1 94 1 311 12 341 1 33 2 123 1 12 1 38 2 129 2 280 1 84 6 130 2 229 2 353 6 300 2 65 1 66 1 48 1 213 1 49 1 53 1 286 1 
29 1 84 3 130 2 229 1 311 6 353 3 65 1 33 1 188 1 12 1 319 1 
29 1 116 1 237 1 238 1 84 1 130 2 353 2 311 3 65 1 188 1 205 1 123 1 12 1 134 1 220 1 38 2 286 1 
29 2 116 1 238 1 280 1 130 5 84 5 229 2 311 10 353 5 65 3 33 2 188 2 123 1 12 2 319 1 38 2 321 1 286 1 
116 1 238 1 129 1 280 1 84 2 130 1 229 1 311 2 123 1 12 1 38 2 286 1 
265 1 116 1 238 1 129 1 130 2 280 1 84 2 229 1 353 2 311 4 65 1 300 1 33 1 123 1 12 1 38 2 286 1 
29 1 116 3 238 3 280 1 130 2 84 1 353 2 311 3 65 1 188 1 205 1 123 3 304 1 12 1 220 1 38 6 286 3 
265 3 29 3 237 1 116 5 238 5 94 1 311 34 9 1 33 5 205 1 123 5 12 5 220 2 319 2 39 1 38 10 227 1 129 3 280 1 84 16 130 12 229 5 353 18 300 3 65 7 66 4 188 3 133 1 304 1 134 1 162 1 306 1 53 3 286 5 
360 1 221 1 122 1 358 1 180 1 275 1 144 1 
360 1 329 1 122 1 373 1 34 1 144 1 233 1 221 1 72 1 180 1 358 1 275 1 
309 1 198 1 277 1 155 1 361 1 78 1 352 1 171 1 183 1 61 1 45 1 
309 1 42 1 127 1 198 1 155 1 277 1 361 1 122 1 352 1 330 1 144 2 23 1 316 1 292 1 221 2 78 1 358 1 183 1 
42 1 127 1 198 1 155 3 277 1 361 1 122 1 21 1 352 1 330 2 144 2 24 1 23 1 365 1 244 1 316 2 161 1 292 1 221 2 13 1 78 1 358 2 183 2 
198 2 361 2 122 1 144 2 244 1 365 1 316 2 291 1 221 2 292 1 78 2 13 1 183 2 127 1 277 1 155 3 157 1 352 1 21 1 330 2 23 1 24 1 161 1 358 2 
167 1 1 1 309 1 198 3 277 1 361 3 155 4 187 1 241 1 352 1 31 2 173 1 330 1 289 1 24 1 365 1 291 1 13 1 78 3 344 1 381 1 305 2 183 1 
167 1 309 1 198 3 277 1 361 3 155 4 184 1 187 1 241 1 352 1 31 2 330 1 289 1 24 1 365 1 291 1 13 1 78 3 344 1 381 1 305 2 183 1 
176 1 198 1 277 1 361 1 78 1 352 1 
309 2 198 7 75 1 361 7 155 3 277 3 64 1 258 1 352 2 7 1 58 1 330 1 176 1 150 1 163 1 248 1 78 6 183 2 323 1 264 1 224 1 
56 2 198 1 237 1 238 2 144 2 292 1 151 2 249 1 155 1 352 1 353 3 65 2 23 1 358 1 306 1 29 1 361 1 116 2 122 2 30 1 311 6 174 1 363 1 362 1 33 1 123 2 367 1 316 1 318 1 221 2 319 1 78 1 370 1 38 4 183 1 224 1 42 1 127 1 277 1 130 2 84 3 229 1 330 1 188 1 134 1 337 1 286 2 
167 1 309 1 168 1 198 1 361 1 57 1 268 1 76 1 241 1 31 3 289 2 78 1 344 1 250 1 106 1 108 1 155 2 256 1 257 2 184 1 19 1 187 1 20 2 331 1 305 3 381 1 216 2 196 2 
198 2 361 2 155 2 277 2 241 1 352 1 330 1 282 1 176 1 150 1 78 2 183 1 224 1 
309 1 198 4 277 1 361 4 155 1 171 1 352 1 45 1 291 1 114 1 78 4 183 1 224 1 
197 1 198 2 75 1 361 2 155 1 277 2 95 1 352 1 330 1 175 1 13 1 248 1 78 2 183 1 
211 1 309 1 198 1 277 1 361 1 78 1 352 1 349 1 126 1 67 1 
198 2 277 1 155 1 361 2 64 1 163 1 78 2 352 1 183 1 25 1 224 1 
309 1 198 5 361 5 155 3 277 2 64 1 171 1 352 2 45 1 114 1 13 1 78 4 183 2 323 1 224 1 264 1 
309 1 198 5 361 5 155 3 277 2 64 1 171 1 352 2 22 1 45 1 114 1 13 1 78 4 183 2 224 1 264 1 
309 1 127 1 198 1 155 1 277 1 361 1 157 1 122 1 352 1 330 1 144 2 23 1 316 1 292 1 221 2 78 1 358 1 183 1 
198 1 75 1 361 1 155 1 277 2 352 1 58 1 330 1 150 1 248 1 13 1 78 1 183 1 
234 1 328 1 122 1 136 1 105 1 
167 1 328 2 268 1 122 1 187 1 21 1 31 2 244 1 290 1 271 1 161 1 369 1 234 2 381 1 305 2 136 2 179 1 105 1 165 1 
317 1 36 1 287 1 221 1 328 1 136 1 358 1 105 1 144 1 
290 1 369 1 105 1 
315 1 135 1 111 1 61 1 
252 1 315 1 378 1 135 1 246 1 357 1 111 1 
91 1 252 1 308 1 
252 3 266 1 111 1 315 1 378 3 135 1 246 1 357 1 90 1 322 1 195 2 348 1 
252 2 315 1 378 2 149 1 135 1 246 1 293 1 357 1 111 1 
252 1 218 1 111 1 301 1 355 1 378 1 246 1 357 1 322 1 126 1 349 1 
252 1 315 1 378 1 246 1 357 1 322 1 111 1 
252 1 315 2 378 1 135 1 246 1 357 1 322 1 
252 2 315 1 378 2 215 1 246 2 357 2 322 1 346 1 111 1 8 1 
252 3 111 2 87 1 231 1 355 1 315 1 378 3 135 1 246 1 357 1 293 2 322 1 27 1 
252 2 111 1 32 1 301 1 67 1 35 1 315 1 378 2 135 1 246 1 357 1 293 1 322 1 126 2 349 1 
252 4 111 2 231 1 355 1 315 1 378 4 149 1 135 1 246 2 357 2 293 2 322 1 40 1 
252 1 315 1 378 1 135 1 246 1 357 1 322 1 111 1 
252 4 255 1 266 1 111 3 231 1 355 1 315 2 378 4 135 2 246 1 293 2 357 1 195 1 348 1 
252 2 315 1 378 2 135 1 246 1 293 1 357 1 97 1 322 1 111 1 371 1 285 1 
252 3 315 1 266 2 378 3 63 1 135 1 246 1 357 1 195 2 322 1 111 1 348 1 
210 1 111 2 98 2 10 1 
252 1 378 1 279 1 246 1 357 1 322 1 
252 2 315 1 378 2 135 1 246 1 293 1 357 1 322 1 111 1 87 1 
92 1 
252 1 315 1 378 1 135 1 246 1 357 1 322 1 111 1 
252 3 111 1 87 1 315 1 378 3 135 1 246 1 293 1 357 1 322 1 195 1 
355 1 255 1 111 1 231 1 
315 1 111 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 245 227 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 245 92 262 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 245 92 42 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 245 351 84 285 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 245 92 156 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 245 227 32 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 245 272 26 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 245 70 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 245 92 42 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 245 70 246 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 245 92 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 245 92 219 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 245 92 219 331 330 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 92 219 331 330 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 92 219 331 174 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 245 70 246 309 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 245 70 246 309 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 245 92 219 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 245 92 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 245 (159,243) 46 25 (8,339) 157 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 245 92 329 100 116 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 245 92 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 245 272 26 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 245 (187,258) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 245 (159,243) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 245 (159,243) 46 25 (8,339) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
59 1 255 6 2 1 238 1 332 3 287 5 207 2 208 2 7 1 353 1 34 1 169 2 315 1 193 1 356 1 12 2 137 2 359 1 340 2 360 1 322 1 145 9 323 4 364 1 248 2 151 1 155 9 122 1 
59 1 255 6 2 1 238 1 332 3 287 5 207 2 208 2 7 1 353 1 34 1 315 1 169 2 193 1 356 1 12 2 137 2 359 1 340 2 360 1 322 1 145 9 323 4 364 1 248 2 151 1 155 9 122 1 
59 1 255 7 2 1 238 1 332 4 287 6 207 2 208 2 7 1 353 1 34 1 315 1 169 2 193 1 356 1 12 2 137 2 359 1 340 2 360 1 322 1 145 10 323 5 364 1 248 2 151 1 155 10 122 1 
59 1 255 4 238 1 332 2 287 4 207 2 208 2 7 1 353 1 34 1 315 1 169 1 193 1 356 1 12 2 137 2 359 1 340 2 360 1 322 1 145 7 323 3 364 1 248 2 151 1 155 7 122 1 
12 1 137 1 255 3 2 1 238 1 332 1 287 3 207 1 208 1 145 4 323 2 353 1 248 1 315 1 169 2 193 1 356 1 155 4 
137 1 41 1 205 1 238 1 340 1 287 1 186 1 360 1 207 1 145 2 208 1 248 1 151 1 315 1 193 1 155 2 
137 2 255 1 238 1 332 1 340 1 287 2 207 2 145 3 323 1 364 1 315 1 193 1 155 3 
181 1 255 7 2 1 238 1 332 3 287 5 207 2 7 1 208 1 353 1 315 1 169 2 193 1 356 1 12 1 137 2 340 1 322 1 323 4 145 9 364 1 248 1 117 1 155 9 
181 1 255 7 2 1 238 1 332 3 287 5 207 2 7 1 208 1 353 1 315 1 169 2 193 1 356 1 12 1 137 2 340 1 322 1 323 4 145 9 364 1 248 1 117 1 155 9 
203 1 230 1 75 1 
4 1 75 1 88 2 
275 2 291 2 19 2 77 2 140 1 74 1 222 2 6 2 
97 1 204 1 77 2 6 3 130 1 289 1 81 1 352 1 209 1 291 2 190 2 212 1 266 1 231 1 243 1 336 1 297 1 15 1 43 1 140 1 197 1 320 1 275 2 52 1 363 2 365 1 93 1 19 2 220 2 249 1 55 1 305 1 74 1 222 3 250 2 154 1 281 2 
317 1 275 1 291 1 19 1 77 1 74 1 9 1 222 1 180 1 6 1 
194 1 296 1 112 1 6 1 259 1 228 1 242 1 31 1 19 1 222 1 230 1 133 1 75 1 180 1 
296 2 77 1 112 1 6 1 259 1 275 1 31 2 242 1 291 1 19 1 222 1 230 1 133 1 75 1 180 1 
11 1 227 1 31 1 296 1 245 1 
11 1 31 1 92 1 296 1 262 1 245 1 
31 1 296 1 245 1 
11 1 317 1 296 1 235 1 77 1 6 1 275 1 31 1 291 1 19 1 74 1 9 1 222 1 180 1 
75 1 
11 1 31 1 92 1 296 1 42 1 245 1 
252 1 11 2 165 1 241 1 31 3 296 3 303 1 351 1 84 1 285 1 245 1 
203 1 140 1 
77 1 140 2 6 2 275 1 291 1 189 1 19 2 222 2 173 1 
111 1 279 1 152 1 
243 1 297 1 140 1 320 1 217 1 6 1 130 1 289 1 209 1 220 1 212 1 305 1 222 1 154 1 250 1 281 1 
243 1 297 1 160 1 77 1 320 1 6 2 130 1 289 1 209 1 291 1 19 1 220 1 152 1 212 1 305 1 222 2 154 1 250 1 57 1 281 1 
160 2 77 4 140 1 239 1 200 1 6 5 275 1 228 1 291 4 189 1 19 5 265 1 222 5 57 1 
291 2 19 2 77 2 229 1 9 1 222 2 180 1 6 2 
275 1 291 3 160 1 19 3 77 3 140 1 222 3 6 3 
291 1 19 1 77 1 9 1 222 1 180 1 6 1 
275 1 291 1 189 1 19 1 77 1 222 1 180 1 173 1 6 1 
97 1 76 1 204 1 160 1 77 3 6 4 259 1 130 1 289 1 242 1 31 1 209 1 291 3 190 1 189 1 212 1 266 1 133 1 231 1 243 1 296 1 297 1 15 1 112 1 139 1 140 1 197 1 320 1 275 2 52 1 363 2 365 1 93 1 19 3 220 1 55 1 305 1 74 1 222 4 154 1 250 1 57 1 281 1 180 1 
228 1 291 1 160 1 19 2 77 1 140 1 222 2 200 1 6 2 
296 1 76 1 160 2 77 3 112 1 6 3 259 1 275 1 31 1 242 1 201 1 291 3 189 1 19 3 222 3 57 1 133 1 75 1 180 1 
160 1 111 1 77 2 6 2 275 1 291 2 189 1 19 2 152 1 222 2 
243 1 297 1 140 1 320 1 6 1 289 1 130 1 209 1 220 1 212 1 305 1 222 1 154 1 250 1 281 1 
297 1 140 1 101 1 6 1 187 1 289 1 130 1 209 1 220 1 212 1 305 1 222 1 154 1 250 1 281 1 
254 1 79 1 260 1 131 1 190 4 69 1 266 1 109 1 231 1 111 2 318 1 197 1 141 1 215 1 47 1 52 1 363 2 365 1 93 1 94 1 279 2 249 2 152 2 55 2 
291 1 19 1 77 1 229 1 222 1 180 1 259 1 6 1 
257 1 234 1 
257 1 234 1 
184 1 63 1 
184 1 63 1 
184 1 63 1 
257 1 68 1 234 1 
333 1 257 1 234 1 
253 1 184 1 63 1 257 2 16 1 234 2 
257 1 68 1 234 1 
257 1 68 1 234 1 
261 1 257 1 234 1 
261 1 257 1 234 1 
261 1 257 1 234 1 
24 1 284 1 127 1 77 2 257 1 1 1 6 2 333 1 31 1 291 2 355 1 85 1 39 1 296 1 140 1 337 1 233 1 149 1 19 2 95 1 23 1 234 1 222 2 349 1 
253 1 136 2 296 2 284 3 127 2 337 2 257 2 1 1 188 1 31 2 276 1 83 1 178 1 149 2 107 1 20 1 95 2 234 2 75 1 
12 1 208 1 248 1 
208 1 248 1 205 1 
12 2 325 1 248 3 108 1 205 1 87 1 
12 1 325 1 248 2 108 1 205 1 10 1 
12 1 325 1 248 2 108 2 205 1 
11 1 31 1 92 1 296 1 245 1 156 1 
11 2 227 1 31 2 32 1 296 2 218 1 62 1 245 1 
252 1 254 1 236 1 307 2 79 1 64 1 29 2 4 2 286 2 165 1 241 1 31 3 313 1 106 1 211 1 69 1 230 1 88 4 11 2 268 3 296 3 318 1 300 1 303 1 23 1 75 3 
252 1 283 1 254 2 307 4 236 1 79 2 29 4 64 2 4 3 286 4 165 1 241 1 31 4 313 1 106 2 354 1 211 1 69 2 230 1 88 7 11 3 268 5 296 4 318 2 300 1 176 1 303 1 23 2 75 4 
203 1 130 1 172 1 
130 1 179 1 
196 1 
130 1 289 1 212 1 
130 1 361 1 
130 1 212 1 
130 3 289 1 158 1 212 1 118 1 172 2 
135 1 244 1 254 1 113 1 319 1 141 2 103 1 146 1 326 2 190 7 249 4 347 1 314 1 55 3 119 1 69 1 109 3 
135 1 244 1 254 1 113 1 319 1 141 2 103 1 146 1 326 2 190 7 249 4 347 1 314 1 55 3 119 1 69 1 109 3 
135 1 350 1 244 1 254 1 113 1 319 1 141 2 103 1 146 1 326 2 190 7 249 4 347 1 314 1 55 3 119 1 69 1 109 3 
254 4 128 1 27 1 79 3 103 1 129 1 166 1 312 1 190 31 106 3 168 3 314 2 171 1 109 10 69 4 266 1 231 1 135 5 244 2 318 3 113 1 319 2 141 5 146 1 52 1 363 2 365 1 326 3 278 4 249 16 347 2 55 15 119 1 153 1 
254 1 128 1 103 1 190 9 314 1 69 1 266 2 109 4 231 2 135 1 244 1 270 1 113 1 319 1 141 3 274 1 52 2 363 4 365 2 326 2 249 5 347 1 55 4 119 1 
125 1 255 1 28 1 308 1 205 1 238 1 287 1 207 1 226 1 208 1 334 1 315 1 36 1 193 1 192 1 86 1 87 1 12 1 110 1 13 1 137 1 297 1 340 1 145 2 248 2 220 1 305 1 250 1 155 2 281 1 
125 1 255 2 28 1 308 1 205 1 238 1 162 1 287 1 207 1 226 1 208 1 36 1 193 1 192 1 86 1 87 1 12 1 13 1 137 1 297 1 340 1 145 3 301 1 248 2 220 1 56 1 305 1 250 1 155 3 281 1 
125 1 255 2 28 1 308 1 205 1 238 1 162 1 287 1 208 1 193 1 192 1 86 1 87 1 12 1 13 1 297 1 340 1 145 2 248 2 220 1 56 1 305 1 250 1 155 2 281 1 
13 2 137 1 297 1 138 1 28 2 308 2 45 1 340 2 207 1 130 1 344 1 301 1 145 1 220 1 346 1 212 1 305 1 368 1 155 1 154 1 250 1 251 1 281 1 
125 1 28 1 308 1 205 1 162 1 207 1 226 1 208 1 315 1 36 1 192 1 86 1 87 1 12 1 110 1 13 1 137 1 297 1 340 1 145 1 248 2 220 1 305 1 250 1 155 1 281 1 
167 1 
252 1 268 1 296 1 26 1 300 1 245 1 272 1 115 1 165 1 31 1 241 1 220 1 154 1 250 1 281 1 
70 1 296 2 194 1 14 1 112 1 213 1 245 1 321 1 259 1 6 1 242 1 31 2 228 1 277 2 150 1 19 1 121 1 222 1 133 1 180 1 
6 1 259 1 228 1 31 2 242 1 133 1 230 1 194 1 296 2 14 1 42 1 112 1 213 1 245 1 199 1 321 1 92 1 277 3 19 1 150 1 121 1 222 1 180 1 75 1 
70 1 296 2 194 1 14 1 213 1 112 1 245 1 321 1 259 1 6 1 246 1 242 1 31 2 228 1 277 2 150 1 19 1 121 1 222 1 133 1 180 1 
31 1 92 1 296 1 42 1 245 1 
252 1 306 1 4 1 286 1 6 1 259 1 165 1 241 1 31 2 228 1 242 1 292 1 133 1 88 1 268 1 194 1 296 2 14 1 213 1 112 1 245 1 321 1 48 1 115 1 92 1 50 1 247 1 277 2 150 1 19 1 219 1 121 1 222 1 180 1 
331 1 252 1 306 1 60 1 4 1 286 1 6 1 259 1 165 1 241 1 228 1 31 2 242 1 292 1 133 1 268 1 194 1 296 2 14 1 112 1 213 1 245 1 321 1 48 1 115 1 92 1 50 1 247 1 277 2 19 1 150 1 219 1 121 1 222 1 330 1 180 1 
331 1 252 1 306 1 60 1 4 1 286 1 6 1 259 1 165 1 241 1 228 1 31 2 242 1 292 1 133 1 268 1 194 1 296 2 14 1 112 1 213 1 245 1 321 1 48 1 115 1 92 1 50 1 247 1 277 2 19 1 150 1 219 1 121 1 222 1 330 1 180 1 
331 1 252 1 286 1 6 1 259 1 165 1 241 1 228 1 31 2 242 1 292 1 210 1 133 1 88 1 268 1 194 1 296 2 14 1 112 1 213 1 338 1 245 1 321 1 174 1 115 1 92 1 50 1 277 2 147 1 19 1 150 1 219 1 54 1 121 1 222 1 180 1 
70 1 296 2 194 1 14 1 213 1 112 1 245 1 309 1 321 1 259 1 6 1 246 1 242 1 31 2 228 1 277 2 150 1 19 1 121 1 222 1 133 1 180 1 
70 1 296 2 194 1 14 1 213 1 112 1 245 1 309 1 321 1 259 1 6 1 246 1 242 1 31 2 228 1 277 2 150 1 19 1 121 1 222 1 133 1 180 1 
252 1 286 1 6 1 259 1 165 1 241 1 31 2 228 1 242 1 292 1 210 1 133 1 88 1 268 1 194 1 296 2 14 1 213 1 112 1 338 1 245 1 321 1 115 1 92 1 50 1 277 2 150 1 19 1 219 1 54 1 121 1 222 1 180 1 
203 1 254 1 103 1 190 6 266 1 109 2 69 1 231 1 244 1 111 1 113 1 197 1 140 2 141 2 215 1 52 1 363 2 365 1 93 1 326 1 279 1 152 1 249 3 347 1 55 3 119 1 
254 2 27 1 79 2 5 1 166 1 190 14 106 2 168 3 132 1 109 2 266 2 69 1 335 1 231 2 135 1 336 1 111 4 15 1 318 1 140 1 197 2 141 1 44 1 216 1 52 2 363 4 365 2 93 1 278 3 279 11 152 11 249 8 55 6 
160 1 77 1 6 2 130 1 289 1 209 1 291 1 190 2 212 1 132 1 37 1 266 1 38 1 231 1 243 1 336 1 297 1 111 1 15 1 140 1 197 1 320 1 217 1 363 2 52 1 365 1 93 1 19 1 220 1 249 1 55 1 305 1 120 1 250 1 154 1 222 2 281 1 57 1 
97 2 160 1 99 2 162 1 103 1 6 3 289 2 209 2 291 1 106 2 212 2 69 3 109 8 244 1 243 2 336 1 297 2 111 7 15 1 113 1 339 2 302 1 19 1 220 3 249 10 347 1 119 1 305 2 250 3 222 3 254 3 77 1 79 2 130 2 190 20 132 1 266 3 231 3 135 4 318 2 140 2 197 3 198 1 141 4 91 2 320 2 142 1 52 3 363 6 326 1 93 3 365 3 53 2 279 7 152 7 55 10 154 1 281 3 57 1 
98 1 160 1 77 1 237 1 162 1 6 1 164 1 163 1 130 3 352 2 291 1 190 2 334 1 35 1 212 2 266 2 231 2 336 1 90 1 297 2 15 1 271 1 197 2 215 1 52 2 363 4 365 2 93 2 19 1 220 8 249 1 346 1 55 1 305 2 222 1 250 8 154 2 281 7 251 1 
254 1 77 1 79 1 6 1 291 1 189 1 190 3 106 1 132 1 109 1 266 1 69 1 231 1 111 1 318 1 197 1 141 1 275 1 52 1 363 2 365 1 93 1 19 1 279 1 152 1 249 1 55 2 222 1 96 1 
135 1 111 1 254 1 197 1 79 1 215 1 260 1 363 2 52 1 190 2 93 1 365 1 279 1 152 1 249 2 109 1 266 1 231 1 
111 1 318 1 197 1 141 1 215 1 363 2 52 1 190 2 93 1 365 1 279 1 94 1 152 1 55 2 109 1 266 1 69 1 231 1 
254 1 79 1 190 4 106 1 266 1 109 2 69 1 231 1 135 1 111 2 318 1 197 1 141 1 215 1 52 1 363 2 365 1 93 1 279 2 249 2 152 2 55 2 
135 1 111 1 254 1 197 1 79 1 164 1 260 1 363 2 52 1 190 2 93 1 365 1 279 1 152 1 249 2 109 1 266 1 231 1 
111 1 318 1 197 1 141 1 164 1 363 2 52 1 190 2 93 1 365 1 279 1 94 1 152 1 55 2 109 1 266 1 69 1 231 1 
254 1 79 1 164 1 190 4 106 1 266 1 109 2 69 1 231 1 135 1 111 2 318 1 197 1 141 1 52 1 363 2 365 1 93 1 279 2 249 2 152 2 55 2 
135 1 111 2 254 1 318 1 197 1 79 1 141 1 363 2 52 1 93 1 365 1 190 4 106 1 279 2 152 2 249 2 55 2 69 1 109 2 266 1 231 1 
97 1 6 1 289 1 130 1 209 1 190 2 212 1 266 1 231 1 243 1 336 1 297 1 15 1 140 1 197 1 320 1 363 2 52 1 93 1 365 1 220 1 249 1 55 1 305 1 250 1 154 1 222 1 281 1 
101 1 6 1 187 1 289 1 130 1 209 1 190 2 212 1 266 1 231 1 336 1 297 1 15 1 140 1 197 1 363 2 52 1 93 1 365 1 220 1 249 1 55 1 305 1 250 1 154 1 222 1 281 1 348 1 
254 1 79 1 190 4 106 1 132 1 266 1 109 2 69 1 231 1 135 1 111 2 318 1 197 1 141 1 52 1 363 2 365 1 93 1 279 2 249 2 152 2 55 2 
97 1 254 1 79 1 6 1 289 1 130 1 209 1 190 4 106 1 334 1 212 1 69 1 109 2 266 1 231 1 135 1 243 1 111 2 297 1 318 1 197 1 141 1 320 1 91 1 363 2 52 1 93 1 365 1 279 2 220 1 152 2 249 2 55 2 305 1 250 1 222 1 281 1 
254 1 77 1 79 1 6 1 291 1 189 1 190 3 106 1 132 1 69 1 109 1 266 1 294 1 231 1 135 1 111 1 318 1 197 1 275 1 52 1 363 2 365 1 93 1 19 1 279 1 249 2 152 1 55 1 222 1 
254 1 27 1 79 1 3 1 166 1 190 9 106 1 168 1 266 2 109 2 69 1 231 2 135 1 318 1 141 1 143 1 274 1 52 2 363 4 366 1 73 1 365 2 278 2 367 1 249 4 21 1 55 5 369 1 282 1 
254 2 128 2 27 2 79 2 100 1 3 2 310 1 240 1 290 1 190 20 106 2 168 2 67 1 109 2 69 1 266 3 231 3 135 1 318 1 141 1 17 1 143 1 274 1 52 3 363 6 116 1 73 3 365 3 278 2 249 11 21 1 55 9 369 1 282 2 
254 1 27 1 79 1 3 1 166 1 190 9 106 1 168 1 67 1 266 2 109 2 69 1 231 2 135 1 318 1 141 1 143 1 274 1 52 2 363 4 366 1 73 1 365 2 278 2 249 4 21 1 55 5 369 1 282 1 
254 1 27 1 79 1 3 1 166 1 190 9 106 1 168 1 67 1 266 2 109 2 69 1 231 2 135 1 318 1 141 1 143 1 274 1 52 2 363 4 366 1 73 1 365 2 278 2 249 4 21 1 55 5 369 1 282 1 
254 7 128 1 27 2 79 6 100 1 3 1 103 1 5 2 310 1 240 1 166 2 290 1 190 46 106 6 168 4 67 1 266 2 109 12 69 7 231 2 135 6 244 1 318 6 113 1 141 6 17 1 143 1 274 1 116 1 52 2 363 4 326 1 73 3 365 2 278 4 249 24 347 1 21 1 55 22 119 1 369 1 282 1 
253 1 276 1 178 1 127 1 149 1 337 1 257 1 95 1 161 1 234 1 
333 1 85 1 
114 1 0 1 127 1 149 1 78 1 337 1 257 1 95 1 234 1 
280 1 68 1 
82 1 261 1 16 1 
253 1 136 1 296 1 284 2 127 1 337 1 257 1 1 1 188 1 31 1 276 1 83 1 178 1 149 1 20 1 95 1 234 1 75 1 
253 1 136 1 296 1 284 2 127 1 337 1 257 1 1 1 188 1 31 1 276 1 83 1 178 1 149 1 20 1 95 1 234 1 75 1 
253 1 136 1 296 1 284 2 127 1 337 1 257 1 1 1 188 1 31 1 276 1 83 1 178 1 149 1 20 1 95 1 234 1 75 1 
280 1 16 1 68 1 
280 1 16 1 68 1 
82 1 261 1 
82 1 261 1 16 1 
233 1 39 1 
24 1 284 1 127 1 77 2 257 1 6 2 333 1 31 1 291 2 355 1 170 1 85 1 39 1 11 1 136 1 296 1 140 1 337 1 233 1 149 1 19 2 20 1 95 1 23 1 222 2 234 1 349 1 
185 1 206 1 6 2 163 1 130 1 352 2 190 2 212 1 132 1 266 1 231 1 336 1 297 1 90 1 15 1 197 1 72 1 343 1 363 2 52 1 93 1 327 1 365 1 19 2 220 2 249 1 55 1 305 1 250 2 222 2 281 2 
12 1 124 1 125 1 13 1 297 1 205 1 65 1 162 1 226 1 208 1 148 1 248 2 220 2 334 1 305 1 86 1 250 2 281 2 87 1 
12 1 40 1 125 1 13 1 297 1 205 1 162 1 226 1 208 1 148 1 248 2 220 1 305 1 86 1 250 1 281 1 87 1 
13 1 297 1 45 1 80 1 65 1 130 1 220 1 346 1 212 1 305 1 154 1 250 1 281 1 251 1 
12 1 124 1 125 1 13 1 297 1 205 1 65 1 162 1 226 1 208 1 148 1 248 2 220 1 305 1 86 1 250 1 281 1 87 1 
123 1 
203 1 268 1 299 1 71 1 230 1 286 1 75 1 
252 1 268 1 306 1 245 1 286 1 48 1 4 1 115 1 165 1 241 1 92 1 247 1 88 1 
25 1 252 1 268 1 157 1 158 1 159 1 297 2 300 1 245 1 46 1 130 3 289 1 115 1 165 1 241 1 220 1 179 2 212 1 8 1 305 1 154 1 250 1 281 1 358 1 
252 1 254 1 27 1 307 4 79 1 100 1 29 4 4 3 286 2 240 1 165 1 241 1 106 1 168 1 69 1 230 1 316 1 88 6 268 5 318 1 245 1 115 1 92 1 116 1 278 1 329 1 75 4 
252 1 235 1 60 1 254 2 77 1 286 2 6 1 165 1 241 1 31 1 291 1 9 1 69 1 316 2 317 1 244 1 268 2 296 1 273 1 115 1 275 1 324 1 19 1 347 1 119 1 74 1 222 1 180 1 
252 1 268 1 299 1 71 1 286 1 115 1 165 1 241 1 230 1 75 1 
268 5 254 2 318 2 307 5 79 2 29 5 273 1 286 5 4 5 53 1 106 2 69 2 316 2 88 10 75 5 
92 1 245 1 
252 1 268 1 26 1 300 1 245 1 272 1 115 1 165 1 104 1 241 1 220 1 154 1 250 1 281 1 
97 1 204 1 77 2 6 3 289 1 130 1 209 1 291 2 190 1 212 1 266 1 231 1 243 1 297 1 15 1 140 1 197 1 320 1 275 2 52 1 363 2 365 1 93 1 19 2 220 1 55 1 305 1 74 1 250 1 154 1 222 3 281 1 
252 1 268 1 307 2 300 1 29 2 4 2 286 2 115 1 165 1 241 1 326 1 191 1 230 2 88 4 75 4 
105 1 127 1 337 1 
33 1 178 1 127 1 337 1 233 1 
105 1 127 1 337 1 
105 1 127 1 337 1 
127 1 195 1 337 1 
127 1 195 1 337 1 
127 1 195 1 337 1 
127 1 337 1 
257 1 234 1 
135 1 244 1 254 1 128 1 113 1 141 2 103 1 363 4 52 2 326 1 190 8 365 2 249 4 347 1 55 4 119 1 69 1 109 3 266 2 231 2 
203 1 244 1 254 1 113 1 141 2 103 1 326 1 190 6 249 3 347 1 55 3 119 1 109 2 69 1 
135 1 254 1 318 1 79 1 141 1 18 1 363 2 52 1 365 1 190 4 106 1 249 2 55 2 69 1 109 2 266 1 231 1 
135 1 254 1 318 1 27 1 79 1 141 1 166 1 190 7 278 2 106 1 249 3 168 1 55 4 69 1 109 2 
223 1 254 3 128 2 79 2 103 1 5 1 166 1 190 23 106 2 168 2 109 9 69 3 266 2 231 2 135 4 244 2 318 2 113 1 44 1 141 5 363 4 52 2 326 1 365 2 278 2 249 11 347 2 55 12 119 1 
190 1 278 1 55 1 
190 1 249 1 168 1 
135 1 254 1 318 1 79 1 141 2 18 1 52 1 363 2 365 1 53 1 190 6 106 1 249 3 55 3 266 1 109 3 69 1 231 1 
135 1 254 2 318 2 27 1 79 2 141 1 100 1 17 1 274 1 310 1 240 1 363 2 52 1 116 1 365 1 190 12 106 2 278 1 249 6 168 1 55 6 109 2 69 2 266 1 231 1 
135 1 244 1 254 1 141 1 190 6 249 3 347 1 55 3 119 1 69 1 109 2 
135 1 244 1 223 1 128 1 113 1 141 1 103 1 363 2 52 1 190 3 365 1 249 1 347 1 55 2 109 2 266 1 231 1 
135 2 244 2 254 2 141 3 274 1 52 1 363 2 324 1 365 1 190 10 249 5 347 2 55 5 119 1 266 1 109 5 69 2 231 1 
135 1 254 1 79 1 274 1 363 2 52 1 365 1 190 2 249 2 266 1 109 1 231 1 
135 1 254 1 318 1 79 1 141 1 274 1 363 2 52 1 365 1 190 4 106 1 249 2 55 2 69 1 109 2 266 1 231 1 
135 1 244 1 223 1 128 1 141 1 274 1 363 6 52 3 366 1 190 3 365 3 249 1 347 1 55 2 266 3 109 2 231 3 
223 1 254 5 128 2 27 1 79 3 103 1 129 1 166 1 190 34 106 3 168 3 171 1 266 5 109 12 69 5 231 5 135 5 244 3 318 3 113 1 141 7 274 1 18 1 52 5 363 10 326 1 366 1 365 5 278 4 249 16 347 3 55 18 119 2 153 1 
254 1 27 1 103 1 190 8 168 1 69 1 266 1 109 2 231 1 244 1 113 1 141 2 274 1 116 1 52 1 363 2 326 1 365 1 278 1 249 4 347 1 55 4 119 1 
254 2 27 1 79 1 103 1 166 1 190 11 106 1 168 1 69 1 266 2 109 3 231 2 135 1 244 1 113 1 141 2 274 1 18 1 116 1 52 2 363 4 326 1 365 2 278 2 249 6 347 1 55 5 119 1 
254 3 128 1 27 1 79 2 100 1 103 1 240 1 310 1 190 19 106 2 168 1 266 3 69 3 109 4 231 3 135 1 244 1 318 2 113 1 141 3 17 1 274 1 18 1 116 1 52 3 363 6 326 1 365 3 278 1 249 9 347 1 55 10 119 1 
254 3 128 1 27 1 79 2 100 1 103 1 240 1 310 1 190 17 106 2 168 1 266 3 69 2 109 5 231 3 135 2 244 1 318 1 113 1 141 3 17 1 274 1 18 1 116 1 52 3 363 6 326 1 365 3 278 1 249 10 347 1 55 7 119 1 
254 1 27 1 103 1 190 8 168 1 69 1 266 1 109 2 231 1 244 1 113 1 141 2 274 1 116 1 52 1 363 2 326 1 365 1 278 1 249 4 347 1 55 4 119 1 
135 1 254 2 318 2 27 1 79 2 141 1 100 1 17 1 274 1 310 1 240 1 363 2 52 1 116 1 365 1 190 12 106 2 278 1 249 6 168 1 55 6 109 2 69 2 266 1 231 1 
254 3 128 2 27 1 79 2 100 1 103 1 310 1 240 1 190 18 106 2 168 1 266 4 69 2 109 5 231 4 135 2 244 1 318 1 113 1 141 3 17 1 274 1 18 1 116 1 52 4 363 8 326 1 365 4 278 1 249 10 347 1 55 8 119 1 
254 3 128 2 27 1 79 3 100 1 310 1 240 1 190 16 106 3 168 1 266 4 69 2 109 6 231 4 135 3 318 2 141 3 17 1 274 1 116 1 52 4 363 8 365 4 366 1 278 1 249 9 55 7 
135 3 244 3 254 1 113 2 141 3 103 1 190 7 249 3 347 3 55 4 119 1 69 1 109 6 
254 3 128 2 27 1 79 2 100 1 103 1 310 1 240 1 190 18 106 2 168 1 266 4 69 2 109 4 231 4 135 1 244 1 318 1 113 1 141 3 17 1 274 1 116 1 52 4 363 8 326 1 365 4 366 1 278 1 249 10 347 1 55 8 119 1 
228 1 49 1 19 1 140 1 222 1 200 1 6 1 
269 1 61 1 256 1 140 1 200 1 6 1 311 1 49 1 228 1 19 1 345 1 222 1 
203 1 130 1 297 1 220 1 346 1 212 1 305 1 250 1 154 1 251 1 281 1 
243 1 297 1 160 1 77 1 140 1 6 2 130 1 289 1 209 1 291 1 19 1 220 1 212 1 305 1 222 2 154 1 250 1 281 1 
243 1 126 1 297 1 160 1 77 2 140 1 175 1 259 1 6 2 361 1 130 3 289 2 209 1 291 1 19 2 220 1 212 2 305 1 222 2 250 1 133 1 281 1 180 1 
126 1 297 1 160 1 77 2 140 1 175 1 288 1 259 1 6 2 187 1 361 1 130 3 289 2 209 1 291 1 19 2 220 2 212 2 305 1 222 2 250 2 133 1 281 2 180 1 
130 1 31 1 296 1 126 1 220 1 179 1 245 1 258 1 250 1 281 1 
130 1 31 1 296 1 159 1 126 1 220 1 179 1 245 1 250 1 281 1 
297 1 220 1 237 1 305 1 250 1 281 1 
158 1 90 1 98 1 297 3 271 1 237 1 162 1 30 1 289 1 130 3 352 1 334 1 220 7 35 1 264 1 212 2 305 2 221 1 154 2 250 7 281 6 
97 1 160 1 103 1 6 2 289 1 209 1 291 1 334 1 212 1 109 2 69 1 243 1 244 1 111 1 297 1 113 1 339 1 19 1 220 1 249 3 347 1 305 1 119 1 250 1 222 2 254 1 77 1 130 1 190 6 132 1 266 2 231 2 197 2 140 2 141 2 320 1 91 1 52 2 363 4 327 1 93 2 365 2 326 1 279 1 152 1 55 3 281 1 
25 1 11 1 252 1 296 1 159 1 245 1 46 1 130 1 115 1 165 1 31 1 104 1 241 1 220 1 179 1 8 1 250 1 154 1 281 1 
158 1 297 2 237 1 289 1 130 2 334 1 220 2 212 1 305 1 172 1 250 2 281 2 358 1 
297 1 288 1 130 1 66 1 220 4 334 1 346 1 212 1 305 1 154 1 250 4 281 4 251 1 
126 1 297 2 183 1 142 1 30 1 289 1 130 1 220 2 22 1 212 1 305 1 221 1 250 2 281 2 
208 1 297 1 248 1 220 1 205 1 305 1 86 1 250 1 154 1 281 1 
90 1 297 1 185 1 162 1 130 1 334 1 220 2 212 1 305 1 250 2 281 2 
126 1 90 1 297 2 271 1 130 3 66 1 220 5 334 1 346 1 35 1 212 2 305 2 154 1 250 5 251 1 281 4 
267 1 126 1 90 1 297 2 130 3 66 1 220 5 334 1 346 1 35 1 212 2 305 2 154 1 250 5 251 1 281 4 
297 1 160 1 77 1 140 1 6 2 187 1 130 1 289 1 209 1 291 1 19 1 220 1 212 1 305 1 222 2 154 1 250 1 281 1 
158 1 126 1 297 2 30 1 289 1 130 1 220 1 264 1 212 1 305 1 221 1 250 1 281 1 
182 1 362 1 298 1 263 1 140 1 
11 1 182 1 296 2 76 1 298 2 112 1 140 1 259 1 144 1 341 1 242 1 31 2 202 1 362 2 263 2 230 1 133 1 75 1 180 1 
182 1 298 1 72 1 206 1 6 1 362 1 343 1 19 1 222 1 
182 1 202 1 341 1 
203 1 193 1 238 1 287 1 
207 1 145 1 137 1 193 1 238 1 155 1 287 1 
145 1 308 1 340 1 
58 1 232 1 137 1 224 1 238 1 287 1 207 1 145 3 151 2 315 1 193 1 155 3 
207 1 145 2 137 1 255 1 169 1 193 1 238 1 155 2 287 1 
12 1 207 1 208 1 323 1 145 1 137 1 248 1 315 1 356 1 155 1 287 1 
207 1 145 1 137 1 315 1 193 1 155 1 287 1 
207 1 145 1 137 1 315 1 193 2 238 1 155 1 
207 2 145 2 137 2 315 1 193 1 102 1 155 2 287 1 342 1 134 1 
137 1 255 2 238 1 332 1 287 2 207 1 322 1 145 3 7 1 323 1 315 1 193 1 155 3 
12 1 137 1 255 1 225 1 205 1 238 1 287 1 207 1 145 2 208 1 248 2 315 1 193 1 155 2 87 1 
137 2 255 2 2 1 238 1 332 1 287 2 207 2 145 4 323 1 315 1 169 1 193 1 155 4 
207 1 145 1 137 1 315 1 193 1 238 1 155 1 287 1 
58 1 232 1 137 1 255 2 238 2 332 1 287 3 207 1 145 4 323 1 51 1 151 1 193 2 155 4 
207 1 295 1 145 2 89 1 137 1 255 1 117 1 315 1 193 1 238 1 155 2 287 1 
58 2 232 1 137 1 238 1 287 1 207 1 145 3 151 2 315 1 193 1 304 1 155 3 
177 2 328 1 357 1 287 2 
207 1 145 1 137 1 293 1 315 1 155 1 
207 1 7 1 145 2 137 1 255 1 315 1 193 1 238 1 155 2 287 1 
214 1 
207 1 145 1 137 1 315 1 193 1 238 1 155 1 287 1 
207 1 7 1 145 3 137 1 255 1 151 1 315 1 193 1 238 1 155 3 287 1 
323 1 51 1 332 1 287 1 
193 1 287 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 39 48 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 1 291 2 343 1 25 6 220 1 149 2 172 1 295 1 101 1 298 3 45 2 5 9 201 2 77 1 129 1 274 1 78 1 302 4 33 2 159 2 211 2 282 1 331 5 285 1 163 1 118 9 244 1 263 1 
23 1 343 1 291 2 25 6 220 1 149 2 172 1 295 1 101 1 298 3 45 2 5 9 201 2 77 1 129 1 274 1 78 1 302 4 33 2 159 2 211 2 282 1 331 5 285 1 163 1 118 9 244 1 263 1 
23 1 343 1 291 2 25 7 220 1 149 2 172 1 295 1 101 1 298 4 45 2 5 10 201 2 77 1 129 1 274 1 78 1 302 5 33 2 159 2 211 2 282 1 331 6 285 1 163 1 118 10 244 1 263 1 
23 1 343 1 291 1 25 4 220 1 149 2 295 1 101 1 298 2 45 2 5 7 201 2 77 1 129 1 274 1 78 1 302 3 33 2 159 2 211 2 282 1 331 4 285 1 163 1 118 7 244 1 263 1 
23 1 33 1 291 2 25 3 159 1 149 1 172 1 295 1 211 1 331 3 298 1 5 4 285 1 118 4 201 1 77 1 129 1 302 2 
23 1 33 1 135 1 159 1 149 1 53 1 211 1 331 1 282 1 5 2 45 1 285 1 118 2 77 1 263 1 81 1 
23 1 33 2 25 1 149 2 331 2 298 1 5 3 45 1 285 1 118 3 77 1 78 1 302 1 
23 1 72 1 33 2 291 2 25 7 159 1 220 1 149 2 172 1 295 1 211 1 331 5 226 1 298 3 5 9 45 1 285 1 201 1 244 1 118 9 77 1 129 1 78 1 302 4 
23 1 72 1 33 2 291 2 25 7 159 1 220 1 149 2 172 1 295 1 211 1 331 5 226 1 298 3 5 9 45 1 285 1 201 1 244 1 118 9 77 1 129 1 78 1 302 4 
324 1 242 1 326 1 
225 2 326 1 22 1 
322 2 344 2 153 2 249 2 167 2 309 1 222 2 121 1 
93 1 58 1 191 1 344 3 222 2 124 1 61 2 27 1 176 1 153 2 47 1 103 2 249 3 252 2 31 1 322 2 359 1 360 1 132 1 107 1 180 1 86 1 279 2 182 1 158 2 305 1 16 1 185 1 186 1 307 1 243 1 167 2 310 1 309 1 245 1 92 1 121 1 
322 1 323 1 361 1 344 1 222 1 73 1 153 1 167 1 249 1 121 1 
324 1 217 1 326 1 344 1 193 1 294 1 296 1 73 1 268 1 89 1 140 1 153 1 90 1 249 1 
217 1 344 2 193 2 294 1 222 2 296 1 73 2 268 1 354 1 153 2 249 2 322 2 323 1 361 1 324 1 326 1 89 2 167 2 121 1 
70 1 54 1 89 1 193 1 137 1 
70 1 89 2 324 1 326 1 193 2 267 1 137 1 80 1 
70 1 89 1 193 1 
322 1 323 1 361 1 193 1 344 1 137 1 222 1 73 1 89 1 354 1 153 1 167 1 249 1 121 1 
326 1 
74 1 70 1 89 2 324 1 326 1 193 2 267 1 137 1 
70 2 145 1 342 2 324 1 254 1 326 1 193 5 267 1 137 2 280 2 198 2 151 1 89 5 269 1 175 1 189 1 19 1 30 1 141 1 
242 1 309 1 
322 1 338 1 34 1 344 2 222 1 73 1 153 2 249 2 167 1 29 1 309 1 
238 1 300 1 178 1 
359 1 360 1 191 1 341 1 86 1 344 1 158 1 124 1 186 1 307 1 243 1 47 1 103 1 249 1 309 1 252 1 
359 1 322 1 360 1 191 1 179 1 86 1 344 2 158 1 87 1 222 1 124 1 238 1 186 1 307 1 243 1 153 1 47 1 103 1 249 2 252 1 
322 4 338 1 11 1 179 2 344 5 87 1 222 4 328 1 73 1 126 1 153 5 90 1 249 5 167 1 29 1 309 1 
322 1 361 1 344 1 153 1 249 1 222 1 73 1 
322 2 338 1 179 1 344 2 222 2 73 1 153 2 249 2 309 1 
322 1 361 1 344 1 153 1 249 1 222 1 73 1 
322 1 34 1 344 1 222 1 73 1 153 1 167 1 249 1 29 1 
93 1 58 1 191 1 217 1 344 4 193 1 294 1 222 3 296 1 124 1 98 1 73 1 61 1 268 1 27 1 153 3 47 1 103 1 249 4 29 1 252 1 31 1 359 1 322 3 360 1 132 1 12 1 179 1 86 1 279 2 182 1 158 1 305 1 87 1 16 1 185 1 186 1 307 1 89 1 243 1 167 2 309 1 245 1 121 1 
322 1 338 1 179 1 344 2 222 1 73 1 328 1 153 2 90 1 249 2 309 1 
322 3 32 1 179 2 217 1 326 1 193 1 344 3 294 1 87 1 222 3 296 1 73 1 98 1 268 1 89 1 153 3 167 1 249 3 29 1 
322 2 179 1 344 2 222 2 238 1 153 2 167 1 249 2 29 1 178 1 
359 1 360 1 191 1 86 1 344 1 158 1 124 1 307 1 186 1 243 1 47 1 103 1 249 1 309 1 252 1 
359 1 191 1 86 1 344 1 158 1 266 1 124 1 186 1 243 1 47 1 103 1 249 1 309 1 252 1 130 1 
122 1 58 1 312 1 60 1 147 1 1 1 61 4 300 2 272 1 178 2 31 1 132 1 13 1 279 2 182 1 209 1 305 2 185 1 88 1 238 2 330 1 286 1 310 2 245 1 
322 1 344 1 222 1 73 1 268 1 355 1 153 1 249 1 
4 1 79 1 
4 1 79 1 
363 1 358 1 
363 1 358 1 
363 1 358 1 
4 1 148 1 79 1 
4 1 148 1 79 1 
4 1 168 1 79 1 
4 2 213 1 363 1 264 1 358 1 79 2 
4 1 148 1 79 1 
4 1 287 1 79 1 
4 1 287 1 79 1 
4 1 287 1 79 1 
322 2 290 1 276 1 168 1 157 1 344 2 193 1 222 2 43 1 17 1 257 1 4 1 89 1 125 1 332 1 334 1 188 1 153 2 248 1 262 1 249 2 309 1 79 1 321 1 
276 2 51 1 205 2 362 1 325 1 207 1 157 2 326 1 134 1 193 2 43 2 257 1 4 2 89 2 213 1 248 2 356 1 79 2 321 3 
211 1 201 1 159 1 
211 1 135 1 159 1 
116 1 259 1 201 2 135 1 64 1 159 3 
116 1 353 1 259 1 201 1 135 1 159 2 
116 1 201 1 259 2 135 1 159 2 
290 1 70 1 342 1 312 1 265 2 193 5 267 1 196 1 346 1 198 1 151 3 225 3 7 2 8 1 175 1 247 1 105 1 156 1 13 1 254 2 324 1 326 2 304 2 280 1 137 4 88 1 89 5 187 1 332 1 334 1 286 1 22 1 
70 6 59 1 24 1 342 2 312 3 42 1 265 6 193 9 267 1 196 2 346 2 198 2 151 8 225 9 75 1 7 6 175 1 102 5 247 1 105 3 13 3 254 6 324 1 326 5 137 7 36 1 280 2 88 3 54 5 89 9 332 4 286 3 335 1 189 1 22 3 
342 1 312 1 193 3 265 2 196 1 346 1 198 1 151 3 225 4 7 2 8 1 105 1 13 1 324 1 254 2 326 3 304 1 137 2 280 1 88 1 89 3 187 1 332 1 286 1 189 1 22 2 
24 1 342 1 312 2 42 1 265 4 193 4 196 1 346 1 198 1 151 5 225 7 7 4 8 1 105 2 13 2 324 1 254 4 326 4 304 2 280 1 137 3 88 2 89 4 187 1 332 2 286 2 335 1 189 1 22 3 
186 1 318 1 242 1 
186 1 192 1 
197 1 
186 1 191 1 47 1 
186 1 350 1 
186 1 191 1 
318 2 186 3 224 1 191 1 47 1 289 1 
65 1 122 2 234 1 84 1 206 2 60 3 327 1 305 3 160 1 88 1 61 7 349 1 286 1 251 1 310 4 57 1 216 1 
65 1 122 2 234 1 84 1 206 2 60 3 327 1 305 3 160 1 88 1 61 7 349 1 286 1 251 1 310 4 57 1 216 1 
65 1 122 2 234 1 84 1 206 2 60 3 327 1 305 3 160 1 88 1 61 7 349 1 286 1 166 1 251 1 310 4 57 1 216 1 
71 1 122 5 58 1 312 3 60 10 316 1 317 1 61 31 349 1 270 1 230 1 251 2 104 1 105 3 31 1 65 2 132 1 234 1 84 2 85 3 206 3 13 3 279 2 327 1 305 15 256 1 160 2 185 1 184 4 88 4 286 4 310 16 57 1 216 5 
31 2 275 1 65 1 122 3 132 2 234 1 58 2 84 1 206 2 60 4 279 4 194 1 305 4 160 1 185 2 88 1 317 1 61 9 349 1 286 1 251 1 310 5 57 1 216 1 
23 1 144 1 25 1 149 1 348 1 124 1 5 2 45 1 201 1 77 1 103 1 64 1 10 1 252 1 50 1 155 1 33 1 14 1 255 1 158 1 135 1 159 2 161 1 281 1 211 1 331 1 308 1 285 1 243 1 118 2 
23 1 25 2 149 1 348 1 124 1 5 3 45 1 201 1 77 1 103 1 64 1 10 1 252 1 50 1 155 1 33 1 14 1 255 1 158 1 135 1 236 1 159 2 281 1 211 1 331 1 308 1 243 1 118 3 261 1 120 1 
23 1 155 1 14 1 255 1 158 1 135 1 25 2 159 2 236 1 124 1 281 1 211 1 331 1 308 1 5 2 45 1 243 1 201 1 118 2 77 1 103 1 64 1 120 1 252 1 10 1 
143 1 155 2 191 1 33 1 86 1 35 1 158 1 183 1 149 1 38 1 124 1 186 1 240 1 241 1 308 2 45 2 5 1 243 1 118 1 103 1 261 1 10 2 252 1 
144 1 149 1 348 1 124 1 5 1 45 1 201 1 103 1 64 1 10 1 252 1 50 1 155 1 33 1 14 1 255 1 158 1 135 1 236 1 159 2 281 1 211 1 308 1 285 1 243 1 118 1 
173 1 
70 2 191 1 342 1 217 1 344 1 193 3 294 1 346 1 267 1 26 1 296 1 315 1 73 1 124 1 198 1 268 1 151 1 175 1 153 1 48 1 103 2 249 1 252 2 131 1 203 1 253 1 181 1 86 2 254 1 158 2 35 1 280 1 38 1 186 1 89 3 140 1 243 1 90 1 39 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 70 1 217 1 181 1 193 3 344 1 294 1 267 1 296 1 315 1 73 1 268 1 74 1 89 3 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 342 1 217 1 181 1 344 1 193 2 294 1 280 1 296 1 315 1 73 1 198 1 268 1 89 2 140 1 175 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 217 1 181 1 193 2 344 1 294 1 315 1 296 1 73 1 268 1 89 2 140 1 153 1 90 1 39 1 48 1 249 1 
203 1 342 1 217 1 181 1 344 1 193 2 294 1 280 1 296 1 315 1 73 1 198 1 268 1 89 2 140 1 175 1 153 1 90 1 39 1 48 1 249 1 
31 1 122 2 132 1 58 1 234 1 84 1 206 1 60 2 182 1 279 2 305 3 209 1 185 1 160 1 88 1 238 1 61 6 349 1 300 1 286 1 242 1 309 2 310 3 245 1 57 1 178 1 
71 1 122 1 58 2 312 1 218 1 60 2 61 14 6 1 300 11 176 1 105 2 178 4 31 2 132 2 85 3 13 2 279 4 182 1 303 1 305 6 256 1 16 1 184 3 185 2 88 1 238 11 284 1 286 2 165 1 309 1 245 2 310 8 216 1 
191 1 58 1 341 1 344 2 222 1 124 1 150 1 61 2 153 1 271 1 176 1 47 1 103 1 249 2 250 1 252 1 178 1 359 1 31 1 322 1 360 1 132 1 179 1 86 1 182 1 279 2 158 1 305 1 87 1 185 1 16 1 186 1 307 1 284 1 243 1 309 1 245 1 310 1 
122 4 312 2 2 1 222 1 124 2 176 1 47 2 178 7 322 1 132 3 234 1 84 1 179 1 13 2 86 1 279 6 182 3 236 1 87 1 16 1 185 3 88 3 238 7 186 2 284 1 286 3 243 2 245 3 57 1 339 2 93 2 58 3 191 2 60 8 344 3 293 2 345 2 61 20 349 1 300 7 153 1 103 3 249 3 252 3 105 2 31 3 359 2 360 2 106 1 206 1 158 3 111 1 305 10 160 1 307 2 162 2 309 2 310 10 216 4 
58 2 191 2 344 1 222 1 124 2 61 2 44 1 228 1 153 1 176 1 103 8 249 1 252 8 322 1 31 2 132 2 277 1 179 1 107 2 52 1 86 2 279 4 182 2 158 7 35 1 209 1 305 1 236 1 37 1 185 2 16 1 38 1 161 1 186 3 55 1 243 2 91 1 245 2 310 1 
122 1 58 1 312 1 60 1 344 1 222 1 61 3 300 1 153 1 249 1 29 1 178 1 105 1 31 1 322 1 132 1 13 1 279 2 182 1 305 2 185 1 88 1 238 1 284 1 286 1 167 1 245 1 310 1 20 1 
31 1 132 1 58 1 13 1 60 1 182 1 279 2 147 1 209 1 185 1 238 1 61 2 300 1 286 1 245 1 310 2 216 1 178 1 
31 1 122 1 132 1 58 1 312 1 60 1 182 1 279 2 209 1 1 1 305 2 185 1 88 1 238 1 61 2 300 1 245 1 178 1 
122 1 58 1 312 1 60 2 61 4 300 2 105 1 178 2 31 1 132 1 13 1 279 2 182 1 209 1 305 2 185 1 88 1 238 2 286 1 310 2 245 1 216 1 
31 1 132 1 277 1 58 1 13 1 60 1 182 1 279 2 147 1 185 1 238 1 61 2 300 1 286 1 245 1 310 2 216 1 178 1 
31 1 122 1 132 1 277 1 58 1 312 1 60 1 182 1 279 2 1 1 305 2 185 1 88 1 238 1 61 2 300 1 245 1 178 1 
122 1 58 1 312 1 60 2 61 4 300 2 105 1 178 2 31 1 132 1 277 1 13 1 279 2 182 1 305 2 185 1 88 1 238 2 286 1 310 2 245 1 216 1 
122 1 58 1 312 1 60 2 61 4 300 2 105 1 178 2 31 1 132 1 13 1 279 2 182 1 305 2 185 1 88 1 238 2 286 1 310 2 245 1 216 1 
93 1 191 1 58 1 344 1 124 1 61 2 176 1 47 1 103 1 249 1 252 1 359 1 31 1 360 1 132 1 86 1 182 1 279 2 158 1 305 1 185 1 16 1 307 1 186 1 243 1 310 1 309 1 245 1 
191 1 58 1 266 1 344 1 124 1 61 2 176 1 47 1 103 1 249 1 252 1 130 1 359 1 31 1 132 1 86 1 182 1 279 2 158 1 305 1 112 1 185 1 16 1 186 1 243 1 310 1 309 1 245 1 
122 1 58 1 312 1 60 2 61 4 300 2 105 1 178 2 31 1 132 1 13 1 279 2 182 1 305 2 185 1 88 1 238 2 284 1 286 1 310 2 245 1 216 1 
93 1 122 1 191 1 58 1 312 1 60 2 344 1 293 1 124 1 61 4 300 2 47 1 103 1 249 1 252 1 178 2 105 1 359 1 31 1 360 1 132 1 13 1 182 1 279 2 158 1 305 2 185 1 88 1 238 2 161 1 307 1 186 1 286 1 243 1 310 2 245 1 216 1 
58 1 312 1 60 1 344 1 222 1 61 3 300 1 153 1 249 1 29 1 105 1 178 1 31 1 322 1 132 1 13 1 279 2 182 1 305 1 185 1 114 1 88 1 238 1 284 1 286 1 167 1 245 1 310 2 216 1 
71 1 41 1 122 3 58 2 312 3 60 6 194 1 171 1 195 1 61 19 128 1 46 1 105 3 31 2 132 2 108 2 85 1 13 3 279 4 235 2 305 10 113 1 256 1 184 2 185 2 88 3 139 1 286 3 310 9 216 3 
41 1 71 2 169 1 122 2 58 3 94 1 312 2 60 4 194 1 195 1 99 1 317 2 61 26 128 2 46 1 105 3 31 3 132 3 108 1 85 2 13 3 110 1 279 6 235 4 305 12 113 2 185 3 184 2 88 2 286 3 119 1 310 14 216 2 69 1 
71 3 41 1 169 1 122 4 58 3 94 1 146 1 312 4 60 8 194 1 195 1 99 1 317 1 61 41 349 1 128 2 46 1 105 4 31 3 132 3 234 1 108 1 84 1 206 1 85 3 13 4 110 1 279 6 235 4 305 21 113 1 256 1 160 1 184 4 185 3 88 5 139 1 286 5 119 1 310 20 57 1 216 4 69 1 
71 3 41 1 169 1 122 4 58 4 94 1 146 1 312 3 60 7 194 1 195 1 99 1 317 2 61 38 349 1 128 2 46 1 105 4 31 4 132 4 234 1 108 1 84 1 206 1 85 3 13 4 110 1 279 8 235 4 305 18 113 1 256 1 160 1 184 4 185 4 88 4 139 1 286 5 119 1 310 20 57 1 216 3 69 1 
71 2 41 1 169 1 122 7 58 2 94 1 312 7 60 14 194 1 195 1 99 1 317 1 61 52 349 1 6 2 128 1 46 1 105 7 31 2 132 2 234 1 108 1 84 1 206 1 85 4 13 7 110 1 279 4 235 4 305 25 113 1 256 2 160 1 184 4 185 2 88 8 286 8 119 1 310 27 57 1 216 7 69 1 
276 1 4 1 213 1 325 1 157 1 248 1 337 1 356 1 43 1 79 1 
168 1 125 1 
142 1 276 1 4 1 123 1 157 1 248 1 221 1 43 1 79 1 
351 1 148 1 
287 1 264 1 223 1 
276 1 51 1 205 1 325 1 207 1 157 1 326 1 134 1 193 1 43 1 257 1 4 1 89 1 213 1 248 1 356 1 79 1 321 2 
276 1 51 1 205 1 325 1 207 1 157 1 326 1 134 1 193 1 43 1 257 1 4 1 89 1 213 1 248 1 356 1 79 1 321 2 
276 1 51 1 205 1 325 1 207 1 157 1 326 1 134 1 193 1 43 1 257 1 4 1 89 1 213 1 248 1 356 1 79 1 321 2 
351 1 148 1 264 1 
351 1 148 1 264 1 
287 1 223 1 
287 1 264 1 223 1 
188 1 262 1 
290 1 168 1 344 2 193 1 222 2 43 1 4 1 125 1 153 2 248 1 249 2 79 1 321 1 322 2 276 1 51 1 205 1 157 1 137 1 138 1 17 1 89 1 332 1 334 1 188 1 262 1 309 1 
191 1 58 1 292 1 344 2 96 1 246 1 124 1 61 2 44 1 153 2 176 1 103 2 249 2 252 2 231 1 31 1 132 1 107 2 52 1 182 1 279 2 158 2 305 1 185 1 16 1 186 1 284 1 243 1 260 1 245 1 310 1 
50 1 255 1 158 2 135 1 159 2 236 1 97 1 124 1 161 1 319 1 281 1 211 1 243 1 201 1 103 2 64 1 252 2 10 1 190 1 
50 1 255 1 158 1 135 1 159 2 236 1 97 1 124 1 281 1 211 1 68 1 243 1 201 1 103 1 64 1 252 1 10 1 
143 1 191 1 86 1 158 1 35 1 38 1 124 1 186 1 319 1 243 1 103 1 336 1 252 1 10 1 
50 1 255 1 158 1 135 1 159 2 236 1 97 1 124 1 319 1 281 1 211 1 243 1 201 1 103 1 64 1 252 1 10 1 190 1 
311 1 
151 1 324 1 254 1 242 1 326 1 19 1 30 1 
70 1 342 1 193 1 267 1 198 1 151 1 225 1 152 1 227 1 175 1 254 1 324 1 326 2 280 1 89 1 18 1 22 1 
70 5 217 2 312 2 219 1 265 6 267 3 124 4 318 2 225 12 127 2 7 6 175 4 273 1 47 3 177 1 9 2 131 1 233 2 13 2 324 2 86 1 326 8 15 2 280 4 237 1 88 2 186 10 89 5 333 2 286 2 243 3 289 1 19 1 22 6 191 3 342 4 192 3 193 5 346 2 198 4 151 9 350 2 103 3 252 3 30 1 202 2 105 2 154 2 254 8 158 3 161 1 67 2 162 2 215 1 
70 1 71 1 169 1 94 1 342 2 312 2 193 1 265 5 346 1 267 1 198 2 151 8 225 6 7 5 62 1 175 2 9 1 105 2 131 1 233 2 83 1 85 1 13 2 254 5 110 1 324 2 326 5 184 1 280 2 88 2 89 1 286 2 119 1 22 3 69 1 
342 1 344 1 193 1 222 1 73 1 198 1 151 2 175 1 354 1 200 1 153 1 249 1 9 1 322 1 323 1 233 2 361 1 84 1 254 2 208 1 160 1 280 1 88 1 89 1 286 2 167 1 57 1 121 1 
342 1 254 1 324 1 326 1 280 1 198 1 151 1 175 1 19 1 30 1 
233 2 13 2 254 5 312 2 265 5 326 5 88 2 151 5 225 10 162 1 7 5 286 2 9 1 105 2 22 5 
89 1 70 1 324 1 326 1 193 1 267 1 
70 4 191 1 342 2 193 3 346 2 267 2 26 1 124 1 198 2 151 2 174 1 320 1 175 1 273 1 103 4 177 2 252 4 131 2 253 1 86 2 254 2 158 4 35 1 280 2 38 1 186 1 89 3 243 1 189 1 
93 1 58 1 191 1 344 3 222 2 124 1 61 1 27 1 153 2 47 1 103 1 249 3 252 1 31 1 322 2 359 1 360 1 132 1 86 1 279 2 182 1 158 1 305 1 16 1 185 1 307 1 186 1 243 1 167 2 309 1 245 1 121 1 
131 1 206 1 342 1 254 2 324 2 265 2 326 4 346 1 280 1 198 1 151 1 225 4 7 2 175 1 22 2 
100 1 276 1 43 1 
100 1 276 1 43 1 
276 1 239 1 325 1 262 1 43 1 
100 1 276 1 43 1 
276 1 214 1 43 1 
276 1 214 1 43 1 
276 1 214 1 43 1 
276 1 43 1 
4 1 79 1 
31 2 122 2 132 2 58 2 234 1 84 1 206 1 60 3 279 4 305 4 185 2 160 1 88 1 317 1 61 8 349 1 286 1 310 4 57 1 216 1 
61 6 349 1 122 2 234 1 84 1 206 1 286 1 60 2 242 1 305 3 310 3 160 1 88 1 57 1 
31 1 122 1 132 1 58 1 13 1 312 1 60 2 279 2 305 2 185 1 88 1 61 4 283 1 286 1 310 2 216 1 105 1 
71 1 122 1 85 1 13 1 312 1 60 2 305 4 256 1 184 2 88 1 61 7 286 1 310 3 216 1 105 1 
122 5 58 2 312 2 60 9 317 2 61 23 349 1 299 1 6 1 105 2 31 2 132 2 234 1 84 2 206 1 13 2 85 2 279 4 305 12 256 1 160 2 184 2 185 2 88 3 286 3 165 1 310 11 57 1 216 4 
61 1 305 1 184 1 
61 1 85 1 310 1 
31 1 132 1 122 2 58 1 13 1 312 1 279 2 60 3 305 3 185 1 88 1 61 6 283 1 162 1 286 1 310 3 216 1 105 1 
71 1 122 1 169 1 58 1 94 1 312 2 60 2 194 1 61 12 105 2 31 1 132 1 85 1 13 2 110 1 279 2 305 6 184 1 185 1 88 2 286 2 119 1 310 6 216 1 69 1 
122 1 84 1 60 2 305 3 160 1 88 1 61 6 286 1 310 3 57 1 216 1 
31 1 122 1 132 1 58 1 234 1 84 1 60 2 279 2 305 2 160 1 185 1 317 1 61 3 349 1 299 1 310 1 216 1 
31 1 132 1 122 3 58 1 84 2 279 2 60 5 194 1 208 1 305 5 185 1 160 2 88 2 61 10 286 2 310 5 216 2 57 1 
31 1 132 1 58 1 13 1 279 2 60 1 194 1 185 1 61 2 286 1 310 2 216 1 
31 1 122 1 132 1 58 1 13 1 312 1 60 2 279 2 194 1 305 2 185 1 88 1 61 4 286 1 310 2 216 1 105 1 
31 3 132 3 122 1 58 3 84 1 279 6 60 2 194 1 305 2 185 3 160 1 317 1 139 1 61 3 299 1 310 1 216 1 
71 1 122 7 58 5 312 3 60 12 194 1 316 1 317 2 61 34 349 1 299 1 270 1 104 1 105 3 31 5 132 5 234 1 84 3 206 1 85 3 13 3 279 10 305 18 256 1 160 3 184 4 185 5 88 5 139 1 283 1 286 5 310 16 57 2 216 5 
71 1 122 2 58 1 94 1 60 2 194 1 61 8 349 1 31 1 132 1 234 1 84 1 206 1 85 1 279 2 305 4 184 1 185 1 160 1 88 1 286 1 310 4 57 1 
71 1 122 2 58 2 94 1 60 3 194 1 61 11 349 1 105 1 31 2 132 2 234 1 84 1 206 1 85 1 13 1 279 4 305 5 256 1 160 1 184 2 185 2 88 1 283 1 286 2 310 6 57 1 216 1 
71 1 169 1 122 3 58 3 94 1 312 2 60 4 194 1 317 1 61 19 349 1 105 2 31 3 132 3 234 1 84 1 206 1 85 1 13 2 110 1 279 6 305 10 160 1 184 1 185 3 88 3 283 1 286 3 119 1 310 9 57 1 216 1 69 1 
71 1 122 3 169 1 58 3 94 1 312 1 60 5 194 1 317 1 61 17 349 1 105 2 31 3 132 3 234 1 84 1 206 1 85 1 13 2 110 1 279 6 305 7 160 1 184 1 185 3 88 2 283 1 286 3 119 1 310 10 57 1 216 2 69 1 
71 1 122 2 58 1 94 1 60 2 194 1 61 8 349 1 31 1 132 1 234 1 84 1 206 1 85 1 279 2 305 4 184 1 185 1 160 1 88 1 286 1 310 4 57 1 
71 1 122 1 169 1 58 1 94 1 312 2 60 2 194 1 61 12 105 2 31 1 132 1 85 1 13 2 110 1 279 2 305 6 184 1 185 1 88 2 286 2 119 1 310 6 216 1 69 1 
71 1 169 1 122 3 58 4 94 1 312 1 60 5 194 1 317 2 61 18 349 1 105 2 31 4 132 4 234 1 84 1 206 1 85 1 13 2 110 1 279 8 305 8 160 1 184 1 185 4 88 2 283 1 286 3 119 1 310 10 57 1 216 2 69 1 
71 1 169 1 122 3 58 4 94 1 312 2 60 6 194 1 317 2 61 16 105 3 31 4 132 4 85 1 13 3 110 1 279 8 305 7 184 1 185 4 88 2 139 1 286 3 119 1 310 9 216 3 69 1 
122 3 234 1 84 3 60 6 305 4 160 3 88 1 61 7 349 2 286 1 310 3 216 3 57 1 
71 1 169 1 122 3 58 4 94 1 312 1 60 4 194 1 317 2 61 18 349 1 105 2 31 4 132 4 234 1 84 1 206 1 85 1 13 2 110 1 279 8 305 8 160 1 184 1 185 4 88 2 139 1 286 3 119 1 310 10 57 1 216 1 69 1 
344 1 153 1 90 1 347 1 249 1 309 1 328 1 
82 1 204 1 278 1 344 1 314 1 0 1 347 1 328 1 153 1 90 1 249 1 309 1 
186 1 191 1 86 1 243 1 242 1 35 1 158 1 103 1 38 1 252 1 124 1 
359 1 322 1 191 1 179 1 86 1 344 2 158 1 222 1 124 1 186 1 307 1 243 1 153 1 47 1 103 1 249 2 309 1 252 1 
338 1 191 2 344 2 294 1 222 1 124 1 73 2 268 1 350 1 127 1 153 2 47 2 103 1 249 2 177 1 252 1 322 2 359 1 179 1 158 1 307 1 186 3 243 1 309 1 
338 1 191 2 344 2 294 1 222 1 124 1 73 2 268 1 350 1 127 1 153 2 47 2 103 1 249 2 177 1 252 1 130 1 322 2 359 1 179 1 158 1 186 3 243 1 309 1 
70 1 191 1 95 1 86 1 324 1 217 1 192 1 326 1 193 2 158 3 124 1 329 1 186 4 318 1 89 2 350 1 127 1 243 1 47 1 103 3 177 1 40 1 252 3 
70 1 191 1 95 1 86 1 324 1 217 1 192 1 326 1 193 2 158 3 124 1 186 4 318 1 89 2 350 1 127 1 243 1 47 1 103 3 177 1 252 3 202 1 
243 1 158 1 103 1 37 1 252 1 124 1 
191 2 107 1 52 1 86 2 313 1 158 6 236 1 37 1 124 3 161 1 210 1 186 3 55 1 258 1 243 2 228 1 47 1 103 7 289 1 91 1 252 7 
339 1 93 1 122 2 191 1 58 2 60 2 344 2 293 1 246 1 222 1 124 1 61 6 349 1 300 1 153 1 47 1 103 1 249 2 252 1 178 1 359 1 31 2 322 1 360 1 132 2 234 1 84 1 179 1 206 1 182 2 279 4 158 1 305 3 160 1 185 2 88 1 238 1 161 1 186 1 307 1 284 1 286 1 243 1 309 2 310 3 245 2 57 1 
70 2 342 2 217 1 192 1 193 3 267 1 198 2 151 1 318 1 175 2 273 1 103 1 252 1 30 1 202 1 154 1 324 1 254 1 86 1 326 1 158 1 15 1 280 2 137 1 67 1 186 2 89 3 19 1 
191 1 158 2 37 1 237 1 124 2 161 1 318 1 186 2 243 1 47 1 103 2 289 1 252 2 
191 1 95 1 86 1 158 4 35 1 38 1 124 1 161 1 186 1 117 1 243 1 103 4 252 4 
191 1 158 2 111 1 124 2 210 1 186 1 258 1 243 1 288 1 47 1 103 2 229 1 177 1 252 2 
211 1 86 1 243 1 255 1 158 1 135 1 103 1 159 1 252 1 124 1 
161 1 186 1 191 1 52 1 243 1 158 2 96 1 103 2 236 1 252 2 124 1 
191 2 86 1 52 1 35 1 158 4 38 1 124 2 161 1 186 3 55 1 117 1 243 2 103 5 91 1 177 1 252 5 
232 1 191 2 86 1 52 1 35 1 158 4 38 1 124 2 161 1 186 3 55 1 117 1 243 2 103 5 177 1 252 5 
359 1 322 1 191 1 179 1 86 1 344 2 158 1 222 1 124 1 186 1 243 1 153 1 47 1 103 1 249 2 309 1 252 1 130 1 
191 1 313 1 158 1 124 2 210 1 186 1 258 1 243 1 47 1 103 1 289 1 177 1 252 1 
231 1 340 1 292 1 344 1 136 1 260 1 153 1 56 1 249 1 
3 1 56 1 364 1 
340 1 56 1 136 1 309 1 21 1 
340 1 217 1 344 1 193 2 294 1 222 1 296 1 98 1 73 2 3 1 268 1 354 1 153 1 249 1 63 1 322 1 323 1 361 1 324 1 326 1 136 1 137 1 89 2 56 1 167 1 21 1 121 1 364 1 
23 1 331 1 242 1 77 1 
23 1 331 1 33 1 5 1 118 1 77 1 149 1 
155 1 45 1 5 1 
23 1 33 1 109 1 149 1 331 1 212 1 282 2 5 3 285 1 164 1 118 3 77 1 
23 1 331 1 33 1 5 2 291 1 118 2 77 1 25 1 149 1 
33 1 159 1 149 1 211 1 331 1 5 1 285 1 118 1 201 1 129 1 302 1 
23 1 331 1 33 1 5 1 285 1 118 1 149 1 
23 2 33 1 5 1 285 1 118 1 77 1 149 1 
23 1 297 1 331 1 33 2 5 2 285 1 118 2 28 1 357 1 149 2 
23 1 33 1 25 2 220 1 149 1 331 2 298 1 5 3 285 1 118 3 244 1 77 1 302 1 
23 1 33 1 135 1 170 1 25 1 159 2 149 1 211 1 331 1 5 2 285 1 118 2 201 1 77 1 64 1 
23 1 33 2 291 1 25 2 149 2 172 1 331 2 298 1 5 4 285 1 118 4 77 1 302 1 
23 1 331 1 33 1 5 1 285 1 118 1 77 1 149 1 
23 2 33 1 109 1 25 2 149 1 306 1 282 1 212 1 331 3 298 1 5 4 118 4 77 2 302 1 
23 1 331 1 226 1 133 1 352 1 33 1 5 2 285 1 118 2 77 1 25 1 149 1 
23 1 33 1 109 2 149 1 115 1 212 1 331 1 282 2 5 3 285 1 118 3 77 1 
331 2 76 2 199 1 49 1 
33 1 5 1 285 1 118 1 66 1 149 1 
23 1 331 1 33 1 5 2 285 1 244 1 118 2 77 1 25 1 149 1 
301 1 
23 1 331 1 33 1 5 1 285 1 118 1 77 1 149 1 
23 1 33 1 25 1 149 1 282 1 331 1 5 3 285 1 118 3 244 1 77 1 
331 1 298 1 302 1 306 1 
23 1 331 1 

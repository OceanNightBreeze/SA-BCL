#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 65 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 322 35 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 322 35 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 65 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
261 1 71 2 360 1 304 1 21 2 27 1 183 9 337 2 185 2 128 1 110 2 233 1 87 6 214 2 376 2 142 1 291 4 143 1 145 1 324 3 149 1 326 1 219 1 44 1 49 1 277 9 195 5 177 1 
261 1 71 2 360 1 304 1 21 2 27 1 183 9 337 2 185 2 128 1 110 2 233 1 87 6 214 2 376 2 142 1 291 4 143 1 145 1 324 3 149 1 326 1 219 1 44 1 49 1 277 9 195 5 177 1 
261 1 71 2 360 1 304 1 21 2 27 1 183 10 337 2 185 2 128 1 110 2 233 1 87 7 214 2 376 2 142 1 291 5 143 1 145 1 324 4 149 1 326 1 219 1 44 1 49 1 277 10 195 6 177 1 
261 1 71 1 360 1 304 1 21 2 27 1 183 7 337 2 185 2 128 1 110 2 87 4 214 2 376 2 142 1 291 3 143 1 145 1 324 2 149 1 326 1 219 1 44 1 49 1 277 7 195 4 177 1 
71 2 233 1 87 3 214 1 304 1 376 1 291 2 27 1 183 4 337 1 324 1 149 1 185 1 326 1 128 1 277 4 195 3 110 1 
214 1 304 1 21 1 27 1 183 2 337 1 149 1 126 1 185 1 44 1 329 1 163 1 49 1 195 1 277 2 110 1 
87 1 214 2 304 1 21 1 291 1 27 1 183 3 143 1 337 2 324 1 149 1 277 3 195 2 
261 1 71 2 304 1 21 1 27 1 183 9 337 2 185 1 128 1 110 1 87 7 233 1 214 2 376 1 291 4 143 1 324 3 149 1 326 1 151 1 219 1 175 1 277 9 195 5 
261 1 71 2 304 1 21 1 27 1 183 9 337 2 185 1 128 1 110 1 87 7 233 1 214 2 376 1 291 4 143 1 324 3 149 1 326 1 151 1 219 1 175 1 277 9 195 5 
354 1 65 1 345 1 
224 2 354 1 256 1 
218 2 206 2 320 1 182 2 56 2 34 1 286 2 352 2 
180 1 181 2 72 1 182 3 56 2 204 1 159 2 32 1 206 2 59 1 79 1 129 1 164 1 34 1 270 1 286 2 135 2 111 1 346 1 372 1 112 1 231 2 374 1 320 1 349 1 288 1 352 2 171 1 94 1 293 1 218 3 353 1 356 1 330 1 222 1 178 2 19 1 
218 1 206 1 320 1 295 1 225 1 182 1 56 1 286 1 336 1 352 1 
264 1 182 1 225 1 192 1 271 1 202 1 352 1 218 1 354 1 297 1 300 1 278 1 345 1 70 1 
264 2 182 1 225 1 56 1 192 1 202 1 352 1 206 1 218 1 354 1 300 1 286 1 278 1 345 1 70 2 
264 1 328 1 121 1 50 1 70 1 
236 1 354 1 264 2 328 1 14 1 121 1 345 1 70 2 
264 1 121 1 70 1 
124 1 320 1 264 1 225 1 182 1 56 1 336 1 352 1 206 1 218 1 295 1 328 1 286 1 70 1 
354 1 
236 1 354 1 264 2 200 1 328 1 121 1 345 1 70 2 
213 1 264 5 362 2 90 1 240 2 117 1 95 1 236 1 148 1 354 1 96 1 105 2 328 2 7 1 136 1 85 1 121 2 345 1 70 5 
65 1 34 1 
166 1 180 1 349 1 74 1 182 2 352 1 171 1 159 1 32 1 252 1 206 1 218 2 129 1 330 1 286 1 135 1 178 1 19 1 112 1 372 1 
182 2 56 1 352 2 218 2 206 1 227 1 379 1 34 2 286 1 
166 1 120 1 76 1 
180 1 349 1 182 1 171 1 159 1 218 1 32 1 162 1 129 1 330 1 34 1 135 1 178 1 19 1 372 1 112 1 
252 1 218 3 206 3 182 3 56 1 34 1 286 3 352 3 
218 1 206 1 295 1 225 1 182 1 286 1 352 1 
218 1 206 1 227 1 225 1 182 1 379 1 56 1 286 1 352 1 
180 1 181 1 72 1 264 1 182 4 74 1 225 1 56 2 202 1 159 1 32 1 206 3 59 1 129 1 164 1 34 1 270 1 286 3 135 1 111 1 346 1 112 1 372 1 231 2 349 1 348 1 320 1 288 1 192 1 352 3 171 1 94 1 293 1 218 4 252 1 353 1 379 1 300 1 152 1 330 1 278 1 178 1 19 1 70 1 
218 2 206 1 252 1 182 2 34 1 271 1 286 1 352 2 302 1 
264 1 225 1 74 1 182 3 361 1 56 1 192 1 202 1 352 3 252 2 206 3 218 3 354 1 379 1 300 1 152 1 286 3 278 1 70 1 
166 1 182 2 56 1 76 1 352 2 252 1 206 2 218 2 379 1 286 2 
180 1 349 1 182 1 171 1 159 1 218 1 32 1 129 1 330 1 34 1 135 1 178 1 372 1 112 1 19 1 
180 1 182 1 159 1 218 1 32 1 78 1 129 1 330 1 34 1 135 1 178 1 197 1 372 1 112 1 19 1 
166 2 231 2 181 4 72 1 288 1 335 1 76 2 125 1 64 1 94 1 308 1 160 1 59 1 257 1 79 2 260 1 220 1 164 1 120 2 270 2 86 1 111 1 230 1 165 1 
218 1 206 1 225 1 182 1 192 1 132 1 286 1 352 1 
182 5 74 1 56 1 271 1 352 5 252 2 206 4 218 5 273 1 379 1 34 1 286 4 99 1 302 1 
218 2 206 2 295 1 225 1 182 2 132 1 286 2 352 2 
267 1 285 1 
267 1 285 1 
130 1 283 1 
130 1 283 1 
130 1 283 1 
267 1 47 1 285 1 
267 1 285 1 226 1 
267 2 378 1 130 1 285 2 283 1 51 1 
267 1 47 1 285 1 
267 1 47 1 285 1 
267 1 285 1 102 1 
267 1 285 1 102 1 
267 1 285 1 102 1 
199 1 73 3 264 2 88 1 75 1 15 2 323 1 2 1 194 2 58 2 363 2 146 1 354 1 267 2 189 2 285 2 301 1 51 1 70 2 
199 1 73 1 264 1 182 2 20 1 226 1 363 1 58 1 206 2 161 1 267 1 189 1 285 1 34 1 286 2 168 1 352 2 144 1 194 1 218 2 253 1 355 1 176 1 70 1 
185 1 376 1 110 1 
185 1 126 1 110 1 
126 1 53 1 376 2 68 1 110 3 239 1 
365 1 126 1 53 1 376 1 110 2 239 1 
126 1 376 1 53 2 110 2 239 1 
224 3 264 5 20 1 362 1 240 1 160 1 105 1 187 1 108 1 230 1 345 1 63 1 250 1 12 2 321 1 234 1 90 1 144 1 117 3 236 1 96 2 354 2 257 1 256 1 97 2 328 4 45 2 260 1 154 1 176 1 121 1 70 5 
224 9 264 9 362 2 240 2 160 3 105 2 187 3 342 1 287 1 230 3 345 1 63 2 213 1 232 5 249 1 250 1 12 6 375 1 90 1 144 4 41 1 117 8 236 1 96 6 354 5 257 3 256 3 97 6 328 7 260 3 154 2 121 6 358 1 50 5 70 9 
224 4 264 3 362 1 240 1 160 1 105 1 187 1 345 1 230 1 63 1 213 1 12 2 321 1 234 1 144 1 117 3 354 3 96 2 257 1 256 2 97 2 328 2 45 1 260 1 154 1 70 3 
224 7 264 4 362 1 240 1 160 2 105 1 187 2 345 1 230 2 63 1 213 1 12 4 321 1 375 1 234 1 144 2 41 1 117 5 354 4 96 4 257 2 256 3 97 4 45 2 328 3 260 2 154 1 358 1 70 4 
65 1 19 1 265 1 
106 1 19 1 
247 1 
32 1 19 1 
118 1 32 1 129 1 22 1 265 2 19 3 
32 1 129 1 19 1 
113 1 19 1 
332 2 181 13 160 3 79 7 269 1 340 1 134 1 133 2 270 6 229 1 86 4 138 1 272 1 64 3 275 1 257 3 327 1 48 2 
332 2 181 13 160 3 79 7 269 1 340 1 134 1 133 2 270 6 229 1 86 6 138 3 272 1 64 3 275 1 257 3 327 1 48 2 
332 2 181 13 160 3 79 7 269 1 340 1 134 1 133 2 270 6 229 1 86 4 138 1 169 1 272 1 64 3 275 1 257 3 327 1 48 2 
332 3 181 39 0 1 28 1 242 1 160 6 59 1 79 20 187 3 269 2 340 1 164 1 133 3 270 19 134 2 62 1 229 1 111 1 86 13 230 3 138 7 231 2 318 1 10 1 89 1 92 3 272 2 94 1 64 6 275 1 257 6 327 1 48 2 260 3 221 4 
332 2 181 15 160 3 59 2 79 8 269 1 340 1 81 1 164 2 134 1 270 7 133 2 315 1 229 1 111 2 86 6 138 2 231 4 10 1 272 1 94 2 64 4 275 1 257 3 48 2 
180 1 304 1 21 1 54 1 24 1 27 1 281 1 183 2 29 1 337 1 159 1 185 1 126 1 135 1 110 2 211 1 87 1 289 1 214 1 39 1 376 1 91 1 274 1 149 1 66 1 195 1 277 2 330 1 68 1 178 1 
180 1 304 1 21 1 24 1 27 1 281 1 183 3 306 1 29 1 337 1 1 1 159 1 185 1 126 1 135 1 110 2 211 1 289 1 87 2 214 1 39 1 376 1 91 1 274 1 254 1 195 1 277 3 330 1 68 1 178 1 
180 1 304 1 21 1 24 1 27 1 281 1 183 2 306 1 29 1 159 1 126 1 185 1 135 1 110 2 211 1 289 1 87 2 376 1 274 1 254 1 195 1 277 2 330 1 68 1 178 1 
180 1 212 1 289 2 350 1 214 1 116 1 21 2 183 1 281 2 1 1 337 1 103 1 159 1 32 1 274 2 299 1 330 1 277 1 135 1 344 1 178 1 19 1 372 1 
180 1 21 1 54 1 24 1 281 1 183 1 306 1 29 1 337 1 159 1 185 1 126 1 135 1 110 2 211 1 289 1 214 1 39 1 376 1 91 1 274 1 149 1 277 1 330 1 68 1 178 1 
31 1 
201 1 57 2 282 1 240 1 202 1 203 1 103 1 159 2 241 1 105 1 345 1 63 1 347 1 116 1 352 1 117 2 173 1 294 4 218 1 354 2 256 2 255 2 297 1 300 1 121 6 178 2 70 5 19 1 224 2 180 1 262 1 264 5 182 1 225 1 362 1 30 2 32 1 228 2 368 1 82 1 135 2 36 1 372 2 139 2 192 1 193 1 90 1 271 1 236 3 96 2 46 1 380 2 155 2 330 1 278 1 
139 1 262 1 264 3 200 1 225 1 182 1 192 1 282 1 202 1 271 1 203 1 352 1 294 2 236 1 218 1 297 1 300 1 368 1 121 2 36 1 278 1 70 3 
262 1 264 3 182 1 225 1 200 1 282 1 202 1 203 1 30 1 368 1 36 1 345 1 192 1 271 1 352 1 294 3 218 1 236 1 354 1 297 1 300 1 121 1 278 1 70 3 
262 1 264 3 200 1 182 1 225 1 282 1 202 1 203 1 30 1 228 1 368 1 36 1 345 1 139 1 192 1 271 1 352 1 294 3 236 1 218 1 354 1 297 1 300 1 121 2 278 1 70 3 
200 1 201 1 57 2 282 1 202 1 240 1 203 1 105 1 208 1 345 5 352 1 170 1 117 1 294 6 218 1 354 5 297 1 255 2 256 2 300 1 121 7 122 1 70 5 262 1 264 5 225 1 182 1 362 1 30 4 228 4 368 1 36 1 373 1 139 4 192 1 90 1 193 1 271 1 236 3 377 1 96 1 155 2 380 2 278 1 
201 1 57 2 282 1 202 1 240 1 203 1 105 1 345 1 352 1 117 1 294 4 218 1 354 2 297 1 255 2 256 2 300 1 121 4 70 4 224 2 262 1 264 4 225 1 182 1 362 1 30 2 228 2 368 1 82 1 36 1 139 2 192 1 90 1 193 1 271 1 236 2 96 1 155 2 380 2 278 1 
262 1 264 4 182 1 225 1 201 1 57 2 362 1 282 1 202 1 240 1 203 1 30 2 105 1 228 2 208 1 368 1 36 1 345 1 139 2 192 1 193 1 90 1 271 1 352 1 170 1 117 1 294 4 236 2 218 1 354 1 96 1 256 2 255 2 297 1 300 1 380 2 155 2 121 4 122 1 278 1 70 4 
262 1 264 4 182 1 225 1 201 1 57 2 362 1 282 1 202 1 240 1 203 1 30 2 105 1 228 2 208 1 368 1 36 1 345 1 139 2 192 1 193 1 90 1 271 1 352 1 170 1 117 1 294 4 236 2 218 1 354 1 96 1 256 2 255 2 297 1 300 1 380 2 155 2 121 4 122 1 278 1 70 4 
224 2 262 1 264 4 182 1 225 1 362 1 282 1 202 1 240 1 203 1 30 2 104 2 105 1 228 2 131 2 368 1 341 1 83 1 36 1 345 1 139 2 251 1 192 1 193 1 90 1 271 1 352 1 117 1 294 4 236 2 218 1 354 1 96 1 255 2 297 1 300 1 155 2 121 4 122 1 278 1 70 4 
262 1 264 4 182 1 225 1 201 1 57 2 362 1 282 1 240 1 202 1 203 1 30 3 105 1 228 3 208 1 368 1 36 1 345 1 373 1 139 3 192 1 193 1 90 1 271 1 352 1 170 1 117 1 294 5 236 2 218 1 354 1 96 1 256 2 255 2 297 1 300 1 380 2 155 2 121 5 122 1 278 1 70 4 
262 1 264 4 182 1 225 1 201 1 57 2 362 1 282 1 240 1 202 1 203 1 30 3 105 1 228 3 208 1 368 1 36 1 345 1 373 1 139 3 192 1 193 1 90 1 271 1 352 1 170 1 117 1 294 5 236 2 218 1 354 1 96 1 256 2 255 2 297 1 300 1 380 2 155 2 121 5 122 1 278 1 70 4 
224 2 262 1 264 4 182 1 225 1 362 1 282 1 240 1 202 1 203 1 30 2 104 2 105 1 228 2 131 2 368 1 82 1 83 1 36 1 345 1 139 2 192 1 193 1 90 1 271 1 352 1 117 1 294 4 236 2 218 1 354 1 96 1 255 2 297 1 300 1 155 2 121 4 278 1 70 4 
332 1 231 2 181 4 72 1 288 1 335 1 64 1 94 1 160 1 59 1 275 1 257 1 79 2 65 1 48 1 164 1 34 1 270 2 133 1 229 1 86 1 111 1 
72 1 181 14 28 1 0 1 76 4 3 1 160 2 59 2 33 1 79 8 187 2 164 2 34 1 270 6 86 2 111 2 346 1 138 1 9 1 230 2 319 1 231 4 166 11 374 1 288 2 92 3 64 1 94 2 257 1 260 1 120 11 221 3 196 1 
180 1 72 1 181 2 182 2 74 1 76 1 159 1 32 1 206 1 364 1 59 1 127 1 162 1 79 1 129 1 164 1 34 1 135 1 286 1 270 1 111 1 112 1 372 1 9 1 346 1 231 2 349 1 374 1 288 1 352 1 171 1 94 1 218 2 252 1 330 1 178 1 19 1 179 1 
332 2 159 1 206 1 160 5 59 3 340 1 164 3 286 1 248 2 111 3 346 1 9 1 112 2 166 6 349 2 288 3 352 1 171 2 64 5 252 1 218 3 353 2 257 5 260 2 120 6 178 1 19 2 223 2 180 2 72 3 181 26 359 2 263 1 225 1 74 1 182 3 76 6 32 2 77 1 187 2 79 13 129 2 34 2 133 2 369 1 270 13 135 1 229 1 86 6 138 1 372 1 230 2 231 6 374 1 94 3 147 2 275 1 48 2 330 2 
180 2 72 2 181 2 182 1 306 1 335 1 103 1 159 7 206 1 32 2 207 1 59 2 60 1 367 1 79 1 164 2 286 1 135 8 270 1 111 2 317 1 372 2 346 1 231 4 374 1 288 2 290 1 116 1 352 1 40 1 16 1 94 2 218 1 252 1 66 1 330 2 356 2 178 8 19 3 
72 1 181 3 182 1 56 1 25 1 76 1 206 1 160 1 59 1 187 1 79 1 164 1 286 1 270 2 86 1 111 1 9 1 230 1 166 1 231 2 288 1 352 1 64 1 94 1 218 1 257 1 379 1 260 1 120 1 
166 1 231 2 181 2 72 1 288 1 335 1 76 1 94 1 160 1 59 1 79 2 164 1 120 1 86 1 111 1 138 1 165 1 230 1 
166 1 231 2 181 2 72 1 288 1 335 1 76 1 125 1 64 1 94 1 59 1 257 1 260 1 164 1 120 1 270 2 86 1 111 1 
72 1 181 4 335 1 76 2 160 1 59 1 79 2 187 1 164 1 270 2 111 1 86 2 230 1 138 1 231 2 166 2 288 1 94 1 64 1 257 1 260 1 120 2 
166 1 231 2 181 2 72 1 288 1 76 1 16 1 94 1 160 1 59 1 79 2 164 1 120 1 86 1 111 1 138 1 165 1 230 1 
166 1 231 2 181 2 72 1 288 1 76 1 125 1 16 1 64 1 94 1 59 1 257 1 260 1 164 1 120 1 270 2 86 1 111 1 
166 2 231 2 181 4 72 1 288 1 76 2 16 1 64 1 94 1 160 1 59 1 257 1 187 1 79 2 260 1 164 1 120 2 270 2 86 2 111 1 138 1 230 1 
166 2 231 2 72 1 288 1 181 4 76 2 64 1 94 1 160 1 59 1 257 1 187 1 79 2 260 1 164 1 120 2 270 2 86 2 111 1 138 1 230 1 
180 1 181 2 72 1 182 1 159 1 32 1 59 1 79 1 129 1 164 1 34 1 135 1 270 1 111 1 112 1 372 1 346 1 231 2 374 1 349 1 288 1 171 1 94 1 218 1 353 1 330 1 178 1 19 1 
180 1 181 2 72 1 182 1 159 1 32 1 59 1 78 1 79 1 129 1 80 1 164 1 34 1 135 1 270 1 111 1 112 1 372 1 346 1 231 2 374 1 288 1 94 1 218 1 330 1 178 1 197 1 19 1 
166 2 231 2 181 4 72 1 288 1 76 2 64 1 94 1 160 1 59 1 257 1 187 1 79 2 260 1 164 1 120 2 270 2 86 2 111 1 138 1 9 1 230 1 
180 1 223 1 181 4 72 1 182 1 76 2 159 1 160 1 32 1 59 1 79 2 187 1 129 1 164 1 270 2 135 1 86 2 111 1 138 1 230 1 112 1 166 2 231 2 349 1 288 1 171 1 64 1 94 1 218 1 353 1 257 1 66 1 260 1 330 1 120 2 178 1 19 1 
72 1 181 3 182 1 56 1 76 1 206 1 160 1 59 1 187 1 79 2 164 1 270 1 286 1 86 1 111 1 138 1 9 1 230 1 231 2 166 1 288 1 235 1 352 1 94 1 218 1 257 1 379 1 260 1 120 1 
181 19 55 1 28 1 0 1 158 1 243 2 160 3 184 1 59 2 79 9 187 3 81 1 164 2 107 1 35 1 109 1 270 10 111 2 86 6 230 3 138 3 37 1 231 4 322 2 92 1 64 3 94 2 257 3 260 3 221 2 
333 1 181 26 28 2 158 1 243 4 160 3 59 3 79 14 187 3 61 1 81 1 164 3 244 1 107 1 35 1 270 12 109 2 314 1 86 3 111 3 138 2 230 3 10 2 37 2 231 6 322 1 92 2 64 1 94 3 257 2 260 2 18 1 221 2 101 1 
332 1 333 1 181 40 23 1 55 1 28 3 0 1 158 1 243 4 160 5 59 3 79 19 187 4 61 1 81 1 164 3 244 1 107 1 35 1 133 1 314 1 109 1 270 21 229 1 111 3 86 7 230 4 138 4 10 1 37 2 231 6 322 1 92 3 64 3 94 3 275 1 257 5 48 1 260 4 18 1 221 4 101 1 
333 1 332 1 55 1 0 1 158 1 160 5 243 4 59 4 61 1 164 4 244 1 107 1 109 1 111 4 10 2 64 4 257 4 260 3 18 1 221 4 181 37 23 1 28 3 187 4 79 19 81 1 270 18 314 1 133 1 35 1 229 1 86 7 138 3 230 4 231 8 37 2 322 1 92 3 94 4 275 1 48 1 101 1 
332 1 333 1 181 43 28 2 0 2 158 1 243 2 160 7 59 2 79 22 187 6 61 1 81 1 164 2 244 1 107 1 35 1 133 1 314 1 109 1 270 21 229 1 111 2 86 12 230 6 138 6 10 1 319 2 37 1 231 4 322 1 92 4 64 6 94 2 275 1 257 7 48 1 260 6 18 1 221 4 101 1 
119 1 267 1 88 1 189 1 285 1 323 1 51 1 363 1 58 1 194 1 
161 1 226 1 
366 1 311 1 267 1 189 1 285 1 307 1 363 1 58 1 194 1 
199 1 73 2 264 1 88 1 75 1 15 1 323 1 2 1 194 1 58 1 363 1 146 1 354 1 267 1 189 1 285 1 51 1 70 1 
199 1 73 2 264 1 88 1 75 1 15 1 323 1 2 1 194 1 58 1 363 1 146 1 354 1 267 1 189 1 285 1 51 1 70 1 
199 1 73 2 264 1 88 1 75 1 15 1 323 1 2 1 194 1 58 1 363 1 146 1 354 1 267 1 189 1 285 1 51 1 70 1 
378 1 47 1 331 1 
378 1 47 1 331 1 
17 1 102 1 
378 1 17 1 102 1 
355 1 168 1 
73 1 264 1 182 2 20 1 75 1 226 1 363 1 58 1 206 2 161 1 267 1 189 1 285 1 34 1 286 2 15 1 168 1 144 1 352 2 194 1 218 2 253 1 355 1 328 1 176 1 381 1 70 1 
47 1 331 1 
378 1 17 1 102 1 
180 1 72 1 181 2 182 2 159 2 32 1 59 1 60 1 79 1 188 1 164 1 84 1 135 2 270 1 190 1 111 1 210 1 9 1 346 1 231 2 374 1 288 1 352 2 40 1 94 1 218 2 174 1 330 1 356 2 178 2 19 1 
180 1 289 1 376 1 24 1 91 1 306 1 29 1 159 2 292 1 185 1 126 1 66 1 330 1 238 1 68 1 135 2 110 2 246 1 178 2 
180 1 289 1 376 1 24 1 91 1 306 1 29 1 159 1 292 1 185 1 126 1 330 1 68 1 135 1 245 1 110 2 178 1 
180 1 212 1 289 1 116 1 103 1 159 1 32 1 330 1 135 1 246 1 178 1 69 1 19 1 372 1 
180 1 289 1 376 1 24 1 91 1 306 1 29 1 159 1 292 1 185 1 126 1 330 1 238 1 68 1 135 1 110 2 246 1 178 1 
313 1 
95 1 354 1 96 1 65 1 7 1 117 1 345 1 
224 1 264 1 201 1 362 1 57 1 240 1 105 1 345 1 90 1 117 1 236 1 96 1 354 2 256 1 380 1 121 1 70 1 
156 2 279 1 240 4 159 3 4 1 160 2 105 4 339 2 106 3 7 1 345 2 63 2 113 2 114 2 12 6 117 9 354 8 258 2 256 6 257 2 66 1 260 2 121 5 178 3 19 10 70 5 180 4 224 12 359 2 264 5 22 1 26 1 362 4 305 2 265 2 32 3 309 1 187 2 129 3 135 3 316 2 372 1 230 2 90 4 95 1 236 3 150 2 96 8 97 6 46 1 153 2 330 3 100 1 278 2 
224 6 333 1 264 1 156 1 28 1 362 2 240 2 160 2 105 2 187 2 244 1 314 1 343 1 230 2 345 1 12 5 90 2 92 1 117 7 236 1 354 4 96 4 97 5 256 3 257 2 260 2 18 1 121 1 221 1 101 1 70 1 
332 1 124 1 264 1 225 1 182 1 156 2 56 1 362 1 240 1 336 1 160 2 206 1 105 1 340 1 208 1 133 1 286 1 320 1 90 1 352 1 117 2 218 1 295 1 96 2 257 1 48 1 153 1 70 1 
362 1 90 1 240 1 117 1 95 1 105 1 96 1 354 1 7 1 345 1 
224 10 359 1 156 2 12 5 117 5 160 2 96 5 354 5 97 5 256 5 257 2 187 2 260 2 153 1 230 2 
236 1 354 1 264 1 121 1 345 1 70 1 
180 1 264 3 26 2 362 2 240 2 103 1 159 4 32 1 309 1 312 1 105 2 135 4 372 2 347 1 63 2 213 1 116 1 90 1 117 2 173 1 236 2 96 2 298 1 46 2 330 1 121 4 178 4 19 1 70 3 
180 1 181 1 72 1 182 3 56 2 159 1 206 2 32 1 59 1 129 1 164 1 34 1 270 1 135 1 286 2 111 1 346 1 372 1 112 1 231 2 320 1 349 1 288 1 352 2 171 1 94 1 293 1 218 3 353 1 330 1 178 1 19 1 
224 4 63 1 12 2 362 1 90 1 240 1 117 1 96 2 105 1 354 4 256 2 97 2 46 1 134 1 345 2 
189 1 157 1 363 1 
237 1 189 1 323 1 168 1 363 1 
189 1 157 1 363 1 
189 1 157 1 363 1 
189 1 198 1 363 1 
189 1 198 1 363 1 
189 1 198 1 363 1 
189 1 363 1 
267 1 285 1 
332 2 181 16 160 3 59 2 79 8 340 1 164 2 133 2 270 8 229 1 111 2 86 6 138 3 10 1 231 4 94 2 64 3 275 1 257 3 48 2 
332 1 181 4 64 1 160 1 275 1 257 1 65 1 79 2 48 1 270 2 133 1 229 1 86 1 
231 2 52 1 181 4 64 1 94 1 160 1 59 1 257 1 187 1 79 2 260 1 164 1 270 2 86 2 111 1 230 1 138 1 
181 7 28 1 0 1 92 1 64 1 160 1 257 1 79 3 187 1 260 1 221 2 270 4 86 2 230 1 138 1 
332 2 181 24 0 1 3 1 160 5 59 1 187 2 79 12 340 1 164 1 133 2 270 12 229 1 86 6 111 1 230 2 138 2 319 1 10 1 231 2 92 2 64 4 94 1 275 1 257 5 48 2 260 2 221 2 
181 1 270 1 221 1 
181 1 79 1 92 1 
231 2 52 1 359 1 181 6 94 1 64 2 160 1 59 1 257 1 187 1 79 3 260 1 164 1 270 3 111 1 86 3 230 1 138 1 
333 1 181 12 28 1 160 2 59 1 79 6 187 2 81 1 164 1 244 1 270 6 314 1 111 1 86 2 138 1 230 2 231 2 92 1 94 1 64 1 257 2 260 2 18 1 221 1 101 1 
332 1 181 6 64 1 160 1 257 1 79 3 48 1 270 3 133 1 86 2 138 1 
332 1 10 1 231 2 181 3 64 1 94 1 275 1 59 1 79 1 164 1 6 1 133 1 270 2 229 1 86 2 111 1 138 1 
231 2 332 2 181 10 94 1 64 3 160 2 59 1 257 2 79 5 48 1 81 1 340 1 164 1 133 2 270 5 111 1 86 5 138 2 
231 2 181 2 94 1 160 1 59 1 79 2 81 1 164 1 111 1 86 1 230 1 138 1 
231 2 181 4 64 1 94 1 160 1 59 1 257 1 187 1 79 2 260 1 81 1 164 1 270 2 86 2 111 1 230 1 138 1 
10 1 231 6 332 1 181 3 55 1 94 3 64 1 59 3 79 1 81 1 164 3 6 1 270 2 133 1 111 3 86 2 138 1 
332 2 52 1 181 30 55 1 28 1 242 1 160 5 59 4 79 15 187 2 340 1 81 1 164 4 133 2 270 15 62 1 229 1 111 4 86 8 230 2 138 4 10 1 231 8 89 1 92 3 64 4 94 4 275 1 257 5 48 2 260 2 221 3 
333 1 332 2 181 14 28 1 160 3 59 1 79 7 340 1 81 1 164 1 270 7 133 2 229 1 111 1 86 4 138 1 231 2 92 1 94 1 64 3 275 1 257 3 48 2 221 1 
332 2 333 1 181 17 52 1 28 1 0 1 160 4 59 2 79 9 187 1 340 1 81 1 164 2 133 2 270 8 229 1 111 2 86 5 230 1 138 2 231 4 92 1 64 3 94 2 275 1 257 3 48 2 221 2 
333 1 52 1 181 13 28 1 160 2 59 3 79 6 187 2 81 1 164 3 244 1 270 7 314 1 111 3 86 2 138 1 230 2 231 6 10 1 92 1 94 3 64 1 257 2 260 2 18 1 221 1 101 1 
333 1 52 1 181 11 28 1 160 2 59 3 79 7 187 2 81 1 164 3 244 1 270 4 314 1 111 3 86 2 138 1 230 2 10 1 231 6 92 1 94 3 64 1 257 1 260 1 18 1 221 1 101 1 
333 1 332 2 181 14 28 1 160 3 59 1 79 7 340 1 81 1 164 1 270 7 133 2 229 1 111 1 86 4 138 1 231 2 92 1 94 1 64 3 275 1 257 3 48 2 221 1 
333 1 181 12 28 1 160 2 59 1 79 6 187 2 81 1 164 1 244 1 270 6 314 1 111 1 86 2 138 1 230 2 231 2 92 1 94 1 64 1 257 2 260 2 18 1 221 1 101 1 
333 1 181 12 52 1 28 1 160 2 59 4 79 7 187 2 81 1 164 4 244 1 270 5 314 1 111 4 86 2 138 1 230 2 231 8 10 2 92 1 94 4 64 1 257 1 260 1 18 1 221 1 101 1 
333 1 181 12 55 1 28 1 160 2 59 4 79 7 187 2 81 1 164 4 244 1 270 5 314 1 111 4 86 4 138 2 230 2 231 8 10 2 92 1 94 4 64 2 257 1 260 1 18 1 221 1 101 1 
332 3 181 7 64 3 160 1 275 2 257 1 79 3 48 1 270 4 133 3 229 1 86 6 138 3 
333 1 181 12 55 1 28 1 160 2 59 4 79 7 187 2 81 1 164 4 244 1 270 5 314 1 111 4 86 2 138 1 230 2 231 8 10 2 92 1 94 4 64 1 257 1 260 1 18 1 221 1 101 1 
218 1 182 1 34 1 271 1 352 1 302 1 191 1 
182 1 215 1 271 1 93 1 352 1 218 1 259 1 34 1 209 1 191 1 302 1 371 1 
180 1 32 1 65 1 116 1 330 1 135 1 178 1 103 1 19 1 159 1 372 1 
180 1 182 2 352 1 171 1 159 1 32 1 252 1 206 1 218 2 129 1 330 1 34 1 286 1 135 1 178 1 19 1 112 1 372 1 
180 1 113 1 225 1 182 2 192 1 26 1 202 1 352 2 171 1 159 1 32 2 252 1 206 1 218 2 339 1 129 2 330 1 34 1 286 2 135 1 178 1 19 3 112 1 
180 1 182 2 225 1 26 1 202 1 159 2 206 1 32 2 129 2 339 1 34 1 135 2 286 2 8 1 112 1 113 1 192 1 352 2 218 2 252 1 330 1 178 2 197 1 19 3 
180 1 264 2 26 1 265 1 159 3 32 1 186 1 339 1 129 1 106 1 135 3 8 1 345 1 372 1 113 1 13 1 354 1 330 1 121 1 178 3 278 1 19 4 70 2 
180 1 113 1 114 1 264 2 26 1 159 3 265 1 32 1 354 1 129 1 339 1 106 1 330 1 135 3 121 1 8 1 278 1 178 3 372 1 345 1 70 2 19 4 
180 1 207 1 330 1 135 1 178 1 159 1 
180 3 11 1 290 1 22 1 167 1 306 1 40 1 159 6 32 2 207 1 367 1 66 1 129 1 356 1 330 2 135 7 370 1 178 7 317 1 372 2 19 3 
332 2 159 1 206 1 160 3 59 2 340 1 164 2 286 1 248 1 111 2 9 1 112 1 349 1 288 2 352 1 171 1 64 3 252 1 218 2 353 1 257 3 66 1 178 1 19 1 223 1 180 1 72 2 181 12 263 1 225 1 182 2 32 1 79 6 129 1 84 1 34 2 135 1 133 2 270 6 229 1 86 4 138 1 231 4 94 2 275 1 48 2 330 1 
264 3 362 2 305 1 240 2 159 1 265 1 309 1 105 2 106 1 7 1 135 1 316 1 345 1 372 1 114 1 90 2 117 1 95 1 236 1 354 1 96 1 258 1 328 1 121 2 178 1 278 1 70 3 19 2 
180 2 22 1 279 1 265 1 159 2 32 1 207 1 66 1 129 1 330 1 135 2 178 2 19 2 
180 1 351 1 116 1 103 1 159 4 32 1 66 1 330 1 135 4 8 1 178 4 372 1 19 1 
180 2 167 1 26 1 159 2 205 1 32 1 43 1 296 1 129 1 330 1 135 2 370 1 178 2 19 1 
180 1 185 1 126 1 330 1 135 1 110 1 29 1 178 1 159 1 372 1 
180 1 306 1 40 1 159 2 32 1 66 1 330 1 135 2 178 2 210 1 19 1 
180 2 351 1 116 1 26 1 40 1 103 1 159 4 32 2 66 1 367 1 330 2 135 5 178 5 372 1 19 3 317 1 
180 2 351 1 116 1 26 1 40 1 103 1 159 4 32 2 66 1 276 1 330 2 135 5 178 5 372 1 19 3 317 1 
180 1 182 2 352 1 159 1 32 1 252 1 206 1 218 2 129 1 330 1 34 1 286 1 135 1 178 1 197 1 19 1 112 1 372 1 
180 2 11 1 22 1 167 1 26 1 159 1 32 1 129 1 330 1 135 1 370 1 178 1 19 1 
303 1 98 1 34 1 137 1 123 1 
115 1 264 2 225 1 303 1 192 1 202 1 216 1 354 1 328 1 300 1 5 1 152 1 98 2 34 1 137 2 278 1 123 2 345 1 70 2 
182 1 303 1 352 1 218 1 174 1 188 1 98 1 190 1 123 1 
303 1 5 1 216 1 
65 1 304 1 195 1 27 1 
214 1 304 1 195 1 27 1 277 1 183 1 337 1 
21 1 281 1 277 1 
214 1 304 1 183 3 27 1 337 1 42 1 172 1 149 1 268 1 49 2 195 1 277 3 
71 1 87 1 214 1 304 1 195 1 27 1 277 2 183 2 337 1 
149 1 185 1 326 1 214 1 376 1 291 1 195 1 277 1 183 1 110 1 337 1 
149 1 214 1 304 1 195 1 277 1 183 1 337 1 
149 1 214 1 304 2 27 1 277 1 183 1 337 1 
214 2 304 1 141 1 183 2 337 2 217 1 149 1 310 1 195 1 277 2 
261 1 87 2 214 1 304 1 291 1 27 1 183 3 337 1 324 1 149 1 219 1 277 3 195 2 
87 1 214 1 304 1 376 1 27 1 183 2 280 1 337 1 149 1 126 1 185 1 195 1 277 2 68 1 110 2 
71 1 233 1 87 2 214 2 304 1 291 1 27 1 183 4 337 2 324 1 149 1 277 4 195 2 
149 1 214 1 304 1 195 1 27 1 277 1 183 1 337 1 
87 2 214 1 304 2 291 1 27 2 183 4 337 1 172 1 324 1 268 1 67 1 49 1 277 4 195 3 
334 1 87 1 214 1 304 1 183 2 27 1 337 1 325 1 149 1 175 1 195 1 277 2 
38 1 214 1 304 1 183 3 27 1 337 1 172 2 149 1 268 1 49 2 195 1 277 3 
284 1 140 2 338 1 195 2 
149 1 214 1 277 1 183 1 357 1 337 1 
149 1 87 1 219 1 214 1 304 1 195 1 27 1 277 2 183 2 337 1 
266 1 
149 1 214 1 304 1 195 1 27 1 277 1 183 1 337 1 
149 1 87 1 219 1 214 1 304 1 49 1 195 1 27 1 277 3 183 3 337 1 
67 1 291 1 195 1 324 1 
304 1 195 1 

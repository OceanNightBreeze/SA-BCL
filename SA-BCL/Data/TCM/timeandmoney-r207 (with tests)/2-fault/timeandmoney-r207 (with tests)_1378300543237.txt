#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 266 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 266 52 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 2 333 1 77 9 100 2 33 9 3 6 295 2 4 1 312 3 294 1 313 1 83 4 137 1 48 1 37 2 337 2 302 1 12 1 57 1 121 1 225 2 377 1 27 1 350 1 290 1 73 2 72 5 43 1 
76 2 333 1 77 9 100 2 33 9 3 6 295 2 4 1 312 3 294 1 313 1 83 4 137 1 48 1 37 2 337 2 302 1 12 1 57 1 121 1 225 2 377 1 27 1 350 1 290 1 73 2 72 5 43 1 
76 2 333 1 77 10 100 2 33 10 3 7 295 2 4 1 312 4 294 1 313 1 83 5 137 1 48 1 37 2 337 2 302 1 12 1 57 1 121 1 225 2 377 1 27 1 350 1 290 1 73 2 72 6 43 1 
76 2 77 7 100 2 33 7 3 4 295 2 4 1 312 2 294 1 313 1 83 3 137 1 48 1 37 2 337 1 302 1 12 1 57 1 121 1 225 2 377 1 27 1 350 1 290 1 73 2 72 4 43 1 
333 1 77 4 100 1 33 4 3 3 57 1 312 1 295 1 83 2 225 1 137 1 377 1 48 1 350 1 37 1 73 1 72 3 337 2 
76 1 77 2 100 1 273 1 148 1 33 2 57 1 313 1 225 1 377 1 67 1 27 1 350 1 37 1 72 1 73 1 
76 1 77 3 100 2 33 3 3 1 57 1 4 1 312 1 83 1 225 2 377 1 350 1 72 2 
76 1 77 9 333 1 100 2 104 1 33 9 3 7 312 3 4 1 294 1 295 1 83 4 137 1 48 1 37 1 337 2 92 1 57 1 225 2 377 1 350 1 72 5 73 1 43 1 
76 1 77 9 333 1 100 2 104 1 33 9 3 7 312 3 4 1 294 1 295 1 83 4 137 1 48 1 37 1 337 2 92 1 57 1 225 2 377 1 350 1 72 5 73 1 43 1 
149 1 222 1 224 1 
149 1 323 2 358 1 
152 2 374 2 375 1 1 2 289 1 349 2 278 2 145 2 
1 2 234 1 81 1 276 1 249 1 318 1 51 1 10 2 278 3 143 1 145 2 339 1 214 2 114 1 259 2 322 1 119 1 219 1 369 1 22 1 221 1 120 1 196 1 152 2 347 2 153 1 374 3 375 1 307 1 289 1 349 2 226 1 331 2 155 1 179 1 202 1 203 1 
152 1 374 1 375 1 183 1 1 1 349 1 49 1 278 1 145 1 180 1 
172 1 93 1 149 1 1 1 183 1 245 1 224 1 374 1 316 1 167 1 362 1 227 1 278 1 89 1 
172 1 93 2 149 1 1 1 183 1 245 1 224 1 152 1 374 1 167 2 316 1 349 1 278 1 89 1 145 1 
0 1 93 1 167 1 329 1 291 1 
372 1 161 1 93 2 149 1 167 2 329 1 291 1 224 1 
93 1 167 1 291 1 
93 1 183 1 1 1 152 1 374 1 375 1 329 1 167 1 349 1 49 1 278 1 158 1 145 1 180 1 
149 1 
161 1 93 2 149 1 167 2 329 1 97 1 291 1 224 1 
161 1 54 1 340 1 30 1 93 5 149 1 96 1 370 1 186 1 224 1 197 2 326 1 329 2 167 5 126 2 111 2 157 1 291 2 351 1 
289 1 222 1 
152 1 374 2 1 2 289 2 349 1 301 1 278 2 145 1 223 1 
42 1 75 1 263 1 
114 1 322 1 247 1 22 1 249 1 374 1 289 1 226 1 331 1 155 1 51 1 10 1 202 1 278 1 203 1 214 1 
114 1 1 1 322 1 22 1 263 1 249 1 123 1 152 1 374 2 8 1 226 1 155 1 331 1 51 1 202 1 10 1 278 2 203 1 145 1 214 1 
1 5 62 1 123 2 199 1 152 4 374 5 349 1 289 1 8 1 227 1 278 5 301 1 145 4 99 1 
152 2 374 2 183 1 1 2 268 1 49 1 278 2 145 2 
123 1 152 3 374 3 1 3 349 1 289 1 278 3 145 3 
152 1 374 1 183 1 1 1 49 1 278 1 145 1 
152 1 374 1 183 1 1 1 349 1 278 1 301 1 145 1 223 1 
1 3 183 1 32 1 245 1 81 1 249 1 316 1 167 1 8 1 318 1 51 1 10 1 301 1 278 4 89 1 145 3 339 1 214 1 114 1 172 1 93 1 259 2 322 1 219 1 369 1 22 1 221 1 120 1 196 1 285 1 123 1 152 3 347 1 153 1 374 4 375 1 289 1 349 2 226 1 155 1 331 1 179 1 202 1 203 1 
123 1 152 1 374 2 1 2 289 1 227 1 278 2 145 1 99 1 
93 1 172 1 149 1 183 1 1 3 245 1 285 1 123 2 152 3 374 3 167 1 240 1 316 1 349 1 8 1 301 1 278 3 89 1 145 3 
1 2 263 1 123 1 152 2 374 2 349 1 301 1 278 2 75 1 145 2 
114 1 322 1 22 1 249 1 374 1 289 1 226 1 331 1 155 1 51 1 10 1 202 1 278 1 203 1 214 1 
114 1 322 1 208 1 22 1 374 1 69 1 289 1 331 1 155 1 51 1 10 1 202 1 278 1 203 1 214 1 
204 1 209 1 254 1 112 1 259 2 173 1 119 2 18 1 219 1 369 1 120 1 221 2 122 1 196 1 263 2 286 1 200 1 153 1 347 4 327 1 179 1 269 1 42 2 75 2 
152 1 374 1 183 1 1 1 245 1 268 1 278 1 145 1 
142 1 332 1 
142 1 332 1 
115 1 20 1 
115 1 20 1 
115 1 20 1 
68 1 142 1 332 1 
166 1 142 1 332 1 
367 1 115 1 20 1 142 2 332 2 257 1 
68 1 142 1 332 1 
68 1 142 1 332 1 
274 1 142 1 332 1 
274 1 142 1 332 1 
274 1 142 1 332 1 
101 1 1 2 162 1 293 1 86 1 166 1 167 1 299 1 190 1 50 1 256 1 142 1 278 2 145 2 14 1 93 1 118 1 39 1 325 1 152 2 346 1 374 2 289 1 332 1 
258 1 46 1 93 2 149 1 162 3 275 1 293 1 21 1 39 2 251 1 86 2 346 2 167 2 255 1 190 2 141 2 142 2 332 2 257 1 
37 1 295 1 73 1 
273 1 37 1 73 1 
236 1 273 1 355 1 295 2 324 1 73 3 
236 1 273 1 41 1 355 1 295 1 73 2 
236 2 273 1 355 1 295 1 73 2 
159 1 161 1 101 1 2 2 354 1 209 1 131 1 358 1 186 1 167 5 299 1 139 2 111 1 338 1 91 2 340 2 93 5 149 2 18 1 323 3 151 1 370 3 197 1 224 1 325 1 200 1 329 4 126 1 309 1 269 1 291 1 242 1 
0 5 161 1 2 6 354 1 209 3 334 1 358 3 186 1 252 1 315 1 167 9 299 4 139 6 111 2 338 2 147 1 340 6 93 9 149 5 260 5 18 3 323 9 151 3 284 1 370 8 224 1 197 2 239 1 200 3 329 7 126 2 269 3 157 1 291 6 242 2 
159 1 2 2 131 1 209 1 358 2 167 3 299 1 139 2 111 1 338 1 91 1 93 3 340 2 149 3 18 1 323 4 370 3 151 1 224 1 197 1 200 1 329 2 126 1 269 1 157 1 242 1 
159 1 2 4 131 1 209 2 358 3 252 1 315 1 167 4 299 2 139 4 111 1 338 1 91 2 93 4 340 4 149 4 18 2 323 7 370 5 151 2 224 1 197 1 239 1 200 2 329 3 126 1 269 2 157 1 242 1 
216 1 322 1 222 1 
322 1 61 1 
88 1 
114 1 322 1 51 1 
322 1 34 1 
322 1 51 1 
114 1 187 1 216 2 322 3 51 1 207 1 
192 2 55 1 102 1 103 1 18 1 163 1 119 4 221 3 38 1 185 1 248 1 286 3 136 1 200 1 327 2 347 7 169 1 
192 2 55 1 102 1 103 1 18 1 163 1 119 4 221 3 38 1 185 1 248 1 286 3 136 1 200 1 327 2 347 7 169 1 
192 2 55 1 103 1 102 1 18 1 163 1 119 4 221 3 38 1 185 1 248 1 286 3 136 1 200 1 327 2 347 7 253 1 169 1 
103 1 102 2 163 2 164 4 185 2 209 3 248 2 359 3 136 1 169 5 11 1 192 3 55 1 16 1 321 1 259 2 119 16 18 4 219 1 19 1 175 1 221 15 38 1 196 1 151 3 63 1 286 10 153 1 347 31 200 4 327 5 179 1 269 3 45 1 
229 1 102 1 103 1 163 1 185 1 248 1 110 1 169 1 192 2 16 1 55 1 259 4 18 1 119 5 219 2 221 4 38 1 196 2 286 4 200 1 153 2 347 9 327 3 179 2 
76 1 77 2 100 1 273 1 33 2 105 1 3 1 295 1 37 1 212 1 10 1 214 1 15 1 218 1 57 1 324 1 371 1 65 1 225 1 377 1 376 1 350 1 178 1 331 1 201 1 127 1 202 1 72 1 73 2 203 1 
76 1 77 3 100 1 273 1 33 3 105 1 3 2 295 1 6 1 297 1 37 1 212 1 10 1 214 1 15 1 304 1 57 1 324 1 371 1 225 1 376 1 350 1 178 1 331 1 201 1 127 1 202 1 72 1 73 2 203 1 
76 1 77 2 273 1 33 2 105 1 3 2 295 1 297 1 37 1 10 1 214 1 15 1 304 1 57 1 324 1 371 1 376 1 350 1 178 1 331 1 201 1 202 1 72 1 73 2 203 1 
76 2 77 1 100 1 33 1 6 1 134 1 87 1 108 1 277 1 51 1 10 1 214 1 322 1 22 1 371 2 225 1 178 2 330 1 331 1 201 2 202 1 203 1 241 1 
76 1 77 1 100 1 273 1 33 1 105 1 295 1 37 1 212 1 10 1 214 1 15 1 304 1 218 1 324 1 371 1 225 1 377 1 376 1 178 1 331 1 201 1 127 1 202 1 73 2 203 1 
361 1 
161 2 1 1 245 1 107 1 108 1 167 4 109 1 51 1 111 1 10 2 338 1 214 2 13 1 340 2 172 1 343 1 22 2 176 1 26 1 126 1 28 1 227 1 128 1 129 3 183 1 184 1 357 1 358 1 186 1 87 1 316 1 138 1 189 1 362 1 235 1 363 1 278 1 89 1 320 1 93 4 322 1 323 1 237 1 238 1 370 2 197 1 374 1 328 1 331 2 202 1 291 4 203 1 292 1 
161 1 129 2 1 1 183 1 245 1 107 1 167 3 316 1 109 1 362 1 235 1 278 1 89 1 320 1 93 3 172 1 237 1 97 1 176 1 374 1 227 1 291 2 
161 1 129 3 1 1 183 1 245 1 107 1 167 3 316 1 109 1 189 1 362 1 278 1 89 1 320 1 93 3 172 1 149 1 237 1 97 1 176 1 224 1 374 1 227 1 291 1 
161 1 129 3 1 1 183 1 245 1 107 1 167 3 316 1 109 1 189 1 362 1 235 1 278 1 89 1 13 1 320 1 93 3 172 1 149 1 237 1 97 1 176 1 224 1 374 1 227 1 291 2 
161 3 1 1 245 1 107 1 167 5 109 1 111 1 13 4 172 1 340 1 116 1 343 2 176 1 224 5 124 1 126 1 227 1 28 1 128 2 182 1 129 6 183 1 184 2 84 1 186 1 358 2 316 1 189 4 362 1 235 4 278 1 89 1 90 1 320 1 93 5 149 5 237 1 238 1 97 1 370 1 197 1 374 1 328 2 291 7 
161 2 1 1 245 1 107 1 167 4 109 1 111 1 13 2 172 1 340 1 343 2 176 1 224 1 126 1 227 1 28 1 128 2 129 4 183 1 184 2 186 1 358 2 316 1 138 1 189 2 362 1 235 2 278 1 89 1 320 1 93 4 149 2 237 1 323 2 238 1 370 1 197 1 374 1 328 2 291 4 
161 2 182 1 129 4 1 1 183 1 245 1 184 2 107 1 358 2 186 1 167 4 316 1 109 1 189 2 362 1 111 1 235 2 278 1 89 1 90 1 13 2 320 1 340 1 93 4 172 1 149 1 116 1 237 1 343 2 238 1 176 1 370 1 224 1 197 1 374 1 328 2 126 1 28 1 227 1 291 4 128 2 
161 2 182 1 129 4 1 1 183 1 245 1 184 2 107 1 358 2 186 1 167 4 316 1 109 1 189 2 362 1 111 1 235 2 278 1 89 1 90 1 13 2 320 1 340 1 93 4 172 1 149 1 116 1 237 1 343 2 238 1 176 1 370 1 224 1 197 1 374 1 328 2 126 1 28 1 227 1 291 4 128 2 
181 2 161 2 182 1 230 1 129 4 1 1 183 1 245 1 107 1 186 1 167 4 316 1 109 1 189 2 362 1 111 1 235 2 278 1 89 1 13 2 320 1 340 1 93 4 172 1 149 1 217 2 323 2 237 1 343 2 176 1 370 1 224 1 306 1 197 1 64 1 374 1 328 2 126 1 28 1 227 1 291 4 
161 2 182 1 129 5 1 1 183 1 245 1 184 2 107 1 84 1 358 2 186 1 167 4 316 1 109 1 189 3 362 1 111 1 235 3 278 1 90 1 89 1 13 3 320 1 340 1 93 4 172 1 149 1 116 1 237 1 343 2 238 1 176 1 370 1 224 1 197 1 374 1 328 2 126 1 28 1 227 1 291 5 128 2 
161 2 182 1 129 5 1 1 183 1 245 1 184 2 107 1 84 1 358 2 186 1 167 4 316 1 109 1 189 3 362 1 111 1 235 3 278 1 90 1 89 1 13 3 320 1 340 1 93 4 172 1 149 1 116 1 237 1 343 2 238 1 176 1 370 1 224 1 197 1 374 1 328 2 126 1 28 1 227 1 291 5 128 2 
181 2 161 2 129 4 1 1 183 1 245 1 107 1 186 1 167 4 316 1 138 1 109 1 189 2 362 1 111 1 235 2 278 1 89 1 13 2 320 1 340 1 93 4 172 1 149 1 217 2 323 2 237 1 343 2 176 1 370 1 224 1 197 1 306 1 374 1 328 2 126 1 28 1 227 1 291 4 
103 1 163 1 185 1 112 1 192 1 55 1 259 2 119 3 18 1 219 1 369 1 120 1 221 3 222 1 38 1 263 1 196 1 286 2 153 1 327 2 200 1 347 6 289 2 179 1 42 1 75 1 
81 1 164 3 210 1 209 2 35 1 211 1 359 3 169 1 143 1 11 1 259 4 119 8 18 1 219 2 344 1 369 1 221 6 120 2 196 2 263 11 151 2 286 2 63 1 327 1 153 2 347 14 200 2 289 1 179 2 379 1 42 11 269 1 75 4 
1 1 79 1 81 1 247 1 249 1 314 1 8 1 188 1 51 1 10 1 278 2 143 1 145 1 214 1 114 1 259 2 322 1 119 1 219 1 22 1 369 1 120 1 221 1 196 1 123 1 152 1 374 2 153 1 347 2 289 1 226 1 155 1 331 1 179 1 379 1 202 1 203 1 75 1 
103 1 1 1 163 1 209 2 249 2 8 1 169 4 51 2 10 3 170 2 214 3 114 2 55 1 304 1 259 6 18 3 119 10 219 3 22 1 59 2 221 10 120 3 345 1 263 7 123 1 347 20 348 1 226 2 179 3 269 2 75 7 81 1 185 1 318 2 278 3 143 1 145 1 364 2 192 1 95 1 322 2 369 3 38 1 283 2 196 3 151 2 286 8 152 1 327 4 153 3 374 3 200 3 289 2 331 3 155 2 379 1 202 2 42 7 203 2 
78 1 1 1 47 1 81 1 276 2 5 1 87 1 108 1 51 2 10 8 278 1 112 1 143 1 145 1 214 8 304 1 17 1 259 4 322 3 119 1 219 2 22 2 369 2 120 2 221 1 196 2 265 1 198 1 65 1 123 1 152 1 374 1 153 2 347 2 331 7 179 2 202 2 203 2 243 1 
205 1 1 1 209 1 301 1 278 1 145 1 259 2 119 1 18 1 219 1 369 1 120 1 221 2 263 1 196 1 151 1 286 1 152 1 327 1 153 1 374 1 200 1 347 3 349 1 179 1 379 1 42 1 269 1 75 1 
259 2 119 2 219 1 369 1 120 1 122 1 209 1 263 1 196 1 286 1 347 2 153 1 200 1 169 1 179 1 42 1 112 1 75 1 
204 1 259 2 18 1 219 1 369 1 120 1 221 2 263 1 196 1 286 1 327 1 347 2 153 1 179 1 42 1 269 1 112 1 75 1 
209 1 169 1 112 1 259 2 119 2 18 1 219 1 369 1 120 1 221 2 151 1 196 1 263 2 286 2 200 1 153 1 347 4 327 1 179 1 42 2 269 1 75 2 
259 2 119 2 219 1 369 1 120 1 122 1 209 1 263 1 196 1 198 1 286 1 347 2 153 1 200 1 169 1 179 1 42 1 75 1 
204 1 259 2 18 1 219 1 369 1 120 1 221 2 263 1 196 1 198 1 286 1 327 1 347 2 153 1 179 1 42 1 269 1 75 1 
209 1 169 1 259 2 119 2 18 1 219 1 369 1 120 1 221 2 151 1 196 1 263 2 198 1 286 2 200 1 153 1 347 4 327 1 179 1 42 2 269 1 75 2 
209 1 169 1 259 2 119 2 18 1 219 1 369 1 120 1 221 2 151 1 196 1 263 2 286 2 347 4 200 1 153 1 327 1 179 1 42 2 269 1 75 2 
81 1 249 1 318 1 51 1 10 1 278 1 143 1 214 1 114 1 259 2 322 1 119 1 219 1 22 1 369 1 120 1 221 1 196 1 347 2 374 1 153 1 289 1 226 1 155 1 331 1 179 1 202 1 203 1 
208 1 81 1 51 1 10 1 278 1 143 1 214 1 114 1 215 1 259 2 322 1 119 1 219 1 22 1 369 1 120 1 221 1 196 1 347 2 374 1 153 1 69 1 289 1 155 1 331 1 179 1 202 1 203 1 
209 1 169 1 259 2 119 2 18 1 219 1 369 1 120 1 221 2 151 1 196 1 263 2 286 2 200 1 153 1 347 4 327 1 179 1 379 1 42 2 269 1 75 2 
209 1 249 1 169 1 318 1 51 1 10 1 278 1 364 1 214 1 114 1 259 2 322 1 18 1 119 2 219 1 369 1 221 2 120 1 263 2 196 1 151 1 286 2 65 1 327 1 347 4 200 1 374 1 153 1 226 1 155 1 331 1 179 1 269 1 42 2 202 1 203 1 75 2 
1 1 209 1 169 1 301 1 278 1 145 1 259 2 18 1 119 2 219 1 369 1 221 1 120 1 196 1 264 1 151 1 263 1 286 1 152 1 153 1 374 1 200 1 347 3 349 1 179 1 379 1 269 1 42 1 75 1 
164 2 209 3 250 1 7 2 359 1 110 1 169 3 336 1 191 1 11 1 146 1 259 4 119 9 18 3 194 1 219 2 221 10 196 2 151 3 24 1 63 1 286 6 177 1 327 3 153 2 347 19 200 3 267 2 179 2 269 3 
232 1 246 1 164 2 209 3 250 1 7 4 359 2 298 1 169 2 110 1 336 1 191 2 146 2 11 2 319 1 16 2 259 6 18 2 119 14 219 3 221 12 150 1 196 3 151 3 286 4 24 1 327 2 153 3 347 26 200 3 125 1 267 1 179 3 269 2 
103 1 163 1 246 1 164 4 296 1 209 4 250 1 7 4 298 1 169 4 110 1 336 1 11 3 16 1 55 1 259 6 18 5 119 20 219 3 221 21 63 1 24 1 347 41 125 1 267 1 179 3 269 4 232 1 185 1 359 3 191 2 146 1 192 1 319 1 194 1 150 1 38 1 151 4 196 3 286 8 200 5 153 3 327 4 
103 1 232 1 163 1 246 1 296 1 164 4 185 1 209 4 250 1 7 4 359 3 298 1 110 1 169 3 336 1 191 2 11 3 146 1 192 1 55 1 319 1 16 2 259 8 119 20 18 4 194 1 219 4 221 18 38 1 150 1 196 4 151 4 24 1 63 1 286 7 327 4 153 4 347 38 200 5 125 1 267 1 179 4 269 3 
103 1 232 1 163 1 246 1 164 4 185 1 210 2 209 7 250 1 7 4 359 4 298 1 110 1 169 7 336 1 191 1 11 2 146 1 192 1 55 1 319 1 16 1 259 4 119 27 18 8 219 2 221 25 38 1 150 1 196 2 151 7 24 1 63 2 286 14 327 7 153 2 347 52 200 8 125 1 267 1 179 2 269 7 
86 1 346 1 255 1 190 1 142 1 332 1 39 1 257 1 251 1 133 1 
166 1 118 1 
365 1 86 1 346 1 244 1 190 1 142 1 332 1 335 1 39 1 
68 1 228 1 
367 1 274 1 356 1 
46 1 93 1 149 1 162 2 275 1 293 1 21 1 39 1 251 1 86 1 346 1 167 1 255 1 190 1 141 1 142 1 332 1 257 1 
46 1 93 1 149 1 162 2 275 1 293 1 21 1 39 1 251 1 86 1 346 1 167 1 255 1 190 1 141 1 142 1 332 1 257 1 
46 1 93 1 149 1 162 2 275 1 293 1 21 1 39 1 251 1 86 1 346 1 167 1 255 1 190 1 141 1 142 1 332 1 257 1 
367 1 68 1 228 1 
367 1 68 1 228 1 
274 1 356 1 
367 1 274 1 356 1 
256 1 50 1 
101 1 1 2 162 1 165 1 86 1 166 1 167 1 299 1 141 1 190 1 50 1 256 1 278 2 142 1 145 2 14 1 93 1 118 1 21 1 39 1 325 1 346 1 152 2 374 2 329 1 289 1 332 1 
231 1 1 2 81 1 276 2 5 1 51 1 10 2 278 2 143 1 214 2 282 1 17 1 259 2 322 1 368 1 119 1 219 1 369 1 120 1 221 1 196 1 374 2 153 1 347 2 288 1 331 2 179 1 379 1 202 1 203 1 310 1 
15 1 273 1 304 1 295 1 324 1 65 1 373 1 376 1 37 1 331 2 380 1 201 1 127 1 202 1 10 2 73 2 53 1 203 1 214 2 
15 1 273 1 304 1 233 1 295 1 324 1 373 1 376 1 37 1 331 1 201 1 127 1 10 1 202 1 73 2 203 1 214 1 
322 1 22 1 87 1 108 1 36 1 331 1 51 1 380 1 201 1 202 1 10 1 203 1 241 1 214 1 
15 1 273 1 304 1 295 1 324 1 373 1 376 1 37 1 331 1 380 1 201 1 127 1 10 1 202 1 73 2 53 1 203 1 214 1 
287 1 
340 1 30 1 149 1 96 1 222 1 370 1 224 1 
161 1 184 1 358 1 186 1 167 1 111 1 340 1 93 1 149 2 323 1 238 1 370 1 197 1 224 1 126 1 291 1 128 1 
161 3 206 2 2 6 207 1 209 2 167 5 9 1 51 3 111 4 10 3 300 2 338 2 214 3 114 3 172 2 340 8 303 2 216 2 18 2 22 1 61 3 224 2 65 1 308 2 126 4 270 2 269 2 271 2 30 1 352 1 272 1 34 2 186 4 358 6 139 6 280 2 93 5 149 8 96 1 322 10 323 12 98 1 283 2 370 9 151 2 197 4 200 2 40 1 331 3 202 3 203 4 291 5 44 2 292 1 
161 1 2 5 232 1 246 1 164 1 209 2 186 2 358 3 359 1 298 1 167 1 168 1 139 5 111 2 338 1 11 1 93 1 340 5 303 2 149 5 323 6 18 2 150 1 262 1 370 8 151 2 197 2 224 2 200 2 125 1 126 2 269 2 291 1 44 1 292 1 
183 1 1 1 163 1 185 1 186 1 167 1 49 1 111 1 278 1 279 1 90 1 145 1 93 1 340 2 303 2 18 1 38 1 370 2 197 1 152 1 374 1 200 2 375 1 349 1 126 1 158 1 44 1 180 1 
30 1 340 1 149 1 96 1 186 1 370 1 197 1 224 1 126 1 111 1 
340 5 303 2 149 5 2 5 323 10 18 2 283 1 209 2 151 2 358 5 370 5 200 2 139 5 269 2 44 1 
161 1 93 1 149 1 167 1 291 1 224 1 
161 2 272 1 186 1 87 1 108 1 167 3 51 1 111 2 363 1 10 4 338 2 214 4 340 2 93 3 322 1 22 2 370 2 197 2 40 2 26 1 154 1 70 1 126 2 331 4 202 1 157 1 203 1 291 4 292 2 
1 2 81 1 249 1 318 1 51 1 10 1 278 3 145 2 214 1 339 1 114 1 259 2 322 1 219 1 22 1 369 1 221 1 120 1 196 1 152 2 347 1 153 1 374 3 375 1 289 1 349 2 226 1 331 1 155 1 179 1 202 1 203 1 
192 1 340 2 149 4 2 2 323 4 358 2 186 1 370 1 197 1 224 2 139 2 126 1 111 1 338 1 292 1 
86 1 132 1 39 1 
86 1 255 1 256 1 82 1 39 1 
86 1 132 1 39 1 
86 1 132 1 39 1 
86 1 66 1 39 1 
86 1 66 1 39 1 
86 1 66 1 39 1 
86 1 39 1 
142 1 332 1 
192 1 16 1 55 1 103 1 259 4 18 1 119 4 163 1 219 2 221 4 38 1 185 1 196 2 286 3 200 1 347 8 327 2 153 2 169 1 179 2 
192 1 55 1 103 1 163 1 119 3 18 1 221 3 222 1 185 1 38 1 286 2 327 2 200 1 347 6 
259 2 18 1 119 2 219 1 56 1 221 2 209 1 196 1 151 1 286 2 327 1 153 1 200 1 347 4 169 1 179 1 269 1 
18 1 119 3 164 2 221 4 209 1 151 1 359 1 63 1 286 2 327 1 347 7 200 1 169 1 269 1 11 1 
103 1 163 2 164 2 185 2 209 2 210 1 85 1 359 2 169 4 192 1 55 1 16 2 259 4 119 11 18 3 219 2 344 1 221 12 38 1 151 2 196 2 286 9 63 1 200 3 347 23 327 5 153 2 179 2 269 2 
347 1 164 1 221 1 
359 1 347 1 119 1 
259 2 119 3 18 1 219 1 56 1 221 3 283 1 209 1 196 1 151 1 286 3 153 1 347 6 200 1 327 2 169 1 179 1 269 1 
232 1 246 1 164 1 209 2 359 1 298 1 169 1 110 1 11 1 259 2 119 6 18 2 219 1 221 6 150 1 196 1 151 2 286 2 347 12 153 1 200 2 327 1 125 1 179 1 269 2 
286 2 327 1 347 6 200 1 163 1 18 1 119 3 169 1 221 3 185 1 38 1 
16 1 55 1 103 1 259 2 119 1 163 1 219 1 221 2 185 1 85 1 196 1 286 2 327 1 347 3 153 1 169 1 179 1 
259 2 163 2 119 5 18 2 219 1 221 5 185 2 38 1 196 1 286 5 153 1 327 3 347 10 200 2 110 1 169 2 179 1 279 1 
259 2 119 2 219 1 209 1 196 1 286 1 153 1 200 1 347 2 110 1 169 1 179 1 
259 2 18 1 119 2 219 1 221 2 209 1 196 1 151 1 286 2 327 1 153 1 200 1 347 4 110 1 169 1 179 1 269 1 
16 1 259 6 163 1 119 1 194 1 219 3 221 2 185 1 85 1 196 3 286 2 347 3 153 3 327 1 110 1 169 1 179 3 
103 1 163 3 164 4 185 3 209 3 85 1 359 3 110 1 169 5 11 1 192 1 55 1 16 2 321 1 259 10 119 16 18 5 19 1 194 1 219 5 56 1 221 18 38 2 196 5 151 3 63 1 286 12 153 5 347 34 200 5 327 7 179 5 269 3 45 1 
103 1 163 1 246 1 164 1 185 1 359 1 110 1 11 1 192 1 55 1 259 2 18 1 119 4 219 1 221 4 38 1 196 1 286 2 200 1 347 8 153 1 327 2 179 1 
103 1 163 1 246 1 164 2 185 1 209 1 359 1 110 1 169 1 11 1 192 1 55 1 259 4 18 1 119 6 219 2 56 1 221 5 38 1 196 2 151 1 63 1 286 3 327 2 347 11 153 2 200 2 179 2 
103 1 232 1 163 1 246 1 164 1 185 1 209 2 359 1 298 1 169 1 110 1 11 1 192 1 55 1 16 1 259 6 119 9 18 3 219 3 56 1 221 10 38 1 150 1 196 3 151 2 286 4 347 19 153 3 200 3 327 3 125 1 179 3 269 2 
103 1 232 1 163 1 246 1 164 1 185 1 209 2 359 1 298 1 169 2 110 1 11 1 192 1 55 1 16 1 259 6 119 10 18 2 219 3 56 1 221 7 38 1 150 1 196 3 151 2 286 5 347 17 153 3 200 3 327 3 125 1 179 3 269 1 
103 1 163 1 246 1 164 1 185 1 359 1 110 1 11 1 192 1 55 1 259 2 18 1 119 4 219 1 221 4 38 1 196 1 286 2 200 1 347 8 153 1 327 2 179 1 
232 1 246 1 164 1 209 2 359 1 298 1 169 1 110 1 11 1 259 2 119 6 18 2 219 1 221 6 150 1 196 1 151 2 286 2 347 12 153 1 200 2 327 1 125 1 179 1 269 2 
103 1 232 1 163 1 246 1 164 1 185 1 209 2 359 1 298 1 169 2 110 1 11 1 192 1 55 1 16 2 259 8 119 10 18 2 219 4 56 1 221 8 38 1 150 1 196 4 151 2 286 5 347 18 153 4 200 3 327 3 125 1 179 4 269 1 
232 1 246 1 164 1 209 3 359 1 298 1 169 3 110 1 11 1 16 2 259 8 119 9 18 2 219 4 194 1 221 7 150 1 196 4 151 3 286 6 347 16 153 4 200 3 327 3 125 1 179 4 269 2 
55 1 103 2 18 1 163 3 119 3 221 4 185 3 38 1 286 6 347 7 327 3 200 1 169 3 
103 1 232 1 163 1 246 1 164 1 185 1 209 2 359 1 298 1 169 1 110 1 11 1 192 1 55 1 16 2 259 8 119 10 18 2 219 4 194 1 221 8 38 1 150 1 196 4 151 2 286 4 347 18 153 4 200 3 327 3 125 1 179 4 269 1 
266 1 
266 1 261 1 52 1 130 1 213 1 106 1 
87 1 108 1 322 1 331 1 51 1 202 1 10 1 22 1 203 1 222 1 214 1 
114 1 1 1 322 1 22 1 249 1 123 1 152 1 374 2 289 1 155 1 331 1 51 1 10 1 202 1 278 2 203 1 145 1 214 1 
114 2 183 1 1 2 322 3 245 1 34 1 249 1 123 1 152 1 374 2 316 1 40 1 289 1 155 1 331 1 51 2 10 1 202 1 278 2 203 1 145 2 280 1 214 1 
114 2 160 1 183 1 1 2 322 3 245 1 34 1 208 1 123 1 152 1 374 2 316 1 40 1 289 1 155 1 331 2 51 2 10 2 202 1 278 2 203 1 145 2 280 1 214 2 
114 1 160 1 172 1 93 2 149 1 216 1 353 1 117 1 322 4 34 1 22 1 61 1 224 1 167 2 40 1 331 3 51 1 10 3 202 1 203 1 291 1 280 1 214 3 
114 1 160 1 172 1 93 2 149 1 216 1 206 1 322 4 34 1 22 1 61 1 224 1 167 2 40 1 331 3 51 1 10 3 202 1 203 1 291 1 280 1 214 3 
331 1 202 1 10 1 203 1 214 1 243 1 
114 1 78 1 304 1 17 1 47 1 322 3 207 1 276 1 22 2 265 1 65 1 360 1 331 6 51 2 10 7 156 1 202 2 74 1 203 3 243 1 214 7 
103 1 1 1 163 1 185 1 249 1 318 1 51 1 10 1 278 2 145 1 364 1 214 1 192 1 114 1 55 1 282 1 259 4 322 1 18 1 119 3 219 2 369 2 59 1 221 3 120 2 38 1 263 1 196 2 286 2 123 1 65 1 152 1 347 6 200 1 327 2 374 2 153 2 289 2 226 1 155 1 331 1 179 2 379 1 42 1 202 1 203 1 75 1 
161 1 30 1 272 1 206 1 186 2 167 3 111 2 10 1 214 1 340 1 93 3 172 1 149 1 216 1 96 1 322 2 22 1 370 1 61 1 224 1 197 2 329 1 308 1 126 2 331 1 270 1 271 1 291 2 
114 1 216 1 322 2 207 1 98 1 65 1 331 2 51 1 10 2 202 1 203 2 243 1 214 2 
160 1 80 1 322 1 22 1 65 1 87 1 108 1 331 4 51 1 10 4 202 1 203 1 214 4 
114 1 281 1 322 1 345 1 360 1 40 1 331 2 51 1 10 2 202 1 74 1 203 2 144 1 214 2 
15 1 273 1 37 1 331 1 202 1 10 1 73 1 22 1 203 1 214 1 
65 1 231 1 304 1 17 1 322 1 331 2 51 1 202 1 10 2 203 1 214 2 
78 1 17 1 80 1 322 3 22 1 265 1 65 1 87 1 108 1 40 1 331 4 51 2 10 5 202 2 203 2 214 5 
341 1 17 1 80 1 322 3 22 1 265 1 65 1 87 1 108 1 40 1 331 4 51 2 10 5 202 2 203 2 214 5 
114 1 1 1 322 1 208 1 22 1 123 1 152 1 374 2 289 1 155 1 331 1 51 1 10 1 202 1 278 2 203 1 145 1 214 1 
114 1 322 1 207 1 360 1 40 1 331 1 51 1 10 1 156 1 202 1 74 1 203 2 214 1 
171 1 29 1 289 1 305 1 195 1 
29 1 171 2 172 1 93 2 149 1 183 1 305 2 245 1 23 1 195 2 285 1 224 1 316 1 329 1 167 2 289 1 113 1 89 1 381 1 
29 1 1 1 305 1 368 1 195 1 374 1 288 1 278 1 310 1 
29 1 113 1 381 1 
350 1 57 1 72 1 222 1 
77 1 225 1 100 1 33 1 350 1 57 1 72 1 
76 1 77 1 178 1 
77 3 100 1 193 1 33 3 58 1 57 1 225 1 377 1 27 2 350 1 71 1 72 1 
77 2 225 1 100 1 33 2 350 1 3 1 57 1 72 1 337 1 
77 1 100 1 33 1 295 1 83 1 225 1 137 1 377 1 37 1 72 1 73 1 
77 1 225 1 100 1 377 1 33 1 350 1 72 1 
77 1 225 1 100 1 377 1 33 1 350 2 57 1 
77 2 225 2 100 2 94 1 317 1 377 1 33 2 350 1 140 1 72 1 
77 3 100 1 33 3 3 2 57 1 294 1 312 1 83 1 225 1 377 1 350 1 72 2 43 1 
77 2 311 1 273 1 100 1 33 2 3 1 57 1 295 1 324 1 225 1 377 1 350 1 37 1 72 1 73 2 
77 4 333 1 100 2 33 4 3 2 57 1 312 1 83 1 225 2 377 1 350 1 72 2 337 1 
77 1 225 1 100 1 377 1 33 1 350 1 57 1 72 1 
77 4 193 1 100 1 33 4 3 2 57 2 312 1 83 1 225 1 27 1 378 1 350 2 71 1 72 3 
135 1 77 2 25 1 225 1 100 1 104 1 377 1 33 2 350 1 3 1 57 1 72 1 
77 3 225 1 193 2 100 1 377 1 27 2 33 3 350 1 71 1 57 1 72 1 220 1 
31 1 342 2 366 1 72 2 
77 1 225 1 100 1 377 1 33 1 60 1 
77 2 225 1 100 1 377 1 33 2 350 1 3 1 57 1 72 1 43 1 
174 1 
77 1 225 1 100 1 377 1 33 1 350 1 57 1 72 1 
77 3 225 1 100 1 377 1 27 1 33 3 350 1 3 1 57 1 72 1 43 1 
378 1 312 1 72 1 83 1 
350 1 72 1 

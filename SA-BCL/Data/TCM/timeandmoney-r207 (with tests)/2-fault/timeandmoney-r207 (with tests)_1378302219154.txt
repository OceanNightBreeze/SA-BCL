#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 225 (183,315) (183,315) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 225 (183,315) (183,315) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 225 (183,315) (183,315) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArithmeticException 225 (183,315) (183,315) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 315 1 67 1 183 1 103 1 142 1 80 1 46 1 321 1 11 1 353 1 147 1 377 1 225 1 
37 1 315 1 67 1 183 1 103 1 142 1 80 1 46 1 321 1 11 1 353 1 147 1 377 1 225 1 
37 1 315 1 67 1 183 1 103 1 142 1 80 1 46 1 321 1 11 1 353 1 147 1 377 1 225 1 
37 1 315 1 67 1 183 1 103 1 142 1 80 1 46 1 321 1 11 1 353 1 147 1 377 1 225 1 
0 2 37 1 190 3 335 1 142 1 46 1 321 4 11 1 323 1 278 1 207 3 372 1 353 1 286 1 377 4 380 1 225 1 164 2 
67 1 190 1 335 1 328 1 24 1 103 1 142 1 46 1 321 2 172 1 11 1 372 1 353 1 115 1 377 2 225 1 
67 1 190 2 335 1 46 2 321 3 11 1 323 1 207 1 372 1 353 2 377 3 302 1 164 1 
0 2 202 1 335 1 321 9 161 1 323 3 207 7 278 1 302 1 164 4 35 1 37 1 67 1 190 5 138 1 142 1 46 2 11 1 372 1 353 2 286 1 377 9 380 1 225 1 
0 2 202 1 335 1 321 9 161 1 323 3 207 7 278 1 302 1 164 4 35 1 37 1 67 1 190 5 138 1 142 1 46 2 11 1 372 1 353 2 286 1 377 9 380 1 225 1 
173 1 211 1 70 1 
69 1 254 2 211 1 
56 2 41 2 9 2 306 2 233 1 176 2 337 1 329 2 
249 1 56 2 118 1 317 1 337 1 205 2 79 2 4 1 209 2 233 1 186 2 34 1 33 1 235 1 348 1 215 2 41 3 134 1 191 1 112 1 306 2 329 3 47 1 240 1 94 1 8 1 9 2 352 1 376 1 176 2 95 1 379 1 16 1 381 1 269 1 20 1 97 1 
56 1 266 1 41 1 9 1 306 1 233 1 176 1 139 1 268 1 329 1 
41 1 135 1 43 1 1 1 23 1 70 1 193 1 139 1 329 1 257 1 176 1 211 1 19 1 313 1 
56 1 41 1 135 1 1 2 43 2 306 1 23 1 70 1 193 1 139 1 329 1 9 1 176 1 211 1 313 1 
126 1 1 1 43 1 288 1 214 1 
1 2 43 2 203 1 211 1 70 1 288 1 214 1 59 1 
1 1 43 1 214 1 
56 1 41 1 43 1 1 1 306 1 139 1 329 1 265 1 266 1 9 1 233 1 176 1 288 1 268 1 
211 1 
1 2 43 2 211 1 70 1 288 1 220 1 214 1 59 1 
99 1 43 5 1 5 227 1 70 1 89 1 255 1 371 1 59 1 114 1 81 2 162 1 10 2 367 1 375 1 342 2 211 1 288 2 214 2 
173 1 337 1 
56 1 41 2 306 1 329 2 337 2 71 1 9 1 308 1 176 2 
273 1 150 1 338 1 
249 1 348 1 118 1 41 1 191 1 337 1 329 1 205 1 47 1 145 1 4 1 209 1 186 1 33 1 95 1 16 1 
348 1 249 1 290 1 56 1 118 1 41 2 191 1 102 1 329 2 338 1 205 1 47 1 4 1 9 1 209 1 186 1 95 1 176 1 33 1 16 1 
290 1 56 3 41 3 9 3 306 1 176 3 337 1 329 3 
56 1 41 1 9 1 176 1 139 1 268 1 329 1 
56 1 41 1 9 1 308 1 306 1 176 1 139 1 329 1 71 1 
249 1 56 3 290 1 118 1 1 1 317 1 102 1 23 1 336 1 337 1 205 1 79 1 4 1 209 1 233 1 186 1 34 1 33 1 235 1 348 1 369 1 215 2 41 4 135 1 191 1 43 1 112 1 306 2 193 1 139 1 329 4 71 1 47 1 8 1 352 1 9 3 95 1 176 3 379 1 16 1 381 1 313 1 269 1 20 1 
56 1 290 1 41 2 9 1 198 1 176 2 337 1 19 1 329 2 
290 2 56 3 41 3 135 1 1 1 43 1 306 1 23 1 102 1 139 1 193 1 336 1 329 3 71 1 194 1 9 3 176 3 211 1 313 1 
290 1 56 2 41 2 306 1 329 2 71 1 338 1 9 2 176 2 150 1 
249 1 348 1 118 1 41 1 191 1 337 1 329 1 205 1 47 1 4 1 209 1 186 1 33 1 95 1 16 1 
249 1 348 1 131 1 118 1 41 1 191 1 337 1 329 1 205 1 4 1 209 1 186 1 33 1 95 1 54 1 
226 1 270 1 317 1 273 2 338 2 79 4 160 1 231 1 34 1 235 1 215 2 66 1 370 1 349 1 261 1 143 1 240 2 8 2 199 1 379 1 381 1 150 2 224 1 20 1 
86 1 56 1 41 1 9 1 135 1 176 1 139 1 329 1 
290 2 56 4 41 5 306 1 102 1 293 1 329 5 337 1 71 1 171 1 9 4 198 1 176 5 19 1 
86 1 56 2 41 2 9 2 176 2 139 1 268 1 329 2 
36 1 18 1 
36 1 18 1 
330 1 283 1 
330 1 283 1 
330 1 283 1 
36 1 245 1 18 1 
36 1 245 1 18 1 
36 1 107 1 18 1 
36 2 330 1 373 1 88 1 283 1 18 2 
36 1 245 1 18 1 
36 1 366 1 18 1 
36 1 366 1 18 1 
36 1 366 1 18 1 
36 2 132 1 119 1 43 2 1 2 2 1 276 1 241 2 295 3 242 2 125 2 373 1 128 1 324 2 344 1 211 1 18 2 326 1 165 2 
56 2 100 1 1 1 337 1 295 1 107 1 125 1 324 1 258 1 326 1 165 1 36 1 111 1 40 1 41 2 43 1 262 1 329 2 241 1 9 2 149 1 176 2 18 1 177 1 
37 1 225 1 142 1 
24 1 225 1 142 1 
37 2 146 1 271 1 13 1 24 1 142 3 
37 1 271 1 13 1 253 1 24 1 142 2 
37 1 271 2 13 1 24 1 142 2 
226 1 98 1 99 3 251 2 1 5 155 2 254 3 255 1 59 1 81 1 160 1 162 2 342 1 368 1 211 2 214 1 260 1 304 1 40 1 66 1 133 1 237 1 43 5 69 1 262 1 70 1 10 1 199 1 149 1 288 4 247 2 116 1 
226 3 98 3 99 8 251 6 1 9 254 9 364 1 255 1 275 1 59 1 81 2 160 3 162 6 126 5 281 1 367 1 342 2 84 1 211 5 284 1 214 6 304 2 66 3 133 2 43 9 69 3 219 1 70 1 92 5 10 2 199 3 149 4 288 7 247 6 116 1 
226 1 98 1 99 3 251 2 1 3 155 1 254 4 81 1 160 1 162 2 367 1 342 1 211 3 368 1 304 1 66 1 133 1 237 1 43 3 69 2 70 1 10 1 199 1 149 1 288 2 247 2 
226 2 98 2 99 5 251 4 1 4 155 2 254 7 275 1 81 1 160 2 162 4 281 1 367 1 342 1 211 4 368 1 284 1 304 1 66 2 133 1 237 1 43 4 69 3 70 1 10 1 199 2 149 2 288 3 247 4 
152 1 173 1 191 1 
327 1 191 1 
217 1 
4 1 191 1 
152 2 118 1 4 1 191 3 175 1 289 1 
118 1 4 1 191 1 
191 1 210 1 
226 1 65 1 38 1 370 3 349 2 350 1 351 1 79 7 160 1 93 2 240 4 8 3 331 1 29 1 30 1 282 1 32 1 
226 1 65 1 38 1 370 3 349 2 350 1 351 1 79 7 160 1 93 2 240 4 8 3 331 1 29 1 30 1 282 1 32 1 
226 1 65 1 38 1 370 3 349 2 350 1 351 1 79 7 160 1 93 2 240 4 8 3 331 1 29 1 30 1 282 1 32 1 85 1 
226 4 98 3 250 1 79 31 160 4 229 1 29 2 30 2 282 2 31 1 32 5 34 1 234 1 235 1 236 3 87 1 38 1 65 1 215 2 66 3 370 10 349 5 350 2 351 1 240 16 93 3 8 15 331 1 148 4 199 3 381 1 20 1 178 1 55 1 
226 1 250 1 79 9 123 1 160 1 29 1 282 1 30 1 32 1 34 2 235 2 215 4 38 1 370 4 349 3 350 1 351 1 240 5 93 2 8 4 331 1 14 1 381 2 20 2 
151 1 249 1 360 1 201 1 154 1 335 1 24 1 205 1 82 1 321 2 365 1 207 1 209 1 341 1 186 1 348 1 37 1 67 1 190 1 142 2 46 1 195 1 72 1 11 1 146 1 372 1 353 1 50 1 377 2 225 1 
151 1 249 1 360 1 201 1 335 1 24 1 205 1 82 1 321 3 27 1 365 1 207 2 209 1 341 1 186 1 62 1 213 1 348 1 37 1 67 1 190 1 142 2 46 1 195 1 146 1 372 1 353 1 50 1 377 3 225 1 
151 1 249 1 360 1 201 1 335 1 24 1 205 1 82 1 321 2 27 1 365 1 207 2 209 1 341 1 186 1 213 1 348 1 37 1 67 1 190 1 142 2 146 1 372 1 377 2 225 1 
249 1 360 2 334 1 200 1 201 2 77 1 57 1 205 1 321 1 365 2 4 1 209 1 185 1 186 1 33 1 62 1 189 1 348 1 67 2 191 1 46 1 353 1 377 1 
151 1 249 1 360 1 201 1 154 1 24 1 205 1 82 1 321 1 27 1 365 1 209 1 341 1 186 1 348 1 37 1 67 1 142 2 46 1 195 1 11 1 146 1 353 1 50 1 377 1 225 1 
216 1 
249 1 153 1 99 2 1 5 291 1 254 2 255 1 204 1 59 3 205 2 256 1 106 1 4 1 162 2 209 2 257 1 342 1 211 2 212 1 214 6 348 1 218 2 167 2 168 4 69 2 70 1 10 1 354 2 309 1 176 1 19 1 313 1 358 1 359 1 23 1 228 1 81 1 322 1 185 1 186 2 187 2 33 2 189 1 285 2 41 1 133 1 135 1 43 5 191 1 239 2 193 1 139 1 329 1 48 2 243 1 
359 1 153 1 41 1 135 1 43 3 1 3 168 2 23 1 139 1 193 1 220 1 204 1 329 1 59 1 48 1 106 1 257 1 176 1 212 1 19 1 214 2 313 1 
359 1 153 1 1 3 23 1 204 1 59 1 106 1 257 1 211 1 212 1 214 1 285 1 41 1 135 1 43 3 168 3 193 1 139 1 70 1 329 1 220 1 176 1 19 1 313 1 
359 1 153 1 1 3 23 1 204 1 59 1 106 1 257 1 187 1 211 1 212 1 214 2 285 1 41 1 135 1 43 3 168 3 193 1 139 1 70 1 220 1 329 1 48 1 176 1 19 1 313 1 
56 1 153 1 99 1 1 5 255 1 204 1 59 3 256 1 106 1 162 1 257 1 342 1 211 1 212 1 214 7 166 1 218 2 167 2 168 5 68 1 306 1 69 2 70 1 220 1 265 1 266 1 9 1 10 1 354 2 309 1 176 2 268 1 19 1 313 1 359 1 179 1 76 1 23 1 320 1 81 1 233 1 187 4 285 3 41 2 135 1 43 5 139 2 193 1 239 2 329 2 48 4 
153 1 99 1 1 4 291 1 254 2 255 1 204 1 59 2 256 1 106 1 162 1 257 1 342 1 211 2 212 1 214 4 218 2 167 2 168 4 69 2 70 1 10 1 354 2 309 1 176 1 19 1 313 1 359 1 23 1 81 1 187 2 285 2 41 1 135 1 43 4 139 1 193 1 239 2 329 1 48 2 
359 1 153 1 99 1 1 4 23 1 320 1 255 1 204 1 59 2 81 1 256 1 106 1 162 1 257 1 342 1 187 2 211 1 212 1 214 4 285 2 166 1 41 1 218 2 167 2 135 1 43 4 168 4 68 1 69 2 70 1 239 2 193 1 139 1 329 1 48 2 10 1 354 2 309 1 176 1 19 1 313 1 
359 1 153 1 99 1 1 4 23 1 320 1 255 1 204 1 59 2 81 1 256 1 106 1 162 1 257 1 342 1 187 2 211 1 212 1 214 4 285 2 166 1 41 1 218 2 167 2 135 1 43 4 168 4 68 1 69 2 70 1 239 2 193 1 139 1 329 1 48 2 10 1 354 2 309 1 176 1 19 1 313 1 
359 1 153 1 99 1 1 4 23 1 254 2 320 1 255 1 204 1 59 2 81 1 124 2 106 1 162 1 257 1 280 1 342 1 187 2 325 2 211 1 212 1 214 4 63 1 285 2 41 1 218 2 135 1 43 4 168 4 169 1 70 1 239 2 193 1 139 1 329 1 48 2 10 1 309 1 176 1 19 1 313 1 
359 1 153 1 99 1 76 1 1 4 23 1 320 1 255 1 204 1 59 2 81 1 256 1 106 1 162 1 257 1 342 1 187 3 211 1 212 1 214 5 285 3 166 1 41 1 218 2 167 2 135 1 43 4 168 5 68 1 69 2 70 1 239 2 193 1 139 1 329 1 48 3 10 1 354 2 309 1 176 1 19 1 313 1 
359 1 153 1 99 1 76 1 1 4 23 1 320 1 255 1 204 1 59 2 81 1 256 1 106 1 162 1 257 1 342 1 187 3 211 1 212 1 214 5 285 3 166 1 41 1 218 2 167 2 135 1 43 4 168 5 68 1 69 2 70 1 239 2 193 1 139 1 329 1 48 3 10 1 354 2 309 1 176 1 19 1 313 1 
359 1 153 1 99 1 1 4 291 1 23 1 254 2 255 1 204 1 59 2 81 1 124 2 106 1 162 1 257 1 342 1 187 2 325 2 211 1 212 1 214 4 285 2 41 1 218 2 135 1 43 4 168 4 169 1 70 1 239 2 193 1 139 1 329 1 48 2 10 1 309 1 176 1 19 1 313 1 
226 1 317 1 273 1 337 2 338 1 79 6 160 1 282 1 30 1 34 1 235 1 38 1 215 2 370 2 349 2 261 1 351 1 240 3 93 1 8 3 331 1 173 1 379 1 150 1 381 1 20 1 
226 2 98 2 317 1 273 11 156 1 337 1 338 11 79 14 160 1 32 1 34 2 234 1 235 2 110 1 236 3 215 4 66 2 370 2 349 1 112 1 221 1 240 8 8 6 287 1 148 3 310 1 199 1 376 1 379 2 381 2 150 4 178 1 20 2 
249 1 56 1 290 1 118 1 317 1 156 1 102 1 337 1 205 1 79 2 4 1 209 1 184 1 186 1 33 1 34 1 235 1 348 1 215 2 41 2 191 1 112 1 90 1 329 2 47 1 240 1 145 1 8 1 9 1 73 1 95 1 176 1 376 1 16 1 379 1 150 1 381 1 20 1 
249 2 290 1 56 1 98 2 102 1 156 1 252 2 337 2 205 3 338 7 160 3 5 1 4 2 209 3 348 2 215 6 66 2 349 4 305 2 112 1 351 1 8 10 9 1 352 2 176 1 16 2 20 3 226 3 118 2 317 3 121 2 273 7 79 20 27 1 30 1 282 1 186 3 32 4 188 1 33 1 34 3 235 3 38 1 41 3 370 8 191 2 329 3 47 2 93 1 240 10 331 1 199 2 376 1 95 2 379 3 333 1 381 3 96 2 150 7 
249 2 56 1 290 1 317 2 205 7 79 2 26 1 27 1 4 2 209 8 208 1 185 1 186 8 33 2 34 2 189 1 235 2 348 2 215 4 41 1 134 2 191 3 6 1 261 1 112 1 307 1 329 1 240 1 49 1 72 1 8 1 9 1 223 1 15 1 176 1 376 1 379 2 381 2 20 2 
75 1 56 1 226 1 98 1 317 1 273 1 156 1 338 1 79 3 160 1 34 1 235 1 215 2 66 1 41 1 370 1 349 1 306 1 329 1 71 1 240 1 8 2 9 1 199 1 176 1 379 1 150 1 381 1 20 1 
215 2 226 1 66 1 370 1 317 1 273 1 261 1 338 1 79 2 143 1 240 2 32 1 34 1 379 1 150 1 381 1 235 1 20 1 
215 2 370 1 349 1 317 1 273 1 261 1 338 1 79 2 160 1 8 2 231 1 199 1 34 1 379 1 150 1 381 1 235 1 20 1 
226 1 98 1 317 1 273 2 338 2 79 4 160 1 32 1 34 1 235 1 215 2 66 1 370 2 349 1 261 1 240 2 8 2 199 1 379 1 381 1 150 2 20 1 
215 2 226 1 66 1 370 1 317 1 273 1 338 1 79 2 143 1 240 2 208 1 32 1 34 1 379 1 150 1 381 1 235 1 20 1 
215 2 370 1 349 1 317 1 273 1 338 1 79 2 160 1 8 2 231 1 208 1 199 1 34 1 379 1 150 1 381 1 235 1 20 1 
226 1 98 1 317 1 273 2 338 2 79 4 160 1 208 1 32 1 34 1 235 1 215 2 66 1 370 2 349 1 240 2 8 2 199 1 379 1 381 1 150 2 20 1 
226 1 98 1 317 1 273 2 338 2 79 4 160 1 32 1 34 1 235 1 215 2 66 1 370 2 349 1 240 2 8 2 199 1 379 1 381 1 150 2 20 1 
249 1 118 1 317 1 337 1 205 1 79 2 4 1 209 1 186 1 33 1 34 1 235 1 348 1 215 2 41 1 191 1 112 1 329 1 47 1 240 1 8 1 352 1 376 1 95 1 16 1 379 1 381 1 20 1 
249 1 118 1 317 1 337 1 205 1 79 2 4 1 209 1 186 1 33 1 34 1 235 1 348 1 131 1 215 2 41 1 191 1 112 1 329 1 240 1 267 1 8 1 376 1 95 1 379 1 381 1 54 1 20 1 
226 1 98 1 317 1 273 2 156 1 338 2 79 4 160 1 32 1 34 1 235 1 215 2 66 1 370 2 349 1 240 2 8 2 199 1 379 1 381 1 150 2 20 1 
249 1 226 1 118 1 98 1 121 1 317 1 273 2 338 2 205 1 79 4 160 1 4 1 209 1 32 1 186 1 34 1 235 1 348 1 215 2 66 1 41 1 370 2 349 1 191 1 329 1 47 1 240 2 8 2 72 1 352 1 199 1 95 1 16 1 379 1 150 2 381 1 20 1 
56 1 226 1 98 1 317 1 273 1 156 1 338 1 79 3 160 1 32 1 34 1 235 1 215 2 66 1 41 1 370 1 306 1 329 1 71 1 240 2 8 1 9 1 199 1 176 1 379 1 381 1 150 1 248 1 20 1 
314 2 226 3 361 1 98 3 22 1 122 1 25 1 339 2 79 19 123 1 160 3 32 3 34 2 234 1 235 2 236 1 215 4 66 3 370 6 349 3 263 1 7 1 240 9 8 10 148 2 199 3 17 1 381 2 178 1 20 2 
314 1 226 3 361 1 98 3 250 2 362 1 101 1 22 1 122 1 339 4 79 26 123 1 160 2 108 1 28 1 32 2 34 3 301 1 235 3 129 1 236 2 215 6 66 3 370 4 349 2 263 2 7 2 240 14 8 12 148 2 199 2 381 3 20 3 178 2 
314 1 226 5 361 1 98 4 250 1 362 1 101 1 22 1 122 1 339 4 79 41 123 1 160 5 108 1 28 1 30 1 282 1 343 1 32 4 34 3 301 1 234 1 235 3 129 1 236 3 38 1 215 6 66 4 370 8 349 4 351 1 263 2 7 1 93 1 240 20 8 21 331 1 148 4 199 4 17 1 381 3 178 3 20 3 
314 1 226 5 361 1 98 4 250 2 362 1 101 1 22 1 122 1 339 4 79 38 123 1 160 4 108 1 28 1 30 1 282 1 343 1 32 3 34 4 301 1 234 1 235 4 129 1 236 3 38 1 215 8 66 4 370 7 349 4 351 1 263 2 7 1 93 1 240 20 8 18 331 1 148 4 199 3 17 1 381 4 178 3 20 4 
314 1 226 8 361 1 98 7 250 1 362 1 101 1 22 1 122 1 339 4 79 52 123 1 160 8 108 1 28 1 30 1 282 1 32 7 34 2 301 1 234 2 235 2 129 1 110 2 236 4 38 1 215 4 66 7 370 14 349 7 351 1 263 1 7 1 93 1 240 27 8 25 331 1 148 4 199 7 381 2 178 2 20 2 
36 1 241 1 42 1 125 1 373 1 128 1 324 1 344 1 18 1 165 1 
107 1 258 1 
36 1 241 1 125 1 318 1 324 1 137 1 18 1 53 1 165 1 
36 1 132 1 119 1 43 1 1 1 2 1 241 1 295 2 242 1 125 1 373 1 128 1 324 1 344 1 211 1 18 1 326 1 165 1 
36 1 132 1 119 1 43 1 1 1 2 1 241 1 295 2 242 1 125 1 373 1 128 1 324 1 344 1 211 1 18 1 326 1 165 1 
36 1 132 1 119 1 43 1 1 1 2 1 241 1 295 2 242 1 125 1 373 1 128 1 324 1 344 1 211 1 18 1 326 1 165 1 
245 1 88 1 300 1 
245 1 88 1 300 1 
366 1 3 1 
366 1 88 1 3 1 
100 1 177 1 
56 2 100 1 1 1 337 1 295 1 107 1 60 1 125 1 324 1 258 1 165 1 36 1 132 1 111 1 40 1 41 2 43 1 262 1 329 2 242 1 241 1 9 2 149 1 176 2 288 1 18 1 177 1 
245 1 300 1 
366 1 88 1 3 1 
249 1 316 1 317 1 156 1 274 1 157 1 104 1 205 2 79 2 4 1 209 2 186 2 34 1 235 1 348 1 215 2 41 2 134 2 191 1 112 1 329 2 240 1 8 1 223 1 15 1 176 2 376 1 379 1 52 1 381 1 20 1 
348 1 249 1 151 1 37 1 24 1 205 2 142 2 105 1 27 1 72 1 365 1 146 1 209 2 50 1 127 1 341 1 186 2 74 1 225 1 
151 1 249 1 348 1 37 1 24 1 205 1 142 2 105 1 294 1 27 1 365 1 146 1 209 1 50 1 341 1 186 1 225 1 
348 1 249 1 191 1 57 1 205 1 206 1 4 1 365 1 209 1 127 1 185 1 186 1 33 1 189 1 
348 1 151 1 249 1 37 1 24 1 205 1 142 2 105 1 27 1 365 1 146 1 209 1 50 1 127 1 341 1 186 1 74 1 225 1 
356 1 
114 1 99 1 162 1 173 1 211 1 70 1 89 1 
99 1 1 1 254 1 255 1 59 1 81 1 256 1 162 1 342 1 211 2 214 1 167 1 43 1 69 1 70 1 10 1 354 1 
249 3 152 2 98 2 99 9 251 6 1 5 254 12 58 1 255 4 205 3 158 1 59 3 160 2 4 3 162 8 209 3 299 2 342 4 210 2 109 2 211 8 214 5 348 4 64 1 66 2 69 6 70 2 114 1 72 1 10 4 175 1 358 1 180 2 226 2 118 3 120 2 23 2 81 4 277 2 186 3 33 1 130 2 327 3 133 2 191 10 43 5 89 1 140 2 197 2 374 1 199 2 51 1 247 6 96 2 
226 2 98 2 99 8 251 5 101 1 1 1 254 6 255 2 59 1 81 2 160 2 108 1 162 5 230 1 28 1 109 1 342 2 211 5 301 1 214 1 129 1 236 1 66 2 133 1 43 1 136 1 69 3 70 2 140 2 10 2 148 1 199 2 247 5 358 1 178 1 
117 1 226 2 56 1 99 2 1 1 255 1 81 1 160 1 162 2 30 1 282 1 233 1 109 1 342 1 166 1 41 1 43 1 306 1 139 1 329 1 140 2 265 1 266 1 10 1 331 1 9 1 176 1 268 1 
99 1 89 1 70 1 255 1 114 1 81 1 10 1 162 1 342 1 211 1 
226 2 98 2 66 2 99 5 251 5 69 5 254 10 140 2 160 2 162 5 109 1 199 2 211 5 247 5 96 1 
1 1 43 1 211 1 70 1 214 1 59 1 
249 1 99 2 1 3 255 1 58 1 228 1 205 4 59 2 81 2 4 1 162 2 232 1 209 4 367 1 185 1 342 2 186 4 33 2 189 1 214 4 348 1 133 2 191 1 43 3 243 1 10 2 51 2 312 1 358 2 
249 1 56 2 118 1 317 1 337 1 205 1 79 1 4 1 209 1 233 1 186 1 34 1 33 1 235 1 348 1 215 2 41 3 191 1 112 1 306 2 329 3 47 1 8 1 9 2 352 1 176 2 95 1 16 1 379 1 381 1 269 1 20 1 
99 1 133 1 251 2 69 2 254 4 70 2 255 1 81 1 93 1 162 2 10 1 342 1 211 4 247 2 358 1 
296 1 125 1 324 1 
296 1 125 1 324 1 
125 1 324 1 344 1 177 1 357 1 
296 1 125 1 324 1 
125 1 324 1 332 1 
125 1 324 1 332 1 
125 1 324 1 332 1 
125 1 324 1 
36 1 18 1 
226 1 215 4 38 1 250 1 370 3 349 2 351 1 79 8 93 1 160 1 240 4 8 4 331 1 282 1 30 1 32 1 34 2 381 2 235 2 20 2 
38 1 226 1 370 2 349 2 351 1 79 6 93 1 240 3 160 1 8 3 331 1 173 1 282 1 30 1 
215 2 226 1 98 1 66 1 370 2 349 1 170 1 79 4 160 1 240 2 8 2 199 1 32 1 34 1 381 1 235 1 20 1 
236 1 226 1 98 1 66 1 370 2 349 1 79 7 160 1 240 3 8 4 199 1 148 2 32 1 234 1 178 1 
226 3 98 2 250 2 79 23 160 3 298 1 30 2 282 2 32 4 34 2 234 1 235 2 110 1 236 2 38 1 215 4 66 2 370 9 349 5 351 1 93 1 240 11 8 12 331 1 287 1 148 2 199 2 381 2 20 2 
8 1 148 1 79 1 
236 1 240 1 79 1 
215 2 226 1 98 1 66 1 370 3 349 2 170 1 79 6 240 3 160 1 8 3 32 1 199 1 34 1 381 1 96 1 235 1 20 1 
226 2 98 2 101 1 79 12 123 1 160 2 108 1 28 1 32 1 34 1 301 1 235 1 129 1 236 1 215 2 66 2 370 2 349 1 240 6 8 6 148 1 199 2 381 1 178 1 20 1 
226 1 370 2 349 1 79 6 240 3 160 1 8 3 331 1 282 1 30 1 32 1 
215 2 38 1 250 1 370 2 349 1 351 1 79 3 240 1 8 2 298 1 30 1 282 1 32 1 34 1 381 1 235 1 20 1 
117 1 215 2 226 2 370 5 349 3 79 10 123 1 240 5 160 2 8 5 331 1 282 2 30 2 32 2 34 1 381 1 235 1 20 1 
215 2 226 1 66 1 370 1 79 2 123 1 240 2 32 1 34 1 381 1 235 1 20 1 
215 2 226 1 98 1 66 1 370 2 349 1 79 4 123 1 160 1 240 2 8 2 199 1 32 1 34 1 381 1 235 1 20 1 
215 6 250 1 370 2 349 1 79 3 123 1 240 1 8 2 298 1 282 1 30 1 32 1 34 3 17 1 381 3 235 3 20 3 
226 5 98 3 250 2 79 34 123 1 160 5 229 1 298 1 30 3 282 3 31 1 32 5 34 5 234 1 235 5 236 3 38 1 215 10 66 3 370 12 349 7 351 1 170 1 93 1 240 16 8 18 331 2 148 4 199 3 17 1 381 5 55 1 178 1 20 5 
226 1 79 8 123 1 160 1 282 1 30 1 34 1 301 1 235 1 236 1 215 2 38 1 370 2 349 2 351 1 93 1 240 4 8 4 331 1 148 1 381 1 178 1 20 1 
226 2 98 1 79 11 123 1 160 1 30 1 282 1 32 1 34 2 301 1 234 1 235 2 236 1 38 1 215 4 66 1 370 3 349 2 351 1 170 1 93 1 240 6 8 5 331 1 148 2 381 2 178 1 20 2 
226 3 98 2 250 1 101 1 79 19 123 1 160 3 108 1 28 1 30 1 282 1 32 1 34 3 301 1 235 3 129 1 236 1 38 1 215 6 66 2 370 4 349 3 351 1 170 1 93 1 240 9 8 10 331 1 148 1 199 2 381 3 178 1 20 3 
226 3 98 2 250 1 101 1 79 17 123 1 160 2 108 1 28 1 30 1 282 1 32 2 34 3 301 1 235 3 129 1 236 1 38 1 215 6 66 2 370 5 349 3 351 1 170 1 93 1 240 10 8 7 331 1 148 1 199 1 381 3 178 1 20 3 
226 1 79 8 123 1 160 1 282 1 30 1 34 1 301 1 235 1 236 1 215 2 38 1 370 2 349 2 351 1 93 1 240 4 8 4 331 1 148 1 381 1 178 1 20 1 
226 2 98 2 101 1 79 12 123 1 160 2 108 1 28 1 32 1 34 1 301 1 235 1 129 1 236 1 215 2 66 2 370 2 349 1 240 6 8 6 148 1 199 2 381 1 178 1 20 1 
226 3 98 2 250 2 101 1 79 18 123 1 160 2 108 1 28 1 30 1 282 1 32 2 34 4 301 1 235 4 129 1 236 1 38 1 215 8 66 2 370 5 349 3 351 1 170 1 93 1 240 10 8 8 331 1 148 1 199 1 381 4 178 1 20 4 
226 3 98 3 250 2 101 1 79 16 123 1 160 2 108 1 28 1 32 3 34 4 301 1 235 4 129 1 236 1 215 8 66 3 370 6 349 3 240 9 8 7 148 1 199 2 17 1 381 4 178 1 20 4 
38 1 226 1 370 6 349 3 351 2 79 7 160 1 240 3 8 4 331 1 282 3 30 3 32 3 
226 3 98 2 250 2 101 1 79 18 123 1 160 2 108 1 28 1 30 1 282 1 32 1 34 4 301 1 235 4 129 1 236 1 38 1 215 8 66 2 370 4 349 3 351 1 93 1 240 10 8 8 331 1 148 1 199 1 17 1 381 4 178 1 20 4 
41 1 198 1 176 1 345 1 337 1 329 1 19 1 
39 1 41 1 238 1 337 1 329 1 91 1 174 1 198 1 176 1 378 1 345 1 19 1 
348 1 249 1 4 1 173 1 191 1 209 1 185 1 186 1 33 1 189 1 205 1 
348 1 249 1 290 1 56 1 118 1 41 2 191 1 337 1 329 2 205 1 47 1 4 1 9 1 209 1 186 1 95 1 176 1 33 1 
249 1 56 2 290 1 118 2 337 1 205 1 4 2 209 1 186 1 210 1 348 1 41 2 135 1 191 3 139 1 329 2 47 1 9 1 197 1 51 1 176 2 95 1 313 1 
249 1 56 2 290 1 118 2 337 1 205 2 4 2 209 2 186 2 210 1 348 1 131 1 41 2 135 1 191 3 139 1 329 2 144 1 9 1 197 1 51 1 176 2 95 1 313 1 
348 1 249 1 152 1 118 1 327 1 43 2 1 2 191 4 23 1 192 1 70 1 205 3 144 1 4 1 340 1 197 1 209 3 210 1 186 3 33 1 51 1 211 1 214 1 
348 1 249 1 152 1 118 1 327 1 43 2 1 2 191 4 23 1 70 1 205 3 144 1 277 1 4 1 197 1 209 3 210 1 186 3 33 1 51 1 211 1 214 1 
348 1 249 1 49 1 209 1 186 1 205 1 
249 2 348 3 118 1 134 1 191 3 6 1 307 1 205 6 26 1 49 1 27 1 72 1 4 2 12 1 209 7 15 1 186 7 33 2 175 1 346 1 347 1 
249 1 290 1 56 1 156 1 104 1 337 2 205 1 338 1 160 1 4 1 209 1 348 1 215 4 349 2 305 1 351 1 72 1 8 3 352 1 9 1 176 1 16 1 20 2 226 1 118 1 121 1 317 2 273 1 79 6 282 1 30 1 186 1 34 2 235 2 38 1 41 2 370 2 191 1 329 2 47 1 240 3 93 1 331 1 95 1 379 2 150 1 381 2 
180 1 152 1 99 1 1 3 23 1 255 2 58 1 205 1 59 1 81 2 277 1 162 1 209 1 299 1 186 1 342 2 33 1 211 1 214 2 130 1 327 1 43 3 191 2 70 1 89 1 114 1 10 2 288 1 
249 1 348 2 152 1 118 1 191 2 205 2 158 1 72 1 49 1 4 1 209 2 186 2 175 1 
348 1 249 1 191 1 205 4 44 1 144 1 72 1 4 1 209 4 185 1 186 4 33 1 189 1 
249 1 348 2 118 1 182 1 191 1 205 2 4 1 12 1 209 2 186 2 311 1 51 1 346 1 333 1 
348 1 249 1 209 1 341 1 186 1 24 1 33 1 225 1 205 1 142 1 
348 1 249 1 27 1 72 1 4 1 191 1 209 2 15 1 186 2 157 1 205 2 
249 2 348 2 191 3 6 1 205 4 44 1 26 1 72 1 4 2 209 5 185 1 15 1 186 5 51 1 33 1 189 1 
249 2 348 2 191 3 6 1 141 1 205 4 44 1 72 1 4 2 209 5 185 1 15 1 186 5 51 1 33 1 189 1 
348 1 249 1 290 1 56 1 131 1 118 1 41 2 191 1 337 1 329 2 205 1 4 1 9 1 209 1 186 1 95 1 176 1 33 1 
249 1 348 2 118 1 191 1 205 1 4 1 12 1 209 1 186 1 51 1 175 1 346 1 347 1 
41 1 316 1 78 1 274 1 292 1 329 1 355 1 176 1 52 1 
272 1 78 1 244 1 
297 1 355 1 78 1 292 1 337 1 
135 1 43 2 1 2 272 1 78 1 23 1 70 1 139 1 292 2 193 1 336 1 337 1 222 1 297 2 355 2 244 1 211 1 288 1 313 1 
190 1 173 1 372 1 335 1 
46 1 321 1 190 1 372 1 353 1 335 1 377 1 
321 1 67 1 201 1 
46 1 321 3 172 2 11 1 190 1 372 1 353 1 319 1 335 1 259 1 377 3 45 1 
0 1 46 1 321 2 190 1 207 1 372 1 353 1 335 1 377 2 
37 1 190 1 142 1 46 1 321 1 11 1 353 1 286 1 377 1 225 1 164 1 
46 1 321 1 11 1 190 1 372 1 353 1 377 1 
46 1 321 1 11 1 372 2 353 1 335 1 377 1 
303 1 190 1 363 1 46 2 321 2 11 1 372 1 353 2 61 1 377 2 
190 2 335 1 138 1 46 1 321 3 161 1 11 1 207 2 323 1 372 1 353 1 377 3 164 1 
37 1 190 1 335 1 24 1 142 2 46 1 321 2 11 1 279 1 146 1 207 1 372 1 353 1 377 2 225 1 
0 1 190 2 335 1 46 2 321 4 11 1 207 2 323 1 372 1 353 2 377 4 380 1 164 1 
46 1 321 1 11 1 190 1 372 1 353 1 335 1 377 1 
190 3 319 1 335 2 46 1 321 4 172 1 207 2 323 1 372 2 83 1 353 1 259 1 377 4 164 1 
190 1 202 1 335 1 159 1 46 1 321 2 11 1 207 1 372 1 353 1 377 2 163 1 
46 1 321 3 172 2 11 1 190 1 372 1 353 1 319 1 335 1 259 2 377 3 264 1 
196 2 21 1 190 2 113 1 
46 1 321 1 11 1 353 1 377 1 246 1 
46 1 161 1 321 2 11 1 190 1 207 1 372 1 353 1 335 1 377 2 
181 1 
46 1 321 1 11 1 190 1 372 1 353 1 335 1 377 1 
190 1 335 1 46 1 321 3 161 1 172 1 11 1 207 1 353 1 372 1 377 3 
190 1 323 1 83 1 164 1 
190 1 372 1 

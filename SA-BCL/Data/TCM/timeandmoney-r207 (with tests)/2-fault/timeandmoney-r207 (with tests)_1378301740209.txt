#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 94 1 258 9 259 2 65 1 96 5 192 1 193 1 303 2 241 2 125 1 25 6 170 3 150 1 131 1 153 1 80 1 223 1 337 2 157 1 367 2 315 1 275 4 342 1 370 1 16 2 255 9 301 2 
20 1 94 1 258 9 259 2 65 1 96 5 192 1 193 1 303 2 241 2 125 1 25 6 170 3 150 1 131 1 153 1 80 1 223 1 337 2 157 1 367 2 315 1 275 4 342 1 370 1 16 2 255 9 301 2 
20 1 94 1 258 10 259 2 65 1 96 6 192 1 193 1 303 2 241 2 125 1 25 7 170 4 150 1 131 1 153 1 80 1 223 1 337 2 157 1 367 2 315 1 275 5 342 1 370 1 16 2 255 10 301 2 
20 1 94 1 258 7 259 2 65 1 96 4 192 1 193 1 303 2 241 2 125 1 25 4 170 2 150 1 131 1 80 1 223 1 337 2 157 1 367 2 315 1 275 3 342 1 370 1 16 1 255 7 301 2 
94 1 259 1 258 4 96 3 337 1 367 1 193 1 241 1 315 1 275 2 25 3 170 1 150 1 16 2 153 1 80 1 255 4 301 1 
94 1 258 2 259 1 96 1 337 1 367 1 157 1 193 1 303 1 241 1 315 1 195 1 59 1 289 1 223 1 255 2 
94 1 258 3 96 2 337 2 367 2 193 1 303 1 315 1 275 1 25 1 170 1 131 1 255 3 
94 1 258 9 65 1 259 1 96 5 192 1 193 1 303 1 241 1 25 7 358 1 170 3 150 1 131 1 153 1 80 1 337 2 367 2 315 1 275 4 16 2 163 1 255 9 301 1 
94 1 258 9 65 1 259 1 96 5 192 1 193 1 303 1 241 1 25 7 358 1 170 3 150 1 131 1 153 1 80 1 337 2 367 2 315 1 275 4 16 2 163 1 255 9 301 1 
138 1 113 1 171 1 
45 2 171 1 44 1 
110 2 318 1 36 1 174 2 120 2 127 2 129 2 93 2 
281 1 121 1 191 1 99 1 145 1 101 1 194 1 243 1 263 1 50 1 127 2 129 3 51 1 104 1 267 1 362 2 246 1 174 2 269 1 31 2 177 2 110 2 156 1 293 1 180 1 272 1 36 1 55 2 274 1 316 1 318 1 60 1 298 2 118 1 92 1 120 2 93 3 
110 1 318 1 221 1 276 1 174 1 41 1 120 1 127 1 129 1 93 1 
212 1 113 1 143 1 313 1 127 1 129 1 87 1 328 1 171 1 41 1 256 1 300 1 93 1 335 1 
110 1 212 2 113 1 143 1 313 1 127 1 129 1 87 2 328 1 171 1 174 1 120 1 41 1 93 1 335 1 
87 1 212 1 229 1 373 1 172 1 
1 1 87 2 212 2 113 1 171 1 229 1 373 1 330 1 
87 1 212 1 373 1 
110 1 212 1 127 1 129 1 87 1 318 1 221 1 229 1 276 1 162 1 174 1 41 1 120 1 93 1 
171 1 
87 2 212 2 113 1 171 1 324 1 229 1 373 1 330 1 
165 1 211 1 212 5 365 1 113 1 23 1 340 1 87 5 161 1 105 1 72 1 171 1 319 1 229 2 361 2 154 2 91 2 373 2 330 1 
138 1 36 1 
110 1 36 2 127 2 129 2 288 1 266 1 174 1 120 1 93 2 
141 1 155 1 306 1 
99 1 272 1 36 1 145 1 274 1 243 1 263 1 129 1 104 1 298 1 277 1 92 1 269 1 31 1 93 1 177 1 
110 1 213 1 99 1 272 1 145 1 274 1 306 1 243 1 263 1 127 1 129 2 104 1 90 1 298 1 92 1 120 1 269 1 31 1 93 2 177 1 
110 3 213 1 36 1 174 1 120 3 127 3 129 3 93 3 
110 1 221 1 41 1 120 1 127 1 129 1 93 1 
110 1 288 1 266 1 174 1 41 1 120 1 127 1 129 1 93 1 
281 1 212 1 213 1 191 1 99 1 143 1 145 1 101 1 194 1 243 1 263 1 127 3 129 4 51 1 104 1 266 1 328 1 362 2 246 1 174 2 269 1 31 1 335 1 177 1 110 3 293 1 272 1 36 1 313 1 55 1 274 1 316 1 228 1 87 1 318 1 60 1 90 1 298 1 118 1 92 1 120 3 41 1 321 1 93 4 
110 1 287 1 213 1 36 1 120 1 256 1 127 2 129 2 93 2 
110 3 310 1 212 1 213 2 143 1 313 1 127 3 129 3 87 1 228 1 266 1 328 1 171 1 90 1 174 1 41 1 120 3 93 3 335 1 
110 2 213 1 306 1 127 2 129 2 266 1 141 1 174 1 120 2 93 2 
99 1 272 1 36 1 145 1 274 1 243 1 263 1 129 1 104 1 298 1 92 1 269 1 31 1 93 1 177 1 
248 1 99 1 272 1 36 1 274 1 263 1 129 1 104 1 298 1 92 1 290 1 269 1 31 1 93 1 177 1 
281 1 121 2 191 1 101 1 194 2 306 2 126 1 51 1 197 1 359 1 219 1 76 1 79 1 362 2 246 1 155 2 55 4 159 1 15 1 118 1 141 2 19 1 
110 1 41 1 120 1 127 1 167 1 335 1 129 1 93 1 
110 4 213 2 36 1 296 1 127 5 129 5 227 1 287 1 266 1 90 1 174 1 120 4 256 1 93 5 
110 2 221 1 41 1 120 2 167 1 127 2 129 2 93 2 
338 1 168 1 
338 1 168 1 
178 1 305 1 
178 1 305 1 
178 1 305 1 
338 1 250 1 168 1 
338 1 250 1 168 1 
338 1 56 1 168 1 
178 1 338 2 253 1 100 1 305 1 168 2 
338 1 250 1 168 1 
338 1 244 1 168 1 
338 1 244 1 168 1 
338 1 244 1 168 1 
212 2 347 1 312 1 338 2 283 3 284 1 242 1 100 1 58 1 168 2 87 2 360 1 171 1 268 1 107 2 372 2 230 2 5 2 199 2 
212 1 98 1 283 1 353 1 168 1 127 2 129 2 26 1 5 1 199 1 110 2 270 1 312 1 338 1 36 1 226 1 56 1 87 1 206 1 372 1 120 2 230 1 280 1 93 2 
259 1 241 1 301 1 
259 1 59 1 241 1 
259 3 59 1 235 1 114 1 187 1 301 2 
259 2 59 1 235 1 349 1 187 1 301 1 
259 2 59 1 235 2 187 1 301 1 
45 3 165 3 212 5 215 1 127 1 245 2 129 1 169 1 218 2 359 1 221 1 171 2 154 1 361 1 174 1 330 1 110 1 365 2 113 1 37 1 226 1 317 1 340 1 159 1 341 1 318 1 87 5 39 2 15 1 139 1 229 4 276 1 91 1 373 1 162 1 41 1 120 1 44 1 19 1 93 1 
45 3 165 3 212 5 215 1 49 2 127 1 245 2 169 1 129 1 359 1 221 1 171 2 154 1 361 1 330 1 172 2 174 1 292 1 110 1 365 2 202 1 113 1 226 1 317 1 340 1 159 1 341 1 87 5 318 1 39 2 15 1 229 4 276 1 91 1 373 3 162 1 41 1 120 1 44 1 19 1 93 1 
165 1 45 2 211 1 212 3 215 1 127 1 129 1 245 1 218 1 221 1 171 2 154 1 361 1 174 1 110 1 365 2 113 1 37 1 226 1 317 1 159 1 318 1 87 3 341 1 39 1 276 1 229 2 139 1 162 1 91 1 41 1 120 1 44 1 93 1 19 1 
45 2 165 1 211 1 212 2 215 1 245 1 218 1 171 1 154 1 361 1 365 2 37 1 226 1 297 1 317 1 159 1 87 2 341 1 39 1 139 1 229 1 91 1 44 1 19 1 
138 1 92 1 285 1 
106 1 92 1 
57 1 
92 1 263 1 
104 1 282 1 216 1 92 3 285 2 263 1 
104 1 92 1 263 1 
257 1 92 1 
82 1 336 1 201 2 67 1 179 2 121 4 182 1 144 1 55 7 194 3 130 1 359 1 62 1 78 1 232 3 279 1 19 1 
82 1 336 1 201 2 67 1 179 2 121 4 182 1 144 1 55 7 194 3 130 1 359 1 62 1 78 1 232 3 279 1 19 1 
82 1 336 1 201 2 67 1 179 2 121 4 182 1 144 1 55 7 194 3 130 1 70 1 359 1 62 1 78 1 232 3 279 1 19 1 
323 4 21 1 121 16 67 2 144 1 68 1 101 1 194 15 325 3 130 2 51 1 359 4 78 1 362 2 246 1 336 1 82 5 201 3 179 3 182 2 55 31 317 3 159 3 205 1 13 1 160 1 15 3 62 1 118 1 209 1 278 1 279 2 232 8 19 4 
336 1 82 1 201 3 67 1 179 2 121 5 182 1 55 9 101 2 194 4 146 1 130 1 51 2 359 1 2 1 62 1 78 1 118 2 278 1 246 2 362 4 232 4 279 1 19 1 
94 1 258 2 66 1 259 2 96 1 193 1 123 1 303 1 241 1 304 1 25 1 196 1 152 1 132 1 269 1 31 1 177 1 337 1 367 1 181 1 183 1 114 1 274 1 315 1 251 1 59 1 343 1 298 1 255 2 301 1 
258 3 66 1 259 2 96 1 193 1 123 1 303 1 241 1 304 1 25 2 326 1 196 1 152 1 132 1 269 1 31 1 177 1 337 1 367 1 181 1 114 1 274 1 315 1 86 1 89 1 59 1 343 1 298 1 255 3 301 1 
258 2 259 2 96 1 193 1 123 1 303 1 241 1 304 1 25 2 326 1 196 1 152 1 269 1 31 1 177 1 181 1 114 1 274 1 315 1 86 1 59 1 343 1 298 1 255 2 301 1 
34 1 258 1 203 1 337 1 367 1 99 1 123 2 303 2 22 1 274 1 263 1 89 1 196 2 152 2 298 1 92 1 331 1 173 1 140 1 269 1 255 1 31 1 177 1 
94 1 258 1 66 1 259 2 123 1 303 1 241 1 304 1 196 1 152 1 132 1 269 1 31 1 177 1 337 1 367 1 181 1 183 1 114 1 274 1 86 1 59 1 343 1 298 1 255 1 301 1 
33 1 
45 2 189 2 99 2 143 1 103 1 328 1 154 1 331 1 330 3 53 1 335 1 6 1 247 2 113 1 9 1 11 2 12 1 340 1 61 2 298 2 252 4 256 1 299 2 18 1 300 1 165 2 212 5 215 1 351 1 69 1 263 1 127 1 129 1 171 2 361 1 173 1 269 1 31 2 177 2 84 1 365 2 311 1 368 2 313 1 274 1 38 1 87 5 371 2 373 6 91 1 92 1 42 1 41 1 44 2 93 1 
212 3 143 1 351 1 324 1 69 1 127 1 129 1 103 1 328 1 330 1 335 1 313 1 9 1 87 3 371 1 252 2 373 2 41 1 256 1 18 1 93 1 300 1 
212 3 143 1 351 1 324 1 69 1 127 1 129 1 103 1 328 1 171 1 330 1 335 1 113 1 313 1 9 1 11 1 87 3 373 1 252 3 41 1 256 1 18 1 93 1 300 1 
212 3 324 1 143 1 351 1 69 1 127 1 129 1 103 1 328 1 171 1 330 1 335 1 113 1 313 1 9 1 11 1 87 3 371 1 61 1 252 3 373 2 41 1 256 1 18 1 93 1 300 1 
189 2 143 1 324 1 103 1 328 1 154 1 330 3 53 1 335 1 247 2 113 5 9 1 11 4 340 1 61 4 252 6 256 1 18 1 299 2 300 1 165 1 212 5 351 1 354 1 69 1 127 1 356 1 129 1 265 1 171 5 30 1 77 1 361 1 365 1 313 1 368 2 38 1 87 5 371 4 373 7 91 1 41 1 44 2 93 1 
45 2 189 2 143 1 103 1 328 1 154 1 330 2 53 1 335 1 247 2 113 1 9 1 11 2 340 1 61 2 252 4 256 1 18 1 299 2 300 1 165 1 212 4 351 1 69 1 127 1 129 1 171 2 361 1 365 1 311 1 313 1 368 2 38 1 87 4 371 2 91 1 373 4 41 1 44 2 93 1 
165 1 189 2 212 4 143 1 351 1 69 1 127 1 356 1 129 1 103 1 328 1 171 1 30 1 154 1 77 1 361 1 330 2 53 1 335 1 247 2 365 1 113 1 368 2 313 1 9 1 11 2 38 1 340 1 87 4 371 2 61 2 373 4 252 4 91 1 41 1 256 1 44 2 299 2 18 1 93 1 300 1 
165 1 189 2 212 4 143 1 351 1 69 1 127 1 356 1 129 1 103 1 328 1 171 1 30 1 154 1 77 1 361 1 330 2 53 1 335 1 247 2 365 1 113 1 368 2 313 1 9 1 11 2 38 1 340 1 87 4 371 2 61 2 373 4 252 4 91 1 41 1 256 1 44 2 299 2 18 1 93 1 300 1 
45 2 165 1 212 4 143 1 351 1 69 1 127 1 129 1 103 1 328 1 171 1 30 1 154 1 361 1 330 2 53 1 333 1 176 2 335 1 7 2 365 1 113 1 112 1 368 2 313 1 9 1 11 2 340 1 87 4 371 2 61 2 185 1 373 4 252 4 91 1 41 1 256 1 299 2 18 1 93 1 300 1 
165 1 189 2 212 4 143 1 351 1 354 1 69 1 127 1 356 1 129 1 103 1 328 1 171 1 30 1 154 1 361 1 77 1 330 2 53 1 335 1 247 2 365 1 113 1 368 2 313 1 9 1 11 3 38 1 340 1 87 4 371 3 61 3 91 1 252 5 373 5 41 1 256 1 44 2 299 2 18 1 93 1 300 1 
165 1 189 2 212 4 143 1 351 1 354 1 69 1 127 1 356 1 129 1 103 1 328 1 171 1 30 1 154 1 361 1 77 1 330 2 53 1 335 1 247 2 365 1 113 1 368 2 313 1 9 1 11 3 38 1 340 1 87 4 371 3 61 3 91 1 252 5 373 5 41 1 256 1 44 2 299 2 18 1 93 1 300 1 
45 2 143 1 103 1 328 1 154 1 330 2 53 1 335 1 7 2 113 1 9 1 11 2 340 1 61 2 252 4 256 1 18 1 299 2 300 1 165 1 212 4 351 1 69 1 127 1 129 1 171 1 361 1 176 2 365 1 311 1 313 1 368 2 87 4 371 2 185 1 91 1 373 4 41 1 93 1 
281 1 121 3 191 1 101 1 306 1 194 3 130 1 51 1 359 1 76 1 78 1 362 2 246 1 155 1 336 1 201 2 179 1 182 1 36 2 55 6 138 1 62 1 118 1 141 1 232 2 19 1 
323 3 281 2 121 8 191 1 68 1 101 2 194 4 306 10 325 3 286 1 51 2 151 1 267 1 74 1 362 4 246 2 155 10 293 1 82 1 294 1 36 1 55 12 317 2 159 2 118 2 209 1 141 3 232 1 374 1 19 2 
281 1 121 1 213 1 99 1 191 1 145 1 101 1 243 1 194 1 263 1 127 1 24 1 129 2 51 1 104 1 267 1 246 1 362 2 269 1 31 1 177 1 110 1 293 1 133 1 272 1 36 1 55 2 274 1 90 1 298 1 277 1 118 1 92 1 141 1 120 1 210 1 374 1 93 2 
281 2 99 1 191 2 145 1 101 2 194 2 243 1 51 2 104 1 246 2 4 1 155 2 110 1 293 1 201 1 55 5 159 1 208 1 60 1 298 1 118 2 120 1 19 1 121 3 213 1 306 2 127 1 357 1 263 1 129 2 28 1 362 4 269 1 31 1 177 1 272 1 274 1 317 1 40 1 90 1 92 1 141 2 374 1 232 1 93 2 
188 1 281 2 121 1 213 1 99 2 191 2 261 1 101 2 194 1 127 1 50 2 263 2 129 1 51 2 27 1 327 1 267 1 76 1 362 4 246 2 173 1 331 1 269 2 31 7 177 8 110 1 293 1 271 1 249 1 55 2 274 2 86 1 251 1 298 8 344 1 118 2 92 3 120 1 93 1 
281 1 121 1 191 1 101 1 306 1 194 2 127 1 129 1 51 1 266 1 359 1 174 1 362 2 246 1 155 1 110 1 201 1 55 3 317 1 159 1 184 1 15 1 118 1 141 1 120 1 232 1 374 1 93 1 19 1 
281 1 121 2 191 1 55 2 101 1 306 1 159 1 51 1 219 1 76 1 118 1 141 1 246 1 362 2 155 1 19 1 
281 1 201 1 191 1 55 2 101 1 306 1 194 2 51 1 15 1 359 1 76 1 118 1 79 1 141 1 246 1 362 2 155 1 232 1 
281 1 121 2 191 1 55 2 101 1 306 1 317 1 159 1 51 1 76 1 118 1 141 1 246 1 362 2 155 1 19 1 
281 1 121 2 249 1 191 1 55 2 101 1 306 1 159 1 51 1 219 1 118 1 141 1 246 1 362 2 155 1 19 1 
281 1 201 1 249 1 191 1 55 2 101 1 306 1 194 2 51 1 15 1 359 1 118 1 79 1 141 1 246 1 362 2 155 1 232 1 
281 1 121 2 249 1 191 1 55 2 101 1 306 1 317 1 159 1 51 1 118 1 141 1 246 1 362 2 155 1 19 1 
281 1 121 2 191 1 55 2 101 1 306 1 317 1 159 1 51 1 118 1 141 1 246 1 362 2 155 1 19 1 
293 1 281 1 121 1 191 1 99 1 272 1 36 1 145 1 55 2 101 1 274 1 194 1 243 1 263 1 129 1 51 1 104 1 60 1 267 1 298 1 118 1 362 2 246 1 92 1 269 1 31 1 93 1 177 1 
293 1 281 1 121 1 248 1 191 1 99 1 272 1 36 1 55 2 101 1 274 1 194 1 263 1 129 1 51 1 104 1 267 1 298 1 118 1 362 2 246 1 92 1 290 1 269 1 31 1 32 1 93 1 177 1 
281 1 121 2 191 1 55 2 101 1 306 1 317 1 159 1 51 1 118 1 141 1 246 1 362 2 155 1 374 1 19 1 
281 1 121 2 191 1 145 1 101 1 306 1 243 1 263 1 129 1 51 1 104 1 246 1 362 2 155 1 4 1 269 1 31 1 177 1 272 1 55 2 274 1 317 1 159 1 251 1 60 1 298 1 118 1 141 1 92 1 19 1 93 1 
281 1 121 2 191 1 101 1 194 1 306 1 127 1 129 1 51 1 266 1 359 1 174 1 362 2 246 1 108 1 155 1 110 1 55 3 317 1 159 1 15 1 118 1 120 1 374 1 93 1 19 1 
323 2 121 7 238 1 239 1 68 1 101 2 194 8 325 1 146 1 148 1 51 2 29 1 359 2 73 1 362 4 246 2 200 1 82 1 55 15 317 2 159 2 15 2 118 2 209 1 320 2 232 1 164 1 19 2 
323 2 121 7 238 1 239 1 68 1 101 2 194 8 325 1 146 1 148 1 51 2 29 1 359 2 73 1 362 4 246 2 200 1 82 1 55 15 317 2 159 2 15 2 118 2 209 1 320 2 232 1 164 1 19 2 
323 3 121 18 236 1 239 1 68 2 101 2 194 15 325 2 146 1 130 1 148 1 51 2 359 3 29 1 73 1 78 1 362 4 246 2 200 1 336 1 82 2 201 2 364 1 85 1 179 1 182 1 135 1 55 33 10 1 317 4 159 4 115 1 15 2 62 1 118 2 209 1 278 1 320 4 232 4 164 1 19 5 
323 2 121 6 238 1 239 1 68 1 101 2 194 5 325 1 146 1 148 1 51 2 29 1 359 1 362 4 246 2 200 1 82 1 366 1 55 11 317 2 159 2 15 1 118 2 209 1 320 1 232 1 164 1 19 2 
323 2 121 12 236 1 239 2 68 2 101 2 194 9 325 2 146 1 148 1 51 2 359 1 29 1 73 1 362 4 246 2 200 1 364 1 201 1 85 1 135 1 55 21 10 1 317 3 159 3 115 1 15 1 118 2 278 1 320 3 232 1 164 2 19 3 
338 1 360 1 284 1 372 1 222 1 100 1 230 1 5 1 168 1 199 1 
353 1 56 1 
147 1 348 1 338 1 308 1 372 1 230 1 5 1 168 1 199 1 
212 1 347 1 312 1 338 1 283 2 284 1 242 1 100 1 58 1 168 1 87 1 360 1 171 1 107 1 372 1 230 1 5 1 199 1 
212 1 347 1 312 1 338 1 283 2 284 1 242 1 100 1 58 1 168 1 87 1 360 1 171 1 107 1 372 1 230 1 5 1 199 1 
212 1 347 1 312 1 338 1 283 2 284 1 242 1 100 1 58 1 168 1 87 1 360 1 171 1 107 1 372 1 230 1 5 1 199 1 
260 1 253 1 250 1 
260 1 253 1 250 1 
142 1 244 1 
142 1 253 1 244 1 
26 1 98 1 
212 1 98 1 283 1 242 1 353 1 168 1 127 2 129 2 26 1 107 1 5 1 199 1 270 1 110 2 338 1 36 1 226 1 56 1 204 1 87 1 206 1 229 1 372 1 120 2 230 1 280 1 93 2 
260 1 250 1 
142 1 253 1 244 1 
281 1 97 1 121 1 191 1 261 1 101 1 194 1 263 1 127 2 50 2 129 2 51 1 327 1 267 1 246 1 362 2 269 1 31 2 177 2 293 1 273 1 55 2 274 1 158 1 298 2 117 1 17 1 118 1 92 1 374 1 93 2 
259 2 48 1 181 1 114 1 241 1 352 1 274 1 217 1 86 1 251 1 59 1 196 1 343 1 298 2 132 1 269 1 31 2 301 1 177 2 
259 2 181 1 114 1 241 1 352 1 274 1 86 1 59 1 196 1 343 1 298 1 132 1 231 1 269 1 31 1 301 1 177 1 
203 1 99 1 350 1 274 1 217 1 263 1 196 1 298 1 92 1 173 1 331 1 269 1 31 1 177 1 
259 2 48 1 181 1 114 1 241 1 352 1 274 1 217 1 86 1 59 1 196 1 343 1 298 1 132 1 269 1 31 1 301 1 177 1 
124 1 
165 1 138 1 365 1 113 1 105 1 171 1 23 1 
165 1 45 1 189 1 212 1 171 2 154 1 361 1 330 1 247 1 365 1 113 1 38 1 340 1 87 1 91 1 373 1 44 1 
45 4 346 1 165 2 212 2 190 1 99 1 215 1 216 1 285 1 307 1 263 1 245 2 104 1 106 2 171 2 329 1 154 2 361 2 52 1 330 1 175 1 334 1 269 1 31 1 177 1 365 3 313 1 274 2 317 1 340 2 159 1 87 2 39 2 208 1 298 1 373 2 91 2 92 4 63 1 44 2 19 1 
45 6 165 8 323 1 234 1 212 1 215 1 68 1 325 1 245 5 359 2 171 5 329 2 154 2 361 2 330 1 84 1 364 1 85 1 365 5 113 2 8 1 135 1 10 1 340 2 317 2 159 2 87 1 115 1 39 5 15 2 373 1 91 2 43 1 44 3 19 2 
165 2 234 1 212 1 127 1 129 1 130 1 359 1 221 1 329 2 154 1 361 1 77 1 174 1 110 1 365 2 182 1 340 1 87 1 318 1 62 1 276 1 91 1 162 1 41 1 120 1 186 1 93 1 19 2 
165 1 365 1 113 1 23 1 340 1 105 1 171 1 361 1 154 1 91 1 
45 2 365 2 317 1 245 1 159 1 39 1 171 1 44 1 19 1 
87 1 212 1 113 1 171 1 373 1 330 1 
165 2 211 1 212 3 166 1 99 2 237 2 215 2 263 1 154 2 361 2 330 2 173 1 331 1 309 1 269 1 31 4 177 4 84 2 365 2 274 1 12 1 340 1 87 3 298 4 91 2 373 4 92 1 42 1 64 1 
281 1 99 1 191 1 145 1 101 1 194 1 243 1 127 2 263 1 129 3 51 1 104 1 362 2 174 2 246 1 269 1 31 1 177 1 110 2 293 1 272 1 36 1 55 1 274 1 316 1 318 1 60 1 298 1 118 1 92 1 120 2 93 3 
45 4 165 1 84 1 365 2 179 1 113 2 215 1 245 2 340 1 39 2 171 4 361 1 154 1 91 1 44 2 
47 1 5 1 199 1 
47 1 5 1 199 1 
233 1 26 1 284 1 5 1 199 1 
47 1 5 1 199 1 
369 1 5 1 199 1 
369 1 5 1 199 1 
369 1 5 1 199 1 
5 1 199 1 
338 1 168 1 
323 1 121 4 68 1 101 1 194 4 325 1 146 1 130 1 51 1 359 1 78 1 362 2 246 1 336 1 201 2 85 1 179 1 182 1 55 8 62 1 118 1 232 2 19 1 
323 2 95 1 121 6 68 1 101 2 194 5 325 1 146 1 130 1 51 2 359 1 78 1 362 4 246 2 336 1 82 1 201 2 85 1 179 1 182 1 55 11 317 1 159 1 62 1 118 2 209 1 232 3 19 2 
95 1 323 1 121 9 68 1 101 3 194 8 325 1 146 1 130 1 51 3 359 2 78 1 362 6 246 3 336 1 82 1 364 1 201 3 85 1 179 1 182 1 55 17 135 1 10 1 317 2 159 2 115 1 15 1 62 1 118 3 278 1 232 4 19 3 
95 1 323 1 121 13 68 1 101 3 194 11 325 1 146 1 130 2 51 3 359 4 78 1 362 6 246 3 82 3 336 1 364 1 201 4 85 1 179 1 182 2 55 24 135 1 10 1 317 2 159 2 115 1 15 1 62 2 118 3 278 1 186 1 232 7 19 5 
323 1 121 4 68 1 101 1 194 4 325 1 146 1 130 1 51 1 359 1 78 1 362 2 246 1 336 1 201 2 85 1 179 1 182 1 55 8 62 1 118 1 232 2 19 1 
323 1 121 6 68 1 101 2 194 5 325 1 146 1 51 2 359 1 362 4 246 2 82 1 364 1 201 1 85 1 55 11 135 1 10 1 317 2 159 2 115 1 15 1 118 2 278 1 232 2 19 2 
323 1 95 1 121 6 68 1 101 3 194 5 325 1 146 1 51 3 359 1 362 6 246 3 364 1 201 1 85 1 55 11 135 1 10 1 317 2 159 2 115 1 15 1 118 3 278 1 232 1 19 2 
323 1 121 9 238 1 68 1 101 4 194 5 325 1 146 1 51 4 359 1 362 8 246 4 82 3 364 1 201 2 85 1 55 14 135 1 10 1 317 3 159 3 115 1 15 1 118 4 278 2 232 5 19 3 
336 2 82 3 201 3 121 3 182 3 55 7 194 4 130 3 359 1 62 1 78 1 232 6 19 1 
323 1 121 6 238 1 68 1 101 3 194 5 325 1 146 1 51 3 359 1 362 6 246 3 364 1 201 1 85 1 55 11 135 1 10 1 317 2 159 2 115 1 15 1 118 3 278 1 232 1 19 2 
82 1 336 1 201 2 179 1 121 4 182 1 55 8 101 2 194 4 130 1 51 2 359 1 62 1 118 2 78 1 246 2 362 4 278 1 232 3 19 1 
336 1 201 2 179 1 121 3 182 1 55 6 194 3 138 1 130 1 359 1 62 1 78 1 232 2 19 1 
95 1 121 2 55 2 101 1 317 1 159 1 51 1 118 1 246 1 362 2 19 1 
323 2 82 1 121 3 68 1 55 7 194 4 325 1 317 1 159 1 359 1 15 1 209 1 232 1 19 1 
323 2 121 13 101 1 194 10 325 2 130 2 51 1 151 1 359 4 74 1 78 1 246 1 362 2 336 1 82 4 201 4 179 1 182 2 55 23 317 2 159 2 15 1 62 2 209 1 118 1 278 1 186 1 232 8 19 5 
323 1 55 1 194 1 
121 1 55 1 325 1 
82 1 121 3 55 6 194 3 317 1 159 1 208 1 15 1 359 1 232 1 19 1 
323 1 121 6 68 1 101 2 194 5 325 1 146 1 51 2 359 1 362 4 246 2 82 1 364 1 201 1 85 1 55 11 135 1 10 1 317 2 159 2 115 1 15 1 118 2 278 1 232 2 19 2 
82 1 201 1 121 3 182 1 55 6 194 3 130 1 359 1 62 1 232 2 19 1 
82 1 336 1 201 1 121 1 182 1 55 3 101 1 194 2 136 1 130 1 51 1 118 1 78 1 278 1 246 1 362 2 232 2 
82 2 201 3 121 5 182 2 55 10 101 1 194 5 146 1 130 2 51 1 359 2 62 1 118 1 362 2 246 1 186 1 232 5 19 2 
121 2 55 2 101 1 146 1 159 1 51 1 118 1 246 1 362 2 19 1 
121 2 55 2 101 1 146 1 317 1 159 1 51 1 118 1 246 1 362 2 19 1 
82 1 201 1 121 1 238 1 182 1 55 3 101 3 194 2 146 1 136 1 130 1 51 3 118 3 278 1 246 3 362 6 232 2 
323 4 95 1 21 1 121 16 238 1 68 1 101 5 194 18 325 3 146 1 130 3 51 5 359 5 78 1 362 10 246 5 336 1 82 5 201 4 179 1 182 3 55 34 317 3 136 1 159 3 160 1 205 1 15 3 62 2 118 5 209 1 278 2 232 9 19 5 
287 1 36 1 256 1 127 1 129 1 93 1 291 1 
46 1 122 1 36 1 355 1 127 1 129 1 207 1 14 1 287 1 256 1 291 1 93 1 
138 1 99 1 298 1 92 1 331 1 173 1 274 1 269 1 263 1 31 1 177 1 
110 1 213 1 99 1 272 1 36 1 274 1 243 1 263 1 127 1 129 2 104 1 298 1 92 1 120 1 269 1 31 1 93 2 177 1 
257 1 110 1 213 1 272 1 237 1 36 1 274 1 262 1 243 1 263 2 127 2 129 2 104 2 328 1 298 1 92 3 41 1 120 2 269 1 31 1 335 1 93 2 177 1 
257 1 110 1 213 1 272 1 237 1 36 1 240 1 274 1 262 1 263 2 127 2 129 2 104 2 328 1 298 2 92 3 41 1 120 2 290 1 269 1 31 2 335 1 93 2 177 2 
257 1 212 2 99 1 237 1 240 1 285 1 262 1 263 1 104 1 106 1 171 1 269 1 31 3 177 3 111 1 113 1 313 1 274 1 87 2 298 3 373 1 92 4 345 1 
257 1 212 2 190 1 113 1 99 1 237 1 240 1 313 1 274 1 262 1 285 1 263 1 87 2 104 1 106 1 171 1 298 3 373 1 92 4 269 1 31 3 177 3 
27 1 298 1 274 1 269 1 31 1 177 1 
188 1 271 1 99 2 0 1 216 1 274 3 50 1 263 2 86 1 251 1 149 1 27 1 104 1 327 1 198 1 298 7 344 1 92 3 269 2 31 6 177 7 
281 2 191 2 145 1 101 2 243 1 194 3 51 2 104 1 246 2 4 1 155 1 110 1 336 1 201 2 55 6 251 1 60 1 298 1 62 1 17 1 118 2 120 1 19 1 121 3 213 1 306 1 357 1 127 1 263 1 129 2 130 1 359 1 78 1 362 4 269 1 31 1 177 1 179 1 272 1 182 1 36 2 274 1 141 1 92 1 374 1 232 2 93 2 
165 1 346 1 212 3 190 1 99 1 285 1 23 1 105 1 106 1 171 1 154 2 361 2 175 1 330 1 334 1 31 1 177 1 365 1 113 1 313 1 340 2 87 3 298 1 229 1 91 2 373 2 92 2 64 1 
216 1 274 2 285 1 263 1 251 1 27 1 104 1 298 2 52 1 92 2 269 1 31 2 177 2 
99 1 295 1 240 1 274 1 263 1 251 1 298 4 173 1 331 1 92 1 269 1 31 4 177 4 
237 1 274 2 263 1 128 1 149 1 104 1 198 1 298 2 75 1 92 1 269 1 31 2 177 2 109 1 
259 1 59 1 99 1 181 1 298 1 241 1 274 1 269 1 31 1 177 1 
97 1 274 1 263 1 86 1 251 1 327 1 298 2 92 1 269 1 31 2 177 2 
188 1 271 1 99 1 237 1 295 1 274 2 263 2 251 1 327 1 298 5 331 1 173 1 92 3 269 2 31 4 177 5 
322 1 271 1 99 1 237 1 295 1 274 2 263 2 251 1 327 1 298 5 331 1 173 1 92 3 269 2 31 4 177 5 
110 1 213 1 99 1 272 1 36 1 274 1 263 1 127 1 129 2 104 1 298 1 92 1 120 1 290 1 269 1 31 1 93 2 177 1 
237 1 0 1 216 1 274 2 263 1 149 1 104 1 198 1 298 1 92 1 269 1 31 1 177 1 
54 1 273 1 134 1 102 1 158 1 127 1 129 1 117 1 93 1 
35 1 134 1 225 1 
36 1 54 1 134 1 102 1 264 1 
212 2 35 1 113 1 214 1 143 1 36 1 54 2 313 1 134 1 225 1 102 2 264 2 87 2 228 1 328 1 171 1 229 1 41 1 335 1 
138 1 96 1 193 1 315 1 
258 1 96 1 337 1 367 1 193 1 315 1 255 1 
258 1 123 1 303 1 
94 1 81 1 258 3 96 1 337 1 367 1 193 1 314 1 315 1 119 1 223 2 255 3 
258 2 96 1 337 1 16 1 367 1 193 1 315 1 255 2 25 1 
94 1 258 1 259 1 96 1 337 1 367 1 241 1 275 1 80 1 255 1 301 1 
94 1 258 1 96 1 337 1 367 1 193 1 255 1 
94 1 258 1 337 1 367 1 193 2 315 1 255 1 
94 1 258 2 96 1 337 2 367 2 302 1 193 1 224 1 116 1 255 2 
94 1 258 3 65 1 96 2 337 1 367 1 192 1 193 1 315 1 275 1 25 2 170 1 255 3 
94 1 259 2 258 2 96 1 337 1 367 1 193 1 114 1 241 1 315 1 25 1 59 1 71 1 255 2 301 1 
94 1 258 4 96 2 337 2 367 2 193 1 315 1 275 1 25 2 170 1 16 1 153 1 255 4 
94 1 258 1 96 1 337 1 367 1 193 1 315 1 255 1 
81 1 258 4 96 3 337 1 367 1 193 2 314 1 315 2 275 1 25 2 170 1 220 1 223 1 255 4 
94 1 358 1 258 2 96 1 337 1 367 1 193 1 332 1 315 1 255 2 339 1 25 1 
81 2 94 1 88 1 258 3 96 1 337 1 367 1 193 1 314 1 223 2 315 1 255 3 
363 1 96 2 3 1 254 2 
94 1 137 1 258 1 337 1 367 1 255 1 
94 1 65 1 258 2 96 1 337 1 367 1 193 1 315 1 255 2 25 1 
83 1 
94 1 258 1 96 1 337 1 367 1 193 1 315 1 255 1 
94 1 65 1 258 3 96 1 337 1 367 1 193 1 223 1 315 1 255 3 25 1 
96 1 170 1 220 1 275 1 
96 1 193 1 

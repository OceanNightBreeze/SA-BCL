#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 348 224 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 9 57 9 106 1 236 1 59 1 36 1 61 1 177 5 5 6 326 1 38 2 137 4 243 1 226 2 156 1 65 2 138 1 114 2 186 1 17 1 228 1 290 3 165 2 22 1 122 2 75 2 193 1 195 1 
295 9 57 9 106 1 236 1 59 1 36 1 61 1 177 5 5 6 326 1 38 2 137 4 243 1 226 2 156 1 65 2 138 1 114 2 186 1 17 1 228 1 290 3 165 2 22 1 75 2 122 2 193 1 195 1 
295 10 57 10 106 1 236 1 59 1 36 1 61 1 177 6 5 7 326 1 38 2 137 5 243 1 226 2 156 1 65 2 138 1 114 2 186 1 17 1 228 1 290 4 165 2 22 1 75 2 122 2 193 1 195 1 
295 7 57 7 106 1 236 1 59 1 36 1 61 1 177 4 5 4 326 1 38 2 137 3 243 1 226 2 65 2 138 1 114 2 186 1 17 1 228 1 290 2 165 2 22 1 75 2 122 1 193 1 195 1 
295 4 57 4 59 1 290 1 61 1 5 3 177 3 38 1 165 1 75 1 122 2 193 1 137 2 243 1 226 1 195 1 156 1 114 1 
17 1 295 2 57 2 236 1 59 1 177 1 165 1 75 1 193 1 10 1 243 1 181 1 226 1 184 1 114 1 65 1 
295 3 57 3 59 1 290 1 177 2 5 1 22 1 193 1 137 1 243 1 226 2 114 2 65 1 
295 9 57 9 106 1 59 1 61 1 5 7 299 1 177 5 326 1 38 1 137 4 243 1 226 2 156 1 65 1 114 2 290 3 22 1 165 1 122 2 75 1 193 1 195 1 150 1 
295 9 57 9 106 1 59 1 61 1 5 7 299 1 177 5 326 1 38 1 137 4 243 1 226 2 156 1 65 1 114 2 290 3 22 1 165 1 122 2 75 1 193 1 195 1 150 1 
128 1 242 1 232 1 
132 1 232 1 4 2 
6 1 146 2 288 2 329 2 357 2 244 1 101 2 237 2 
322 1 55 1 0 1 129 1 34 1 281 1 108 1 298 1 341 1 238 2 237 2 6 1 301 2 135 1 329 2 285 1 244 1 13 1 306 1 139 1 187 1 67 1 288 2 140 1 47 1 357 3 21 2 336 1 361 2 166 1 192 1 146 3 27 1 214 1 321 1 101 2 234 2 
265 1 146 1 288 1 329 1 220 1 255 1 357 1 244 1 101 1 237 1 
273 1 128 1 288 1 220 1 354 1 69 1 357 1 37 1 318 1 146 1 123 1 232 1 77 1 15 1 
273 2 128 1 288 1 220 1 354 1 69 1 357 1 37 1 237 1 146 1 123 1 329 1 232 1 101 1 15 2 
273 1 105 1 227 1 15 1 175 1 
273 2 128 1 105 1 232 1 78 1 248 1 15 2 175 1 
273 1 105 1 15 1 
265 1 273 1 288 1 220 1 255 1 357 1 174 1 175 1 237 1 146 1 329 1 244 1 101 1 15 1 
232 1 
273 2 128 1 46 1 105 1 232 1 78 1 15 2 175 1 
273 5 128 2 220 1 105 2 58 4 255 1 174 1 175 2 237 1 133 1 111 1 155 1 329 1 258 2 244 1 259 2 183 5 349 1 263 2 15 5 265 1 267 1 288 1 68 1 189 1 357 1 229 2 71 1 315 1 334 1 146 1 167 2 232 2 78 1 28 1 101 1 52 2 293 1 
6 1 242 1 
216 1 276 1 288 2 357 2 237 1 6 2 146 2 329 1 101 1 
179 1 278 1 90 1 
140 1 161 1 34 1 357 1 108 1 336 1 341 1 6 1 361 1 301 1 146 1 135 1 214 1 321 1 306 1 234 1 
6 1 146 3 288 3 329 3 212 1 357 3 101 3 237 1 
146 1 288 1 329 1 220 1 255 1 357 1 101 1 
216 1 276 1 146 1 288 1 329 1 220 1 357 1 101 1 237 1 
322 1 273 1 216 1 0 1 129 1 34 1 220 1 108 1 298 1 341 1 37 1 238 1 237 2 6 1 301 1 135 1 345 1 329 3 285 1 244 1 13 1 306 1 15 1 187 1 288 3 140 1 354 1 69 1 357 4 19 1 21 2 336 1 361 1 166 1 192 1 146 4 123 1 147 1 212 1 27 1 214 1 321 1 101 3 234 1 
6 1 318 1 8 1 146 2 288 2 329 1 212 1 357 2 101 1 
273 1 216 1 204 1 288 3 220 1 354 1 69 1 19 1 357 3 37 1 237 1 123 1 146 3 345 1 329 3 232 1 212 2 101 3 15 1 
216 1 278 1 288 2 357 2 237 1 179 1 146 2 329 2 212 1 101 2 
140 1 34 1 357 1 108 1 336 1 341 1 6 1 361 1 301 1 146 1 135 1 214 1 321 1 234 1 306 1 
34 1 107 1 357 1 108 1 336 1 341 1 6 1 361 1 301 1 146 1 135 1 51 1 214 1 234 1 306 1 
322 1 0 1 278 2 129 1 281 2 200 1 298 1 238 4 179 2 328 1 90 2 13 2 66 1 350 1 187 1 229 1 21 2 316 1 74 1 121 1 166 1 167 1 231 1 250 1 
146 1 288 1 329 1 220 1 357 1 157 1 101 1 37 1 
288 1 140 1 34 1 108 1 19 1 357 2 341 1 336 1 361 1 179 1 301 1 135 1 146 2 329 1 212 1 214 1 321 1 306 1 101 1 234 1 
216 1 288 5 357 5 19 1 237 1 144 1 6 1 318 1 8 1 146 5 329 4 212 2 101 4 169 1 
146 2 288 2 329 2 220 1 157 1 255 1 357 2 101 2 
203 1 320 1 
203 1 320 1 
269 1 85 1 
269 1 85 1 
269 1 85 1 
203 1 320 1 230 1 
203 1 320 1 230 1 
203 1 333 1 320 1 
274 1 203 2 269 1 56 1 320 2 85 1 
203 1 320 1 230 1 
203 1 48 1 320 1 
203 1 48 1 320 1 
203 1 48 1 320 1 
273 2 203 2 172 2 339 2 56 1 93 1 197 3 82 1 96 1 97 1 346 1 232 1 249 1 320 2 338 2 151 2 332 2 15 2 294 1 
273 1 275 1 339 1 197 1 6 1 39 1 136 1 329 2 63 1 330 1 332 1 15 1 203 1 288 2 333 1 93 1 355 1 357 2 23 1 146 2 320 1 101 2 151 1 338 1 
38 1 165 1 75 1 
165 1 75 1 10 1 
38 2 75 3 253 1 10 1 49 1 307 1 
38 1 75 2 253 1 10 1 246 1 49 1 
38 1 75 2 253 1 10 1 49 2 
273 5 128 1 30 1 1 1 33 1 105 1 279 2 58 3 4 3 175 4 86 2 132 1 136 1 180 2 258 1 183 2 259 1 330 1 185 1 308 1 263 1 15 5 45 1 68 1 229 1 50 1 121 1 23 1 167 1 231 1 232 2 78 1 
273 9 128 1 1 2 33 1 105 6 199 1 279 6 58 8 4 9 35 1 175 7 7 1 132 3 239 1 180 6 303 5 258 2 183 6 330 4 259 2 227 5 185 2 15 9 263 2 267 1 68 1 312 1 229 3 50 3 207 1 121 3 167 3 231 3 232 5 78 1 
273 3 128 1 1 1 58 3 279 2 4 4 175 2 86 1 132 2 180 2 258 1 259 1 330 1 183 2 185 1 308 1 263 1 15 3 45 1 267 1 229 1 50 1 121 1 167 1 231 1 232 3 
273 4 128 1 1 1 199 1 279 4 58 5 4 7 175 3 86 2 132 3 7 1 180 4 258 1 259 1 330 2 183 4 185 1 263 1 15 4 308 1 45 1 267 1 312 1 229 2 50 2 121 2 167 2 231 2 232 4 
242 1 148 1 306 1 
182 1 306 1 
164 1 
135 1 306 1 
135 1 148 2 173 1 214 1 306 3 72 1 
135 1 214 1 306 1 
306 1 162 1 
196 2 189 1 141 1 229 1 71 1 281 4 356 1 238 7 201 1 74 3 111 1 167 1 98 1 42 1 13 3 350 2 152 1 
196 2 189 1 141 1 229 1 71 1 281 4 356 1 238 7 201 1 74 3 111 1 167 1 98 1 42 1 13 3 350 2 152 1 
196 2 189 1 141 1 324 1 229 1 71 1 356 1 281 4 238 7 201 1 74 3 111 1 167 1 98 1 42 1 13 3 350 2 152 1 
322 1 277 1 196 3 127 3 129 1 2 1 281 16 298 1 238 31 201 5 111 2 256 1 42 2 305 1 304 1 13 15 350 5 187 1 141 1 189 2 268 1 71 1 356 1 206 4 229 4 50 3 358 1 21 2 121 3 74 10 98 1 167 4 231 3 152 2 
322 2 196 2 129 2 2 1 281 5 298 2 238 9 201 1 111 1 9 1 42 1 13 4 350 3 187 2 189 1 229 1 356 1 71 1 21 4 209 1 74 4 167 1 98 1 152 1 
217 1 81 1 295 2 34 1 57 2 59 1 108 1 176 1 177 1 5 1 38 1 300 1 301 1 342 1 10 1 243 1 226 1 114 1 65 1 307 1 264 1 190 1 361 1 208 1 165 1 75 2 194 1 193 1 234 1 53 1 
217 1 81 1 295 3 34 1 57 3 59 1 108 1 177 1 5 2 38 1 300 1 301 1 342 1 10 1 243 1 226 1 114 1 65 1 307 1 14 1 264 1 190 1 361 1 208 1 191 1 165 1 75 2 99 1 234 1 53 1 
217 1 81 1 295 2 34 1 57 2 59 1 108 1 177 1 5 2 38 1 300 1 301 1 342 1 10 1 243 1 65 1 307 1 264 1 190 1 361 1 191 1 165 1 75 2 99 1 234 1 
80 1 116 1 34 1 81 2 295 1 190 2 57 1 313 1 108 1 336 1 361 1 88 1 301 1 300 2 135 1 225 1 226 1 124 1 306 1 65 2 114 1 234 1 14 1 
217 1 81 1 295 1 34 1 57 1 108 1 176 1 38 1 300 1 301 1 342 1 10 1 226 1 114 1 65 1 307 1 264 1 190 1 361 1 208 1 191 1 165 1 75 2 193 1 234 1 53 1 
270 1 
273 3 1 1 220 1 34 1 105 2 130 1 58 1 108 1 221 1 37 1 223 1 224 1 301 2 135 1 112 1 225 1 348 1 258 1 259 1 183 1 306 1 263 1 15 3 288 1 68 1 354 1 69 1 313 1 357 1 20 1 335 1 336 2 361 2 318 1 123 1 146 1 77 1 78 1 234 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 3 46 1 288 1 220 1 105 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 78 1 77 1 15 3 
273 2 288 1 68 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 258 1 77 1 259 1 15 2 263 1 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 77 1 15 2 
273 2 288 1 68 1 220 1 354 1 130 1 69 1 357 1 37 1 335 1 223 1 224 1 318 1 123 1 146 1 348 1 258 1 77 1 259 1 15 2 263 1 
322 1 196 1 278 1 0 1 129 1 281 3 298 1 238 6 6 2 179 1 111 1 242 1 90 1 13 3 350 2 187 1 189 1 356 1 71 1 229 1 21 2 316 1 74 2 166 1 98 1 167 1 
322 2 0 1 127 3 278 4 129 2 281 8 298 2 238 14 6 1 178 1 201 1 179 11 343 1 285 1 90 11 304 1 305 1 13 6 350 1 187 2 47 1 291 1 206 3 229 1 50 2 21 4 74 2 121 2 166 2 167 2 211 1 231 1 362 1 
322 1 171 1 278 1 0 1 129 1 34 1 108 1 281 1 298 1 341 1 238 2 6 1 301 1 135 1 329 1 11 1 285 1 306 1 13 1 187 1 288 1 140 1 92 1 161 1 47 1 357 2 19 1 336 1 21 2 361 1 166 1 146 2 212 1 214 1 362 1 321 1 234 1 101 1 
322 3 196 1 0 3 278 7 108 2 281 10 238 20 6 2 201 4 111 1 327 1 329 1 285 1 13 10 16 2 159 2 288 1 71 1 19 1 336 1 21 6 121 2 74 8 166 3 167 3 212 1 337 2 214 2 32 2 129 3 34 2 298 3 341 2 179 7 301 3 135 2 90 7 306 2 350 4 187 3 140 2 189 1 47 1 356 1 229 3 357 3 143 1 50 2 361 3 191 1 192 2 98 1 146 3 231 2 362 1 321 2 234 3 101 1 54 1 
322 2 104 1 0 2 129 2 34 2 108 2 281 1 298 2 109 1 238 2 301 8 135 2 329 1 225 1 285 1 12 1 306 3 13 1 187 2 158 1 67 2 205 1 288 1 47 1 313 1 314 1 357 1 336 2 21 4 316 1 361 7 191 1 166 2 146 1 194 1 212 1 233 1 101 1 234 8 
322 1 216 1 278 1 0 1 129 1 281 1 298 1 237 1 110 1 238 3 179 1 329 1 90 1 13 2 350 1 187 1 288 1 357 1 229 1 50 1 21 2 74 1 121 1 166 1 146 1 167 1 231 1 362 1 101 1 
322 1 187 1 278 1 0 1 129 1 281 2 298 1 21 2 238 2 316 1 201 1 74 1 179 1 121 1 166 1 167 1 328 1 90 1 
322 1 187 1 278 1 0 1 129 1 229 1 298 1 21 2 238 2 316 1 74 1 179 1 166 1 231 1 90 1 13 2 350 1 66 1 
322 1 187 1 278 2 0 1 129 1 229 1 281 2 50 1 298 1 21 2 238 4 316 1 201 1 74 2 179 2 121 1 166 1 167 1 231 1 90 2 13 2 350 1 
322 1 187 1 278 1 0 1 129 1 281 2 298 1 21 2 238 2 201 1 74 1 179 1 121 1 166 1 167 1 328 1 90 1 233 1 
322 1 187 1 278 1 0 1 129 1 229 1 298 1 21 2 238 2 74 1 179 1 166 1 231 1 90 1 233 1 13 2 350 1 66 1 
322 1 187 1 278 2 0 1 129 1 229 1 281 2 50 1 298 1 21 2 238 4 201 1 74 2 179 2 121 1 166 1 167 1 231 1 90 2 233 1 13 2 350 1 
322 1 187 1 278 2 0 1 129 1 229 1 281 2 50 1 298 1 21 2 238 4 201 1 74 2 179 2 121 1 166 1 167 1 231 1 90 2 13 2 350 1 
322 1 0 1 129 1 34 1 281 1 108 1 298 1 341 1 238 2 6 1 301 1 135 1 285 1 306 1 13 1 187 1 140 1 47 1 357 1 336 1 21 2 361 1 192 1 166 1 146 1 214 1 321 1 234 1 
322 1 0 1 129 1 34 1 107 1 281 1 108 1 298 1 341 1 238 2 6 1 301 1 135 1 285 1 306 1 13 1 187 1 47 1 247 1 357 1 336 1 21 2 361 1 166 1 146 1 51 1 214 1 234 1 
322 1 0 1 278 2 129 1 281 2 298 1 238 4 201 1 179 2 90 2 13 2 350 1 187 1 229 1 50 1 21 2 121 1 74 2 166 1 167 1 231 1 362 1 
322 1 278 2 0 1 129 1 34 1 281 2 108 1 298 1 341 1 238 4 201 1 179 2 301 1 135 1 90 2 13 2 306 1 350 1 187 1 140 1 229 1 357 1 50 1 21 2 361 1 74 2 121 1 192 1 166 1 167 1 146 1 194 1 231 1 337 1 214 1 321 1 234 1 
322 1 216 1 0 1 278 1 129 1 281 2 298 1 237 1 238 3 201 1 179 1 329 1 90 1 13 1 187 1 288 1 229 1 357 1 50 1 21 2 74 1 121 1 166 1 146 1 167 1 210 1 231 1 362 1 101 1 
322 2 127 1 129 2 198 1 154 2 280 1 281 9 298 2 238 19 201 3 41 1 304 1 305 1 13 10 350 3 187 2 353 1 118 1 206 2 229 3 50 3 21 4 317 1 209 1 121 3 74 6 167 3 231 3 213 1 79 2 
322 3 127 2 31 1 2 2 129 3 198 2 296 1 154 4 280 1 281 14 298 3 238 26 201 2 41 1 304 2 13 12 350 2 187 3 160 1 353 2 229 2 206 2 50 3 21 6 317 1 73 1 74 4 209 1 121 3 167 3 231 2 100 1 79 1 271 1 
322 3 196 1 2 1 198 1 281 20 280 1 154 4 238 41 201 4 111 1 13 21 160 1 206 4 71 1 21 6 73 1 74 8 121 4 209 1 167 5 213 1 79 1 127 3 31 1 129 3 296 1 298 3 41 1 305 1 304 3 350 4 266 1 187 3 189 1 353 2 229 5 356 1 50 4 317 1 98 1 231 4 100 1 271 1 
322 4 196 1 127 3 31 1 2 2 129 4 198 1 296 1 154 4 280 1 281 20 298 4 238 38 201 3 111 1 41 1 304 3 305 1 13 18 350 4 266 1 187 4 160 1 189 1 353 2 71 1 356 1 206 4 229 4 50 4 21 8 73 1 317 1 209 1 121 4 74 7 98 1 167 5 231 3 213 1 100 1 79 1 271 1 
322 2 196 1 127 4 31 1 2 1 129 2 198 1 296 1 154 4 280 1 281 27 298 2 238 52 201 7 111 1 41 1 304 2 305 2 13 25 350 7 187 2 160 1 189 1 353 1 71 1 356 1 291 2 206 4 229 8 50 7 21 4 73 1 317 1 209 1 121 7 74 14 98 1 167 8 231 7 100 1 79 1 271 1 
203 1 346 1 339 1 56 1 249 1 320 1 251 1 151 1 338 1 332 1 
333 1 63 1 
203 1 344 1 339 1 320 1 215 1 262 1 151 1 338 1 332 1 
273 1 203 1 172 1 339 1 56 1 93 1 197 2 82 1 96 1 97 1 346 1 232 1 249 1 320 1 338 1 151 1 15 1 332 1 
273 1 203 1 172 1 339 1 56 1 93 1 197 2 82 1 96 1 97 1 346 1 232 1 249 1 320 1 338 1 151 1 15 1 332 1 
273 1 203 1 172 1 339 1 56 1 93 1 197 2 82 1 96 1 97 1 346 1 232 1 249 1 320 1 338 1 151 1 15 1 332 1 
274 1 24 1 230 1 
274 1 24 1 230 1 
48 1 60 1 
274 1 48 1 60 1 
39 1 355 1 
273 1 172 1 275 1 339 1 197 1 175 1 6 1 39 1 136 1 329 2 63 1 330 1 15 1 332 1 202 1 203 1 288 2 333 1 355 1 357 2 96 1 23 1 146 2 320 1 151 1 338 1 101 2 
24 1 230 1 
274 1 48 1 60 1 
322 1 104 1 0 1 129 1 34 1 108 1 281 1 298 1 238 2 301 2 135 1 285 1 286 1 306 1 13 1 309 1 187 1 158 1 67 2 288 2 47 1 357 2 94 1 292 1 21 2 361 2 319 1 166 1 146 2 362 1 234 2 
217 1 34 1 81 1 108 1 340 1 360 1 361 2 38 1 191 1 165 1 75 2 301 2 342 1 10 1 194 1 234 2 307 1 53 1 170 1 
217 1 81 1 34 1 108 1 361 1 38 1 191 1 165 1 75 2 301 1 342 1 10 1 347 1 234 1 307 1 53 1 170 1 
34 1 81 1 313 1 108 1 340 1 336 1 361 1 301 1 88 1 135 1 225 1 43 1 306 1 234 1 
217 1 81 1 34 1 108 1 340 1 360 1 361 1 38 1 191 1 165 1 75 2 301 1 342 1 10 1 234 1 307 1 53 1 170 1 
62 1 
128 1 242 1 232 1 58 1 183 1 28 1 349 1 
273 1 128 1 105 1 58 1 222 1 4 1 132 1 258 1 183 1 259 1 263 1 15 1 68 1 120 1 76 1 232 2 78 1 
273 5 323 1 1 2 105 5 58 9 279 6 108 4 4 12 240 1 241 2 64 1 15 5 18 1 159 2 68 4 20 1 162 2 336 1 121 2 123 2 167 2 26 2 214 3 78 3 28 1 125 2 128 2 34 3 83 2 173 1 132 6 133 2 301 3 135 3 180 6 182 3 91 2 258 4 259 4 183 8 349 1 306 10 263 4 229 2 50 2 95 2 361 3 145 1 194 1 231 2 148 2 232 8 234 3 52 2 
273 1 127 1 128 2 1 1 31 1 105 1 279 5 58 8 296 1 4 6 132 3 133 1 180 5 304 1 258 2 259 2 183 5 331 1 15 1 263 2 68 2 160 1 142 1 206 1 229 2 50 2 20 1 73 1 121 2 167 2 231 2 232 5 100 1 78 1 52 2 
273 1 220 1 3 1 58 2 255 1 174 1 237 1 133 1 111 1 329 1 258 1 259 1 183 2 244 1 263 1 15 1 265 1 68 1 288 1 189 1 357 1 71 1 229 1 334 1 146 1 167 2 101 1 52 2 
68 1 128 1 58 1 232 1 258 1 259 1 28 1 183 1 349 1 263 1 
159 1 279 5 58 5 229 2 50 2 4 10 132 5 133 1 121 2 167 2 180 5 231 2 232 5 183 5 52 2 
273 1 128 1 105 1 232 1 78 1 15 1 
273 3 1 2 34 1 105 4 58 2 108 1 221 1 302 1 240 1 301 4 135 1 112 1 225 1 64 2 258 2 259 2 183 2 306 1 263 2 15 3 267 1 68 1 313 1 20 2 336 2 361 4 78 2 234 4 363 1 
322 1 0 1 129 1 34 1 108 1 298 1 341 1 238 1 237 2 6 1 301 1 135 1 329 2 285 1 244 1 13 1 306 1 187 1 288 2 140 1 357 3 21 2 336 1 361 1 192 1 166 1 146 3 27 1 214 1 321 1 234 1 101 2 
196 1 68 1 128 2 1 1 279 2 58 1 4 4 20 1 132 2 180 2 232 4 258 1 183 2 259 1 263 1 
257 1 339 1 151 1 
257 1 339 1 151 1 
39 1 339 1 249 1 151 1 359 1 
257 1 339 1 151 1 
153 1 339 1 151 1 
153 1 339 1 151 1 
153 1 339 1 151 1 
339 1 151 1 
203 1 320 1 
322 2 196 1 187 2 129 2 2 1 189 1 229 1 71 1 281 4 356 1 298 2 21 4 238 8 201 1 74 3 111 1 167 1 98 1 13 4 350 2 
196 1 189 1 356 1 71 1 281 3 229 1 238 6 74 2 111 1 242 1 98 1 167 1 13 3 350 2 
322 1 187 1 129 1 131 1 229 1 281 2 50 1 298 1 21 2 238 4 201 1 74 2 121 1 167 1 231 1 13 2 350 1 
127 1 229 1 206 2 281 3 50 1 238 7 201 1 121 1 74 2 167 1 231 1 304 1 305 1 13 4 350 1 
322 2 196 1 127 2 2 2 129 2 281 11 298 2 238 23 201 4 134 1 111 2 343 1 305 1 13 12 350 5 187 2 189 2 71 1 356 1 206 2 229 3 291 1 50 2 21 4 74 9 121 2 98 1 167 3 231 2 
206 1 13 1 238 1 
127 1 281 1 238 1 
322 1 187 1 159 1 129 1 131 1 281 3 229 1 50 1 298 1 21 2 238 6 201 1 121 1 74 3 167 1 231 1 13 3 350 2 
322 1 127 1 31 1 129 1 296 1 281 6 298 1 238 12 201 1 304 1 13 6 350 1 187 1 160 1 206 1 229 2 50 2 21 2 73 1 209 1 121 2 74 2 167 2 231 2 100 1 
189 1 71 1 281 3 229 1 238 6 201 1 74 2 111 1 167 1 13 3 350 1 
322 1 187 1 189 1 2 1 129 1 281 1 356 1 298 1 21 2 238 3 201 1 74 2 134 1 111 1 98 1 13 2 350 1 
322 1 187 1 129 1 189 2 281 5 71 1 229 2 298 1 334 1 21 2 238 10 201 2 209 1 74 5 111 2 167 2 13 5 350 3 
322 1 187 1 129 1 281 2 298 1 21 2 238 2 201 1 209 1 121 1 74 1 167 1 
322 1 187 1 129 1 229 1 281 2 50 1 298 1 21 2 238 4 201 1 74 2 209 1 121 1 167 1 231 1 13 2 350 1 
322 3 187 3 2 1 129 3 189 1 281 1 298 3 21 6 238 3 201 1 134 1 209 1 74 2 111 1 213 1 13 2 350 1 
322 5 196 1 127 3 2 2 129 5 131 1 281 16 298 5 238 34 201 5 134 1 111 3 256 1 304 1 305 1 13 18 350 7 187 5 189 3 268 1 71 2 356 1 206 4 229 5 50 3 358 1 21 10 209 1 121 3 74 12 98 1 167 5 231 3 213 1 
322 1 196 1 127 1 129 1 281 4 298 1 238 8 111 1 304 1 13 4 350 2 187 1 189 1 229 1 206 1 356 1 71 1 21 2 73 1 209 1 74 2 167 1 98 1 
322 2 196 1 127 1 129 2 131 1 281 6 298 2 238 11 201 1 111 1 304 1 305 1 13 5 350 2 187 2 189 1 229 1 71 1 356 1 206 2 50 1 21 4 73 1 209 1 121 1 74 3 98 1 167 2 
322 3 196 1 127 1 31 1 129 3 2 1 131 1 296 1 281 9 298 3 238 19 201 1 111 1 304 1 13 10 350 3 187 3 160 1 189 1 71 1 356 1 206 1 229 3 50 2 21 6 73 1 209 1 121 2 74 4 98 1 167 3 231 2 100 1 
322 3 196 1 127 1 31 1 2 1 129 3 131 1 296 1 281 10 298 3 238 17 201 2 111 1 304 1 13 7 350 3 187 3 160 1 189 1 71 1 356 1 206 1 229 2 50 2 21 6 73 1 209 1 121 2 74 5 98 1 167 3 231 1 100 1 
322 1 196 1 127 1 129 1 281 4 298 1 238 8 111 1 304 1 13 4 350 2 187 1 189 1 229 1 206 1 356 1 71 1 21 2 73 1 209 1 74 2 167 1 98 1 
322 1 127 1 31 1 129 1 296 1 281 6 298 1 238 12 201 1 304 1 13 6 350 1 187 1 160 1 206 1 229 2 50 2 21 2 73 1 209 1 121 2 74 2 167 2 231 2 100 1 
322 4 196 1 127 1 31 1 129 4 2 2 131 1 296 1 281 10 298 4 238 18 201 2 111 1 304 1 13 8 350 3 187 4 160 1 189 1 71 1 356 1 206 1 229 2 50 2 21 8 73 1 209 1 121 2 74 5 98 1 167 3 231 1 100 1 
322 4 127 1 31 1 129 4 2 2 296 1 281 9 298 4 238 16 201 3 304 1 13 7 350 3 187 4 160 1 206 1 229 2 50 3 21 8 73 1 209 1 121 3 74 6 167 3 231 2 213 1 100 1 
189 3 229 1 356 2 71 1 281 3 238 7 201 3 74 6 111 3 98 1 167 1 13 4 350 3 
322 4 196 1 127 1 31 1 129 4 2 2 296 1 281 10 298 4 238 18 201 1 111 1 304 1 13 8 350 3 187 4 160 1 189 1 71 1 356 1 206 1 229 2 50 2 21 8 73 1 209 1 121 2 74 4 98 1 167 3 231 1 213 1 100 1 
6 1 318 1 146 1 288 1 8 1 252 1 357 1 
245 1 252 1 288 1 357 1 6 1 318 1 8 1 146 1 40 1 25 1 113 1 44 1 
361 1 301 1 135 1 242 1 225 1 34 1 313 1 108 1 306 1 234 1 336 1 
288 1 34 1 108 1 357 2 341 1 336 1 6 1 361 1 301 1 135 1 146 2 329 1 212 1 214 1 321 1 306 1 101 1 234 1 
34 1 220 1 108 1 341 1 37 1 6 1 301 1 135 2 329 2 91 1 64 1 306 3 288 2 354 1 357 2 162 1 361 1 146 2 212 1 214 2 321 1 234 1 101 1 
218 1 34 1 220 1 108 1 341 1 37 1 6 1 301 2 135 2 329 2 91 1 64 1 306 3 288 2 354 1 357 2 162 1 361 2 146 2 51 1 212 1 214 2 234 2 101 1 
273 2 128 1 218 1 105 1 34 1 108 1 162 1 336 1 361 3 301 3 87 1 123 1 135 1 182 1 232 1 91 1 148 1 214 1 64 1 234 3 306 4 287 1 15 2 
125 1 273 2 128 1 218 1 105 1 34 1 108 1 162 1 336 1 361 3 301 3 123 1 135 1 182 1 232 1 91 1 148 1 214 1 64 1 234 3 306 4 15 2 
361 1 301 1 34 1 108 1 314 1 234 1 
103 1 67 1 104 1 205 1 34 2 289 1 173 1 314 1 108 3 336 2 109 1 361 6 191 1 301 7 135 2 194 1 214 1 12 1 261 1 234 7 306 3 
322 2 196 1 278 1 0 2 108 1 281 3 238 6 6 2 111 1 329 1 13 3 288 1 71 1 21 4 74 2 166 2 167 1 212 1 337 1 214 1 32 1 129 2 34 1 298 2 341 1 179 1 301 1 135 1 90 1 306 1 350 2 187 2 140 1 189 1 357 2 356 1 229 1 361 1 319 1 192 1 146 2 98 1 194 1 362 1 321 1 234 1 101 1 
125 1 273 3 128 1 105 2 83 1 58 1 175 1 240 1 301 1 182 1 258 2 183 1 259 2 349 1 306 2 263 2 15 3 68 2 336 1 95 1 361 1 123 1 232 1 26 1 148 1 78 1 28 1 234 1 
18 1 34 1 173 1 314 1 108 2 361 2 301 2 135 1 194 1 148 1 214 1 234 2 306 2 
218 1 34 1 313 1 108 1 336 1 361 4 301 4 135 1 194 1 225 1 168 1 234 4 306 1 
103 1 352 1 34 1 289 1 108 2 163 1 361 2 301 2 135 1 64 1 214 1 234 2 306 1 54 1 
361 1 165 1 75 1 301 1 342 1 10 1 34 1 108 1 234 1 336 1 
361 2 191 1 104 1 301 2 135 1 194 1 34 1 108 1 306 1 94 1 234 2 
104 1 205 1 34 2 313 1 108 2 336 1 361 4 301 5 135 2 194 1 225 1 168 1 64 1 12 1 234 5 306 3 
104 1 205 1 34 2 84 1 313 1 108 2 336 1 361 4 301 5 135 2 194 1 225 1 168 1 64 1 234 5 306 3 
288 1 34 1 108 1 357 2 341 1 336 1 6 1 361 1 301 1 135 1 146 2 329 1 212 1 51 1 214 1 306 1 101 1 234 1 
103 1 34 1 289 1 173 1 108 2 361 1 301 1 135 1 64 1 214 1 261 1 234 1 306 1 
6 1 351 1 283 1 284 1 149 1 
351 2 273 2 126 1 128 1 220 1 354 1 69 1 70 1 37 1 175 1 6 1 123 1 283 2 284 2 345 1 232 1 149 1 272 1 15 2 
351 1 146 1 288 1 283 1 149 1 357 1 286 1 292 1 309 1 
126 1 149 1 272 1 
242 1 243 1 59 1 177 1 
243 1 295 1 57 1 226 1 59 1 114 1 177 1 
190 1 295 1 65 1 
17 2 188 1 295 3 57 3 59 1 282 1 177 1 193 1 243 1 226 1 260 1 114 1 
122 1 243 1 295 2 57 2 226 1 59 1 114 1 177 1 5 1 
38 1 165 1 75 1 137 1 193 1 295 1 57 1 226 1 195 1 114 1 177 1 
193 1 295 1 57 1 226 1 59 1 114 1 177 1 
193 1 243 1 295 1 57 1 226 1 59 2 114 1 
219 1 295 2 57 2 59 1 119 1 177 1 193 1 226 2 114 2 115 1 
295 3 57 3 106 1 59 1 290 1 5 2 177 2 326 1 193 1 137 1 243 1 226 1 114 1 
295 2 57 2 59 1 325 1 177 1 5 1 38 1 165 1 75 2 10 1 193 1 243 1 226 1 114 1 307 1 
295 4 57 4 59 1 290 1 5 2 177 2 122 1 193 1 137 1 243 1 226 2 156 1 114 2 
193 1 243 1 295 1 57 1 226 1 59 1 114 1 177 1 
102 1 17 1 188 1 295 4 57 4 59 2 290 1 5 2 177 3 137 1 243 2 226 1 260 1 114 1 
311 1 295 2 57 2 59 1 297 1 177 1 5 1 193 1 243 1 226 1 150 1 114 1 
17 2 89 1 188 2 193 1 243 1 295 3 57 3 226 1 59 1 260 1 114 1 177 1 
235 2 310 1 254 1 177 2 
193 1 295 1 57 1 226 1 29 1 114 1 
326 1 193 1 243 1 295 2 57 2 226 1 59 1 114 1 177 1 5 1 
117 1 
193 1 243 1 295 1 57 1 226 1 59 1 114 1 177 1 
17 1 295 3 57 3 59 1 5 1 177 1 326 1 193 1 243 1 226 1 114 1 
102 1 137 1 290 1 177 1 
59 1 177 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 94 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
89 3 1 1 106 2 348 1 12 1 314 2 323 2 185 1 136 1 267 1 236 1 60 1 251 3 
217 1 276 1 1 1 302 1 246 1 248 2 198 2 323 5 60 3 251 9 258 1 89 9 160 1 106 2 374 2 375 1 348 2 12 6 349 2 68 1 314 2 185 1 136 1 267 4 236 1 187 1 50 1 294 1 
217 1 276 1 1 1 302 1 246 1 248 2 198 2 323 5 60 3 251 9 258 1 89 9 160 1 106 2 374 2 375 1 348 2 12 6 349 2 68 1 314 2 185 1 136 1 267 4 236 1 187 1 50 1 294 1 
217 1 276 1 1 1 302 1 246 1 248 2 198 2 323 6 60 4 251 10 258 1 89 10 160 1 106 2 374 2 375 1 348 2 12 7 349 2 68 1 314 2 185 1 136 1 267 5 236 1 187 1 50 1 294 1 
276 1 1 1 302 1 246 1 248 1 198 2 323 4 60 2 251 7 258 1 89 7 160 1 106 2 374 2 375 1 348 2 12 4 349 2 68 1 314 2 185 1 136 1 267 3 236 1 187 1 50 1 294 1 
217 1 276 1 89 4 374 1 106 1 12 3 349 1 248 2 198 1 314 1 323 3 185 1 136 1 267 2 236 1 60 1 187 1 251 4 
142 1 258 1 89 2 106 1 374 1 302 1 348 1 323 1 314 1 198 1 185 1 136 1 236 1 251 2 214 1 272 1 
217 1 276 1 1 1 357 1 360 1 246 1 248 2 323 5 198 1 60 3 251 9 89 9 106 2 374 1 348 1 12 7 349 1 314 2 185 1 267 4 136 1 236 1 187 1 294 1 
217 1 276 1 1 1 357 1 360 1 246 1 248 2 323 5 198 1 60 3 251 9 89 9 106 2 374 1 348 1 12 7 349 1 314 2 185 1 267 4 136 1 236 1 187 1 294 1 
344 1 21 1 241 1 333 1 275 1 9 1 356 1 98 1 56 1 67 1 69 1 28 1 170 1 173 1 
183 1 
32 1 183 1 327 1 21 2 112 1 170 1 56 2 227 1 
32 1 19 1 327 1 21 5 243 1 80 1 56 5 359 1 90 2 183 1 149 1 44 1 363 1 112 2 169 1 170 2 201 2 364 2 283 1 
94 1 
183 1 167 1 206 2 
69 2 28 2 256 1 275 2 356 2 98 1 173 2 67 2 
165 1 190 1 275 2 356 2 22 2 98 1 358 1 145 1 195 1 280 1 223 1 28 3 30 1 31 1 304 1 86 1 286 1 173 3 33 1 256 1 130 1 311 1 262 1 66 2 67 2 13 1 42 2 265 1 92 1 69 2 237 1 351 2 111 1 114 1 46 1 164 2 238 1 
69 1 344 1 28 1 241 1 275 1 9 1 356 1 98 1 173 1 67 1 
32 1 21 1 241 1 300 1 88 1 219 1 159 1 119 1 56 1 312 1 67 1 183 1 28 1 173 1 
32 1 21 2 275 1 241 1 88 1 219 1 159 1 356 1 56 2 312 1 67 1 183 1 69 1 28 1 173 1 
21 1 112 1 170 1 56 1 39 1 
32 1 183 1 327 1 21 2 112 1 170 1 56 2 109 1 
21 1 112 1 56 1 
275 1 256 2 356 1 245 1 67 2 224 1 69 1 28 2 173 2 
259 1 340 1 154 1 
190 1 256 1 347 1 66 1 145 1 195 1 13 1 42 1 92 1 223 1 28 1 351 1 46 1 31 1 238 1 173 1 
94 1 
190 1 275 1 259 1 356 1 145 1 66 1 67 1 195 1 13 1 42 1 223 1 92 1 28 2 225 1 351 1 46 1 49 1 31 1 238 1 173 2 
275 4 256 1 204 1 119 1 356 4 55 1 245 1 67 5 69 1 28 5 225 1 153 1 49 2 173 5 
28 2 241 1 275 2 9 1 356 2 24 1 173 2 67 2 
69 1 28 3 256 1 275 3 356 3 49 1 173 3 67 3 
28 1 241 1 275 1 9 1 356 1 173 1 67 1 
224 1 69 1 28 1 241 1 275 1 356 1 245 1 173 1 67 1 
165 1 190 1 21 1 275 3 241 1 219 1 356 3 22 2 98 1 56 1 245 1 145 1 220 1 195 1 280 1 223 1 28 4 151 1 225 1 30 1 31 1 86 1 286 1 173 4 256 1 88 1 159 1 311 1 262 1 312 1 66 1 13 1 67 3 42 1 265 1 92 1 69 2 237 1 351 1 111 1 46 1 164 1 49 1 238 1 
28 2 256 1 275 1 119 1 356 1 55 1 49 1 173 2 67 2 
21 1 241 1 275 3 219 1 88 1 159 1 356 3 56 1 245 1 312 1 67 3 183 1 69 1 28 3 225 1 151 1 252 1 49 2 173 3 
275 2 259 1 356 2 245 1 67 2 69 1 28 2 340 1 49 1 173 2 
190 1 256 1 66 1 145 1 195 1 13 1 42 1 92 1 223 1 28 1 351 1 46 1 238 1 31 1 173 1 
190 1 256 1 66 1 145 1 195 1 42 1 92 1 223 1 28 1 351 1 210 1 46 1 31 1 52 1 173 1 
141 1 295 1 321 1 22 2 278 1 25 1 221 1 222 1 280 1 250 1 340 2 154 2 86 1 286 1 202 1 259 2 130 2 311 1 265 1 110 1 237 2 111 1 164 4 51 1 
28 1 241 1 275 1 159 1 356 1 24 1 173 1 67 1 
72 1 38 1 239 1 
62 1 339 1 72 2 76 1 270 1 38 2 
72 1 38 1 
72 1 38 1 
62 1 339 1 
62 1 339 1 
62 1 339 1 
78 1 72 1 38 1 
78 1 72 1 38 1 
78 1 72 1 38 1 
72 1 244 1 38 1 
72 1 244 1 38 1 
72 1 244 1 38 1 
21 1 218 1 275 2 356 2 192 1 56 1 4 1 28 2 282 1 103 1 173 2 128 1 368 1 256 1 257 1 372 1 108 1 64 1 38 1 67 2 289 1 93 1 72 1 239 1 
343 1 117 1 21 2 257 3 372 2 288 1 335 1 56 2 108 1 4 2 38 2 183 1 315 1 72 2 61 2 115 1 282 2 103 2 270 1 
197 2 198 2 268 1 349 1 272 1 
198 1 374 1 349 1 
198 1 374 1 272 1 
197 1 198 3 268 1 179 1 349 2 272 1 
197 1 198 2 125 1 268 1 349 1 272 1 
295 1 21 5 274 1 321 1 82 1 56 5 26 1 167 1 250 1 169 1 170 4 364 1 201 1 283 2 366 2 32 1 128 1 369 1 327 1 64 1 376 2 11 1 206 3 289 1 90 1 183 2 110 1 44 3 291 1 112 1 48 1 116 2 
240 1 295 3 19 1 320 1 21 9 274 1 321 3 82 2 56 9 23 1 146 1 101 5 167 3 250 3 169 1 170 7 201 2 364 2 283 6 366 6 32 1 327 1 129 1 11 3 206 9 39 5 289 4 90 2 183 5 110 3 44 8 291 2 112 6 116 6 189 1 
295 1 19 1 21 3 321 1 82 1 56 3 26 1 167 2 250 1 170 2 364 1 201 1 283 2 366 2 32 1 369 1 376 1 11 1 206 4 289 1 90 1 183 3 44 3 110 1 291 1 116 2 
240 1 295 2 19 1 320 1 21 4 321 2 82 1 56 4 26 1 167 3 250 2 170 3 364 1 201 1 283 4 366 4 32 1 369 1 376 2 11 2 206 7 289 2 90 1 183 4 44 5 110 2 291 1 116 4 189 1 
131 1 
94 1 
234 1 31 1 
223 1 190 1 31 1 
43 1 31 1 
223 1 31 1 
223 1 328 1 190 1 139 1 126 2 31 3 
342 1 296 1 157 1 97 2 321 1 130 4 193 1 278 3 3 1 59 1 222 2 99 1 110 1 237 3 168 1 226 1 164 7 105 1 
295 3 296 2 97 3 321 4 22 2 193 5 278 10 3 2 99 1 222 5 280 1 27 1 168 1 226 2 6 1 250 3 85 1 105 1 86 1 203 4 87 1 342 1 157 2 130 16 63 1 11 3 265 1 110 4 237 15 70 1 111 1 164 31 293 3 381 1 
296 1 97 2 321 1 22 4 81 1 193 1 278 4 3 1 147 1 222 3 99 1 280 2 6 1 226 1 168 1 86 2 342 1 157 1 130 5 265 2 110 1 237 4 111 2 164 9 
342 1 296 1 157 1 97 2 321 1 130 4 193 1 278 3 3 1 222 2 99 1 110 1 237 3 168 1 226 1 164 7 105 1 
342 1 296 1 157 1 97 2 321 1 130 4 193 1 278 3 3 1 222 2 99 1 110 1 237 3 168 1 226 1 164 7 105 1 
54 1 145 1 195 1 223 1 251 1 171 2 31 1 205 1 89 1 106 1 377 2 66 1 348 2 379 1 42 1 92 1 314 1 71 1 351 1 140 2 211 1 354 1 319 1 
145 1 198 2 249 1 251 1 171 1 284 1 370 1 89 1 374 1 106 1 132 1 377 1 261 1 378 1 66 1 348 1 179 1 349 1 42 1 92 1 314 1 136 1 351 1 140 1 188 1 272 1 
145 1 323 1 198 2 249 1 251 2 171 1 284 1 370 1 89 2 374 1 106 1 310 1 377 1 261 1 378 1 12 1 66 1 348 1 179 1 349 1 42 1 92 1 314 1 185 1 136 1 236 1 351 1 140 1 188 1 272 1 
299 1 145 1 323 1 198 2 249 1 251 3 171 1 284 1 370 1 205 1 89 3 374 1 106 1 132 1 377 1 261 1 378 1 179 1 66 1 348 1 12 2 349 1 42 1 92 1 314 1 185 1 236 1 351 1 140 1 272 1 
299 1 145 1 323 1 198 2 251 2 171 1 284 1 89 2 374 1 132 1 377 1 261 1 378 1 348 1 66 1 12 2 179 1 349 1 42 1 92 1 185 1 236 1 351 1 140 1 272 1 
277 1 
241 1 242 2 334 1 300 1 56 5 145 1 195 2 338 1 201 1 255 2 305 1 156 1 159 1 206 2 312 1 66 2 313 1 67 1 351 2 112 6 113 2 74 2 354 1 21 5 219 1 119 1 82 1 279 2 223 1 167 2 28 1 169 1 365 1 364 1 283 2 31 1 228 1 172 1 173 1 32 1 327 3 88 1 371 1 373 1 232 1 37 1 379 1 90 1 42 2 183 2 92 1 235 2 44 2 47 2 292 4 
21 3 241 1 334 1 300 1 219 1 119 1 56 3 28 1 227 1 173 1 327 1 88 1 371 1 159 1 373 1 232 1 37 1 312 1 67 1 112 2 113 1 292 2 
21 3 241 1 334 1 300 1 219 1 119 1 56 3 28 1 227 1 173 1 32 1 327 1 88 1 371 1 159 1 373 1 232 1 37 1 312 1 67 1 183 1 235 1 112 1 292 3 
21 3 241 1 334 1 300 1 219 1 119 1 56 3 28 1 227 1 255 1 173 1 32 1 327 1 88 1 371 1 159 1 373 1 232 1 37 1 312 1 67 1 183 1 235 1 112 2 113 1 292 3 
241 1 334 1 242 2 300 1 56 5 152 1 201 1 255 4 159 1 312 1 313 1 67 1 112 7 113 4 74 2 355 1 21 5 219 1 119 1 279 2 167 2 28 1 169 1 364 1 365 1 283 1 227 1 173 1 32 5 327 3 88 1 371 1 373 1 37 1 232 1 133 1 90 1 183 5 184 1 235 4 135 1 44 1 47 2 292 6 
241 1 334 1 242 2 300 1 56 4 201 1 255 2 159 1 312 1 206 2 313 1 67 1 112 4 113 2 74 2 21 4 219 1 119 1 279 2 167 2 28 1 169 1 364 1 365 1 283 1 173 1 172 1 32 1 327 2 88 1 371 1 373 1 37 1 232 1 90 1 183 2 44 1 235 2 47 2 292 4 
21 4 241 1 242 2 334 1 300 1 219 1 119 1 56 4 279 2 167 2 28 1 152 1 169 1 365 1 201 1 364 1 283 1 255 2 173 1 32 1 327 2 88 1 371 1 159 1 373 1 232 1 37 1 312 1 313 1 67 1 90 1 183 1 235 2 44 1 135 1 112 4 113 2 47 2 74 2 292 4 355 1 
21 4 241 1 242 2 334 1 300 1 219 1 119 1 56 4 279 2 167 2 28 1 152 1 169 1 365 1 201 1 364 1 283 1 255 2 173 1 32 1 327 2 88 1 371 1 159 1 373 1 232 1 37 1 312 1 313 1 67 1 90 1 183 1 235 2 44 1 135 1 112 4 113 2 47 2 74 2 292 4 355 1 
21 4 241 1 334 1 300 1 219 1 119 1 2 2 56 4 279 2 100 2 28 1 102 1 169 1 365 1 201 1 364 1 283 1 255 2 173 1 32 1 327 2 88 1 371 1 159 1 373 1 232 1 37 1 206 2 312 1 40 1 67 1 90 1 183 1 235 2 44 1 45 1 112 4 113 2 74 2 292 4 355 1 
21 4 241 1 242 2 334 1 300 1 219 1 119 1 56 4 279 2 167 2 28 1 152 1 169 1 365 1 364 1 201 1 283 1 255 3 173 1 32 1 327 2 88 1 371 1 159 1 373 1 232 1 37 1 312 1 133 1 313 1 67 1 90 1 183 1 44 1 135 1 235 3 112 5 113 3 47 2 74 2 292 5 355 1 
21 4 241 1 242 2 334 1 300 1 219 1 119 1 56 4 279 2 167 2 28 1 152 1 169 1 365 1 364 1 201 1 283 1 255 3 173 1 32 1 327 2 88 1 371 1 159 1 373 1 232 1 37 1 312 1 133 1 313 1 67 1 90 1 183 1 44 1 135 1 235 3 112 5 113 3 47 2 74 2 292 5 355 1 
241 1 334 1 300 1 56 4 2 2 100 2 201 1 255 2 159 1 312 1 206 2 67 1 112 4 113 2 74 2 21 4 219 1 119 1 279 2 28 1 169 1 364 1 365 1 283 1 173 1 172 1 32 1 327 2 88 1 371 1 373 1 37 1 232 1 40 1 90 1 183 1 44 1 235 2 292 4 
17 1 20 1 275 1 356 1 22 4 358 2 57 1 25 1 145 2 195 2 280 2 223 2 123 1 28 1 200 1 30 1 31 3 86 2 286 2 173 1 307 1 130 1 132 1 310 1 311 2 66 7 379 1 67 1 42 8 92 2 265 2 237 1 351 8 111 2 114 1 164 2 49 1 354 1 332 1 
295 1 275 1 321 1 356 1 22 2 278 1 58 1 245 1 222 1 280 1 28 1 340 1 250 1 154 1 86 1 286 1 173 1 259 1 130 1 11 1 311 1 67 1 265 1 69 1 110 1 237 2 111 1 137 1 164 3 
265 1 280 1 111 1 94 1 22 2 311 1 86 1 286 1 25 1 
295 2 321 1 193 1 22 4 278 2 222 1 280 2 340 4 250 1 85 1 30 1 154 11 86 2 286 1 203 3 256 1 259 11 177 1 130 8 63 1 11 2 311 2 134 1 182 1 265 2 110 2 237 6 186 1 111 2 137 1 114 1 164 14 293 3 
190 1 275 1 356 1 22 2 145 1 195 1 223 1 280 1 28 2 281 1 225 1 340 1 30 1 31 1 286 1 86 1 173 2 256 1 130 1 347 1 311 1 66 1 162 1 13 1 67 1 42 1 92 1 265 1 237 1 351 1 111 1 137 1 46 1 114 1 164 2 75 1 49 1 238 1 
295 2 296 1 190 2 97 1 193 4 145 2 195 1 99 1 340 7 250 2 154 7 155 2 342 1 308 1 256 2 259 7 11 2 263 1 65 1 311 3 262 2 66 3 67 1 13 2 265 3 110 3 351 3 111 3 114 1 164 20 275 1 321 3 356 1 22 6 278 8 222 4 280 3 223 2 28 3 124 2 225 1 168 1 226 1 30 1 31 2 86 3 286 3 173 3 231 2 130 10 132 1 42 3 92 2 237 10 137 1 46 2 49 1 238 2 96 2 
295 1 259 1 130 2 193 1 22 2 278 1 311 1 25 1 280 1 265 1 110 1 111 1 340 1 154 1 164 2 286 1 86 1 202 1 
259 1 321 1 22 2 278 1 311 1 25 1 222 1 280 1 265 1 237 2 111 1 340 1 250 1 154 1 164 2 286 1 86 1 51 1 
295 1 321 1 22 2 193 1 278 2 25 1 222 1 280 1 340 2 250 1 154 2 86 1 286 1 259 2 130 2 11 1 311 1 265 1 110 1 237 2 111 1 164 4 
295 1 307 1 259 1 130 2 193 1 22 2 278 1 311 1 280 1 265 1 110 1 111 1 340 1 154 1 164 2 286 1 86 1 202 1 
307 1 259 1 321 1 22 2 278 1 311 1 222 1 280 1 265 1 237 2 111 1 340 1 250 1 154 1 164 2 286 1 86 1 51 1 
295 1 321 1 22 2 193 1 278 2 222 1 280 1 340 2 250 1 154 2 86 1 286 1 307 1 259 2 130 2 11 1 311 1 265 1 110 1 237 2 111 1 164 4 
295 1 321 1 22 2 193 1 278 2 222 1 280 1 340 2 250 1 154 2 86 1 286 1 259 2 130 2 11 1 311 1 265 1 110 1 237 2 111 1 164 4 
190 1 22 2 145 1 195 1 223 1 280 1 28 1 30 1 31 1 286 1 86 1 173 1 256 1 130 1 262 1 311 1 66 1 13 1 42 1 92 1 265 1 237 1 351 1 111 1 114 1 46 1 164 2 238 1 
77 1 190 1 22 2 145 1 195 1 223 1 280 1 28 1 30 1 31 1 286 1 86 1 173 1 256 1 130 1 311 1 66 1 42 1 92 1 265 1 237 1 351 1 210 1 111 1 114 1 46 1 164 2 52 1 
295 1 321 1 22 2 193 1 278 2 222 1 280 1 340 2 250 1 154 2 86 1 286 1 259 2 130 2 11 1 311 1 265 1 110 1 237 2 111 1 137 1 164 4 
295 1 190 1 321 1 193 1 22 2 278 2 145 1 222 1 223 1 280 1 28 1 250 1 340 2 154 2 31 1 155 1 286 1 86 1 173 1 259 2 130 2 310 1 11 1 262 1 311 1 66 1 13 1 42 1 92 1 265 1 110 1 237 2 351 1 111 1 46 1 164 4 238 1 
295 1 275 1 321 1 356 1 193 1 22 2 278 1 245 1 280 1 28 1 250 1 340 1 154 1 86 1 286 1 173 1 259 1 130 2 11 1 311 1 67 1 265 1 69 1 110 1 237 1 111 1 137 1 14 1 164 3 
295 3 191 2 321 3 22 4 81 1 193 3 278 6 301 1 222 3 280 2 250 3 85 1 341 1 86 2 174 1 203 2 130 9 63 1 11 3 209 1 265 2 110 3 237 10 352 1 111 2 330 1 269 1 164 19 293 1 215 2 
295 3 118 1 191 1 321 2 322 1 193 2 22 6 81 1 278 4 166 1 222 2 280 3 150 1 6 2 250 2 85 2 341 1 86 3 174 1 203 2 130 14 11 3 41 1 209 2 265 3 380 1 110 3 237 12 111 3 330 2 269 1 164 26 293 2 215 4 
295 4 296 1 97 1 118 1 191 1 321 5 322 1 22 6 81 1 193 4 278 8 166 1 99 1 222 4 280 3 150 1 168 1 226 1 6 1 250 4 85 3 341 1 86 3 174 1 203 4 342 1 130 20 63 1 11 4 41 1 209 1 265 3 380 1 110 5 237 21 316 1 352 1 111 3 330 2 269 1 164 41 293 3 215 4 
295 4 296 1 97 1 118 1 191 1 321 4 322 1 22 8 81 1 193 3 278 7 166 1 99 1 222 4 280 4 150 1 168 1 226 1 6 2 250 3 85 3 341 1 86 4 174 1 203 4 342 1 130 20 63 1 11 4 41 1 209 1 265 4 380 1 110 5 237 18 316 1 352 1 111 4 330 2 269 1 164 38 293 3 215 4 
295 7 296 1 97 1 118 1 191 1 321 8 322 1 22 4 81 1 193 7 278 14 166 1 99 1 222 7 280 2 150 1 168 1 226 1 6 1 250 7 85 2 341 1 86 2 174 1 203 4 342 1 130 27 63 2 11 7 41 1 209 1 182 2 265 2 380 1 110 8 237 25 111 2 330 1 269 1 164 52 293 4 215 4 
175 1 72 1 372 1 288 1 115 1 282 1 103 1 270 1 38 1 4 1 
192 1 239 1 
362 1 350 1 72 1 372 1 73 1 282 1 103 1 38 1 4 1 
91 1 78 1 
244 1 76 1 15 1 
117 1 21 1 257 2 372 1 288 1 335 1 56 1 108 1 4 1 38 1 183 1 315 1 72 1 61 1 115 1 282 1 103 1 270 1 
117 1 21 1 257 2 372 1 288 1 335 1 56 1 108 1 4 1 38 1 183 1 315 1 72 1 61 1 115 1 282 1 103 1 270 1 
117 1 21 1 257 2 372 1 288 1 335 1 56 1 108 1 4 1 38 1 183 1 315 1 72 1 61 1 115 1 282 1 103 1 270 1 
91 1 78 1 76 1 
91 1 78 1 76 1 
244 1 15 1 
244 1 76 1 15 1 
218 1 93 1 
21 1 218 1 275 2 192 1 356 2 56 1 4 1 28 2 61 1 170 1 282 1 103 1 173 2 128 1 368 1 256 1 257 1 372 1 64 1 38 1 289 1 67 2 93 1 315 1 72 1 318 1 239 1 
17 1 22 2 358 2 145 1 223 1 280 1 123 1 28 2 30 1 31 1 127 1 286 1 86 1 173 2 158 1 130 1 36 1 311 1 180 1 66 2 67 2 42 2 92 1 265 1 237 1 351 2 137 1 111 1 114 1 164 2 212 1 
230 1 10 1 377 1 145 1 66 1 379 1 195 1 42 1 92 1 223 1 351 1 211 1 31 1 354 1 
273 1 370 1 230 1 374 1 132 1 377 1 261 1 179 1 66 1 145 1 349 1 42 1 92 1 198 2 84 1 351 1 284 1 272 1 
273 1 370 1 230 1 374 1 132 1 310 1 377 1 261 1 179 1 145 1 66 2 349 1 42 2 92 1 198 2 84 1 351 2 284 1 272 1 
273 1 370 1 374 1 132 1 377 1 261 1 179 1 66 1 145 1 349 1 42 1 92 1 198 2 290 1 351 1 284 1 272 1 
271 1 
32 1 80 1 90 1 183 1 363 1 44 1 169 1 201 1 364 1 283 1 
295 2 321 2 11 2 206 10 183 5 167 5 124 1 110 2 44 5 325 1 250 2 283 5 366 5 116 5 213 2 
32 1 183 1 21 1 327 1 112 1 56 1 
19 1 21 3 82 2 120 2 56 3 145 1 195 2 338 1 223 1 169 1 364 2 201 2 253 1 283 2 31 1 305 2 156 1 327 2 178 1 66 4 379 1 90 2 42 4 92 1 44 2 351 4 112 4 331 1 354 1 
94 1 
32 1 21 1 327 1 242 1 56 1 206 1 313 1 90 1 183 2 167 1 44 1 112 1 169 1 201 1 364 1 47 1 283 1 
295 2 190 3 298 2 194 1 56 5 145 3 195 1 250 2 253 1 201 4 7 1 305 1 306 1 8 2 310 1 11 2 206 12 66 3 208 2 110 2 351 3 112 5 116 6 213 2 216 2 21 5 219 2 321 2 80 1 82 2 120 1 223 3 167 6 363 1 124 2 325 2 169 4 364 4 326 2 283 8 366 6 31 10 367 2 126 2 32 2 327 3 90 4 42 3 234 3 92 4 183 8 43 2 44 9 139 1 
295 2 21 1 118 1 321 2 82 1 56 1 166 1 148 1 167 3 150 1 325 1 169 2 250 2 85 1 364 2 201 2 283 5 366 5 305 1 203 1 32 2 327 1 287 1 11 2 206 6 41 1 90 2 183 5 44 8 380 1 110 2 112 1 293 1 116 5 213 2 
296 1 21 1 241 1 333 1 275 1 321 1 356 1 98 1 56 1 28 1 324 1 325 1 226 1 168 1 169 1 364 1 201 1 283 2 173 1 344 1 9 1 67 1 90 1 69 1 135 1 110 2 44 2 213 2 
165 1 190 1 275 2 356 2 22 2 98 1 145 1 195 1 223 1 280 1 28 3 30 1 31 1 86 1 286 1 173 3 256 1 262 1 311 1 66 1 67 2 13 1 42 1 265 1 92 1 69 2 237 1 351 1 111 1 46 1 164 1 238 1 
32 2 97 1 82 1 206 4 90 1 183 4 167 2 44 1 169 1 201 1 364 1 283 2 366 2 305 1 116 2 
218 1 288 1 282 1 144 1 103 1 
163 1 282 1 103 1 
163 1 282 1 103 1 
163 1 282 1 103 1 
282 1 103 1 285 1 
282 1 103 1 285 1 
282 1 103 1 285 1 
282 1 103 1 
72 1 38 1 
296 2 321 2 130 5 22 2 81 1 193 2 278 5 222 3 265 1 280 1 110 2 324 1 237 5 111 1 226 2 168 1 164 10 86 1 
295 1 130 2 81 1 22 2 193 1 278 1 280 1 265 1 110 1 111 1 164 2 86 1 
295 1 321 1 130 2 81 1 22 2 193 1 278 2 11 1 222 1 280 1 265 1 110 1 237 2 111 1 250 1 164 4 86 1 
296 1 130 1 81 1 22 6 193 1 278 2 222 1 280 3 265 3 237 2 6 1 352 1 111 3 226 1 29 1 164 3 86 3 
295 3 296 3 97 1 321 5 22 10 81 1 193 5 278 12 99 1 222 7 280 5 27 1 168 2 226 3 6 2 250 3 29 1 85 1 254 1 86 5 87 1 203 4 342 1 130 16 63 1 11 3 265 5 110 5 237 18 352 1 111 5 164 34 293 3 381 1 
342 1 296 1 97 1 321 1 130 4 193 1 22 4 278 3 222 2 99 1 280 2 265 2 110 1 237 4 168 1 111 2 6 1 226 1 164 8 86 2 
94 1 
295 1 321 1 130 2 22 2 193 1 278 2 11 1 222 1 280 1 265 1 110 1 237 2 111 1 250 1 254 1 164 4 86 1 
203 2 295 1 321 1 130 3 63 1 193 1 278 2 11 1 222 1 110 1 237 4 250 1 85 1 164 7 293 1 
295 2 296 2 97 1 321 3 193 4 22 4 278 9 99 1 222 5 280 2 168 1 226 2 6 2 250 2 29 1 86 2 203 2 342 1 130 11 63 1 11 2 182 1 265 2 110 3 237 12 186 1 111 2 164 23 293 2 
203 1 237 1 164 1 
130 1 164 1 293 1 
295 1 321 1 130 3 22 2 193 1 278 3 11 1 222 2 265 1 280 1 124 1 110 1 237 3 111 1 250 1 254 1 164 6 86 1 
295 2 118 1 321 2 193 1 22 2 81 1 278 2 166 1 222 1 280 1 150 1 250 2 85 1 86 1 203 1 130 6 11 2 41 1 265 1 380 1 110 2 237 6 111 1 164 12 293 1 
296 1 321 1 130 3 193 1 278 2 222 1 110 1 237 3 168 1 226 1 164 6 
342 1 296 1 130 1 193 1 22 2 278 2 222 1 99 1 280 1 265 1 237 2 226 1 6 1 111 1 29 1 164 3 86 1 
296 1 97 1 321 1 22 2 81 1 278 2 99 1 222 2 280 1 150 1 226 1 168 1 85 1 86 1 203 1 342 1 130 4 265 1 110 1 237 4 111 1 164 8 293 1 
295 1 296 1 97 1 321 1 81 1 22 4 193 1 278 3 222 2 99 1 280 2 150 1 168 1 226 1 85 1 254 1 86 2 203 2 342 1 130 6 63 1 11 1 265 2 110 2 237 5 111 2 164 11 293 1 
295 2 296 1 97 1 118 1 321 3 193 1 22 6 81 1 278 4 166 1 99 1 222 3 280 3 150 1 168 1 226 1 6 1 250 2 85 1 254 1 86 3 203 1 342 1 130 9 11 2 41 1 265 3 380 1 110 3 237 10 111 3 164 19 293 1 
295 2 296 1 97 1 118 1 321 2 193 2 22 6 81 1 278 5 166 1 99 1 222 3 280 3 150 1 168 1 226 1 6 1 250 1 85 1 254 1 86 3 203 1 342 1 130 10 11 2 41 1 265 3 380 1 110 3 237 7 111 3 164 17 293 1 
296 1 97 1 321 1 22 2 81 1 278 2 99 1 222 2 280 1 150 1 226 1 168 1 85 1 86 1 203 1 342 1 130 4 265 1 110 1 237 4 111 1 164 8 293 1 
295 2 118 1 321 2 193 1 22 2 81 1 278 2 166 1 222 1 280 1 150 1 250 2 85 1 86 1 203 1 130 6 11 2 41 1 265 1 380 1 110 2 237 6 111 1 164 12 293 1 
295 2 296 1 97 1 118 1 321 2 193 2 22 8 81 1 278 5 166 1 99 1 222 3 280 4 150 1 168 1 226 1 6 2 250 1 85 1 254 1 86 4 203 1 342 1 130 10 11 2 41 1 265 4 380 1 110 3 237 8 111 4 164 18 293 1 
295 3 118 1 321 2 193 3 81 1 22 8 278 6 166 1 222 3 280 4 150 1 6 2 250 2 85 1 86 4 203 1 130 9 11 3 41 1 265 4 380 1 110 3 237 7 111 4 352 1 164 16 293 1 
342 2 296 3 321 1 130 3 193 3 278 6 99 1 222 3 110 1 237 4 226 3 168 1 164 7 
295 2 296 1 97 1 118 1 321 2 193 1 81 1 22 8 278 4 166 1 99 1 222 3 280 4 150 1 168 1 226 1 6 2 250 1 85 1 86 4 203 1 342 1 130 10 11 2 41 1 265 4 380 1 110 3 237 8 111 4 352 1 164 18 293 1 
28 1 256 1 119 1 55 1 336 1 173 1 67 1 
256 1 53 1 35 1 119 1 346 1 55 1 107 1 336 1 122 1 67 1 28 1 173 1 
18 1 0 1 310 1 66 4 379 1 145 1 195 1 42 4 92 1 223 1 351 4 354 1 31 1 
308 1 190 1 120 1 207 1 66 2 145 1 181 1 42 2 361 1 223 1 92 2 351 2 329 1 31 1 
42 1 92 1 198 1 351 1 374 1 261 1 145 1 66 1 272 1 195 1 
42 2 92 1 223 1 123 1 351 2 132 1 310 1 31 1 127 1 145 1 66 2 
18 1 20 1 120 1 310 1 379 1 66 4 145 2 195 1 42 5 223 2 92 2 123 1 351 5 354 1 31 3 332 1 
18 1 20 1 120 1 121 1 310 1 379 1 66 4 145 2 195 1 42 5 223 2 92 2 123 1 351 5 354 1 31 3 
42 1 351 1 94 1 66 1 195 1 
190 1 256 1 275 1 356 1 66 1 145 1 67 1 195 1 42 1 223 1 92 1 28 2 351 1 46 1 49 1 31 1 238 1 173 2 
190 2 275 1 241 1 298 1 356 2 120 1 145 1 223 2 28 2 31 3 173 2 256 1 159 1 312 1 66 1 67 2 42 1 92 1 43 1 351 1 46 1 49 1 238 1 
190 2 0 1 275 1 241 1 298 1 356 2 120 1 145 1 223 2 28 2 31 3 173 2 256 1 159 1 312 1 66 2 67 2 42 2 92 1 43 1 351 2 46 1 49 1 52 1 
32 1 190 1 21 2 0 1 298 1 345 1 219 1 143 1 56 2 120 1 66 3 145 1 195 1 42 3 183 1 223 1 92 1 234 1 43 1 351 3 112 1 31 4 126 1 
32 1 190 1 21 2 0 1 8 1 298 1 219 1 56 2 120 1 66 3 145 1 195 1 42 3 183 1 223 1 92 1 234 1 43 1 351 3 112 1 31 4 126 1 
42 1 92 1 351 1 57 1 145 1 66 1 
20 1 190 1 358 1 132 1 57 1 310 1 207 1 66 6 145 2 195 2 181 1 42 7 233 1 223 2 92 3 123 1 200 1 351 7 139 1 31 3 332 1 
296 1 190 1 97 1 275 1 321 1 356 1 22 4 278 2 145 1 222 2 99 1 223 1 280 2 28 2 168 1 226 1 340 1 154 1 31 1 286 2 86 2 155 1 173 2 342 1 256 2 259 1 158 1 231 1 130 3 310 1 311 2 262 1 66 1 67 1 13 1 42 1 92 1 265 2 110 1 237 3 351 1 111 2 137 1 46 1 164 6 49 1 238 1 
216 1 21 3 219 1 80 1 56 3 195 1 363 1 169 2 170 1 364 2 201 2 253 1 283 1 326 1 367 1 31 2 126 1 32 1 327 1 8 1 66 1 90 2 42 1 183 1 234 1 44 1 351 1 112 2 
190 1 310 1 57 1 66 2 145 1 42 2 223 1 92 2 351 2 139 1 7 1 126 1 31 2 
190 1 256 1 275 1 356 1 66 1 145 1 67 1 195 1 42 1 223 1 92 1 28 2 351 1 46 1 49 1 31 1 52 1 173 2 
190 1 120 1 207 1 66 1 145 1 181 1 42 1 233 1 223 1 92 2 351 1 139 1 31 1 
256 1 79 1 5 1 264 1 16 1 
32 1 21 2 256 1 241 1 219 1 88 1 159 1 79 2 56 2 312 1 264 2 5 2 183 1 266 1 83 1 199 1 151 1 170 1 16 1 
79 1 36 1 180 1 264 1 67 1 28 1 212 1 16 1 173 1 
83 1 199 1 16 1 
323 1 314 1 185 1 136 1 236 1 89 1 251 1 106 1 
258 1 176 1 89 4 106 1 12 2 314 1 323 3 185 2 267 1 236 2 60 1 251 4 95 1 104 1 
89 2 357 1 106 1 337 1 12 1 196 1 323 1 314 1 136 1 185 1 236 1 251 2 
258 2 176 1 89 3 106 1 323 1 314 1 136 1 185 1 236 1 251 3 353 1 104 2 
34 1 323 2 317 2 229 1 
314 1 136 1 89 1 251 1 106 1 303 1 
323 1 314 1 185 1 136 1 236 1 89 2 251 2 106 1 12 1 246 1 
260 1 
323 1 314 1 185 1 136 1 236 1 89 1 251 1 106 1 
94 1 
323 1 314 1 185 1 236 1 89 1 251 1 106 1 
89 1 140 1 348 1 
258 2 176 1 89 3 106 1 247 1 323 1 314 1 136 1 185 1 236 1 251 3 104 1 
248 1 323 1 314 1 185 1 236 1 89 2 251 2 106 1 12 1 
276 1 89 1 106 1 374 1 349 1 314 1 323 1 198 1 136 1 267 1 251 1 
323 1 314 1 136 1 236 1 89 1 251 1 106 1 
314 1 185 1 136 1 236 2 89 1 251 1 106 1 
297 1 89 2 309 1 106 2 161 1 323 1 314 2 136 1 236 1 251 2 
89 3 106 1 12 2 246 1 314 1 323 2 185 1 136 1 267 1 236 1 60 1 251 3 294 1 
89 2 106 1 374 1 179 1 12 1 349 1 323 1 198 2 314 1 185 1 136 1 236 1 251 2 138 1 272 1 
217 1 89 4 106 2 12 2 248 1 314 2 323 2 185 1 136 1 267 1 236 1 60 1 251 4 
323 1 314 1 185 1 136 1 236 1 258 1 89 3 251 3 106 1 12 1 246 1 
323 1 267 1 60 1 95 1 
323 1 236 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
81 2 80 2 354 5 337 9 84 2 366 1 326 1 87 1 343 1 328 6 347 1 33 2 271 1 135 1 67 1 308 2 112 4 137 1 115 2 70 1 39 1 73 1 238 3 143 1 352 1 98 1 77 9 353 2 
81 2 80 2 354 5 337 9 84 2 366 1 326 1 87 1 343 1 328 6 347 1 33 2 271 1 135 1 67 1 308 2 112 4 137 1 115 2 70 1 39 1 73 1 238 3 143 1 352 1 98 1 77 9 353 2 
81 2 80 2 354 6 337 10 84 2 366 1 326 1 87 1 343 1 328 7 347 1 33 2 271 1 135 1 67 1 308 2 112 5 137 1 115 2 70 1 39 1 73 1 238 4 143 1 352 1 98 1 77 10 353 2 
81 2 80 2 354 4 337 7 84 2 326 1 87 1 343 1 328 4 347 1 33 2 271 1 135 1 67 1 308 2 112 3 137 1 115 1 70 1 39 1 73 1 238 2 143 1 352 1 98 1 77 7 353 2 
33 1 80 1 271 1 354 3 81 1 67 1 308 1 337 4 112 2 115 2 366 1 238 1 98 1 352 1 343 1 77 4 353 1 328 3 
347 1 33 1 354 1 80 1 321 1 10 1 67 1 308 1 309 1 337 2 84 1 39 1 98 1 343 1 77 2 353 1 
354 2 67 1 308 2 337 3 84 1 112 1 73 1 238 1 98 1 343 1 77 3 353 2 328 1 
354 5 81 1 80 1 337 9 84 1 366 1 343 1 328 7 132 1 33 1 271 1 67 1 308 2 112 4 137 1 186 1 115 2 238 3 73 1 143 1 98 1 352 1 77 9 353 2 
354 5 81 1 80 1 337 9 84 1 366 1 343 1 328 7 132 1 33 1 271 1 67 1 308 2 112 4 137 1 186 1 115 2 238 3 73 1 143 1 98 1 352 1 77 9 353 2 
86 1 34 1 270 1 
362 1 34 1 331 2 
253 2 181 2 236 1 365 2 82 2 118 2 358 2 377 1 
102 1 168 1 51 1 82 2 264 2 122 1 3 1 265 1 358 2 172 1 56 1 363 1 298 1 365 3 89 1 345 1 348 1 204 1 207 1 303 1 273 2 253 2 373 1 181 3 110 1 65 1 92 2 279 1 377 1 93 2 282 1 184 1 185 1 14 1 236 1 332 2 118 2 
253 1 175 1 311 1 181 1 275 1 365 1 82 1 118 1 358 1 377 1 
335 1 181 1 34 1 357 1 82 1 91 1 246 1 158 1 86 1 175 1 365 1 140 1 381 1 288 1 
335 2 253 1 181 1 34 1 82 1 91 2 358 1 158 1 86 1 175 1 365 1 140 1 118 1 381 1 288 1 
335 1 297 1 63 1 58 1 91 1 
335 2 252 1 62 1 63 1 86 1 58 1 34 1 91 2 
335 1 58 1 91 1 
335 1 48 1 63 1 253 1 275 1 181 1 91 1 82 1 358 1 377 1 175 1 311 1 365 1 118 1 
34 1 
335 2 252 1 63 1 86 1 58 1 34 1 91 2 333 1 
335 5 252 1 206 1 63 2 191 1 304 1 34 1 91 5 231 1 150 2 86 1 188 1 58 2 237 2 71 2 117 1 74 1 344 1 165 1 
236 1 270 1 
216 1 180 1 253 1 181 2 82 2 358 1 365 2 236 2 118 1 
350 1 285 1 59 1 
204 1 168 1 52 1 51 1 181 1 110 1 264 1 122 1 279 1 93 1 282 1 185 1 56 1 236 1 365 1 332 1 
204 1 168 1 51 1 253 1 181 2 110 1 122 1 82 1 264 1 279 1 93 1 282 1 185 1 56 1 379 1 59 1 365 2 332 1 118 1 47 1 
379 1 253 3 181 3 236 1 365 3 82 3 358 1 118 3 
253 1 175 1 311 1 181 1 365 1 82 1 118 1 
216 1 180 1 253 1 175 1 181 1 365 1 82 1 118 1 358 1 
335 1 216 1 102 1 168 1 51 1 122 1 82 3 264 1 3 1 265 1 358 2 172 1 56 1 298 1 175 1 365 4 248 1 348 1 204 1 303 1 273 2 253 3 373 1 181 4 110 1 277 1 91 1 65 1 92 1 158 1 279 1 377 1 93 1 282 1 184 1 185 1 379 1 236 1 140 1 332 1 118 3 381 1 288 1 47 1 
379 1 253 1 181 2 236 1 365 2 107 1 82 2 118 1 246 1 
335 1 216 1 253 3 181 3 34 1 218 1 91 1 82 3 358 1 158 1 379 2 175 1 365 3 140 1 248 1 118 3 288 1 381 1 47 1 
216 1 253 2 181 2 82 2 358 1 379 1 285 1 365 2 59 1 118 2 
204 1 168 1 51 1 181 1 110 1 264 1 122 1 279 1 93 1 282 1 185 1 56 1 236 1 365 1 332 1 
204 1 168 1 51 1 181 1 110 1 264 1 122 1 93 1 338 1 282 1 185 1 236 1 365 1 224 1 332 1 
49 1 166 1 102 1 3 1 322 1 123 1 172 2 298 1 299 1 59 2 29 1 88 1 348 1 207 2 303 1 273 2 373 1 92 4 350 2 284 1 15 1 285 2 214 1 260 1 
253 1 175 1 181 1 365 1 82 1 118 1 158 1 100 1 
216 1 253 4 181 5 82 5 171 1 323 1 358 1 246 1 379 2 365 5 236 1 107 1 118 4 47 1 
253 2 175 1 311 1 181 2 365 2 82 2 118 2 100 1 
232 1 42 1 
232 1 42 1 
38 1 141 1 
38 1 141 1 
38 1 141 1 
232 1 97 1 42 1 
232 1 167 1 42 1 
38 1 232 2 258 1 96 1 141 1 42 2 
232 1 97 1 42 1 
232 1 97 1 42 1 
251 1 232 1 42 1 
251 1 232 1 42 1 
251 1 232 1 42 1 
335 2 179 1 19 1 192 1 34 1 91 2 278 1 219 2 295 3 232 2 351 1 258 1 124 2 223 1 152 2 42 2 7 2 327 1 203 2 
335 1 167 1 192 1 82 2 147 1 295 1 219 1 245 1 197 1 124 1 365 2 152 1 27 1 203 1 253 2 181 2 91 1 13 1 232 1 235 1 236 1 42 1 118 2 76 1 
33 1 80 1 81 1 
33 1 80 1 309 1 
81 2 80 3 276 1 209 1 309 1 177 1 
81 1 80 2 276 1 127 1 209 1 309 1 
81 1 80 2 276 1 209 2 309 1 
49 1 335 5 166 1 263 1 103 2 147 1 324 1 362 1 150 1 106 1 86 1 58 1 268 1 29 1 129 1 252 1 31 2 63 4 304 3 34 2 91 5 331 3 12 1 13 1 231 1 235 1 71 1 237 1 16 2 40 1 117 2 260 1 
79 1 49 3 335 9 166 3 263 1 103 6 23 1 195 1 362 3 150 2 297 5 125 1 86 1 58 6 367 1 268 2 29 3 129 3 226 5 252 1 31 6 63 7 304 8 34 5 91 9 35 1 331 9 13 4 231 1 237 2 71 2 40 2 117 6 74 1 260 3 
49 1 335 3 166 1 103 2 362 2 150 1 106 1 86 1 268 1 129 1 29 1 31 2 63 2 304 3 34 3 91 3 331 4 12 1 13 1 71 1 237 1 40 1 16 1 117 2 74 1 260 1 
79 1 49 2 335 4 166 2 103 4 195 1 362 3 150 1 106 1 86 1 268 1 129 2 29 2 31 4 63 3 304 5 34 4 91 4 35 1 331 7 12 1 13 2 71 1 237 1 40 1 16 2 117 4 74 1 260 2 
169 1 110 1 270 1 
110 1 8 1 
243 1 
282 1 110 1 
282 1 185 1 32 1 169 2 110 3 342 1 
282 1 185 1 110 1 
173 1 110 1 
166 1 207 4 262 1 64 2 322 3 157 1 294 1 92 7 83 1 172 3 95 1 116 1 214 2 128 1 60 1 119 1 260 1 
166 1 207 4 262 1 64 2 322 3 157 1 294 1 92 7 83 1 172 3 95 1 116 1 214 2 128 1 60 1 119 1 260 1 
166 1 207 4 262 1 356 1 64 2 322 3 157 1 294 1 92 7 83 1 172 3 95 1 116 1 214 2 128 1 60 1 119 1 260 1 
49 2 166 3 262 4 3 1 322 8 294 1 83 2 172 13 54 1 198 1 128 2 129 3 29 3 130 1 60 2 348 1 207 16 303 1 272 1 273 2 305 1 373 1 64 3 157 1 208 4 92 29 256 1 94 1 95 1 116 1 214 4 315 3 119 2 260 4 
166 1 262 1 3 2 322 4 294 1 220 1 83 1 172 4 54 1 126 1 128 1 60 1 348 2 303 2 207 5 273 4 373 2 64 2 92 9 95 1 116 1 214 3 119 1 260 1 
319 1 354 1 81 1 80 2 51 1 264 1 4 1 337 2 84 1 302 1 343 1 328 1 177 1 131 1 369 1 204 1 33 1 307 1 67 1 308 1 281 1 183 1 309 1 93 1 332 1 316 1 98 1 77 2 164 1 353 1 
319 1 217 1 354 1 81 1 80 2 51 1 264 1 4 1 296 1 337 3 84 1 26 1 302 1 343 1 177 1 328 2 131 1 369 1 204 1 33 1 67 1 308 1 183 1 309 1 93 1 332 1 316 1 77 3 164 1 353 1 
217 1 354 1 80 2 81 1 51 1 264 1 4 1 337 2 84 1 26 1 302 1 343 1 328 2 177 1 131 1 369 1 204 1 33 1 67 1 183 1 309 1 93 1 332 1 316 1 77 2 
168 1 51 1 264 1 296 1 104 1 359 1 337 1 84 2 57 1 302 2 204 1 369 2 205 1 110 1 308 1 93 1 378 1 282 1 113 1 332 1 316 2 77 1 353 1 
319 1 81 1 80 2 51 1 264 1 4 1 337 1 84 1 26 1 302 1 177 1 131 1 369 1 204 1 33 1 307 1 308 1 183 1 309 1 93 1 332 1 316 1 98 1 77 1 164 1 353 1 
182 1 
190 2 335 5 51 1 145 2 246 1 340 2 148 1 150 1 57 1 58 6 252 3 204 1 304 2 110 1 158 1 71 1 72 1 117 2 261 1 168 2 21 2 357 1 170 1 264 2 82 1 221 1 359 1 266 1 362 2 174 1 86 1 364 1 325 2 175 1 365 1 268 1 90 1 370 1 371 1 134 2 181 1 34 2 91 5 331 2 93 2 282 1 231 1 138 4 187 1 237 1 140 1 332 2 99 2 381 1 288 1 
335 3 190 1 357 1 82 1 246 1 266 1 148 1 174 1 175 1 58 2 365 1 252 1 371 1 181 1 91 3 158 1 138 2 187 1 140 1 333 1 381 1 288 1 
335 3 357 1 82 1 246 1 266 1 148 1 340 1 174 1 86 1 58 1 175 1 365 1 252 1 371 1 181 1 34 1 91 3 158 1 138 3 187 1 140 1 333 1 381 1 288 1 
335 3 190 1 21 1 357 1 82 1 246 1 266 1 148 1 340 1 174 1 86 1 175 1 58 2 365 1 252 1 371 1 181 1 34 1 91 3 158 1 138 3 187 1 140 1 333 1 381 1 288 1 
335 5 190 4 21 4 145 2 170 1 357 1 82 1 146 1 246 1 221 1 266 1 340 4 148 1 362 2 150 1 199 1 174 1 24 1 86 5 325 2 58 7 175 1 365 1 252 3 371 1 304 1 134 2 375 1 181 1 34 5 91 5 158 1 231 1 138 6 187 1 71 1 237 1 140 1 117 1 333 1 99 2 75 1 381 1 288 1 
335 4 190 2 145 2 246 1 148 1 340 2 150 1 58 4 252 2 304 1 158 1 71 1 117 1 21 2 170 1 357 1 82 1 221 1 266 1 362 2 174 1 364 1 86 1 175 1 325 2 365 1 371 1 181 1 134 2 34 2 91 4 331 2 231 1 138 4 187 1 140 1 237 1 99 2 288 1 381 1 
190 2 335 4 21 2 145 2 170 1 357 1 82 1 146 1 246 1 221 1 266 1 340 2 148 1 362 2 150 1 174 1 199 1 86 1 58 4 325 2 175 1 365 1 252 2 371 1 304 1 134 2 181 1 34 1 91 4 158 1 231 1 138 4 187 1 71 1 140 1 237 1 117 1 99 2 75 1 381 1 288 1 
190 2 335 4 21 2 145 2 170 1 357 1 82 1 146 1 246 1 221 1 266 1 340 2 148 1 362 2 150 1 174 1 199 1 86 1 58 4 325 2 175 1 365 1 252 2 371 1 304 1 134 2 181 1 34 1 91 4 158 1 231 1 138 4 187 1 71 1 140 1 237 1 117 1 99 2 75 1 381 1 288 1 
190 2 335 4 242 1 21 2 145 2 357 1 82 1 246 1 221 1 266 1 340 2 148 1 150 1 174 1 151 1 86 1 58 4 175 1 365 1 252 2 371 1 304 1 181 1 34 1 91 4 331 2 376 1 158 1 349 2 231 1 211 2 138 4 187 1 71 1 140 1 237 1 117 1 99 2 75 1 381 1 288 1 
335 4 190 3 21 3 145 2 170 1 357 1 82 1 146 1 246 1 221 1 266 1 148 1 340 3 362 2 150 1 174 1 199 1 86 1 325 2 175 1 58 5 365 1 252 2 371 1 304 1 134 2 181 1 375 1 34 1 91 4 158 1 231 1 138 5 187 1 71 1 237 1 140 1 117 1 99 2 75 1 381 1 288 1 
335 4 190 3 21 3 145 2 170 1 357 1 82 1 146 1 246 1 221 1 266 1 148 1 340 3 362 2 150 1 174 1 199 1 86 1 325 2 175 1 58 5 365 1 252 2 371 1 304 1 134 2 181 1 375 1 34 1 91 4 158 1 231 1 138 5 187 1 71 1 237 1 140 1 117 1 99 2 75 1 381 1 288 1 
335 4 190 2 145 2 246 1 148 1 340 2 150 1 58 4 252 2 304 1 158 1 349 2 211 2 71 1 117 1 21 2 357 1 82 1 221 1 266 1 174 1 364 1 86 1 175 1 365 1 371 1 181 1 34 1 91 4 376 1 331 2 231 1 138 4 187 1 140 1 237 1 99 2 288 1 381 1 
166 1 102 1 3 1 322 2 294 1 172 3 298 1 299 1 59 1 60 1 270 1 348 1 303 1 207 3 273 2 373 1 64 1 92 6 95 1 350 1 285 1 116 1 236 2 214 2 119 1 260 1 
49 1 166 1 102 2 262 1 322 2 3 2 265 1 172 7 339 1 198 2 298 1 59 13 129 3 29 3 345 1 348 2 303 2 207 10 272 1 273 4 228 1 373 2 208 4 92 17 350 13 285 4 236 1 312 1 214 1 315 3 43 1 78 1 260 3 
121 1 102 1 168 1 51 1 52 1 122 1 264 1 82 1 3 1 265 1 172 1 56 1 298 1 365 2 301 1 345 1 204 1 348 1 303 1 207 1 253 1 273 2 181 2 373 1 110 1 92 2 279 1 93 1 282 1 185 1 379 1 285 1 236 1 332 1 118 1 189 1 78 1 47 1 
239 2 50 2 49 2 102 3 51 2 3 3 294 1 56 2 298 3 59 7 60 1 345 1 348 3 204 2 303 3 207 10 253 1 110 2 64 1 65 2 350 7 116 1 214 4 118 1 119 1 78 1 260 3 166 3 168 1 262 4 355 2 264 3 82 1 122 2 322 8 265 1 172 10 365 3 26 1 129 2 29 2 30 2 273 6 274 1 373 3 181 3 92 20 279 2 93 3 282 2 95 1 185 2 379 1 285 7 236 2 332 3 334 1 289 1 47 1 
102 2 168 2 51 2 82 1 264 7 3 2 265 1 359 1 172 1 341 1 85 1 57 1 298 2 299 1 365 1 26 1 89 2 345 1 204 2 348 2 9 1 303 2 207 1 253 1 273 4 372 1 181 1 373 2 110 3 306 1 11 1 92 2 281 1 93 8 282 2 379 1 332 8 118 1 45 1 
49 1 166 1 216 1 102 1 82 1 322 1 3 1 358 1 172 2 267 1 298 1 59 1 365 1 129 1 29 1 348 1 303 1 207 1 253 1 273 2 373 1 181 1 92 3 350 1 285 1 214 1 118 1 78 1 260 1 
348 1 102 1 303 1 207 2 262 1 273 2 373 1 322 1 3 1 92 2 123 1 350 1 298 1 285 1 299 1 59 1 29 1 260 1 
49 1 348 1 166 1 102 1 303 1 273 2 373 1 322 1 3 1 92 2 172 2 350 1 298 1 284 1 285 1 299 1 59 1 214 1 
49 1 166 1 348 1 102 1 303 1 207 2 262 1 273 2 373 1 322 2 3 1 92 4 172 2 350 2 298 1 285 2 299 1 59 2 214 1 129 1 29 1 260 1 
348 1 102 1 303 1 207 2 262 1 273 2 373 1 306 1 322 1 3 1 92 2 123 1 350 1 298 1 285 1 59 1 29 1 260 1 
49 1 348 1 166 1 102 1 303 1 273 2 373 1 306 1 322 1 3 1 92 2 172 2 350 1 298 1 284 1 285 1 59 1 214 1 
49 1 166 1 348 1 102 1 303 1 207 2 262 1 273 2 373 1 306 1 322 2 3 1 92 4 172 2 350 2 298 1 285 2 59 2 214 1 129 1 29 1 260 1 
49 1 166 1 348 1 102 1 303 1 207 2 262 1 273 2 373 1 322 2 3 1 92 4 172 2 350 2 298 1 285 2 59 2 214 1 129 1 29 1 260 1 
102 1 168 1 51 1 122 1 264 1 3 1 265 1 172 1 56 1 298 1 365 1 345 1 204 1 348 1 207 1 303 1 273 2 181 1 373 1 110 1 65 1 92 2 279 1 93 1 282 1 185 1 236 1 332 1 
102 1 168 1 51 1 122 1 264 1 3 1 265 1 338 1 172 1 298 1 365 1 224 1 345 1 204 1 348 1 207 1 303 1 273 2 181 1 373 1 110 1 92 2 93 1 282 1 185 1 236 1 18 1 332 1 
49 1 166 1 348 1 102 1 303 1 207 2 262 1 273 2 373 1 322 2 3 1 92 4 172 2 350 2 298 1 285 2 59 2 214 1 129 1 29 1 78 1 260 1 
49 1 166 1 102 1 262 1 51 1 355 1 122 1 264 1 322 2 3 1 172 2 56 1 298 1 59 2 365 1 29 1 129 1 204 1 348 1 207 2 303 1 273 2 181 1 373 1 110 1 65 1 92 4 279 1 281 1 93 1 282 1 185 1 350 2 285 2 214 1 332 1 260 1 
49 1 166 1 216 1 102 1 262 1 336 1 82 1 322 1 3 1 358 1 172 1 298 1 365 1 59 1 129 1 29 1 348 1 303 1 207 2 253 1 273 2 373 1 181 1 92 3 350 1 285 1 118 1 78 1 260 1 
49 2 317 1 166 2 241 2 262 2 20 1 322 4 3 2 220 1 172 8 198 1 129 3 29 3 178 1 348 2 303 2 207 9 272 1 273 4 373 2 208 2 92 17 159 1 280 1 233 1 313 1 214 2 315 1 161 2 260 3 
49 2 166 2 241 4 101 1 262 2 20 2 322 4 3 3 220 1 54 2 172 12 129 3 29 3 154 1 109 1 348 3 303 3 207 14 272 2 227 1 155 1 273 6 373 3 254 1 208 2 92 26 159 1 280 1 233 2 313 1 214 2 161 1 315 2 260 3 
49 3 241 4 101 1 3 3 294 1 247 1 54 1 198 2 154 1 60 1 109 1 348 3 207 22 303 3 155 1 254 1 64 1 208 5 159 1 116 1 313 1 214 3 315 3 161 1 119 1 260 6 317 1 166 4 262 3 20 1 322 6 220 1 172 20 29 5 129 5 227 1 272 3 273 6 373 3 92 42 280 1 95 1 233 2 
317 1 49 4 241 4 166 5 101 1 262 2 20 1 3 4 322 7 294 1 220 1 247 1 54 2 172 21 198 2 129 5 29 5 60 1 154 1 109 1 348 4 303 4 207 22 227 1 272 3 155 1 273 8 373 4 254 1 64 1 208 5 92 43 159 1 280 1 95 1 233 2 313 1 116 1 214 5 161 1 315 3 119 1 260 6 
49 3 166 4 241 3 101 1 262 2 20 1 322 5 3 1 294 1 220 1 172 15 198 1 129 4 29 4 60 1 154 1 109 1 348 1 303 1 207 17 272 2 227 1 155 1 273 2 373 1 254 1 64 1 208 3 92 32 159 1 280 1 95 1 233 1 313 1 116 1 214 3 161 1 315 2 119 1 260 5 
232 1 351 1 258 1 124 1 223 1 300 1 152 1 42 1 219 1 203 1 
197 1 167 1 
149 1 232 1 124 1 152 1 66 1 42 1 219 1 202 1 203 1 
335 1 179 1 19 1 192 1 34 1 91 1 278 1 219 1 295 2 232 1 351 1 258 1 124 1 223 1 152 1 42 1 7 1 203 1 
335 1 179 1 19 1 192 1 34 1 91 1 278 1 219 1 295 2 232 1 351 1 258 1 124 1 223 1 152 1 42 1 7 1 203 1 
335 1 179 1 19 1 192 1 34 1 91 1 278 1 219 1 295 2 232 1 351 1 258 1 124 1 223 1 152 1 42 1 7 1 203 1 
96 1 97 1 41 1 
96 1 97 1 41 1 
251 1 234 1 
251 1 234 1 96 1 
27 1 245 1 
335 1 167 1 82 2 147 1 219 1 295 1 245 1 197 1 55 1 124 1 365 2 152 1 27 1 7 1 203 1 179 1 63 1 253 2 181 2 91 1 13 1 232 1 235 1 236 1 42 1 118 2 76 1 
97 1 41 1 
251 1 234 1 96 1 
102 1 51 1 82 2 264 2 3 1 265 1 53 1 172 1 200 1 298 1 365 2 269 1 89 2 345 1 204 1 348 1 303 1 133 1 207 1 273 2 372 1 181 2 373 1 110 1 136 1 92 2 93 2 282 1 332 2 45 1 78 1 
204 1 33 1 81 1 80 2 51 1 264 2 4 1 36 1 281 1 183 1 309 1 93 2 212 1 26 1 332 2 316 1 162 1 164 1 177 1 
204 1 33 1 81 1 80 2 51 1 264 1 4 1 36 1 183 1 309 1 196 1 93 1 26 1 332 1 316 1 164 1 177 1 
204 1 205 1 168 1 51 1 110 1 264 1 230 1 359 1 93 1 282 1 212 1 57 1 332 1 316 1 
204 1 33 1 81 1 80 2 51 1 264 1 4 1 36 1 183 1 309 1 93 1 212 1 26 1 332 1 316 1 162 1 164 1 177 1 
310 1 
304 1 86 1 188 1 34 1 117 1 270 1 344 1 
335 1 170 1 362 1 150 1 86 1 325 1 58 1 252 1 304 1 134 1 34 2 91 1 331 1 231 1 71 1 237 1 117 1 
1 2 335 5 50 2 49 2 291 2 292 2 51 3 103 6 194 1 150 4 58 5 249 2 342 1 8 3 344 1 204 4 252 3 304 9 110 10 156 1 160 1 71 4 117 8 260 2 318 2 166 2 168 1 169 2 264 3 362 6 173 2 86 2 268 2 129 2 29 2 368 2 176 2 90 1 31 6 374 1 34 8 91 5 331 12 281 1 93 3 282 3 185 3 231 4 286 2 188 1 237 4 287 1 332 3 288 2 
335 1 49 2 318 2 166 2 291 1 103 5 360 1 362 3 150 2 86 2 58 1 268 1 129 2 29 2 154 1 90 1 109 1 252 1 31 5 272 1 227 1 155 1 304 8 254 1 34 5 91 1 208 1 331 6 231 2 71 2 237 2 117 5 315 1 120 1 260 2 
335 1 48 1 318 2 166 1 291 1 82 1 146 1 358 1 150 1 175 1 365 1 60 1 304 2 253 1 181 1 275 1 91 1 229 1 377 1 231 1 95 1 311 1 71 1 237 1 117 2 118 1 119 1 260 2 
304 1 34 1 231 1 150 1 86 1 188 1 237 1 71 1 117 1 344 1 
50 1 49 2 318 2 166 2 291 1 31 5 304 5 103 5 34 5 331 10 362 5 117 5 129 2 29 2 260 2 
335 1 252 1 86 1 58 1 34 1 91 1 
0 1 261 1 335 3 168 2 51 1 264 4 359 1 150 2 57 1 58 4 268 2 90 2 204 1 252 2 370 1 304 2 110 1 91 3 156 2 255 1 93 4 282 1 231 1 71 2 237 2 160 1 117 2 332 4 74 1 
102 1 168 1 51 1 264 1 82 2 122 1 3 1 265 1 358 2 172 1 56 1 298 1 365 3 348 1 204 1 303 1 273 2 253 2 373 1 181 3 110 1 65 1 92 1 279 1 377 1 93 1 184 1 282 1 185 1 236 1 332 1 118 2 
31 2 304 1 103 2 34 4 64 1 331 4 362 2 231 1 150 1 86 2 237 1 71 1 117 2 268 1 90 1 
124 1 114 1 219 1 
351 1 124 1 27 1 219 1 210 1 
124 1 114 1 219 1 
124 1 114 1 219 1 
124 1 380 1 219 1 
124 1 380 1 219 1 
124 1 380 1 219 1 
124 1 219 1 
232 1 42 1 
166 1 348 2 207 4 303 2 262 1 273 4 373 2 64 1 322 3 3 2 294 1 92 8 172 4 54 1 95 1 116 1 214 2 119 1 60 1 260 1 
166 1 207 3 64 1 322 2 294 1 92 6 172 3 95 1 116 1 214 2 119 1 60 1 270 1 260 1 
49 1 346 1 166 1 348 1 303 1 207 2 273 2 262 1 373 1 322 2 3 1 92 4 172 2 214 1 129 1 29 1 260 1 
49 1 166 1 207 3 272 1 322 1 208 2 92 7 172 4 198 1 214 1 315 1 129 1 29 1 260 1 
49 2 166 3 262 4 322 9 3 2 294 1 172 12 54 2 339 1 198 1 29 2 129 2 60 2 348 2 207 11 303 2 273 4 373 2 64 1 208 2 92 23 95 1 283 1 116 1 312 1 214 5 315 2 119 2 260 3 
208 1 92 1 172 1 
207 1 315 1 92 1 
346 1 50 1 49 1 348 1 166 1 303 1 207 3 273 2 262 1 373 1 3 1 322 3 92 6 172 3 214 2 129 1 29 1 260 1 
49 2 166 2 262 1 3 1 322 2 220 1 172 6 129 2 29 2 154 1 109 1 348 1 303 1 207 6 272 1 227 1 273 2 155 1 373 1 254 1 208 1 92 12 214 1 315 1 260 2 
166 1 95 1 207 3 262 1 214 1 322 2 92 6 60 1 119 1 172 3 260 1 
348 1 207 1 303 1 262 1 273 2 373 1 322 2 3 1 294 1 92 3 172 2 54 1 283 1 116 1 214 1 60 1 119 1 
348 1 166 2 303 1 207 5 273 2 262 2 373 1 3 1 322 5 229 1 220 1 92 10 172 5 95 1 214 3 119 2 60 2 260 2 
348 1 207 2 303 1 262 1 273 2 373 1 322 1 3 1 92 2 29 1 220 1 260 1 
49 1 166 1 348 1 303 1 207 2 273 2 262 1 373 1 322 2 3 1 220 1 92 4 172 2 214 1 129 1 29 1 260 1 
317 1 348 3 303 3 207 1 273 6 262 1 373 3 3 3 322 2 92 3 220 1 54 1 172 2 283 1 214 1 119 1 60 1 
317 1 49 2 166 4 262 4 3 5 322 10 294 1 220 1 54 2 172 16 198 1 129 3 29 3 130 1 60 3 346 1 348 5 303 5 207 16 272 1 305 1 273 10 373 5 64 1 208 4 92 32 94 1 95 2 283 1 116 1 214 6 315 3 119 3 260 5 
166 1 322 2 3 1 294 1 220 1 172 5 198 1 129 1 29 1 60 1 154 1 348 1 303 1 207 6 272 1 273 2 373 1 64 1 208 2 92 11 95 1 116 1 214 2 315 1 119 1 260 2 
166 1 3 2 322 2 294 1 220 1 172 4 154 1 60 1 346 1 348 2 303 2 207 4 272 1 273 4 373 2 64 1 208 1 92 8 95 1 116 1 214 2 315 1 119 1 260 1 
49 2 166 3 262 1 3 3 322 4 294 1 220 1 172 10 54 1 129 2 29 2 60 1 154 1 346 1 109 1 348 3 303 3 207 9 272 1 227 1 273 6 155 1 373 3 254 1 64 1 208 1 92 19 95 1 116 1 214 3 315 1 119 1 260 3 
49 1 166 2 262 2 3 3 322 5 294 1 220 1 54 1 172 7 129 2 29 2 60 1 154 1 346 1 109 1 348 3 303 3 207 10 272 1 227 1 273 6 155 1 373 3 254 1 64 1 208 1 92 17 95 1 116 1 214 3 315 1 119 1 260 3 
166 1 322 2 3 1 294 1 220 1 172 5 198 1 129 1 29 1 60 1 154 1 348 1 303 1 207 6 272 1 273 2 373 1 64 1 208 2 92 11 95 1 116 1 214 2 315 1 119 1 260 2 
49 2 166 2 262 1 3 1 322 2 220 1 172 6 129 2 29 2 154 1 109 1 348 1 303 1 207 6 272 1 227 1 273 2 155 1 373 1 254 1 208 1 92 12 214 1 315 1 260 2 
49 1 166 2 262 2 3 4 322 5 294 1 220 1 172 8 54 2 129 2 29 2 60 1 154 1 346 1 109 1 348 4 303 4 207 10 272 1 227 1 155 1 273 8 373 4 254 1 64 1 208 1 92 18 95 1 116 1 214 3 315 1 119 1 260 3 
317 1 49 2 166 2 262 3 3 4 322 6 220 1 172 7 54 2 129 3 29 3 154 1 109 1 348 4 303 4 207 9 272 1 227 1 155 1 273 8 373 4 254 1 208 1 92 16 214 3 315 1 260 3 
166 1 207 3 262 3 322 6 294 2 92 7 172 4 95 1 116 1 214 3 119 3 60 3 260 1 
317 1 49 1 166 2 262 1 3 4 322 4 294 1 220 1 172 8 54 2 129 2 29 2 60 1 154 1 109 1 348 4 303 4 207 10 272 1 227 1 155 1 273 8 373 4 254 1 64 1 208 1 92 18 95 1 116 1 214 3 315 1 119 1 260 3 
181 1 236 1 365 1 82 1 107 1 215 1 246 1 
181 1 320 1 244 1 82 1 246 1 139 1 236 1 365 1 6 1 107 1 215 1 290 1 
282 1 204 1 57 1 168 1 51 1 110 1 264 1 332 1 359 1 270 1 93 1 
204 1 168 1 253 1 51 1 181 2 110 1 122 1 82 1 264 1 93 1 282 1 185 1 56 1 379 1 236 1 365 2 332 1 118 1 
51 1 264 1 82 2 122 1 56 1 173 1 175 1 365 2 176 1 204 1 253 1 181 2 110 3 156 1 158 1 93 1 282 2 185 2 379 1 236 1 140 1 332 1 118 2 
51 1 264 2 82 2 122 1 338 1 173 1 175 1 365 2 176 1 204 1 253 1 181 2 330 1 110 3 156 1 158 1 93 2 282 2 185 2 379 1 236 1 140 1 332 2 118 2 
335 2 168 1 51 1 169 1 264 3 173 1 86 1 58 1 8 1 176 1 204 1 330 1 110 4 34 1 91 2 156 1 111 1 93 3 282 1 185 1 213 1 332 3 288 1 
335 2 204 1 168 1 51 1 169 1 330 1 34 1 110 4 91 2 264 3 156 1 93 3 282 1 185 1 173 1 86 1 58 1 332 3 8 1 288 1 176 1 368 1 
204 1 51 1 264 1 332 1 11 1 93 1 
250 1 204 3 9 1 168 2 51 2 372 1 110 3 264 6 11 1 68 1 281 1 93 7 282 2 185 1 341 1 85 1 26 1 332 7 342 1 163 1 89 1 
239 1 166 1 102 2 51 1 355 1 122 1 82 1 264 1 322 2 3 2 294 1 172 3 56 1 298 2 59 1 365 2 269 1 60 1 204 1 348 2 207 3 303 2 253 1 273 4 181 2 373 2 110 1 64 1 65 1 92 6 281 1 279 1 93 1 282 1 95 1 185 1 350 1 379 1 285 1 236 2 116 1 214 2 332 1 118 1 119 1 260 1 78 1 
335 3 1 1 168 1 169 1 264 1 150 2 86 1 58 2 249 1 8 1 368 1 344 1 252 1 63 1 304 1 34 1 110 2 91 3 93 1 231 2 286 1 188 1 71 2 237 2 160 1 117 1 332 1 288 1 
204 2 51 1 169 1 110 2 264 2 11 1 281 1 93 2 282 1 185 1 287 1 332 2 342 1 
204 1 168 1 51 1 330 1 110 1 264 4 281 1 359 1 93 4 222 1 282 1 57 1 332 4 
250 1 204 2 51 1 110 1 264 2 156 1 93 2 257 1 282 1 185 1 332 2 163 1 334 1 44 1 
204 1 33 1 80 1 168 1 51 1 264 1 332 1 183 1 309 1 93 1 
282 1 204 1 200 1 51 1 372 1 110 1 26 1 264 2 332 2 281 1 93 2 
204 2 168 1 51 2 372 1 110 3 264 4 156 1 359 1 281 1 93 5 222 1 282 2 341 1 57 1 85 1 332 5 
204 2 168 1 51 2 372 1 110 3 264 4 156 1 359 1 281 1 93 5 222 1 282 2 341 1 57 1 25 1 332 5 
204 1 168 1 253 1 51 1 181 2 110 1 122 1 82 1 264 1 93 1 338 1 282 1 185 1 379 1 236 1 365 2 332 1 118 1 
250 1 204 2 51 1 110 1 264 1 156 1 68 1 93 1 282 1 185 1 332 1 342 1 163 1 
144 1 236 1 2 1 293 1 201 1 
335 2 63 1 144 2 22 1 34 1 293 1 2 2 91 2 158 1 86 1 175 1 236 1 140 1 17 1 248 1 108 1 201 2 288 1 381 1 
133 1 181 1 2 1 293 1 136 1 82 1 53 1 365 1 201 1 
22 1 293 1 108 1 
354 1 67 1 343 1 270 1 
354 1 67 1 308 1 343 1 77 1 337 1 353 1 
84 1 302 1 77 1 
105 1 259 1 354 1 5 1 39 2 67 1 308 1 98 1 343 1 77 3 337 3 353 1 
354 1 115 1 67 1 308 1 343 1 77 2 328 1 337 2 353 1 
112 1 33 1 80 1 81 1 354 1 352 1 308 1 98 1 77 1 337 1 353 1 
354 1 67 1 308 1 98 1 77 1 337 1 353 1 
67 2 308 1 98 1 343 1 77 1 337 1 353 1 
240 1 354 1 67 1 308 2 337 2 225 1 98 1 77 2 353 2 61 1 
354 2 67 1 308 1 337 3 137 1 112 1 238 1 143 1 98 1 343 1 77 3 353 1 328 2 
33 1 354 1 80 2 81 1 67 1 308 1 309 1 337 2 98 1 343 1 77 2 353 1 46 1 177 1 328 1 
354 2 67 1 308 2 337 4 112 1 115 1 366 1 238 1 98 1 343 1 77 4 353 2 328 2 
354 1 67 1 308 1 98 1 343 1 77 1 337 1 353 1 
354 3 67 2 308 1 337 4 105 1 112 1 5 1 39 1 238 1 153 1 343 2 77 4 328 2 353 1 
354 1 193 1 67 1 308 1 337 2 69 1 186 1 98 1 343 1 77 2 353 1 328 1 
105 2 354 1 5 1 39 2 142 1 67 1 308 1 98 1 343 1 77 3 337 3 353 1 
354 2 329 2 314 1 28 1 
308 1 98 1 37 1 77 1 337 1 353 1 
137 1 354 1 67 1 308 1 98 1 343 1 77 2 328 1 337 2 353 1 
361 1 
354 1 67 1 308 1 98 1 343 1 77 1 337 1 353 1 
354 1 308 1 67 1 337 3 137 1 39 1 98 1 343 1 77 3 328 1 353 1 
112 1 354 1 238 1 153 1 
354 1 67 1 

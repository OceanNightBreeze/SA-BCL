#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 85 2 44 1 45 4 141 9 300 1 169 1 50 1 366 1 278 5 233 1 70 1 209 1 306 2 126 2 336 2 12 1 238 1 199 1 339 1 340 2 129 1 266 2 78 9 378 2 80 3 82 6 135 1 
3 1 85 2 44 1 45 4 141 9 300 1 169 1 50 1 366 1 278 5 233 1 70 1 209 1 306 2 126 2 336 2 12 1 238 1 199 1 339 1 340 2 129 1 266 2 78 9 378 2 80 3 82 6 135 1 
3 1 85 2 44 1 45 5 141 10 300 1 169 1 50 1 366 1 278 6 233 1 70 1 209 1 306 2 126 2 336 2 12 1 238 1 199 1 339 1 340 2 129 1 266 2 78 10 378 2 80 4 82 7 135 1 
3 1 85 2 44 1 45 3 141 7 300 1 169 1 50 1 366 1 278 4 233 1 70 1 209 1 306 2 126 2 336 2 12 1 238 1 199 1 339 1 340 2 129 1 266 1 78 7 378 2 80 2 82 4 
306 1 126 1 336 1 44 1 45 2 340 1 141 4 300 1 129 1 266 2 78 4 378 1 80 1 278 3 233 1 82 3 135 1 209 1 
306 1 85 1 336 1 375 1 44 1 199 1 36 1 141 2 340 1 219 1 300 1 129 1 78 2 50 1 378 1 278 1 
85 1 336 2 12 1 44 1 45 1 141 3 300 1 129 1 78 3 378 2 80 1 278 2 82 1 
85 1 44 1 45 4 324 1 141 9 300 1 169 1 278 5 233 1 70 1 209 1 306 1 126 1 12 1 336 2 340 1 129 1 266 2 78 9 315 1 378 2 80 3 82 7 135 1 
85 1 44 1 45 4 324 1 141 9 300 1 169 1 278 5 233 1 70 1 209 1 306 1 126 1 12 1 336 2 340 1 129 1 266 2 78 9 315 1 378 2 80 3 82 7 135 1 
27 1 109 1 286 1 
274 1 
191 2 23 2 224 1 26 2 253 1 271 2 313 2 359 2 
2 1 322 1 88 1 354 1 66 2 187 1 359 3 191 2 23 2 170 1 52 2 328 1 329 2 26 2 29 1 253 1 210 2 256 1 147 1 150 1 11 1 103 1 216 1 217 1 218 1 313 3 267 1 181 1 14 1 316 1 224 1 38 1 269 1 271 2 185 2 136 1 320 1 
191 1 23 1 79 1 25 1 224 1 26 1 271 1 313 1 359 1 265 1 
299 1 213 1 62 1 20 1 140 1 359 1 313 1 265 1 191 1 221 1 223 1 145 1 27 1 109 1 
299 1 213 1 62 1 20 2 359 1 313 1 265 1 23 1 191 1 223 2 145 1 27 1 26 1 109 1 271 1 
223 1 261 1 20 1 215 1 212 1 
223 2 261 1 20 2 27 1 109 1 91 1 8 1 212 1 
223 1 261 1 20 1 
154 1 20 1 359 1 313 1 265 1 23 1 191 1 79 1 25 1 223 1 224 1 26 1 271 1 212 1 
27 1 
223 2 153 1 261 1 20 2 27 1 109 1 91 1 212 1 
334 1 197 1 20 5 261 2 48 1 376 1 230 1 91 1 292 1 248 2 223 5 249 2 27 1 109 1 100 1 71 1 258 2 194 1 212 2 
253 1 286 1 
311 1 65 1 359 2 313 2 191 2 23 1 26 1 253 2 271 1 
73 1 308 1 15 1 
11 1 322 1 354 1 66 1 216 1 313 1 359 1 52 1 181 1 316 1 328 1 207 1 269 1 253 1 185 1 136 1 
73 1 11 1 335 1 322 1 354 1 66 1 216 1 359 2 313 2 23 1 191 1 181 1 52 1 222 1 316 1 328 1 269 1 26 1 136 1 185 1 
191 3 23 3 335 1 26 3 253 1 271 1 313 3 359 3 
191 1 23 1 79 1 26 1 313 1 359 1 265 1 
191 1 23 1 311 1 26 1 65 1 271 1 313 1 359 1 265 1 
299 1 322 1 62 1 354 1 20 1 65 1 66 1 187 1 359 4 191 3 23 3 170 1 52 1 328 1 329 1 96 1 145 1 26 3 253 1 210 2 256 1 213 1 150 1 11 1 335 1 103 1 216 1 217 1 218 1 313 4 265 1 267 1 181 1 222 1 242 1 223 1 316 1 224 1 38 1 269 1 136 1 271 2 185 1 320 1 
191 2 23 1 335 1 26 1 253 1 140 1 313 2 359 2 297 1 
299 1 213 1 335 2 62 1 20 1 65 1 359 3 313 3 265 1 23 3 191 3 222 1 223 1 242 1 145 1 236 1 27 1 26 3 271 1 
73 1 335 1 65 1 359 2 313 2 23 2 191 2 26 2 271 1 15 1 
11 1 322 1 354 1 66 1 216 1 313 1 359 1 52 1 181 1 316 1 328 1 269 1 253 1 185 1 136 1 
322 1 66 1 216 1 313 1 359 1 94 1 52 1 181 1 344 1 316 1 328 1 269 1 253 1 185 1 136 1 
90 1 49 1 114 1 69 1 329 4 29 2 210 2 256 1 72 1 259 1 150 2 73 2 308 2 264 1 217 1 218 1 130 1 267 1 380 1 38 1 165 1 83 1 15 2 320 1 
213 1 191 1 23 1 277 1 26 1 313 1 359 1 265 1 
149 1 335 2 65 1 140 1 359 5 313 5 23 4 191 5 222 1 26 4 253 1 271 1 60 1 297 1 
277 1 191 2 23 2 79 1 26 2 313 2 359 2 265 1 
284 1 369 1 
284 1 369 1 
196 1 19 1 
196 1 19 1 
196 1 19 1 
330 1 284 1 369 1 
284 1 369 1 241 1 
196 1 19 1 379 1 284 2 369 2 360 1 
330 1 284 1 369 1 
330 1 284 1 369 1 
284 1 369 1 179 1 
284 1 369 1 179 1 
284 1 369 1 179 1 
123 1 176 2 20 2 239 1 284 2 240 1 104 1 157 2 360 1 116 1 115 2 51 1 223 2 368 1 27 1 369 2 294 3 9 2 332 2 
20 1 359 2 115 1 326 1 23 2 191 2 368 1 26 2 369 1 253 1 252 1 332 1 176 1 338 1 156 1 284 1 55 1 157 1 313 2 241 1 343 1 223 1 294 1 16 1 
306 1 126 1 340 1 
306 1 36 1 340 1 
306 3 365 1 126 2 36 1 168 1 232 1 
306 2 365 1 126 1 162 1 36 1 168 1 
306 2 126 1 365 1 36 1 168 2 
202 1 20 5 274 3 167 1 90 1 230 1 91 1 357 1 114 1 248 1 249 1 208 1 27 2 100 2 281 2 121 2 258 1 212 4 194 3 174 1 261 1 338 1 156 1 285 1 264 1 105 1 130 1 223 5 317 2 109 1 16 1 244 1 
0 1 202 2 20 9 274 9 48 1 90 3 139 5 91 1 230 1 114 3 248 2 249 2 27 5 208 1 100 6 281 6 121 6 258 2 212 7 194 8 372 1 174 3 198 1 338 4 261 6 215 5 285 3 264 3 105 2 158 1 130 3 290 1 223 9 109 1 225 1 
202 1 20 3 274 3 90 1 48 1 357 1 359 1 114 1 191 1 23 1 248 1 25 1 249 1 26 1 27 2 100 2 258 1 121 2 281 2 212 2 194 3 174 1 154 1 338 1 285 1 264 1 105 1 313 1 265 1 130 1 79 1 223 3 224 1 317 1 109 1 271 1 244 1 
0 1 274 6 48 1 90 2 191 1 100 4 281 4 194 5 198 1 154 1 338 2 285 2 105 1 158 1 109 1 244 1 202 1 20 4 357 1 359 1 114 2 23 1 248 1 25 1 249 1 27 3 26 1 258 1 121 4 212 3 174 2 264 2 313 1 265 1 130 2 79 1 223 4 224 1 317 2 271 1 
309 1 269 1 286 1 
269 1 31 1 
367 1 
322 1 269 1 
342 1 181 1 183 1 309 2 322 1 269 3 
181 1 322 1 269 1 
269 1 280 1 
298 1 150 3 74 1 101 1 87 1 264 1 49 3 130 1 118 1 95 1 329 7 172 1 133 1 254 1 29 4 72 2 120 2 
298 1 150 3 74 1 101 1 87 1 264 1 49 3 130 1 118 1 95 1 329 7 172 1 133 1 254 1 29 4 72 2 120 2 
298 1 150 3 74 1 228 1 101 1 87 1 264 1 49 3 130 1 118 1 95 1 329 7 172 1 133 1 254 1 29 4 72 2 120 2 
298 2 111 1 87 2 90 3 49 10 114 3 247 1 142 3 118 1 329 31 95 5 172 2 254 1 29 16 210 2 120 3 72 5 256 1 74 2 150 15 174 3 374 1 101 1 13 4 264 4 217 1 37 1 130 4 314 1 267 1 268 1 161 1 133 1 38 1 
298 1 87 1 356 1 49 4 205 1 118 1 329 9 95 1 172 1 29 5 254 1 210 4 256 2 120 2 72 3 150 4 74 1 264 1 217 2 130 1 314 1 267 2 38 2 133 1 
85 1 110 1 18 1 63 1 44 1 66 1 275 1 141 2 300 1 232 1 301 1 52 1 278 1 328 1 98 1 28 1 306 2 125 1 126 1 336 1 282 1 177 1 36 1 340 1 129 1 78 2 378 1 82 1 185 1 136 1 
85 1 110 1 63 1 44 1 66 1 275 1 141 3 300 1 232 1 301 1 52 1 278 1 328 1 98 1 28 1 304 1 333 1 306 2 125 1 126 1 336 1 177 1 36 1 340 1 78 3 378 1 82 2 318 1 185 1 136 1 
85 1 110 1 63 1 44 1 66 1 275 1 141 2 300 1 232 1 52 1 278 1 328 1 98 1 304 1 306 2 125 1 126 1 177 1 36 1 340 1 78 2 82 2 318 1 185 1 136 1 
85 2 43 1 110 2 322 1 229 1 66 1 141 1 52 1 302 1 328 1 192 1 98 2 333 1 125 2 336 1 337 1 78 1 107 1 378 1 316 1 269 1 185 1 136 1 
85 1 110 1 63 1 66 1 275 1 141 1 232 1 301 1 52 1 328 1 98 1 28 1 304 1 306 2 125 1 126 1 336 1 282 1 177 1 36 1 340 1 129 1 78 1 378 1 185 1 136 1 
305 1 
43 1 322 1 274 1 91 1 230 1 140 1 190 1 191 1 52 2 143 1 192 1 328 1 235 1 145 1 100 2 194 2 54 1 155 1 151 1 285 1 105 1 56 1 289 1 346 1 349 2 299 1 17 1 62 1 20 3 355 1 66 2 359 1 364 1 248 1 249 1 251 1 27 1 119 1 258 1 213 1 261 2 313 1 265 1 221 1 223 3 316 2 269 1 132 1 185 2 136 1 
299 1 213 1 54 1 62 1 153 1 261 2 20 3 46 1 91 1 140 1 359 1 313 1 265 1 190 1 191 1 221 1 223 3 251 1 145 1 346 1 132 1 349 2 
299 1 62 1 20 3 91 1 140 1 359 1 92 1 191 1 190 1 251 1 145 1 27 1 213 1 54 1 153 1 261 1 313 1 265 1 221 1 223 3 346 1 132 1 109 1 349 3 
299 1 213 1 54 1 62 1 153 1 261 2 20 3 46 1 91 1 140 1 77 1 359 1 313 1 92 1 265 1 190 1 191 1 221 1 223 3 251 1 145 1 346 1 27 1 132 1 109 1 349 3 
323 1 46 4 91 3 230 1 140 1 92 4 190 1 191 1 143 1 235 1 145 1 100 1 194 1 54 1 283 1 153 1 155 2 285 2 346 1 109 5 349 6 299 1 17 2 62 1 20 5 355 2 358 1 359 1 248 1 249 1 251 1 250 1 27 5 258 1 213 1 261 7 128 2 77 4 313 1 265 1 221 1 223 5 132 1 226 1 
299 1 17 1 62 1 20 2 274 1 355 1 230 1 140 1 359 1 190 1 191 1 248 1 143 1 249 1 251 1 235 1 145 1 27 1 100 1 258 1 194 1 213 1 54 1 155 1 285 1 313 1 265 1 289 1 221 1 223 2 346 1 132 1 349 2 
299 1 17 2 62 1 20 4 355 2 323 1 46 2 91 2 230 1 140 1 358 1 359 1 92 2 191 1 190 1 248 1 143 1 249 1 251 1 250 1 235 1 145 1 27 1 100 1 258 1 194 1 213 1 54 1 155 2 261 4 285 2 128 2 77 2 313 1 265 1 221 1 223 4 346 1 132 1 109 1 349 4 
299 1 17 2 62 1 20 4 355 2 323 1 46 2 91 2 230 1 140 1 358 1 359 1 92 2 191 1 190 1 248 1 143 1 249 1 251 1 250 1 235 1 145 1 27 1 100 1 258 1 194 1 213 1 54 1 155 2 261 4 285 2 128 2 77 2 313 1 265 1 221 1 223 4 346 1 132 1 109 1 349 4 
299 1 62 1 20 4 274 2 355 2 46 2 91 2 230 1 140 1 358 1 112 1 359 1 92 2 191 1 190 1 248 1 249 1 68 1 251 1 235 1 145 1 7 2 27 1 100 1 258 1 194 1 213 1 54 1 155 2 261 4 77 2 313 1 265 1 291 2 221 1 223 4 346 1 132 1 109 1 296 1 349 4 
299 1 17 2 62 1 20 4 355 2 323 1 46 3 91 2 230 1 140 1 358 1 359 1 92 3 191 1 190 1 248 1 143 1 249 1 250 1 251 1 235 1 145 1 27 1 100 1 258 1 194 1 213 1 54 1 155 2 261 5 285 2 128 2 77 3 313 1 265 1 221 1 223 4 346 1 132 1 109 1 349 5 226 1 
299 1 17 2 62 1 20 4 355 2 323 1 46 3 91 2 230 1 140 1 358 1 359 1 92 3 191 1 190 1 248 1 143 1 249 1 250 1 251 1 235 1 145 1 27 1 100 1 258 1 194 1 213 1 54 1 155 2 261 5 285 2 128 2 77 3 313 1 265 1 221 1 223 4 346 1 132 1 109 1 349 5 226 1 
274 2 46 2 230 1 91 2 140 1 92 2 191 1 190 1 235 1 145 1 7 2 100 1 194 1 54 1 155 2 289 1 291 2 346 1 109 1 349 4 299 1 62 1 20 4 355 2 112 1 359 1 248 1 249 1 251 1 27 1 258 1 213 1 261 4 77 2 313 1 265 1 221 1 223 4 132 1 
49 2 118 1 329 6 172 1 254 1 29 3 253 2 210 2 256 1 72 2 120 1 73 1 74 1 150 3 308 1 264 1 286 1 217 1 218 1 130 1 267 1 133 1 38 1 165 1 15 1 320 1 
137 1 351 1 88 1 90 1 187 1 49 2 114 2 142 3 95 1 329 14 253 1 29 8 72 1 210 4 256 2 150 6 73 11 174 2 374 1 308 11 13 3 264 2 217 2 218 2 130 1 182 1 267 2 161 1 38 2 134 1 15 4 186 1 320 1 
137 1 322 1 354 1 88 1 66 1 187 1 359 2 191 1 23 1 52 1 328 1 207 1 329 2 26 1 253 1 29 1 256 1 210 2 124 1 150 1 11 1 335 1 178 1 216 1 217 1 218 1 313 2 181 1 267 1 222 1 316 1 293 1 269 1 38 1 136 1 185 1 15 1 320 1 
137 1 322 2 88 1 90 2 187 1 49 8 191 1 52 3 144 2 328 2 329 20 95 4 146 2 150 10 335 1 11 2 103 2 160 1 15 7 354 2 66 3 359 3 114 2 23 1 24 1 118 1 172 1 26 1 304 1 253 2 254 1 29 10 257 1 120 1 72 4 210 6 256 3 74 1 73 7 174 2 308 7 216 2 264 3 217 3 218 3 313 3 130 3 267 3 181 2 222 1 316 1 81 2 133 1 38 3 269 2 185 3 136 2 273 2 320 3 
43 1 18 1 322 2 353 1 88 1 66 8 187 1 359 1 191 1 23 1 52 7 206 1 328 2 192 1 234 1 329 2 279 1 26 1 304 1 29 1 210 4 256 2 331 1 150 1 335 1 217 2 218 2 313 1 131 1 267 2 316 2 14 2 269 3 38 2 165 1 136 2 185 8 41 1 320 2 
137 1 61 1 65 1 90 1 49 1 359 1 114 1 23 1 191 1 329 3 26 1 29 1 72 1 210 2 256 1 73 1 174 1 150 2 308 1 264 1 217 1 218 1 313 1 130 1 267 1 38 1 271 1 15 1 320 1 
259 1 73 1 308 1 264 1 49 1 217 1 218 1 114 1 267 1 95 1 329 2 38 1 165 1 29 2 256 1 210 2 15 1 320 1 
73 1 150 2 308 1 90 1 49 1 217 1 218 1 130 1 267 1 69 1 329 2 38 1 165 1 72 1 256 1 210 2 15 1 320 1 
90 1 49 2 114 1 329 4 95 1 29 2 210 2 256 1 72 1 174 1 73 2 150 2 308 2 264 1 217 1 218 1 130 1 267 1 38 1 165 1 15 2 320 1 
259 1 73 1 308 1 264 1 49 1 217 1 218 1 114 1 267 1 234 1 95 1 329 2 38 1 29 2 256 1 210 2 15 1 320 1 
73 1 150 2 308 1 90 1 49 1 217 1 218 1 130 1 267 1 69 1 234 1 329 2 38 1 72 1 256 1 210 2 15 1 320 1 
90 1 49 2 114 1 234 1 329 4 95 1 29 2 210 2 256 1 72 1 174 1 73 2 150 2 308 2 264 1 217 1 218 1 130 1 267 1 38 1 15 2 320 1 
90 1 49 2 114 1 329 4 95 1 29 2 210 2 256 1 72 1 174 1 73 2 150 2 308 2 264 1 217 1 218 1 130 1 267 1 38 1 15 2 320 1 
322 1 88 1 354 1 66 1 187 1 359 1 52 1 328 1 329 2 29 1 253 1 256 1 210 2 150 1 11 1 103 1 216 1 217 1 218 1 313 1 181 1 267 1 316 1 269 1 38 1 136 1 185 1 320 1 
322 1 88 1 66 1 187 1 359 1 94 1 52 1 328 1 329 2 29 1 253 1 256 1 210 2 150 1 373 1 216 1 217 1 218 1 313 1 181 1 267 1 344 1 316 1 269 1 38 1 136 1 185 1 320 1 
137 1 90 1 49 2 114 1 329 4 95 1 29 2 210 2 256 1 72 1 174 1 73 2 150 2 308 2 264 1 217 1 218 1 130 1 267 1 38 1 15 2 320 1 
18 1 322 1 354 1 90 1 66 1 49 2 359 1 114 1 52 1 144 1 328 1 95 1 329 4 29 2 72 1 256 1 210 2 150 2 73 2 174 1 308 2 11 1 103 1 264 1 216 1 217 1 218 1 313 1 130 1 181 1 267 1 269 1 38 1 136 1 185 1 15 2 320 1 
137 1 90 1 65 1 49 1 359 1 114 1 23 1 191 1 95 1 329 3 26 1 29 2 210 2 256 1 150 1 174 1 73 1 308 1 127 1 264 1 217 1 218 1 313 1 130 1 267 1 38 1 271 1 15 1 320 1 
90 4 49 8 142 3 95 4 329 41 97 1 10 1 150 21 13 4 288 1 200 1 161 1 108 4 295 1 350 1 201 2 64 1 246 1 114 4 205 1 361 1 363 1 118 1 172 1 29 20 254 1 256 3 210 6 72 4 120 1 370 1 174 4 32 1 74 1 374 3 34 1 264 5 217 3 130 5 314 1 267 3 38 3 133 1 
64 1 246 1 90 3 49 7 361 1 205 1 114 4 142 3 363 1 118 1 329 38 95 3 97 1 172 1 254 1 29 20 120 1 72 4 210 8 256 4 10 1 370 1 74 1 32 1 150 18 174 4 374 3 34 1 13 4 264 5 217 4 288 1 200 1 130 4 314 2 267 4 161 1 133 1 38 4 108 4 295 1 201 2 350 1 
64 1 90 7 49 14 361 1 205 1 114 7 142 4 118 1 329 52 95 7 97 1 172 1 254 1 29 27 120 1 72 7 210 4 256 2 10 1 370 1 74 1 32 1 150 25 174 7 374 2 34 1 13 4 264 8 217 2 288 1 200 1 130 8 314 1 267 2 161 2 133 1 38 2 108 4 134 2 295 1 201 1 350 1 
64 2 246 1 90 3 49 6 205 1 114 3 142 1 329 19 95 3 29 9 72 3 210 4 256 2 150 10 174 3 374 1 34 1 152 1 13 2 264 3 217 2 288 1 130 3 267 2 161 1 38 2 108 2 295 1 201 1 350 1 
64 1 90 2 49 4 205 1 361 1 114 3 142 2 95 2 329 26 97 1 29 14 72 2 210 6 256 3 10 1 370 1 150 12 32 1 174 3 374 2 34 2 13 2 264 3 217 3 288 1 200 1 130 2 314 2 267 3 38 3 108 4 295 1 201 2 350 1 
123 1 116 1 21 1 115 1 176 1 284 1 369 1 157 1 360 1 332 1 
326 1 241 1 
115 1 176 1 89 1 284 1 67 1 369 1 157 1 287 1 332 1 
123 1 176 1 20 1 284 1 240 1 104 1 157 1 360 1 116 1 115 1 51 1 368 1 223 1 27 1 369 1 294 2 9 1 332 1 
123 1 176 1 20 1 284 1 240 1 104 1 157 1 360 1 116 1 115 1 51 1 368 1 223 1 27 1 369 1 294 2 9 1 332 1 
123 1 176 1 20 1 284 1 240 1 104 1 157 1 360 1 116 1 115 1 51 1 368 1 223 1 27 1 369 1 294 2 9 1 332 1 
379 1 330 1 231 1 
379 1 330 1 231 1 
325 1 179 1 
379 1 325 1 179 1 
343 1 252 1 
20 1 359 2 115 1 326 1 23 2 191 2 26 2 369 1 253 1 30 1 252 1 9 1 212 1 332 1 176 1 338 1 156 1 284 1 104 1 55 1 157 1 313 2 241 1 343 1 223 1 294 1 16 1 
330 1 231 1 
379 1 325 1 179 1 
137 1 86 1 322 1 88 1 66 2 187 1 359 2 191 2 206 1 52 2 328 1 329 2 29 1 256 1 210 2 331 1 150 1 75 1 217 1 218 1 313 2 57 1 267 1 14 2 269 1 38 1 319 1 136 1 185 2 320 1 381 1 
306 2 125 1 126 1 175 1 18 1 63 1 262 1 177 1 66 2 36 1 340 1 232 1 52 2 328 1 53 1 28 1 304 1 136 1 185 2 
306 2 125 1 126 1 76 1 175 1 63 1 177 1 66 1 36 1 340 1 232 1 52 1 328 1 28 1 304 1 185 1 136 1 
125 1 43 1 322 1 321 1 262 1 66 1 52 1 302 1 316 1 328 1 192 1 269 1 136 1 185 1 
306 2 125 1 126 1 175 1 63 1 262 1 177 1 66 1 36 1 340 1 232 1 52 1 328 1 53 1 28 1 304 1 185 1 136 1 
106 1 
292 1 197 1 27 1 109 1 286 1 100 1 194 1 
17 1 274 1 230 1 285 1 248 1 143 1 249 1 27 1 100 1 258 1 194 1 
322 1 274 12 90 2 230 3 91 3 276 2 52 1 328 2 146 2 100 7 281 6 194 8 285 6 105 2 56 1 109 1 299 2 20 5 66 1 114 2 117 2 248 3 249 3 27 7 31 3 258 3 121 6 122 2 173 1 260 1 174 2 309 2 261 5 214 2 35 1 264 2 130 2 181 1 183 1 223 5 316 1 269 6 270 2 136 1 185 1 272 2 
245 1 20 1 274 6 90 2 6 1 91 1 230 2 361 1 114 2 142 1 248 2 249 2 27 5 100 5 281 5 121 5 258 2 10 1 194 8 370 1 32 1 174 2 374 1 261 1 13 1 214 2 285 3 264 2 105 1 56 1 200 1 130 2 223 1 184 1 109 2 
20 1 6 1 230 1 359 1 23 1 191 1 248 1 25 1 249 1 250 1 172 1 26 1 254 1 100 2 258 1 194 2 74 1 154 1 214 2 264 2 313 1 265 1 130 1 79 1 223 1 59 1 224 1 271 1 
197 1 230 1 248 1 292 1 249 1 27 1 109 1 100 1 258 1 194 1 
174 1 274 3 90 1 264 1 285 1 114 1 130 1 27 1 100 2 121 2 281 2 194 2 
223 1 20 1 261 1 27 1 109 1 91 1 
203 1 43 1 322 1 352 1 20 3 48 1 66 4 230 1 91 2 364 1 248 2 52 4 327 1 249 2 328 1 192 1 100 2 258 2 194 2 151 1 261 4 105 2 56 2 223 3 316 2 269 1 347 2 136 1 185 4 
322 1 354 1 66 1 187 1 359 3 191 2 23 2 170 1 52 1 328 1 329 1 26 2 253 1 210 2 256 1 150 1 11 1 103 1 216 1 217 1 218 1 313 3 267 1 181 1 316 1 224 1 38 1 269 1 185 1 271 2 136 1 320 1 
274 4 285 2 230 1 105 1 56 1 248 1 249 1 27 4 109 2 120 1 100 2 121 2 281 2 258 1 194 1 
93 1 176 1 157 1 
123 1 343 1 176 1 99 1 157 1 
93 1 176 1 157 1 
93 1 176 1 157 1 
176 1 377 1 157 1 
176 1 377 1 157 1 
176 1 377 1 157 1 
176 1 157 1 
284 1 369 1 
49 2 205 1 142 1 118 1 329 8 172 1 29 4 254 1 120 1 210 2 256 1 72 2 370 1 150 4 74 1 374 1 13 1 264 1 217 1 130 1 267 1 38 1 133 1 
49 3 205 1 114 1 142 1 118 1 329 11 95 1 172 1 254 1 29 6 120 1 72 2 210 4 256 2 370 1 74 1 150 5 174 1 374 1 13 2 264 2 217 2 159 1 130 1 267 2 161 1 133 1 38 2 
90 2 49 4 205 1 361 1 114 2 142 1 118 1 95 1 329 19 172 1 254 1 29 9 120 1 210 6 256 3 72 3 10 1 370 1 74 1 150 10 32 1 174 2 374 1 13 1 264 3 217 3 159 1 200 1 130 3 314 1 267 3 133 1 38 3 
90 1 49 5 205 1 361 1 114 2 142 1 118 1 95 2 329 17 172 1 254 1 29 10 120 1 210 6 256 3 72 3 10 1 370 1 74 1 150 7 32 1 174 2 374 1 13 1 264 3 217 3 159 1 130 2 200 1 314 1 267 3 133 1 38 3 
49 2 205 1 142 1 118 1 329 8 172 1 29 4 254 1 120 1 210 2 256 1 72 2 370 1 150 4 74 1 374 1 13 1 264 1 217 1 130 1 267 1 38 1 133 1 
90 2 49 2 205 1 361 1 114 2 142 1 95 1 329 12 29 6 210 2 256 1 72 1 10 1 370 1 150 6 32 1 174 2 374 1 13 1 264 2 217 1 130 2 200 1 267 1 38 1 
90 1 49 5 205 1 361 1 114 2 142 1 118 1 95 2 329 18 172 1 254 1 29 10 120 1 210 8 256 4 72 3 10 1 370 1 74 1 150 8 32 1 174 2 374 1 13 1 264 3 217 4 159 1 200 1 130 2 314 2 267 4 133 1 38 4 
246 1 90 2 49 6 205 1 361 1 114 3 142 1 95 3 329 16 29 9 210 8 256 4 72 3 10 1 370 1 150 7 32 1 174 3 374 1 13 1 264 3 217 4 200 1 130 2 314 2 267 4 38 4 
150 4 74 3 264 1 49 6 130 1 118 2 329 7 95 3 133 1 172 3 254 1 29 3 72 3 
246 1 90 1 49 4 205 1 361 1 114 2 142 1 118 1 95 1 329 18 172 1 254 1 29 10 120 1 210 8 256 4 72 3 10 1 370 1 74 1 150 8 32 1 174 2 374 1 13 1 264 3 217 4 200 1 130 2 314 2 267 4 133 1 38 4 
150 4 74 1 264 1 49 3 217 2 130 1 314 1 267 2 118 1 329 8 95 1 38 2 133 1 172 1 254 1 29 4 120 1 72 2 256 2 210 4 
150 3 74 1 264 1 286 1 49 2 130 1 118 1 329 6 133 1 172 1 254 1 29 3 120 1 72 2 
150 2 174 1 90 1 264 1 49 2 217 1 159 1 114 1 130 1 267 1 329 4 95 1 38 1 29 2 72 1 256 1 210 2 
150 4 174 1 374 1 13 2 90 1 264 1 49 2 114 1 130 1 142 1 161 1 329 7 95 1 29 3 72 1 
351 1 90 2 49 9 114 2 142 2 118 1 95 4 329 23 172 2 254 1 29 11 120 1 72 5 256 2 210 4 195 1 74 2 174 2 150 12 13 2 264 3 217 2 130 3 314 2 267 2 161 1 133 1 38 2 134 1 
150 1 13 1 329 1 
142 1 329 1 29 1 
150 3 174 1 90 1 264 1 217 1 49 3 159 1 114 1 130 1 267 1 329 6 95 1 38 1 146 1 29 3 210 2 256 1 72 2 
90 2 49 2 205 1 361 1 114 2 142 1 95 1 329 12 29 6 210 2 256 1 72 1 10 1 370 1 150 6 32 1 174 2 374 1 13 1 264 2 217 1 130 2 200 1 267 1 38 1 
150 3 74 1 264 1 49 2 130 1 329 6 95 1 172 1 254 1 29 3 72 1 
74 1 150 2 49 2 217 1 314 1 267 1 118 1 95 1 329 3 172 1 38 1 133 1 29 1 72 1 256 1 210 2 195 1 
74 2 150 5 264 2 217 1 49 5 205 1 130 2 267 1 59 1 95 2 329 10 38 1 172 2 29 5 254 1 210 2 256 1 72 3 
264 1 217 1 49 1 205 1 114 1 267 1 329 2 95 1 38 1 29 2 256 1 210 2 
150 2 174 1 90 1 264 1 49 2 217 1 205 1 114 1 130 1 267 1 329 4 95 1 38 1 29 2 72 1 256 1 210 2 
150 2 74 1 246 1 217 3 49 2 205 1 314 1 267 3 329 3 95 1 38 3 172 1 29 1 256 3 210 6 72 1 195 1 
246 1 90 3 49 12 247 1 205 1 114 3 142 3 118 1 329 34 95 5 172 3 254 2 29 16 120 1 210 10 256 5 72 7 195 1 74 3 150 18 174 3 374 1 13 4 264 5 37 1 217 5 159 1 130 5 314 2 267 5 268 1 161 1 133 1 38 5 
191 1 253 1 140 1 348 1 313 1 359 1 297 1 
1 1 307 1 33 1 140 1 359 1 313 1 191 1 345 1 253 1 348 1 40 1 297 1 
52 1 43 1 322 1 316 1 328 1 192 1 269 1 66 1 286 1 136 1 185 1 
335 1 11 1 322 1 66 1 216 1 359 2 313 2 23 1 191 1 181 1 52 1 316 1 328 1 269 1 26 1 253 1 185 1 136 1 
213 1 42 1 335 1 11 1 322 2 66 1 216 1 359 2 313 2 265 1 23 1 191 2 181 2 52 1 328 1 145 1 269 3 26 2 280 1 347 1 253 1 185 1 136 1 
166 1 42 1 322 2 66 2 359 2 94 1 191 2 23 1 52 2 328 1 145 1 26 2 280 1 253 1 213 1 335 1 216 1 313 2 265 1 181 2 269 3 347 1 136 1 185 2 
299 1 166 1 42 1 309 1 322 1 5 1 20 2 261 1 66 3 220 1 181 1 52 3 223 2 316 1 328 1 27 1 269 4 109 1 280 1 347 1 185 3 136 1 31 1 
299 1 166 1 42 1 309 1 322 1 20 2 261 1 66 3 181 1 52 3 223 2 316 1 328 1 27 1 269 4 109 1 280 1 347 1 185 3 272 1 136 1 31 1 
52 1 328 1 66 1 136 1 185 1 41 1 
18 1 322 2 353 1 66 7 131 1 52 6 181 1 183 1 14 1 316 2 328 3 279 1 303 1 193 1 269 3 304 1 185 7 136 2 331 1 237 1 41 1 
137 1 322 1 18 1 354 1 66 1 49 2 359 2 191 1 23 1 52 1 144 1 328 1 118 1 329 6 172 1 26 1 253 2 29 3 254 1 120 1 72 2 256 2 210 4 73 1 150 3 74 1 308 1 335 1 11 1 103 1 264 1 216 1 217 2 218 2 313 2 130 1 181 1 267 2 81 1 133 1 269 1 38 2 319 1 136 1 185 1 15 1 320 2 
299 1 352 1 20 3 66 1 230 2 91 1 52 1 248 2 117 1 249 2 27 1 100 1 258 2 31 1 194 1 212 1 122 1 197 1 309 1 261 2 292 1 223 3 316 1 269 2 109 1 270 1 185 1 272 1 
309 1 18 1 322 1 66 2 52 2 181 1 183 1 328 2 269 2 185 2 136 1 41 1 173 1 
371 1 166 1 43 1 18 1 322 1 66 4 52 4 316 1 328 1 192 1 269 1 185 4 136 1 
322 1 66 2 113 1 52 2 181 1 328 2 163 1 303 1 193 1 269 1 347 1 257 1 185 2 136 1 
306 1 52 1 316 1 328 1 177 1 66 1 36 1 340 1 136 1 185 1 
52 2 322 1 18 1 328 1 269 1 66 2 304 1 136 1 185 2 331 1 57 1 
371 1 43 1 18 1 322 2 66 5 131 1 52 4 316 1 192 1 328 2 279 1 269 3 347 1 185 5 136 2 331 1 
371 1 43 1 18 1 322 2 66 5 22 1 52 4 316 1 192 1 328 2 279 1 269 3 347 1 185 5 136 2 331 1 
335 1 322 1 66 1 216 1 359 2 313 2 23 1 191 1 94 1 181 1 52 1 316 1 328 1 269 1 26 1 253 1 185 1 136 1 
322 1 66 1 52 1 181 1 183 1 328 2 303 1 193 1 269 1 347 1 185 1 136 1 237 1 
84 1 86 1 75 1 359 1 313 1 189 1 362 1 191 1 381 1 
148 1 58 1 362 1 
362 1 84 1 253 1 188 1 189 1 
299 1 148 1 213 1 84 2 62 1 20 2 47 1 188 2 265 1 189 2 362 1 58 1 223 2 242 1 145 1 27 1 109 1 253 1 212 1 
278 1 44 1 286 1 300 1 
78 1 378 1 336 1 278 1 44 1 141 1 300 1 
85 1 110 1 141 1 
78 3 378 1 336 1 278 1 44 1 199 2 141 3 341 1 300 1 129 1 227 1 204 1 
78 2 378 1 336 1 278 1 44 1 82 1 141 2 300 1 266 1 
306 1 78 1 126 1 378 1 336 1 278 1 233 1 45 1 340 1 141 1 129 1 
78 1 378 1 336 1 278 1 141 1 300 1 129 1 
78 1 378 1 336 1 44 1 141 1 300 2 129 1 
336 2 138 1 141 2 300 1 129 1 78 2 378 2 278 1 171 1 255 1 
336 1 44 1 45 1 141 3 300 1 129 1 78 3 169 1 378 1 80 1 278 2 70 1 82 2 
306 2 126 1 336 1 102 1 44 1 36 1 141 2 340 1 300 1 129 1 232 1 78 2 378 1 278 1 82 1 
336 2 44 1 45 1 141 4 300 1 129 1 266 1 78 4 378 2 80 1 278 2 82 2 135 1 
78 1 378 1 336 1 278 1 44 1 141 1 300 1 129 1 
336 1 199 1 44 2 45 1 141 4 300 2 204 1 78 4 378 1 80 1 278 3 82 2 39 1 227 1 
336 1 312 1 44 1 141 2 300 1 129 1 78 2 180 1 315 1 378 1 278 1 82 1 
336 1 199 2 44 1 141 3 129 1 300 1 204 1 78 3 378 1 278 1 164 1 227 2 
278 2 310 1 263 1 243 2 
78 1 378 1 336 1 141 1 211 1 129 1 
78 2 378 1 336 1 278 1 44 1 70 1 82 1 141 2 300 1 129 1 
4 1 
78 1 378 1 336 1 278 1 44 1 141 1 300 1 129 1 
78 3 378 1 336 1 278 1 44 1 199 1 70 1 82 1 141 3 300 1 129 1 
278 1 80 1 45 1 39 1 
278 1 300 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (141,180) (141,180) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (141,180) (141,180) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (141,180) (141,180) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (141,180) (141,180) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
141 1 306 1 58 1 173 1 297 1 101 1 299 2 277 1 278 1 226 1 54 1 180 1 148 1 40 2 12 1 
141 1 306 1 58 1 173 1 297 1 101 1 299 2 277 1 278 1 226 1 54 1 180 1 40 2 148 1 12 1 
141 1 306 1 58 1 173 1 297 1 101 1 299 2 277 1 278 1 226 1 54 1 180 1 40 2 148 1 12 1 
141 1 306 1 58 1 173 1 297 1 101 1 299 2 277 1 278 1 226 1 54 1 180 1 40 2 148 1 12 1 
258 1 58 1 173 1 308 3 101 1 246 1 299 4 90 1 195 1 277 1 313 1 167 2 291 1 131 2 40 4 148 1 12 1 219 3 
258 1 306 1 173 1 58 1 297 1 175 1 101 1 329 1 299 2 90 1 277 1 278 1 6 1 40 2 12 1 219 1 
58 1 246 1 299 9 90 1 277 1 167 4 228 1 131 2 40 9 148 1 12 1 258 1 306 1 173 2 308 7 101 2 310 1 195 3 122 1 313 1 291 1 138 1 181 1 219 5 
58 1 246 1 299 9 90 1 277 1 167 4 228 1 131 2 40 9 148 1 12 1 258 1 306 1 173 2 308 7 101 2 310 1 195 3 122 1 313 1 291 1 138 1 181 1 219 5 
258 1 306 1 173 2 308 1 101 2 299 3 90 1 195 1 277 1 167 1 40 3 181 1 219 2 
279 1 197 1 239 1 
379 1 327 2 239 1 
214 2 196 1 174 2 193 2 10 2 88 1 29 2 134 2 
57 1 0 1 245 2 247 1 88 1 112 2 280 2 10 2 257 1 336 1 116 1 367 1 340 1 97 1 174 2 153 2 233 1 193 2 285 1 235 1 134 3 311 1 155 1 214 2 176 2 374 1 196 1 76 1 346 1 376 1 51 1 103 1 378 1 137 1 159 1 29 3 140 1 
214 1 21 1 265 1 174 1 193 1 318 1 10 1 88 1 29 1 134 1 
189 1 202 1 359 1 134 1 214 1 264 1 21 1 65 1 279 1 91 1 239 1 105 1 29 1 162 1 
189 1 174 1 193 1 359 2 134 1 214 1 264 1 21 1 65 1 279 1 91 1 239 1 10 1 29 1 162 2 
243 1 252 1 210 1 359 1 162 1 
279 1 252 1 210 1 98 1 192 1 239 1 359 2 162 2 
252 1 359 1 162 1 
210 1 174 1 193 1 359 1 88 1 134 1 214 1 21 1 265 1 166 1 318 1 10 1 29 1 162 1 
239 1 
279 1 252 1 210 1 192 1 239 1 143 1 359 2 162 2 
185 1 17 1 210 2 152 1 73 1 342 1 192 1 212 2 121 1 359 5 33 1 20 2 35 1 5 2 279 1 78 1 252 2 239 1 162 5 
196 1 197 1 
57 1 340 1 97 1 142 1 245 1 343 1 233 1 193 1 247 1 134 2 214 1 176 1 76 1 112 1 51 1 103 1 52 1 10 1 29 2 116 1 
174 1 3 1 193 1 134 2 214 2 196 2 22 1 10 1 29 2 
205 1 142 1 158 1 
174 1 343 1 193 4 3 1 134 5 214 5 89 1 196 1 237 1 52 2 132 1 10 4 105 1 29 5 
214 2 21 1 265 1 193 2 111 1 10 2 29 2 134 2 
57 1 340 1 97 1 106 1 245 1 233 1 247 1 134 1 176 1 196 1 112 1 76 1 103 1 51 1 29 1 116 1 
214 3 196 1 52 1 174 1 193 3 10 3 29 3 134 3 
214 1 21 1 265 1 193 1 10 1 29 1 134 1 
214 1 21 1 22 1 174 1 193 1 3 1 10 1 29 1 134 1 
220 1 57 1 0 1 245 1 3 1 247 1 359 1 88 1 65 1 112 1 91 1 280 2 10 3 336 1 116 1 367 1 340 1 97 1 189 1 174 2 153 1 343 1 233 1 371 1 193 3 285 1 235 1 134 4 311 1 155 1 264 1 214 3 176 1 21 1 196 1 76 1 376 1 51 1 103 1 52 1 137 1 159 1 29 4 162 1 
214 2 196 1 237 1 52 1 193 1 10 1 105 1 29 2 134 2 
189 1 174 1 343 1 371 1 3 1 193 3 359 1 134 3 214 3 264 1 21 1 65 1 301 1 52 2 91 1 239 1 10 3 29 3 162 1 
214 2 205 1 52 1 142 1 174 1 193 2 3 1 10 2 29 2 134 2 
57 1 97 1 340 1 245 1 233 1 247 1 134 1 176 1 196 1 112 1 76 1 103 1 51 1 29 1 116 1 
57 1 97 1 340 1 245 1 309 1 134 1 176 1 196 1 112 1 76 1 103 1 51 1 238 1 29 1 116 1 
0 1 142 2 269 1 296 1 59 1 60 1 146 1 205 2 363 1 280 2 257 2 367 1 172 1 153 4 119 1 285 2 235 1 311 1 155 1 263 1 353 1 158 2 159 1 184 1 
214 1 21 1 65 1 193 1 10 1 111 1 29 1 134 1 
56 1 49 1 
56 1 49 1 
46 1 110 1 
46 1 110 1 
46 1 110 1 
56 1 194 1 49 1 
56 1 194 1 49 1 
56 1 100 1 49 1 
56 2 347 1 18 1 46 1 110 1 49 2 
56 1 194 1 49 1 
56 1 96 1 49 1 
56 1 96 1 49 1 
56 1 96 1 49 1 
151 1 56 1 338 1 242 1 369 1 100 1 164 1 193 2 359 1 63 1 31 1 134 2 49 1 214 2 196 1 156 1 129 1 187 1 334 1 230 1 10 2 29 2 208 1 162 1 
56 2 151 1 221 1 18 1 369 2 356 1 326 1 45 1 164 2 262 2 144 1 359 2 49 2 156 3 334 2 239 1 282 1 208 2 162 2 
58 1 148 1 12 1 
58 1 6 1 12 1 
302 1 6 1 357 1 148 2 186 1 12 3 
36 1 6 1 357 1 148 1 186 1 12 2 
6 1 357 2 148 1 186 1 12 2 
354 1 109 1 327 3 60 1 359 5 248 1 35 1 250 2 5 1 279 1 252 1 129 1 187 1 114 1 338 1 70 1 172 1 210 4 17 3 192 1 212 1 121 2 263 1 20 1 315 2 379 1 353 1 317 1 352 1 239 2 240 2 162 5 
354 3 243 5 185 1 327 9 60 3 359 9 248 1 4 1 35 1 300 1 250 6 5 2 251 1 279 1 252 6 187 4 92 1 114 2 70 2 172 3 307 5 210 7 17 8 192 1 212 2 121 6 263 3 20 2 289 1 379 3 353 3 218 1 239 5 240 6 162 9 
354 1 185 1 327 4 60 1 359 3 5 1 250 2 279 1 187 1 114 1 70 1 172 1 210 2 17 3 212 1 121 2 20 1 263 1 315 1 379 2 353 1 352 1 317 1 239 3 240 2 162 3 
354 2 185 1 327 7 60 2 359 4 4 1 250 4 300 1 5 1 279 1 187 2 114 1 70 1 172 2 17 5 210 3 212 1 121 4 20 1 263 2 315 2 379 3 353 2 352 1 317 1 218 1 239 4 240 4 162 4 
340 1 197 1 333 1 
340 1 120 1 
86 1 
76 1 340 1 51 1 
340 1 139 1 
340 1 51 1 
76 1 340 3 51 1 128 1 333 2 72 1 
68 2 15 1 172 1 108 1 269 2 153 7 87 1 59 3 285 3 286 1 298 1 344 1 165 1 55 1 353 1 9 1 257 4 
68 2 15 1 172 1 108 1 269 2 153 7 87 1 59 3 285 3 286 1 298 1 344 1 165 1 55 1 353 1 9 1 257 4 
68 2 15 1 172 1 108 1 269 2 271 1 153 7 87 1 59 3 285 3 286 1 298 1 344 1 165 1 55 1 353 1 9 1 257 4 
354 3 0 1 108 2 269 5 270 1 87 1 59 10 60 3 298 1 165 2 66 1 280 2 229 1 9 2 115 1 257 16 231 1 68 3 95 1 15 1 367 1 172 4 188 4 153 31 285 15 286 5 344 1 311 1 263 3 104 1 25 3 55 2 353 4 159 1 
0 2 108 1 269 3 270 1 87 1 59 4 298 1 165 1 280 4 9 1 257 5 69 1 68 2 367 2 15 1 172 1 211 1 153 9 285 4 286 1 311 2 55 1 353 1 159 2 
322 1 57 1 124 1 58 1 245 1 201 1 145 1 299 2 90 1 277 1 112 1 302 1 6 1 37 1 148 1 40 2 365 1 12 2 116 1 258 1 306 1 173 1 308 1 99 1 101 1 176 1 236 1 178 1 292 1 219 1 
322 1 57 1 124 1 58 1 245 1 201 1 145 1 299 3 90 1 112 1 302 1 6 1 37 1 148 1 40 3 365 1 12 2 94 1 116 1 258 1 306 1 173 1 308 2 154 1 101 1 176 1 236 1 178 1 219 1 84 1 
322 1 57 1 124 1 245 1 58 1 201 1 145 1 299 2 90 1 112 1 302 1 6 1 40 2 148 1 12 2 116 1 258 1 306 1 308 2 154 1 176 1 236 1 178 1 219 1 84 1 
57 1 322 2 124 2 245 1 275 1 330 1 299 1 112 1 40 1 94 1 116 1 306 2 340 1 16 1 173 1 261 1 101 1 234 1 176 1 103 1 51 1 80 1 178 2 
322 1 57 1 124 1 58 1 245 1 201 1 145 1 299 1 277 1 112 1 302 1 6 1 37 1 148 1 40 1 365 1 12 2 116 1 306 1 173 1 154 1 101 1 176 1 236 1 178 1 292 1 
339 1 
57 1 323 1 327 2 224 4 65 1 5 1 112 2 279 1 113 1 227 2 116 1 70 1 71 1 340 1 17 2 189 1 192 3 121 2 234 1 20 1 21 1 80 1 198 1 239 2 29 1 162 5 244 2 245 2 359 5 127 1 202 1 249 1 35 1 207 2 252 6 91 1 303 2 39 1 256 1 364 1 259 1 368 2 44 2 212 1 102 1 134 1 176 2 214 1 264 1 215 2 51 1 103 2 377 1 379 2 105 1 
323 1 143 1 202 1 359 3 224 2 65 1 252 2 91 1 364 1 256 1 259 1 189 1 44 1 192 1 102 1 134 1 264 1 214 1 21 1 105 1 29 1 162 3 
323 1 143 1 202 1 359 3 224 3 65 1 279 1 252 1 91 1 364 1 256 1 259 1 189 1 368 1 192 1 102 1 134 1 264 1 214 1 21 1 239 1 105 1 29 1 162 3 
323 1 143 1 202 1 359 3 224 3 65 1 279 1 207 1 252 2 91 1 364 1 256 1 259 1 189 1 44 1 368 1 192 1 102 1 134 1 264 1 214 1 21 1 239 1 105 1 29 1 162 3 
244 2 323 1 62 1 143 1 202 1 359 5 249 1 224 6 35 1 65 1 5 1 113 1 279 5 252 7 207 4 227 2 91 1 303 2 38 1 364 1 256 1 170 1 259 1 17 1 368 4 189 1 44 4 118 1 192 3 212 1 47 1 121 1 102 1 134 1 20 1 214 1 264 1 21 1 215 2 379 2 239 5 105 1 29 1 162 5 
323 1 327 2 224 4 65 1 5 1 113 1 279 1 227 2 71 1 189 1 17 1 192 2 121 1 20 1 21 1 239 2 29 1 162 4 244 2 359 4 202 1 249 1 35 1 252 4 207 2 91 1 303 2 256 1 364 1 259 1 44 2 368 2 212 1 102 1 134 1 264 1 214 1 215 2 379 2 105 1 
244 2 323 1 62 1 202 1 359 4 249 1 224 4 65 1 35 1 5 1 279 1 113 1 207 2 252 4 227 2 91 1 303 2 38 1 364 1 256 1 259 1 368 2 44 2 17 1 189 1 118 1 192 2 212 1 121 1 102 1 134 1 264 1 214 1 20 1 21 1 215 2 379 2 239 1 105 1 29 1 162 4 
244 2 323 1 62 1 202 1 359 4 249 1 224 4 65 1 35 1 5 1 279 1 113 1 207 2 252 4 227 2 91 1 303 2 38 1 364 1 256 1 259 1 368 2 44 2 17 1 189 1 118 1 192 2 212 1 121 1 102 1 134 1 264 1 214 1 20 1 21 1 215 2 379 2 239 1 105 1 29 1 162 4 
323 1 107 2 327 2 62 1 202 1 359 4 328 1 249 1 224 4 65 1 35 1 5 1 279 1 207 2 252 4 227 2 91 1 303 2 364 1 256 1 149 1 209 1 259 1 368 2 44 2 17 1 189 1 192 2 212 1 121 1 102 1 134 1 264 1 214 1 20 1 21 1 217 2 239 1 105 1 29 1 162 4 
244 2 323 1 62 1 202 1 359 4 249 1 224 5 35 1 65 1 5 1 279 1 113 1 207 3 252 5 227 2 91 1 303 2 38 1 364 1 256 1 170 1 259 1 17 1 189 1 44 3 368 3 118 1 192 2 212 1 121 1 102 1 134 1 20 1 264 1 214 1 21 1 215 2 379 2 239 1 105 1 29 1 162 4 
244 2 323 1 62 1 202 1 359 4 249 1 224 5 35 1 65 1 5 1 279 1 113 1 207 3 252 5 227 2 91 1 303 2 38 1 364 1 256 1 170 1 259 1 17 1 189 1 44 3 368 3 118 1 192 2 212 1 121 1 102 1 134 1 20 1 264 1 214 1 21 1 215 2 379 2 239 1 105 1 29 1 162 4 
323 1 107 2 327 2 224 4 65 1 5 1 279 1 227 2 71 1 189 1 17 1 192 2 121 1 20 1 21 1 239 1 29 1 162 4 359 4 202 1 249 1 35 1 252 4 207 2 91 1 303 2 256 1 364 1 209 1 259 1 44 2 368 2 212 1 102 1 134 1 264 1 214 1 217 2 105 1 
68 1 15 1 367 1 172 1 0 1 142 1 269 2 153 6 87 1 59 2 285 3 298 1 165 1 235 1 155 1 311 1 196 2 205 1 197 1 280 2 158 1 353 1 9 1 257 3 159 1 184 1 
354 2 0 2 142 11 269 1 272 1 59 2 60 1 205 4 280 4 133 1 115 1 336 1 41 1 257 8 231 1 232 1 367 2 172 2 188 3 153 14 286 1 285 6 235 1 311 2 155 2 263 2 196 1 378 1 25 3 199 1 158 11 353 1 159 2 
57 1 0 1 245 1 106 1 272 1 247 1 112 1 205 1 280 2 10 1 336 1 257 1 116 1 117 1 367 1 340 1 97 1 153 2 343 1 233 1 193 1 285 1 235 1 134 2 176 1 155 1 214 1 311 1 196 1 345 1 76 1 51 1 103 1 52 1 378 1 24 1 159 1 29 2 
57 2 0 3 142 7 269 4 272 1 223 1 59 8 60 2 112 3 332 1 280 6 9 1 10 1 11 2 336 1 116 2 68 1 15 1 340 2 153 20 154 1 343 1 233 2 193 1 74 2 285 10 286 4 235 3 155 3 196 2 76 2 353 3 158 7 29 3 159 3 161 2 354 2 245 3 87 1 247 2 298 1 165 1 205 7 257 10 367 3 43 2 97 2 172 3 134 3 176 3 311 3 214 1 263 2 376 2 50 1 103 1 51 2 52 1 378 1 
354 1 0 1 142 1 269 1 272 1 59 1 3 1 60 1 205 1 280 2 10 1 257 1 367 1 172 1 174 1 153 3 193 1 285 2 287 1 235 1 134 1 311 1 155 1 214 1 263 1 158 1 353 1 159 1 29 1 
57 2 0 2 245 7 126 1 2 1 112 8 280 4 335 1 10 1 150 1 257 1 336 1 116 2 367 2 340 3 153 2 154 1 99 1 370 1 283 1 193 1 285 1 234 1 134 1 235 2 214 1 176 8 311 2 155 2 374 2 103 2 51 2 52 1 378 1 80 1 27 1 29 1 159 2 184 1 
367 1 0 1 172 1 142 1 153 2 119 1 59 1 286 1 235 1 155 1 311 1 263 1 205 1 280 2 158 1 159 1 257 2 184 1 
367 1 0 1 142 1 269 1 153 2 59 1 60 1 285 2 235 1 155 1 311 1 205 1 280 2 363 1 158 1 353 1 159 1 184 1 
354 1 0 1 142 2 269 1 59 2 60 1 205 2 280 2 257 2 367 1 172 1 153 4 286 1 285 2 235 1 263 1 311 1 155 1 158 2 353 1 159 1 184 1 
367 1 0 1 172 1 142 1 153 2 119 1 59 1 286 1 235 1 155 1 311 1 263 1 205 1 280 2 158 1 27 1 159 1 257 2 
367 1 0 1 142 1 269 1 153 2 59 1 60 1 285 2 235 1 155 1 311 1 205 1 280 2 363 1 158 1 353 1 27 1 159 1 
354 1 0 1 142 2 269 1 59 2 60 1 205 2 280 2 257 2 367 1 172 1 153 4 286 1 285 2 235 1 263 1 311 1 155 1 158 2 353 1 27 1 159 1 
354 1 0 1 142 2 269 1 59 2 60 1 205 2 280 2 257 2 367 1 172 1 153 4 286 1 285 2 235 1 263 1 311 1 155 1 158 2 353 1 159 1 
57 1 0 1 245 1 247 1 112 1 280 2 257 1 336 1 116 1 367 1 97 1 340 1 153 2 233 1 285 1 134 1 235 1 176 1 155 1 311 1 196 1 76 1 376 1 51 1 103 1 378 1 29 1 159 1 
57 1 0 1 245 1 112 1 280 2 257 1 336 1 116 1 367 1 97 1 340 1 153 2 309 1 285 1 134 1 235 1 176 1 155 1 311 1 196 1 76 1 51 1 103 1 23 1 378 1 238 1 29 1 159 1 
354 1 0 1 142 2 272 1 269 1 59 2 60 1 205 2 280 2 257 2 367 1 172 1 153 4 286 1 285 2 235 1 263 1 311 1 155 1 158 2 353 1 159 1 
354 1 57 1 0 1 142 2 245 1 269 1 59 2 60 1 247 1 205 2 112 1 280 2 257 2 116 1 367 1 172 1 97 1 340 1 153 4 233 1 99 1 285 2 286 1 134 1 235 1 263 1 176 1 155 1 311 1 76 1 376 1 51 1 353 1 158 2 161 1 29 1 159 1 
354 1 0 1 142 1 272 1 59 1 60 1 3 1 360 1 205 1 280 2 10 1 257 2 367 1 172 1 174 1 153 3 193 1 285 1 286 1 235 1 134 1 311 1 155 1 214 1 263 1 353 1 158 1 159 1 29 1 
0 3 325 1 269 4 270 1 222 1 59 8 60 4 274 1 64 1 280 6 7 1 281 4 9 1 115 3 231 1 69 1 68 1 15 1 188 4 153 41 286 4 285 21 75 1 123 2 25 3 353 5 159 3 160 1 83 1 354 4 163 1 295 1 125 1 87 1 298 1 165 1 204 1 93 1 257 20 367 3 172 5 263 4 311 3 
354 4 163 1 0 4 295 1 325 1 125 1 222 1 270 2 269 4 87 1 59 7 60 3 274 1 298 1 165 1 64 1 204 1 280 8 281 4 7 1 9 1 93 1 115 3 257 20 68 1 69 1 231 1 15 1 367 4 172 5 188 4 153 38 75 1 285 18 286 3 311 4 263 4 123 2 25 3 353 4 160 1 159 4 83 1 
354 7 163 1 0 2 295 1 125 1 222 1 270 1 269 7 87 1 59 14 60 7 298 1 165 1 64 1 204 1 280 4 281 4 7 1 9 1 93 1 115 2 257 27 68 1 69 1 231 2 232 2 15 1 367 2 172 8 188 4 153 52 75 1 285 25 286 7 311 2 263 7 123 1 25 4 353 8 160 1 159 2 83 1 
354 3 0 2 295 1 125 1 222 1 269 3 59 6 60 3 274 1 280 4 130 1 281 2 7 1 93 2 115 1 257 9 69 1 231 1 367 2 172 3 188 2 153 19 285 10 286 3 311 2 263 3 123 1 25 1 353 3 159 2 
354 3 163 1 0 3 295 1 125 1 222 1 270 2 269 2 59 4 60 2 64 1 204 1 280 6 281 4 7 2 93 1 257 14 115 2 69 1 367 3 172 3 188 2 153 26 286 2 285 12 75 1 311 3 263 3 123 2 25 2 353 2 159 3 160 1 83 1 
100 1 230 1 
56 1 34 1 312 1 369 1 164 1 334 1 294 1 208 1 49 1 
56 1 321 1 18 1 369 1 356 1 164 1 334 1 144 1 208 1 49 1 
355 1 194 1 
96 1 347 1 290 1 
151 1 56 1 221 1 18 1 369 1 356 1 326 1 164 1 262 1 144 1 359 1 49 1 156 2 334 1 239 1 282 1 208 1 162 1 
151 1 56 1 221 1 18 1 369 1 356 1 326 1 164 1 262 1 144 1 359 1 49 1 156 2 334 1 239 1 282 1 208 1 162 1 
151 1 56 1 221 1 18 1 369 1 356 1 326 1 164 1 262 1 144 1 359 1 49 1 156 2 334 1 239 1 282 1 208 1 162 1 
347 1 355 1 194 1 
347 1 355 1 194 1 
96 1 290 1 
96 1 347 1 290 1 
63 1 31 1 
56 1 242 1 326 1 164 1 359 1 31 1 63 1 225 1 129 1 334 1 187 1 230 1 10 2 208 1 338 1 210 1 369 1 262 1 100 1 193 2 134 2 49 1 214 2 196 1 156 1 29 2 162 1 
57 1 0 1 245 2 272 1 200 1 2 1 112 2 361 1 280 2 335 1 257 1 336 1 116 1 367 1 340 1 153 2 285 1 235 1 134 2 176 2 155 1 214 2 311 1 135 1 374 2 51 1 378 1 267 1 28 1 29 2 159 1 
57 1 322 1 58 1 245 2 154 1 99 1 358 1 145 1 176 2 112 2 206 1 236 1 302 1 6 1 148 1 365 1 12 2 116 1 169 1 
322 1 57 1 58 1 245 1 154 1 145 1 176 1 112 1 206 1 236 1 302 1 6 1 304 1 148 1 365 1 12 2 116 1 
57 1 322 1 340 1 245 1 261 1 358 1 234 1 176 1 112 1 51 1 103 1 80 1 268 1 116 1 
57 1 322 1 58 1 245 1 154 1 358 1 145 1 176 1 112 1 206 1 236 1 302 1 6 1 148 1 365 1 12 2 169 1 116 1 
253 1 
33 1 279 1 197 1 17 1 342 1 239 1 121 1 
244 1 327 1 359 1 35 1 5 1 113 1 279 1 252 1 17 1 192 1 212 1 121 1 20 1 215 1 379 1 239 2 162 1 
57 2 327 6 60 1 5 2 112 1 116 1 13 1 70 1 14 1 340 3 17 4 191 1 120 2 192 1 121 3 20 2 76 1 351 1 353 1 239 3 240 3 162 2 354 1 245 1 359 2 35 2 362 1 250 3 252 2 128 1 91 1 366 1 43 1 172 1 212 2 176 1 263 1 177 1 51 1 103 1 379 3 182 1 
354 2 163 1 327 6 60 2 359 1 64 1 35 2 250 5 5 2 279 2 252 1 39 1 366 2 115 1 70 1 172 2 188 1 17 8 192 1 48 1 75 1 212 2 121 5 20 2 263 2 350 1 53 1 379 3 25 1 353 2 239 5 240 5 160 1 162 1 83 1 
359 1 88 1 165 1 35 1 166 1 5 1 38 1 9 1 366 2 10 1 15 1 172 2 17 2 174 1 193 1 48 1 212 1 121 2 134 1 20 1 214 1 21 1 265 1 353 1 318 1 26 1 29 1 162 1 
354 2 43 1 172 2 17 5 327 10 60 2 48 1 121 5 263 2 250 5 379 5 353 2 366 2 239 5 240 5 
17 1 342 1 212 1 121 1 20 1 33 1 35 1 5 1 279 1 239 1 
57 1 0 1 245 1 247 1 88 1 112 1 280 2 10 2 336 1 116 1 367 1 97 1 340 1 174 2 153 1 233 1 193 2 285 1 134 3 235 1 311 1 176 1 214 2 155 1 196 1 376 1 76 1 103 1 51 1 137 1 159 1 29 3 
68 1 70 1 17 1 327 4 212 1 121 2 20 1 35 1 250 2 5 1 279 2 379 2 39 1 239 4 240 2 
279 1 252 1 192 1 239 1 359 1 162 1 
57 1 185 1 245 4 127 1 359 3 35 1 5 2 112 4 252 4 147 1 39 2 116 1 70 2 340 1 17 2 192 2 212 2 284 1 121 2 373 2 234 1 20 2 176 4 288 1 51 1 103 2 80 1 198 1 162 3 
216 1 369 1 164 1 
216 1 369 1 164 1 
324 1 369 1 356 1 164 1 63 1 
216 1 369 1 164 1 
266 1 369 1 164 1 
266 1 369 1 164 1 
266 1 369 1 164 1 
369 1 164 1 
56 1 49 1 
68 1 15 1 367 2 172 1 0 2 269 2 270 1 153 8 87 1 59 3 285 4 286 1 298 1 165 1 311 2 280 4 353 1 9 1 257 4 159 2 
68 1 15 1 172 1 197 1 269 2 153 6 87 1 353 1 59 2 9 1 285 3 298 1 257 3 165 1 
354 1 367 1 0 1 172 1 269 1 153 4 59 2 60 1 285 2 286 1 311 1 263 1 280 2 136 1 353 1 159 1 257 2 
231 1 354 1 172 1 188 2 269 1 153 7 59 2 60 1 285 4 286 1 263 1 25 1 353 1 115 1 257 3 
354 2 0 2 269 5 270 2 87 1 59 9 60 2 298 1 165 2 280 4 9 2 257 11 68 1 231 1 232 1 15 1 367 2 172 3 188 2 153 23 286 4 285 12 263 2 311 2 25 2 199 1 353 3 380 1 159 2 
188 1 153 1 285 1 
153 1 25 1 257 1 
354 1 367 1 43 1 0 1 172 1 269 2 153 6 59 3 60 1 285 3 286 1 311 1 263 1 280 2 136 1 353 1 159 1 257 3 
354 2 163 1 0 1 269 1 59 2 60 2 64 1 280 2 115 1 257 6 69 1 367 1 172 2 188 1 153 12 286 1 285 6 75 1 311 1 263 2 25 1 353 2 159 1 160 1 83 1 
15 1 172 1 269 1 153 6 59 2 285 3 286 1 165 1 353 1 9 1 257 3 
367 1 0 1 269 1 270 1 153 3 87 1 59 2 286 1 285 2 298 1 165 1 311 1 280 2 380 1 9 1 257 1 159 1 
0 1 269 2 87 1 59 2 298 1 165 1 280 2 9 1 115 1 257 4 68 1 69 1 367 1 15 1 172 1 188 1 153 8 285 4 75 1 311 1 25 1 353 1 159 1 
354 1 0 2 269 2 87 1 59 3 298 1 165 1 280 4 9 1 115 1 257 6 68 1 69 1 231 1 15 1 367 2 172 2 188 2 153 11 285 5 75 1 286 1 311 2 263 1 136 1 25 1 353 1 159 2 
354 2 163 1 0 3 269 3 270 1 87 1 59 4 60 2 298 1 165 1 64 1 280 6 9 1 115 1 257 9 68 1 69 1 15 1 367 3 172 3 188 1 153 19 286 1 285 10 75 1 311 3 263 2 136 1 25 1 353 3 159 3 160 1 83 1 
354 2 163 1 0 3 270 1 269 3 87 1 59 5 60 1 298 1 165 1 64 1 280 6 9 1 115 1 257 10 68 1 69 1 15 1 367 3 172 3 188 1 153 17 286 2 285 7 75 1 311 3 263 2 136 1 25 1 353 2 159 3 160 1 83 1 
0 1 269 2 87 1 59 2 298 1 165 1 280 2 9 1 115 1 257 4 68 1 69 1 367 1 15 1 172 1 188 1 153 8 285 4 75 1 311 1 25 1 353 1 159 1 
354 2 163 1 0 1 269 1 59 2 60 2 64 1 280 2 115 1 257 6 69 1 367 1 172 2 188 1 153 12 286 1 285 6 75 1 311 1 263 2 25 1 353 2 159 1 160 1 83 1 
354 2 163 1 0 4 269 3 270 2 87 1 59 5 60 1 298 1 165 1 64 1 280 8 9 1 115 1 257 10 68 1 69 1 15 1 367 4 172 3 188 1 153 18 286 2 285 8 75 1 311 4 263 2 136 1 25 1 353 2 159 4 160 1 83 1 
354 3 163 1 0 4 269 3 270 2 59 6 60 2 274 1 64 1 280 8 115 1 257 9 69 1 367 4 172 3 188 1 153 16 286 3 285 7 75 1 311 4 263 3 25 1 353 2 159 4 160 1 83 1 
15 1 172 1 269 3 153 7 87 1 59 6 285 4 286 3 298 2 165 3 353 1 9 3 257 3 
354 2 163 1 0 4 269 3 270 2 87 1 59 4 60 1 274 1 298 1 165 1 64 1 280 8 9 1 115 1 257 10 68 1 69 1 15 1 367 4 172 3 188 1 153 18 286 1 285 8 75 1 311 4 263 2 25 1 353 2 159 4 160 1 83 1 
69 1 367 1 15 1 0 1 172 2 269 3 153 10 59 5 286 2 285 5 165 2 311 1 280 2 353 2 9 2 26 1 159 1 257 5 
69 1 367 1 0 1 172 1 153 2 59 1 286 1 311 1 263 1 280 2 159 1 257 2 
69 1 354 1 367 1 0 1 172 1 269 1 153 4 59 2 60 1 285 2 286 1 311 1 263 1 280 2 353 1 159 1 257 2 
69 1 367 3 0 3 270 1 269 1 153 3 59 2 274 1 285 2 286 1 165 1 311 3 280 6 380 1 9 1 159 3 257 1 
354 3 0 5 270 2 269 7 87 1 59 12 60 3 274 1 298 1 165 3 66 1 280 10 9 3 115 1 257 16 68 1 95 1 69 1 231 1 15 2 367 5 172 5 188 4 153 34 285 18 286 5 311 5 263 3 104 1 136 1 25 3 380 1 353 5 159 5 
214 1 196 1 237 1 260 1 105 1 29 1 134 1 
260 1 30 1 213 1 134 1 214 1 276 1 196 1 237 1 79 1 105 1 319 1 29 1 
176 1 57 1 112 1 340 1 51 1 103 1 197 1 245 1 80 1 234 1 116 1 
57 1 340 1 97 1 245 1 233 1 193 1 134 2 214 1 176 1 196 1 76 1 112 1 51 1 103 1 52 1 10 1 29 2 116 1 
57 1 245 1 65 1 112 1 10 1 116 1 42 1 97 1 340 3 189 1 233 1 193 2 373 1 134 2 176 1 214 2 21 1 196 1 76 2 51 2 52 1 139 1 29 2 
57 1 245 2 65 1 112 2 67 1 10 1 116 1 42 1 97 1 340 3 189 1 193 2 373 1 134 2 176 2 214 2 21 1 196 1 76 2 51 2 52 1 238 1 139 1 29 2 
57 1 245 3 359 2 112 3 279 1 252 1 91 1 333 1 67 1 116 1 305 1 42 1 340 4 120 1 19 1 373 1 176 3 76 1 51 1 103 1 139 1 239 1 162 2 
245 1 359 2 88 1 166 1 112 1 279 1 252 1 91 1 10 1 340 1 174 1 120 1 193 1 373 1 134 1 176 1 214 1 21 1 265 1 182 1 318 1 239 1 29 1 162 2 
176 1 57 1 112 1 245 1 150 1 116 1 
57 3 340 3 245 6 341 1 154 1 126 1 99 1 370 1 283 1 176 7 374 1 112 7 76 1 103 2 51 2 157 1 128 1 335 1 82 1 150 1 116 2 
57 1 0 2 142 1 272 1 269 2 59 2 112 1 280 4 9 1 10 1 116 1 68 1 15 1 340 1 153 6 233 1 74 1 193 1 285 3 235 2 155 2 196 2 76 1 353 1 158 1 161 1 29 2 28 1 159 2 245 1 87 1 247 1 298 1 165 1 205 1 257 3 367 2 97 1 172 1 99 1 134 2 176 1 311 2 214 1 376 1 51 1 52 1 
5 2 112 1 279 2 9 1 10 1 13 1 15 1 340 1 17 4 191 1 342 1 192 1 120 1 193 1 284 1 121 5 20 2 21 1 351 1 353 2 239 2 26 1 29 1 162 3 245 1 359 3 88 1 165 1 33 1 35 2 166 1 252 2 91 1 366 2 172 2 210 1 174 1 48 1 212 2 134 1 176 1 214 1 265 1 103 1 182 1 318 1 
57 2 340 2 245 2 99 1 176 2 177 1 112 2 76 1 51 1 128 1 333 1 150 1 116 1 
171 1 320 1 57 2 340 1 245 2 341 1 223 1 373 1 176 2 112 2 76 1 51 1 82 1 116 1 
57 2 340 3 245 4 126 1 1 1 99 1 283 1 373 1 234 1 176 5 112 5 103 1 51 2 80 1 335 1 116 2 
57 2 340 3 245 4 1 1 99 1 283 1 373 1 234 1 176 5 112 5 103 1 51 2 80 1 335 1 183 1 116 2 
57 1 340 1 245 4 1 1 99 1 234 1 176 4 112 4 103 1 51 1 80 1 67 1 116 1 
176 1 57 1 112 1 103 1 58 1 245 1 6 1 12 1 145 1 116 1 
57 1 340 1 245 2 154 1 99 1 200 1 176 2 112 2 51 1 335 1 116 1 
57 1 340 1 97 1 245 1 193 1 134 2 214 1 176 1 196 1 76 1 112 1 51 1 103 1 52 1 238 1 10 1 29 2 116 1 
57 2 340 1 245 1 341 1 373 1 176 1 112 1 76 1 51 1 157 1 128 1 82 1 116 1 
203 1 196 1 375 1 349 1 255 1 
189 1 210 1 273 1 371 1 359 2 264 1 21 1 203 2 196 1 65 1 375 1 279 1 349 2 91 1 314 1 293 1 255 2 239 1 162 2 
214 1 135 1 203 1 375 1 361 1 349 1 267 1 29 1 134 1 
375 1 314 1 273 1 
258 1 90 1 197 1 219 1 
258 1 90 1 173 1 40 1 101 1 219 1 299 1 
306 1 124 1 299 1 
258 1 190 1 173 1 297 2 61 1 101 1 299 3 90 1 277 1 40 3 241 1 219 1 
258 1 90 1 173 1 308 1 131 1 40 2 101 1 219 1 299 2 
173 1 58 1 101 1 299 1 277 1 313 1 167 1 40 1 148 1 12 1 219 1 
258 1 277 1 173 1 40 1 101 1 219 1 299 1 
258 2 90 1 277 1 173 1 40 1 101 1 299 1 
258 1 173 2 101 2 299 2 277 1 316 1 254 1 40 2 337 1 219 1 
258 1 173 1 308 2 101 1 299 3 310 1 90 1 195 1 277 1 167 1 138 1 40 3 219 2 
258 1 173 1 58 1 308 1 101 1 299 2 90 1 277 1 302 1 6 1 179 1 40 2 148 1 12 2 219 1 
258 1 173 2 308 2 101 2 299 4 90 1 195 1 277 1 167 1 291 1 131 1 40 4 219 2 
258 1 90 1 277 1 173 1 40 1 101 1 219 1 299 1 
258 2 173 1 308 2 297 1 61 1 101 1 299 4 90 2 195 1 77 1 167 1 40 4 241 1 219 3 
258 1 173 1 308 1 101 1 299 2 90 1 277 1 122 1 348 1 8 1 40 2 219 1 
258 1 173 1 297 2 61 1 101 1 372 1 299 3 90 1 277 1 40 3 241 2 219 1 
85 1 168 1 219 2 331 2 
277 1 173 1 81 1 40 1 101 1 299 1 
258 1 90 1 277 1 173 1 308 1 40 2 101 1 219 1 310 1 299 2 
32 1 
258 1 90 1 277 1 173 1 40 1 101 1 219 1 299 1 
258 1 90 1 277 1 173 1 308 1 297 1 40 3 101 1 310 1 219 1 299 3 
195 1 77 1 167 1 219 1 
258 1 219 1 

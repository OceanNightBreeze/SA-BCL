#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 72 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
178 2 92 1 36 1 121 1 95 1 336 1 318 2 360 4 362 2 319 1 182 1 43 1 322 1 363 1 185 1 221 1 146 2 273 2 148 5 191 6 198 9 24 9 281 3 9 1 29 1 116 2 208 2 137 1 
178 2 92 1 36 1 121 1 95 1 336 1 318 2 360 4 362 2 319 1 182 1 43 1 322 1 363 1 185 1 221 1 146 2 273 2 148 5 191 6 198 9 24 9 281 3 9 1 29 1 116 2 208 2 137 1 
178 2 92 1 36 1 121 1 95 1 336 1 318 2 360 5 362 2 319 1 182 1 43 1 322 1 363 1 185 1 221 1 146 2 273 2 148 6 191 7 198 10 24 10 281 4 9 1 29 1 116 2 208 2 137 1 
178 2 92 1 36 1 121 1 95 1 336 1 318 2 360 3 362 2 319 1 182 1 43 1 322 1 363 1 185 1 221 1 146 1 273 2 148 4 191 4 198 7 24 7 281 2 9 1 116 2 208 2 137 1 
273 1 148 3 191 3 178 1 36 1 121 1 198 4 24 4 281 1 318 1 360 2 43 1 9 1 29 1 208 1 116 1 146 2 137 1 
148 1 273 1 36 1 121 1 198 2 242 1 24 2 318 1 336 1 319 1 362 1 9 1 245 1 101 1 116 1 208 1 
273 2 148 2 191 1 36 1 121 1 198 3 24 3 281 1 360 1 362 1 9 1 221 1 116 2 
178 1 36 1 121 1 262 1 360 4 318 1 362 1 182 1 43 1 363 1 221 1 146 2 273 2 148 5 191 7 198 9 24 9 281 3 84 1 9 1 29 1 116 2 208 1 137 1 
178 1 36 1 121 1 262 1 360 4 318 1 362 1 182 1 43 1 363 1 221 1 146 2 273 2 148 5 191 7 198 9 24 9 281 3 84 1 9 1 29 1 116 2 208 1 137 1 
33 1 17 1 72 1 
77 1 17 1 289 2 
328 1 123 1 297 2 335 2 63 2 156 2 20 2 311 2 
157 1 158 2 61 1 211 1 335 3 63 2 16 1 180 1 181 1 94 1 67 1 217 1 68 1 123 1 297 3 339 1 20 2 246 2 223 2 126 2 345 1 195 1 4 1 328 1 83 1 51 1 26 2 28 1 55 1 330 1 86 1 375 1 156 2 12 1 209 1 310 1 311 2 
328 1 297 1 335 1 63 1 156 1 20 1 46 1 102 1 311 1 222 1 
149 1 33 1 335 1 212 1 17 1 18 1 351 1 268 1 297 1 134 1 114 1 156 1 257 1 46 1 
33 1 63 1 335 1 17 1 18 1 268 2 351 2 297 1 134 1 114 1 20 1 156 1 257 1 46 1 311 1 
268 1 351 1 54 1 8 1 304 1 
33 1 268 2 351 2 54 1 8 1 17 1 295 1 235 1 
268 1 351 1 8 1 
63 1 335 1 328 1 351 1 268 1 54 1 297 1 20 1 156 1 46 1 102 1 31 1 311 1 222 1 
17 1 
33 1 268 2 351 2 54 1 8 1 174 1 17 1 235 1 
176 1 118 1 141 1 33 1 177 2 17 1 23 2 254 1 351 5 268 5 54 2 69 1 8 2 145 1 287 2 11 1 332 1 235 1 342 1 
123 1 72 1 
335 2 63 1 307 1 123 2 297 2 156 2 20 1 311 1 75 1 
347 1 78 1 131 1 
223 1 211 1 335 1 195 1 4 1 180 1 94 1 51 1 26 1 123 1 28 1 297 1 86 1 366 1 246 1 310 1 
223 1 166 1 211 1 63 1 335 2 195 1 180 1 4 1 37 1 94 1 131 1 51 1 26 1 28 1 297 2 86 1 20 1 156 1 246 1 310 1 
166 1 14 1 123 1 308 1 297 5 335 5 63 4 212 1 169 1 156 5 20 4 37 2 311 1 75 1 
42 1 297 2 335 2 63 2 156 2 20 2 46 1 222 1 
123 1 297 3 335 3 63 3 156 3 20 3 37 1 311 1 
297 1 335 1 63 1 156 1 20 1 46 1 222 1 
307 1 297 1 335 1 63 1 156 1 20 1 46 1 311 1 75 1 
158 1 61 1 211 1 335 4 63 3 180 1 37 1 181 1 94 1 67 1 18 1 217 1 68 1 123 1 268 1 219 1 297 4 298 1 20 3 246 1 46 1 75 1 223 1 166 1 126 2 345 1 195 1 4 1 328 1 83 1 51 1 26 1 28 1 351 1 55 1 330 1 134 1 114 1 86 1 156 3 12 1 310 1 257 1 311 2 
123 1 308 1 297 2 335 2 63 1 212 1 156 2 20 1 37 1 
166 1 63 3 335 3 17 1 129 1 37 2 18 1 268 1 351 1 297 3 219 1 134 1 114 1 20 3 156 3 46 1 257 1 311 1 75 1 
63 2 335 2 347 1 37 1 131 1 297 2 20 2 156 2 311 1 75 1 
223 1 211 1 335 1 195 1 4 1 180 1 94 1 51 1 26 1 123 1 28 1 297 1 86 1 246 1 310 1 
223 1 139 1 190 1 211 1 335 1 195 1 180 1 94 1 26 1 123 1 28 1 297 1 86 1 246 1 310 1 
59 1 61 1 158 4 313 1 91 1 241 1 181 2 359 1 68 1 339 2 244 1 2 1 187 1 21 1 344 1 126 2 345 1 347 2 78 2 131 2 83 1 330 1 12 1 13 1 
297 1 42 1 335 1 63 1 156 1 20 1 46 1 257 1 
110 1 165 1 
110 1 165 1 
225 1 144 1 
225 1 144 1 
225 1 144 1 
110 1 340 1 165 1 
110 1 165 1 196 1 
225 1 110 2 144 1 165 2 155 1 201 1 
110 1 340 1 165 1 
110 1 340 1 165 1 
110 1 165 1 278 1 
110 1 165 1 278 1 
110 1 165 1 278 1 
160 1 63 2 335 2 213 1 215 1 142 1 162 1 123 1 268 1 297 2 165 1 20 2 301 1 196 1 80 1 252 1 152 1 109 1 110 1 351 1 7 1 290 1 156 2 138 1 
140 2 160 2 356 1 229 1 17 1 215 1 162 2 163 1 201 1 204 1 109 3 337 1 110 2 351 2 268 2 7 2 165 2 290 2 291 1 
318 1 178 1 208 1 
318 1 245 1 208 1 
318 3 98 1 178 2 44 1 245 1 175 1 
318 2 178 1 44 1 245 1 115 1 175 1 
318 2 178 1 44 1 245 1 175 2 
293 1 141 1 177 1 33 1 91 1 240 1 213 1 17 2 142 1 358 1 359 1 266 2 268 5 41 2 69 3 244 1 2 1 77 1 22 1 106 2 368 1 252 1 23 1 171 1 52 1 351 5 54 4 329 1 8 1 287 1 289 3 11 2 235 1 
293 3 117 1 118 1 141 1 33 1 177 2 91 3 213 4 240 1 17 5 358 3 359 3 266 6 268 9 69 8 244 3 2 3 247 1 73 1 277 1 77 3 106 6 304 5 280 1 306 5 23 2 52 2 372 1 351 9 54 7 329 2 8 6 287 2 289 9 11 6 235 1 
293 1 118 1 33 1 177 1 335 1 63 1 91 1 213 1 17 3 358 1 359 1 266 2 268 3 297 1 69 3 41 1 244 1 2 1 20 1 46 1 102 1 222 1 77 2 368 1 106 2 23 1 328 1 171 1 52 1 351 3 54 2 329 1 112 1 287 1 289 4 156 1 11 2 311 1 31 1 
293 2 177 1 33 1 335 1 91 2 297 1 41 2 244 2 2 2 247 1 46 1 102 1 106 4 52 1 351 4 54 3 112 1 156 1 11 4 311 1 118 1 63 1 213 2 17 4 358 2 359 2 266 4 268 4 69 5 20 1 73 1 222 1 77 3 368 1 280 1 23 1 171 1 328 1 329 1 287 1 289 7 31 1 
195 1 35 1 72 1 
226 1 195 1 
283 1 
211 1 195 1 180 1 
195 1 364 1 
195 1 180 1 
296 1 211 1 35 2 195 3 346 1 180 1 
158 7 103 1 91 1 241 2 348 1 181 3 243 1 108 2 25 1 27 1 285 1 244 1 339 4 286 1 56 1 21 3 324 1 
158 7 103 1 91 1 241 2 348 1 181 3 243 1 108 2 25 1 27 1 285 1 244 1 339 4 286 1 56 1 21 3 324 1 
158 7 103 1 91 1 241 2 348 1 181 3 243 1 253 1 108 2 25 1 27 1 285 1 244 1 339 4 286 1 56 1 21 3 324 1 
293 3 158 31 238 1 91 4 241 5 181 15 359 3 243 1 218 1 339 16 244 4 2 3 324 2 21 10 126 2 345 1 103 1 348 2 82 4 370 1 108 3 25 2 83 1 27 1 330 1 285 2 154 1 352 1 286 5 135 1 56 1 12 1 136 1 378 3 
158 9 91 1 241 3 181 4 243 1 244 1 339 5 21 4 324 1 126 4 47 1 345 2 348 1 108 2 83 2 25 1 27 1 6 1 330 2 285 1 154 1 286 1 56 1 12 2 
178 1 36 1 121 1 122 1 94 1 318 2 362 1 98 1 270 1 245 1 246 1 343 1 223 1 148 1 273 1 302 1 191 1 198 2 24 2 26 1 203 1 53 1 205 1 28 1 9 1 233 1 208 1 377 1 116 1 259 1 
178 1 121 1 122 1 94 1 143 1 318 2 362 1 98 1 245 1 246 1 343 1 223 1 148 1 273 1 302 1 191 2 151 1 198 3 24 3 26 1 282 1 203 1 53 1 205 1 28 1 9 1 208 1 377 1 116 1 259 1 
178 1 121 1 122 1 94 1 143 1 318 2 362 1 98 1 245 1 246 1 343 1 223 1 148 1 191 2 151 1 198 2 24 2 26 1 203 1 53 1 205 1 28 1 9 1 377 1 208 1 
211 1 239 1 180 2 0 1 94 2 362 2 323 1 365 1 45 1 246 1 325 1 343 2 223 1 326 1 273 1 224 1 195 2 128 1 198 1 24 1 26 1 282 1 5 1 28 1 205 2 86 1 116 1 377 2 236 1 334 1 
178 1 36 1 122 1 94 1 143 1 318 2 362 1 98 1 245 1 246 1 343 1 223 1 273 1 302 1 198 1 24 1 26 1 203 1 53 1 205 1 28 1 233 1 208 1 377 1 116 1 259 1 
199 1 
141 1 177 1 211 1 180 2 0 1 94 2 216 1 164 1 268 2 69 1 323 1 246 2 223 2 326 1 224 1 367 1 195 2 128 1 23 1 52 1 26 2 5 1 28 1 351 2 8 2 86 2 287 1 11 1 235 1 
335 1 212 1 18 1 66 1 268 3 297 1 99 1 46 1 249 1 149 1 150 1 168 1 351 3 134 1 374 1 8 2 114 1 174 1 206 2 156 1 235 1 257 1 
33 1 335 1 212 1 17 1 18 1 66 1 268 3 297 1 99 1 46 1 249 1 149 1 150 1 168 1 351 3 134 1 8 1 114 1 174 1 206 3 207 1 156 1 257 1 235 1 
33 1 335 1 212 1 17 1 18 1 66 1 268 3 297 1 99 1 46 1 249 1 149 1 150 1 168 1 132 1 351 3 134 1 374 1 8 2 174 1 114 1 206 3 207 1 156 1 235 1 257 1 
292 2 141 1 33 5 177 1 335 1 297 1 99 1 299 1 186 1 46 1 248 1 249 1 149 1 150 1 193 2 50 1 351 5 8 7 114 1 206 6 207 4 156 1 11 1 257 1 212 1 357 1 17 5 66 1 18 1 268 5 69 1 125 2 76 2 167 1 77 2 168 1 23 1 132 4 134 1 374 4 174 1 287 1 235 3 333 1 
292 2 141 1 177 1 33 1 335 1 297 1 99 1 299 1 186 1 46 1 249 1 149 1 150 1 193 2 351 4 8 4 114 1 206 4 207 2 156 1 11 1 257 1 212 1 161 1 17 2 66 1 18 1 268 4 69 1 125 2 76 2 77 2 168 1 23 1 132 2 134 1 374 2 287 1 289 2 235 2 
292 2 141 1 33 1 177 1 335 1 212 1 17 1 18 1 66 1 268 4 69 1 297 1 99 1 125 2 186 1 299 1 248 1 46 1 76 2 249 1 149 1 167 1 150 1 193 2 77 2 168 1 23 1 132 2 50 1 351 4 134 1 374 2 8 4 114 1 287 1 207 2 206 4 11 1 156 1 235 2 257 1 
292 2 141 1 33 1 177 1 335 1 212 1 17 1 18 1 66 1 268 4 69 1 297 1 99 1 125 2 186 1 299 1 248 1 46 1 76 2 249 1 149 1 167 1 150 1 193 2 77 2 168 1 23 1 132 2 50 1 351 4 134 1 374 2 8 4 114 1 287 1 207 2 206 4 11 1 156 1 235 2 257 1 
141 1 33 1 177 1 354 2 335 1 212 1 179 1 17 1 18 1 66 1 265 1 268 4 69 1 297 1 99 1 186 1 248 1 46 1 76 2 249 1 149 1 150 1 193 2 197 1 168 1 81 2 23 1 132 2 351 4 134 1 374 2 8 4 114 1 287 1 207 2 289 2 206 4 11 1 156 1 235 2 257 1 
292 2 141 1 33 1 177 1 335 1 212 1 357 1 17 1 18 1 66 1 268 4 69 1 297 1 99 1 125 2 186 1 299 1 248 1 46 1 76 2 249 1 149 1 167 1 150 1 193 2 77 2 168 1 23 1 132 3 50 1 351 4 134 1 374 3 8 5 114 1 287 1 206 5 207 3 11 1 156 1 235 2 257 1 
292 2 141 1 33 1 177 1 335 1 212 1 357 1 17 1 18 1 66 1 268 4 69 1 297 1 99 1 125 2 186 1 299 1 248 1 46 1 76 2 249 1 149 1 167 1 150 1 193 2 77 2 168 1 23 1 132 3 50 1 351 4 134 1 374 3 8 5 114 1 287 1 206 5 207 3 11 1 156 1 235 2 257 1 
141 1 33 1 177 1 354 2 335 1 212 1 161 1 17 1 18 1 66 1 268 4 69 1 297 1 99 1 186 1 46 1 76 2 249 1 149 1 150 1 193 2 168 1 197 1 81 2 23 1 132 2 351 4 134 1 374 2 8 4 114 1 287 1 207 2 289 2 206 4 11 1 156 1 235 2 257 1 
59 1 61 1 158 6 91 1 241 2 181 3 243 1 68 1 123 2 244 1 339 3 72 1 324 1 21 2 126 2 345 1 347 1 78 1 348 1 131 1 108 1 83 1 27 1 330 1 56 1 12 1 
293 2 61 2 158 14 91 1 241 1 181 6 359 2 217 1 68 1 218 1 123 1 339 8 244 2 2 1 21 2 147 1 126 4 345 2 347 4 3 1 78 11 305 1 82 3 131 11 371 1 83 2 330 2 286 1 135 1 375 1 12 2 353 1 378 3 
61 1 158 2 211 1 335 2 63 1 180 1 37 1 94 1 181 1 68 1 217 1 123 1 297 2 339 1 246 1 366 1 20 1 223 1 166 1 126 2 345 1 195 1 251 1 347 1 3 1 4 1 350 1 51 1 83 1 26 1 28 1 231 1 330 1 86 1 375 1 156 1 310 1 12 1 
293 2 335 3 91 3 241 4 180 2 37 1 181 10 94 2 243 1 143 1 297 3 244 3 339 10 2 2 246 3 345 3 194 2 195 2 347 7 3 1 4 2 348 1 108 1 51 2 56 1 156 1 256 2 12 3 310 2 62 1 61 3 158 20 314 2 211 2 63 1 359 2 67 2 217 1 68 3 123 2 269 1 20 1 324 1 21 8 272 1 223 3 166 1 126 6 78 7 131 7 83 3 27 1 26 3 28 2 330 3 86 1 286 4 375 1 288 2 
61 1 158 2 211 1 180 2 0 1 94 2 181 1 68 1 217 1 339 1 323 1 246 2 223 2 326 1 189 1 126 2 224 1 275 1 345 1 195 2 128 1 83 1 26 2 5 1 28 1 330 1 86 1 375 1 12 1 209 1 
293 1 61 1 158 3 63 1 335 1 91 1 241 1 359 1 181 2 68 1 297 1 244 1 339 1 2 1 20 1 21 1 75 1 126 2 345 1 347 1 78 1 3 1 131 1 83 1 330 1 88 1 156 1 12 1 311 1 
59 1 158 2 61 1 126 2 345 1 347 1 78 1 359 1 131 1 68 1 83 1 330 1 244 1 339 2 286 1 12 1 187 1 21 1 
59 1 158 2 61 1 126 2 313 1 345 1 91 1 347 1 241 1 78 1 181 2 131 1 68 1 83 1 330 1 2 1 12 1 21 1 
293 1 59 1 61 1 158 4 91 1 241 1 359 1 181 2 68 1 339 2 244 1 2 1 21 2 126 2 345 1 347 2 78 2 131 2 83 1 330 1 286 1 12 1 
189 1 158 2 61 1 126 2 345 1 347 1 78 1 359 1 131 1 68 1 83 1 330 1 244 1 339 2 286 1 12 1 187 1 21 1 
189 1 158 2 61 1 126 2 313 1 345 1 91 1 347 1 241 1 78 1 181 2 131 1 68 1 83 1 330 1 2 1 12 1 21 1 
293 1 61 1 158 4 91 1 241 1 359 1 181 2 68 1 339 2 244 1 2 1 21 2 189 1 126 2 345 1 347 2 78 2 131 2 83 1 330 1 286 1 12 1 
293 1 61 1 126 2 158 4 345 1 91 1 347 2 241 1 78 2 181 2 359 1 131 2 68 1 83 1 330 1 244 1 339 2 286 1 2 1 12 1 21 2 
158 2 61 1 211 1 335 1 180 1 94 1 181 1 67 1 68 1 217 1 123 1 297 1 339 1 246 1 223 1 126 2 345 1 195 1 4 1 51 1 83 1 26 1 28 1 330 1 86 1 375 1 310 1 12 1 
139 1 158 2 61 1 211 1 335 1 180 1 94 1 181 1 68 1 217 1 123 1 297 1 339 1 246 1 223 1 190 1 126 2 274 1 345 1 195 1 83 1 26 1 28 1 330 1 86 1 375 1 310 1 12 1 
293 1 61 1 158 4 91 1 241 1 359 1 181 2 68 1 339 2 244 1 2 1 21 2 126 2 345 1 347 2 3 1 78 2 131 2 83 1 330 1 286 1 12 1 
293 1 158 4 61 1 211 1 314 1 335 1 91 1 241 1 180 1 181 2 359 1 94 1 67 1 68 1 297 1 270 1 339 2 244 1 2 1 246 1 21 2 223 1 126 2 345 1 195 1 347 2 78 2 4 1 131 2 51 1 83 1 26 1 28 1 330 1 286 1 310 1 12 1 
293 1 61 1 158 3 32 1 63 1 335 1 91 1 181 1 359 1 68 1 297 1 244 1 339 2 2 1 20 1 21 1 75 1 126 2 345 1 347 1 3 1 78 1 131 1 83 1 330 1 286 1 156 1 12 1 311 1 
237 1 293 3 158 19 91 3 120 1 241 3 316 2 181 10 359 3 96 1 218 1 320 1 339 9 244 3 341 1 2 3 21 6 126 4 345 2 105 2 79 1 82 2 83 2 6 1 330 2 309 1 286 3 135 1 12 2 378 1 
293 3 158 26 210 1 90 1 91 2 120 1 65 1 241 2 316 1 181 12 359 3 218 2 320 2 124 1 339 14 244 3 341 2 2 2 21 4 126 6 303 1 345 3 105 4 79 1 82 2 83 3 6 1 255 1 330 3 154 2 309 1 286 2 12 3 378 2 
293 4 158 41 210 1 90 1 91 5 120 1 65 1 241 4 316 1 181 21 359 4 243 1 96 1 218 3 320 2 124 1 339 20 244 5 341 1 2 4 324 1 21 8 126 6 303 1 192 1 345 3 105 4 348 1 79 1 82 4 108 1 83 3 27 1 6 1 255 1 330 3 154 1 309 1 286 4 135 1 56 1 12 3 378 3 
293 4 158 38 210 1 90 1 91 4 120 1 65 1 241 4 316 1 181 18 359 4 243 1 96 1 218 3 320 2 124 1 339 20 244 5 341 1 2 3 324 1 21 7 126 8 303 1 192 1 345 4 105 4 348 1 79 1 82 4 108 1 83 4 27 1 6 1 255 1 330 4 154 2 309 1 286 3 135 1 56 1 12 4 378 3 
293 7 158 52 210 1 90 1 91 8 120 1 65 1 241 7 316 1 181 25 359 7 243 1 218 2 320 1 124 1 339 27 244 8 341 1 2 7 324 1 21 14 126 4 303 1 345 2 105 4 348 1 79 1 82 4 108 1 83 2 27 1 6 1 255 1 330 2 154 1 309 1 286 7 135 2 56 1 12 2 353 2 378 4 
110 1 160 1 7 1 165 1 229 1 10 1 290 1 291 1 162 1 201 1 
301 1 196 1 
317 1 172 1 85 1 110 1 160 1 7 1 165 1 290 1 162 1 
300 1 340 1 
278 1 155 1 349 1 
140 1 160 1 356 1 229 1 17 1 215 1 162 1 163 1 201 1 109 2 337 1 110 1 351 1 268 1 7 1 165 1 290 1 291 1 
140 1 160 1 356 1 229 1 17 1 215 1 162 1 163 1 201 1 109 2 337 1 110 1 351 1 268 1 7 1 165 1 290 1 291 1 
140 1 160 1 356 1 229 1 17 1 215 1 162 1 163 1 201 1 109 2 337 1 110 1 351 1 268 1 7 1 165 1 290 1 291 1 
300 1 340 1 155 1 
300 1 340 1 155 1 
278 1 349 1 
278 1 155 1 349 1 
80 1 138 1 
140 1 160 1 335 2 63 2 213 1 142 1 162 1 163 1 19 1 123 1 268 1 297 2 165 1 20 2 301 1 196 1 80 1 252 1 152 1 109 1 110 1 351 1 54 1 7 1 290 1 156 2 138 1 
61 1 158 2 119 1 335 2 180 1 94 1 181 1 68 1 217 1 297 2 339 1 220 1 246 2 223 2 126 2 227 1 275 1 345 1 276 1 195 1 3 1 83 1 26 2 28 1 330 1 375 1 156 2 12 1 209 2 258 1 312 1 
223 2 302 1 327 1 178 1 94 1 318 2 143 1 26 2 203 1 53 1 28 1 98 1 153 1 270 1 70 1 245 1 246 2 208 1 377 1 
223 1 302 1 178 1 94 1 318 2 143 1 26 1 203 1 53 1 28 1 98 1 183 1 70 1 245 1 246 1 208 1 377 1 
211 1 239 1 180 2 93 1 94 2 0 1 323 1 246 1 325 1 326 1 223 1 224 1 195 2 128 1 26 1 5 1 28 1 153 1 86 1 377 1 
223 1 302 1 327 1 178 1 94 1 318 2 143 1 26 1 203 1 53 1 28 1 98 1 153 1 70 1 245 1 246 1 208 1 377 1 
188 1 
254 1 33 1 69 1 145 1 17 1 11 1 72 1 
292 1 141 1 177 1 33 1 17 2 268 1 69 1 125 1 299 1 77 1 23 1 351 1 8 1 287 1 289 1 11 1 235 1 
293 1 141 2 177 2 35 1 91 1 180 1 94 2 244 1 2 1 246 1 194 1 195 4 346 1 106 3 52 1 351 2 8 2 113 1 11 3 211 1 64 1 17 3 358 2 359 1 18 1 266 3 268 2 69 4 74 1 223 1 226 2 77 3 369 1 23 2 26 1 28 1 373 1 86 1 287 2 30 1 87 1 289 6 235 1 
293 2 141 2 177 2 210 1 33 2 90 1 91 2 17 5 358 1 263 1 359 2 266 5 164 1 218 1 268 1 69 8 124 1 244 2 2 2 303 1 77 3 106 5 23 2 82 1 52 1 173 1 351 1 255 1 8 1 112 2 287 2 289 6 11 5 235 1 378 1 
141 1 177 1 335 1 63 1 91 1 358 1 1 1 268 1 297 1 69 2 244 2 20 1 46 1 102 1 324 1 222 1 348 1 23 1 50 1 328 1 27 1 351 1 112 2 287 1 11 2 156 1 31 1 311 1 
141 1 177 1 33 1 17 1 23 1 254 1 69 1 145 1 287 1 11 1 
293 1 77 2 91 1 106 2 17 2 358 1 359 1 266 2 69 2 112 1 244 1 2 1 289 4 11 2 
33 1 268 1 351 1 8 1 17 1 235 1 
141 1 159 1 177 1 211 1 180 2 0 1 94 2 216 1 164 1 268 1 69 1 323 1 246 2 223 2 326 1 224 1 367 1 195 2 128 1 23 1 52 1 26 2 5 1 28 1 351 1 8 2 86 2 287 1 11 1 235 1 
158 1 61 1 211 1 335 3 63 2 180 1 181 1 94 1 67 1 217 1 68 1 123 1 297 3 246 1 20 2 223 1 126 2 345 1 195 1 4 1 328 1 51 1 83 1 26 1 28 1 55 1 330 1 86 1 156 2 12 1 310 1 311 2 
141 1 177 1 33 1 77 1 106 1 17 2 23 1 52 1 164 1 69 1 287 1 289 2 11 1 
71 1 290 1 162 1 
60 1 290 1 291 1 162 1 138 1 
71 1 290 1 162 1 
71 1 290 1 162 1 
250 1 290 1 162 1 
250 1 290 1 162 1 
250 1 290 1 162 1 
290 1 162 1 
110 1 165 1 
158 8 126 4 345 2 91 1 241 2 348 1 181 4 243 1 108 1 83 2 27 1 330 2 154 1 244 1 339 4 286 1 56 1 12 2 21 3 324 1 
158 6 91 1 241 2 348 1 181 3 243 1 108 1 27 1 244 1 339 3 56 1 72 1 324 1 21 2 
293 1 294 1 126 2 158 4 345 1 91 1 241 1 181 2 359 1 83 1 330 1 244 1 339 2 286 1 2 1 12 1 21 2 
293 1 158 7 91 1 241 1 181 4 359 1 82 2 218 1 339 3 244 1 286 1 2 1 135 1 378 1 21 2 
293 2 158 23 91 3 355 1 241 5 359 2 181 12 243 1 244 3 339 11 2 2 324 2 21 9 126 4 345 2 305 1 348 2 82 2 108 1 83 2 27 1 330 2 154 2 286 4 135 1 56 1 12 2 378 2 353 1 
158 1 181 1 82 1 
158 1 339 1 378 1 
293 1 294 1 126 2 158 6 345 1 194 1 91 1 241 2 181 3 359 1 83 1 330 1 244 1 339 3 286 1 2 1 12 1 21 3 
293 2 158 12 210 1 90 1 91 2 241 1 181 6 359 2 218 1 124 1 339 6 244 2 2 2 21 2 126 2 303 1 345 1 82 1 83 1 6 1 255 1 330 1 286 1 12 1 378 1 
158 6 91 1 241 1 348 1 181 3 27 1 244 1 339 3 286 1 324 1 21 2 
158 3 126 2 345 1 355 1 241 1 348 1 181 2 243 1 83 1 330 1 154 1 339 1 286 1 56 1 12 1 21 2 324 1 
126 2 158 10 345 1 91 2 241 3 348 2 181 5 83 1 1 1 27 1 6 1 330 1 339 5 244 2 286 2 12 1 324 2 21 5 
126 2 158 2 345 1 359 1 83 1 6 1 330 1 244 1 339 2 286 1 12 1 21 1 
293 1 126 2 158 4 345 1 91 1 241 1 181 2 359 1 83 1 6 1 330 1 244 1 339 2 286 1 2 1 12 1 21 2 
158 3 126 6 345 3 355 1 241 1 348 1 181 2 83 3 96 1 6 1 330 3 154 1 339 1 286 1 12 3 324 1 21 2 
293 3 294 1 158 34 91 5 355 1 241 7 181 18 359 3 243 1 96 1 218 1 339 16 244 5 2 3 324 3 21 12 126 10 345 5 348 3 370 1 82 4 108 1 83 5 27 2 6 1 330 5 154 2 352 1 286 5 135 1 56 1 136 1 12 5 378 3 
158 8 91 1 241 2 181 4 243 1 218 1 124 1 244 1 339 4 324 1 21 2 126 2 345 1 348 1 82 1 108 1 83 1 27 1 6 1 330 1 56 1 12 1 378 1 
293 1 294 1 158 11 91 1 241 2 181 5 359 1 243 1 218 1 124 1 339 6 244 2 324 1 21 3 126 4 345 2 348 1 82 2 108 1 83 2 27 1 6 1 330 2 286 1 135 1 56 1 12 2 378 1 
293 2 294 1 158 19 210 1 90 1 91 3 241 3 181 10 359 2 243 1 218 1 124 1 339 9 244 3 2 2 324 1 21 4 126 6 303 1 345 3 348 1 82 1 108 1 83 3 27 1 6 1 255 1 330 3 154 1 286 1 56 1 12 3 378 1 
293 2 294 1 158 17 210 1 90 1 91 2 241 3 181 7 359 2 243 1 218 1 124 1 339 10 244 3 2 1 324 1 21 5 126 6 303 1 345 3 348 1 82 1 108 1 83 3 27 1 6 1 255 1 330 3 154 1 286 2 56 1 12 3 378 1 
158 8 91 1 241 2 181 4 243 1 218 1 124 1 244 1 339 4 324 1 21 2 126 2 345 1 348 1 82 1 108 1 83 1 27 1 6 1 330 1 56 1 12 1 378 1 
293 2 158 12 210 1 90 1 91 2 241 1 181 6 359 2 218 1 124 1 339 6 244 2 2 2 21 2 126 2 303 1 345 1 82 1 83 1 6 1 255 1 330 1 286 1 12 1 378 1 
293 2 294 1 158 18 210 1 90 1 91 2 241 3 181 8 359 2 243 1 218 1 124 1 339 10 244 3 2 1 324 1 21 5 126 8 303 1 345 4 348 1 82 1 108 1 83 4 27 1 6 1 255 1 330 4 154 2 286 2 56 1 12 4 378 1 
293 3 158 16 210 1 90 1 91 2 241 3 181 7 359 3 96 1 218 1 124 1 339 9 244 3 2 2 21 6 126 8 303 1 345 4 82 1 83 4 6 1 255 1 330 4 154 2 286 3 12 4 378 1 
158 7 91 1 241 3 348 3 181 4 243 2 27 1 244 1 339 3 286 3 56 1 324 3 21 6 
293 2 158 18 210 1 90 1 91 2 241 3 181 8 359 2 243 1 96 1 218 1 124 1 339 10 244 3 2 1 324 1 21 4 126 8 303 1 345 4 348 1 82 1 108 1 83 4 27 1 6 1 255 1 330 4 154 2 286 1 56 1 12 4 378 1 
361 1 123 1 308 1 297 1 335 1 212 1 156 1 
361 1 123 1 308 1 34 1 297 1 335 1 212 1 156 1 271 1 170 1 58 1 57 1 
326 1 223 1 26 1 195 1 86 1 323 1 180 1 72 1 246 1 
223 1 211 1 63 1 335 2 195 1 180 1 37 1 94 1 51 1 26 1 123 1 28 1 297 2 86 1 20 1 156 1 246 1 310 1 
211 2 335 2 63 2 180 2 37 1 94 1 123 1 297 2 184 1 364 1 246 1 20 1 46 1 223 1 48 1 195 3 51 1 26 1 28 1 134 1 156 2 310 1 257 1 
139 1 211 2 335 2 63 2 180 2 37 1 94 1 39 1 123 1 297 2 184 1 364 1 246 2 20 1 46 1 223 2 48 1 195 3 26 2 28 1 134 1 156 2 310 1 257 1 
15 1 33 1 211 1 35 1 17 1 180 1 94 1 18 1 39 1 97 1 268 2 184 1 364 1 246 3 223 3 226 1 195 4 48 1 26 3 28 1 351 2 8 1 86 1 
223 3 33 1 226 1 211 1 48 1 195 4 35 1 17 1 180 1 94 1 18 1 39 1 26 3 351 2 268 2 28 1 184 1 8 1 86 1 364 1 87 1 246 3 
223 1 26 1 28 1 338 1 246 1 94 1 
223 7 211 1 195 3 346 1 128 1 180 2 49 1 0 1 94 3 143 1 26 7 267 1 338 1 28 2 331 1 270 1 220 1 86 2 234 1 246 6 209 1 
158 6 61 2 211 1 314 1 335 2 63 1 91 1 241 2 180 1 37 1 181 3 94 1 243 1 67 1 68 2 123 2 297 2 270 1 339 3 244 1 20 1 246 1 21 2 324 1 223 1 126 4 345 2 195 1 347 1 78 1 3 1 4 1 348 1 131 1 108 1 83 2 51 1 27 1 26 1 28 1 330 2 56 1 156 1 256 1 310 1 12 2 258 1 
141 2 159 1 33 1 177 2 35 1 64 1 17 1 18 1 268 3 69 1 145 1 246 1 74 1 223 1 226 1 195 2 369 1 23 2 254 1 26 1 351 3 54 1 8 2 86 1 287 2 87 1 11 1 235 1 
223 2 211 1 35 1 195 2 346 1 180 1 94 2 26 2 338 1 28 1 270 1 30 1 246 2 
223 2 326 1 224 1 211 1 195 2 128 1 180 2 0 1 94 2 26 2 5 1 28 1 270 1 86 1 323 1 246 2 
223 2 224 1 211 1 48 1 195 1 128 1 180 1 0 1 94 2 26 2 5 1 28 1 269 1 246 2 
223 1 318 1 26 1 53 1 28 1 86 1 245 1 246 1 208 1 94 1 
223 2 119 1 195 1 180 1 94 1 143 1 26 2 28 1 270 1 220 1 246 2 
211 1 180 3 94 3 0 1 270 1 220 1 323 1 246 2 223 3 326 1 224 1 195 4 128 1 49 1 26 3 5 1 28 2 331 1 86 1 
211 1 180 3 94 3 0 1 270 1 220 1 323 1 246 2 223 3 326 1 224 1 195 4 128 1 49 1 26 3 5 1 28 2 230 1 86 1 
223 1 139 1 211 1 63 1 335 2 195 1 180 1 37 1 94 1 26 1 123 1 28 1 297 2 86 1 20 1 156 1 246 1 310 1 
223 1 211 1 48 1 195 1 346 1 128 1 180 1 0 1 94 2 26 1 267 1 28 1 246 1 
123 1 321 1 228 1 107 1 38 1 
33 1 228 2 17 1 214 1 130 1 38 1 107 2 18 1 123 1 351 2 268 2 54 1 284 1 134 1 321 2 219 1 114 1 46 1 257 1 
227 1 297 1 335 1 276 1 228 1 156 1 38 1 312 1 107 1 
284 1 214 1 38 1 
148 1 9 1 121 1 72 1 
148 1 273 1 9 1 121 1 198 1 116 1 24 1 
362 1 343 1 24 1 
148 1 273 1 36 1 104 1 121 1 198 3 264 1 24 3 202 1 319 2 9 1 116 1 
148 1 273 1 191 1 9 1 121 1 146 1 198 2 116 1 24 2 
318 1 360 1 148 1 273 1 178 1 43 1 36 1 208 1 198 1 116 1 24 1 
148 1 273 1 36 1 9 1 198 1 116 1 24 1 
273 1 36 1 9 2 121 1 198 1 116 1 24 1 
148 1 273 2 89 1 260 1 36 1 198 2 24 2 9 1 376 1 116 2 
273 1 148 2 191 2 36 1 121 1 198 3 24 3 281 1 360 1 182 1 363 1 9 1 116 1 
148 1 273 1 191 1 178 1 36 1 121 1 198 2 24 2 318 2 98 1 9 1 245 1 100 1 116 1 208 1 
273 2 148 2 191 2 36 1 121 1 198 4 24 4 281 1 360 1 9 1 29 1 116 2 146 1 
148 1 273 1 36 1 9 1 121 1 198 1 116 1 24 1 
273 1 148 3 191 2 104 1 315 1 121 2 198 4 264 1 24 4 281 1 360 1 319 1 9 2 116 1 
148 1 273 1 191 1 36 1 121 1 262 1 198 2 24 2 200 1 40 1 9 1 116 1 
148 1 273 1 36 1 104 2 121 1 198 3 264 1 24 3 133 1 319 2 9 1 116 1 
148 2 111 1 232 1 279 2 
273 1 261 1 36 1 198 1 116 1 24 1 
148 1 273 1 191 1 36 1 363 1 9 1 121 1 198 2 116 1 24 2 
127 1 
148 1 273 1 36 1 9 1 121 1 198 1 116 1 24 1 
148 1 273 1 319 1 191 1 36 1 363 1 9 1 121 1 198 3 116 1 24 3 
281 1 360 1 148 1 315 1 
148 1 9 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 146 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 120 2 43 1 155 1 200 9 173 6 100 1 206 3 295 1 234 2 209 1 211 2 326 1 17 2 302 1 109 1 110 1 285 1 286 2 219 5 84 2 60 1 33 1 134 4 249 1 356 2 37 9 222 1 
2 1 120 2 43 1 155 1 200 9 173 6 100 1 206 3 295 1 234 2 209 1 211 2 326 1 17 2 302 1 109 1 110 1 285 1 286 2 219 5 84 2 60 1 33 1 134 4 356 2 249 1 37 9 222 1 
2 1 120 2 43 1 155 1 200 10 173 7 100 1 206 4 295 1 234 2 209 1 211 2 326 1 17 2 302 1 109 1 110 1 285 1 286 2 219 6 84 2 60 1 33 1 134 5 356 2 249 1 37 10 222 1 
2 1 120 2 43 1 155 1 200 7 173 4 100 1 206 2 295 1 234 2 209 1 211 1 326 1 17 2 302 1 109 1 285 1 286 2 219 4 84 2 60 1 33 1 134 3 356 2 249 1 37 7 222 1 
2 1 120 1 200 4 109 1 110 1 173 3 219 3 84 1 206 1 134 2 234 1 209 1 356 1 222 1 37 4 211 2 17 1 326 1 
239 1 2 1 120 1 200 2 285 1 286 1 219 1 84 1 160 1 234 1 209 1 249 1 222 1 37 2 17 1 196 1 
2 1 155 1 200 3 286 1 173 1 219 2 206 1 134 1 234 2 209 1 222 1 37 3 17 2 
197 1 2 1 43 1 120 1 155 1 200 9 173 7 206 3 208 1 234 2 209 1 211 2 17 2 326 1 109 1 110 1 286 1 219 5 84 1 33 1 134 4 356 1 37 9 222 1 
197 1 2 1 43 1 120 1 155 1 200 9 173 7 206 3 208 1 234 2 209 1 211 2 17 2 326 1 109 1 110 1 286 1 219 5 84 1 33 1 134 4 356 1 37 9 222 1 
107 1 6 1 381 1 
73 2 6 1 287 1 
39 2 154 2 52 2 308 2 360 2 199 1 242 1 303 2 
39 3 154 2 139 2 252 1 360 2 199 1 44 1 9 1 364 1 205 1 341 1 343 1 103 1 367 1 74 2 52 3 53 1 330 1 216 1 334 2 55 1 77 1 242 1 303 2 56 1 305 1 336 1 58 1 87 1 191 1 308 2 114 2 193 2 290 1 291 1 310 1 311 1 
39 1 154 1 52 1 188 1 308 1 360 1 315 1 199 1 303 1 243 1 
39 1 116 1 52 1 237 1 264 1 313 1 360 1 315 1 6 1 5 1 351 1 338 1 282 1 381 1 
39 1 116 1 154 1 237 2 52 1 264 2 360 1 315 1 303 1 6 1 5 1 338 1 308 1 282 1 381 1 
20 1 237 1 264 1 212 1 140 1 
237 2 264 2 253 1 6 1 28 1 212 1 381 1 140 1 
237 1 264 1 140 1 
39 1 154 1 237 1 52 1 264 1 360 1 226 1 315 1 199 1 303 1 243 1 188 1 308 1 212 1 
6 1 
292 1 237 2 264 2 253 1 6 1 212 1 381 1 140 1 
138 2 237 5 264 5 238 1 25 1 253 1 227 1 26 1 241 1 6 1 140 2 141 2 257 1 320 1 34 2 175 1 143 1 212 2 381 1 
39 2 154 1 52 2 139 1 53 1 252 1 360 1 333 1 215 1 77 1 44 1 303 1 9 1 336 1 191 1 114 1 193 1 14 1 290 1 311 1 
107 1 242 1 
39 2 154 1 52 2 213 1 360 2 303 1 242 2 308 1 69 1 
31 1 46 1 14 1 
39 1 52 1 139 1 53 1 252 1 77 1 242 1 44 1 9 1 336 1 151 1 191 1 114 1 193 1 290 1 311 1 
39 3 154 3 52 3 308 1 360 3 215 1 242 1 303 3 
39 1 154 1 52 1 360 1 315 1 303 1 243 1 
39 1 154 1 52 1 308 1 213 1 360 1 315 1 303 1 69 1 
39 4 116 1 154 3 139 1 94 1 252 1 360 3 315 1 199 1 44 1 5 1 9 1 364 1 205 1 341 1 282 1 74 1 52 4 237 1 53 1 213 1 264 1 215 1 333 1 216 1 334 2 77 1 242 1 303 3 56 1 305 1 336 1 58 1 87 1 191 1 338 1 308 2 114 1 193 1 290 1 36 1 291 1 310 1 311 1 
39 2 351 1 154 1 52 2 360 2 215 1 297 1 242 1 303 1 
39 3 116 1 154 3 237 1 52 3 213 1 264 1 94 1 360 3 333 1 215 2 315 1 303 3 6 1 5 1 217 1 338 1 308 1 282 1 
39 2 154 2 52 2 213 1 360 2 215 1 303 2 308 1 46 1 14 1 
39 1 52 1 139 1 53 1 252 1 77 1 242 1 44 1 9 1 336 1 191 1 114 1 193 1 290 1 311 1 
39 1 52 1 139 1 53 1 225 1 252 1 77 1 242 1 9 1 191 1 268 1 114 1 193 1 290 1 311 1 
63 1 137 1 277 1 364 1 341 1 46 2 260 1 14 2 325 1 74 4 299 1 330 2 214 1 76 1 348 1 334 2 216 2 56 1 305 1 31 2 352 1 87 1 115 1 310 1 
39 1 111 1 116 1 154 1 52 1 360 1 315 1 303 1 
39 5 154 4 21 1 52 5 213 1 360 5 215 2 333 1 303 4 242 1 66 1 351 1 308 1 297 1 
111 1 39 2 154 2 52 2 360 2 315 1 303 2 243 1 
156 1 266 1 
156 1 266 1 
75 1 62 1 
75 1 62 1 
75 1 62 1 
314 1 156 1 266 1 
314 1 156 1 266 1 
198 1 156 1 266 1 
75 1 161 1 156 2 81 1 62 1 266 2 
314 1 156 1 266 1 
210 1 156 1 266 1 
210 1 156 1 266 1 
210 1 156 1 266 1 
237 2 93 1 264 2 275 2 369 1 335 1 6 1 156 2 81 1 7 3 266 2 82 1 363 1 133 1 294 2 354 2 321 2 324 1 70 2 
39 2 154 2 118 1 198 1 275 1 360 2 156 1 7 1 65 1 99 1 10 1 294 1 70 1 237 1 52 2 51 1 264 1 242 1 303 2 371 1 266 1 133 1 169 1 354 1 
84 1 120 1 356 1 
84 1 160 1 120 1 
174 1 160 1 120 3 356 2 256 1 72 1 
174 1 160 1 120 2 356 1 16 1 256 1 
174 2 160 1 120 2 356 1 256 1 
63 1 64 2 138 1 41 1 253 1 202 2 6 2 140 1 10 1 141 1 99 1 319 1 293 1 320 2 342 2 176 1 143 3 325 1 212 4 73 3 237 5 264 5 76 1 348 1 26 1 182 1 287 1 288 1 267 1 169 1 34 1 381 1 
63 3 64 6 138 2 253 1 6 5 140 6 99 4 141 2 319 2 293 2 320 6 259 1 342 6 235 1 176 3 143 8 325 3 48 1 212 7 73 9 20 5 237 9 264 9 25 1 76 3 348 3 26 1 182 1 350 1 186 5 287 3 168 1 247 1 34 2 381 1 
63 1 64 2 138 1 6 3 202 1 141 1 99 1 319 1 293 1 320 2 342 2 176 1 143 3 325 1 212 2 73 4 237 3 264 3 25 1 76 1 348 1 287 2 288 1 267 1 34 1 381 1 
63 2 64 4 138 1 6 4 202 2 141 1 99 2 319 1 293 1 320 4 342 4 235 1 176 2 143 5 325 2 48 1 212 3 73 7 237 4 264 4 25 1 76 2 348 2 350 1 287 3 288 1 267 1 34 1 381 1 
107 1 3 1 311 1 
32 1 311 1 
119 1 
252 1 311 1 
53 1 269 1 252 1 96 1 3 2 311 3 
53 1 252 1 311 1 
306 1 311 1 
117 1 299 2 74 7 179 1 330 4 76 1 216 3 130 1 244 1 201 1 83 1 11 1 231 1 270 2 68 1 325 1 115 3 
117 1 299 2 74 7 179 1 330 4 76 1 216 3 130 1 244 1 201 1 83 1 11 1 231 1 270 2 68 1 325 1 115 3 
117 1 299 2 74 7 179 1 273 1 330 4 76 1 216 3 130 1 244 1 201 1 83 1 11 1 231 1 270 2 68 1 325 1 115 3 
63 3 117 1 172 1 274 1 254 4 201 2 364 1 11 1 231 2 176 3 68 1 325 4 178 3 300 1 74 31 299 5 50 1 179 1 330 16 348 3 76 4 334 2 216 15 244 2 130 5 56 1 83 2 305 1 374 1 87 1 270 3 35 1 115 10 38 1 
117 1 201 1 364 2 11 1 231 1 325 1 49 1 74 9 299 3 179 1 330 5 76 1 334 4 216 4 265 1 244 1 130 1 56 2 305 2 83 1 374 1 87 2 270 2 115 4 
139 1 2 1 340 1 120 2 200 2 278 1 173 1 280 1 207 1 160 1 234 1 209 1 162 1 345 1 17 1 72 1 147 1 77 1 286 1 187 1 219 1 84 1 167 1 191 1 193 1 114 1 356 1 221 1 37 2 222 1 
139 1 2 1 120 2 200 3 278 1 173 2 280 1 207 1 160 1 234 1 209 1 162 1 17 1 72 1 105 1 346 1 147 1 77 1 218 1 286 1 187 1 219 1 84 1 167 1 191 1 193 1 114 1 356 1 221 1 37 3 
139 1 2 1 120 2 200 2 278 1 173 2 280 1 207 1 160 1 209 1 72 1 346 1 147 1 77 1 218 1 286 1 219 1 84 1 167 1 191 1 193 1 114 1 221 1 356 1 37 2 
139 1 252 1 200 1 280 2 318 1 234 1 17 1 105 1 54 1 147 2 332 1 77 1 286 2 152 1 167 2 191 1 192 1 193 1 114 1 357 1 290 1 37 1 311 1 
139 1 340 1 120 2 200 1 278 1 280 1 207 1 160 1 234 1 162 1 17 1 72 1 346 1 147 1 77 1 286 1 187 1 84 1 167 1 191 1 193 1 114 1 356 1 221 1 37 1 222 1 
362 1 
116 1 252 1 253 3 121 1 6 2 5 1 296 2 159 2 73 2 264 5 347 2 23 4 26 1 77 1 79 1 351 1 86 1 34 1 357 1 311 1 39 1 171 2 138 1 139 2 313 1 360 1 315 1 140 6 316 2 141 1 318 1 319 1 320 2 142 1 233 1 282 1 143 2 365 1 366 1 145 1 237 5 52 1 329 1 149 2 148 1 184 1 287 2 112 2 191 1 338 1 114 2 193 2 290 2 379 1 381 1 
39 1 116 1 360 1 313 1 253 1 315 1 5 1 140 2 292 1 282 1 365 1 366 1 52 1 237 3 264 3 23 2 148 1 79 1 112 1 351 1 338 1 379 1 
39 1 116 1 360 1 313 1 253 1 315 1 5 1 6 1 140 1 292 1 282 1 365 1 366 1 52 1 237 3 264 3 347 1 23 3 148 1 79 1 351 1 338 1 379 1 381 1 
39 1 116 1 360 1 313 1 253 1 315 1 5 1 6 1 140 2 292 1 159 1 282 1 365 1 366 1 52 1 237 3 264 3 347 1 23 3 148 1 79 1 112 1 351 1 338 1 379 1 381 1 
39 1 171 2 116 1 138 1 1 1 360 1 313 1 253 3 315 1 121 1 6 5 5 1 140 7 316 2 141 1 258 1 292 1 320 1 296 2 101 1 159 4 282 1 143 1 365 1 284 1 366 1 237 5 52 1 264 5 347 4 23 6 26 1 149 2 148 1 79 1 287 2 112 4 86 1 289 1 351 1 338 1 34 1 379 1 381 5 
116 1 253 2 121 1 5 1 6 2 296 2 159 2 73 2 264 4 347 2 23 4 26 1 79 1 86 1 351 1 34 1 39 1 171 2 138 1 360 1 313 1 315 1 140 4 141 1 316 2 320 1 282 1 143 1 365 1 366 1 52 1 237 4 148 1 149 2 184 1 287 2 112 2 338 1 379 1 381 1 
39 1 171 2 116 1 138 1 360 1 313 1 253 2 315 1 121 1 6 1 5 1 140 4 316 2 141 1 258 1 320 1 296 2 159 2 282 1 143 1 365 1 284 1 366 1 52 1 237 4 264 4 347 2 23 4 26 1 149 2 148 1 79 1 287 2 112 2 86 1 351 1 289 1 338 1 34 1 379 1 381 1 
39 1 171 2 116 1 138 1 360 1 313 1 253 2 315 1 121 1 6 1 5 1 140 4 316 2 141 1 258 1 320 1 296 2 159 2 282 1 143 1 365 1 284 1 366 1 52 1 237 4 264 4 347 2 23 4 26 1 149 2 148 1 79 1 287 2 112 2 86 1 351 1 289 1 338 1 34 1 379 1 381 1 
39 1 116 1 138 1 360 1 313 1 253 2 315 1 121 1 6 1 5 1 140 4 157 2 316 2 141 1 258 1 320 1 159 2 125 2 282 1 261 1 143 1 365 1 366 1 73 2 52 1 237 4 264 4 347 2 23 4 26 1 149 2 148 1 79 1 165 1 112 2 351 1 338 1 245 1 34 1 379 1 381 1 
39 1 171 2 116 1 138 1 360 1 313 1 253 2 315 1 121 1 6 1 5 1 140 5 316 2 141 1 258 1 320 1 296 2 101 1 159 3 282 1 143 1 365 1 284 1 366 1 52 1 237 4 264 4 347 3 23 5 26 1 149 2 148 1 79 1 287 2 112 3 86 1 351 1 289 1 338 1 34 1 379 1 381 1 
39 1 171 2 116 1 138 1 360 1 313 1 253 2 315 1 121 1 6 1 5 1 140 5 316 2 141 1 258 1 320 1 296 2 101 1 159 3 282 1 143 1 365 1 284 1 366 1 52 1 237 4 264 4 347 3 23 5 26 1 149 2 148 1 79 1 287 2 112 3 86 1 351 1 289 1 338 1 34 1 379 1 381 1 
116 1 253 2 121 1 5 1 6 1 157 2 125 2 159 2 73 2 264 4 347 2 23 4 26 1 79 1 165 1 351 1 34 1 39 1 138 1 360 1 313 1 315 1 140 4 141 1 316 2 320 1 282 1 143 1 365 1 366 1 52 1 237 4 148 1 149 2 184 1 112 2 338 1 379 1 381 1 
117 1 74 6 299 2 179 1 330 3 214 1 107 1 76 1 216 3 334 2 242 2 56 1 31 1 305 1 83 1 87 1 364 1 11 1 231 1 341 1 270 1 46 1 14 1 325 1 115 2 310 1 
63 2 254 3 364 2 341 2 46 4 343 1 176 2 14 11 325 2 178 3 299 1 74 14 330 8 348 1 76 1 216 6 334 4 242 1 130 1 56 2 305 2 31 11 58 1 113 1 87 2 190 1 355 1 35 1 115 2 38 1 136 1 195 1 310 1 
39 2 154 1 139 1 252 1 360 1 44 1 9 1 364 1 341 1 46 1 47 1 343 1 19 1 74 2 52 2 53 1 330 1 301 1 215 1 333 1 77 1 334 2 216 1 242 1 303 1 56 1 336 1 305 1 151 1 58 1 87 1 191 1 193 1 114 1 355 1 290 1 311 1 310 1 
63 2 117 1 154 1 252 2 9 2 122 2 11 1 205 2 341 3 343 1 14 7 346 1 299 4 74 20 22 2 76 3 215 1 348 2 216 10 77 2 303 1 130 4 80 1 304 2 83 1 305 3 31 7 87 3 88 1 270 1 355 1 310 3 311 2 39 3 139 3 360 1 44 2 364 3 231 1 46 7 176 2 325 3 106 1 52 3 179 1 368 2 53 2 330 10 333 1 334 6 242 2 56 3 336 2 58 1 191 2 193 3 114 3 290 1 115 8 
39 1 154 1 139 8 339 1 360 1 252 2 97 1 318 1 45 1 364 2 341 2 126 1 343 1 128 1 345 1 367 2 346 1 74 2 52 1 180 1 214 1 330 1 215 1 77 2 334 4 216 1 303 1 56 2 305 2 58 1 87 2 191 2 246 1 193 8 114 7 357 1 290 2 311 3 310 2 
39 1 63 1 154 1 360 1 364 1 341 1 46 1 176 1 14 1 325 1 299 1 74 3 52 1 213 1 330 1 348 1 76 1 334 2 216 2 303 1 56 1 31 1 305 1 372 1 87 1 308 1 355 1 115 1 310 1 
63 1 74 2 214 1 330 2 334 2 130 1 56 1 277 1 31 1 305 1 87 1 364 1 341 1 46 1 14 1 115 1 325 1 310 1 
137 1 299 1 74 2 214 1 348 1 76 1 334 2 216 2 56 1 31 1 305 1 87 1 364 1 341 1 46 1 14 1 115 1 310 1 
63 1 364 1 341 1 46 2 176 1 14 2 325 1 74 4 299 1 330 2 214 1 348 1 76 1 334 2 216 2 130 1 56 1 305 1 31 2 87 1 115 2 310 1 
63 1 74 2 330 2 334 2 130 1 56 1 277 1 31 1 305 1 87 1 364 1 341 1 46 1 126 1 14 1 115 1 325 1 310 1 
137 1 299 1 74 2 348 1 76 1 334 2 216 2 56 1 31 1 305 1 87 1 364 1 341 1 46 1 126 1 14 1 115 1 310 1 
63 1 364 1 341 1 126 1 46 2 176 1 14 2 325 1 74 4 299 1 330 2 348 1 76 1 334 2 216 2 130 1 56 1 305 1 31 2 87 1 115 2 310 1 
63 1 364 1 341 1 46 2 176 1 14 2 325 1 74 4 299 1 330 2 348 1 76 1 334 2 216 2 130 1 56 1 305 1 31 2 87 1 115 2 310 1 
39 1 139 1 252 1 44 1 9 1 364 1 205 1 341 1 343 1 74 2 52 1 53 1 330 1 77 1 334 2 216 1 242 1 56 1 336 1 305 1 58 1 87 1 191 1 193 1 114 1 290 1 311 1 310 1 
39 1 139 1 225 1 252 1 9 1 364 1 341 1 343 1 283 1 74 2 52 1 53 1 330 1 77 1 334 2 216 1 242 1 56 1 305 1 58 1 87 1 191 1 268 1 193 1 114 1 290 1 311 1 310 1 
63 1 364 1 341 1 46 2 176 1 14 2 325 1 74 4 299 1 330 2 348 1 76 1 334 2 216 2 130 1 56 1 305 1 31 2 87 1 355 1 115 2 310 1 
63 1 39 1 139 1 252 1 44 1 9 1 364 1 205 1 341 1 46 2 176 1 14 2 325 1 345 1 299 1 74 4 52 1 53 1 330 2 76 1 348 1 216 2 77 1 334 2 130 1 56 1 304 1 31 2 336 1 305 1 87 1 191 1 193 1 114 1 115 2 311 1 310 1 
39 1 63 1 154 1 360 1 364 1 341 1 12 1 46 1 176 1 14 1 325 1 74 3 52 1 213 1 330 2 76 1 348 1 216 1 334 2 303 1 130 1 56 1 305 1 31 1 87 1 308 1 355 1 115 1 310 1 
63 4 117 1 92 1 42 1 4 4 254 4 204 1 364 3 11 1 231 1 232 1 263 1 176 4 325 5 49 1 178 3 299 4 74 41 179 1 181 1 330 20 348 4 76 5 334 6 216 21 27 1 130 4 349 2 56 3 83 1 305 3 166 1 374 1 85 1 57 1 87 3 153 1 353 1 270 1 35 1 115 8 61 1 38 3 
63 4 117 1 92 1 42 1 4 4 254 4 204 1 364 4 11 1 231 1 232 1 263 1 176 4 325 5 49 1 178 3 299 4 74 38 179 1 181 1 330 20 348 3 76 4 334 8 216 18 27 1 130 3 349 2 56 4 83 1 305 4 166 1 374 2 85 1 57 1 87 4 153 1 353 1 270 1 35 1 115 7 61 1 38 3 
63 7 117 1 92 1 42 1 4 4 254 4 204 1 364 2 11 1 231 1 263 1 176 7 325 8 49 1 178 4 299 7 74 52 179 1 181 1 330 27 348 7 76 8 334 4 216 25 27 1 130 7 349 1 56 2 83 1 305 2 374 1 85 1 57 1 87 2 153 1 353 1 270 1 35 2 115 14 61 1 136 2 38 2 
63 3 92 1 42 2 4 2 254 2 364 2 102 1 176 3 325 3 49 1 178 1 299 3 74 19 181 1 330 9 348 3 76 3 334 4 216 10 27 1 130 3 349 1 56 2 305 2 166 1 87 2 153 1 35 1 115 6 38 1 
63 3 92 1 42 1 4 4 254 2 204 1 364 3 263 1 176 3 325 3 49 1 178 2 299 2 74 26 181 1 330 14 76 2 348 2 216 12 334 6 130 2 27 2 349 2 56 3 305 3 374 2 85 1 57 1 87 3 153 1 353 1 115 4 61 1 38 2 
294 1 93 1 354 1 275 1 324 1 156 1 81 1 229 1 70 1 266 1 
198 1 371 1 
224 1 294 1 354 1 275 1 240 1 156 1 70 1 71 1 266 1 
237 1 93 1 264 1 275 1 369 1 335 1 6 1 156 1 81 1 7 2 266 1 363 1 133 1 294 1 354 1 321 1 324 1 70 1 
237 1 93 1 264 1 275 1 369 1 335 1 6 1 156 1 81 1 7 2 266 1 363 1 133 1 294 1 354 1 321 1 324 1 70 1 
237 1 93 1 264 1 275 1 369 1 335 1 6 1 156 1 81 1 7 2 266 1 363 1 133 1 294 1 354 1 321 1 324 1 70 1 
24 1 161 1 314 1 
24 1 161 1 314 1 
223 1 210 1 
223 1 161 1 210 1 
51 1 65 1 
39 2 154 2 118 1 198 1 275 1 360 2 156 1 7 1 65 1 99 1 10 1 294 1 321 1 144 1 212 1 70 1 52 2 237 1 51 1 264 1 369 1 242 1 303 2 371 1 266 1 169 1 354 1 
24 1 314 1 
223 1 161 1 210 1 
39 2 139 2 252 1 360 2 97 1 317 1 364 1 341 1 343 1 128 1 327 1 367 2 74 2 52 2 330 1 77 1 334 2 216 1 56 1 131 1 305 1 58 1 87 1 191 1 170 1 193 2 114 2 355 1 194 1 311 1 310 1 
346 1 139 2 147 1 120 2 77 1 278 1 373 1 84 1 132 1 376 1 191 1 160 1 114 2 193 2 356 1 221 1 162 1 345 1 72 1 
346 1 139 1 147 1 120 2 77 1 278 1 373 1 84 1 123 1 191 1 160 1 114 1 193 1 356 1 221 1 162 1 72 1 
139 1 252 1 147 1 77 1 318 1 376 1 191 1 192 1 114 1 193 1 357 1 322 1 290 1 311 1 
346 1 139 1 147 1 120 2 77 1 278 1 373 1 84 1 132 1 376 1 191 1 160 1 114 1 193 1 356 1 221 1 162 1 72 1 
380 1 
320 1 107 1 227 1 143 1 241 1 6 1 381 1 
171 1 138 1 253 1 6 2 140 1 141 1 320 1 296 1 143 1 73 1 237 1 264 1 26 1 287 1 86 1 34 1 381 1 
63 2 64 6 252 1 253 3 3 2 5 2 6 8 124 2 342 6 13 2 127 1 345 1 73 12 163 2 22 2 264 5 348 2 76 2 78 1 77 1 26 4 32 3 307 1 34 4 311 6 312 2 91 1 138 4 139 3 96 1 227 1 228 2 140 5 141 4 319 2 320 8 142 1 176 2 143 9 325 2 237 5 53 1 146 1 241 1 287 6 191 2 114 3 193 3 377 2 378 2 290 1 381 2 
63 2 64 5 138 2 253 1 254 1 6 5 140 1 141 2 319 1 124 1 320 5 342 5 142 1 263 1 176 2 13 2 143 8 325 2 73 6 178 1 164 1 237 1 264 1 348 2 76 2 26 2 30 1 287 3 85 1 57 1 353 1 34 2 61 1 38 1 381 2 
39 1 138 1 154 1 360 1 226 1 315 1 199 1 141 1 124 1 320 2 231 1 13 2 143 2 325 2 284 1 52 1 237 1 179 1 264 1 76 1 26 1 303 1 243 1 83 1 337 1 188 1 308 1 34 1 
138 1 26 1 227 1 241 1 6 1 141 1 320 1 34 1 143 1 381 1 
63 2 73 10 64 5 22 1 348 2 76 2 6 5 287 5 124 1 320 5 342 5 176 2 13 2 143 5 325 2 
237 1 264 1 253 1 6 1 381 1 140 1 
138 2 91 1 139 4 252 1 253 2 140 4 361 1 141 2 318 1 319 2 320 2 142 2 233 1 344 1 143 2 145 1 237 3 264 3 25 1 77 1 26 1 307 2 191 1 34 2 193 4 114 4 357 1 290 2 311 1 
39 3 154 2 139 1 360 2 252 1 199 1 44 1 9 1 364 1 205 1 341 1 74 1 52 3 53 1 216 1 334 2 77 1 242 1 303 2 56 1 305 1 336 1 58 1 87 1 191 1 308 2 193 1 114 1 290 1 291 1 311 1 310 1 
73 4 64 2 138 1 26 1 6 4 287 2 141 1 319 1 320 2 342 2 270 1 142 1 34 1 143 1 381 2 
294 1 354 1 8 1 
294 1 354 1 8 1 
65 1 294 1 354 1 177 1 298 1 
294 1 354 1 8 1 
230 1 294 1 354 1 
230 1 294 1 354 1 
230 1 294 1 354 1 
294 1 354 1 
156 1 266 1 
117 1 254 1 364 1 11 1 231 1 263 1 325 1 49 1 178 1 74 8 299 2 179 1 330 4 76 1 216 4 334 2 56 1 305 1 83 1 87 1 270 1 115 2 38 1 
63 1 117 1 254 2 255 1 364 2 11 1 231 1 263 1 176 1 325 2 49 1 178 1 299 2 74 11 179 1 330 6 76 1 216 5 334 4 130 1 56 2 83 1 305 2 87 2 270 1 35 1 115 3 38 1 
63 2 117 1 254 1 255 1 364 3 11 1 231 1 263 1 176 2 325 3 49 1 178 1 74 19 299 3 179 1 330 9 348 2 76 3 216 10 334 6 130 1 56 3 83 1 305 3 85 1 374 1 57 1 87 3 353 1 270 1 115 4 61 1 38 1 
63 2 117 1 254 1 255 1 364 3 11 1 231 1 263 1 176 2 325 3 49 1 178 1 74 17 299 3 179 1 330 10 348 1 76 2 216 7 334 6 130 2 56 3 83 1 305 3 374 1 85 1 57 1 87 3 353 1 270 1 115 5 38 1 61 1 
117 1 254 1 364 1 11 1 231 1 263 1 325 1 49 1 178 1 74 8 299 2 179 1 330 4 76 1 216 4 334 2 56 1 305 1 83 1 87 1 270 1 115 2 38 1 
63 2 254 1 364 1 263 1 176 2 325 2 49 1 178 1 74 12 299 1 330 6 348 2 76 2 216 6 334 2 130 1 56 1 305 1 85 1 57 1 87 1 353 1 115 2 38 1 61 1 
63 2 117 1 254 1 255 1 364 4 11 1 231 1 263 1 176 2 325 3 49 1 178 1 74 18 299 3 179 1 330 10 348 1 76 2 216 8 334 8 130 2 56 4 83 1 305 4 85 1 374 2 57 1 87 4 353 1 270 1 115 5 61 1 38 1 
63 3 254 1 364 4 263 1 176 3 325 3 49 1 178 1 74 16 299 3 330 9 348 2 76 2 216 7 334 8 130 3 56 4 305 4 166 1 85 1 374 2 57 1 87 4 353 1 115 6 61 1 38 1 
117 1 74 7 299 3 179 1 330 3 76 1 216 4 130 3 83 3 11 2 231 3 115 6 325 1 
63 2 117 1 254 1 364 4 11 1 231 1 263 1 176 2 325 3 49 1 178 1 74 18 299 3 179 1 330 10 348 1 76 2 216 8 334 8 130 1 56 4 83 1 305 4 166 1 85 1 374 2 57 1 87 4 353 1 270 1 115 4 61 1 38 1 
117 1 74 8 299 2 179 1 330 4 76 1 216 4 334 4 130 1 56 2 305 2 83 1 374 1 87 2 364 2 11 1 231 1 270 1 325 1 115 3 
117 1 299 2 74 6 179 1 107 1 330 3 76 1 216 3 83 1 11 1 231 1 270 1 115 2 325 1 
63 1 299 1 74 4 330 2 76 1 348 1 216 2 334 2 130 1 56 1 255 1 305 1 87 1 364 1 176 1 115 2 325 1 
178 1 63 1 299 1 74 7 330 3 76 1 348 1 216 4 254 2 130 1 176 1 35 1 325 1 115 2 38 1 
63 2 117 1 254 2 279 1 364 2 11 1 231 2 176 2 325 3 178 2 74 23 299 5 179 1 330 11 348 2 76 3 216 12 334 4 130 4 56 2 83 2 305 2 374 2 113 1 87 2 270 1 35 1 115 9 136 1 
74 1 216 1 254 1 
178 1 74 1 330 1 
63 1 74 6 299 2 22 1 330 3 348 1 76 1 334 2 216 3 130 1 56 1 255 1 305 1 364 1 87 1 176 1 325 1 115 3 
63 2 254 1 364 1 263 1 176 2 325 2 49 1 178 1 74 12 299 1 330 6 348 2 76 2 216 6 334 2 130 1 56 1 305 1 85 1 57 1 87 1 353 1 115 2 38 1 61 1 
74 6 299 1 179 1 330 3 76 1 216 3 130 1 83 1 231 1 325 1 115 2 
117 1 299 1 74 3 330 1 216 2 334 2 130 1 56 1 279 1 83 1 305 1 374 1 87 1 364 1 11 1 231 1 115 2 
299 3 74 10 179 1 330 5 76 2 334 2 216 5 130 2 56 1 305 1 83 2 337 1 364 1 87 1 231 2 115 5 325 2 49 1 
63 1 74 2 330 2 334 2 130 1 56 1 305 1 87 1 364 1 325 1 115 1 49 1 
63 1 299 1 74 4 330 2 76 1 348 1 216 2 334 2 130 1 56 1 305 1 87 1 364 1 176 1 115 2 325 1 49 1 
74 3 299 1 330 1 216 2 334 6 130 1 56 3 279 1 305 3 83 1 374 1 166 1 87 3 364 3 231 1 115 2 49 1 
63 3 117 1 274 1 254 4 255 1 279 1 364 5 11 1 231 3 176 3 325 5 49 1 178 3 50 1 300 1 74 34 299 7 179 2 330 16 348 3 76 5 216 18 334 10 130 5 56 5 83 3 305 5 374 2 166 1 87 5 270 1 35 1 115 12 38 1 
39 1 328 1 351 1 52 1 360 1 297 1 242 1 
272 1 39 1 328 1 52 1 360 1 242 1 203 1 351 1 281 1 158 1 297 1 236 1 
318 1 139 1 191 1 107 1 252 1 193 1 114 1 77 1 357 1 290 1 311 1 
39 2 154 1 52 2 139 1 53 1 252 1 360 1 215 1 77 1 242 1 303 1 44 1 9 1 191 1 114 1 193 1 290 1 311 1 
39 2 116 1 154 2 139 1 360 2 252 2 315 1 44 1 9 1 282 1 52 2 53 2 215 1 77 1 242 1 303 1 306 1 220 1 307 1 191 1 193 1 114 1 311 3 
39 2 116 1 154 2 139 2 360 2 252 2 315 1 9 1 282 1 52 2 53 2 331 1 215 1 77 1 242 1 303 1 306 1 220 1 307 1 191 1 268 1 193 2 114 2 311 3 
39 1 154 1 139 1 360 1 226 1 315 1 199 1 6 1 237 1 52 1 264 1 303 1 243 1 32 1 188 1 307 1 308 1 193 1 114 1 358 1 381 1 311 1 
39 1 154 1 139 1 360 1 226 1 315 1 199 1 6 1 163 1 237 1 52 1 264 1 303 1 243 1 32 1 188 1 307 1 308 1 193 1 114 1 381 1 311 1 
139 1 191 1 246 1 193 1 114 1 77 1 
367 1 346 1 0 1 139 7 339 1 180 1 53 1 252 2 96 1 77 2 45 1 191 3 246 1 114 6 193 7 309 1 290 2 250 1 128 1 345 1 311 3 
39 2 117 1 154 1 139 1 252 1 360 1 44 1 9 1 364 2 11 1 205 1 231 1 341 2 46 1 14 1 325 1 345 1 327 1 74 6 299 2 52 2 179 1 368 1 53 1 330 3 76 1 215 1 216 3 77 1 334 4 242 2 303 1 56 2 304 1 31 1 83 1 305 2 336 1 87 2 191 1 270 1 114 1 193 1 355 1 115 2 311 1 310 2 
312 1 138 2 91 1 139 1 253 1 227 1 3 1 6 1 228 1 5 1 140 2 141 2 320 1 143 1 212 1 163 1 237 3 264 3 26 2 241 1 32 1 193 1 114 1 34 2 377 1 290 1 381 1 311 2 
139 2 53 1 252 1 96 1 3 1 77 1 191 2 246 1 114 2 193 2 127 1 345 1 311 2 
139 4 331 1 252 1 77 1 318 1 191 1 248 1 114 4 193 4 357 1 290 1 345 1 311 1 
251 1 0 1 139 2 129 1 53 1 252 1 77 1 80 1 307 1 191 2 114 2 193 2 309 1 311 1 
84 1 139 1 191 1 160 1 193 1 114 1 120 1 77 1 290 1 278 1 
346 1 139 2 252 1 77 1 170 1 191 1 114 2 193 2 345 1 128 1 311 1 
139 5 180 1 252 2 77 2 318 1 45 1 307 1 191 2 248 1 114 4 193 5 357 1 290 1 345 1 128 1 311 3 
139 5 180 1 252 2 77 2 183 1 318 1 307 1 191 2 248 1 114 4 193 5 357 1 290 1 345 1 128 1 311 3 
39 2 154 1 52 2 139 1 53 1 252 1 360 1 215 1 77 1 242 1 303 1 9 1 191 1 268 1 114 1 193 1 290 1 311 1 
0 1 139 1 53 1 252 1 96 1 77 1 307 1 191 2 114 1 193 1 309 1 250 1 311 1 
39 1 52 1 108 1 360 1 370 1 131 1 317 1 375 1 194 1 
108 1 29 1 150 1 
18 1 375 1 108 1 242 1 370 1 
18 2 116 1 237 2 264 2 94 1 108 1 315 1 242 1 370 2 6 1 5 1 29 1 150 1 375 2 338 1 282 1 323 1 212 1 381 1 
219 1 107 1 2 1 209 1 
219 1 2 1 234 1 209 1 200 1 37 1 17 1 
167 1 37 1 286 1 
104 1 219 1 189 1 2 1 262 1 234 1 209 1 200 3 285 2 37 3 222 1 17 1 
173 1 219 1 2 1 234 1 209 1 200 2 211 1 37 2 17 1 
219 1 84 1 134 1 120 1 234 1 356 1 200 1 37 1 222 1 326 1 17 1 
219 1 2 1 234 1 200 1 37 1 222 1 17 1 
2 2 234 1 209 1 200 1 37 1 222 1 17 1 
2 1 200 2 219 1 135 1 234 2 15 1 222 1 37 2 17 2 89 1 
2 1 43 1 200 3 173 2 219 2 33 1 206 1 134 1 234 1 209 1 222 1 37 3 17 1 
2 1 120 2 200 2 98 1 173 1 219 1 84 1 160 1 234 1 209 1 356 1 222 1 37 2 17 1 72 1 
2 1 200 4 110 1 173 2 219 2 206 1 134 1 234 2 209 1 222 1 37 4 211 1 17 2 
219 1 2 1 234 1 209 1 200 1 37 1 222 1 17 1 
104 1 95 1 2 2 200 4 285 1 173 2 219 3 206 1 134 1 262 1 234 1 209 2 37 4 17 1 
197 1 40 1 359 1 2 1 200 2 173 1 219 1 234 1 209 1 222 1 37 2 17 1 
104 2 2 1 200 3 276 1 285 2 219 1 262 1 234 1 209 1 222 1 37 3 17 1 
90 1 219 2 59 1 67 2 
234 1 200 1 37 1 222 1 185 1 17 1 
173 1 219 1 2 1 43 1 234 1 209 1 200 2 37 2 222 1 17 1 
271 1 
219 1 2 1 234 1 209 1 200 1 37 1 222 1 17 1 
2 1 43 1 200 3 285 1 173 1 219 1 234 1 209 1 222 1 37 3 17 1 
219 1 206 1 134 1 95 1 
219 1 2 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
338 1 238 1 150 9 286 4 126 1 341 2 245 2 5 1 322 3 293 1 204 5 42 6 275 1 185 1 276 2 211 1 164 2 231 1 142 2 166 2 279 1 23 9 50 1 51 2 52 1 26 1 360 1 121 1 
338 1 238 1 150 9 286 4 126 1 341 2 245 2 5 1 322 3 293 1 204 5 42 6 275 1 185 1 276 2 211 1 164 2 231 1 142 2 166 2 279 1 23 9 50 1 51 2 52 1 26 1 360 1 121 1 
338 1 238 1 150 10 286 5 126 1 341 2 245 2 5 1 322 4 293 1 204 6 42 7 275 1 185 1 276 2 211 1 164 2 231 1 142 2 166 2 279 1 23 10 50 1 51 2 52 1 26 1 360 1 121 1 
338 1 238 1 150 7 286 3 126 1 341 2 245 2 5 1 322 2 293 1 204 4 42 4 275 1 276 2 211 1 164 2 231 1 142 2 166 2 279 1 23 7 50 1 51 1 52 1 26 1 360 1 121 1 
150 4 286 2 185 1 276 1 341 1 211 1 164 1 322 1 142 1 166 1 23 4 279 1 50 1 51 2 26 1 360 1 204 3 42 3 
150 2 301 1 276 1 341 1 211 1 223 1 164 1 245 1 142 1 5 1 23 2 50 1 169 1 52 1 204 1 360 1 
150 3 286 1 341 2 211 1 245 1 142 2 322 1 23 3 50 1 293 1 360 1 204 2 42 1 
338 1 150 9 286 4 341 2 245 1 322 3 293 1 324 1 204 5 42 7 185 1 276 1 211 1 231 1 164 1 142 2 20 1 166 1 23 9 279 1 50 1 51 2 26 1 360 1 
338 1 150 9 286 4 341 2 245 1 322 3 293 1 324 1 204 5 42 7 185 1 276 1 211 1 231 1 164 1 142 2 20 1 166 1 23 9 279 1 50 1 51 2 26 1 360 1 
317 1 57 1 306 1 
119 1 174 2 306 1 
60 1 75 2 328 2 124 2 156 2 310 2 98 2 82 1 
75 3 339 2 124 2 125 1 240 1 340 1 98 2 78 1 172 2 2 2 101 1 60 1 156 2 40 1 294 1 9 1 295 1 180 1 82 1 133 1 66 1 209 1 45 2 250 1 162 1 71 1 163 1 252 1 234 2 214 1 328 2 255 1 192 1 236 1 310 3 257 1 122 1 
75 1 328 1 128 1 124 1 6 1 156 1 310 1 98 1 82 1 109 1 
75 1 57 1 137 1 306 1 88 1 141 1 358 1 49 1 156 1 331 1 334 1 310 1 64 1 109 1 
75 1 124 1 98 1 57 1 137 1 306 1 328 1 88 1 141 2 358 1 156 1 331 1 310 1 64 2 109 1 
283 1 141 1 64 1 335 1 343 1 
283 1 1 1 141 2 256 1 57 1 64 2 335 1 306 1 
141 1 64 1 335 1 
283 1 75 1 124 1 98 1 128 1 328 1 141 1 6 1 156 1 310 1 64 1 147 1 82 1 109 1 
306 1 
283 1 1 1 141 2 359 1 57 1 64 2 335 1 306 1 
283 2 1 1 196 1 46 1 57 1 342 1 287 1 306 1 141 5 39 1 267 1 332 1 167 2 247 2 118 2 64 5 179 1 335 2 54 1 
60 1 317 1 
75 2 124 1 98 1 212 1 328 1 60 2 265 1 156 2 310 2 
249 1 131 1 8 1 
75 1 339 1 66 1 125 1 250 1 78 1 172 1 163 1 356 1 234 1 214 1 60 1 40 1 192 1 310 1 9 1 
75 2 339 1 249 1 124 1 66 1 125 1 250 1 98 1 78 1 172 1 213 1 163 1 214 1 234 1 156 1 40 1 192 1 310 2 9 1 53 1 
328 1 60 1 75 3 124 3 156 3 310 3 98 3 213 1 
75 1 124 1 6 1 156 1 310 1 98 1 109 1 
75 1 328 1 124 1 265 1 156 1 310 1 98 1 212 1 109 1 
75 4 339 1 124 3 125 1 240 1 340 1 98 3 78 1 172 1 2 1 101 1 60 1 156 3 40 1 294 1 9 1 64 1 82 1 109 1 65 1 66 1 45 2 250 1 162 1 71 1 137 1 212 1 213 1 163 1 214 1 234 1 88 1 328 2 141 1 358 1 331 1 192 1 255 1 236 1 310 4 257 1 122 1 361 1 53 1 
60 1 75 2 124 1 156 2 132 1 334 1 310 2 98 1 213 1 
75 3 65 1 124 3 110 1 98 3 137 1 212 1 213 2 306 1 328 1 88 1 141 1 358 1 156 3 331 1 310 3 64 1 53 1 109 1 
75 2 124 2 249 1 98 2 212 1 213 1 328 1 156 2 310 2 8 1 
75 1 339 1 66 1 125 1 250 1 78 1 172 1 163 1 234 1 214 1 60 1 40 1 192 1 310 1 9 1 
75 1 339 1 66 1 125 1 250 1 304 1 78 1 172 1 163 1 320 1 234 1 214 1 60 1 310 1 9 1 
315 1 220 1 28 1 127 1 340 1 242 1 2 4 101 1 131 2 8 2 10 1 180 2 249 2 184 1 45 2 162 1 71 1 303 1 307 1 117 1 236 1 144 1 257 2 122 1 
75 1 358 1 124 1 156 1 310 1 98 1 95 1 109 1 
75 5 124 4 98 4 212 1 213 2 328 1 60 1 156 5 132 1 334 1 310 5 347 1 370 1 53 1 
75 2 124 2 6 1 156 2 310 2 98 2 95 1 109 1 
36 1 377 1 
36 1 377 1 
266 1 59 1 
266 1 59 1 
266 1 59 1 
36 1 377 1 41 1 
36 1 377 1 41 1 
309 1 36 1 377 1 
129 1 36 2 266 1 202 1 377 2 59 1 
36 1 377 1 41 1 
36 1 302 1 377 1 
36 1 302 1 377 1 
36 1 302 1 377 1 
43 2 135 2 351 2 377 2 171 1 318 1 306 1 141 2 129 1 200 1 36 2 91 2 64 2 120 3 299 1 159 1 218 1 312 2 325 1 
75 2 124 2 98 2 244 1 60 1 367 1 36 1 156 2 64 1 159 1 43 1 351 1 135 1 377 1 16 1 190 1 141 1 309 1 254 1 22 1 310 2 120 1 312 1 313 1 
166 1 276 1 164 1 
276 1 223 1 164 1 
337 1 166 2 90 1 194 1 223 1 164 3 
337 1 166 1 90 1 69 1 223 1 164 2 
337 1 166 1 90 2 223 1 164 2 
315 1 283 4 1 1 57 1 287 1 365 1 174 3 367 1 346 1 267 2 247 1 64 5 10 1 373 2 13 1 160 1 273 1 15 1 184 1 111 1 186 2 352 2 46 3 306 2 117 1 141 5 22 1 167 1 118 1 119 1 335 1 313 1 
315 3 283 7 1 1 57 1 287 1 343 5 174 9 34 1 291 1 367 4 39 1 267 6 247 2 64 9 298 1 10 3 205 1 373 6 182 1 160 2 273 1 15 2 184 3 111 3 352 6 46 8 251 5 138 1 306 5 117 3 141 9 167 2 118 2 119 3 335 6 
315 1 283 2 57 1 365 1 174 4 367 1 346 1 39 1 267 2 247 1 64 3 10 1 373 2 160 1 15 1 184 1 111 1 186 1 46 3 352 2 306 3 117 1 141 3 167 1 118 1 119 2 
315 2 283 3 57 1 365 1 174 7 367 2 39 1 346 1 267 4 247 1 64 4 10 2 205 1 373 4 182 1 160 1 15 1 184 2 111 2 186 2 352 4 46 5 138 1 306 4 117 2 141 4 167 1 118 1 119 3 
125 1 376 1 317 1 
125 1 170 1 
233 1 
125 1 163 1 
3 1 125 3 333 1 376 2 9 1 163 1 
125 1 9 1 163 1 
125 1 206 1 
315 1 282 1 230 1 29 1 70 1 58 1 154 1 2 7 307 2 87 1 329 1 144 3 257 3 10 1 259 2 92 1 180 4 
315 1 282 1 230 1 29 1 70 1 58 1 154 1 2 7 307 2 87 1 329 1 144 3 257 3 10 1 259 2 92 1 180 4 
315 1 282 1 230 1 29 1 70 1 58 1 154 1 2 7 307 2 87 1 329 1 144 3 107 1 257 3 10 1 259 2 92 1 180 4 
282 1 315 4 237 1 56 1 29 1 340 1 58 2 153 1 154 1 2 31 101 1 37 1 155 1 368 4 271 3 10 4 180 16 230 2 184 3 45 2 111 3 70 5 71 1 353 1 87 2 117 3 307 5 73 1 329 2 144 10 257 15 92 1 259 3 122 1 
315 1 282 1 340 2 58 1 2 9 154 1 101 2 105 1 10 1 180 5 230 1 45 4 70 1 71 2 353 1 354 1 87 1 307 3 329 1 144 4 257 4 259 2 92 1 122 2 
339 1 150 2 241 1 77 1 341 1 363 1 172 1 223 1 245 1 79 1 104 1 204 1 42 1 250 1 276 1 211 1 72 1 164 2 234 1 214 1 165 1 140 1 142 1 166 1 23 2 50 1 168 1 74 1 194 1 360 1 
339 1 150 3 241 1 341 1 363 1 172 1 223 1 245 1 79 1 204 1 42 2 250 1 276 1 211 1 72 1 164 2 234 1 86 1 214 1 165 1 140 1 142 1 215 1 166 1 23 3 50 1 216 1 168 1 194 1 74 1 
339 1 150 2 241 1 363 1 172 1 223 1 245 1 79 1 204 1 42 2 250 1 276 1 211 1 72 1 164 2 234 1 86 1 214 1 165 1 166 1 23 2 50 1 216 1 74 1 194 1 
339 1 150 1 66 1 125 1 250 1 47 1 341 1 189 1 172 1 363 2 163 1 214 1 245 2 234 1 357 1 80 1 165 2 215 1 142 1 23 1 63 1 74 2 145 1 
339 1 150 1 241 1 341 1 363 1 172 1 223 1 245 1 79 1 104 1 250 1 276 1 72 1 164 2 234 1 214 1 165 1 140 1 142 1 166 1 23 1 216 1 168 1 74 1 194 1 360 1 
62 1 
339 2 1 3 57 1 287 1 103 2 345 1 156 1 292 2 247 1 63 1 64 5 108 2 248 1 109 1 160 1 66 2 208 1 67 1 250 1 163 1 306 2 214 1 17 1 357 1 358 1 167 1 310 1 118 1 119 2 123 1 75 1 27 1 125 1 172 2 366 2 174 2 38 1 267 2 178 1 371 2 183 2 46 2 278 1 137 1 379 1 234 2 88 1 141 5 49 1 331 1 334 1 89 4 335 6 195 1 55 2 
75 1 1 1 345 1 156 1 64 3 109 1 208 1 67 1 137 1 17 1 88 1 141 3 358 1 359 1 49 1 331 1 310 1 334 1 89 2 335 2 195 1 55 1 
75 1 1 1 57 1 345 1 103 1 156 1 64 3 109 1 208 1 67 1 137 1 306 1 17 1 88 1 141 3 358 1 359 1 49 1 331 1 310 1 334 1 89 3 335 1 195 1 
75 1 1 1 57 1 345 1 103 1 156 1 64 3 108 1 109 1 208 1 67 1 137 1 306 1 17 1 88 1 141 3 359 1 358 1 49 1 331 1 310 1 334 1 89 3 335 2 195 1 55 1 
1 3 57 5 287 1 345 1 103 4 156 1 292 2 247 1 64 5 108 4 109 1 14 1 208 1 67 1 306 5 17 1 358 1 359 1 167 1 310 1 118 1 25 1 119 2 314 1 75 1 27 1 366 2 38 1 267 1 371 2 228 1 183 2 46 1 137 1 88 1 141 5 49 1 331 1 89 6 334 1 146 1 335 7 195 1 55 4 
75 1 1 2 27 1 57 1 287 1 366 2 174 2 103 2 345 1 156 1 38 1 267 1 292 2 247 1 371 2 64 4 108 2 109 1 183 2 208 1 67 1 46 1 278 1 137 1 306 2 17 1 88 1 141 4 358 1 49 1 331 1 167 1 334 1 310 1 89 4 118 1 119 2 335 4 195 1 55 2 
75 1 1 2 27 1 57 1 287 1 366 2 103 2 345 1 38 1 156 1 267 1 292 2 247 1 371 2 64 4 108 2 109 1 228 1 183 2 208 1 67 1 46 1 137 1 306 1 17 1 88 1 141 4 358 1 49 1 331 1 167 1 310 1 334 1 89 4 118 1 119 2 25 1 335 4 195 1 314 1 55 2 
75 1 1 2 27 1 57 1 287 1 366 2 103 2 345 1 38 1 156 1 267 1 292 2 247 1 371 2 64 4 108 2 109 1 228 1 183 2 208 1 67 1 46 1 137 1 306 1 17 1 88 1 141 4 358 1 49 1 331 1 167 1 310 1 334 1 89 4 118 1 119 2 25 1 335 4 195 1 314 1 55 2 
75 1 284 1 1 2 27 1 97 2 57 1 287 1 366 2 174 2 103 2 345 1 156 1 267 1 81 1 247 1 64 4 108 2 109 1 228 1 183 2 208 1 67 1 134 2 46 1 136 1 137 1 306 1 17 1 88 1 141 4 358 1 49 1 331 1 167 1 310 1 334 1 89 4 118 1 335 4 195 1 55 2 
1 2 98 1 57 1 287 1 103 3 345 1 6 1 156 2 292 2 247 1 64 4 108 3 109 2 14 1 208 1 67 1 306 1 17 1 358 1 167 1 310 2 118 1 25 1 119 2 314 1 75 2 27 1 124 1 366 2 128 1 38 1 267 1 371 2 82 1 228 1 183 2 46 1 137 1 328 1 88 1 141 4 49 1 331 1 89 5 334 1 335 5 147 1 195 1 55 3 
1 2 98 1 57 1 287 1 103 3 345 1 6 1 156 2 292 2 247 1 64 4 108 3 109 2 14 1 208 1 67 1 306 1 17 1 358 1 167 1 310 2 118 1 25 1 119 2 314 1 75 2 27 1 124 1 366 2 128 1 38 1 267 1 371 2 82 1 228 1 183 2 46 1 137 1 328 1 88 1 141 4 49 1 331 1 89 5 334 1 335 5 147 1 195 1 55 3 
75 1 1 2 27 1 97 2 57 1 287 1 366 2 174 2 103 2 345 1 156 1 267 1 247 1 81 1 64 4 108 2 109 1 183 2 208 1 67 1 134 2 46 1 278 1 137 1 306 1 17 1 88 1 141 4 358 1 49 1 331 1 167 1 334 1 310 1 89 4 118 1 335 4 195 1 55 2 
282 1 315 1 28 1 317 1 340 1 58 1 154 1 2 6 101 1 60 2 131 1 8 1 10 1 180 3 249 1 230 1 45 2 162 1 71 1 307 2 236 1 144 2 257 3 92 1 259 1 122 1 
315 1 240 1 340 2 31 1 153 1 2 14 101 2 60 1 37 1 131 11 368 3 8 4 271 3 10 2 272 1 180 8 300 1 249 11 44 1 209 1 68 1 184 1 45 4 111 2 162 1 70 1 71 2 307 1 117 2 236 2 144 2 257 6 122 2 
339 1 75 2 96 1 124 1 125 1 240 1 340 1 98 1 78 1 172 1 222 1 2 2 101 1 60 1 156 1 40 1 9 1 8 1 180 1 66 1 300 1 209 1 250 1 45 2 162 1 71 1 213 1 163 1 214 1 234 1 356 1 192 1 236 1 310 2 24 1 257 1 53 1 122 1 
282 1 339 3 239 1 240 1 340 3 98 1 58 1 154 1 2 20 101 3 60 2 61 2 156 1 158 2 294 2 9 2 8 7 10 3 66 1 300 1 249 7 209 1 250 2 111 2 162 3 70 4 71 3 213 1 163 2 214 2 307 4 117 2 216 1 310 3 257 10 259 1 258 1 122 3 315 3 75 3 124 1 125 2 30 1 78 2 172 3 264 2 131 7 40 2 180 10 230 1 184 2 45 6 234 3 327 2 192 2 236 3 144 8 92 1 53 1 
75 1 339 8 76 1 124 1 28 1 125 3 240 1 340 2 77 1 98 1 172 7 2 2 101 2 156 1 176 1 63 1 7 1 270 1 180 1 66 2 349 1 274 1 209 1 250 2 45 4 162 2 71 2 213 1 252 2 163 2 214 2 234 8 357 1 308 1 216 1 236 2 310 1 257 1 122 2 
75 1 315 1 124 1 340 1 98 1 2 3 101 1 131 1 156 1 8 1 10 1 180 1 249 1 300 1 184 1 45 2 111 1 162 1 277 1 71 1 212 1 307 1 328 1 117 1 236 1 310 1 144 1 257 2 122 1 
249 1 28 1 45 2 162 1 70 1 340 1 71 1 303 1 2 2 101 1 117 1 131 1 236 1 144 1 8 1 10 1 122 1 180 2 
315 1 249 1 28 1 184 1 45 2 162 1 340 1 127 1 71 1 2 2 101 1 307 1 131 1 236 1 144 1 8 1 257 2 122 1 
315 1 28 1 340 1 2 4 101 1 131 2 8 2 10 1 180 2 249 2 184 1 111 1 45 2 162 1 70 1 71 1 117 1 307 1 236 1 144 2 257 2 122 1 
249 1 274 1 45 2 162 1 70 1 340 1 71 1 303 1 2 2 101 1 117 1 131 1 236 1 144 1 8 1 10 1 122 1 180 2 
315 1 249 1 274 1 184 1 45 2 162 1 340 1 127 1 71 1 2 2 101 1 307 1 131 1 236 1 144 1 8 1 257 2 122 1 
315 1 340 1 2 4 101 1 131 2 8 2 10 1 180 2 249 2 274 1 184 1 111 1 45 2 162 1 70 1 71 1 117 1 307 1 236 1 144 2 257 2 122 1 
315 1 340 1 2 4 101 1 131 2 8 2 10 1 180 2 249 2 184 1 111 1 45 2 162 1 70 1 71 1 117 1 307 1 236 1 144 2 257 2 122 1 
339 1 75 1 125 1 240 1 340 1 78 1 172 1 2 2 101 1 60 1 40 1 294 1 9 1 180 1 66 1 209 1 250 1 45 2 162 1 71 1 163 1 214 1 234 1 192 1 236 1 310 1 257 1 122 1 
339 1 75 1 125 1 240 1 340 1 78 1 172 1 2 2 320 1 101 1 60 1 9 1 180 1 66 1 209 1 250 1 45 2 162 1 71 1 304 1 163 1 214 1 234 1 18 1 236 1 310 1 257 1 122 1 
315 1 340 1 2 4 101 1 131 2 8 2 10 1 180 2 300 1 249 2 184 1 111 1 45 2 162 1 70 1 71 1 117 1 307 1 236 1 144 2 257 2 122 1 
315 1 339 1 75 1 125 1 340 1 77 1 78 1 172 1 2 4 101 1 264 1 131 2 40 1 294 1 8 2 9 1 10 1 180 2 249 2 184 1 250 1 45 2 111 1 162 1 70 1 71 1 163 1 214 1 234 1 307 1 117 1 192 1 236 1 310 1 144 2 257 2 122 1 
315 1 75 1 124 1 340 1 98 1 2 3 101 1 156 1 131 1 8 1 10 1 180 2 300 1 249 1 184 1 45 2 111 1 162 1 70 1 112 1 71 1 212 1 328 1 117 1 236 1 310 1 144 1 257 1 122 1 
315 3 340 2 153 1 2 19 290 1 101 2 37 1 157 1 268 2 368 2 203 1 105 1 271 1 10 3 180 9 184 3 45 4 111 3 375 1 70 3 85 1 71 2 307 3 117 3 380 1 143 2 311 1 144 6 257 10 122 2 
315 2 340 3 263 1 2 26 290 1 101 3 175 1 37 2 157 1 268 1 203 2 368 2 105 1 271 2 10 3 180 14 184 2 45 6 111 3 70 2 85 1 71 3 114 1 353 2 305 1 139 1 307 2 117 3 380 2 381 1 143 4 144 4 257 12 122 3 
282 1 340 3 153 1 58 1 2 41 154 1 290 1 101 3 157 1 203 1 105 1 10 5 111 4 70 4 71 3 114 1 353 1 305 1 117 4 307 4 257 21 259 1 122 3 315 5 263 1 175 1 37 3 368 4 268 1 271 3 180 20 230 1 184 4 45 6 375 1 85 1 139 1 380 2 381 1 143 4 144 8 193 1 92 1 
282 1 315 4 340 4 263 1 58 1 153 1 154 1 2 38 290 1 101 4 175 1 37 3 157 1 268 1 368 4 203 1 105 1 271 3 10 5 180 20 230 1 184 3 45 8 111 4 375 1 70 3 114 1 85 1 71 4 353 2 305 1 139 1 307 4 117 4 380 2 381 1 143 4 144 7 193 1 257 18 259 1 92 1 122 4 
282 1 315 8 340 2 263 1 58 1 153 2 154 1 2 52 290 1 101 2 175 1 37 2 157 1 268 1 368 4 203 1 105 1 271 4 10 8 272 2 180 27 230 1 184 7 45 4 111 7 70 7 114 1 85 1 71 2 353 1 305 1 139 1 307 7 117 7 380 1 381 1 143 4 144 14 257 25 259 1 92 1 122 2 
129 1 43 1 36 1 351 1 135 1 377 1 297 1 218 1 312 1 325 1 
190 1 309 1 
43 1 36 1 262 1 351 1 135 1 377 1 217 1 11 1 312 1 
43 1 135 1 351 1 377 1 171 1 318 1 306 1 141 1 129 1 200 1 36 1 91 1 64 1 120 2 159 1 218 1 312 1 325 1 
43 1 135 1 351 1 377 1 171 1 318 1 306 1 141 1 129 1 200 1 36 1 91 1 64 1 120 2 159 1 218 1 312 1 325 1 
43 1 135 1 351 1 377 1 171 1 318 1 306 1 141 1 129 1 200 1 36 1 91 1 64 1 120 2 159 1 218 1 312 1 325 1 
202 1 187 1 41 1 
202 1 187 1 41 1 
302 1 378 1 
302 1 202 1 378 1 
254 1 244 1 
75 2 283 1 124 2 98 2 244 1 60 1 200 1 367 1 36 1 156 2 226 1 64 1 43 1 351 1 135 1 377 1 16 1 190 1 141 1 309 1 254 1 22 1 310 2 91 1 120 1 312 1 313 1 
187 1 41 1 
302 1 202 1 378 1 
339 2 75 2 125 1 198 1 240 1 340 1 172 2 2 2 101 1 4 1 156 2 176 1 296 1 180 1 300 1 209 1 250 1 45 2 162 1 71 1 163 1 252 2 232 1 355 1 214 1 234 2 308 1 236 1 310 2 257 1 122 1 
339 2 250 1 276 1 241 1 77 1 72 1 172 2 223 1 164 2 289 1 214 1 234 2 33 1 165 1 166 1 216 1 168 1 194 1 181 1 
339 1 250 1 276 1 241 1 72 1 172 1 223 1 164 2 234 1 33 1 214 1 165 1 166 1 216 1 168 1 194 1 84 1 
339 1 66 1 125 1 250 1 172 1 163 1 289 1 214 1 234 1 165 1 357 1 63 1 145 1 83 1 
339 1 250 1 276 1 241 1 72 1 172 1 223 1 164 2 289 1 234 1 33 1 214 1 165 1 166 1 216 1 168 1 194 1 181 1 
188 1 
196 1 267 1 332 1 46 1 317 1 57 1 306 1 
1 1 57 1 287 1 174 1 38 1 267 1 292 1 247 1 371 1 64 1 46 1 306 2 141 1 167 1 118 1 119 1 335 1 
339 3 1 3 196 1 197 2 57 2 243 2 287 4 288 1 3 1 246 2 247 4 9 3 64 5 10 2 206 2 160 2 66 1 161 1 250 4 210 2 111 2 352 6 163 3 306 8 214 3 117 2 19 1 167 4 118 4 119 6 315 2 125 10 170 3 77 1 172 3 174 12 321 1 35 1 267 8 323 2 178 1 373 6 326 2 184 2 46 9 376 2 374 2 137 2 234 3 327 2 141 5 332 1 335 5 281 2 
315 2 1 1 362 1 263 1 57 2 287 2 174 6 175 1 102 1 37 1 267 5 323 2 368 1 247 2 178 1 64 1 271 1 10 2 373 5 326 1 160 1 184 2 111 2 352 5 46 8 114 1 305 1 306 5 117 2 141 1 381 1 167 2 118 2 119 3 335 1 
75 1 315 1 124 1 98 1 58 1 287 1 154 1 128 1 6 1 156 1 267 2 323 2 247 1 64 1 10 2 82 1 109 1 326 1 230 1 46 2 328 1 141 1 167 1 310 1 118 1 260 1 147 1 314 1 
196 1 46 1 57 1 287 1 306 1 267 1 332 1 167 1 247 1 118 1 
315 2 326 1 184 2 111 2 352 5 46 5 174 10 306 5 327 1 117 2 267 5 323 2 119 5 10 2 373 5 
141 1 1 1 57 1 64 1 335 1 306 1 
339 4 1 2 125 1 221 1 287 1 172 4 288 1 321 2 39 1 267 2 247 2 63 1 178 2 64 3 248 1 66 2 160 2 250 1 46 2 163 1 379 1 214 1 234 4 357 1 141 3 21 1 167 2 118 2 335 4 
339 1 75 3 124 2 125 1 240 1 340 1 98 2 78 1 172 1 2 1 101 1 60 1 156 2 40 1 294 1 9 1 82 1 66 1 45 2 250 1 162 1 71 1 163 1 234 1 214 1 328 2 255 1 192 1 236 1 310 3 257 1 122 1 
160 1 352 2 46 1 57 2 287 1 174 4 306 4 267 2 167 1 247 1 118 1 178 1 119 2 259 1 373 2 
149 1 43 1 351 1 
149 1 43 1 351 1 
43 1 254 1 351 1 106 1 325 1 
149 1 43 1 351 1 
43 1 351 1 364 1 
43 1 351 1 364 1 
43 1 351 1 364 1 
43 1 351 1 
36 1 377 1 
315 1 282 1 230 1 45 4 70 1 340 2 71 2 353 1 58 1 154 1 2 8 101 2 307 2 144 3 257 4 259 1 10 1 92 1 180 4 122 2 
282 1 315 1 230 1 317 1 58 1 154 1 2 6 307 2 144 2 257 3 259 1 92 1 10 1 180 3 
315 1 0 1 184 1 45 2 111 1 340 1 70 1 71 1 2 4 101 1 307 1 117 1 144 2 257 2 10 1 122 1 180 2 
315 1 184 1 111 1 70 1 153 1 2 7 307 1 117 1 37 1 368 2 144 2 257 4 271 1 10 1 180 3 
282 1 315 3 340 1 58 2 153 1 154 1 2 20 101 1 368 2 10 3 271 2 180 10 272 1 230 2 184 2 68 1 111 2 45 2 70 2 71 1 353 1 117 2 307 4 144 6 257 10 259 1 92 1 122 1 
368 1 257 1 2 1 
271 1 2 1 180 1 
0 1 315 1 184 1 45 2 111 1 340 1 70 1 71 1 2 6 101 1 327 1 117 1 307 2 144 3 257 3 10 1 122 1 180 3 
315 2 340 1 263 1 2 12 101 1 175 1 37 1 368 1 105 1 271 1 10 2 180 6 184 2 45 2 111 2 70 1 71 1 114 1 305 1 117 2 307 1 381 1 144 2 257 6 122 1 
315 1 230 1 70 1 58 1 154 1 2 6 307 1 144 2 257 3 10 1 180 3 
282 1 230 1 45 2 70 1 340 1 71 1 353 1 58 1 2 3 101 1 307 1 144 2 257 2 92 1 93 1 180 1 122 1 
315 2 230 2 45 2 340 1 70 2 71 1 58 2 2 10 154 1 101 1 307 3 105 1 144 5 257 5 10 2 122 1 260 1 180 5 
45 2 340 1 70 1 71 1 2 2 101 1 117 1 105 1 144 1 10 1 122 1 180 2 
315 1 184 1 45 2 111 1 340 1 70 1 71 1 2 4 101 1 307 1 117 1 144 2 105 1 257 2 10 1 122 1 180 2 
230 1 45 6 375 1 340 3 70 1 71 3 353 1 58 1 2 3 101 3 307 1 105 1 144 2 257 2 93 1 122 3 180 1 
282 1 0 1 315 5 56 1 340 5 58 3 153 1 154 2 2 34 101 5 155 1 37 1 368 4 105 1 271 3 10 5 180 16 230 3 184 3 45 10 111 3 375 1 70 5 71 5 353 2 73 1 117 3 307 7 144 12 257 18 259 1 92 1 93 1 122 5 
315 1 282 1 340 1 58 1 2 8 154 1 101 1 37 1 368 1 105 1 10 1 271 1 180 4 230 1 45 2 71 1 307 2 381 1 144 2 257 4 259 1 92 1 122 1 
315 1 282 1 0 1 340 2 58 1 153 1 154 1 2 11 101 2 37 1 368 2 105 1 271 1 10 2 180 6 230 1 45 4 111 1 70 1 71 2 307 2 117 1 381 1 144 3 257 5 259 1 92 1 122 2 
282 1 0 1 315 3 340 3 263 1 58 1 154 1 2 19 101 3 175 1 37 1 368 1 105 1 271 1 10 3 180 9 230 1 184 2 45 6 111 2 70 1 71 3 114 1 353 1 305 1 117 2 307 3 381 1 144 4 257 10 259 1 92 1 122 3 
282 1 0 1 315 2 340 3 263 1 58 1 154 1 2 17 101 3 175 1 37 1 368 1 105 1 271 1 10 3 180 10 230 1 184 1 45 6 111 2 70 2 71 3 114 1 353 1 305 1 117 2 307 3 381 1 144 5 257 7 259 1 92 1 122 3 
315 1 282 1 340 1 58 1 2 8 154 1 101 1 37 1 368 1 105 1 10 1 271 1 180 4 230 1 45 2 71 1 307 2 381 1 144 2 257 4 259 1 92 1 122 1 
315 2 340 1 263 1 2 12 101 1 175 1 37 1 368 1 105 1 271 1 10 2 180 6 184 2 45 2 111 2 70 1 71 1 114 1 305 1 117 2 307 1 381 1 144 2 257 6 122 1 
282 1 0 1 315 2 340 4 263 1 58 1 154 1 2 18 101 4 175 1 37 1 368 1 105 1 271 1 10 3 180 10 230 1 184 1 45 8 111 2 70 2 71 4 114 1 353 2 305 1 117 2 307 3 381 1 144 5 257 8 259 1 92 1 122 4 
315 2 340 4 263 1 2 16 101 4 175 1 37 1 368 1 105 1 271 1 10 3 180 9 184 2 45 8 111 3 70 3 375 1 71 4 114 1 353 2 305 1 117 3 307 3 381 1 144 6 257 7 122 4 
315 1 282 2 230 3 70 3 58 3 2 7 154 1 307 3 144 6 257 4 92 1 10 1 180 3 
282 1 315 2 340 4 263 1 58 1 154 1 2 18 101 4 175 1 37 1 368 1 105 1 271 1 10 3 180 10 230 1 184 1 45 8 111 2 70 1 375 1 71 4 114 1 353 2 305 1 117 2 307 3 381 1 144 4 257 8 259 1 92 1 122 4 
60 1 75 1 156 1 132 1 310 1 334 1 319 1 
75 1 229 1 319 1 60 1 130 1 156 1 224 1 132 1 334 1 310 1 348 1 369 1 
357 1 339 1 66 1 125 1 250 1 63 1 317 1 172 1 163 1 214 1 234 1 
75 2 339 1 124 1 66 1 125 1 250 1 98 1 78 1 172 1 213 1 163 1 234 1 214 1 60 1 156 1 192 1 310 2 9 1 
339 1 75 2 124 1 125 3 98 2 78 1 172 1 60 1 321 1 156 2 9 2 206 1 109 1 250 1 374 1 213 1 163 2 214 1 234 1 358 1 331 1 192 1 310 2 
339 2 75 2 124 1 125 3 98 2 78 1 172 2 320 1 60 1 321 1 156 2 177 1 9 2 206 1 109 1 250 1 374 1 213 1 163 2 214 1 234 2 358 1 331 1 310 2 
339 3 12 1 66 1 125 4 250 1 374 1 170 1 376 1 57 1 137 1 172 3 163 1 173 1 306 1 234 3 214 1 141 2 321 1 177 1 9 1 64 2 335 1 206 1 
339 3 66 1 125 4 250 1 210 1 374 1 170 1 376 1 57 1 137 1 172 3 163 1 306 1 234 3 214 1 141 2 321 1 177 1 9 1 64 2 335 1 206 1 
339 1 250 1 7 1 172 1 214 1 234 1 
339 7 76 1 66 2 349 1 125 3 316 1 250 3 77 1 172 6 115 1 48 1 252 1 163 2 234 7 214 2 3 1 216 1 176 1 7 1 270 1 9 1 
339 1 282 1 198 1 340 2 98 1 58 1 154 1 2 6 101 2 60 2 156 1 158 1 294 1 8 1 9 1 10 1 300 1 249 1 250 1 162 2 71 2 213 1 163 1 214 1 307 2 310 2 257 3 259 1 122 2 75 2 315 1 124 1 125 1 77 1 78 1 172 1 264 1 131 1 40 1 180 3 230 1 45 4 234 1 192 1 236 2 144 2 92 1 
339 1 283 1 1 1 196 1 125 2 170 1 57 1 243 1 172 1 287 2 288 1 246 1 267 1 247 2 64 3 66 1 210 1 46 1 376 1 137 1 306 1 234 1 141 3 332 1 167 2 118 2 335 2 281 1 
339 2 125 2 250 2 376 1 77 1 172 2 163 1 234 2 214 1 3 1 19 1 7 1 9 1 
357 1 339 4 66 1 125 1 250 1 177 1 63 1 77 1 172 4 94 1 163 1 214 1 234 4 
339 2 125 1 316 1 250 2 30 1 172 2 48 1 163 1 234 2 214 1 321 1 253 1 9 1 280 1 
339 1 66 1 250 1 276 1 72 1 172 1 223 1 164 1 214 1 234 1 
339 2 125 1 250 1 176 1 216 1 77 1 172 2 163 1 232 1 214 1 234 2 
339 5 76 1 66 1 349 1 125 3 250 2 77 1 172 4 163 2 234 5 214 2 357 1 321 1 176 1 63 1 94 1 
339 5 66 1 349 1 125 3 250 2 77 1 172 4 163 2 234 5 214 2 357 1 321 1 235 1 176 1 63 1 94 1 
75 2 339 1 124 1 66 1 125 1 250 1 98 1 78 1 172 1 213 1 163 1 320 1 234 1 214 1 60 1 156 1 310 2 9 1 
339 1 125 1 316 1 250 2 172 1 115 1 48 1 163 1 234 1 214 1 3 1 321 1 9 1 
60 1 201 1 191 1 227 1 32 1 
283 1 65 1 151 1 57 1 137 1 32 2 306 1 344 1 60 1 88 1 141 2 358 1 201 1 331 1 191 2 225 1 64 2 227 2 109 1 
75 1 4 1 201 1 156 1 310 1 296 1 227 1 32 1 355 1 
201 1 151 1 344 1 
50 1 317 1 211 1 204 1 
150 1 142 1 23 1 50 1 341 1 211 1 204 1 
150 1 363 1 245 1 
150 3 261 1 350 1 113 1 341 1 211 1 142 1 23 3 50 1 52 2 204 1 360 1 
150 2 142 1 23 2 50 1 51 1 341 1 211 1 204 1 42 1 
150 1 142 1 286 1 166 1 279 1 23 1 276 1 341 1 204 1 360 1 164 1 
150 1 142 1 23 1 50 1 341 1 204 1 360 1 
150 1 142 1 23 1 50 2 341 1 211 1 360 1 
150 2 207 1 341 2 116 1 142 2 23 2 50 1 269 1 204 1 360 1 
338 1 150 3 322 1 142 1 286 1 23 3 50 1 341 1 211 1 204 2 360 1 231 1 42 2 
150 2 219 1 276 1 341 1 211 1 223 1 164 2 142 1 166 1 23 2 50 1 194 1 204 1 360 1 42 1 
150 4 322 1 142 2 286 1 185 1 23 4 50 1 51 1 341 2 211 1 204 2 360 1 42 2 
150 1 142 1 23 1 50 1 341 1 211 1 204 1 360 1 
261 1 150 4 286 1 350 1 341 1 211 2 99 1 142 1 322 1 23 4 50 2 52 1 204 3 42 2 
150 2 341 1 211 1 330 1 142 1 20 1 23 2 50 1 204 1 360 1 372 1 42 1 
261 1 150 3 350 2 341 1 211 1 199 1 142 1 23 3 50 1 52 2 204 1 360 1 
204 2 100 1 336 1 148 2 
150 1 142 1 23 1 341 1 152 1 360 1 
150 2 142 1 23 2 50 1 341 1 211 1 204 1 360 1 231 1 42 1 
285 1 
150 1 142 1 23 1 50 1 341 1 211 1 204 1 360 1 
150 3 142 1 23 3 50 1 52 1 341 1 211 1 204 1 360 1 231 1 42 1 
322 1 286 1 99 1 204 1 
50 1 204 1 

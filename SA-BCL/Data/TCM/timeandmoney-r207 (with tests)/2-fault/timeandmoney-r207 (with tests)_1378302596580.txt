#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
83 5 182 2 139 2 245 1 85 4 209 9 105 1 212 9 231 1 371 1 215 3 186 1 282 6 372 1 351 1 166 2 167 1 233 2 259 1 196 2 376 1 292 1 98 2 134 1 240 1 29 1 359 1 57 2 
83 5 182 2 139 2 245 1 85 4 209 9 105 1 212 9 231 1 371 1 215 3 186 1 282 6 372 1 351 1 166 2 167 1 233 2 259 1 376 1 196 2 292 1 98 2 134 1 240 1 29 1 359 1 57 2 
83 6 182 2 139 2 245 1 85 5 209 10 105 1 212 10 231 1 371 1 215 4 186 1 282 7 372 1 351 1 166 2 167 1 233 2 259 1 376 1 196 2 292 1 98 2 134 1 240 1 29 1 359 1 57 2 
83 4 182 2 139 2 85 3 209 7 105 1 212 7 231 1 371 1 215 2 186 1 282 4 372 1 351 1 166 2 167 1 233 2 259 1 376 1 196 1 292 1 98 2 134 1 240 1 29 1 359 1 57 2 
259 1 83 3 196 2 139 1 245 1 85 2 209 4 98 1 212 4 231 1 215 1 282 3 29 1 359 1 57 1 166 1 167 1 233 1 
83 1 4 1 182 1 139 1 292 1 337 1 209 2 98 1 212 2 231 1 134 1 269 1 29 1 166 1 167 1 233 1 
212 3 98 2 231 1 83 2 215 1 182 1 186 1 282 1 139 2 85 1 29 1 209 3 167 1 
2 1 83 5 182 1 207 1 139 2 85 4 245 1 209 9 105 1 212 9 231 1 215 3 186 1 282 7 351 1 166 1 167 1 233 1 259 1 196 2 98 2 29 1 359 1 57 1 
2 1 83 5 182 1 207 1 139 2 85 4 245 1 209 9 105 1 212 9 231 1 215 3 186 1 282 7 351 1 166 1 167 1 233 1 259 1 196 2 98 2 29 1 359 1 57 1 
71 1 143 1 27 1 
27 1 163 1 184 2 
312 2 11 2 21 2 370 2 268 1 84 1 140 2 310 2 
104 1 61 1 84 1 246 1 140 2 310 2 7 1 367 1 106 2 108 1 312 2 109 1 11 2 214 1 13 1 370 3 318 1 256 1 89 1 133 1 258 1 21 3 171 1 147 1 321 2 377 2 175 1 151 2 264 1 354 1 56 2 222 1 223 1 304 1 268 1 204 1 360 1 
312 1 11 1 21 1 370 1 219 1 84 1 140 1 310 1 271 1 226 1 
235 1 21 1 205 1 336 1 140 1 8 1 71 1 370 1 118 1 119 1 27 1 226 1 132 1 53 1 
235 1 21 1 205 1 310 1 140 1 8 2 71 1 312 1 11 1 370 1 118 1 27 1 132 2 226 1 53 1 
65 1 112 1 276 1 132 1 8 1 
71 1 65 1 286 1 157 1 112 1 27 1 132 2 8 2 
112 1 132 1 8 1 
21 1 219 1 84 1 310 1 140 1 299 1 8 1 312 1 65 1 11 1 370 1 271 1 226 1 132 1 
27 1 
71 1 65 1 286 1 112 1 27 1 216 1 132 2 8 2 
286 1 275 2 309 1 291 2 365 1 161 1 8 5 369 1 152 1 71 1 65 2 112 2 27 1 28 1 253 1 329 2 358 1 132 5 19 1 
143 1 268 1 
21 2 140 2 310 1 312 1 11 1 370 2 268 2 243 1 146 1 
266 1 149 1 96 1 
133 1 258 1 21 1 377 1 61 1 246 1 247 1 106 1 354 1 56 1 222 1 370 1 304 1 268 1 204 1 256 1 
133 1 258 1 170 1 21 2 61 1 377 1 246 1 310 1 140 1 96 1 354 1 106 1 56 1 222 1 280 1 11 1 370 2 304 1 204 1 256 1 
170 2 21 5 138 1 336 1 310 4 140 5 312 1 9 1 280 1 11 4 370 5 268 1 103 1 146 1 
11 2 21 2 370 2 219 1 140 2 310 2 226 1 199 1 
312 1 11 3 170 1 21 3 370 3 268 1 140 3 310 3 
11 1 21 1 370 1 219 1 140 1 310 1 226 1 
312 1 11 1 21 1 370 1 243 1 140 1 310 1 226 1 146 1 
205 1 61 1 84 1 246 1 140 3 310 3 7 1 367 1 8 1 106 1 312 2 109 1 280 1 11 3 214 1 13 1 370 4 130 1 132 1 256 1 146 1 53 1 89 1 133 1 235 1 258 1 21 4 170 1 171 1 321 2 377 1 175 1 151 1 150 1 354 1 56 1 222 1 223 1 304 1 118 1 268 1 204 1 360 1 226 1 
11 1 21 2 370 2 170 1 138 1 268 1 336 1 140 2 310 1 
235 1 170 2 21 3 205 1 310 3 140 3 150 1 8 1 312 1 280 1 11 3 370 3 118 1 27 1 132 1 226 1 146 1 191 1 53 1 
170 1 21 2 149 1 310 2 140 2 96 1 312 1 11 2 370 2 146 1 
133 1 258 1 21 1 377 1 61 1 246 1 106 1 354 1 56 1 222 1 370 1 304 1 268 1 204 1 256 1 
133 1 258 1 21 1 377 1 61 1 246 1 62 1 106 1 56 1 222 1 110 1 370 1 304 1 268 1 256 1 
104 2 278 1 277 1 7 1 250 1 343 1 109 1 42 1 13 1 214 2 347 1 254 1 89 1 260 1 321 2 149 2 175 1 151 4 96 2 223 1 266 2 75 1 225 1 136 1 
11 1 205 1 21 1 370 1 140 1 310 1 226 1 199 1 
47 1 332 1 
47 1 332 1 
355 1 99 1 
355 1 99 1 
355 1 99 1 
326 1 47 1 332 1 
346 1 47 1 332 1 
155 1 355 1 99 1 47 2 26 1 332 2 
326 1 47 1 332 1 
326 1 47 1 332 1 
47 1 332 1 95 1 
47 1 332 1 95 1 
47 1 332 1 95 1 
332 1 6 1 229 1 310 2 140 2 8 1 368 1 211 1 41 1 11 2 43 1 346 1 370 2 47 1 18 1 132 1 21 2 375 1 297 1 25 1 180 1 78 1 268 1 328 1 
363 1 332 2 6 1 261 1 229 2 279 1 379 1 8 2 300 2 368 2 41 3 47 2 26 1 27 1 78 2 232 1 114 1 18 2 132 2 
57 1 166 1 233 1 
269 1 166 1 233 1 
144 1 315 1 269 1 294 1 57 2 166 3 
144 1 48 1 269 1 294 1 57 1 166 2 
144 1 269 1 57 1 294 2 166 2 
156 1 275 1 278 1 33 1 340 1 8 5 184 3 369 2 185 1 125 1 65 4 43 1 42 1 112 1 316 2 349 2 253 3 163 1 132 5 19 1 286 1 375 1 289 1 291 1 265 2 71 1 180 1 27 2 225 1 329 1 305 1 136 1 
156 3 275 2 335 1 276 5 183 1 278 3 8 9 184 9 369 6 185 2 125 2 65 7 42 3 112 6 316 6 349 6 253 8 163 3 255 1 350 5 132 9 19 1 319 1 286 1 55 1 291 2 152 1 71 1 180 4 201 1 27 5 225 3 305 1 329 2 136 3 
156 1 275 1 278 1 340 1 8 3 185 1 125 1 369 2 184 4 65 2 42 1 316 2 349 2 253 3 163 2 132 3 289 1 291 1 152 1 265 1 71 1 180 1 27 3 225 1 329 1 136 1 
156 2 275 1 335 1 278 2 340 1 8 4 184 7 185 1 125 1 369 4 65 3 42 2 316 4 349 4 253 5 163 3 255 1 132 4 289 1 291 1 152 1 265 2 71 1 180 2 201 1 27 4 225 2 329 1 136 2 
129 1 143 1 256 1 
80 1 256 1 
287 1 
222 1 61 1 256 1 
102 1 256 1 
61 1 256 1 
129 2 222 1 1 1 61 1 68 1 256 3 
31 1 104 4 228 1 278 1 277 2 151 7 178 2 380 1 63 1 214 3 111 1 44 1 75 3 76 1 17 1 136 1 70 1 
31 1 104 4 228 1 278 1 277 2 151 7 178 2 380 1 63 1 214 3 111 1 44 1 75 3 76 1 17 1 136 1 70 1 
31 1 104 4 228 1 278 1 277 2 151 7 178 2 380 1 63 1 214 3 111 1 44 1 75 3 76 1 17 1 69 1 136 1 70 1 
31 1 156 3 206 1 104 16 228 1 278 4 277 5 126 1 37 1 63 2 39 1 42 3 111 2 214 15 44 2 13 1 17 2 190 3 70 1 89 1 321 2 175 1 151 31 322 1 178 3 380 5 239 1 223 1 200 4 75 10 76 1 381 1 225 3 136 4 
31 1 104 5 228 1 278 1 277 3 126 1 63 1 13 2 44 1 214 4 111 1 17 1 234 1 89 2 321 4 175 2 295 1 151 9 178 2 380 1 223 2 75 4 76 1 136 1 
83 1 182 1 333 1 139 1 209 2 106 1 212 2 231 1 67 1 282 1 187 1 315 1 166 2 167 1 233 1 133 1 91 1 169 1 377 1 56 1 98 1 303 1 304 1 79 1 269 1 29 1 57 1 272 1 330 1 59 1 
83 1 182 1 333 1 139 1 209 3 106 1 212 3 67 1 315 1 282 2 166 2 167 1 233 1 133 1 91 1 169 1 377 1 148 1 56 1 98 1 303 1 304 1 79 1 269 1 29 1 57 1 306 1 153 1 330 1 59 1 
83 1 182 1 333 1 209 2 106 1 212 2 67 1 282 2 315 1 166 2 167 1 233 1 133 1 91 1 169 1 377 1 148 1 56 1 304 1 79 1 269 1 29 1 306 1 57 1 59 1 
133 1 91 2 182 2 333 2 61 1 139 1 377 1 246 1 177 1 208 1 124 1 209 1 106 1 56 1 98 1 212 1 281 1 304 1 67 2 162 1 113 1 153 1 256 1 
182 1 333 1 139 1 209 1 106 1 212 1 231 1 67 1 187 1 315 1 166 2 233 1 133 1 91 1 169 1 377 1 56 1 98 1 303 1 304 1 79 1 269 1 57 1 306 1 330 1 59 1 
288 1 
181 2 275 1 61 1 336 1 140 1 8 5 342 2 184 2 106 2 64 1 14 1 112 6 19 1 235 1 286 3 21 1 192 2 291 1 23 1 238 1 71 1 72 1 304 1 118 1 119 1 27 2 120 2 205 1 246 2 208 1 248 1 311 1 369 2 125 1 313 1 213 1 370 1 253 2 163 2 49 1 51 4 132 5 165 1 52 2 257 1 256 1 53 1 133 1 173 2 377 2 177 1 262 2 56 2 329 1 226 1 
205 1 336 1 140 1 311 1 8 3 64 1 213 1 370 1 112 2 216 1 51 2 132 3 53 1 235 1 21 1 286 1 173 1 23 1 238 1 118 1 119 1 226 1 
205 1 336 1 140 1 311 1 8 3 64 1 213 1 370 1 112 1 216 1 51 3 132 3 53 1 52 1 235 1 21 1 286 1 23 1 238 1 71 1 118 1 119 1 27 1 226 1 
205 1 336 1 140 1 311 1 8 3 342 1 64 1 213 1 370 1 112 2 216 1 51 3 132 3 53 1 52 1 235 1 286 1 21 1 173 1 23 1 238 1 71 1 118 1 119 1 27 1 226 1 
275 1 336 1 140 2 8 3 342 2 64 1 11 1 142 1 112 3 19 1 20 1 235 1 21 2 286 1 291 1 23 1 299 1 238 1 71 1 72 1 118 1 119 1 27 1 205 1 84 1 310 1 311 1 369 1 312 1 213 1 370 2 314 1 216 1 253 1 51 2 132 3 53 1 219 1 173 2 327 1 329 1 271 1 226 2 
181 2 275 1 336 1 140 1 8 4 184 2 342 2 64 1 14 1 112 4 19 1 235 1 21 1 286 2 192 2 291 1 23 1 238 1 71 1 72 1 118 1 119 1 27 2 120 2 205 1 311 1 248 1 369 1 213 1 370 1 253 1 51 4 163 2 132 4 53 1 52 2 173 2 262 2 329 1 226 1 
205 1 275 1 84 1 336 1 310 1 140 2 311 1 8 2 369 1 312 1 64 1 213 1 11 1 142 1 370 2 253 1 51 2 132 2 53 1 19 1 235 1 21 2 219 1 291 1 299 1 23 1 238 1 71 1 72 1 327 1 118 1 119 1 27 1 329 1 271 1 226 2 
205 1 275 1 84 1 336 1 310 1 140 2 311 1 8 2 369 1 312 1 64 1 213 1 11 1 142 1 370 2 253 1 51 2 132 2 53 1 19 1 235 1 21 2 219 1 291 1 299 1 23 1 238 1 71 1 72 1 327 1 118 1 119 1 27 1 329 1 271 1 226 2 
181 2 205 1 275 1 336 1 140 1 141 1 248 1 311 1 8 4 342 2 184 2 369 1 64 1 213 1 370 1 112 4 253 1 51 4 132 4 52 2 53 1 19 1 235 1 286 2 21 1 192 2 173 2 195 1 291 1 23 1 238 1 71 1 220 2 118 1 119 1 27 1 357 2 329 1 81 1 226 1 273 1 
275 1 336 1 140 2 8 2 342 1 64 1 142 1 11 1 112 1 19 1 235 1 21 2 291 1 23 1 299 1 238 1 71 1 72 1 118 1 119 1 27 1 205 1 84 1 310 1 311 1 369 1 312 1 213 1 370 2 314 1 253 1 51 3 132 2 52 1 53 1 219 1 173 1 327 1 329 1 271 1 226 2 
275 1 336 1 140 2 8 2 342 1 64 1 142 1 11 1 112 1 19 1 235 1 21 2 291 1 23 1 299 1 238 1 71 1 72 1 118 1 119 1 27 1 205 1 84 1 310 1 311 1 369 1 312 1 213 1 370 2 314 1 253 1 51 3 132 2 52 1 53 1 219 1 173 1 327 1 329 1 271 1 226 2 
181 2 275 1 336 1 140 1 8 4 184 2 342 2 64 1 14 1 112 4 19 1 235 1 21 1 286 2 192 2 291 1 23 1 238 1 71 1 118 1 119 1 27 1 357 2 81 1 205 1 311 1 248 1 369 1 213 1 370 1 253 1 51 4 132 4 53 1 52 2 173 2 220 2 329 1 226 1 
89 1 31 1 104 3 321 2 149 1 175 1 228 1 278 1 151 6 277 2 7 1 96 1 178 1 250 1 63 1 109 1 143 1 214 3 13 1 111 1 266 1 223 1 75 2 76 1 268 2 136 1 
156 2 104 8 277 1 278 1 7 1 37 1 109 2 42 2 214 6 13 2 251 1 190 3 89 2 147 1 321 4 149 4 175 2 151 14 96 11 302 1 380 1 73 1 223 2 266 11 75 2 200 3 381 1 268 1 225 1 270 1 360 1 154 1 136 2 
104 1 61 1 246 1 140 1 310 1 7 1 247 1 106 1 109 1 280 1 11 1 13 1 251 1 370 2 214 1 256 1 133 1 89 1 258 1 21 2 170 1 22 1 147 1 194 1 377 1 321 2 94 1 149 1 175 1 151 2 354 1 56 1 222 1 304 1 223 1 268 1 204 1 360 1 
104 10 61 2 228 1 277 4 278 3 140 1 7 3 338 2 106 3 63 1 280 1 109 3 11 1 111 1 13 3 15 2 21 3 147 1 149 7 293 1 151 20 354 2 304 2 75 8 76 1 306 1 204 2 360 1 30 1 362 2 31 1 156 2 246 1 310 1 35 2 367 2 42 2 214 10 370 3 251 1 131 1 256 2 89 3 133 2 258 2 170 1 377 3 321 6 175 3 96 7 178 1 56 3 380 4 222 2 223 3 266 7 268 2 225 2 136 3 
274 1 104 1 159 1 61 2 246 2 140 1 310 1 7 2 208 1 250 1 106 7 107 1 108 2 109 2 11 1 370 1 13 2 46 1 214 1 256 3 133 2 89 2 21 1 170 1 193 1 147 1 377 8 321 4 175 2 151 2 177 1 56 8 304 2 223 2 77 1 306 1 360 1 272 1 308 1 
156 1 104 1 277 1 310 1 140 1 278 1 7 1 312 1 109 1 11 1 42 1 13 1 251 1 370 1 214 2 146 1 89 1 236 1 21 1 321 2 149 1 175 1 151 3 96 1 266 1 223 1 75 1 225 1 136 1 
89 1 104 2 321 2 149 1 175 1 151 2 7 1 96 1 250 1 380 1 109 1 42 1 13 1 266 1 223 1 75 1 254 1 136 1 
89 1 321 2 260 1 149 1 175 1 277 1 151 2 278 1 7 1 96 1 250 1 109 1 13 1 214 2 266 1 223 1 75 1 225 1 
156 1 104 2 278 1 277 1 7 1 250 1 109 1 42 1 13 1 214 2 89 1 321 2 149 2 175 1 151 4 96 2 380 1 223 1 266 2 75 2 225 1 136 1 
89 1 193 1 104 2 321 2 149 1 175 1 151 2 7 1 96 1 380 1 109 1 42 1 13 1 266 1 223 1 75 1 254 1 136 1 
89 1 193 1 321 2 260 1 149 1 175 1 277 1 151 2 278 1 7 1 96 1 109 1 13 1 214 2 266 1 223 1 75 1 225 1 
156 1 104 2 278 1 277 1 7 1 109 1 42 1 13 1 214 2 89 1 193 1 321 2 149 2 175 1 151 4 96 2 380 1 223 1 266 2 75 2 225 1 136 1 
89 1 156 1 104 2 321 2 149 2 175 1 277 1 278 1 151 4 7 1 96 2 380 1 109 1 42 1 214 2 13 1 266 2 223 1 75 2 225 1 136 1 
89 1 133 1 258 1 21 1 147 1 104 1 321 2 377 1 61 1 175 1 246 1 151 2 7 1 367 1 106 1 354 1 56 1 109 1 222 1 214 1 13 1 370 1 223 1 304 1 268 1 204 1 360 1 256 1 
104 1 61 1 246 1 62 1 7 1 106 1 109 1 110 1 370 1 13 1 214 1 348 1 256 1 133 1 89 1 258 1 21 1 147 1 377 1 321 2 175 1 151 2 56 1 222 1 304 1 223 1 268 1 360 1 
156 1 104 2 278 1 277 1 7 1 109 1 42 1 13 1 251 1 214 2 89 1 321 2 149 2 175 1 151 4 96 2 380 1 223 1 266 2 75 2 225 1 136 1 
156 1 104 2 61 1 277 1 278 1 7 1 367 1 106 1 109 1 42 1 214 2 370 1 13 1 15 1 256 1 133 1 89 1 258 1 21 1 377 1 321 2 149 2 175 1 151 4 96 2 354 1 380 1 56 1 222 1 266 2 304 1 223 1 75 2 225 1 204 1 272 1 136 1 
156 1 104 2 278 1 310 1 140 1 7 1 312 1 109 1 11 1 42 1 214 1 13 1 251 1 370 1 146 1 89 1 21 1 321 2 149 1 175 1 151 3 96 1 380 1 223 1 266 1 75 1 135 1 225 1 136 1 
31 1 156 4 227 1 137 1 104 20 32 1 228 1 277 4 278 5 366 1 339 2 126 1 36 4 37 3 63 1 42 4 111 1 13 3 214 21 16 1 87 1 189 1 190 3 116 1 234 1 89 3 321 6 175 3 151 41 301 1 178 1 380 4 221 1 224 1 223 3 200 4 75 8 76 1 381 1 121 1 225 4 307 1 136 5 
31 1 156 4 227 1 137 1 104 20 32 1 228 1 277 4 278 4 366 1 339 2 126 2 36 4 37 3 63 1 42 4 111 1 13 4 214 18 16 1 87 1 189 1 190 3 116 1 234 1 89 4 321 8 175 4 151 38 301 1 178 1 380 3 221 1 224 1 223 4 200 4 75 7 76 1 381 1 121 1 225 3 307 1 136 5 
31 1 156 7 227 1 137 1 104 27 32 1 228 1 277 7 278 8 366 1 339 1 126 1 36 4 37 2 63 1 42 7 111 1 13 2 214 25 16 1 87 1 189 1 190 4 116 1 234 1 89 2 321 4 175 2 151 52 301 1 178 1 380 7 221 1 223 2 200 4 75 14 76 1 381 2 225 7 154 2 307 1 136 8 
156 3 137 1 104 9 32 2 277 3 278 3 339 1 210 1 36 2 37 1 42 3 13 2 214 10 16 1 190 1 116 1 234 1 89 2 321 4 175 2 151 19 301 1 380 3 224 1 223 2 200 2 75 6 381 1 225 3 136 3 
156 3 227 1 137 1 104 14 32 1 277 2 278 2 366 1 339 2 126 2 36 4 37 2 42 3 214 12 13 3 16 2 87 1 189 1 190 2 116 1 234 1 89 3 321 6 175 3 151 26 301 1 380 2 221 1 223 3 75 4 200 2 225 2 307 1 136 3 
47 1 363 1 26 1 332 1 78 1 232 1 229 1 18 1 368 1 373 1 
346 1 25 1 
40 1 45 1 47 1 332 1 78 1 229 1 378 1 18 1 368 1 
326 1 115 1 
155 1 95 1 117 1 
363 1 332 1 6 1 261 1 229 1 379 1 8 1 300 1 368 1 41 2 47 1 26 1 27 1 78 1 232 1 114 1 132 1 18 1 
363 1 332 1 6 1 261 1 229 1 379 1 8 1 300 1 368 1 41 2 47 1 26 1 27 1 78 1 232 1 114 1 132 1 18 1 
363 1 332 1 6 1 261 1 229 1 379 1 8 1 300 1 368 1 41 2 47 1 26 1 27 1 78 1 232 1 114 1 132 1 18 1 
155 1 326 1 115 1 
155 1 326 1 115 1 
95 1 117 1 
155 1 95 1 117 1 
328 1 297 1 
332 1 229 1 310 2 140 2 8 1 368 1 211 1 65 1 41 1 43 1 346 1 11 2 370 2 47 1 164 1 132 1 18 1 21 2 375 1 261 1 297 1 300 1 25 1 180 1 78 1 268 1 328 1 
104 1 61 1 159 1 140 2 7 1 106 2 108 2 344 1 109 1 13 1 251 1 370 2 46 1 214 1 256 1 133 1 285 1 89 1 21 2 320 1 147 1 377 2 321 2 175 1 151 2 56 2 304 1 74 1 223 1 360 1 361 1 
133 1 333 1 377 2 364 1 106 2 56 2 356 1 304 1 303 1 315 1 269 1 79 1 317 1 57 1 306 1 272 1 166 2 59 1 233 1 
82 1 133 1 333 1 377 1 106 1 56 1 303 1 304 1 315 1 269 1 79 1 317 1 57 1 306 1 166 2 59 1 233 1 
133 1 333 1 172 1 61 1 377 1 246 1 208 1 177 1 106 1 56 1 356 1 304 1 113 1 256 1 
133 1 333 1 377 1 364 1 106 1 56 1 356 1 303 1 304 1 315 1 269 1 79 1 317 1 57 1 306 1 166 2 59 1 233 1 
244 1 
71 1 143 1 27 1 309 1 28 1 253 1 369 1 
286 1 275 1 291 1 8 1 262 1 184 1 369 1 71 1 72 1 112 1 27 2 120 1 329 1 253 1 163 1 132 1 19 1 
0 2 1 1 3 1 275 4 61 3 278 2 8 5 106 3 184 12 66 2 112 5 349 6 19 4 235 2 286 3 352 2 291 4 24 2 71 2 304 3 27 8 28 1 80 3 122 1 362 2 156 2 309 1 246 1 125 2 369 8 129 2 42 2 316 6 253 9 218 1 163 6 132 5 257 1 256 10 133 4 92 2 174 2 377 3 176 2 323 1 56 3 324 2 222 3 102 2 329 4 225 2 58 1 272 1 136 2 
156 2 275 2 227 1 278 2 8 1 125 1 184 6 369 5 37 1 66 2 42 2 112 1 87 1 316 5 349 5 189 1 253 8 190 1 163 3 132 1 257 1 19 2 168 1 286 1 291 2 237 1 324 1 221 1 71 2 200 1 27 5 329 2 225 2 307 1 136 2 
31 1 275 1 84 1 278 1 310 1 140 1 8 1 369 2 63 1 312 1 66 2 142 1 11 1 370 1 111 1 217 1 253 2 132 1 19 1 21 1 219 1 291 1 299 1 324 1 329 1 271 1 226 1 136 2 
275 1 309 1 291 1 369 1 71 1 27 1 28 1 329 1 253 1 19 1 
362 1 156 2 278 2 369 5 184 10 324 1 66 2 42 2 27 5 316 5 349 5 225 2 253 5 163 5 136 2 
71 1 286 1 112 1 27 1 132 1 8 1 
3 2 275 2 61 1 123 1 246 2 208 1 8 3 106 4 125 2 369 2 313 1 112 4 253 2 50 1 49 1 132 3 256 1 19 1 257 2 133 1 286 2 377 4 291 2 177 1 152 1 323 1 56 4 304 1 329 2 
61 1 84 1 246 1 140 2 310 2 7 1 367 1 106 1 312 2 109 1 11 2 214 1 370 3 13 1 256 1 89 1 133 1 258 1 21 3 171 1 321 2 377 1 175 1 151 1 354 1 56 1 222 1 223 1 304 1 268 1 204 1 360 1 
275 1 291 1 178 1 184 4 369 2 125 1 71 2 27 4 316 2 349 2 329 1 253 1 163 2 19 1 257 1 
242 1 229 1 368 1 
363 1 88 1 229 1 297 1 368 1 
242 1 229 1 368 1 
242 1 229 1 368 1 
229 1 249 1 368 1 
229 1 249 1 368 1 
229 1 249 1 368 1 
229 1 368 1 
47 1 332 1 
31 1 104 4 228 1 278 1 277 2 37 1 63 1 214 4 13 1 111 1 190 1 234 1 89 1 321 2 175 1 151 8 178 1 221 1 223 1 200 1 75 2 76 1 136 1 
31 1 156 1 104 6 228 1 278 1 277 2 127 1 37 1 63 1 42 1 111 1 214 5 13 2 190 1 234 1 89 2 321 4 175 2 151 11 178 1 380 1 221 1 223 2 200 2 75 3 76 1 381 1 136 2 
31 1 156 2 227 1 104 9 228 1 278 3 277 3 127 1 126 1 37 1 63 1 42 2 111 1 214 10 13 3 87 1 189 1 190 1 234 1 89 3 321 6 175 3 151 19 178 1 380 1 221 1 223 3 200 1 75 4 76 1 225 2 136 3 307 1 
31 1 156 2 227 1 104 10 228 1 278 2 277 3 127 1 126 1 37 1 63 1 42 2 111 1 214 7 13 3 87 1 190 1 189 1 234 1 89 3 321 6 175 3 151 17 178 1 380 2 221 1 223 3 200 1 75 5 76 1 225 1 136 3 307 1 
31 1 104 4 228 1 278 1 277 2 37 1 63 1 214 4 13 1 111 1 190 1 234 1 89 1 321 2 175 1 151 8 178 1 221 1 223 1 200 1 75 2 76 1 136 1 
156 2 227 1 104 6 278 2 277 1 37 1 42 2 214 6 13 1 87 1 190 1 189 1 234 1 89 1 321 2 175 1 151 12 380 1 221 1 223 1 200 1 75 2 225 2 136 2 307 1 
31 1 156 2 227 1 104 10 228 1 278 2 277 3 127 1 126 2 37 1 63 1 42 2 111 1 214 8 13 4 87 1 189 1 190 1 234 1 89 4 321 8 175 4 151 18 178 1 380 2 221 1 223 4 200 1 75 5 76 1 225 1 307 1 136 3 
156 3 227 1 104 9 278 2 277 3 126 2 37 1 42 3 214 7 13 4 87 1 189 1 190 1 234 1 89 4 321 8 175 4 151 16 380 3 221 1 223 4 224 1 200 1 75 6 225 2 307 1 136 3 
31 1 104 3 228 2 278 1 151 7 277 3 380 3 63 3 214 4 111 3 75 6 76 1 136 1 
31 1 156 2 227 1 104 10 228 1 278 2 277 3 126 2 37 1 63 1 42 2 111 1 214 8 13 4 87 1 189 1 190 1 234 1 89 4 321 8 175 4 151 18 178 1 380 1 221 1 223 4 224 1 200 1 75 4 76 1 225 1 307 1 136 3 
89 2 31 1 104 4 321 4 175 2 228 1 278 1 151 8 277 2 178 1 126 1 380 1 63 1 214 4 13 2 111 1 223 2 75 3 76 1 136 1 
31 1 104 3 228 1 277 2 151 6 278 1 178 1 63 1 143 1 214 3 111 1 75 2 76 1 136 1 
89 1 156 1 104 2 321 2 175 1 277 1 278 1 151 4 127 1 380 1 42 1 214 2 13 1 223 1 75 2 225 1 136 1 
156 1 104 3 277 1 278 1 151 7 37 1 380 1 42 1 214 4 200 2 75 2 381 1 225 1 190 1 136 1 
31 1 156 2 104 11 228 1 278 3 277 5 126 2 63 2 42 2 111 2 214 12 13 2 190 2 89 2 321 4 290 1 175 2 151 23 178 1 380 4 223 2 75 9 200 2 76 1 381 1 225 2 270 1 154 1 136 3 
214 1 200 1 151 1 
104 1 190 1 151 1 
362 1 89 1 156 1 104 3 321 2 175 1 151 6 278 1 277 2 127 1 380 1 42 1 13 1 214 3 223 1 75 3 225 1 136 1 
156 2 227 1 104 6 278 2 277 1 37 1 42 2 214 6 13 1 87 1 190 1 189 1 234 1 89 1 321 2 175 1 151 12 380 1 221 1 223 1 200 1 75 2 225 2 136 2 307 1 
63 1 111 1 214 3 31 1 75 2 104 3 277 1 278 1 151 6 136 1 380 1 
89 1 104 1 321 2 290 1 228 1 175 1 277 1 151 3 126 1 380 1 63 1 111 1 214 2 13 1 223 1 75 2 76 1 
234 1 89 1 31 1 104 5 321 2 175 1 277 3 151 10 278 2 380 2 63 2 13 1 111 2 214 5 223 1 75 5 217 1 136 2 
234 1 89 1 104 2 321 2 175 1 151 2 380 1 42 1 13 1 223 1 75 1 136 1 
234 1 89 1 156 1 104 2 321 2 175 1 277 1 278 1 151 4 380 1 42 1 214 2 13 1 223 1 75 2 225 1 136 1 
234 1 89 3 104 1 321 6 290 1 175 3 151 3 277 1 126 1 380 1 63 1 214 2 13 3 111 1 224 1 223 3 75 2 
31 2 156 3 206 1 104 16 228 1 278 5 277 7 126 2 127 1 37 1 63 3 42 3 111 3 214 18 13 5 190 3 234 1 89 5 321 10 290 1 175 5 151 34 322 1 178 1 380 5 239 1 224 1 223 5 200 4 75 12 76 1 381 1 225 3 136 5 
21 1 370 1 138 1 268 1 336 1 140 1 230 1 
21 1 60 1 138 1 336 1 296 1 140 1 230 1 97 1 345 1 370 1 268 1 283 1 
133 1 143 1 304 1 61 1 377 1 246 1 177 1 208 1 106 1 256 1 56 1 
133 1 258 1 170 1 21 2 61 1 377 1 246 1 310 1 140 1 106 1 354 1 56 1 222 1 11 1 370 2 304 1 268 1 256 1 
133 1 258 1 205 1 170 1 21 2 3 1 352 1 61 2 377 1 310 1 140 2 106 1 354 1 56 1 222 2 11 2 370 2 304 1 102 1 268 1 226 1 53 1 256 3 
3 1 205 1 61 2 140 2 310 1 106 2 110 1 11 2 370 2 256 3 53 1 133 1 258 1 21 2 170 1 377 2 352 1 263 1 56 2 222 2 304 1 102 1 268 1 226 1 
3 1 61 1 246 1 8 2 106 3 129 1 112 1 132 2 256 4 133 1 235 1 377 3 352 1 353 1 263 1 56 3 71 1 222 1 304 1 202 1 102 1 27 1 80 1 
235 1 133 1 3 1 61 1 352 1 377 3 246 1 8 2 263 1 106 3 24 1 56 3 71 1 222 1 129 1 112 1 304 1 27 1 102 1 80 1 132 2 256 4 
133 1 304 1 377 1 106 1 308 1 56 1 
274 1 1 1 133 3 159 1 377 7 61 2 334 1 93 1 246 2 106 6 108 1 107 1 56 7 222 1 304 2 77 1 267 1 306 1 272 1 308 1 256 3 
31 1 104 3 61 1 228 1 278 1 277 2 140 1 310 1 7 2 35 1 367 1 106 1 63 1 109 2 11 1 214 3 111 1 13 2 251 1 370 2 15 1 256 1 133 1 89 2 258 1 21 2 170 1 320 1 321 4 377 1 149 1 175 2 151 6 96 1 178 1 354 1 56 1 222 1 266 1 304 1 223 2 75 2 76 1 268 2 204 1 272 1 136 1 
0 1 275 2 309 1 246 1 8 3 369 1 106 1 65 1 129 1 112 2 253 1 132 3 19 2 256 2 235 1 286 1 92 1 174 1 377 1 291 2 24 1 56 1 323 1 71 1 27 1 28 1 329 2 80 1 
1 1 133 2 377 2 61 1 106 2 56 2 129 1 222 1 304 1 218 1 272 1 308 1 256 2 
133 1 377 4 61 1 246 1 160 1 208 1 177 1 263 1 106 4 56 4 304 1 272 1 256 1 
133 2 222 1 3 1 304 1 5 1 334 1 61 1 377 2 93 1 293 1 145 1 106 2 256 1 56 2 
133 1 304 1 377 1 269 1 79 1 246 1 166 1 106 1 233 1 56 1 
133 1 377 2 159 1 61 1 106 2 56 2 344 1 304 1 306 1 272 1 256 1 
133 2 274 1 3 1 377 5 159 1 61 2 246 1 160 1 177 1 208 1 106 4 56 5 304 2 77 1 272 1 256 3 
90 1 133 2 274 1 3 1 377 5 159 1 61 2 246 1 160 1 177 1 208 1 106 4 56 5 304 2 272 1 256 3 
133 1 258 1 170 1 21 2 61 1 377 1 246 1 310 1 140 1 106 1 56 1 222 1 11 1 110 1 370 2 304 1 268 1 256 1 
133 2 222 1 1 1 3 1 304 1 334 1 61 1 267 1 377 1 93 1 106 1 256 1 56 1 
128 1 100 1 203 1 268 1 34 1 
284 1 235 1 205 1 197 1 150 1 34 2 8 2 71 1 128 1 38 1 65 1 100 2 118 1 27 1 203 2 268 1 226 1 132 2 53 1 
285 1 21 1 140 1 34 1 128 1 370 1 74 1 203 1 361 1 
284 1 38 1 128 1 
143 1 83 1 29 1 167 1 
212 1 98 1 83 1 139 1 29 1 209 1 167 1 
91 1 182 1 209 1 
374 1 83 1 139 1 292 2 209 3 341 1 98 1 212 3 231 1 101 1 29 1 167 1 
212 2 98 1 83 1 196 1 282 1 139 1 29 1 209 2 167 1 
83 1 139 1 85 1 209 1 98 1 212 1 231 1 359 1 57 1 166 1 233 1 
212 1 98 1 231 1 83 1 139 1 29 1 209 1 
212 1 98 1 231 1 139 1 29 2 209 1 167 1 
212 2 98 2 54 1 231 1 10 1 83 1 252 1 139 2 29 1 209 2 
212 3 98 1 231 1 83 2 215 1 282 2 139 1 85 1 29 1 105 1 351 1 209 3 167 1 
83 1 139 1 209 2 98 1 212 2 231 1 315 1 282 1 188 1 269 1 29 1 57 1 166 2 167 1 233 1 
212 4 98 2 231 1 83 2 215 1 196 1 282 2 139 2 85 1 245 1 29 1 209 4 167 1 
212 1 98 1 231 1 83 1 139 1 29 1 209 1 167 1 
83 3 139 1 292 1 85 1 341 1 209 4 212 4 98 1 86 1 101 1 215 1 282 2 29 2 167 2 
2 1 83 1 331 1 158 1 139 1 209 2 98 1 212 2 231 1 282 1 29 1 167 1 
83 1 139 1 292 2 341 1 209 3 98 1 212 3 231 1 12 1 101 2 29 1 167 1 
83 2 241 1 198 1 325 2 
212 1 98 1 179 1 231 1 139 1 209 1 
212 2 98 1 231 1 83 1 282 1 139 1 29 1 105 1 209 2 167 1 
298 1 
212 1 98 1 231 1 83 1 139 1 29 1 209 1 167 1 
83 1 139 1 292 1 209 3 105 1 98 1 212 3 231 1 282 1 29 1 167 1 
86 1 83 1 215 1 85 1 
83 1 29 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (153,165) (167,224) (167,224) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 152 142 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 200 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (153,165) (153,165) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 257 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (153,165) (167,224) (167,224) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (153,165) (167,224) (167,224) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (153,165) (167,224) (167,224) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 341 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 341 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 152 142 54 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 341 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 3 81 1 119 1 28 2 346 1 111 1 261 2 349 3 205 1 298 1 255 1 301 1 183 2 
222 9 197 1 81 6 149 1 28 5 288 1 5 2 88 1 346 1 131 1 108 1 228 2 111 1 349 9 205 3 298 1 255 4 301 1 183 2 333 1 353 1 302 2 119 2 362 1 237 2 70 1 261 2 318 1 
222 9 197 1 81 6 149 1 28 5 288 1 5 2 88 1 346 1 131 1 108 1 228 2 111 1 349 9 205 3 298 1 255 4 301 1 183 2 333 1 353 1 302 2 119 2 362 1 237 2 70 1 261 2 318 1 
222 10 197 1 81 7 149 1 28 6 288 1 5 2 88 1 346 1 131 1 108 1 228 2 111 1 349 10 205 4 298 1 255 5 301 1 183 2 333 1 353 1 302 2 119 2 362 1 237 2 70 1 261 2 318 1 
222 7 197 1 81 4 149 1 28 4 288 1 5 2 88 1 346 1 131 1 108 1 228 1 111 1 349 7 205 2 298 1 255 3 301 1 183 2 333 1 302 2 119 2 362 1 237 2 70 1 261 2 318 1 
222 4 197 1 302 1 81 3 28 3 237 1 5 1 131 1 228 2 111 1 205 1 261 1 349 4 298 1 255 2 301 1 183 1 353 1 
222 2 161 1 302 1 82 1 149 1 361 1 28 1 119 1 237 1 70 1 111 1 261 1 349 2 298 1 301 1 183 1 
222 9 197 1 81 7 28 5 288 1 5 1 346 1 131 1 228 2 48 1 111 1 205 3 349 9 298 1 255 4 301 1 183 2 353 1 302 1 277 1 119 1 362 1 237 1 261 2 
222 9 197 1 81 7 28 5 288 1 5 1 346 1 131 1 228 2 48 1 111 1 205 3 349 9 298 1 255 4 301 1 183 2 353 1 302 1 277 1 119 1 362 1 237 1 261 2 
210 1 146 1 223 1 26 1 198 1 169 1 309 1 121 1 112 1 124 1 94 1 285 1 275 1 320 1 
359 1 
325 1 121 2 286 1 359 1 329 1 365 1 285 2 275 1 
286 1 106 1 359 1 365 1 177 2 52 1 17 1 121 5 75 2 328 1 141 2 351 1 282 1 284 1 208 1 329 2 285 5 342 1 275 2 
286 1 359 1 283 1 
359 1 120 1 226 2 
309 2 223 2 112 2 117 1 198 2 124 1 94 2 320 2 
80 1 265 1 57 1 223 2 248 1 287 1 198 2 85 1 225 1 327 2 112 3 9 1 94 2 256 2 332 1 164 1 232 1 117 1 235 1 364 1 339 1 213 1 36 1 101 1 240 1 37 1 309 3 191 2 313 2 193 1 368 2 74 1 124 1 20 1 105 1 246 1 320 2 
169 1 309 1 210 1 223 1 26 1 112 1 198 1 124 1 94 1 320 1 
145 1 210 1 286 1 223 1 359 1 83 1 99 1 292 1 309 1 72 1 121 1 112 1 171 1 285 1 
210 1 286 1 223 1 359 1 83 1 198 1 99 1 309 1 72 1 121 2 112 1 171 1 94 1 285 2 320 1 
121 1 329 1 143 1 285 1 275 1 
121 2 286 1 359 1 338 1 329 1 365 1 285 2 275 1 
121 1 329 1 285 1 
223 2 198 1 117 2 260 1 278 1 309 2 112 2 94 1 320 1 
38 1 259 1 267 1 
164 1 287 1 117 1 235 1 225 1 339 1 213 1 101 1 240 1 309 1 191 1 368 1 74 1 112 1 12 1 256 1 
117 1 283 1 
223 1 164 1 287 1 198 1 235 1 225 1 213 1 339 1 101 1 240 1 309 2 191 1 242 1 368 1 38 1 74 1 112 2 94 1 125 1 256 1 
309 3 242 1 223 3 112 3 117 1 198 3 94 3 320 1 
169 1 309 1 210 1 223 1 112 1 198 1 94 1 
309 1 210 1 223 1 112 1 198 1 260 1 278 1 94 1 320 1 
265 1 57 1 223 3 287 1 83 1 198 3 85 1 225 1 327 2 112 4 94 3 256 1 332 1 331 1 114 1 210 1 164 1 117 1 235 1 278 1 99 1 364 1 213 1 339 1 36 1 101 1 240 1 37 1 309 4 191 1 313 1 72 1 193 1 121 1 242 1 368 1 74 1 124 1 171 1 20 1 125 1 105 1 285 1 320 2 
309 2 369 1 223 2 242 1 112 2 117 1 198 1 94 1 292 1 
210 1 223 3 359 1 83 1 198 3 278 1 99 1 309 3 72 1 121 1 242 2 112 3 171 1 94 3 125 1 285 1 320 1 263 1 114 1 
223 2 259 1 198 2 278 1 309 2 242 1 38 1 112 2 94 2 320 1 
164 1 287 1 117 1 235 1 225 1 339 1 213 1 101 1 240 1 309 1 191 1 368 1 74 1 112 1 256 1 
164 1 287 1 117 1 235 1 225 1 339 1 240 1 347 1 309 1 191 1 281 1 368 1 74 1 112 1 256 1 
80 2 57 1 176 1 27 1 267 2 324 1 7 1 327 2 350 1 182 1 332 1 32 1 356 1 259 2 363 1 36 1 37 1 313 4 193 2 38 2 20 1 55 1 105 1 22 1 
309 1 210 1 223 1 83 1 112 1 147 1 198 1 94 1 
223 5 198 4 117 1 278 1 3 1 292 1 309 5 369 1 242 2 112 5 8 1 94 4 125 1 320 1 
169 1 309 2 210 1 223 2 147 1 112 2 198 2 94 2 
40 1 
68 1 122 1 40 2 
40 1 
40 1 
68 1 122 1 
68 1 122 1 
68 1 122 1 
40 1 
40 1 
40 1 
40 1 
40 1 
40 1 
134 2 359 1 224 1 44 2 345 1 167 1 102 2 348 2 153 1 121 2 53 2 132 1 285 2 245 1 40 2 
15 1 134 1 223 1 58 1 198 1 345 1 44 1 152 1 102 1 348 1 309 1 121 1 53 1 112 1 62 1 142 1 94 1 285 1 40 1 
310 2 302 2 82 1 216 1 5 1 
302 1 237 1 5 1 
302 1 82 1 237 1 
310 1 96 1 302 3 82 1 216 1 5 2 
310 1 302 2 82 1 216 1 187 1 5 1 
286 1 58 1 148 2 4 1 226 3 177 1 324 1 179 1 62 1 160 1 351 2 329 1 275 4 32 1 15 1 276 2 356 1 115 1 359 2 120 1 365 1 16 1 52 1 168 1 17 3 71 2 121 5 75 1 141 1 55 1 285 5 196 1 
286 1 58 4 343 1 148 6 151 1 107 1 226 9 128 5 177 2 324 3 160 2 351 6 329 6 275 7 33 1 32 3 356 3 359 5 120 3 239 1 365 1 16 2 52 1 168 1 17 8 71 6 121 9 75 2 140 1 141 2 55 3 284 1 143 5 285 9 196 3 
286 1 58 1 148 2 177 1 226 4 324 1 179 1 160 1 351 2 275 2 32 1 276 1 356 1 115 1 359 3 120 2 16 1 17 3 71 2 121 3 75 1 141 1 55 1 284 1 285 3 196 1 
286 1 58 2 148 4 151 1 226 7 177 1 324 2 179 1 160 1 351 4 275 3 33 1 32 2 276 2 356 2 115 1 359 4 120 3 16 1 17 5 71 4 121 4 75 1 140 1 141 1 55 2 284 1 285 4 196 2 
300 1 
164 1 299 1 283 1 
60 1 164 1 
164 1 240 1 
164 3 225 1 299 2 371 1 129 1 240 1 
164 1 225 1 240 1 
164 1 290 1 
356 1 80 4 303 1 336 1 27 2 43 1 306 1 308 1 7 3 19 1 313 7 193 3 194 1 123 2 172 1 64 1 39 1 32 1 
80 16 57 1 43 1 27 5 199 1 269 1 324 3 7 10 327 2 63 1 64 1 332 1 65 3 32 4 334 4 356 4 303 2 34 1 336 5 337 1 306 1 308 1 36 1 366 1 37 1 313 31 19 2 280 1 193 15 194 2 123 3 55 3 39 2 196 3 
80 5 57 2 27 3 43 1 87 1 7 4 327 4 64 1 332 2 32 1 356 1 303 1 336 1 308 1 36 2 37 2 313 9 19 1 280 1 193 4 194 1 123 2 77 1 39 1 
356 1 80 4 303 1 336 1 27 2 43 1 306 1 308 1 7 3 19 1 313 7 193 3 194 1 123 2 64 1 39 1 32 1 
356 1 80 4 303 1 336 1 27 2 43 1 306 1 308 1 7 3 19 1 313 7 193 3 194 1 123 2 64 1 39 1 32 1 
222 1 25 2 164 1 126 1 287 1 235 1 119 2 339 1 240 1 178 1 191 1 18 2 368 1 244 1 261 1 349 1 253 1 92 1 10 1 256 1 183 1 173 1 231 2 
222 1 264 1 96 1 302 2 25 1 82 1 287 1 186 1 235 1 250 1 119 1 237 1 5 1 241 1 191 1 18 1 155 1 368 1 314 1 261 1 349 1 298 1 93 1 256 1 183 1 231 1 
222 2 264 1 81 1 25 1 82 1 287 1 250 1 28 1 5 1 155 1 111 1 349 2 298 1 301 1 256 1 183 1 231 1 357 1 302 2 96 1 186 1 235 1 119 1 237 1 191 1 241 1 18 1 368 1 314 1 261 1 
222 3 264 1 25 1 81 2 82 1 287 1 86 1 250 1 28 1 5 1 178 1 111 1 349 3 93 1 301 1 256 1 183 1 231 1 96 1 302 2 186 1 235 1 119 1 237 1 191 1 241 1 18 1 368 1 314 1 261 1 
222 2 264 1 25 1 81 2 82 1 287 1 86 1 28 1 5 1 111 1 349 2 93 1 301 1 256 1 231 1 302 2 96 1 186 1 235 1 119 1 237 1 191 1 241 1 18 1 368 1 
247 1 
223 1 126 1 83 1 0 1 42 4 226 2 177 1 268 2 272 2 273 1 92 1 230 1 329 6 14 2 135 1 235 1 99 1 339 2 16 1 52 1 240 1 17 2 191 2 141 1 195 1 285 5 145 1 286 1 287 1 249 1 344 1 292 1 203 2 294 1 156 1 112 1 351 2 207 1 256 2 352 1 210 1 359 2 164 1 360 2 120 2 214 2 365 3 309 1 72 1 121 5 368 2 170 2 75 1 315 1 171 1 
145 1 223 1 83 1 0 1 42 2 249 1 292 1 325 1 156 1 112 1 207 1 329 2 210 1 99 1 214 1 365 1 309 1 72 1 121 3 315 1 171 1 285 3 
145 1 223 1 286 1 83 1 0 1 42 3 249 1 292 1 325 1 156 1 112 1 207 1 329 1 210 1 359 1 99 1 365 1 309 1 72 1 121 3 170 1 315 1 171 1 285 3 
145 1 223 1 286 1 83 1 0 1 42 3 249 1 292 1 325 1 156 1 112 1 207 1 329 2 14 1 210 1 359 1 99 1 365 1 214 1 309 1 72 1 121 3 170 1 315 1 171 1 285 3 
223 1 83 1 42 6 0 1 177 1 268 2 325 1 272 2 230 1 329 7 14 4 233 1 99 1 238 1 52 1 17 1 141 1 285 5 145 1 286 5 249 1 344 1 292 1 203 2 157 1 156 1 112 1 207 1 351 1 210 1 258 1 359 5 360 2 120 2 214 4 365 3 309 1 72 1 121 5 170 4 75 1 315 1 171 1 262 1 
223 1 83 1 42 4 0 1 177 1 226 2 268 2 272 2 230 1 329 4 14 2 99 1 52 1 17 1 141 1 285 4 145 1 286 1 344 1 249 1 292 1 203 2 294 1 156 1 112 1 207 1 351 1 210 1 359 2 360 2 120 2 365 2 214 2 309 1 72 1 121 4 170 2 75 1 315 1 171 1 
145 1 286 1 223 1 83 1 0 1 42 4 344 1 249 1 177 1 268 2 292 1 203 2 272 2 156 1 112 1 351 1 207 1 230 1 329 4 14 2 210 1 359 1 360 2 233 1 120 2 238 1 99 1 214 2 365 2 52 1 17 1 309 1 72 1 121 4 170 2 75 1 315 1 171 1 141 1 262 1 285 4 
145 1 286 1 223 1 83 1 0 1 42 4 344 1 249 1 177 1 268 2 292 1 203 2 272 2 156 1 112 1 351 1 207 1 230 1 329 4 14 2 210 1 359 1 360 2 233 1 120 2 238 1 99 1 214 2 365 2 52 1 17 1 309 1 72 1 121 4 170 2 75 1 315 1 171 1 141 1 262 1 285 4 
145 1 210 1 223 1 83 1 42 2 0 1 249 1 99 1 200 1 292 1 309 1 72 1 121 2 156 1 112 1 315 1 171 1 207 1 285 2 
145 1 286 1 223 1 83 1 0 1 42 5 344 1 249 1 177 1 268 2 292 1 203 2 272 2 156 1 112 1 351 1 207 1 230 1 329 5 14 3 210 1 258 1 359 1 360 2 233 1 120 2 238 1 99 1 365 2 214 3 52 1 17 1 309 1 72 1 121 4 170 3 75 1 315 1 171 1 141 1 262 1 285 4 
145 1 286 1 223 1 83 1 0 1 42 5 344 1 249 1 177 1 268 2 292 1 203 2 272 2 156 1 112 1 351 1 207 1 230 1 329 5 14 3 210 1 258 1 359 1 360 2 233 1 120 2 238 1 99 1 365 2 214 3 52 1 17 1 309 1 72 1 121 4 170 3 75 1 315 1 171 1 141 1 262 1 285 4 
223 1 83 1 42 4 0 1 177 1 226 2 268 2 326 1 11 2 230 1 329 4 14 2 99 1 52 1 17 1 141 1 285 4 145 1 286 1 249 1 292 1 294 1 156 1 112 1 207 1 351 1 66 2 210 1 359 1 360 2 365 2 214 2 309 1 72 1 121 4 170 2 75 1 315 1 171 1 
80 1 57 2 223 1 126 1 287 2 198 1 291 1 61 1 327 4 112 1 350 1 93 1 9 1 92 1 94 1 256 8 332 2 69 1 357 1 164 3 232 2 305 1 235 2 339 2 364 1 36 2 240 2 279 1 309 1 191 8 37 2 313 2 193 1 139 1 242 1 368 7 20 2 370 1 105 2 
80 1 57 1 223 1 27 1 198 1 267 1 324 1 7 1 327 2 112 1 180 1 94 1 332 1 32 1 356 1 97 1 259 1 278 1 36 1 37 1 309 1 313 3 193 2 38 1 20 1 55 1 105 1 196 1 320 1 
80 3 57 1 43 1 27 2 267 1 7 2 327 2 350 1 64 1 332 1 32 1 356 1 303 1 259 1 117 2 308 1 36 1 37 1 313 6 193 3 38 1 123 1 20 1 283 1 105 1 39 1 
80 8 57 2 41 1 27 1 199 1 1 1 267 11 269 1 324 2 7 2 327 4 9 1 113 1 332 2 65 3 32 1 334 3 356 2 97 1 336 1 117 1 259 4 118 1 364 1 36 2 37 2 313 14 193 6 38 11 20 2 55 1 105 1 196 2 
80 1 57 1 223 1 287 1 198 1 84 1 225 1 293 1 327 2 110 1 112 2 9 1 94 1 256 1 12 1 332 1 97 1 164 1 117 1 259 1 235 1 213 1 339 1 364 1 101 1 36 1 240 1 191 1 309 2 37 1 313 2 193 1 368 1 242 1 74 1 20 1 125 1 105 1 
80 10 223 1 43 1 85 2 225 2 267 7 324 2 7 8 327 6 93 1 9 1 94 1 332 3 49 1 97 1 336 4 235 2 339 1 101 2 240 2 191 3 193 10 103 2 242 1 20 3 55 2 105 3 196 2 57 3 287 2 27 4 198 1 201 1 252 1 204 2 112 3 256 3 64 1 31 2 32 3 356 3 303 1 164 2 117 2 259 7 364 1 213 2 308 1 36 3 37 3 309 3 313 20 368 3 74 2 38 7 123 1 217 2 125 1 39 1 
356 1 80 2 57 1 336 1 259 1 267 1 36 1 37 1 324 1 7 1 313 2 38 1 327 2 350 1 20 1 105 1 332 1 22 1 
57 1 27 1 259 1 176 1 267 1 36 1 37 1 7 1 313 2 193 2 38 1 327 2 350 1 20 1 55 1 105 1 332 1 32 1 
80 2 57 1 27 1 267 2 324 1 7 2 327 2 350 1 332 1 32 1 356 1 336 1 259 2 36 1 37 1 313 4 193 2 38 2 20 1 55 1 105 1 196 1 
356 1 80 2 57 1 336 1 259 1 267 1 36 1 37 1 324 1 7 1 313 2 38 1 327 2 20 1 370 1 105 1 332 1 22 1 
57 1 27 1 259 1 176 1 267 1 36 1 37 1 7 1 313 2 193 2 38 1 327 2 20 1 55 1 370 1 105 1 332 1 32 1 
80 2 57 1 27 1 267 2 324 1 7 2 327 2 332 1 32 1 356 1 336 1 259 2 36 1 37 1 313 4 193 2 38 2 20 1 55 1 370 1 105 1 196 1 
80 2 57 1 27 1 267 2 324 1 7 2 327 2 332 1 32 1 356 1 336 1 259 2 36 1 37 1 313 4 193 2 38 2 20 1 55 1 105 1 196 1 
80 1 57 1 287 1 85 1 225 1 327 2 112 1 9 1 256 1 332 1 164 1 117 1 235 1 213 1 339 1 364 1 101 1 36 1 240 1 191 1 309 1 37 1 313 2 193 1 368 1 74 1 20 1 105 1 
80 1 57 1 287 1 225 1 270 1 347 1 327 2 112 1 9 1 256 1 332 1 164 1 117 1 235 1 339 1 364 1 36 1 240 1 191 1 309 1 37 1 313 2 281 1 193 1 368 1 74 1 20 1 105 1 
80 2 57 1 27 1 267 2 324 1 7 2 327 2 332 1 32 1 356 1 97 1 336 1 259 2 36 1 37 1 313 4 193 2 38 2 20 1 55 1 105 1 196 1 
80 2 57 1 287 1 27 1 85 1 225 1 267 2 324 1 7 2 204 1 327 2 112 1 256 1 332 1 32 1 356 1 357 1 164 1 336 1 259 2 235 1 213 1 101 1 36 1 240 1 191 1 309 1 37 1 313 4 193 2 368 1 38 2 74 1 20 1 55 1 105 1 196 1 
80 2 57 1 223 1 198 1 267 1 324 1 7 1 47 1 327 2 112 1 94 1 332 1 32 1 356 1 97 1 336 1 259 1 278 1 36 1 37 1 309 1 313 3 193 1 38 1 20 1 55 1 105 1 196 1 320 1 
80 9 57 2 27 3 199 1 59 1 2 2 269 1 324 3 7 6 271 1 327 4 330 2 332 2 65 1 32 3 354 1 334 2 356 3 335 1 336 3 36 2 138 1 37 2 311 1 313 19 193 10 316 1 55 3 77 1 196 3 
80 14 57 3 27 2 199 2 2 1 59 1 45 1 29 1 6 1 324 3 7 4 46 1 271 1 327 6 330 4 332 3 65 2 32 2 354 2 334 2 356 3 335 1 336 2 36 3 138 2 37 3 280 2 313 26 193 12 76 1 55 2 77 1 78 1 196 3 
80 20 43 1 2 1 45 1 6 1 269 1 324 4 7 8 46 1 271 1 89 1 327 6 330 4 332 3 334 4 335 1 336 4 138 2 280 1 193 21 55 4 196 4 57 3 27 4 199 3 59 1 29 1 64 1 65 3 32 5 354 1 356 5 303 1 308 1 36 3 37 3 313 41 123 1 316 1 76 1 77 1 78 1 39 1 
80 20 57 4 43 1 27 4 199 3 2 1 59 1 45 1 29 1 6 1 269 1 324 4 46 1 7 7 89 1 271 1 327 8 64 1 330 4 332 4 65 3 32 4 354 1 334 4 356 5 303 1 335 1 336 3 308 1 36 4 138 2 37 4 280 2 313 38 193 18 316 1 123 1 76 1 55 3 77 1 39 1 78 1 196 4 
80 27 57 2 41 2 43 1 27 7 199 2 2 1 59 1 45 1 29 1 6 1 269 2 324 7 46 1 7 14 271 1 327 4 64 1 330 4 332 2 65 4 32 8 354 1 334 4 356 8 303 1 335 1 336 7 308 1 36 2 138 1 37 2 280 1 313 52 193 25 123 1 76 1 55 7 77 1 39 1 78 1 196 7 
153 1 134 1 53 1 165 1 44 1 40 1 348 1 
152 1 
134 1 53 1 44 1 257 1 40 1 348 1 
134 1 359 1 224 1 345 1 44 1 167 1 102 2 348 1 153 1 121 1 53 1 132 1 285 1 245 1 40 1 
134 1 359 1 224 1 345 1 44 1 167 1 102 2 348 1 153 1 121 1 53 1 132 1 285 1 245 1 40 1 
134 1 359 1 224 1 345 1 44 1 167 1 102 2 348 1 153 1 121 1 53 1 132 1 285 1 245 1 40 1 
341 1 
341 1 
236 1 
236 1 
24 1 100 1 
15 1 134 1 58 1 44 1 152 1 102 1 348 1 121 1 53 1 132 1 62 1 54 1 142 1 285 1 245 1 275 1 40 1 
341 1 
236 1 
174 1 80 1 57 1 223 2 287 1 296 1 327 2 112 2 9 1 159 1 256 2 95 1 332 1 69 1 97 1 164 1 232 2 235 1 166 1 364 1 36 1 240 1 279 1 191 2 309 2 37 1 313 2 193 1 368 2 20 1 105 1 
164 1 126 1 287 1 212 1 235 1 339 1 240 1 191 1 368 1 92 1 256 1 50 1 231 1 173 1 
264 1 96 1 302 2 82 1 287 1 186 1 235 1 237 1 51 1 5 1 191 1 368 1 109 1 314 1 93 1 256 1 50 1 231 1 
264 1 96 1 302 2 357 1 82 1 287 1 186 1 235 1 237 1 51 1 5 1 191 2 368 2 109 1 314 1 93 1 256 2 50 1 231 1 
264 1 96 1 302 2 82 1 186 1 287 1 235 1 237 1 51 1 5 1 191 1 368 1 314 1 91 1 93 1 256 1 231 1 
185 1 
286 1 359 1 177 1 52 1 17 1 75 1 328 1 141 1 282 1 351 1 
356 2 359 5 148 5 120 5 226 10 190 2 324 2 17 5 71 5 103 1 351 5 55 2 196 2 144 1 32 2 
121 1 286 1 359 1 329 1 365 1 285 1 
126 1 287 1 150 1 177 2 273 2 92 1 351 2 256 4 329 4 352 1 162 2 164 1 135 1 98 1 235 1 307 1 339 2 16 2 365 2 52 1 240 1 191 4 17 2 121 3 368 4 75 2 141 2 284 1 285 3 
17 1 286 1 359 1 328 1 351 1 282 1 283 1 
286 1 359 2 344 1 120 1 365 1 226 1 177 1 52 1 203 1 17 1 121 1 272 1 75 1 141 1 351 1 329 1 285 1 
225 3 266 2 177 4 226 12 324 2 273 1 328 1 329 5 184 2 235 3 339 1 16 2 190 2 52 4 240 3 340 2 17 9 191 3 103 2 141 4 282 1 55 2 104 1 285 5 196 2 144 2 286 2 287 4 148 6 150 1 290 2 202 1 251 1 60 3 297 2 299 2 351 8 256 3 67 2 32 2 162 1 356 2 357 1 164 10 359 8 120 6 365 3 71 6 121 5 215 2 368 3 75 4 171 2 371 1 
286 2 148 5 199 1 45 1 226 6 177 2 6 1 324 2 295 1 46 1 273 1 351 5 329 1 65 1 32 2 334 1 356 2 163 1 359 5 120 3 16 1 365 1 190 2 52 2 17 8 71 5 121 1 75 2 141 2 76 1 55 2 78 1 285 1 196 2 144 1 
146 1 223 1 26 1 198 1 177 1 112 1 94 1 351 2 64 1 32 1 356 2 210 1 303 1 233 1 136 1 190 2 52 1 169 1 309 1 17 2 121 1 75 1 124 1 141 1 39 1 285 1 144 1 320 1 
265 1 57 1 223 2 287 1 198 2 85 1 225 1 327 2 112 3 94 2 256 1 332 1 164 1 117 1 235 1 364 1 339 1 213 1 36 1 101 1 240 1 37 1 191 1 309 3 313 1 193 1 368 1 74 1 124 1 20 1 105 1 320 2 
286 2 359 4 148 2 120 2 226 4 177 1 16 1 52 1 17 1 71 2 273 1 75 1 123 1 141 1 351 2 
134 1 24 1 243 1 53 1 13 1 
355 1 134 1 53 1 
355 1 134 1 53 1 
355 1 134 1 53 1 
134 1 53 1 321 1 
134 1 53 1 321 1 
134 1 53 1 321 1 
134 1 53 1 
40 1 
80 5 356 2 57 1 303 2 336 2 27 3 136 1 36 1 37 1 7 5 313 10 193 5 327 2 77 1 64 1 332 1 39 2 32 2 
356 1 80 2 57 1 336 1 36 1 37 1 324 1 313 2 7 1 327 2 77 1 332 1 
356 1 80 2 57 1 336 1 27 1 36 1 37 1 324 1 7 2 313 4 193 2 327 2 55 1 77 1 332 1 196 1 32 1 
80 1 57 3 303 1 336 1 27 1 36 3 37 3 280 1 313 3 7 2 193 2 327 6 316 1 254 1 77 1 332 3 39 1 
80 16 57 5 43 1 27 7 199 1 269 1 324 3 7 12 327 10 254 1 63 1 64 2 332 5 65 3 32 5 334 4 356 5 303 3 336 5 337 1 308 1 36 5 366 1 37 5 280 2 313 34 193 18 123 1 316 1 21 1 55 3 77 1 39 3 196 3 
80 4 57 1 43 1 27 2 199 1 6 1 7 2 327 2 64 1 332 1 65 1 32 1 356 1 334 1 303 1 308 1 36 1 37 1 313 8 193 4 123 1 77 1 39 1 
80 6 57 2 27 2 43 1 199 1 6 1 269 1 324 1 7 3 327 4 64 1 332 2 65 1 32 1 334 2 356 2 303 1 336 1 308 1 36 2 37 2 313 11 193 5 123 1 21 1 77 1 39 1 196 1 
80 9 57 3 43 1 27 3 199 1 45 1 6 1 324 2 46 1 7 4 327 6 64 1 332 3 65 1 32 3 334 1 356 3 303 1 336 1 308 1 36 3 37 3 313 19 280 1 193 10 123 1 76 1 21 1 55 2 77 1 39 1 78 1 196 2 
80 10 57 3 43 1 27 3 199 1 45 1 6 1 324 2 46 1 7 5 327 6 64 1 332 3 65 1 32 2 334 1 356 3 303 1 336 2 308 1 36 3 37 3 280 1 313 17 193 7 123 1 76 1 21 1 55 1 77 1 39 1 78 1 196 2 
80 4 57 1 43 1 27 2 199 1 6 1 7 2 327 2 64 1 332 1 65 1 32 1 356 1 334 1 303 1 308 1 36 1 37 1 313 8 193 4 123 1 77 1 39 1 
356 2 80 6 334 1 57 1 336 1 27 1 199 1 45 1 36 1 6 1 324 2 37 1 7 2 46 1 313 12 193 6 327 2 76 1 55 2 77 1 78 1 332 1 196 2 65 1 32 2 
80 10 57 4 43 1 27 3 199 1 45 1 6 1 324 2 46 1 7 5 327 8 64 1 332 4 65 1 32 2 334 1 356 3 303 1 336 2 308 1 36 4 37 4 313 18 280 2 193 8 123 1 76 1 21 1 55 1 77 1 39 1 78 1 196 2 
80 9 57 4 27 3 199 1 45 1 6 1 324 3 46 1 7 6 327 8 332 4 65 1 32 2 334 1 356 3 336 3 36 4 37 4 313 16 280 2 193 7 316 1 76 1 55 2 77 1 78 1 196 3 
356 1 80 3 303 3 336 3 43 1 27 3 308 2 313 7 7 6 193 4 64 1 39 3 32 1 
80 10 57 4 43 1 27 3 199 1 45 1 6 1 324 2 46 1 7 4 327 8 64 1 332 4 65 1 32 2 334 1 356 3 303 1 336 1 308 1 36 4 37 4 313 18 280 2 193 8 123 1 316 1 76 1 55 1 77 1 39 1 78 1 196 2 
356 1 80 4 57 2 303 1 336 1 27 2 43 1 308 1 36 2 37 2 313 8 7 3 280 1 193 4 327 4 123 1 64 1 332 2 39 1 32 1 
356 1 80 3 303 1 43 1 27 2 308 1 7 2 313 6 193 3 123 1 283 1 64 1 39 1 32 1 
356 1 80 2 57 1 336 1 27 1 36 1 37 1 324 1 7 2 313 4 193 2 327 2 55 1 21 1 332 1 196 1 32 1 
334 2 80 3 356 1 336 1 27 1 199 1 269 1 324 1 313 7 7 2 193 4 55 1 65 1 196 1 32 1 
80 11 57 2 41 1 43 1 27 5 1 1 269 1 324 2 7 9 327 4 254 1 64 1 332 2 65 2 32 3 356 3 334 2 303 2 336 4 308 1 36 2 37 2 313 23 280 2 193 12 123 1 55 2 39 2 196 2 
313 1 334 1 193 1 
313 1 80 1 65 1 
356 1 80 3 57 1 336 1 27 2 36 1 37 1 324 1 313 6 7 3 103 1 193 3 327 2 21 1 55 1 332 1 196 1 32 1 
356 2 80 6 334 1 57 1 336 1 27 1 199 1 45 1 36 1 6 1 324 2 37 1 7 2 46 1 313 12 193 6 327 2 76 1 55 2 77 1 78 1 332 1 196 2 65 1 32 2 
356 1 80 3 303 1 336 1 27 1 313 6 7 2 193 3 64 1 39 1 32 1 
80 1 57 1 303 1 336 1 27 1 43 1 308 1 36 1 37 1 7 2 313 3 280 1 193 2 327 2 254 1 39 1 332 1 
309 1 223 1 369 1 112 1 117 1 133 1 292 1 
23 1 79 1 223 1 117 1 289 1 292 1 309 1 369 1 112 1 218 1 209 1 133 1 
191 4 357 1 368 4 164 1 126 1 287 1 235 1 92 1 189 1 256 4 339 1 240 1 227 1 
162 1 164 1 287 2 235 1 225 1 240 1 252 1 191 2 368 2 73 1 158 1 256 2 319 1 220 1 
191 1 264 1 302 1 82 1 368 1 287 1 235 1 237 1 256 1 339 1 
191 2 69 1 296 1 357 1 368 2 164 1 287 1 235 1 93 1 256 2 240 1 
162 1 357 1 69 1 126 1 164 3 287 2 305 1 235 2 189 1 339 1 240 2 191 5 61 1 368 4 92 1 256 5 
162 1 357 1 69 1 126 1 164 3 304 1 287 2 305 1 235 2 189 1 339 1 240 2 191 5 368 4 92 1 256 5 
191 1 368 1 164 1 126 1 287 1 235 1 92 1 283 1 256 1 339 1 240 1 
223 1 164 1 287 1 117 1 198 1 235 1 225 1 339 1 213 1 240 1 309 2 191 1 242 1 368 1 74 1 112 2 94 1 256 1 
223 2 287 1 83 1 198 2 225 2 290 1 112 2 94 1 256 1 67 1 162 1 210 1 164 3 117 1 235 1 99 1 213 1 240 2 191 1 309 2 368 1 242 1 74 1 
223 2 287 1 83 1 198 2 225 2 290 1 227 1 112 2 94 1 256 2 67 1 162 1 210 1 164 3 117 1 235 1 99 1 240 2 191 2 309 2 281 1 368 2 242 1 74 1 
162 1 286 1 359 1 164 4 287 1 235 1 225 1 290 1 339 1 240 1 227 1 191 3 60 1 367 1 121 2 368 3 171 1 181 1 299 1 256 3 329 1 285 2 67 1 
162 1 286 1 359 1 164 4 287 1 235 1 225 1 290 1 266 1 339 1 240 1 227 1 191 3 60 1 121 2 368 3 171 1 299 1 256 3 329 1 285 2 67 1 
191 1 368 1 287 1 235 1 256 1 291 1 
69 1 357 1 232 1 164 3 287 3 305 1 127 1 235 2 225 1 291 1 339 2 240 2 61 1 191 7 139 1 368 6 93 1 158 1 256 7 371 1 319 1 
80 3 223 1 43 1 85 1 225 1 267 1 7 2 327 4 94 1 95 1 332 2 97 1 235 1 101 1 240 1 191 1 193 3 242 1 20 2 105 2 57 2 287 1 198 1 27 2 204 1 112 2 256 1 64 1 32 1 356 1 357 1 303 1 164 1 259 1 117 2 213 1 308 1 36 2 37 2 309 2 313 6 368 1 74 1 38 1 123 1 217 1 39 1 
286 1 150 1 266 1 177 2 60 1 297 1 328 1 351 1 299 1 256 1 329 2 275 1 184 1 359 1 164 2 339 1 365 1 52 2 340 1 17 1 191 1 121 3 368 1 75 2 171 1 141 2 282 1 285 3 
191 2 357 1 368 2 164 2 287 2 235 1 225 1 299 1 371 1 104 1 256 2 291 1 240 1 
223 1 164 1 287 1 117 1 198 1 235 1 225 1 339 1 240 1 309 2 191 1 281 1 242 1 368 1 74 1 112 2 94 1 256 1 
162 1 164 1 287 2 127 1 235 1 225 1 240 1 191 1 368 1 158 1 256 1 371 1 319 1 
174 1 223 1 358 1 116 1 166 1 309 1 112 1 159 1 274 1 
234 1 274 1 137 1 
30 1 358 1 116 1 117 1 274 1 
210 1 286 1 359 1 358 2 83 1 116 2 117 1 234 1 188 1 99 1 137 1 30 2 72 1 121 2 171 1 274 1 285 2 275 1 114 1 
222 1 111 1 349 1 261 1 298 1 28 1 301 1 183 1 
222 4 175 1 211 1 81 2 149 1 28 3 111 2 349 4 261 1 205 1 255 1 301 2 317 1 183 1 
222 2 81 1 35 1 28 1 48 1 261 1 349 2 111 1 298 1 301 1 56 1 183 1 
222 3 211 1 175 2 149 2 28 1 323 1 261 1 349 3 111 1 298 1 301 1 183 1 
154 1 28 2 219 2 221 1 
222 1 349 1 261 1 298 1 206 1 183 1 
222 2 81 1 111 1 349 2 261 1 298 1 28 1 362 1 301 1 183 1 
90 1 
222 1 111 1 349 1 261 1 298 1 28 1 301 1 183 1 
111 1 28 1 301 1 283 1 
222 1 111 1 349 1 261 1 28 1 301 1 183 1 
25 1 349 1 119 1 
222 3 211 1 175 1 149 2 28 1 312 1 261 1 349 3 111 1 298 1 301 1 183 1 
228 1 222 2 81 1 111 1 349 2 261 1 28 1 301 1 183 1 
222 1 302 1 349 1 261 1 298 1 28 1 255 1 237 1 5 1 183 1 131 1 
222 1 349 1 261 1 298 1 28 1 301 1 183 1 
222 1 111 1 349 1 261 1 298 1 301 2 183 1 
222 2 28 1 130 1 192 1 261 2 349 2 298 1 229 1 301 1 183 2 
222 3 81 2 288 1 362 1 28 2 111 1 261 1 349 3 205 1 298 1 255 1 301 1 183 1 
222 2 302 2 96 1 81 1 82 1 28 1 237 1 5 1 322 1 111 1 261 1 349 2 298 1 301 1 183 1 
222 4 81 2 28 2 228 1 111 1 261 2 349 4 205 1 298 1 255 1 301 1 183 2 353 1 
222 3 81 1 111 1 349 3 261 1 298 1 149 1 362 1 28 1 301 1 183 1 
205 1 28 1 255 1 317 1 
28 1 301 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
247 1 29 1 87 2 60 5 374 1 222 1 8 1 275 1 335 1 163 6 137 1 105 9 376 2 102 2 10 3 141 2 165 1 209 1 227 4 321 1 171 1 170 1 343 2 21 2 177 1 124 1 288 2 53 9 
247 1 29 1 87 2 60 5 374 1 222 1 8 1 275 1 335 1 163 6 137 1 105 9 376 2 102 2 10 3 141 2 165 1 209 1 227 4 321 1 171 1 170 1 343 2 21 2 177 1 124 1 288 2 53 9 
247 1 29 1 87 2 60 6 374 1 222 1 8 1 275 1 335 1 163 7 137 1 105 10 376 2 102 2 10 4 141 2 165 1 209 1 227 5 321 1 171 1 170 1 343 2 21 2 177 1 124 1 288 2 53 10 
247 1 29 1 87 2 60 4 374 1 222 1 8 1 275 1 335 1 163 4 137 1 105 7 376 2 102 2 10 2 141 2 165 1 209 1 227 3 321 1 170 1 343 1 21 2 177 1 124 1 288 2 53 7 
227 2 29 1 60 3 171 1 343 2 21 1 335 1 163 3 177 1 124 1 10 1 102 1 376 1 105 4 288 1 165 1 141 1 53 4 
247 1 29 1 113 1 87 1 60 1 21 1 273 1 8 1 205 1 124 1 105 2 376 1 102 1 165 1 141 1 53 2 
227 1 29 1 87 1 60 2 170 1 21 2 163 1 124 1 105 3 10 1 165 1 141 2 53 3 
209 1 227 4 29 1 87 1 60 5 62 1 171 1 170 1 343 2 21 2 275 1 335 1 163 7 177 1 196 1 124 1 102 1 376 1 288 1 105 9 10 3 165 1 141 2 53 9 
209 1 227 4 29 1 87 1 60 5 62 1 171 1 170 1 343 2 21 2 275 1 335 1 163 7 177 1 196 1 124 1 102 1 376 1 288 1 105 9 10 3 165 1 141 2 53 9 
203 1 287 1 158 1 
203 1 136 2 76 1 
311 2 216 2 365 2 17 1 74 1 200 2 320 2 291 2 
56 1 31 2 311 3 92 1 201 1 200 3 373 1 202 1 291 2 159 1 221 2 184 1 354 1 204 1 276 1 37 1 278 1 9 1 104 1 320 2 139 2 143 1 17 1 230 1 74 1 358 1 172 2 174 1 235 1 237 1 195 2 23 1 216 2 365 2 152 1 49 1 328 1 
7 1 311 1 216 1 36 1 365 1 74 1 200 1 320 1 291 1 234 1 
1 1 311 1 200 1 147 1 133 1 203 1 7 1 365 1 257 1 287 1 84 1 279 1 198 1 266 1 
1 1 311 1 200 1 291 1 133 2 203 1 7 1 216 1 365 1 257 2 287 1 320 1 84 1 279 1 198 1 
123 1 257 1 127 1 51 1 133 1 
203 1 131 1 312 1 123 1 257 2 287 1 51 1 133 2 
123 1 257 1 133 1 
311 1 74 1 200 1 234 1 291 1 133 1 7 1 151 1 216 1 36 1 365 1 257 1 320 1 51 1 
203 1 
203 1 312 1 123 1 257 2 287 1 95 1 51 1 133 2 
111 2 312 1 190 1 181 1 32 1 43 1 146 1 45 2 133 5 203 1 47 2 48 1 160 1 257 5 326 1 123 2 287 1 51 2 346 1 
17 1 158 1 
54 1 311 2 93 1 17 2 200 2 291 1 216 1 365 2 320 1 
13 1 228 1 243 1 
56 1 31 1 311 1 17 1 230 1 200 1 202 1 212 1 235 1 195 1 204 1 23 1 49 1 278 1 139 1 328 1 
56 1 31 1 311 2 230 1 200 2 202 1 291 1 235 1 195 1 204 1 99 1 23 1 216 1 365 1 243 1 278 1 49 1 309 1 139 1 328 1 
99 1 311 3 216 3 365 3 17 1 320 1 200 3 291 3 
7 1 311 1 216 1 36 1 365 1 200 1 291 1 
54 1 7 1 311 1 216 1 365 1 93 1 200 1 320 1 291 1 
56 1 1 1 31 1 311 4 92 1 93 1 201 1 373 1 200 4 202 1 291 3 159 1 65 1 133 1 221 2 7 1 184 1 354 1 204 1 276 1 99 1 257 1 278 1 104 1 320 2 139 1 279 1 17 1 230 1 74 1 358 1 172 1 235 1 237 1 195 1 363 1 23 1 216 3 365 3 49 1 309 1 84 1 198 1 328 1 
220 1 311 2 99 1 216 1 365 2 17 1 200 2 147 1 291 1 
1 1 311 3 93 1 200 3 291 3 133 1 65 1 203 1 7 1 285 1 99 2 216 3 365 3 257 1 320 1 309 1 84 1 279 1 198 1 
311 2 13 1 93 1 200 2 291 2 99 1 216 2 365 2 243 1 320 1 
56 1 31 1 311 1 17 1 230 1 200 1 202 1 235 1 195 1 204 1 23 1 49 1 278 1 139 1 328 1 
56 1 112 1 31 1 311 1 17 1 230 1 200 1 235 1 195 1 204 1 49 1 278 1 139 1 355 1 328 1 
347 1 92 1 201 1 159 1 221 2 274 1 295 1 276 2 35 1 104 1 110 1 143 2 13 2 228 2 14 1 358 1 145 1 172 4 237 1 178 1 243 2 327 1 86 1 245 1 
1 1 311 1 281 1 200 1 291 1 7 1 216 1 365 1 
220 1 368 1 311 5 369 1 93 1 17 1 200 5 147 1 291 4 99 2 216 4 365 5 320 1 309 1 
7 1 311 2 281 1 216 2 36 1 365 2 200 2 291 2 
40 1 140 1 
40 1 140 1 
356 1 125 1 
356 1 125 1 
356 1 125 1 
40 1 298 1 140 1 
40 1 298 1 140 1 
40 1 267 1 140 1 
155 1 356 1 82 1 40 2 125 1 140 2 
40 1 298 1 140 1 
40 1 2 1 140 1 
40 1 2 1 140 1 
40 1 2 1 140 1 
329 1 155 1 348 2 40 2 144 2 115 3 94 1 191 2 117 1 233 1 64 2 119 1 133 2 203 1 308 2 255 1 257 2 217 1 140 2 
348 1 311 2 89 1 248 1 350 1 200 2 291 2 133 1 257 1 140 1 40 1 144 1 17 1 115 1 232 1 191 1 117 1 75 1 175 1 308 1 216 2 365 2 263 1 267 1 
102 1 376 1 288 1 
273 1 102 1 376 1 
134 1 273 1 3 1 288 2 376 3 283 1 
273 1 340 1 3 1 288 1 376 2 283 1 
273 1 3 2 288 1 376 2 283 1 
347 1 156 1 312 1 350 1 314 1 272 2 133 5 203 2 34 2 136 3 257 5 111 1 280 1 169 1 114 1 360 1 18 1 145 1 43 1 45 1 76 1 175 1 47 1 48 2 263 1 325 2 123 1 287 1 327 1 51 4 346 3 245 1 
347 3 312 1 350 4 314 3 272 6 133 9 203 5 183 1 296 1 136 9 257 9 164 1 258 1 111 2 114 2 360 1 211 5 18 2 145 3 43 1 45 2 76 3 47 2 48 6 326 1 325 6 123 6 287 1 327 3 127 5 51 7 346 8 128 1 245 3 27 1 
347 1 350 1 314 1 133 3 272 2 203 3 34 1 136 4 257 3 111 1 280 1 169 1 114 1 18 1 145 1 45 1 76 2 47 1 48 2 326 1 325 2 287 1 327 1 51 2 346 3 245 1 
347 2 350 2 314 2 272 4 133 4 203 4 34 2 136 7 296 1 257 4 258 1 111 1 280 1 169 1 114 1 18 1 145 2 45 1 76 3 47 1 48 4 325 4 326 1 287 1 327 2 51 3 346 5 128 1 245 2 
56 1 302 1 158 1 
56 1 252 1 
317 1 
56 1 230 1 
302 2 56 3 130 1 290 1 230 1 235 1 
56 1 230 1 235 1 
56 1 316 1 
347 1 143 4 14 2 341 1 172 7 261 1 148 1 194 1 315 1 293 1 276 3 240 1 26 1 327 1 103 1 86 3 126 2 
347 1 143 4 14 2 341 1 172 7 261 1 148 1 194 1 315 1 293 1 276 3 240 1 26 1 327 1 103 1 86 3 126 2 
347 1 143 4 14 2 341 1 172 7 261 1 148 1 194 1 315 1 293 1 254 1 276 3 240 1 26 1 327 1 103 1 86 3 126 2 
219 4 347 4 201 1 314 3 159 1 221 2 315 1 293 1 276 15 318 1 103 2 104 1 106 1 337 3 299 1 143 16 379 1 341 2 14 5 358 1 359 1 172 31 145 3 148 2 261 5 194 2 362 1 240 1 26 1 83 1 327 4 126 3 86 10 245 3 
347 1 201 2 251 1 159 2 221 4 293 1 276 4 104 2 103 1 299 1 143 5 341 1 14 3 358 2 172 9 193 1 261 1 148 1 194 1 240 1 26 1 327 1 126 2 86 4 
29 1 31 1 87 1 60 1 372 1 292 1 134 1 273 1 163 1 102 1 139 1 105 2 376 2 141 1 165 1 357 1 306 1 77 1 21 1 195 1 22 1 241 1 124 1 49 1 288 1 153 1 265 1 218 1 53 2 328 1 
29 1 31 1 87 1 60 1 63 1 372 1 292 1 134 1 273 1 163 2 102 1 139 1 105 3 376 2 141 1 377 1 260 1 77 1 21 1 195 1 22 1 241 1 124 1 49 1 288 1 153 1 265 1 218 1 53 3 328 1 
29 1 87 1 31 1 60 1 63 1 372 1 292 1 134 1 273 1 163 2 139 1 105 2 376 2 102 1 260 1 77 1 195 1 22 1 124 1 49 1 153 1 288 1 218 1 53 2 328 1 
377 1 56 1 38 1 378 1 167 1 87 2 31 1 230 1 132 1 292 2 21 1 195 1 204 1 161 1 256 1 49 1 153 2 105 1 139 1 328 1 141 1 53 1 218 2 
31 1 87 1 372 1 292 1 134 1 273 1 102 1 139 1 105 1 376 2 141 1 165 1 357 1 260 1 77 1 21 1 195 1 22 1 241 1 49 1 288 1 153 1 265 1 218 1 53 1 328 1 
239 1 
180 1 56 1 0 2 1 1 311 1 312 3 133 5 7 1 136 2 224 1 319 4 139 2 279 1 188 1 322 2 16 2 230 1 18 1 147 1 76 2 19 1 20 1 195 2 364 2 365 1 287 1 84 1 198 1 328 1 31 2 370 1 330 1 200 1 250 2 331 2 157 1 203 2 204 2 98 1 256 1 257 5 108 1 38 1 111 1 43 1 45 1 120 1 176 1 215 2 47 1 48 2 123 6 49 1 346 2 266 1 
180 1 1 1 311 1 312 1 200 1 95 1 133 3 7 1 98 1 257 3 319 2 279 1 108 1 147 1 120 1 20 1 215 1 365 1 123 2 84 1 198 1 266 1 
180 1 1 1 311 1 312 1 200 1 95 1 133 3 203 1 7 1 98 1 257 3 319 3 279 1 108 1 322 1 147 1 120 1 20 1 365 1 123 1 287 1 84 1 198 1 266 1 
180 1 1 1 311 1 312 1 95 1 200 1 250 1 133 3 203 1 7 1 98 1 257 3 319 3 279 1 108 1 322 1 147 1 120 1 20 1 215 1 365 1 123 2 287 1 84 1 198 1 266 1 
180 1 55 1 0 2 1 1 311 1 312 3 352 1 133 5 7 1 70 1 319 6 279 1 322 4 16 2 147 1 76 2 20 1 364 2 365 1 287 5 84 1 198 1 28 1 330 1 200 1 95 1 250 4 157 1 331 2 203 5 98 1 257 5 108 1 111 1 43 1 45 1 305 1 120 1 215 4 47 1 48 1 123 7 346 1 266 1 
180 1 0 2 1 1 311 1 312 2 330 1 200 1 250 2 331 2 157 1 133 4 203 2 7 1 98 1 136 2 224 1 257 4 319 4 279 1 108 1 111 1 322 2 16 2 43 1 45 1 147 1 76 2 120 1 20 1 215 2 47 1 48 1 364 2 365 1 123 4 287 1 84 1 346 1 198 1 266 1 
180 1 0 2 1 1 311 1 312 2 330 1 200 1 250 2 331 2 157 1 352 1 133 4 203 1 7 1 98 1 257 4 319 4 279 1 108 1 111 1 322 2 16 2 43 1 305 1 147 1 45 1 76 2 120 1 20 1 215 2 47 1 48 1 364 2 365 1 123 4 287 1 84 1 346 1 198 1 266 1 28 1 
180 1 0 2 1 1 311 1 312 2 330 1 200 1 250 2 331 2 157 1 352 1 133 4 203 1 7 1 98 1 257 4 319 4 279 1 108 1 111 1 322 2 16 2 43 1 305 1 147 1 45 1 76 2 120 1 20 1 215 2 47 1 48 1 364 2 365 1 123 4 287 1 84 1 346 1 198 1 266 1 28 1 
180 1 0 2 1 1 311 1 312 2 330 1 371 1 5 2 200 1 250 2 332 2 133 4 66 1 203 1 7 1 98 1 136 2 257 4 319 4 279 1 108 1 111 1 322 2 16 2 43 1 305 1 147 1 45 1 120 1 20 1 215 2 47 1 48 1 121 1 365 1 123 4 287 1 84 1 346 1 198 1 266 1 
180 1 55 1 0 2 1 1 311 1 312 2 330 1 200 1 331 2 157 1 250 3 352 1 133 4 203 1 7 1 98 1 257 4 319 5 279 1 108 1 111 1 16 2 322 3 43 1 305 1 45 1 147 1 76 2 120 1 20 1 47 1 215 3 48 1 364 2 365 1 123 5 287 1 84 1 346 1 198 1 266 1 28 1 
180 1 55 1 0 2 1 1 311 1 312 2 330 1 200 1 331 2 157 1 250 3 352 1 133 4 203 1 7 1 98 1 257 4 319 5 279 1 108 1 111 1 16 2 322 3 43 1 305 1 45 1 147 1 76 2 120 1 20 1 47 1 215 3 48 1 364 2 365 1 123 5 287 1 84 1 346 1 198 1 266 1 28 1 
180 1 0 2 1 1 311 1 312 2 330 1 5 2 200 1 250 2 332 2 133 4 66 1 203 1 7 1 98 1 136 2 224 1 257 4 319 4 279 1 108 1 111 1 322 2 16 2 43 1 45 1 147 1 120 1 20 1 215 2 47 1 48 1 365 1 123 4 287 1 84 1 346 1 198 1 266 1 
347 1 143 3 13 1 228 1 14 2 92 1 17 2 358 1 201 1 172 6 158 1 159 1 148 1 221 2 237 1 293 1 276 3 295 1 240 1 243 1 26 1 327 1 103 1 104 1 126 1 86 2 
219 3 289 1 347 1 92 1 201 2 314 2 182 1 159 2 221 4 354 1 276 6 9 1 104 2 73 1 337 3 106 1 143 8 13 4 14 1 228 11 17 1 358 2 172 14 145 1 261 1 237 2 243 11 83 1 327 2 244 1 86 2 197 1 245 2 
289 1 56 1 30 1 31 1 311 2 92 1 200 2 201 1 202 1 291 1 159 1 221 2 204 1 354 1 99 1 276 1 278 1 139 1 104 1 9 1 143 1 13 1 17 1 230 1 358 1 172 2 212 1 304 1 235 1 237 1 195 1 23 1 81 1 216 1 365 1 49 1 309 1 328 1 
347 3 56 2 311 3 314 2 221 6 354 1 276 10 278 2 9 1 139 3 143 10 13 7 14 4 15 2 228 7 17 2 230 2 358 3 145 2 148 1 235 2 237 3 284 2 195 3 238 2 240 1 23 2 24 1 365 1 243 7 26 1 327 3 86 8 245 2 328 2 289 1 31 3 92 3 201 3 200 3 373 2 202 2 291 1 159 3 293 1 97 2 204 1 99 1 100 1 103 1 104 3 260 1 172 20 261 4 214 1 216 1 49 2 309 1 126 1 
56 3 31 7 311 1 88 1 59 1 92 2 200 1 201 2 291 1 159 2 221 4 204 2 354 1 295 1 99 1 276 1 256 1 37 2 139 8 104 2 9 1 11 1 38 1 143 1 39 1 260 1 230 2 358 2 116 1 172 2 306 1 237 2 150 1 195 8 80 1 216 1 365 1 49 2 328 2 
289 1 347 1 268 1 311 1 92 1 93 1 201 1 200 1 314 1 291 1 159 1 221 2 276 2 320 1 104 1 143 1 13 1 14 1 228 1 358 1 172 3 145 1 237 1 216 1 365 1 243 1 327 1 86 1 245 1 
143 2 13 1 228 1 92 1 358 1 201 1 172 2 261 1 159 1 221 2 237 1 295 1 35 1 243 1 104 1 327 1 86 1 245 1 
110 1 347 1 13 1 14 1 228 1 92 1 358 1 201 1 172 2 145 1 159 1 221 2 237 1 295 1 276 2 243 1 104 1 86 1 
347 1 92 1 314 1 201 1 159 1 221 2 295 1 276 2 104 1 143 2 13 2 228 2 14 1 358 1 172 4 145 1 261 1 237 1 243 2 327 1 86 2 245 1 
143 2 13 1 228 1 92 1 358 1 201 1 172 2 261 1 159 1 221 2 237 1 35 1 243 1 104 1 327 1 86 1 11 1 245 1 
110 1 347 1 13 1 14 1 228 1 92 1 358 1 201 1 172 2 145 1 159 1 221 2 237 1 276 2 243 1 104 1 86 1 11 1 
347 1 92 1 314 1 201 1 159 1 221 2 276 2 104 1 11 1 143 2 13 2 228 2 14 1 358 1 172 4 145 1 261 1 237 1 243 2 327 1 86 2 245 1 
347 1 92 1 314 1 201 1 159 1 221 2 276 2 104 1 143 2 13 2 228 2 14 1 358 1 172 4 145 1 261 1 237 1 243 2 327 1 86 2 245 1 
56 1 31 1 311 1 92 1 373 1 200 1 201 1 202 1 159 1 221 2 204 1 354 1 276 1 278 1 9 1 139 1 104 1 143 1 17 1 230 1 358 1 172 2 235 1 237 1 195 1 23 1 49 1 328 1 
56 1 31 1 311 1 92 1 200 1 201 1 159 1 221 2 253 1 204 1 354 1 276 1 278 1 9 1 355 1 139 1 104 1 143 1 112 1 17 1 230 1 358 1 172 2 235 1 237 1 195 1 49 1 328 1 
289 1 347 1 92 1 314 1 201 1 159 1 221 2 276 2 104 1 143 2 13 2 228 2 14 1 358 1 172 4 145 1 261 1 237 1 243 2 327 1 86 2 245 1 
347 1 56 1 31 1 311 1 92 1 373 1 200 1 201 1 314 1 202 1 159 1 221 2 276 2 278 1 139 1 104 1 143 2 13 2 14 1 228 2 230 1 358 1 145 1 172 4 261 1 235 1 306 1 284 1 237 1 195 1 23 1 243 2 49 1 327 1 86 2 245 1 328 1 
347 1 289 1 311 1 92 1 93 1 201 1 200 1 314 1 291 1 159 1 221 2 276 1 320 1 104 1 339 1 143 2 13 1 228 1 358 1 145 1 172 3 261 1 237 1 216 1 365 1 243 1 327 1 86 1 245 1 
129 2 219 2 347 3 270 1 90 1 201 2 314 3 251 1 33 1 159 2 221 4 333 1 276 10 104 2 337 1 106 1 142 1 143 9 14 3 358 2 172 19 145 3 46 2 261 3 79 1 242 1 83 1 327 3 86 6 245 3 
347 2 129 4 219 2 269 1 270 1 90 1 201 3 314 3 251 1 33 1 159 3 221 6 294 1 276 12 69 1 104 3 72 1 337 2 299 2 143 14 14 2 358 3 172 26 145 2 46 1 261 2 79 2 324 1 242 2 345 1 83 2 327 3 86 4 245 3 
129 4 219 4 347 5 269 1 270 1 90 1 201 3 314 4 251 1 33 1 159 3 221 6 293 1 294 1 276 21 69 1 103 1 72 1 104 3 337 3 106 1 299 1 142 1 143 20 14 4 358 3 172 41 145 4 46 1 148 1 261 4 79 1 240 1 324 1 242 2 345 1 26 1 83 3 327 5 126 1 86 8 245 4 179 1 
129 4 219 4 347 4 269 1 270 1 90 1 201 4 314 4 251 1 33 1 159 4 221 8 293 1 294 1 276 18 69 1 103 1 72 1 104 4 337 3 106 1 299 2 142 1 143 20 14 4 358 4 172 38 145 3 46 1 148 1 261 3 79 1 240 1 324 1 242 2 345 1 26 1 83 3 327 5 126 1 86 7 245 4 179 1 
129 4 219 4 347 8 269 1 270 1 90 1 201 2 314 7 251 1 33 1 159 2 221 4 293 1 294 1 276 25 69 1 103 1 72 1 104 2 337 4 106 2 299 1 143 27 14 7 358 2 172 52 145 7 46 1 148 1 261 7 79 1 240 1 324 1 242 1 345 1 26 1 83 2 327 8 126 1 244 2 86 14 245 7 
155 1 348 1 185 1 308 1 40 1 144 1 94 1 217 1 191 1 140 1 
232 1 267 1 
348 1 308 1 40 1 58 1 144 1 101 1 191 1 300 1 140 1 
155 1 348 1 40 1 144 1 115 2 94 1 117 1 191 1 233 1 64 1 119 1 133 1 203 1 308 1 255 1 257 1 217 1 140 1 
155 1 348 1 40 1 144 1 115 2 94 1 117 1 191 1 233 1 64 1 119 1 133 1 203 1 308 1 255 1 257 1 217 1 140 1 
155 1 348 1 40 1 144 1 115 2 94 1 117 1 191 1 233 1 64 1 119 1 133 1 203 1 308 1 255 1 257 1 217 1 140 1 
82 1 298 1 259 1 
82 1 298 1 259 1 
2 1 50 1 
82 1 2 1 50 1 
248 1 75 1 
348 1 311 2 89 1 248 1 313 1 350 1 200 2 64 1 291 2 133 1 257 1 140 1 40 1 144 1 17 1 115 1 232 1 233 1 191 1 75 1 175 1 308 1 216 2 365 2 263 1 51 1 267 1 
298 1 259 1 
82 1 2 1 50 1 
289 1 56 1 31 2 311 2 92 1 200 2 201 1 159 1 221 2 354 1 277 1 276 1 375 1 37 2 139 2 104 1 9 1 143 1 303 1 39 1 230 1 358 1 172 2 342 1 118 1 237 1 150 1 195 2 365 2 49 1 328 1 
199 1 31 2 260 1 372 1 306 1 134 1 273 1 195 2 22 1 297 1 49 1 102 1 288 1 376 2 139 2 153 1 336 1 265 1 328 1 
31 1 260 1 372 1 134 1 273 1 195 1 22 1 138 1 49 1 102 1 288 1 376 2 139 1 153 1 336 1 265 1 328 1 
56 1 38 1 199 1 31 1 230 1 307 1 195 1 204 1 161 1 256 1 49 1 139 1 153 1 328 1 
199 1 31 1 260 1 372 1 134 1 273 1 195 1 22 1 297 1 49 1 102 1 288 1 376 2 139 1 153 1 336 1 265 1 328 1 
338 1 
203 1 48 1 287 1 32 1 346 1 146 1 158 1 
111 1 312 1 331 1 43 1 157 1 45 1 133 1 76 1 203 2 47 1 136 1 48 1 364 1 257 1 123 1 287 1 346 1 
347 2 56 10 130 1 312 3 314 2 351 1 133 5 272 6 67 2 316 2 136 12 139 3 279 2 15 2 282 1 230 3 18 2 145 2 146 1 235 3 76 6 19 1 195 3 323 1 325 6 287 2 327 2 245 2 328 3 31 3 32 1 252 3 203 8 204 1 257 5 208 1 109 2 166 2 111 4 302 2 42 2 43 4 45 4 306 1 213 2 262 2 47 4 48 8 381 2 122 1 123 5 49 4 52 2 346 9 
219 1 347 2 269 1 312 1 314 2 133 1 272 5 203 5 136 6 69 1 257 1 72 1 337 1 111 2 18 1 43 2 145 2 173 1 45 2 76 3 19 1 262 1 47 2 324 1 48 5 367 1 345 1 123 1 325 5 83 1 287 2 327 2 52 2 346 8 245 2 
347 1 311 1 61 1 200 1 291 1 352 1 133 1 7 1 36 1 257 1 103 1 320 1 111 1 74 1 43 1 45 1 234 1 148 1 262 1 47 1 48 2 151 1 216 1 365 1 26 1 327 2 52 2 346 2 
111 1 32 1 43 1 45 1 146 1 203 1 47 1 48 1 287 1 346 1 
347 2 15 1 314 2 145 2 272 5 76 5 203 5 262 1 48 5 136 10 325 5 327 2 52 2 346 5 245 2 
203 1 312 1 257 1 123 1 287 1 133 1 
56 1 31 4 370 1 312 2 133 3 204 2 256 1 257 3 139 4 208 1 111 2 38 1 12 1 188 1 41 1 230 1 18 2 43 1 45 2 19 2 195 4 47 2 48 2 122 2 326 1 123 4 49 1 346 2 328 1 
56 1 31 1 311 3 92 1 201 1 200 3 373 1 202 1 291 2 159 1 221 2 184 1 354 1 204 1 276 1 278 1 139 1 320 2 104 1 17 1 74 1 230 1 358 1 172 1 235 1 237 1 195 1 23 1 216 2 365 2 49 1 328 1 
111 1 18 1 43 1 45 1 76 2 272 2 19 1 203 4 47 1 136 4 48 2 325 2 287 2 126 1 346 1 
310 1 348 1 191 1 
310 1 348 1 191 1 
348 1 248 1 94 1 191 1 107 1 
310 1 348 1 191 1 
348 1 71 1 191 1 
348 1 71 1 191 1 
348 1 71 1 191 1 
348 1 191 1 
40 1 140 1 
347 1 143 4 14 2 358 2 201 2 172 8 261 1 159 2 148 1 221 4 293 1 276 4 240 1 26 1 327 1 104 2 103 1 126 1 86 3 299 1 
347 1 143 3 14 2 172 6 158 1 148 1 293 1 276 3 240 1 26 1 103 1 327 1 126 1 86 2 
347 1 143 2 14 1 358 1 201 1 314 1 145 1 172 4 159 1 261 1 221 2 276 2 344 1 104 1 327 1 86 2 245 1 
347 1 219 2 143 3 14 1 314 1 145 1 172 7 261 1 276 4 83 1 327 1 86 2 337 1 106 1 245 1 
219 2 347 3 314 2 201 2 159 2 221 4 293 1 276 12 103 2 104 2 106 1 337 2 73 1 299 2 143 11 14 5 358 2 172 23 145 2 148 2 261 4 240 1 286 1 26 1 327 3 126 1 86 9 244 1 245 2 
219 1 276 1 172 1 
143 1 172 1 337 1 
347 1 143 3 15 1 14 2 358 1 201 1 314 1 172 6 145 1 159 1 261 1 221 2 276 3 344 1 104 1 327 1 86 3 245 1 
219 1 347 2 269 1 201 1 314 2 251 1 159 1 221 2 276 6 69 1 104 1 72 1 337 1 143 6 14 1 358 1 172 12 145 2 261 1 324 1 345 1 83 1 327 2 86 2 245 2 
347 1 143 3 14 1 172 6 148 1 261 1 276 3 26 1 327 1 103 1 86 2 
143 1 14 1 358 1 201 1 172 3 261 1 148 1 159 1 221 2 293 1 276 2 240 1 286 1 103 1 104 1 86 2 299 1 
347 2 143 5 14 3 61 1 358 1 201 1 251 1 172 10 159 1 148 2 261 2 221 2 276 5 26 1 104 1 103 2 327 2 86 5 
143 2 358 1 201 1 251 1 172 2 159 1 261 1 221 2 104 1 327 1 86 1 245 1 
347 1 143 2 14 1 358 1 201 1 314 1 145 1 251 1 172 4 159 1 261 1 221 2 276 2 104 1 327 1 86 2 245 1 
142 1 143 1 14 1 358 3 201 3 172 3 251 1 159 3 148 1 261 1 221 6 276 2 286 1 104 3 103 1 86 2 299 1 
219 4 347 5 201 5 314 3 251 1 159 5 221 10 293 1 276 18 103 3 104 5 337 3 106 1 299 2 142 1 143 16 379 1 14 7 359 1 358 5 172 34 145 3 148 3 261 5 362 1 240 1 286 1 344 1 26 2 83 1 327 5 126 1 86 12 245 3 
347 1 219 1 201 1 251 1 159 1 221 2 293 1 276 4 104 1 103 1 337 1 143 4 14 2 358 1 172 8 148 1 324 1 240 1 83 1 26 1 327 1 126 1 86 2 
347 1 219 2 201 2 314 1 251 1 159 2 221 4 293 1 276 5 103 1 104 2 337 1 106 1 143 6 14 2 358 2 172 11 148 1 261 1 240 1 324 1 344 1 26 1 83 1 327 2 126 1 86 3 245 1 
219 1 347 3 269 1 201 3 314 2 251 1 159 3 221 6 293 1 276 10 69 1 103 1 104 3 72 1 337 1 299 1 143 9 14 3 358 3 172 19 145 2 148 1 261 1 240 1 324 1 344 1 345 1 26 1 83 1 327 3 126 1 86 4 245 2 
219 1 347 2 269 1 201 3 314 2 251 1 159 3 221 6 293 1 276 7 69 1 103 1 104 3 72 1 337 1 299 1 143 10 14 3 358 3 172 17 145 1 148 1 261 2 240 1 324 1 344 1 345 1 26 1 83 1 327 3 126 1 86 5 245 2 
347 1 219 1 201 1 251 1 159 1 221 2 293 1 276 4 104 1 103 1 337 1 143 4 14 2 358 1 172 8 148 1 324 1 240 1 83 1 26 1 327 1 126 1 86 2 
219 1 347 2 269 1 201 1 314 2 251 1 159 1 221 2 276 6 69 1 104 1 72 1 337 1 143 6 14 1 358 1 172 12 145 2 261 1 324 1 345 1 83 1 327 2 86 2 245 2 
219 1 347 2 269 1 201 4 314 2 251 1 159 4 221 8 293 1 276 8 69 1 103 1 104 4 72 1 337 1 299 2 143 10 14 3 358 4 172 18 145 1 148 1 261 2 240 1 324 1 344 1 345 1 26 1 83 1 327 3 126 1 86 5 245 2 
219 1 347 2 269 1 201 4 314 3 251 1 159 4 221 8 276 7 69 1 104 4 72 1 337 1 299 2 142 1 143 9 14 3 358 4 172 16 145 2 261 3 324 1 345 1 83 1 327 3 86 6 245 3 
347 1 143 3 14 3 172 7 148 3 261 3 293 2 276 4 240 1 26 1 103 3 327 1 86 6 
219 1 347 2 269 1 201 4 314 2 251 1 159 4 221 8 293 1 276 8 69 1 103 1 104 4 72 1 337 1 299 2 142 1 143 10 14 3 358 4 172 18 145 1 148 1 261 1 240 1 324 1 345 1 26 1 83 1 327 3 126 1 86 4 245 2 
220 1 78 1 311 1 365 1 17 1 200 1 147 1 
220 1 210 1 311 1 17 1 200 1 192 1 44 1 147 1 78 1 365 1 25 1 85 1 
56 1 38 1 195 1 31 1 204 1 256 1 230 1 49 1 139 1 158 1 328 1 
56 1 31 1 311 2 17 1 230 1 200 2 291 1 235 1 195 1 204 1 99 1 23 1 216 1 365 1 278 1 49 1 139 1 328 1 
56 3 31 1 1 1 311 2 200 2 291 1 7 1 316 1 99 1 278 1 139 1 166 1 17 1 230 2 235 2 195 1 23 1 216 2 122 1 365 2 49 1 84 1 328 1 
56 3 31 2 1 1 349 1 311 2 200 2 291 1 7 1 316 1 99 1 278 1 139 2 166 1 112 1 17 1 230 2 235 2 195 2 216 2 122 1 365 2 49 1 84 1 328 1 
56 4 31 2 311 1 4 1 200 1 291 1 252 1 133 2 203 1 7 1 316 1 204 1 36 1 257 2 320 1 139 2 279 1 301 1 166 1 302 1 74 1 230 1 234 1 235 1 195 2 151 1 216 1 365 1 122 1 123 1 49 1 287 1 328 1 
166 1 56 4 302 1 31 3 349 1 230 1 235 1 133 2 252 1 67 1 203 1 316 1 195 3 204 1 122 1 257 2 123 1 287 1 49 1 139 3 279 1 328 1 
195 1 31 1 59 1 49 1 139 1 328 1 
56 3 31 6 130 1 88 1 59 1 260 1 271 1 230 2 116 1 235 1 306 1 150 1 195 7 204 2 80 1 366 1 37 1 49 3 139 7 226 1 328 2 
347 1 289 1 56 1 31 1 311 2 92 2 200 2 201 2 373 1 202 1 291 1 159 2 221 4 293 1 97 1 276 3 277 1 99 1 278 1 103 1 104 2 139 1 143 3 13 1 228 1 14 2 17 2 230 1 358 2 172 6 148 1 235 1 306 1 237 2 284 1 195 1 240 1 23 1 216 1 365 1 243 1 26 1 49 1 327 1 126 1 86 2 328 1 
56 2 31 1 312 1 32 1 133 3 252 1 67 1 203 1 204 1 257 3 139 1 279 1 208 1 109 1 111 2 302 1 43 2 146 1 45 2 213 1 195 1 47 2 48 1 381 1 123 2 287 1 51 1 346 1 
302 1 56 2 31 2 130 1 59 1 230 1 235 1 306 1 195 2 323 1 49 2 139 2 328 1 
306 1 56 1 38 1 195 4 31 4 204 1 349 1 57 1 256 1 230 1 49 1 139 4 328 1 
56 1 31 2 271 1 230 1 235 1 353 1 96 1 195 2 122 1 24 1 49 2 139 2 226 1 328 1 
273 1 195 1 31 1 204 1 22 1 49 1 102 1 376 1 139 1 328 1 
56 1 31 2 260 1 230 1 306 1 150 1 195 2 375 1 49 1 139 2 328 1 
38 1 56 3 31 4 88 1 57 1 230 2 116 1 306 1 150 1 195 5 204 1 122 1 256 1 49 2 139 5 328 2 
38 1 56 3 31 4 88 1 57 1 230 2 380 1 306 1 150 1 195 5 204 1 122 1 256 1 49 2 139 5 328 2 
56 1 112 1 31 1 311 2 17 1 230 1 200 2 291 1 235 1 195 1 204 1 99 1 216 1 365 1 278 1 49 1 139 1 328 1 
56 1 31 1 130 1 271 1 230 1 235 1 195 1 122 1 366 1 49 2 139 1 226 1 328 1 
361 1 186 1 17 1 231 1 249 1 
186 2 1 1 91 1 17 1 249 2 231 2 133 2 236 1 65 1 361 1 203 1 7 1 257 2 287 1 84 1 264 1 279 1 51 1 198 1 
186 1 303 1 311 1 249 1 200 1 118 1 342 1 361 1 365 1 
361 1 264 1 236 1 
29 1 60 1 124 1 158 1 
29 1 21 1 60 1 124 1 105 1 53 1 141 1 
87 1 292 1 53 1 
247 2 29 1 60 1 21 1 135 1 162 1 124 1 105 3 246 1 165 1 141 1 53 3 
29 1 21 1 163 1 60 1 124 1 105 2 343 1 53 2 141 1 
227 1 60 1 21 1 335 1 105 1 288 1 376 1 102 1 165 1 141 1 53 1 
21 1 60 1 124 1 105 1 53 1 141 1 165 1 
29 1 21 1 124 2 105 1 53 1 141 1 165 1 
60 1 189 1 149 1 21 2 124 1 105 2 206 1 165 1 141 2 53 2 
209 1 227 1 29 1 60 2 21 1 275 1 163 2 124 1 105 3 10 1 165 1 141 1 53 3 
29 1 60 1 134 1 273 1 21 1 223 1 163 1 124 1 376 2 105 2 288 1 102 1 165 1 141 1 53 2 
227 1 29 1 60 2 171 1 343 1 21 2 163 2 124 1 105 4 10 1 165 1 141 2 53 4 
29 1 21 1 60 1 124 1 105 1 53 1 141 1 165 1 
247 1 227 1 29 2 60 3 21 1 135 1 162 1 163 2 124 2 105 4 10 1 207 1 53 4 141 1 
29 1 60 1 229 1 62 1 21 1 163 1 124 1 105 2 225 1 165 1 141 1 53 2 
247 2 29 1 21 1 135 1 162 2 60 1 124 1 105 3 154 1 53 3 141 1 165 1 
334 1 68 1 60 2 168 2 
21 1 187 1 105 1 53 1 141 1 165 1 
29 1 21 1 275 1 163 1 60 1 124 1 105 2 53 2 141 1 165 1 
6 1 
29 1 21 1 60 1 124 1 105 1 53 1 141 1 165 1 
247 1 29 1 21 1 275 1 163 1 60 1 124 1 105 3 53 3 141 1 165 1 
227 1 60 1 10 1 207 1 
60 1 124 1 

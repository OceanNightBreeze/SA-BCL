#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 226 22 64 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 4 276 1 77 1 214 1 2 9 5 1 176 2 131 2 158 1 37 6 164 1 11 2 364 1 184 2 41 3 42 1 141 2 290 2 13 1 253 1 16 1 317 9 208 2 236 1 122 1 376 5 174 1 75 1 
76 4 276 1 77 1 214 1 2 9 5 1 176 2 131 2 158 1 37 6 164 1 11 2 364 1 184 2 41 3 42 1 290 2 141 2 13 1 253 1 16 1 317 9 208 2 236 1 122 1 376 5 174 1 75 1 
76 5 276 1 77 1 214 1 2 10 5 1 176 2 131 2 158 1 37 7 164 1 11 2 364 1 184 2 41 4 42 1 290 2 141 2 13 1 253 1 16 1 317 10 208 2 236 1 122 1 376 6 174 1 75 1 
76 3 276 1 77 1 214 1 2 7 5 1 176 2 131 2 158 1 37 4 164 1 11 2 364 1 184 2 41 2 290 2 141 1 13 1 253 1 16 1 317 7 208 2 236 1 122 1 376 4 174 1 75 1 
364 1 76 2 77 1 41 1 42 1 290 1 141 2 13 1 2 4 317 4 208 1 176 1 131 1 236 1 37 3 164 1 376 3 11 1 
364 1 77 1 184 1 140 1 290 1 13 1 253 1 2 2 69 1 317 2 208 1 176 1 131 1 122 1 376 1 211 1 
364 1 76 1 77 1 184 1 41 1 13 1 2 3 317 3 208 2 176 2 158 1 37 1 376 2 
76 4 77 1 105 1 2 9 5 1 176 2 158 1 131 1 37 7 164 1 11 1 364 1 41 3 184 1 42 1 141 2 290 1 13 1 116 1 317 9 208 2 236 1 376 5 75 1 
76 4 77 1 105 1 2 9 5 1 176 2 158 1 131 1 37 7 164 1 11 1 364 1 41 3 184 1 42 1 141 2 290 1 13 1 116 1 317 9 208 2 236 1 376 5 75 1 
258 1 234 1 348 1 
348 1 285 1 300 2 
199 2 287 2 266 2 331 1 163 1 104 2 68 2 334 2 
322 1 79 2 48 1 325 1 259 1 104 2 329 2 221 1 331 1 163 1 108 1 10 2 223 1 178 1 334 3 199 2 264 1 90 1 287 2 265 2 111 1 266 2 185 1 370 1 371 1 231 1 68 3 233 1 17 1 254 1 120 1 145 1 319 1 340 1 94 1 21 2 239 1 
199 1 195 1 287 1 266 1 331 1 242 1 104 1 68 1 334 1 275 1 
258 1 199 1 348 1 189 1 143 1 68 1 295 1 195 1 38 1 165 1 274 1 9 1 334 1 137 1 
258 1 199 1 348 1 189 2 287 1 266 1 104 1 143 1 68 1 295 1 195 1 165 1 9 1 334 1 137 2 
189 1 298 1 99 1 137 1 14 1 
258 1 348 1 200 1 189 2 203 1 298 1 137 2 14 1 
189 1 298 1 137 1 
199 1 189 1 287 1 266 1 242 1 104 1 243 1 68 1 14 1 195 1 331 1 137 1 334 1 275 1 
348 1 
258 1 348 1 200 1 189 2 323 1 298 1 137 2 14 1 
258 1 348 1 349 1 200 1 189 5 29 1 84 1 306 1 170 2 14 2 294 2 205 1 256 1 96 1 197 1 299 1 360 2 298 2 137 5 
234 1 163 1 
199 2 287 1 266 1 104 1 68 2 293 1 163 2 109 1 334 2 
272 1 268 1 98 1 
264 1 265 1 48 1 259 1 185 1 231 1 68 1 329 1 254 1 145 1 59 1 94 1 163 1 223 1 21 1 334 1 
264 1 199 1 287 1 265 1 48 1 175 1 259 1 185 1 231 1 104 1 68 2 329 1 254 1 145 1 272 1 94 1 223 1 224 1 21 1 334 2 
199 3 287 3 175 1 266 1 163 1 104 3 68 3 334 3 
199 1 195 1 287 1 104 1 68 1 334 1 275 1 
199 1 195 1 287 1 266 1 104 1 109 1 68 1 293 1 334 1 
322 1 46 1 189 1 79 2 48 1 175 1 259 1 104 3 85 1 329 1 195 1 331 1 163 1 108 1 165 1 10 1 223 1 9 1 109 1 224 1 334 4 137 1 264 1 199 3 90 1 287 3 265 1 111 1 266 2 185 1 370 1 371 1 231 1 143 1 68 4 233 1 295 1 17 1 254 1 145 1 319 1 94 1 21 1 239 1 
199 2 287 1 175 1 163 1 274 1 297 1 104 1 68 2 334 2 
199 3 348 1 189 1 287 3 175 2 266 1 337 1 104 3 143 1 85 1 68 3 295 1 195 1 165 1 9 1 109 1 224 1 137 1 334 3 
199 2 272 1 287 2 175 1 266 1 268 1 104 2 109 1 68 2 334 2 
264 1 265 1 48 1 259 1 185 1 231 1 68 1 329 1 254 1 145 1 94 1 163 1 223 1 21 1 334 1 
264 1 265 1 48 1 288 1 259 1 185 1 231 1 68 1 329 1 254 1 145 1 95 1 163 1 21 1 334 1 
322 1 79 2 325 2 52 1 56 1 133 1 135 1 161 1 248 1 108 1 10 4 90 1 40 1 314 1 371 1 268 2 373 1 233 1 17 2 272 2 19 1 319 1 375 1 98 2 
199 1 195 1 287 1 173 1 143 1 104 1 68 1 334 1 
199 5 287 4 175 2 266 1 215 1 104 4 130 1 68 5 163 1 274 1 297 1 109 1 224 1 334 5 
199 2 195 1 287 2 173 1 104 2 68 2 334 2 275 1 
304 1 292 1 
304 1 292 1 
235 1 267 1 
235 1 267 1 
235 1 267 1 
261 1 304 1 292 1 
305 1 304 1 292 1 
235 1 134 1 267 1 304 2 219 1 292 2 
261 1 304 1 292 1 
261 1 304 1 292 1 
87 1 304 1 292 1 
87 1 304 1 292 1 
87 1 304 1 292 1 
348 1 189 2 365 2 139 3 183 1 192 1 92 1 291 2 304 2 219 1 292 2 330 2 3 1 18 1 7 2 72 1 359 1 137 2 149 2 
189 1 324 1 351 1 104 2 304 1 305 1 330 1 155 1 7 1 359 1 160 1 163 1 222 1 137 1 334 2 361 1 199 2 287 2 139 1 91 1 291 1 292 1 68 2 149 1 
131 1 290 1 11 1 
131 1 140 1 290 1 
25 1 350 1 131 3 140 1 244 1 11 2 
25 1 78 1 131 2 140 1 244 1 11 1 
25 1 131 2 140 1 11 1 244 2 
258 1 189 5 348 2 150 1 213 1 26 1 29 1 260 1 327 1 155 1 133 1 135 1 248 1 160 1 222 1 285 1 197 3 360 1 137 5 200 1 204 2 170 1 294 1 14 4 115 1 205 2 255 1 19 1 342 2 45 2 298 1 300 3 
258 1 189 9 348 5 150 2 213 2 102 1 29 1 354 1 327 3 133 3 135 3 248 3 160 4 285 3 197 8 360 2 362 1 137 9 181 1 200 1 335 1 170 2 14 7 294 2 119 1 205 6 255 1 256 1 19 3 188 5 342 6 45 6 298 6 99 5 300 9 
258 1 348 3 189 3 150 1 213 1 26 1 260 1 327 1 133 1 135 1 160 1 248 1 285 2 197 3 360 1 137 3 204 1 170 1 14 2 294 1 205 2 256 1 19 1 342 2 45 2 300 4 
258 1 348 4 189 4 150 1 213 1 26 1 260 1 327 2 133 2 135 2 160 2 248 2 285 3 197 5 360 1 362 1 137 4 335 1 204 2 170 1 294 1 14 3 119 1 205 4 256 1 19 2 342 4 45 4 300 7 
234 1 259 1 0 1 
259 1 65 1 
207 1 
48 1 259 1 
48 1 318 1 259 3 0 2 231 1 55 1 
48 1 259 1 231 1 
259 1 377 1 
182 1 40 2 80 1 301 1 49 1 325 4 202 1 27 1 353 2 56 3 17 3 33 1 133 1 135 1 237 1 10 7 74 1 
182 1 40 2 80 1 301 1 49 1 325 4 202 1 27 1 353 2 56 3 17 3 33 1 133 1 135 1 237 1 10 7 74 1 
182 1 40 2 80 1 301 1 49 1 50 1 325 4 202 1 27 1 353 2 56 3 17 3 33 1 133 1 135 1 237 1 10 7 74 1 
322 1 80 1 79 2 325 3 49 2 301 1 54 1 353 1 56 2 108 1 10 6 226 1 89 1 138 1 182 1 40 1 202 1 371 1 233 1 17 3 187 1 320 1 237 1 22 1 
322 2 40 3 80 1 79 4 301 1 49 1 325 5 202 1 27 1 371 2 142 1 353 2 56 4 233 2 17 4 33 1 187 1 133 1 135 1 237 1 123 1 108 2 10 9 74 1 
77 1 350 1 30 1 329 1 2 2 106 1 246 1 283 1 176 1 6 1 131 2 37 1 11 1 364 1 264 1 168 1 265 1 184 1 140 1 290 1 13 1 317 2 118 1 270 1 145 1 208 1 339 1 341 1 376 1 21 1 
77 1 350 1 30 1 329 1 2 3 355 1 106 1 246 1 283 1 176 1 131 2 57 1 358 1 37 2 11 1 364 1 264 1 168 1 265 1 184 1 140 1 290 1 317 3 118 1 270 1 145 1 208 1 341 1 376 1 21 1 
77 1 350 1 30 1 329 1 2 2 283 1 131 2 57 1 358 1 37 2 11 1 364 1 264 1 168 1 265 1 184 1 140 1 290 1 317 2 118 1 270 1 145 1 341 1 376 1 21 1 
264 1 101 1 265 1 168 2 48 1 259 1 368 1 184 2 185 1 113 1 329 1 30 2 2 1 355 1 317 1 145 1 283 2 208 1 176 1 147 1 177 1 21 1 257 1 
264 1 350 1 265 1 168 1 184 1 140 1 290 1 13 1 329 1 30 1 2 1 246 1 106 1 270 1 118 1 317 1 145 1 208 1 283 1 6 1 176 1 131 2 341 1 57 1 21 1 11 1 
107 1 
189 5 48 1 191 1 153 2 282 1 329 2 195 1 165 1 9 1 285 2 197 2 334 1 199 1 200 3 201 1 113 1 336 1 252 1 170 1 68 1 294 1 295 1 205 2 70 2 206 4 172 2 298 6 21 2 23 2 347 2 300 2 212 1 258 1 348 2 213 1 259 1 29 1 303 1 217 2 307 1 177 1 38 1 225 1 360 1 137 5 264 1 265 2 367 1 185 2 143 1 145 1 148 2 97 1 274 1 238 1 
189 3 323 1 282 1 195 1 165 1 38 1 9 1 334 1 137 3 199 1 200 1 336 1 143 1 252 1 68 1 295 1 206 2 148 1 274 1 97 1 238 1 298 2 
258 1 189 3 348 1 323 1 282 1 195 1 165 1 38 1 9 1 334 1 137 3 199 1 200 1 336 1 143 1 252 1 68 1 295 1 206 3 274 1 97 1 298 1 238 1 23 1 
258 1 189 3 348 1 323 1 153 1 282 1 195 1 165 1 38 1 9 1 334 1 137 3 199 1 200 1 336 1 143 1 252 1 68 1 295 1 206 3 148 1 274 1 97 1 238 1 298 2 23 1 
189 5 323 1 191 1 153 4 282 1 195 1 159 1 165 1 9 1 197 1 285 2 334 1 199 1 200 3 112 1 201 1 251 1 336 1 252 1 170 1 68 1 295 1 294 1 205 1 206 6 70 2 172 2 298 7 23 4 346 1 347 2 258 5 348 5 29 1 217 2 38 1 136 1 360 1 137 5 143 1 148 4 97 1 274 1 238 1 
189 4 191 1 153 2 282 1 195 1 165 1 9 1 197 1 285 2 334 1 199 1 200 2 201 1 336 1 252 1 170 1 68 1 295 1 294 1 205 1 206 4 70 2 172 2 298 4 300 2 347 2 23 2 258 1 348 2 29 1 217 2 307 1 38 1 360 1 137 4 143 1 148 2 274 1 97 1 238 1 
258 1 348 1 189 4 191 1 153 2 29 1 282 1 217 2 195 1 159 1 165 1 38 1 9 1 136 1 285 2 197 1 360 1 334 1 137 4 199 1 200 2 201 1 251 1 336 1 143 1 252 1 170 1 68 1 294 1 295 1 205 1 70 2 206 4 172 2 148 2 274 1 97 1 298 4 238 1 23 2 347 2 
258 1 348 1 189 4 191 1 153 2 29 1 282 1 217 2 195 1 159 1 165 1 38 1 9 1 136 1 285 2 197 1 360 1 334 1 137 4 199 1 200 2 201 1 251 1 336 1 143 1 252 1 170 1 68 1 294 1 295 1 205 1 70 2 206 4 172 2 148 2 274 1 97 1 298 4 238 1 23 2 347 2 
258 1 348 1 189 4 51 2 153 2 53 1 29 1 282 1 217 2 195 1 357 1 165 1 38 1 9 1 197 1 360 1 334 1 137 4 110 2 199 1 200 2 201 1 251 1 336 1 143 1 252 1 170 1 68 1 294 1 295 1 205 1 206 4 271 1 172 2 148 2 274 1 97 1 298 4 238 1 23 2 300 2 
258 1 348 1 189 4 191 1 153 3 29 1 282 1 217 2 195 1 159 1 165 1 38 1 136 1 9 1 285 2 197 1 360 1 334 1 137 4 199 1 200 2 201 1 251 1 336 1 143 1 252 1 170 1 68 1 294 1 295 1 205 1 70 2 206 5 172 2 148 3 274 1 97 1 238 1 298 5 347 2 346 1 23 3 
258 1 348 1 189 4 191 1 153 3 29 1 282 1 217 2 195 1 159 1 165 1 38 1 136 1 9 1 285 2 197 1 360 1 334 1 137 4 199 1 200 2 201 1 251 1 336 1 143 1 252 1 170 1 68 1 294 1 295 1 205 1 70 2 206 5 172 2 148 3 274 1 97 1 238 1 298 5 347 2 346 1 23 3 
189 4 51 2 53 1 153 2 282 1 195 1 165 1 9 1 197 1 334 1 110 2 199 1 200 2 201 1 336 1 252 1 170 1 68 1 295 1 294 1 205 1 206 4 172 2 298 4 300 2 23 2 258 1 348 1 29 1 217 2 307 1 38 1 360 1 137 4 143 1 148 2 274 1 97 1 238 1 
322 1 79 2 301 1 325 3 27 1 353 1 56 2 33 1 133 1 135 1 163 2 108 1 10 6 90 1 40 2 314 1 268 1 371 1 233 1 17 3 234 1 272 1 319 1 237 1 74 1 98 1 
322 2 127 1 79 4 325 7 103 1 327 2 56 1 195 1 34 1 133 2 135 1 248 2 163 1 332 1 108 2 10 12 178 1 309 1 89 2 226 2 62 1 90 2 40 1 370 1 371 2 268 2 315 1 233 2 17 5 272 6 19 1 319 1 98 6 
322 1 48 1 175 1 79 2 325 1 259 1 103 1 104 1 193 1 329 1 59 1 263 1 163 1 108 1 223 1 10 2 224 1 178 1 334 2 264 1 199 1 265 1 90 1 287 1 185 1 231 1 268 1 371 1 370 1 68 2 233 1 254 1 17 1 145 1 121 1 94 1 319 1 21 1 
322 3 48 2 325 10 103 1 104 1 327 2 329 3 56 8 57 1 58 2 248 2 163 2 108 3 10 20 286 1 334 3 199 1 287 1 202 4 68 3 17 10 254 2 19 2 74 1 21 3 79 6 175 1 301 1 259 2 27 1 129 2 353 1 31 2 33 1 133 3 135 3 223 2 178 1 224 1 312 1 228 2 264 2 265 3 90 3 40 4 185 1 370 1 371 3 231 2 268 7 233 3 145 2 272 7 319 3 94 2 237 1 273 1 98 7 239 2 
322 2 175 1 79 4 48 2 325 1 259 3 83 1 104 1 329 8 221 2 57 1 36 1 177 1 108 2 166 1 10 2 178 1 334 1 199 1 264 2 287 1 265 8 90 2 185 2 314 1 113 1 371 2 370 1 68 1 233 2 17 1 338 1 145 2 339 1 374 1 319 2 73 1 125 1 21 7 
322 1 47 1 79 2 325 1 103 1 104 1 327 1 56 1 133 1 135 1 248 1 108 1 10 3 109 1 334 1 199 1 90 1 287 1 40 1 266 1 268 1 371 1 68 1 233 1 17 2 272 1 19 1 319 1 98 1 
322 1 90 1 79 2 325 2 202 1 314 1 52 1 268 1 371 1 56 1 233 1 272 1 319 1 133 1 248 1 108 1 10 2 98 1 
322 1 90 1 40 1 79 2 314 1 268 1 371 1 373 1 56 1 233 1 17 2 272 1 19 1 319 1 135 1 108 1 10 2 98 1 
322 1 79 2 325 2 327 1 56 2 133 1 135 1 248 1 108 1 10 4 90 1 40 1 202 1 314 1 371 1 268 2 233 1 17 2 272 2 19 1 319 1 98 2 
322 1 90 1 79 2 325 2 202 1 52 1 268 1 371 1 56 1 233 1 272 1 319 1 133 1 248 1 108 1 10 2 73 1 98 1 
322 1 90 1 40 1 79 2 268 1 371 1 373 1 56 1 233 1 17 2 272 1 19 1 319 1 135 1 108 1 10 2 73 1 98 1 
322 1 79 2 325 2 327 1 56 2 133 1 135 1 248 1 108 1 10 4 90 1 40 1 202 1 371 1 268 2 233 1 17 2 272 2 19 1 319 1 73 1 98 2 
322 1 79 2 325 2 327 1 56 2 133 1 135 1 248 1 108 1 10 4 90 1 40 1 202 1 371 1 268 2 233 1 17 2 272 2 19 1 319 1 98 2 
322 1 48 1 79 2 325 1 259 1 329 1 163 1 108 1 10 2 223 1 178 1 334 1 264 1 265 1 90 1 185 1 231 1 371 1 370 1 68 1 233 1 254 1 17 1 145 1 94 1 319 1 21 1 239 1 
322 1 48 1 79 2 325 1 259 1 329 1 163 1 108 1 10 2 178 1 334 1 264 1 265 1 90 1 288 1 185 1 231 1 371 1 370 1 68 1 233 1 254 1 17 1 145 1 71 1 319 1 95 1 21 1 
322 1 79 2 325 2 103 1 327 1 56 2 133 1 135 1 248 1 108 1 10 4 90 1 40 1 202 1 371 1 268 2 233 1 17 2 272 2 19 1 319 1 98 2 
322 1 48 1 79 2 325 2 259 1 327 1 329 1 56 2 133 1 58 1 135 1 248 1 108 1 10 4 223 1 334 1 264 1 265 1 90 1 40 1 202 1 268 2 231 1 371 1 68 1 233 1 17 2 254 1 145 1 272 2 339 1 19 1 94 1 319 1 98 2 21 1 239 1 
322 1 79 2 325 2 103 1 28 1 104 1 327 1 56 1 133 1 135 1 248 1 108 1 10 3 109 1 334 1 199 1 90 1 287 1 202 1 266 1 371 1 268 1 68 1 233 1 17 1 272 1 19 1 319 1 98 1 
322 2 79 4 325 12 241 1 280 1 327 3 56 5 156 1 35 1 133 3 135 3 248 3 332 1 108 2 10 25 89 3 226 2 167 1 333 4 366 2 40 3 202 2 371 2 64 1 316 1 233 2 17 13 19 3 296 1 123 1 22 2 126 1 
322 3 79 6 325 14 81 1 241 2 280 1 327 3 56 4 156 2 194 1 35 1 133 3 135 2 248 3 108 3 10 26 89 2 226 2 333 4 366 1 40 2 202 2 371 3 64 1 316 1 233 3 17 12 187 2 19 2 123 1 210 1 124 1 22 2 126 1 
322 3 325 20 241 1 280 1 326 1 327 4 56 7 156 2 194 1 248 4 332 1 108 3 10 41 333 4 167 1 202 3 64 1 17 21 19 4 123 1 210 1 124 1 74 1 22 3 126 1 79 6 301 1 81 1 27 1 353 1 33 1 35 1 133 5 135 5 226 3 89 4 366 1 40 4 371 3 233 3 316 1 187 1 237 1 
322 4 79 8 301 1 325 20 81 1 241 1 27 1 280 1 326 1 353 1 327 4 56 6 156 2 33 1 194 1 35 1 133 5 135 4 248 4 332 1 108 4 10 38 89 4 226 3 167 1 333 4 366 1 40 4 202 2 371 4 64 1 316 1 233 4 17 18 187 2 19 3 237 1 123 1 210 1 74 1 124 1 22 3 126 1 
322 2 79 4 301 3 325 28 81 1 241 1 27 3 280 1 353 3 327 5 56 12 156 1 33 3 194 1 35 1 133 8 135 8 248 5 332 1 108 2 10 52 309 1 89 3 226 3 333 4 366 1 40 7 202 5 64 1 371 2 316 1 233 2 17 24 187 1 19 5 237 3 123 1 210 1 74 3 124 1 22 2 126 1 
7 1 183 1 92 1 114 1 291 1 304 1 219 1 292 1 330 1 149 1 
324 1 305 1 
43 1 7 1 291 1 304 1 292 1 86 1 32 1 330 1 149 1 
348 1 189 1 365 1 139 2 183 1 192 1 92 1 291 1 304 1 219 1 292 1 330 1 18 1 7 1 72 1 359 1 137 1 149 1 
348 1 189 1 365 1 139 2 183 1 192 1 92 1 291 1 304 1 219 1 292 1 330 1 18 1 7 1 72 1 359 1 137 1 149 1 
348 1 189 1 365 1 139 2 183 1 192 1 92 1 291 1 304 1 219 1 292 1 330 1 18 1 7 1 72 1 359 1 137 1 149 1 
261 1 134 1 378 1 
261 1 134 1 378 1 
87 1 311 1 
87 1 134 1 311 1 
91 1 361 1 
189 1 324 1 192 1 351 1 304 1 305 1 104 2 330 1 155 1 7 1 160 1 163 1 222 1 334 2 137 1 361 1 199 2 365 1 287 2 139 1 91 1 372 1 291 1 68 2 292 1 14 1 149 1 
261 1 378 1 
87 1 134 1 311 1 
322 1 48 1 79 2 325 1 259 1 103 1 152 1 281 1 329 2 221 2 108 1 166 1 308 1 10 2 178 1 334 2 229 1 264 1 199 2 265 2 90 1 371 1 370 1 68 2 233 1 17 1 145 1 374 1 319 1 21 2 345 1 
264 1 230 1 350 1 265 2 140 1 290 1 329 2 154 1 246 1 118 1 270 1 145 1 283 1 339 1 131 2 57 1 21 2 310 1 11 1 
264 1 350 1 265 1 140 1 290 1 329 1 246 1 118 1 270 1 145 1 283 1 131 2 57 1 20 1 21 1 310 1 11 1 
264 1 230 1 265 1 101 1 48 1 313 1 259 1 185 1 113 1 329 1 145 1 283 1 177 1 21 1 
264 1 230 1 350 1 265 1 140 1 290 1 329 1 154 1 246 1 118 1 270 1 145 1 283 1 131 2 57 1 21 1 310 1 11 1 
196 1 
258 1 205 1 234 1 348 1 349 1 197 1 299 1 
258 1 348 2 189 1 191 1 29 1 285 1 197 1 360 1 137 1 200 1 170 1 294 1 205 1 70 1 298 1 300 1 347 1 
151 1 189 5 48 3 279 2 0 2 327 2 329 3 328 2 61 2 248 2 9 2 197 9 249 2 285 6 198 2 200 3 63 1 65 3 170 4 294 4 205 8 339 1 19 2 342 6 299 1 21 3 298 5 24 2 300 12 258 2 349 1 348 8 213 2 128 1 259 10 29 4 133 2 135 2 225 1 360 4 227 2 137 5 363 2 228 2 264 4 265 3 185 1 231 3 144 1 145 3 44 1 318 1 45 6 377 2 
348 1 29 1 64 1 170 1 294 1 205 1 342 1 45 1 285 1 197 1 226 1 360 1 89 1 22 1 300 2 
189 1 301 1 242 1 29 1 104 1 243 1 33 1 195 1 133 2 135 1 331 1 136 1 197 2 360 1 334 1 137 1 198 1 363 2 199 1 287 1 266 1 170 1 68 1 294 1 117 1 205 2 237 1 275 1 
258 1 349 1 348 1 29 1 170 1 294 1 205 1 197 1 360 1 299 1 
348 5 327 2 205 5 19 2 133 2 135 2 248 2 342 5 45 5 285 5 197 5 300 10 198 1 228 1 363 2 
258 1 348 1 189 1 200 1 298 1 137 1 
151 2 189 3 48 1 213 2 259 1 29 1 329 4 60 1 177 1 162 1 197 2 360 2 225 2 137 3 264 1 200 2 265 4 367 1 185 2 113 1 144 1 170 2 294 2 205 2 145 1 256 1 21 4 298 4 212 1 
322 1 79 2 48 1 259 1 104 2 329 1 331 1 163 1 108 1 10 1 223 1 334 3 199 2 264 1 265 1 287 2 90 1 111 1 266 2 185 1 370 1 371 1 231 1 68 3 233 1 17 1 254 1 145 1 94 1 319 1 21 1 239 1 
258 2 348 4 213 1 29 1 353 1 170 1 294 1 205 2 342 2 45 2 285 2 197 1 360 1 225 1 300 4 
278 1 330 1 149 1 
209 1 92 1 361 1 330 1 149 1 
278 1 330 1 149 1 
278 1 330 1 149 1 
344 1 330 1 149 1 
344 1 330 1 149 1 
344 1 330 1 149 1 
330 1 149 1 
304 1 292 1 
322 2 40 2 79 4 325 4 301 1 202 1 27 1 371 2 353 1 56 3 233 2 17 4 33 1 187 1 133 1 135 1 237 1 108 2 10 8 74 1 
40 2 301 1 325 3 27 1 353 1 56 2 17 3 234 1 33 1 133 1 135 1 237 1 10 6 74 1 
322 1 40 1 79 2 325 2 202 1 371 1 171 1 327 1 56 2 233 1 17 2 19 1 133 1 135 1 248 1 108 1 10 4 
325 1 10 2 226 1 89 1 22 1 17 1 
322 1 79 2 301 2 325 13 27 1 353 1 327 2 56 7 33 2 133 5 135 5 248 2 332 1 108 1 10 26 309 1 226 2 89 2 62 1 40 5 202 2 371 1 233 1 17 13 117 1 187 1 19 2 237 2 74 1 
10 1 89 1 17 1 
325 1 10 1 226 1 
322 1 79 2 40 2 325 3 202 1 371 1 171 1 327 1 233 1 56 3 17 3 19 1 133 1 135 1 248 1 108 1 10 6 228 1 
322 1 79 2 325 6 81 1 327 2 56 2 194 1 133 2 135 2 248 2 108 1 10 12 226 1 89 1 40 1 202 1 64 1 371 1 233 1 17 6 19 2 123 1 210 1 124 1 22 1 
40 1 325 3 301 1 202 1 56 2 17 3 33 1 133 1 135 1 237 1 10 6 
322 1 40 1 79 2 325 1 301 1 202 1 27 1 371 1 56 2 233 1 17 2 187 1 237 1 108 1 10 3 74 1 138 1 
322 1 79 2 40 3 301 2 325 5 202 2 371 1 233 1 56 5 17 5 117 1 33 1 133 2 135 2 237 2 108 1 123 1 10 10 
322 1 79 2 325 2 202 1 371 1 233 1 56 1 133 1 248 1 123 1 108 1 10 2 
322 1 40 1 79 2 325 2 202 1 371 1 327 1 56 2 233 1 17 2 19 1 133 1 135 1 248 1 123 1 108 1 10 4 
322 3 79 6 40 1 301 1 325 1 202 1 371 3 233 3 56 2 17 2 187 1 237 1 123 1 108 3 10 3 167 1 138 1 
322 4 79 8 325 7 301 2 27 1 54 1 56 6 33 1 133 2 135 2 108 4 10 15 89 1 226 1 167 1 138 1 40 3 202 3 371 4 171 1 233 4 17 8 117 1 187 1 237 2 123 1 74 1 22 1 
322 2 79 4 301 2 325 14 81 1 27 1 353 1 327 2 56 9 33 2 194 1 133 5 135 4 248 2 108 2 10 24 226 1 89 1 40 5 202 4 64 1 371 2 233 2 17 10 117 1 187 1 19 1 237 2 123 1 210 1 74 1 124 1 22 1 
322 3 79 6 301 1 325 10 81 1 27 1 353 1 327 2 56 4 33 1 194 1 133 3 135 2 248 2 108 3 10 17 89 1 226 1 40 3 202 1 64 1 371 3 171 1 233 3 17 7 187 1 19 1 237 1 123 1 210 1 74 1 124 1 22 1 
322 3 79 6 301 1 325 9 81 1 27 1 353 1 327 2 56 4 33 1 194 1 133 3 135 3 248 2 108 3 10 19 226 1 89 1 40 3 202 1 64 1 371 3 171 1 233 3 17 10 187 1 19 2 237 1 123 1 210 1 74 1 124 1 22 1 
322 3 79 6 301 1 325 10 81 1 27 1 353 1 327 2 56 5 33 1 194 1 133 3 135 2 248 2 108 3 10 17 226 1 89 1 40 3 202 2 64 1 371 3 171 1 233 3 17 7 187 1 19 1 237 1 123 1 210 1 74 1 124 1 22 1 
322 2 79 4 301 2 325 14 81 1 27 1 353 1 327 2 56 9 33 2 194 1 133 5 135 4 248 2 108 2 10 24 226 1 89 1 40 5 202 4 64 1 371 2 233 2 17 10 117 1 187 1 19 1 237 2 123 1 210 1 74 1 124 1 22 1 
322 1 79 2 325 6 81 1 327 2 56 2 194 1 133 2 135 2 248 2 108 1 10 12 226 1 89 1 40 1 202 1 64 1 371 1 233 1 17 6 19 2 123 1 210 1 124 1 22 1 
322 4 79 8 301 1 325 10 81 1 27 1 353 1 327 2 56 5 33 1 194 1 133 3 135 2 248 2 108 4 10 18 89 1 226 1 40 3 202 2 64 1 371 4 171 1 233 4 17 8 187 2 19 1 237 1 123 1 210 1 74 1 124 1 22 1 
322 4 79 8 325 9 81 1 327 3 56 6 194 1 133 3 135 2 248 3 108 4 10 16 89 1 226 1 167 1 40 3 202 3 64 1 371 4 233 4 17 7 187 2 19 2 123 1 210 1 124 1 22 1 
40 3 301 3 325 3 202 3 27 1 56 6 17 4 33 1 133 1 135 1 237 3 10 7 74 2 
322 4 79 8 301 1 325 10 81 1 27 1 353 1 327 2 56 4 33 1 194 1 133 3 135 2 248 2 108 4 10 18 89 1 226 1 167 1 40 3 202 1 64 1 371 4 233 4 17 8 187 2 19 1 237 1 123 1 210 1 74 1 124 1 22 1 
199 1 4 1 163 1 274 1 297 1 68 1 334 1 
250 1 199 1 190 1 186 1 68 1 15 1 4 1 163 1 284 1 297 1 274 1 334 1 
264 1 234 1 145 1 265 1 48 1 259 1 185 1 177 1 113 1 21 1 329 1 
264 1 199 1 287 1 265 1 48 1 175 1 259 1 185 1 231 1 104 1 68 2 329 1 254 1 145 1 94 1 163 1 21 1 334 2 
264 1 199 2 151 1 287 2 265 1 48 2 175 1 259 3 231 2 143 1 104 1 68 2 329 1 295 1 254 1 145 1 195 1 94 1 61 1 163 1 21 1 377 1 334 2 
151 1 175 1 48 2 259 3 104 1 329 2 220 1 195 1 61 1 163 1 334 2 199 2 264 1 265 2 287 2 288 1 231 2 143 1 68 2 295 1 254 1 145 1 21 2 377 1 
258 1 151 1 189 2 348 1 48 1 259 4 82 1 352 1 0 1 329 3 220 1 61 1 9 1 137 2 264 1 265 3 185 1 231 1 65 1 145 1 298 1 21 3 377 1 
258 1 264 1 348 1 189 2 151 1 265 3 48 1 259 4 185 1 231 1 0 1 65 1 329 3 220 1 145 1 61 1 9 1 249 1 21 3 298 1 377 1 137 2 
264 1 145 1 338 1 265 1 21 1 329 1 
264 3 265 7 48 2 259 3 185 2 83 1 289 1 231 1 67 1 329 7 338 1 145 2 221 1 339 1 318 1 57 1 374 1 8 1 36 1 125 1 21 6 
322 2 48 1 325 3 103 1 104 1 281 1 329 1 56 2 58 1 163 2 108 2 10 6 334 2 199 1 287 1 68 2 254 1 17 3 339 1 74 1 21 1 79 4 175 1 301 1 259 1 27 1 353 1 31 1 33 1 133 1 135 1 223 1 264 1 265 1 90 2 40 2 268 1 371 2 231 1 233 2 145 1 272 1 94 1 319 2 237 1 98 1 239 1 
258 1 348 1 349 1 189 3 259 2 279 1 29 2 0 1 329 1 9 1 197 1 249 1 360 2 227 1 137 3 200 1 265 1 185 1 144 1 65 1 170 2 294 2 14 1 205 1 299 1 21 1 298 2 24 1 
264 2 265 2 48 1 259 2 0 1 231 1 329 2 338 1 145 1 44 1 339 1 318 1 21 2 
264 1 265 4 48 1 259 1 185 1 369 1 113 1 329 4 220 1 145 1 339 1 177 1 21 4 
264 2 151 1 265 2 48 1 240 1 259 1 289 1 231 1 67 1 329 2 146 1 145 1 21 2 286 1 
264 1 270 1 145 1 265 1 131 1 140 1 185 1 290 1 21 1 329 1 
264 1 145 1 265 2 48 1 339 1 259 1 374 1 57 1 308 1 21 2 329 2 
264 2 151 1 265 5 48 2 259 3 185 1 369 1 113 1 329 5 145 2 339 1 374 1 36 1 177 1 21 4 125 1 
264 2 151 1 265 5 48 2 259 3 185 1 369 1 113 1 329 5 145 2 339 1 374 1 177 1 21 4 180 1 125 1 
264 1 199 1 287 1 265 1 48 1 175 1 259 1 288 1 185 1 231 1 104 1 68 2 329 1 254 1 145 1 163 1 21 1 334 2 
264 2 151 1 265 1 48 1 259 1 289 1 231 1 67 1 329 1 145 1 318 1 8 1 21 1 
132 1 163 1 169 1 12 1 1 1 
258 1 348 1 189 2 216 1 143 1 169 2 1 2 12 2 85 1 232 1 295 1 14 1 195 1 157 1 132 1 163 1 165 1 9 1 137 2 
199 1 152 1 1 1 12 1 68 1 132 1 345 1 334 1 229 1 
132 1 216 1 232 1 
364 1 234 1 77 1 376 1 
364 1 317 1 77 1 208 1 176 1 376 1 2 1 
168 1 184 1 2 1 
364 1 100 1 321 1 317 3 77 1 208 1 176 1 247 1 122 2 376 1 13 1 2 3 
364 1 317 2 77 1 208 1 176 1 37 1 141 1 376 1 2 2 
76 1 317 1 208 1 176 1 131 1 236 1 290 1 376 1 13 1 11 1 2 1 
364 1 317 1 208 1 176 1 376 1 13 1 2 1 
364 2 317 1 77 1 208 1 176 1 13 1 2 1 
364 1 277 1 66 1 13 1 2 2 93 1 317 2 208 2 176 2 376 1 
364 1 76 1 77 1 41 1 13 1 2 3 317 3 208 1 5 1 176 1 37 2 376 2 75 1 
364 1 77 1 39 1 350 1 140 1 290 1 13 1 2 2 317 2 208 1 176 1 131 2 37 1 376 1 11 1 
364 1 76 1 77 1 41 1 42 1 141 1 13 1 2 4 317 4 208 2 176 2 37 2 376 2 
364 1 317 1 77 1 208 1 176 1 376 1 13 1 2 1 
100 1 321 1 364 2 76 1 77 2 41 1 2 4 317 4 208 1 176 1 88 1 37 2 122 1 376 3 
364 1 77 1 269 1 13 1 218 1 105 1 2 2 317 2 208 1 176 1 37 1 376 1 
321 1 100 2 364 1 77 1 13 1 2 3 317 3 208 1 176 1 262 1 122 2 376 1 
356 2 302 1 376 2 343 1 
317 1 208 1 176 1 179 1 13 1 2 1 
364 1 317 2 77 1 5 1 208 1 176 1 37 1 376 1 13 1 2 2 
245 1 
364 1 317 1 77 1 208 1 176 1 376 1 13 1 2 1 
364 1 317 3 5 1 77 1 208 1 176 1 37 1 122 1 376 1 13 1 2 3 
76 1 88 1 41 1 376 1 
364 1 376 1 

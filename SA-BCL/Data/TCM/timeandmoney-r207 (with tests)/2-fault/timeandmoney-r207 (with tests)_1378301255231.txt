#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 3 27 1 349 1 360 2 262 2 147 2 116 3 58 1 148 1 64 1 207 1 173 1 51 1 
24 9 26 2 358 1 27 4 340 1 360 2 4 1 58 2 64 3 207 1 86 1 255 1 374 2 186 1 188 1 235 1 114 1 349 1 262 2 351 2 147 5 238 2 116 9 148 1 102 1 119 1 173 1 51 6 
24 9 26 2 358 1 27 4 340 1 360 2 4 1 58 2 64 3 207 1 86 1 255 1 374 2 186 1 188 1 235 1 114 1 349 1 262 2 351 2 147 5 238 2 116 9 148 1 102 1 119 1 173 1 51 6 
24 10 26 2 358 1 27 5 340 1 360 2 4 1 58 2 64 4 207 1 86 1 255 1 374 2 186 1 188 1 235 1 114 1 349 1 262 2 351 2 147 6 238 2 116 10 148 1 102 1 119 1 173 1 51 7 
24 7 26 2 358 1 27 3 340 1 360 2 4 1 58 2 64 2 207 1 86 1 255 1 374 2 186 1 188 1 235 1 114 1 349 1 262 2 351 2 147 4 238 1 116 7 148 1 102 1 173 1 51 4 
374 1 24 4 188 1 26 1 27 2 114 1 349 1 360 1 262 1 351 1 238 2 147 3 116 4 148 1 64 1 207 1 119 1 51 3 
374 1 24 2 340 1 349 1 360 1 262 1 106 1 16 1 147 1 351 1 116 2 58 1 148 1 207 1 255 1 275 1 
24 9 26 1 27 4 360 2 58 1 64 3 207 1 86 1 374 1 186 1 188 1 114 1 349 1 262 2 147 5 238 2 351 1 116 9 148 1 286 1 151 1 119 1 173 1 51 7 
24 9 26 1 27 4 360 2 58 1 64 3 207 1 86 1 374 1 186 1 188 1 114 1 349 1 262 2 147 5 238 2 351 1 116 9 148 1 286 1 151 1 119 1 173 1 51 7 
103 1 234 1 316 1 213 1 169 1 98 1 214 1 61 1 311 1 47 1 333 1 193 1 34 1 65 1 
133 1 
31 1 103 2 347 1 133 1 25 1 333 2 34 1 163 1 
139 1 103 5 2 1 164 1 347 2 25 1 221 2 73 1 42 1 146 1 30 2 133 1 62 2 216 1 333 5 34 2 290 1 35 1 163 1 
133 1 163 1 168 1 
43 1 133 1 137 2 
234 2 311 2 193 2 316 2 95 1 169 2 214 2 98 1 
0 1 174 1 1 2 175 1 359 1 246 1 316 3 28 1 202 1 204 1 131 1 294 1 363 1 80 1 366 2 367 2 231 2 370 1 302 1 181 1 10 1 304 1 89 1 112 1 209 1 210 1 234 2 348 2 327 1 95 1 169 3 214 2 98 1 311 2 287 1 193 2 154 1 
61 1 234 1 311 1 47 1 193 1 316 1 213 1 169 1 214 1 98 1 
103 1 123 1 316 2 61 1 133 1 65 1 163 1 12 1 234 1 94 1 213 2 169 2 98 1 214 1 100 1 354 1 311 1 47 1 333 1 193 2 152 1 
103 2 123 1 316 2 61 1 133 1 65 1 163 1 234 2 94 1 213 2 169 2 214 2 98 1 100 1 354 1 311 2 193 2 333 2 47 1 
103 1 347 1 180 1 333 1 34 1 
240 1 103 2 347 1 133 1 25 1 333 2 34 1 163 1 
103 1 347 1 333 1 
120 1 364 1 234 1 311 1 193 2 316 2 95 2 169 2 214 1 
122 1 307 1 59 1 
0 1 89 1 1 1 175 1 348 1 359 1 327 1 316 1 28 1 200 1 95 1 169 1 363 1 80 1 367 1 370 1 
0 1 89 1 1 1 234 1 175 1 348 1 359 1 327 1 316 2 28 1 169 2 59 1 363 1 80 1 311 1 193 1 367 1 136 1 370 1 344 1 
95 1 168 1 
234 3 311 3 193 3 316 3 95 1 344 1 169 3 214 1 
234 1 311 1 47 1 193 1 316 1 213 1 169 1 
364 1 120 1 234 1 311 1 193 1 316 1 213 1 169 1 214 1 
0 1 103 1 1 1 246 1 202 1 294 1 301 1 302 1 344 1 10 1 112 1 209 1 348 1 213 2 169 4 214 2 354 1 311 3 120 1 123 1 175 1 359 1 316 4 28 1 223 1 131 1 363 1 80 1 366 2 367 1 136 1 231 1 370 1 181 1 276 1 89 1 234 3 94 1 327 1 95 1 98 1 100 1 333 1 193 3 154 1 
215 1 234 1 311 1 193 2 316 2 95 1 152 1 344 1 169 2 
276 1 120 1 103 1 123 1 234 3 94 1 316 3 201 1 213 1 169 3 214 1 100 1 133 1 354 1 311 3 333 1 193 3 136 1 344 2 
120 1 234 2 316 2 307 1 169 2 214 1 59 1 311 2 193 2 344 1 
0 1 89 1 1 1 175 1 348 1 359 1 327 1 316 1 28 1 95 1 169 1 363 1 80 1 367 1 370 1 
0 1 89 1 1 1 348 1 359 1 327 1 316 1 15 1 95 1 169 1 363 1 80 1 300 1 367 1 370 1 
69 1 184 1 112 1 77 1 122 2 247 1 246 1 204 2 307 2 131 1 192 1 59 2 294 2 6 1 32 1 366 2 355 1 162 1 63 1 231 4 343 1 181 1 10 1 154 1 
354 1 234 1 311 1 193 1 316 1 213 1 191 1 169 1 
120 1 234 4 316 5 95 1 206 1 169 5 214 1 178 1 215 1 311 4 193 5 136 1 152 1 344 2 
234 2 311 2 47 1 193 2 316 2 191 1 213 1 169 2 
56 1 189 1 334 1 
362 1 196 1 56 2 189 2 143 1 48 1 
56 1 189 1 
56 1 189 1 
362 1 48 1 
362 1 48 1 
362 1 48 1 
56 1 189 1 372 1 
56 1 189 1 372 1 
56 1 189 1 372 1 
241 1 56 1 189 1 
241 1 56 1 189 1 
241 1 56 1 189 1 
103 2 257 1 93 2 196 1 56 2 72 1 55 2 189 2 125 1 17 1 96 1 365 3 133 1 228 2 75 1 333 2 76 2 274 2 256 1 
103 1 56 1 316 2 317 1 297 1 365 1 179 1 228 1 274 1 321 1 371 1 93 1 234 2 72 1 189 1 95 1 169 2 99 1 264 1 311 2 333 1 193 2 334 1 76 1 
195 1 38 2 26 1 106 1 351 2 
374 1 26 1 351 1 
374 1 106 1 351 1 
195 1 38 1 26 2 106 1 351 3 239 1 
195 1 38 1 26 1 106 1 351 2 5 1 
220 1 103 5 25 1 221 1 127 1 30 1 130 1 81 1 297 1 162 1 133 2 63 1 62 1 34 4 321 1 137 3 343 1 232 1 163 1 35 3 322 1 139 2 347 1 146 1 330 2 99 1 43 1 355 1 74 2 333 5 312 2 336 1 
220 3 103 9 2 1 25 1 221 2 105 1 127 2 128 1 30 2 160 1 296 5 297 4 81 2 180 5 162 3 133 5 63 3 62 2 34 7 137 9 343 3 232 1 163 1 35 8 139 6 347 6 376 1 146 1 211 1 330 6 43 3 355 3 74 6 333 9 335 1 
103 3 220 1 2 1 221 1 127 1 30 1 130 1 81 1 297 1 162 1 133 3 62 1 63 1 34 2 137 4 343 1 163 1 35 3 139 2 330 2 43 2 355 1 333 3 312 1 74 2 336 1 
103 4 220 2 2 1 221 1 105 1 127 1 30 1 130 1 160 1 81 1 297 2 162 2 133 4 62 1 63 2 34 3 137 7 343 2 163 1 35 5 139 4 376 1 330 4 43 3 355 2 74 4 333 4 312 2 336 1 
242 1 
0 1 168 1 381 1 
0 1 22 1 
0 1 370 1 
0 3 327 1 361 1 29 1 370 1 381 2 
0 1 327 1 370 1 
0 1 8 1 
121 1 39 1 315 1 247 2 248 1 261 1 204 4 294 3 329 2 6 3 295 1 132 1 63 1 231 7 343 1 380 1 268 1 269 1 
218 1 121 1 220 3 315 1 248 2 247 5 204 16 131 1 205 4 294 15 295 1 6 10 132 2 366 2 162 3 63 4 231 31 343 4 181 1 10 1 87 3 112 1 185 1 70 1 261 2 237 1 18 1 329 3 355 3 313 1 267 1 268 2 380 5 269 1 
121 1 112 2 13 1 247 3 248 1 261 1 204 5 131 2 294 4 329 2 295 1 6 4 132 1 366 4 63 1 313 1 231 9 343 1 380 1 268 1 181 2 10 2 269 1 314 1 
121 1 315 1 247 2 248 1 261 1 204 4 294 3 329 2 6 3 295 1 132 1 63 1 231 7 343 1 380 1 268 1 269 1 
121 1 315 1 247 2 248 1 261 1 204 4 294 3 329 2 6 3 295 1 132 1 63 1 231 7 343 1 380 1 268 1 269 1 
0 1 89 1 1 1 24 1 348 1 359 1 40 1 360 1 262 1 167 1 116 1 58 2 80 1 149 1 134 2 379 1 319 1 107 2 367 1 118 1 217 1 252 2 370 1 
1 1 24 1 26 1 360 1 3 1 106 1 58 1 60 1 341 1 80 1 33 1 134 1 107 1 108 1 367 1 252 1 207 1 254 1 89 1 374 1 348 1 262 1 351 2 116 1 97 1 239 1 
1 1 24 2 26 1 53 1 360 1 3 1 106 1 58 1 60 1 341 1 80 1 33 1 134 1 107 1 108 1 367 1 252 1 207 1 89 1 374 1 348 1 349 1 262 1 147 1 351 2 116 2 97 1 239 1 148 1 51 1 
1 1 24 3 26 1 360 1 3 1 106 1 58 1 341 1 80 1 33 1 134 1 107 1 108 1 367 1 230 1 252 1 254 1 89 1 374 1 348 1 349 1 40 1 262 1 147 1 351 2 116 3 239 1 97 1 148 1 51 2 
1 1 24 2 26 1 106 1 58 1 341 1 80 1 33 1 134 1 107 1 108 1 367 1 230 1 252 1 254 1 89 1 374 1 348 1 349 1 147 1 351 2 116 2 239 1 148 1 51 2 
68 1 
0 1 103 5 1 2 293 2 298 1 62 1 163 2 11 2 12 1 347 6 348 2 260 1 167 1 213 1 169 1 352 1 353 1 309 2 354 1 19 1 217 1 170 2 25 3 123 1 221 1 359 2 316 1 78 1 30 1 80 1 81 1 133 3 367 2 137 2 370 1 35 2 139 2 89 1 277 2 324 2 377 4 278 1 280 1 94 1 145 1 146 1 282 1 283 2 43 2 100 1 333 5 193 1 49 1 50 1 152 1 
103 3 12 1 347 2 25 1 123 1 377 2 278 1 293 1 94 1 260 1 316 1 213 1 169 1 352 1 31 1 100 1 133 2 354 1 298 1 333 3 193 1 49 1 163 2 152 1 
103 2 12 1 123 1 377 3 278 1 94 1 260 1 316 1 213 1 169 1 352 1 100 1 133 2 354 1 298 1 333 2 193 1 49 1 170 1 163 2 152 1 
103 3 25 1 123 1 293 1 316 1 31 1 298 1 133 2 163 2 12 1 347 2 377 3 278 1 94 1 260 1 283 1 213 1 169 1 352 1 100 1 354 1 193 1 333 3 49 1 170 1 152 1 
103 5 293 4 61 1 298 1 62 1 65 1 163 4 11 2 12 1 347 7 14 1 260 1 213 2 169 2 214 1 352 1 308 1 353 1 309 2 354 1 311 1 20 1 170 3 25 3 123 1 221 1 316 2 177 1 30 1 31 1 133 4 273 1 35 1 139 1 277 2 234 1 324 2 377 5 278 1 94 1 280 1 146 1 283 4 98 1 43 2 100 1 47 1 333 5 193 2 49 1 152 1 
103 4 293 2 298 1 62 1 163 3 11 2 12 1 347 4 260 1 213 1 169 1 352 1 353 1 309 2 354 1 170 2 25 2 123 1 221 1 316 1 30 1 133 4 137 2 35 1 139 1 277 2 324 2 377 4 278 1 94 1 280 1 146 1 282 1 283 2 43 2 100 1 193 1 333 4 49 1 152 1 
103 4 25 2 123 1 221 1 293 2 177 1 316 1 30 1 298 1 133 3 62 1 273 1 35 1 163 3 11 2 139 1 277 2 12 1 347 4 324 2 377 4 278 1 280 1 94 1 260 1 146 1 283 2 213 1 169 1 352 1 43 2 353 1 100 1 309 2 354 1 193 1 333 4 20 1 49 1 170 2 152 1 
103 4 25 2 123 1 221 1 293 2 177 1 316 1 30 1 298 1 133 3 62 1 273 1 35 1 163 3 11 2 139 1 277 2 12 1 347 4 324 2 377 4 278 1 280 1 94 1 260 1 146 1 283 2 213 1 169 1 352 1 43 2 353 1 100 1 309 2 354 1 193 1 333 4 20 1 49 1 170 2 152 1 
103 4 338 1 25 2 123 1 221 1 293 2 177 1 316 1 30 1 224 1 298 1 133 3 62 1 137 2 110 2 35 1 163 3 11 2 139 1 277 2 12 1 347 4 91 1 377 4 278 1 280 1 94 1 260 1 146 1 283 2 213 1 169 1 352 1 100 1 354 1 193 1 333 4 49 1 170 2 194 2 152 1 
103 4 25 2 123 1 221 1 293 3 177 1 316 1 30 1 298 1 133 3 62 1 273 1 35 1 163 3 11 2 139 1 277 2 12 1 347 5 324 2 377 5 278 1 14 1 280 1 94 1 146 1 260 1 283 3 213 1 169 1 352 1 43 2 353 1 100 1 309 2 354 1 193 1 333 4 20 1 49 1 170 3 152 1 
103 4 25 2 123 1 221 1 293 3 177 1 316 1 30 1 298 1 133 3 62 1 273 1 35 1 163 3 11 2 139 1 277 2 12 1 347 5 324 2 377 5 278 1 14 1 280 1 94 1 146 1 260 1 283 3 213 1 169 1 352 1 43 2 353 1 100 1 309 2 354 1 193 1 333 4 20 1 49 1 170 3 152 1 
103 4 25 2 123 1 221 1 293 2 316 1 30 1 224 1 298 1 133 3 62 1 137 2 110 2 35 1 163 3 11 2 139 1 277 2 12 1 347 4 377 4 278 1 280 1 94 1 260 1 146 1 282 1 283 2 213 1 169 1 352 1 100 1 354 1 333 4 193 1 49 1 170 2 194 2 152 1 
0 3 174 2 23 1 156 1 1 8 124 1 53 1 359 2 246 2 316 1 202 1 204 1 131 2 294 1 80 2 366 4 318 1 367 8 231 2 9 1 370 2 344 1 181 2 10 2 254 1 69 1 89 2 304 1 112 2 234 1 348 7 41 1 165 1 167 1 169 1 311 1 193 1 217 1 154 2 
120 1 220 1 122 1 247 1 246 1 316 1 204 1 131 1 59 1 294 2 6 1 366 2 162 1 63 1 231 3 343 1 181 1 10 1 112 1 90 1 234 1 307 1 169 1 214 1 355 1 311 1 288 1 193 1 154 1 
121 1 122 1 246 1 247 2 204 3 131 1 59 1 294 3 295 1 6 2 132 1 366 2 63 1 231 6 343 1 181 1 10 1 69 1 112 1 261 1 168 1 95 2 307 1 329 1 154 1 269 1 
220 2 122 11 198 1 247 1 246 2 202 1 204 8 205 3 131 2 79 1 294 6 59 11 6 2 366 4 162 1 63 2 320 1 231 14 343 1 181 2 10 2 87 3 304 1 112 2 185 1 90 1 144 1 95 1 307 4 355 2 267 1 380 1 154 1 
0 1 1 1 175 1 359 1 246 1 28 1 316 2 200 1 202 1 204 1 131 1 294 1 363 1 80 1 366 2 299 1 367 1 136 1 231 2 370 1 181 1 344 1 10 1 89 1 304 1 112 1 90 1 234 1 142 1 348 1 327 1 259 1 95 1 307 1 169 2 311 1 193 1 154 1 
0 2 1 3 104 2 247 4 246 3 202 1 204 10 294 10 59 7 7 1 295 1 6 8 162 2 63 3 343 3 302 2 344 1 10 3 254 1 304 1 112 3 348 3 261 1 169 3 307 7 355 2 311 1 269 1 121 1 220 2 122 7 175 2 359 1 316 3 28 2 131 3 363 2 80 2 132 1 366 6 367 3 136 1 231 20 85 2 370 2 181 3 89 2 37 1 233 1 90 1 234 1 325 2 236 2 327 2 95 2 329 1 193 1 380 4 154 3 
69 1 112 1 122 1 246 1 204 2 307 1 131 1 59 1 192 1 6 1 366 2 355 1 63 1 231 2 380 1 181 1 10 1 154 1 
69 1 112 1 122 1 247 1 246 1 307 1 131 1 59 1 294 2 6 1 32 1 366 2 162 1 231 2 343 1 181 1 10 1 154 1 
220 1 122 2 246 1 247 1 204 2 131 1 59 2 294 2 6 2 366 2 162 1 63 1 231 4 343 1 181 1 10 1 69 1 112 1 307 2 355 1 380 1 154 1 
112 1 122 1 41 1 246 1 204 2 307 1 131 1 59 1 192 1 6 1 366 2 355 1 63 1 231 2 380 1 181 1 10 1 154 1 
112 1 122 1 247 1 41 1 246 1 307 1 131 1 59 1 294 2 6 1 32 1 366 2 162 1 231 2 343 1 181 1 10 1 154 1 
220 1 112 1 122 2 247 1 41 1 246 1 204 2 307 2 131 1 294 2 59 2 6 2 366 2 162 1 355 1 63 1 231 4 343 1 380 1 181 1 10 1 154 1 
220 1 112 1 122 2 247 1 246 1 204 2 307 2 131 1 294 2 59 2 6 2 366 2 162 1 355 1 63 1 231 4 343 1 380 1 181 1 10 1 154 1 
0 1 1 1 175 1 359 1 246 1 28 1 316 1 202 1 204 1 131 1 294 1 363 1 80 1 366 2 367 1 231 2 370 1 302 1 181 1 10 1 304 1 89 1 112 1 348 1 327 1 95 1 169 1 154 1 
291 1 0 1 1 1 359 1 246 1 316 1 202 1 204 1 131 1 294 1 363 1 80 1 366 2 300 1 367 1 231 2 370 1 181 1 10 1 304 1 89 1 112 1 348 1 327 1 15 1 95 1 169 1 154 1 
220 1 112 1 90 1 122 2 247 1 246 1 204 2 307 2 131 1 294 2 59 2 6 2 366 2 162 1 355 1 63 1 231 4 343 1 380 1 181 1 10 1 154 1 
0 1 220 1 1 1 122 2 53 1 175 1 247 1 246 1 28 1 316 1 204 2 131 1 294 2 59 2 6 2 363 1 80 1 366 2 162 1 63 1 367 1 231 4 343 1 302 1 85 1 370 1 181 1 10 1 89 1 112 1 348 1 327 1 307 2 169 1 355 1 380 1 154 1 
120 1 220 1 122 1 246 1 316 1 204 2 131 1 294 1 59 1 6 1 366 2 162 1 63 1 231 3 343 1 181 1 253 1 10 1 112 1 90 1 234 1 169 1 307 1 214 1 355 1 311 1 193 1 380 1 154 1 
220 3 54 2 199 1 247 3 204 9 205 2 131 2 294 10 6 6 249 1 251 1 366 4 162 3 63 3 138 1 231 19 343 3 181 2 10 2 87 1 111 2 112 2 185 1 187 1 281 1 101 1 355 3 267 1 380 3 314 1 
220 3 271 1 54 4 199 2 247 2 204 14 131 3 205 2 294 12 6 4 249 1 366 6 162 2 63 3 83 1 231 26 343 2 181 3 10 3 87 2 111 1 88 1 112 3 71 1 187 2 281 1 306 1 263 1 101 1 355 3 313 2 267 2 380 2 314 1 
54 4 199 1 247 4 204 20 205 4 294 21 6 8 295 1 249 1 251 1 250 1 162 4 63 5 343 5 10 3 111 1 112 3 71 1 306 1 261 1 263 1 355 4 313 1 267 3 314 1 269 1 220 4 121 1 271 1 131 3 366 6 132 1 83 1 231 41 181 3 87 3 88 1 185 1 187 2 281 1 329 1 101 1 380 4 
121 1 220 4 271 1 54 4 199 1 247 4 204 20 205 4 131 4 294 18 295 1 6 7 249 1 250 1 251 1 132 1 366 8 162 3 63 5 83 1 231 38 343 4 181 4 10 4 87 3 111 1 88 1 112 4 185 1 71 1 187 2 281 1 261 1 306 1 263 1 329 1 101 1 355 4 313 2 267 3 380 3 269 1 314 1 
121 1 220 7 271 1 54 4 199 1 247 7 204 27 205 4 131 2 294 25 295 1 6 14 249 1 132 1 366 4 162 7 63 8 83 1 231 52 343 8 181 2 10 2 87 4 111 1 88 1 112 2 185 2 71 1 187 1 144 2 281 1 261 1 306 1 263 1 329 1 101 1 355 7 313 1 267 2 380 7 269 1 314 1 
257 1 323 1 93 1 196 1 228 1 56 1 189 1 274 1 76 1 96 1 
334 1 371 1 
150 1 45 1 93 1 228 1 158 1 56 1 189 1 274 1 76 1 
103 1 257 1 93 1 196 1 72 1 56 1 55 1 189 1 125 1 17 1 96 1 365 2 133 1 228 1 75 1 333 1 76 1 274 1 
103 1 257 1 93 1 196 1 72 1 56 1 55 1 189 1 125 1 17 1 96 1 365 2 133 1 228 1 75 1 333 1 76 1 274 1 
103 1 257 1 93 1 196 1 72 1 56 1 55 1 189 1 125 1 17 1 96 1 365 2 133 1 228 1 75 1 333 1 76 1 274 1 
143 1 67 1 372 1 
143 1 67 1 372 1 
241 1 346 1 
241 1 346 1 143 1 
179 1 317 1 
103 1 55 1 56 1 316 2 125 1 317 1 297 1 365 1 179 1 228 1 34 1 274 1 321 1 371 1 93 1 234 2 189 1 212 1 95 1 169 2 99 1 264 1 311 2 333 1 193 2 334 1 76 1 
67 1 372 1 
241 1 346 1 143 1 
0 1 174 2 1 2 357 1 246 1 316 2 129 1 202 1 204 1 131 1 294 1 80 1 366 2 318 1 367 2 231 2 9 1 370 1 181 1 303 1 10 1 89 1 373 1 304 1 112 1 90 1 348 2 284 1 169 2 193 2 154 1 
0 1 89 1 1 1 348 1 359 1 126 1 167 1 80 1 379 1 367 1 289 1 252 1 217 1 370 1 
89 1 374 1 1 1 26 1 375 1 348 1 106 1 351 2 239 1 97 1 80 1 33 1 108 1 367 1 289 1 109 1 252 1 254 1 
89 1 374 1 1 2 26 1 53 1 375 1 348 2 106 1 351 2 239 1 97 1 80 1 33 1 108 1 367 2 289 1 109 1 252 1 254 1 
89 1 374 1 1 1 26 1 375 1 348 1 106 1 351 2 239 1 97 1 80 1 33 1 108 1 367 1 252 1 36 1 254 1 
115 1 
139 1 133 1 62 1 221 1 73 1 42 1 146 1 30 1 35 1 163 1 
220 2 139 5 325 1 330 5 43 5 355 2 133 5 162 2 135 2 63 2 74 5 137 10 343 2 171 1 35 5 
103 1 347 1 133 1 25 1 333 1 163 1 
0 1 219 1 103 3 1 4 2 1 25 2 221 2 359 2 30 2 80 1 81 2 62 2 367 4 370 1 35 2 89 1 139 2 347 4 190 2 348 4 145 2 146 1 167 1 46 1 19 1 333 3 217 1 50 1 244 1 
139 1 133 1 73 1 42 1 35 1 163 1 168 1 
103 1 25 1 221 1 30 1 133 2 62 1 137 1 35 1 163 1 139 1 347 1 324 1 146 1 43 1 353 1 309 1 333 1 
0 4 155 1 103 2 1 1 339 1 203 1 162 1 62 2 63 1 66 1 343 1 347 2 348 1 355 1 74 3 22 2 220 1 25 1 123 1 221 2 359 1 361 1 30 2 80 1 81 1 133 3 135 1 367 1 137 6 370 1 35 4 89 2 139 3 325 1 279 1 326 1 327 1 146 2 330 3 43 3 285 1 333 2 381 1 
103 1 220 2 271 1 25 1 221 2 30 2 205 1 81 1 133 5 162 2 135 2 62 2 63 2 83 1 137 6 343 2 369 1 35 8 163 2 87 1 139 5 71 1 347 1 145 1 146 2 306 1 263 1 330 5 43 3 355 2 333 1 74 5 267 1 171 1 153 1 
103 1 221 1 316 1 222 1 30 1 132 1 61 1 135 2 62 1 63 2 273 1 343 1 65 1 35 2 139 2 234 1 146 1 261 1 213 1 169 1 98 1 214 1 311 1 47 1 333 1 193 1 171 1 269 1 
0 1 1 1 175 1 359 1 246 1 316 3 28 1 202 1 131 1 294 1 363 1 80 1 366 2 367 1 231 1 302 1 370 1 181 1 10 1 89 1 112 1 209 1 234 2 348 1 327 1 95 1 169 3 214 2 98 1 311 2 193 2 154 1 
139 2 221 1 145 1 146 1 30 1 329 1 330 2 43 2 81 1 133 4 62 1 74 2 137 4 35 1 163 2 
257 1 228 1 274 1 166 1 317 1 
141 1 228 1 274 1 
141 1 228 1 274 1 
141 1 228 1 274 1 
228 1 117 1 274 1 
228 1 117 1 274 1 
228 1 117 1 274 1 
228 1 274 1 
56 1 189 1 
112 1 247 3 222 1 261 2 204 5 131 1 294 5 6 5 366 2 132 2 63 2 231 10 343 2 380 2 181 1 10 1 314 1 269 1 
112 1 204 2 131 1 6 1 366 2 355 1 63 1 231 2 380 1 181 1 10 1 314 1 
220 1 112 1 247 1 204 2 131 1 294 2 6 2 366 2 162 1 355 1 63 1 231 4 343 1 380 1 181 1 10 1 314 1 
112 3 247 1 261 1 204 1 131 3 294 2 6 2 227 1 251 1 366 6 132 1 313 1 231 3 380 1 181 3 10 3 314 1 
218 1 121 1 220 3 247 7 204 16 205 4 131 5 294 18 295 1 6 12 227 1 132 3 251 1 366 10 162 3 63 5 231 34 343 5 181 5 10 5 87 3 70 1 112 5 185 1 328 1 261 3 18 1 329 1 355 3 313 2 267 1 380 5 269 2 314 1 
121 1 247 2 204 4 205 1 131 1 294 4 295 1 6 2 366 2 132 1 63 1 231 8 343 1 181 1 87 1 10 1 112 1 306 1 261 1 329 1 267 1 314 1 269 1 
121 1 220 1 247 2 204 6 205 2 131 2 294 5 295 1 6 3 132 1 366 4 63 2 231 11 343 1 181 2 10 2 87 1 112 2 185 1 328 1 261 1 306 1 329 1 355 1 267 1 380 1 269 1 314 1 
121 1 220 2 271 1 247 3 204 9 205 1 131 3 294 10 295 1 6 4 132 1 366 6 162 2 63 3 83 1 231 19 343 3 181 3 87 1 10 3 112 3 71 1 328 1 261 1 306 1 263 1 329 1 355 2 313 1 267 1 380 1 269 1 314 1 
121 1 220 2 271 1 247 3 204 10 205 1 131 3 294 7 295 1 6 5 132 1 366 6 162 1 63 3 83 1 231 17 343 2 181 3 87 1 10 3 112 3 71 1 328 1 261 1 306 1 263 1 329 1 355 2 313 1 267 1 380 2 269 1 314 1 
121 1 247 2 204 4 205 1 131 1 294 4 295 1 6 2 366 2 132 1 63 1 231 8 343 1 181 1 87 1 10 1 112 1 306 1 261 1 329 1 267 1 314 1 269 1 
220 2 271 1 247 1 204 6 205 1 131 1 294 6 6 2 366 2 162 2 63 2 83 1 231 12 343 2 181 1 87 1 10 1 112 1 71 1 306 1 263 1 355 2 267 1 380 1 314 1 
121 1 220 2 271 1 247 3 204 10 205 1 131 4 294 8 295 1 6 5 132 1 366 8 162 1 63 3 83 1 231 18 343 2 181 4 10 4 87 1 112 4 71 1 328 1 261 1 306 1 263 1 329 1 355 2 313 2 267 1 380 2 269 1 314 1 
220 3 271 1 247 3 204 9 205 1 131 4 294 7 6 6 366 8 251 1 162 2 63 3 83 1 231 16 343 2 181 4 10 4 87 1 112 4 71 1 306 1 263 1 355 3 313 2 267 1 380 3 314 1 
121 1 247 3 261 3 204 3 294 4 295 2 6 6 132 3 63 1 231 7 343 1 380 3 269 1 
121 1 220 2 271 1 247 3 204 10 205 1 131 4 294 8 295 1 6 4 132 1 366 8 251 1 162 1 63 3 83 1 231 18 343 2 181 4 10 4 87 1 112 4 71 1 261 1 306 1 263 1 329 1 355 2 313 2 267 1 380 1 269 1 314 1 
121 1 112 2 247 2 261 1 204 4 131 2 329 1 294 4 6 3 295 1 366 4 132 1 63 1 313 1 231 8 343 1 380 1 181 2 10 2 269 1 
121 1 247 2 261 1 168 1 204 3 329 1 294 3 295 1 6 2 132 1 63 1 231 6 343 1 269 1 
220 1 112 1 247 1 328 1 204 2 131 1 294 2 6 2 366 2 162 1 355 1 63 1 231 4 343 1 380 1 181 1 10 1 
220 1 185 1 247 1 204 3 205 2 294 4 6 2 162 1 355 1 63 1 231 7 343 1 267 1 380 1 87 1 
121 1 220 2 198 1 247 5 204 11 205 2 131 2 294 12 295 1 6 9 227 1 132 2 366 4 162 2 63 3 231 23 343 3 181 2 87 2 10 2 185 1 112 2 144 1 261 2 329 1 355 2 313 2 380 4 269 1 
231 1 205 1 294 1 
231 1 204 1 87 1 
220 1 112 1 325 1 247 2 328 1 204 3 131 1 294 3 6 3 366 2 355 1 162 1 63 1 231 6 343 1 380 1 181 1 10 1 
220 2 271 1 247 1 204 6 205 1 131 1 294 6 6 2 366 2 162 2 63 2 83 1 231 12 343 2 181 1 87 1 10 1 112 1 71 1 306 1 263 1 355 2 267 1 380 1 314 1 
247 1 261 1 204 3 294 3 6 2 132 1 63 1 231 6 343 1 380 1 269 1 
121 1 112 1 247 1 261 1 204 1 131 1 294 2 6 2 295 1 227 1 132 1 366 2 313 1 231 3 380 1 181 1 10 1 
215 1 161 1 193 1 316 1 95 1 152 1 169 1 
140 1 113 1 378 1 316 1 95 1 225 1 169 1 310 1 161 1 215 1 193 1 152 1 
0 1 89 1 1 4 53 1 197 1 348 4 359 1 167 1 226 1 80 1 367 4 217 1 370 1 
0 1 89 2 1 2 190 1 348 2 176 1 327 1 57 1 7 1 80 1 367 2 266 1 370 1 356 1 
89 1 80 1 374 1 1 1 33 1 367 1 348 1 359 1 106 1 351 1 
0 1 89 1 1 2 53 1 348 2 129 1 80 1 367 2 9 1 370 1 254 1 
0 3 89 2 1 5 156 1 53 1 124 1 190 1 348 4 359 1 167 1 226 1 80 2 367 5 217 1 9 1 370 2 
0 3 89 2 1 5 53 1 124 1 190 1 348 4 359 1 167 1 226 1 80 2 367 5 265 1 217 1 9 1 370 2 
0 1 89 1 80 1 1 1 367 1 348 1 359 1 217 1 370 1 167 1 168 1 
0 1 89 1 1 1 234 1 175 1 348 1 359 1 327 1 316 2 95 1 169 2 363 1 80 1 311 1 193 1 367 1 370 1 344 1 
0 3 1 1 175 1 316 2 363 1 8 1 80 1 367 1 370 2 344 1 89 1 234 2 348 1 190 1 94 1 327 2 95 1 213 1 169 2 354 1 243 1 311 1 193 2 
0 3 1 2 197 1 316 2 363 1 8 1 80 1 300 1 367 2 370 2 344 1 89 1 234 2 348 2 190 1 94 1 327 2 95 1 213 1 169 2 354 1 243 1 311 1 193 2 
0 4 103 2 1 1 123 1 316 1 8 1 80 1 61 1 133 1 367 1 65 1 370 1 163 1 89 1 345 1 347 1 92 1 234 1 348 1 190 1 327 1 213 1 169 1 214 1 98 1 243 1 311 1 47 1 193 1 333 2 22 1 381 1 
0 4 155 1 103 2 1 1 123 1 316 1 8 1 80 1 61 1 133 1 367 1 65 1 370 1 163 1 89 1 347 1 234 1 348 1 190 1 327 1 213 1 169 1 214 1 98 1 243 1 311 1 47 1 193 1 333 2 22 1 381 1 
89 1 80 1 1 1 367 1 348 1 165 1 
174 1 0 3 23 1 89 3 156 1 1 7 124 1 53 1 348 6 359 2 327 1 165 1 361 1 80 2 332 1 367 7 266 1 9 1 370 2 356 1 254 1 
0 1 1 1 53 1 246 2 247 2 204 3 294 3 59 1 295 1 6 2 63 1 343 1 302 1 344 1 10 2 112 2 348 1 261 1 307 1 169 2 311 1 269 1 121 1 122 1 175 1 28 1 316 2 131 2 363 1 80 1 366 4 132 1 367 1 231 6 85 1 370 1 181 2 89 1 90 1 234 1 236 1 327 1 95 2 284 1 329 1 193 1 154 2 
0 2 155 1 103 3 1 1 203 1 61 1 62 2 63 2 343 2 65 1 163 2 347 2 348 1 73 1 261 1 213 1 169 1 214 1 311 1 171 1 22 1 269 1 25 1 123 1 221 2 359 1 222 1 316 1 30 2 132 1 133 2 135 2 367 1 34 1 35 4 139 5 234 1 279 1 146 2 42 1 98 1 285 1 46 1 47 1 333 3 193 1 381 1 
0 2 89 2 80 1 1 2 53 1 367 2 348 2 327 1 361 1 165 1 66 1 370 1 381 1 
0 1 89 1 1 1 234 1 348 1 359 1 327 1 316 2 95 1 169 2 363 1 80 1 311 1 300 1 193 1 367 1 370 1 344 1 
0 1 89 2 1 1 190 1 348 1 327 1 361 1 80 1 332 1 367 1 266 1 370 1 356 1 
82 1 44 1 84 1 368 1 95 1 
103 2 123 1 272 1 316 1 82 1 61 1 133 1 34 1 84 1 65 1 368 1 163 1 276 1 305 1 208 1 234 1 94 1 213 2 169 1 214 1 98 1 100 1 44 1 354 1 311 1 47 1 193 1 333 2 
373 1 357 1 82 1 44 1 193 1 316 1 368 1 303 1 169 1 
305 1 272 1 368 1 
148 1 24 1 349 1 360 1 262 1 207 1 147 1 116 1 
24 4 27 1 258 1 349 2 360 1 262 1 147 3 116 4 148 2 64 1 21 1 255 1 52 1 51 2 
24 2 349 1 360 1 262 1 147 1 350 1 116 2 148 1 286 1 342 1 207 1 51 1 
148 1 24 3 349 1 360 1 21 1 262 1 207 1 147 1 337 1 116 3 255 2 52 2 
270 1 147 2 172 2 182 1 
24 1 245 1 360 1 262 1 207 1 116 1 
148 1 24 2 349 1 360 1 262 1 207 1 147 1 86 1 116 2 51 1 
331 1 
148 1 24 1 349 1 360 1 262 1 207 1 147 1 116 1 
148 1 349 1 147 1 168 1 
148 1 24 1 349 1 360 1 262 1 147 1 116 1 
24 1 107 1 58 1 
148 1 24 3 157 1 349 1 360 1 21 1 262 1 207 1 147 1 116 3 255 2 52 1 
148 1 24 2 349 1 360 1 262 1 147 1 238 1 116 2 51 1 
374 1 24 1 188 1 26 1 27 1 360 1 262 1 147 1 351 1 116 1 207 1 
24 1 349 1 360 1 262 1 207 1 147 1 116 1 
148 1 24 1 349 2 360 1 262 1 207 1 116 1 
292 1 24 2 349 1 360 2 262 2 159 1 147 1 116 2 229 1 207 1 
24 3 186 1 27 1 349 1 360 1 262 1 147 2 116 3 148 1 64 1 207 1 86 1 51 2 
374 1 24 2 26 1 349 1 360 1 106 1 262 1 147 1 351 2 116 2 239 1 148 1 207 1 183 1 51 1 
24 4 27 1 349 1 360 2 262 2 238 1 147 2 116 4 148 1 64 1 207 1 119 1 51 2 
24 3 360 1 349 1 262 1 147 1 116 3 148 1 207 1 86 1 51 1 255 1 
27 1 64 1 258 1 147 1 
349 1 147 1 

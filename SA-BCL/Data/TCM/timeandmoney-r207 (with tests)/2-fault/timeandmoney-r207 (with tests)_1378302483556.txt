#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 1 144 1 101 1 2 1 231 1 152 2 204 3 33 6 274 1 52 2 211 4 294 2 55 2 128 1 278 2 57 1 59 1 299 1 62 1 88 9 301 5 239 2 243 1 195 2 222 1 115 9 353 1 381 1 
99 1 144 1 101 1 2 1 231 1 152 2 204 3 33 6 274 1 52 2 211 4 294 2 55 2 128 1 278 2 57 1 59 1 299 1 62 1 88 9 301 5 239 2 243 1 195 2 222 1 115 9 353 1 381 1 
99 1 144 1 101 1 2 1 231 1 152 2 204 4 33 7 274 1 52 2 211 5 294 2 55 2 128 1 278 2 57 1 59 1 299 1 62 1 88 10 301 6 239 2 243 1 195 2 222 1 115 10 353 1 381 1 
144 1 101 1 2 1 231 1 152 2 204 2 33 4 274 1 52 2 211 3 294 1 55 2 128 1 278 2 57 1 59 1 299 1 62 1 88 7 301 4 239 2 243 1 195 2 222 1 115 7 353 1 381 1 
99 1 101 1 88 4 301 3 239 1 231 1 152 1 204 1 33 3 243 1 52 1 211 2 294 2 195 1 128 1 278 1 115 4 353 1 
144 1 101 1 301 1 88 2 239 1 231 1 152 1 374 1 243 1 195 1 55 1 96 1 115 2 278 1 57 1 329 1 
101 1 2 1 88 3 301 2 239 2 231 1 152 2 204 1 33 1 243 1 211 1 55 1 115 3 
99 1 245 1 101 1 2 1 231 1 152 2 204 3 33 7 274 1 52 1 211 4 294 2 55 1 183 1 128 1 278 1 88 9 301 5 239 2 243 1 195 1 222 1 115 9 353 1 
99 1 245 1 101 1 2 1 231 1 152 2 204 3 33 7 274 1 52 1 211 4 294 2 55 1 183 1 128 1 278 1 88 9 301 5 239 2 243 1 195 1 222 1 115 9 353 1 
288 1 5 1 279 1 
326 2 279 1 40 1 
241 2 290 2 357 2 284 2 358 2 31 1 339 1 66 2 
100 1 47 1 227 2 48 1 228 2 289 1 290 2 357 3 358 2 31 1 334 1 363 1 77 1 275 2 80 1 319 1 82 1 339 1 214 2 298 1 130 1 215 1 342 1 87 1 217 2 166 1 263 1 302 1 39 1 66 2 107 1 241 3 375 1 267 1 284 2 268 1 354 1 
241 1 331 1 290 1 357 1 284 1 358 1 140 1 378 1 31 1 66 1 
330 1 288 1 331 1 290 1 357 1 60 1 253 1 345 1 241 1 376 1 321 1 11 1 279 1 367 1 
330 1 288 1 331 1 290 1 357 1 60 1 358 1 253 2 66 1 241 1 284 1 321 2 11 1 279 1 367 1 
13 1 123 1 248 1 253 1 321 1 
123 1 288 1 248 1 43 1 16 1 253 2 321 2 279 1 
248 1 253 1 321 1 
261 1 331 1 290 1 357 1 358 1 31 1 253 1 66 1 241 1 123 1 284 1 140 1 378 1 321 1 
279 1 
123 1 288 1 248 1 16 1 3 1 253 2 321 2 279 1 
25 1 37 2 288 1 272 2 248 2 16 1 253 5 92 1 348 2 244 1 123 2 349 1 259 1 56 1 260 1 321 5 160 1 129 1 279 1 
130 1 313 1 197 1 100 1 227 1 87 1 228 1 217 1 290 1 166 1 357 2 39 1 66 1 334 1 107 1 241 2 363 1 124 1 284 1 268 1 
339 1 5 1 
226 1 371 1 290 2 357 2 358 1 66 1 241 2 284 1 339 2 
197 1 102 1 46 1 
130 1 100 1 175 1 227 1 228 1 87 1 217 1 357 1 166 1 39 1 107 1 334 1 241 1 363 1 339 1 268 1 
313 1 226 1 290 5 344 1 357 5 358 1 66 4 241 5 193 1 376 1 124 2 284 4 224 1 339 1 
368 1 241 2 331 1 290 2 357 2 284 2 140 1 66 2 
241 3 124 1 290 3 357 3 358 1 284 3 339 1 66 3 
241 1 331 1 290 1 357 1 284 1 140 1 66 1 
241 1 226 1 371 1 331 1 290 1 357 1 284 1 358 1 66 1 
313 1 330 1 226 1 100 1 227 1 48 1 228 1 331 1 289 1 290 3 357 4 358 2 31 1 253 1 334 1 363 1 77 1 275 1 124 1 80 1 82 1 339 1 214 2 321 1 11 1 367 1 130 1 215 1 342 1 87 1 217 1 166 1 263 1 60 1 302 1 39 1 66 3 107 1 241 4 267 1 311 1 284 3 377 1 268 1 
241 2 376 1 124 1 290 2 344 1 357 2 284 1 339 1 66 1 
313 1 330 1 226 1 132 1 331 1 290 3 357 3 60 1 358 1 253 1 66 3 241 3 124 2 284 3 377 1 321 1 11 1 279 1 367 1 
241 2 197 1 226 1 124 1 290 2 357 2 284 2 358 1 46 1 66 2 
130 1 100 1 227 1 228 1 87 1 217 1 357 1 166 1 39 1 107 1 334 1 241 1 363 1 339 1 268 1 
130 1 100 1 227 1 228 1 87 1 217 1 357 1 50 1 39 1 334 1 241 1 363 1 122 1 339 1 268 1 
197 2 314 1 118 1 48 1 356 1 289 1 102 2 232 1 77 2 275 4 366 1 82 1 214 2 342 1 163 1 263 1 302 1 19 1 375 2 46 2 21 1 72 1 24 1 117 1 
330 1 241 1 368 1 331 1 290 1 357 1 284 1 66 1 
134 1 18 1 
134 1 18 1 
305 1 148 1 
305 1 148 1 
305 1 148 1 
134 1 186 1 18 1 
134 1 186 1 18 1 
134 1 17 1 18 1 
305 1 182 1 148 1 134 2 360 1 18 2 
134 1 186 1 18 1 
134 1 347 1 18 1 
134 1 347 1 18 1 
134 1 347 1 18 1 
312 1 147 1 290 2 357 2 253 1 277 1 295 1 213 1 339 1 321 1 131 1 134 1 324 1 372 1 66 2 17 1 18 1 242 1 241 2 306 1 42 1 138 1 284 2 113 1 
324 2 134 2 323 1 15 1 251 1 360 1 253 2 121 1 18 2 242 2 306 2 42 3 105 1 336 1 277 1 221 2 213 2 321 2 279 1 
52 1 195 1 278 1 
374 1 195 1 278 1 
374 1 52 2 10 1 126 1 195 3 196 1 
374 1 52 1 233 1 10 1 126 1 195 2 
374 1 52 1 126 1 10 2 195 2 
312 1 118 1 272 1 288 1 248 1 201 2 253 5 207 1 255 1 123 4 295 1 257 1 260 1 321 5 279 2 129 3 37 1 341 1 236 1 16 1 238 1 92 2 40 1 348 1 94 2 326 3 351 1 352 2 113 1 21 1 24 1 72 1 
118 3 288 1 272 2 248 6 201 6 253 9 6 1 207 2 153 1 255 3 123 7 256 1 56 1 260 1 321 9 85 5 279 5 129 8 341 1 37 2 13 5 236 2 16 1 92 6 40 3 282 1 108 1 348 2 326 9 352 6 45 1 113 4 21 3 24 3 72 3 
118 1 331 1 288 1 272 1 290 1 357 1 358 1 31 1 253 3 201 2 207 1 255 1 123 2 257 1 56 1 321 3 279 3 129 3 37 1 261 1 236 1 238 1 66 1 92 2 40 2 241 1 348 1 94 1 326 4 352 2 284 1 140 1 378 1 113 1 21 1 24 1 72 1 
118 1 272 1 201 2 253 2 207 1 153 1 255 1 123 1 257 1 56 1 321 2 279 2 129 3 37 1 236 1 238 1 92 2 40 2 348 1 94 1 326 4 352 2 113 1 21 1 24 1 72 1 
30 1 268 1 5 1 
364 1 268 1 
192 1 
130 1 268 1 334 1 
338 1 268 1 
268 1 334 1 
130 1 30 2 191 1 361 1 268 3 334 1 
340 1 314 3 136 1 91 1 218 1 170 2 19 2 7 1 208 1 77 3 234 1 275 7 375 4 139 1 24 1 72 1 23 1 
340 1 314 3 136 1 91 1 218 1 170 2 19 2 7 1 208 1 77 3 234 1 275 7 375 4 139 1 24 1 72 1 23 1 
340 1 314 3 136 1 91 1 218 1 170 2 19 2 7 1 208 1 77 3 234 1 275 7 375 4 309 1 139 1 24 1 72 1 23 1 
146 1 314 10 118 3 48 1 316 3 4 1 7 1 208 2 77 15 275 31 234 2 255 3 318 1 214 2 280 1 340 2 342 1 189 1 136 2 263 1 302 1 91 1 218 5 170 3 303 1 19 5 240 1 375 16 112 4 139 1 21 3 23 1 72 4 24 4 
314 4 48 2 103 1 7 1 208 1 77 4 275 9 234 1 214 4 340 1 342 2 162 1 263 2 136 1 302 2 218 1 170 2 19 3 240 1 375 5 139 1 24 1 72 1 23 1 
101 1 227 1 74 1 228 1 249 1 273 1 231 1 292 1 152 1 33 1 363 1 52 1 55 1 337 1 127 1 278 1 322 1 343 1 14 1 87 1 217 1 301 1 88 2 239 1 374 1 243 1 41 1 195 2 115 2 196 1 
227 1 74 1 228 1 249 1 231 1 292 1 152 1 33 2 363 1 52 1 55 1 320 1 337 1 127 1 278 1 322 1 343 1 87 1 217 1 301 1 88 3 239 1 109 1 374 1 243 1 41 1 68 1 195 2 115 3 196 1 
227 1 228 1 249 1 231 1 292 1 33 2 363 1 52 1 55 1 337 1 127 1 278 1 322 1 87 1 217 1 301 1 88 2 109 1 374 1 243 1 41 1 68 1 195 2 115 2 196 1 
73 1 143 1 145 1 100 1 227 1 228 1 200 1 292 2 152 1 334 1 363 1 55 2 320 1 322 2 87 1 217 1 88 1 61 1 239 1 41 2 328 1 115 1 268 1 
101 1 227 1 74 1 228 1 249 1 292 1 152 1 363 1 52 1 55 1 337 1 127 1 278 1 322 1 343 1 14 1 87 1 217 1 88 1 239 1 109 1 374 1 41 1 195 2 115 1 196 1 
157 1 
330 1 145 1 286 1 100 2 288 1 331 1 248 6 290 1 253 5 334 1 210 1 258 2 260 1 159 1 158 1 11 1 217 2 16 3 61 1 60 1 265 2 345 1 67 4 348 1 304 1 223 1 70 1 22 1 116 2 268 1 270 2 227 2 228 2 272 1 357 1 75 1 363 1 181 1 79 2 184 2 321 5 279 2 129 2 367 1 37 1 370 1 87 1 236 1 373 2 92 2 40 2 241 1 376 1 326 2 97 1 
330 1 331 1 290 1 248 2 357 1 3 1 253 3 181 1 210 1 258 1 321 3 159 1 11 1 367 1 16 1 60 1 345 1 67 2 241 1 304 1 376 1 22 1 
330 1 331 1 288 1 248 1 290 1 357 1 3 1 253 3 181 1 210 1 79 1 321 3 159 1 11 1 367 1 279 1 16 1 60 1 345 1 67 3 241 1 304 1 376 1 22 1 
330 1 331 1 288 1 290 1 248 2 357 1 3 1 253 3 181 1 210 1 79 1 258 1 321 3 159 1 11 1 367 1 279 1 16 1 60 1 345 1 67 3 241 1 304 1 376 1 22 1 116 1 
330 1 331 1 288 5 248 7 290 1 3 1 253 5 210 1 258 4 260 1 159 1 158 1 11 1 58 1 12 1 16 3 60 1 265 2 345 1 67 6 348 1 304 1 111 1 70 1 22 1 116 4 270 2 272 1 119 1 357 1 179 1 181 1 79 4 184 2 321 5 367 1 279 5 129 1 37 1 373 2 92 1 40 2 241 1 376 1 
330 1 331 1 288 1 290 1 248 4 253 4 210 1 258 2 260 1 158 1 159 1 11 1 16 2 60 1 265 2 345 1 67 4 348 1 304 1 70 1 22 1 116 2 270 2 272 1 357 1 181 1 79 2 184 2 321 4 367 1 129 1 279 2 37 1 373 2 92 1 40 2 241 1 376 1 326 2 97 1 
330 1 288 1 331 1 272 1 248 4 290 1 119 1 357 1 253 4 179 1 181 1 210 1 79 2 258 2 184 2 260 1 158 1 321 4 159 1 11 1 279 1 129 1 367 1 37 1 12 1 16 2 373 2 60 1 265 2 92 1 345 1 40 2 67 4 348 1 241 1 304 1 376 1 70 1 22 1 116 2 270 2 
330 1 288 1 331 1 272 1 248 4 290 1 119 1 357 1 253 4 179 1 181 1 210 1 79 2 258 2 184 2 260 1 158 1 321 4 159 1 11 1 279 1 129 1 367 1 37 1 12 1 16 2 373 2 60 1 265 2 92 1 345 1 40 2 67 4 348 1 241 1 304 1 376 1 70 1 22 1 116 2 270 2 
330 1 288 1 331 1 28 1 272 1 248 4 290 1 357 1 253 4 206 2 181 1 154 1 210 1 79 2 258 2 184 2 260 1 36 2 321 4 159 1 11 1 279 1 129 1 367 1 37 1 12 1 216 1 16 2 373 2 60 1 92 1 345 1 67 4 348 1 241 1 304 1 376 1 326 2 70 1 22 1 116 2 
330 1 288 1 272 1 331 1 119 1 290 1 248 5 357 1 253 4 179 1 181 1 210 1 79 3 258 3 184 2 260 1 158 1 321 4 159 1 11 1 279 1 129 1 367 1 37 1 12 1 16 2 373 2 60 1 265 2 92 1 345 1 40 2 67 5 348 1 241 1 304 1 376 1 111 1 70 1 22 1 116 3 270 2 
330 1 288 1 272 1 331 1 119 1 290 1 248 5 357 1 253 4 179 1 181 1 210 1 79 3 258 3 184 2 260 1 158 1 321 4 159 1 11 1 279 1 129 1 367 1 37 1 12 1 16 2 373 2 60 1 265 2 92 1 345 1 40 2 67 5 348 1 241 1 304 1 376 1 111 1 70 1 22 1 116 3 270 2 
330 1 331 1 288 1 290 1 248 4 253 4 206 2 154 1 210 1 258 2 260 1 159 1 11 1 16 2 60 1 345 1 67 4 348 1 304 1 70 1 22 1 116 2 272 1 357 1 181 1 79 2 184 2 321 4 36 2 367 1 129 1 279 1 37 1 373 2 92 1 241 1 376 1 326 2 97 1 
197 1 314 2 48 1 289 1 102 1 5 1 7 1 208 1 77 3 275 6 82 1 214 2 339 2 342 1 163 1 136 1 263 1 302 1 170 1 19 2 375 3 139 1 46 1 23 1 72 1 24 1 
146 1 197 11 314 2 47 1 118 1 355 1 287 1 48 2 289 1 102 11 316 3 77 6 275 14 255 2 155 1 82 2 339 1 214 4 280 1 342 2 281 1 263 2 302 2 218 1 65 1 19 1 375 8 267 1 112 3 21 2 46 4 72 2 24 1 
313 1 100 1 227 1 175 1 47 1 228 1 48 1 247 1 289 1 290 1 357 2 203 1 334 1 363 1 77 1 275 2 124 1 155 1 82 1 339 1 214 2 130 1 342 1 87 1 217 1 135 1 166 1 263 1 302 1 39 1 66 1 107 1 241 2 375 1 267 1 284 1 46 1 268 1 
197 7 100 1 47 1 48 3 290 1 289 3 102 7 150 2 7 1 334 2 208 1 255 2 155 1 339 2 214 6 342 3 217 3 165 1 166 2 263 3 302 3 66 1 218 4 170 1 19 4 107 2 109 1 267 1 21 2 23 1 24 3 72 3 268 2 313 1 314 8 227 3 27 2 118 2 228 3 271 1 357 3 359 1 363 2 77 10 275 20 124 1 365 2 80 2 125 2 82 3 130 2 87 2 136 1 39 2 241 3 375 10 139 1 284 1 46 7 
145 1 100 2 227 8 47 1 228 7 48 2 290 1 289 2 357 1 273 1 51 1 32 1 334 2 363 2 77 1 275 2 124 1 81 1 82 2 214 4 342 2 87 2 163 1 217 8 263 2 61 1 90 1 302 2 63 1 169 1 66 1 241 1 283 1 109 1 375 1 267 1 284 1 268 3 354 2 
197 1 226 1 314 1 118 1 48 1 289 1 290 1 102 1 357 1 358 1 317 1 77 2 255 1 275 3 155 1 82 1 214 2 342 1 263 1 302 1 66 1 19 1 241 1 375 1 284 1 46 1 21 1 72 1 24 1 
197 1 314 1 342 1 48 1 163 1 289 1 102 1 263 1 302 1 218 1 275 2 375 2 366 1 46 1 82 1 21 1 214 2 72 1 
197 1 314 1 342 1 118 1 48 1 163 1 289 1 356 1 102 1 263 1 302 1 19 1 77 2 275 2 46 1 82 1 214 2 24 1 
197 2 314 2 342 1 118 1 48 1 163 1 289 1 102 2 263 1 302 1 218 1 19 1 77 2 275 4 255 1 375 2 46 2 82 1 21 1 24 1 214 2 72 1 
197 1 314 1 342 1 48 1 289 1 102 1 263 1 302 1 218 1 283 1 275 2 375 2 366 1 46 1 82 1 21 1 214 2 72 1 
197 1 314 1 342 1 118 1 48 1 289 1 356 1 102 1 263 1 302 1 19 1 283 1 77 2 275 2 46 1 82 1 214 2 24 1 
197 2 314 2 342 1 118 1 48 1 289 1 102 2 263 1 302 1 218 1 19 1 283 1 77 2 275 4 255 1 375 2 46 2 82 1 21 1 24 1 214 2 72 1 
197 2 314 2 342 1 118 1 48 1 289 1 102 2 263 1 302 1 218 1 19 1 77 2 255 1 275 4 375 2 46 2 82 1 21 1 24 1 214 2 72 1 
100 1 47 1 227 1 228 1 48 1 289 1 357 1 334 1 363 1 77 1 275 2 80 1 82 1 339 1 214 2 130 1 342 1 87 1 217 1 166 1 263 1 302 1 39 1 107 1 241 1 375 1 267 1 268 1 
100 1 47 1 227 1 228 1 48 1 289 1 357 1 50 1 176 1 334 1 363 1 77 1 275 2 122 1 82 1 339 1 214 2 130 1 342 1 87 1 217 1 263 1 302 1 39 1 241 1 375 1 267 1 268 1 
197 2 314 2 342 1 118 1 48 1 289 1 102 2 263 1 302 1 218 1 19 1 77 2 275 4 255 1 375 2 155 1 46 2 82 1 21 1 24 1 214 2 72 1 
197 2 314 2 118 1 227 1 228 1 48 1 289 1 102 2 357 1 273 1 334 1 363 1 77 2 275 4 255 1 365 1 80 1 82 1 214 2 130 1 342 1 87 1 217 1 166 1 263 1 302 1 39 1 218 1 19 1 107 1 241 1 375 2 46 2 21 1 24 1 72 1 268 1 
226 1 197 1 314 1 118 1 48 1 289 1 290 1 357 1 102 1 358 1 333 1 77 1 255 1 275 3 155 1 82 1 214 2 342 1 263 1 302 1 218 1 66 1 241 1 375 2 284 1 21 1 46 1 24 1 72 1 
146 3 48 3 151 1 291 1 7 1 8 1 208 1 254 1 255 4 53 1 214 6 342 3 262 1 162 1 263 3 302 3 218 4 106 1 170 1 19 4 112 4 21 4 24 5 72 5 23 1 269 2 314 8 118 4 315 1 316 3 77 21 275 41 34 4 78 1 185 1 280 1 136 1 325 1 240 1 375 20 139 1 285 1 142 1 
146 3 314 7 118 3 48 4 315 1 316 3 291 1 151 1 7 1 8 1 208 1 254 1 77 18 34 4 275 38 255 4 78 1 53 1 185 1 214 8 280 1 342 4 262 1 162 1 136 1 263 4 302 4 106 1 218 3 170 1 325 1 240 2 19 4 375 20 112 4 139 1 285 1 21 4 23 1 72 5 24 4 142 1 269 2 
146 2 314 14 118 7 355 2 48 2 315 1 316 4 291 1 151 1 7 1 8 1 208 1 254 1 77 25 34 4 275 52 255 7 78 1 53 1 185 1 214 4 280 2 342 2 162 1 136 1 263 2 302 2 106 1 218 7 170 1 325 1 240 1 19 7 375 27 112 4 139 1 21 7 23 1 72 8 24 8 142 1 269 1 
146 1 314 6 118 3 48 2 315 1 316 1 151 1 77 10 34 2 275 19 255 3 78 1 53 2 214 4 280 1 342 2 162 1 263 2 302 2 106 1 218 3 19 3 307 1 375 9 112 2 285 1 21 3 72 3 24 3 269 1 
146 2 314 4 118 2 48 3 315 1 316 2 291 1 151 2 8 1 254 1 77 12 34 4 275 26 255 3 78 1 53 1 214 6 185 1 342 3 162 1 263 3 302 3 218 2 106 1 325 1 240 2 19 2 375 14 112 2 21 3 24 2 72 3 269 2 142 1 
242 1 369 1 306 1 134 1 324 1 15 1 336 1 360 1 213 1 18 1 
372 1 17 1 
242 1 137 1 306 1 335 1 134 1 324 1 213 1 187 1 18 1 
276 1 186 1 
182 1 172 1 347 1 
324 1 134 1 323 1 15 1 251 1 360 1 253 1 121 1 18 1 242 1 306 1 42 2 336 1 277 1 221 1 213 1 321 1 279 1 
324 1 134 1 323 1 15 1 251 1 360 1 253 1 121 1 18 1 242 1 306 1 42 2 336 1 277 1 221 1 213 1 321 1 279 1 
324 1 134 1 323 1 15 1 251 1 360 1 253 1 121 1 18 1 242 1 306 1 42 2 336 1 277 1 221 1 213 1 321 1 279 1 
182 1 276 1 186 1 
182 1 276 1 186 1 
172 1 347 1 
182 1 172 1 347 1 
131 1 138 1 
312 1 147 1 290 2 357 2 253 1 205 1 123 1 295 1 213 1 339 1 321 1 131 1 323 1 134 1 324 1 372 1 17 1 66 2 18 1 241 2 242 1 306 1 42 1 138 1 221 1 284 2 113 1 
227 2 47 1 48 1 228 2 289 1 290 2 357 2 51 1 334 1 363 1 77 1 275 2 155 1 82 1 214 2 86 1 342 1 87 1 217 2 263 1 90 1 264 1 302 1 241 2 194 1 375 1 267 1 114 1 268 1 354 2 380 1 
322 1 38 1 227 2 74 1 87 1 228 2 217 2 300 1 249 1 273 1 363 1 362 1 374 1 109 1 52 1 195 2 337 1 278 1 196 1 
322 1 227 1 74 1 228 1 87 1 217 1 300 1 249 1 363 1 374 1 109 1 220 1 52 1 195 2 337 1 278 1 196 1 
143 1 322 1 145 1 100 1 38 1 174 1 227 1 87 1 228 1 217 1 61 1 334 1 363 1 268 1 
322 1 38 1 227 1 74 1 87 1 228 1 217 1 300 1 249 1 362 1 363 1 374 1 109 1 52 1 195 2 337 1 278 1 196 1 
89 1 
25 1 244 1 288 1 92 1 5 1 129 1 279 1 
272 1 288 1 248 1 253 1 260 1 158 1 321 1 129 1 279 2 37 1 16 1 265 1 92 1 40 1 348 1 326 1 270 1 
98 1 100 1 198 2 246 2 288 2 248 5 49 2 199 2 253 5 201 6 334 3 255 2 260 4 338 2 217 3 16 3 60 2 266 1 348 4 20 1 219 2 350 2 310 1 352 6 225 2 21 2 72 2 24 2 268 10 25 1 227 3 118 2 228 3 272 4 30 2 273 1 180 2 363 3 364 3 125 2 235 1 321 5 129 9 279 8 130 3 37 4 370 1 87 4 236 2 191 1 92 8 40 6 244 1 326 12 
146 1 118 2 246 2 272 2 288 2 248 1 316 1 253 1 201 5 8 1 254 1 255 2 296 1 260 2 321 1 185 1 129 8 279 5 37 2 370 1 236 1 16 1 92 5 325 1 40 3 348 2 350 1 326 6 95 1 112 1 352 5 21 2 72 2 24 2 142 1 
246 2 331 1 272 1 119 1 290 1 357 1 358 1 31 1 253 1 208 1 260 1 321 1 129 2 37 1 261 1 136 1 168 1 92 2 66 1 241 1 348 1 350 1 284 1 140 1 378 1 23 1 72 2 24 1 
25 1 37 1 272 1 288 1 92 1 348 1 244 1 260 1 279 1 129 1 
118 2 246 2 201 5 92 5 40 5 255 2 350 1 125 1 326 10 352 5 21 2 72 2 24 2 279 5 129 5 
288 1 248 1 16 1 253 1 321 1 279 1 
286 1 145 1 100 2 227 4 228 4 272 2 248 4 253 3 334 1 363 1 56 1 260 1 321 3 129 2 37 2 370 2 87 1 217 4 236 2 16 2 61 1 266 1 92 2 93 1 348 2 20 2 223 1 173 1 268 1 
100 1 227 1 48 1 228 1 290 2 289 1 357 3 358 2 31 1 334 1 363 1 77 1 275 1 80 1 82 1 339 1 214 2 215 1 130 1 342 1 87 1 217 1 166 1 263 1 302 1 39 1 66 2 107 1 241 3 267 1 284 2 268 1 
37 1 370 1 272 1 236 1 288 2 201 2 92 2 170 1 40 2 348 1 326 4 352 2 260 1 129 1 279 4 
242 1 306 1 178 1 
242 1 306 1 178 1 
242 1 131 1 306 1 15 1 250 1 
242 1 306 1 178 1 
242 1 306 1 327 1 
242 1 306 1 327 1 
242 1 306 1 327 1 
242 1 306 1 
134 1 18 1 
146 1 314 2 48 1 316 1 7 1 208 1 77 4 275 8 185 1 214 2 342 1 162 1 263 1 136 1 302 1 170 1 19 2 375 4 112 1 139 1 24 1 72 1 23 1 
146 1 314 3 48 2 29 1 316 1 7 1 208 1 77 5 275 11 255 1 185 1 214 4 280 1 342 2 162 1 136 1 263 2 302 2 218 1 170 1 19 2 375 6 112 2 139 1 21 1 24 1 23 1 72 2 
146 1 314 4 118 2 48 3 29 1 316 1 7 1 8 1 208 1 254 1 77 10 275 19 255 2 185 1 214 6 342 3 162 1 136 1 263 3 302 3 218 1 170 1 325 1 19 3 240 1 375 9 112 1 139 1 21 2 23 1 72 3 24 3 142 1 
146 1 314 5 118 1 48 3 29 1 316 1 7 1 8 1 208 1 77 7 254 1 275 17 255 2 185 1 214 6 342 3 162 1 136 1 263 3 302 3 218 2 170 1 325 1 240 1 19 3 375 10 112 1 139 1 21 2 23 1 72 3 24 2 142 1 
146 1 314 2 48 1 316 1 7 1 208 1 77 4 275 8 185 1 214 2 342 1 162 1 263 1 136 1 302 1 170 1 19 2 375 4 112 1 139 1 24 1 72 1 23 1 
146 1 314 2 118 2 48 1 316 1 8 1 77 6 254 1 275 12 255 2 185 1 214 2 342 1 162 1 263 1 302 1 218 1 325 1 19 1 375 6 112 1 21 2 72 2 24 2 142 1 
146 1 314 5 118 1 48 4 29 1 316 1 7 1 8 1 208 1 254 1 77 8 275 18 255 2 185 1 214 8 342 4 162 1 136 1 263 4 302 4 218 2 170 1 325 1 19 3 240 2 375 10 112 1 139 1 21 2 23 1 72 3 24 2 142 1 
146 1 314 6 118 2 48 4 316 1 8 1 254 1 77 7 275 16 255 3 185 1 214 8 342 4 162 1 263 4 302 4 218 3 325 1 19 3 240 2 375 9 112 1 285 1 21 3 72 3 24 2 142 1 
314 6 136 3 218 3 7 2 19 3 208 3 77 4 275 7 375 3 139 1 24 1 23 1 72 1 
146 1 314 4 118 1 48 4 316 1 7 1 8 1 208 1 254 1 77 8 275 18 255 2 185 1 214 8 342 4 162 1 136 1 263 4 302 4 218 1 170 1 325 1 19 3 240 2 375 10 112 1 139 1 285 1 21 2 23 1 72 3 24 2 142 1 
314 3 342 2 48 2 263 2 136 1 302 2 218 1 170 1 19 2 240 1 7 1 208 1 77 4 275 8 375 4 139 1 24 1 72 1 23 1 214 4 
314 2 136 1 170 1 5 1 7 1 19 2 208 1 77 3 275 6 375 3 139 1 23 1 72 1 24 1 
314 2 342 1 118 1 48 1 29 1 263 1 302 1 218 1 19 1 77 2 255 1 275 4 375 2 21 1 24 1 214 2 72 1 
280 1 146 1 314 2 118 1 316 1 218 1 19 1 77 4 275 7 255 1 375 3 112 2 21 1 24 1 72 1 
314 9 118 2 287 1 355 1 48 2 316 2 7 1 208 2 77 12 255 2 275 23 214 4 280 1 342 2 136 2 263 2 302 2 218 4 170 1 19 5 240 2 375 11 110 1 112 2 139 1 21 2 23 1 72 3 24 3 
77 1 275 1 112 1 
275 1 375 1 316 1 
342 1 314 3 118 1 48 1 29 1 263 1 302 1 218 1 19 2 77 3 275 6 255 1 375 3 125 1 21 1 214 2 72 1 24 1 
146 1 314 2 118 2 48 1 316 1 8 1 77 6 254 1 275 12 255 2 185 1 214 2 342 1 162 1 263 1 302 1 218 1 325 1 19 1 375 6 112 1 21 2 72 2 24 2 142 1 
314 2 136 1 218 1 19 1 208 1 77 3 275 6 375 3 23 1 72 1 24 1 
314 2 342 1 48 1 136 1 263 1 302 1 218 1 19 1 7 1 240 1 208 1 77 2 275 3 375 1 110 1 139 1 214 2 
342 1 314 5 48 1 162 1 263 1 136 2 302 1 168 1 218 2 19 3 208 2 77 5 275 10 375 5 214 2 23 1 72 2 24 2 
342 1 314 1 48 1 162 1 263 1 302 1 218 1 275 2 375 2 21 1 214 2 72 1 
314 2 342 1 118 1 48 1 162 1 263 1 302 1 218 1 19 1 77 2 255 1 275 4 375 2 21 1 24 1 214 2 72 1 
342 3 314 2 48 3 162 1 263 3 136 1 302 3 218 1 240 1 19 1 208 1 77 2 275 3 110 1 375 1 285 1 214 6 
146 1 314 12 118 3 48 5 29 1 316 3 7 1 208 3 77 18 275 34 255 3 318 1 214 10 280 1 342 5 162 1 189 1 136 3 263 5 302 5 218 5 170 1 240 2 303 1 19 7 110 1 375 16 112 4 139 1 285 1 21 3 23 2 72 5 24 5 
241 1 376 1 290 1 357 1 344 1 379 1 339 1 
0 1 290 1 344 1 357 1 293 1 241 1 171 1 9 1 376 1 35 1 379 1 339 1 
363 1 145 1 100 1 227 1 87 1 228 1 217 1 61 1 268 1 5 1 334 1 
130 1 100 1 227 1 87 1 228 1 217 1 290 1 357 2 166 1 39 1 66 1 334 1 241 2 363 1 124 1 284 1 339 1 268 1 
330 1 130 2 227 1 87 1 228 1 331 1 217 1 290 2 357 2 166 1 39 1 66 2 334 2 180 1 241 2 20 1 363 1 124 1 284 1 338 1 339 1 268 3 367 1 
330 1 227 2 228 2 331 1 290 2 357 2 50 1 334 2 180 1 363 1 124 1 338 1 339 1 367 1 130 2 87 1 217 2 237 1 39 1 66 2 241 2 20 1 284 1 268 3 
100 1 227 3 228 3 30 1 288 1 248 1 149 1 253 2 334 1 180 1 363 1 364 1 338 1 321 2 279 1 130 1 87 1 217 3 167 1 60 1 237 1 20 1 268 4 
130 1 100 1 227 3 87 1 228 3 288 1 217 3 30 1 248 1 60 1 237 1 253 2 334 1 180 1 20 1 363 1 364 1 338 1 225 1 321 2 268 4 279 1 
363 1 227 1 87 1 228 1 217 1 81 1 
130 1 100 2 227 7 133 1 228 6 87 3 217 7 90 1 273 1 191 1 63 1 169 1 177 1 32 1 334 2 363 2 109 1 81 1 212 1 354 1 268 3 
197 1 314 2 227 1 27 1 48 2 228 1 289 2 290 1 102 1 357 2 273 1 7 1 334 1 208 1 363 1 77 3 275 6 124 1 365 1 155 1 80 1 82 2 339 2 214 4 130 1 342 2 87 1 217 1 166 1 136 1 263 2 302 2 39 1 66 1 170 1 19 2 107 1 241 2 375 3 139 1 284 1 46 1 24 1 72 1 23 1 268 1 380 1 
25 1 100 1 227 1 228 1 288 1 272 2 30 1 248 2 49 1 199 1 253 3 364 1 123 1 260 2 321 3 129 1 279 1 37 2 217 1 16 1 60 1 92 1 266 1 348 2 219 1 244 1 225 1 268 2 
130 1 227 2 228 2 87 2 30 1 217 2 273 1 191 1 334 1 363 1 81 1 310 1 268 2 
145 1 100 1 227 4 87 1 228 4 164 1 217 4 61 1 237 1 273 1 334 1 363 1 268 1 
130 1 227 2 228 2 87 2 217 2 165 1 190 1 177 1 104 1 334 1 20 1 363 1 212 1 268 1 
363 1 374 1 100 1 227 1 87 1 228 1 217 1 195 1 249 1 278 1 
363 1 109 1 227 2 87 1 194 1 228 2 217 2 90 1 273 1 268 1 334 1 
145 1 100 1 227 5 228 4 87 2 164 1 217 5 61 1 90 1 273 1 169 1 63 1 334 2 20 1 363 2 268 3 
145 1 100 1 227 5 228 4 87 2 164 1 217 5 61 1 90 1 273 1 63 1 334 2 20 1 363 2 71 1 268 3 
130 1 100 1 227 1 87 1 228 1 217 1 290 1 357 2 50 1 39 1 66 1 334 1 241 2 363 1 124 1 284 1 339 1 268 1 
130 1 227 1 133 1 228 1 87 2 217 1 191 1 177 1 334 1 20 1 363 1 212 1 268 1 
76 1 297 1 69 1 339 1 84 1 
330 1 288 1 331 1 332 1 60 1 253 2 346 1 76 2 123 1 156 1 377 1 69 1 297 2 339 1 321 2 84 2 11 1 279 1 367 1 
290 1 357 1 264 1 76 1 241 1 69 1 114 1 84 1 86 1 
332 1 69 1 346 1 
243 1 301 1 231 1 5 1 
243 1 301 1 88 1 239 1 231 1 115 1 152 1 
41 1 55 1 115 1 
101 1 301 1 88 3 239 1 64 1 231 1 152 1 243 1 308 1 115 3 83 1 57 2 
33 1 243 1 294 1 301 1 88 2 239 1 231 1 115 2 152 1 
101 1 52 1 211 1 195 1 301 1 88 1 239 1 128 1 278 1 115 1 152 1 
101 1 301 1 88 1 239 1 231 1 115 1 152 1 
101 1 243 1 88 1 239 1 231 2 115 1 152 1 
101 1 301 1 88 2 239 2 231 1 152 2 54 1 44 1 141 1 115 2 
101 1 88 3 301 2 239 1 231 1 152 1 33 2 204 1 274 1 243 1 211 1 222 1 115 3 
101 1 301 1 88 2 239 1 231 1 152 1 202 1 33 1 374 1 243 1 52 1 195 2 115 2 278 1 196 1 
99 1 101 1 88 4 301 2 239 2 231 1 152 2 33 2 204 1 243 1 211 1 294 1 115 4 
101 1 243 1 301 1 88 1 239 1 231 1 115 1 152 1 
188 1 88 4 301 3 239 1 231 2 152 1 33 2 204 1 243 2 308 1 211 1 83 1 115 4 57 1 
101 1 1 1 301 1 88 2 239 1 252 1 231 1 152 1 33 1 243 1 183 1 115 2 
101 1 301 1 88 3 239 1 231 1 152 1 209 1 243 1 308 2 83 1 115 3 57 2 
26 2 301 2 229 1 120 1 
101 1 88 1 239 1 115 1 152 1 161 1 
33 1 101 1 243 1 301 1 88 2 222 1 239 1 231 1 115 2 152 1 
230 1 
101 1 243 1 301 1 88 1 239 1 231 1 115 1 152 1 
33 1 101 1 243 1 301 1 88 3 222 1 239 1 231 1 115 3 57 1 152 1 
204 1 188 1 211 1 301 1 
301 1 231 1 

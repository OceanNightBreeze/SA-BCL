#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 277 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 1 24 1 337 2 57 5 25 1 339 9 134 1 171 1 342 1 89 2 108 1 214 1 268 1 271 1 14 1 247 2 95 2 47 1 125 4 73 1 253 2 203 9 52 1 147 2 100 1 149 2 165 6 81 3 
356 1 24 1 337 2 57 5 25 1 339 9 134 1 171 1 342 1 89 2 108 1 214 1 268 1 271 1 14 1 247 2 95 2 47 1 125 4 73 1 253 2 203 9 52 1 147 2 100 1 149 2 165 6 81 3 
356 1 24 1 337 2 57 6 25 1 339 10 134 1 171 1 342 1 89 2 108 1 214 1 268 1 271 1 14 1 247 2 95 2 47 1 125 5 73 1 253 2 203 10 52 1 147 2 100 1 149 2 165 7 81 4 
356 1 24 1 337 2 57 4 25 1 339 7 134 1 171 1 89 1 108 1 214 1 268 1 271 1 14 1 247 2 95 2 47 1 125 3 73 1 253 2 203 7 52 1 147 2 100 1 149 2 165 4 81 2 
247 1 356 1 57 3 337 1 339 4 134 1 95 1 171 1 125 2 253 1 342 1 203 4 89 2 214 1 147 1 100 1 165 3 81 1 
247 1 196 1 356 1 24 1 57 1 339 2 134 1 95 1 278 1 253 1 203 2 225 1 52 1 214 1 147 1 149 1 
247 2 356 1 57 2 339 3 134 1 95 2 47 1 125 1 203 3 214 1 149 1 165 1 81 1 
356 1 153 1 57 5 337 1 25 1 339 9 134 1 171 1 89 2 342 1 214 1 269 1 247 2 95 2 47 1 125 4 73 1 253 1 203 9 100 1 147 1 149 1 165 7 81 3 
356 1 153 1 57 5 337 1 25 1 339 9 134 1 171 1 89 2 342 1 214 1 269 1 247 2 95 2 47 1 125 4 73 1 253 1 203 9 100 1 147 1 149 1 165 7 81 3 
277 1 
353 1 260 1 363 2 
333 2 283 2 109 2 137 2 371 1 372 2 200 2 347 1 
56 1 333 2 283 2 360 1 104 1 232 1 287 1 367 1 109 3 111 1 156 1 137 2 371 1 266 2 176 1 372 2 344 1 242 1 217 1 347 1 290 1 349 2 94 1 160 2 71 2 200 3 180 1 223 1 179 1 350 1 202 1 127 1 326 1 327 1 280 2 129 1 22 1 
333 1 283 1 109 1 137 1 32 1 371 1 372 1 345 1 297 1 200 1 
159 1 338 1 84 1 200 1 297 1 172 1 109 1 353 1 137 1 128 1 53 1 332 1 37 1 348 1 
333 1 159 1 283 1 338 2 84 1 172 2 200 1 297 1 109 1 353 1 137 1 372 1 332 1 37 1 348 1 
380 1 338 1 78 1 172 1 36 1 
0 1 380 1 338 2 353 1 78 1 222 1 172 2 37 1 
380 1 338 1 172 1 
333 1 338 1 283 1 297 1 172 1 200 1 109 1 8 1 137 1 32 1 371 1 372 1 78 1 345 1 
353 1 
380 1 338 2 353 1 135 1 78 1 222 1 172 2 37 1 
195 1 1 1 338 5 17 1 376 2 222 1 172 5 213 1 351 1 124 1 365 1 380 2 75 1 353 1 78 2 91 2 37 1 245 1 208 2 
277 1 
333 1 283 1 200 2 188 1 109 2 137 2 33 1 372 1 347 2 
198 1 27 1 262 1 
94 1 104 1 160 1 71 1 200 1 287 1 179 1 127 1 109 1 156 1 215 1 266 1 242 1 344 1 347 1 290 1 
333 1 119 1 283 1 94 1 104 1 160 1 71 1 287 1 200 2 179 1 262 1 127 1 109 2 156 1 137 1 66 1 266 1 344 1 242 1 290 1 
333 4 119 2 283 4 200 5 109 5 137 5 265 1 66 1 146 1 33 1 372 1 128 1 347 1 206 1 
333 2 283 2 109 2 323 1 137 2 32 1 297 1 200 2 
333 3 119 1 283 3 109 3 137 3 372 1 200 3 347 1 
333 1 283 1 109 1 137 1 32 1 297 1 200 1 
333 1 283 1 109 1 137 1 372 1 33 1 297 1 200 1 188 1 
56 1 333 3 283 3 338 1 360 1 104 1 232 1 84 1 287 1 172 1 367 1 109 4 111 1 156 1 137 3 66 1 371 1 266 1 372 2 33 1 344 1 242 1 347 1 290 1 348 1 159 1 119 1 349 2 94 1 42 1 160 1 71 1 200 4 297 1 179 1 350 1 142 1 127 1 326 1 327 1 280 1 129 1 22 1 332 1 
333 1 283 1 119 1 109 2 137 2 265 1 128 1 200 2 347 1 
333 3 159 1 338 1 119 2 283 3 84 1 172 1 297 1 200 3 142 1 109 3 353 1 137 3 66 1 372 1 33 1 139 1 332 1 348 1 
333 2 119 1 283 2 27 1 200 2 262 1 109 2 137 2 33 1 372 1 
94 1 104 1 160 1 71 1 200 1 287 1 179 1 127 1 109 1 156 1 266 1 242 1 344 1 347 1 290 1 
39 1 94 1 104 1 160 1 71 1 200 1 287 1 179 1 109 1 156 1 266 1 344 1 347 1 290 1 118 1 
27 2 133 1 360 1 168 1 262 2 367 2 110 1 190 1 241 1 346 1 248 1 198 2 349 2 295 1 325 1 180 2 350 1 181 1 226 1 326 1 327 1 280 4 129 1 22 1 
333 1 283 1 109 1 137 1 323 1 297 1 200 1 332 1 
61 1 150 1 
61 1 150 1 
9 1 193 1 
9 1 193 1 
9 1 193 1 
18 1 61 1 150 1 
318 1 61 1 150 1 
303 1 9 1 193 1 61 2 301 1 150 2 
18 1 61 1 150 1 
18 1 61 1 150 1 
64 1 61 1 150 1 
64 1 61 1 150 1 
64 1 61 1 150 1 
333 2 335 1 338 1 283 2 186 1 166 1 200 2 172 1 299 1 61 1 234 1 87 1 109 2 264 1 137 2 305 1 11 1 216 1 20 1 318 1 329 1 115 1 347 1 150 1 
151 2 335 2 336 1 40 1 338 2 166 2 231 1 172 2 61 2 173 1 303 1 314 1 264 1 353 1 239 1 305 2 329 2 115 3 150 2 
253 1 337 1 147 1 
253 1 225 1 147 1 
337 2 178 1 225 1 199 1 285 1 147 3 
337 1 225 1 359 1 199 1 285 1 147 2 
337 1 225 1 199 1 285 2 147 2 
1 2 338 5 133 1 361 1 58 1 172 5 260 1 363 3 234 1 235 2 236 1 237 1 87 1 110 1 241 1 346 1 91 1 245 1 37 1 221 1 376 1 222 1 351 3 380 1 162 1 353 2 99 2 20 1 78 4 310 1 207 2 208 1 
229 1 1 6 338 9 133 3 361 1 58 3 172 9 260 3 363 9 235 6 87 4 237 2 110 3 241 3 346 3 91 2 36 5 37 1 245 1 16 1 324 1 17 1 376 2 222 1 48 1 351 8 380 6 227 1 353 5 281 5 101 1 78 7 310 2 207 6 208 2 
1 2 338 3 133 1 58 1 172 3 260 2 363 4 235 2 236 1 237 1 87 1 110 1 241 1 346 1 91 1 37 1 221 1 376 1 17 1 351 3 353 3 99 1 78 2 310 1 208 1 207 2 
1 4 338 4 133 2 58 2 172 4 260 3 363 7 235 4 236 1 237 1 87 2 110 2 241 2 346 2 91 1 37 1 16 1 221 1 376 1 17 1 48 1 351 5 353 4 99 2 101 1 78 3 310 1 207 4 208 1 
277 1 
104 1 343 1 
26 1 
104 1 156 1 344 1 
104 1 114 1 
104 1 344 1 
249 2 120 1 104 3 156 1 344 1 34 1 
355 1 133 1 168 2 154 1 59 2 377 1 180 4 367 3 144 1 181 3 289 1 280 7 306 1 346 1 330 1 148 1 38 1 
355 1 133 1 168 2 154 1 59 2 377 1 180 4 367 3 144 1 181 3 289 1 280 7 306 1 346 1 330 1 148 1 38 1 
355 1 133 1 168 2 154 1 59 2 377 1 180 4 19 1 367 3 144 1 181 3 289 1 280 7 306 1 346 1 330 1 148 1 38 1 
355 1 103 3 133 4 154 2 168 5 340 4 58 3 59 3 367 15 110 3 189 1 289 5 267 1 241 3 346 4 35 1 117 1 38 1 349 2 321 1 377 2 180 16 350 1 378 1 144 1 181 10 326 1 327 1 228 1 280 31 306 1 129 1 330 2 148 2 
355 1 349 4 133 1 154 1 168 3 59 2 377 1 180 5 350 2 367 4 144 1 181 4 326 2 327 2 289 1 280 9 90 1 129 2 346 1 330 1 35 1 148 1 308 1 38 1 
311 1 356 1 57 1 337 1 339 2 134 1 211 1 259 1 287 1 368 1 214 1 240 1 10 1 266 1 177 1 247 1 178 1 160 1 95 1 375 1 71 1 179 1 253 1 203 2 225 1 147 2 204 1 328 1 149 1 165 1 
311 1 356 1 57 1 337 1 339 3 134 1 211 1 287 1 368 1 263 1 315 1 10 1 266 1 177 1 247 1 178 1 293 1 160 1 95 1 375 1 71 1 179 1 253 1 203 3 225 1 147 2 204 1 328 1 149 1 165 2 
356 1 57 1 337 1 339 2 134 1 211 1 287 1 368 1 263 1 10 1 266 1 177 1 293 1 178 1 160 1 71 1 179 1 253 1 203 2 225 1 147 2 204 1 328 1 149 1 165 2 
334 1 247 1 104 1 339 1 160 1 95 1 71 1 46 1 287 1 201 1 179 1 203 1 51 1 368 2 315 1 266 1 10 2 344 1 270 1 177 2 205 1 149 2 290 1 
311 1 337 1 339 1 211 1 287 1 368 1 263 1 214 1 240 1 10 1 266 1 177 1 247 1 178 1 160 1 95 1 375 1 71 1 179 1 253 1 203 1 225 1 147 2 204 1 328 1 149 1 
49 1 
1 2 338 5 104 1 287 1 237 1 109 1 113 2 65 1 344 1 290 2 245 1 246 1 348 1 292 1 159 1 251 2 160 2 71 2 200 1 297 1 351 2 74 2 161 1 353 2 307 2 77 1 128 1 205 1 256 2 208 1 354 1 209 1 169 1 84 1 172 5 363 2 260 2 364 2 137 1 175 4 266 2 91 1 37 1 373 1 44 1 45 2 376 1 222 3 179 1 380 6 50 1 51 1 53 1 332 1 381 1 
159 1 292 1 338 3 135 1 84 1 222 1 297 1 172 3 200 1 74 1 161 1 380 2 50 1 109 1 175 2 137 1 128 1 332 1 53 1 373 1 348 1 381 1 
338 3 135 1 84 1 172 3 109 1 137 1 175 3 373 1 37 1 348 1 292 1 159 1 200 1 297 1 222 1 161 1 380 1 50 1 353 1 128 1 53 1 332 1 256 1 381 1 
338 3 135 1 84 1 172 3 109 1 137 1 175 3 373 1 37 1 348 1 292 1 159 1 251 1 222 1 200 1 297 1 161 1 74 1 50 1 380 2 353 1 128 1 53 1 332 1 256 1 381 1 
1 1 338 5 62 1 109 1 113 2 65 1 245 1 246 1 348 1 159 1 292 1 251 4 297 1 200 1 351 1 74 4 161 1 353 5 128 1 307 2 256 4 208 1 135 1 84 1 172 5 260 2 364 2 313 1 29 1 175 6 137 1 91 1 273 1 373 1 37 5 219 1 45 2 376 1 222 3 380 7 50 1 332 1 53 1 381 1 
1 1 338 4 109 1 113 2 65 1 246 1 245 1 348 1 159 1 292 1 251 2 297 1 200 1 351 1 161 1 74 2 353 2 128 1 307 2 256 2 208 1 84 1 172 4 260 2 363 2 364 2 175 4 137 1 91 1 373 1 37 1 44 1 45 2 376 1 222 2 50 1 380 4 332 1 53 1 381 1 
1 1 338 4 84 1 172 4 260 2 62 1 364 2 29 1 109 1 113 2 65 1 137 1 175 4 91 1 37 1 246 1 373 1 245 1 348 1 219 1 292 1 159 1 251 2 45 2 376 1 222 2 200 1 297 1 351 1 74 2 161 1 380 4 50 1 353 1 307 2 128 1 53 1 332 1 256 2 208 1 381 1 
1 1 338 4 84 1 172 4 260 2 62 1 364 2 29 1 109 1 113 2 65 1 137 1 175 4 91 1 37 1 246 1 373 1 245 1 348 1 219 1 292 1 159 1 251 2 45 2 376 1 222 2 200 1 297 1 351 1 74 2 161 1 380 4 50 1 353 1 307 2 128 1 53 1 332 1 256 2 208 1 381 1 
1 1 338 4 187 1 84 1 286 2 172 4 363 2 364 2 29 1 109 1 369 2 113 2 65 1 137 1 175 4 91 1 272 1 37 1 373 1 245 1 348 1 292 1 159 1 251 2 376 1 222 2 200 1 297 1 351 1 74 2 161 1 380 4 50 1 353 1 128 1 53 1 332 1 256 2 130 1 208 1 381 1 
1 1 338 4 84 1 172 4 260 2 62 1 364 2 29 1 313 1 109 1 113 2 65 1 137 1 175 5 91 1 37 1 246 1 245 1 373 1 348 1 219 1 292 1 159 1 251 3 45 2 376 1 222 2 200 1 297 1 351 1 161 1 74 3 50 1 380 5 353 1 307 2 128 1 53 1 332 1 256 3 208 1 381 1 
1 1 338 4 84 1 172 4 260 2 62 1 364 2 29 1 313 1 109 1 113 2 65 1 137 1 175 5 91 1 37 1 246 1 245 1 373 1 348 1 219 1 292 1 159 1 251 3 45 2 376 1 222 2 200 1 297 1 351 1 161 1 74 3 50 1 380 5 353 1 307 2 128 1 53 1 332 1 256 3 208 1 381 1 
1 1 338 4 84 1 187 1 286 2 172 4 363 2 364 2 109 1 369 2 113 2 65 1 137 1 175 4 91 1 37 1 373 1 245 1 348 1 292 1 159 1 251 2 44 1 376 1 222 2 200 1 297 1 351 1 74 2 161 1 380 4 50 1 353 1 128 1 53 1 332 1 256 2 381 1 208 1 
349 2 277 1 326 1 360 1 327 1 129 1 22 1 325 1 350 1 
56 1 103 3 27 4 360 1 133 2 168 1 340 3 58 2 341 1 262 11 367 6 110 2 370 1 289 1 267 1 241 1 217 1 346 1 117 1 347 1 140 1 198 11 349 4 180 8 350 2 379 1 181 2 304 1 326 2 327 2 280 14 129 2 22 2 
333 1 56 1 283 1 131 1 27 1 104 1 360 1 287 1 367 1 109 2 156 1 215 1 137 1 266 1 66 1 344 1 242 1 217 1 347 1 290 1 158 1 119 1 94 1 349 2 160 1 71 1 200 2 179 1 180 1 350 1 379 1 127 1 326 1 327 1 280 2 129 1 22 1 79 1 
56 1 333 1 283 1 104 2 154 1 58 2 59 1 232 2 287 2 109 3 110 2 156 2 66 1 289 4 191 1 242 2 344 2 241 2 346 3 347 2 290 1 291 2 198 7 119 1 349 6 160 3 71 3 252 2 200 3 350 3 127 2 129 3 22 3 355 1 27 7 360 3 133 3 168 4 262 7 367 10 30 1 263 1 137 1 266 3 217 1 38 1 94 2 322 1 179 2 180 10 96 2 379 1 144 1 181 8 326 3 327 3 145 2 280 20 330 1 
333 1 56 1 283 1 357 1 104 3 360 2 170 1 259 1 287 2 6 1 367 1 109 1 263 1 31 1 137 1 266 8 176 2 344 2 217 1 290 2 119 1 349 4 43 1 160 8 71 7 296 1 200 1 325 1 179 2 180 1 350 2 51 1 326 2 327 2 280 2 129 2 22 2 255 1 205 1 
333 1 283 1 27 1 360 1 133 1 168 1 58 1 262 1 367 2 109 1 110 1 137 1 372 1 33 1 241 1 346 1 198 1 349 2 200 1 180 1 350 1 379 1 181 1 326 1 98 1 327 1 280 3 129 1 22 1 
198 1 349 2 27 1 360 1 133 1 325 1 180 2 350 1 262 1 181 1 226 1 110 1 326 1 327 1 289 1 280 2 129 1 22 1 
248 1 198 1 349 2 27 1 360 1 168 1 325 1 350 1 262 1 367 2 181 1 326 1 327 1 280 2 129 1 241 1 346 1 22 1 
27 2 133 1 360 1 168 1 58 1 262 2 367 2 110 1 289 1 241 1 346 1 198 2 349 2 325 1 180 2 350 1 181 2 326 1 327 1 280 4 129 1 22 1 
198 1 349 2 27 1 360 1 133 1 296 1 180 2 350 1 262 1 181 1 226 1 110 1 326 1 327 1 289 1 280 2 129 1 22 1 
248 1 198 1 349 2 27 1 360 1 168 1 296 1 350 1 262 1 367 2 181 1 326 1 327 1 280 2 129 1 241 1 346 1 22 1 
27 2 133 1 360 1 168 1 58 1 262 2 367 2 110 1 289 1 241 1 346 1 198 2 349 2 296 1 180 2 350 1 181 2 326 1 327 1 280 4 129 1 22 1 
27 2 133 1 360 1 168 1 58 1 262 2 367 2 110 1 289 1 241 1 346 1 198 2 349 2 180 2 350 1 181 2 326 1 327 1 280 4 129 1 22 1 
56 1 104 1 360 1 232 1 287 1 367 1 109 1 156 1 266 1 344 1 242 1 217 1 347 1 290 1 94 1 349 2 160 1 71 1 200 1 180 1 179 1 350 1 127 1 326 1 327 1 280 2 129 1 22 1 
56 1 104 1 360 1 287 1 86 1 367 1 109 1 156 1 266 1 344 1 217 1 347 1 118 1 290 1 39 1 94 1 349 2 160 1 71 1 200 1 180 1 179 1 350 1 326 1 327 1 280 2 129 1 22 1 
27 2 133 1 360 1 168 1 58 1 262 2 367 2 110 1 289 1 241 1 346 1 198 2 349 2 180 2 350 1 379 1 181 2 326 1 327 1 280 4 129 1 22 1 
27 2 133 1 104 1 360 1 168 1 58 1 232 1 287 1 259 1 262 2 367 2 110 1 109 1 156 1 289 1 266 1 241 1 242 1 344 1 346 1 291 1 198 2 94 1 349 2 160 1 71 1 200 1 180 2 179 1 350 1 127 1 181 2 326 1 327 1 280 4 129 1 22 1 
333 1 283 1 27 1 360 1 133 1 105 1 58 1 262 1 367 1 109 1 110 1 137 1 289 1 372 1 33 1 241 1 346 1 198 1 349 2 200 1 180 2 350 1 379 1 181 1 326 1 327 1 280 3 129 1 22 1 
103 1 133 3 168 3 28 2 340 2 58 3 60 1 367 10 174 1 238 1 110 3 289 3 267 1 90 1 241 3 346 3 117 1 349 4 121 1 180 9 224 1 350 2 181 6 326 2 327 2 280 19 129 2 21 2 309 1 54 1 
103 2 133 3 168 2 28 4 340 2 58 3 60 1 367 12 174 1 110 3 289 2 12 1 90 1 241 2 346 2 35 2 117 2 15 1 349 6 70 1 121 2 180 14 224 1 350 3 352 1 181 4 326 3 327 3 280 26 129 3 21 1 184 1 23 1 54 2 
103 3 230 1 154 1 58 4 340 4 59 1 60 1 238 1 110 4 289 4 241 4 12 1 346 5 117 3 15 1 349 6 70 1 121 1 350 3 352 1 129 3 21 1 23 1 355 1 133 5 168 4 28 4 367 21 174 1 267 1 90 1 35 1 38 1 180 20 224 1 144 1 181 8 326 3 327 3 280 41 184 1 330 1 54 2 
355 1 230 1 103 3 133 5 154 1 168 4 28 4 340 4 58 4 59 1 60 1 367 18 174 1 238 1 110 4 289 3 267 1 12 1 90 1 241 3 346 4 35 2 117 3 38 1 15 1 349 8 70 1 121 1 180 20 224 1 350 4 352 1 144 1 181 7 326 4 327 4 280 38 129 4 21 1 184 1 330 1 23 1 54 2 
355 1 103 4 133 8 154 1 168 7 28 4 340 4 58 7 59 1 60 1 367 25 174 1 110 7 289 7 267 2 12 1 90 1 241 7 346 8 35 1 117 2 38 1 15 1 140 2 349 4 70 1 121 1 180 27 224 1 350 2 352 1 144 1 181 14 326 2 327 2 280 52 129 2 21 1 184 1 330 1 23 1 54 1 
143 1 335 1 303 1 314 1 166 1 305 1 329 1 61 1 173 1 150 1 
186 1 318 1 
335 1 76 1 166 1 305 1 83 1 362 1 329 1 61 1 150 1 
7 1 18 1 
64 1 164 1 301 1 
151 1 335 1 336 1 40 1 338 1 166 1 231 1 172 1 61 1 173 1 303 1 314 1 264 1 353 1 305 1 329 1 115 2 150 1 
151 1 335 1 336 1 40 1 338 1 166 1 231 1 172 1 61 1 173 1 303 1 314 1 264 1 353 1 305 1 329 1 115 2 150 1 
151 1 335 1 336 1 40 1 338 1 166 1 231 1 172 1 61 1 173 1 303 1 314 1 264 1 353 1 305 1 329 1 115 2 150 1 
7 1 18 1 301 1 
7 1 18 1 301 1 
64 1 164 1 
64 1 164 1 301 1 
11 1 299 1 
151 1 333 2 336 1 335 1 338 1 283 2 166 1 186 1 172 1 61 1 234 1 87 1 109 2 316 1 137 2 216 1 11 1 318 1 115 1 347 1 200 2 299 1 305 1 78 1 20 1 329 1 150 1 
56 1 357 1 104 1 360 1 287 1 233 1 367 1 109 2 137 2 266 2 176 2 344 1 217 1 157 1 349 2 160 2 71 2 200 2 179 1 180 1 350 1 379 1 97 1 302 1 326 1 327 1 279 1 280 2 129 1 22 1 255 1 
311 1 337 1 178 1 160 2 211 1 71 2 212 1 287 1 259 1 179 1 253 1 225 1 263 1 112 1 266 2 147 2 204 1 320 1 177 1 
311 1 337 1 178 1 160 1 211 1 71 1 212 1 287 1 179 1 253 1 225 1 263 1 266 1 147 2 204 1 13 1 177 1 
104 1 284 1 160 1 71 1 287 1 179 1 51 1 112 1 266 1 344 1 270 1 177 1 290 1 205 1 
311 1 337 1 178 1 160 1 211 1 71 1 212 1 287 1 179 1 253 1 225 1 263 1 112 1 266 1 147 2 204 1 320 1 177 1 
167 1 
277 1 
1 1 338 1 172 1 260 1 363 1 91 1 246 1 245 1 37 1 45 1 376 1 222 1 351 1 380 1 353 2 307 1 208 1 
1 8 2 2 338 5 104 10 5 1 58 2 287 4 235 6 237 2 110 2 156 3 114 2 67 2 343 3 344 3 241 2 346 2 116 2 290 1 245 4 195 1 249 2 159 2 69 2 160 3 71 3 252 2 298 1 351 9 353 8 208 4 207 6 82 2 133 2 258 1 169 1 259 1 172 5 213 1 136 2 363 12 260 6 88 2 266 3 34 1 91 4 37 2 41 1 275 2 376 4 222 3 179 3 380 5 102 1 
1 5 338 1 3 1 103 1 133 2 169 1 340 1 58 2 172 1 136 2 363 6 260 3 235 5 237 1 110 2 67 1 12 1 241 2 218 1 346 2 91 2 117 1 245 2 37 2 15 1 70 1 376 2 222 1 351 8 380 1 353 5 184 1 23 1 207 5 208 2 
333 1 355 1 1 2 338 1 283 1 133 2 154 1 106 1 172 1 136 2 109 1 8 1 137 1 67 1 32 1 371 1 372 1 345 1 346 1 91 1 245 1 219 1 376 1 297 1 200 1 351 2 330 1 208 1 
195 1 1 1 376 1 213 1 351 1 353 1 91 1 245 1 37 1 208 1 
1 5 133 2 58 2 252 1 136 2 363 10 260 5 235 5 351 5 110 2 353 5 67 1 241 2 346 2 207 5 
380 1 338 1 353 1 172 1 222 1 37 1 
1 2 338 3 104 1 5 2 169 2 287 1 172 3 288 1 237 2 266 4 344 1 91 2 290 2 245 1 374 1 41 1 160 4 71 4 17 1 376 2 222 2 179 1 351 2 380 4 51 1 77 1 205 1 354 1 208 2 
56 1 333 2 283 2 104 1 360 1 232 1 287 1 367 1 109 3 111 1 156 1 137 2 266 1 371 1 372 2 242 1 344 1 347 1 290 1 349 2 94 1 160 1 71 1 200 3 179 1 350 1 127 1 326 1 327 1 280 1 129 1 22 1 
1 2 169 1 59 1 376 1 260 2 363 4 235 2 351 1 237 1 353 4 91 1 245 1 37 2 207 2 208 1 
335 1 166 1 312 1 
257 1 335 1 166 1 11 1 173 1 
335 1 166 1 312 1 
335 1 166 1 312 1 
335 1 166 1 220 1 
335 1 166 1 220 1 
335 1 166 1 220 1 
335 1 166 1 
61 1 150 1 
355 1 349 4 133 1 168 2 154 1 59 1 180 4 350 2 367 4 144 1 181 3 326 2 327 2 289 1 280 8 129 2 346 1 35 1 330 1 38 1 
277 1 
349 2 133 1 4 1 168 1 58 1 180 2 350 1 367 2 181 2 110 1 326 1 327 1 289 1 280 4 241 1 129 1 346 1 
103 1 133 1 168 1 340 2 58 1 180 3 367 4 110 1 181 2 289 1 280 7 267 1 241 1 346 1 117 1 
355 1 103 2 133 3 154 2 168 5 58 2 340 2 59 1 341 1 367 12 110 2 289 4 267 1 241 2 346 3 35 2 38 1 140 1 349 4 180 11 350 2 144 1 181 9 326 2 327 2 280 23 129 2 330 2 55 1 
367 1 280 1 340 1 
103 1 280 1 180 1 
349 2 133 1 4 1 168 2 58 1 252 1 180 3 350 1 367 3 110 1 181 3 326 1 327 1 289 1 280 6 129 1 241 1 346 1 
103 1 133 2 168 1 340 1 58 2 367 6 110 2 289 1 90 1 241 2 12 1 346 2 117 1 15 1 349 2 70 1 180 6 350 1 181 2 326 1 327 1 280 12 129 1 184 1 23 1 
355 1 133 1 154 1 168 1 180 3 367 3 181 2 289 1 280 6 346 1 330 1 
349 2 168 1 154 1 180 1 350 1 367 2 144 1 181 2 326 1 327 1 289 1 280 3 129 1 330 1 35 1 38 1 55 1 
355 1 349 2 133 2 154 2 168 3 106 1 180 5 350 1 367 5 181 5 326 1 327 1 289 2 280 10 129 1 90 1 346 2 330 2 
349 2 133 1 180 2 350 1 110 1 181 1 326 1 327 1 289 1 280 2 90 1 129 1 
349 2 133 1 168 1 58 1 180 2 350 1 367 2 181 2 110 1 326 1 327 1 289 1 280 4 241 1 90 1 129 1 346 1 
349 6 154 1 168 1 180 1 350 3 367 2 238 1 181 2 326 3 327 3 289 1 280 3 90 1 129 3 35 1 330 1 55 1 
355 2 103 3 133 5 4 1 154 3 168 7 340 4 58 3 59 1 367 18 238 1 110 3 189 1 289 5 267 1 90 1 241 3 346 5 35 2 117 1 38 1 349 10 321 1 180 16 378 1 350 5 144 1 181 12 326 5 327 5 280 34 129 5 330 3 55 1 
355 1 103 1 133 1 154 1 168 2 340 1 59 1 367 4 90 1 346 1 117 1 38 1 349 2 180 4 350 1 144 1 181 2 326 1 327 1 280 8 129 1 184 1 330 1 
355 1 103 1 133 2 4 1 168 2 154 1 340 2 58 1 59 1 367 5 110 1 289 1 267 1 90 1 346 1 117 1 38 1 349 4 180 6 350 2 144 1 181 3 326 2 327 2 280 11 129 2 184 1 330 1 
355 1 103 1 133 3 4 1 154 1 168 3 340 1 58 2 59 1 367 10 110 2 289 1 12 1 90 1 241 2 346 3 35 1 117 1 38 1 15 1 349 6 70 1 180 9 350 3 144 1 181 4 326 3 327 3 280 19 129 3 184 1 330 1 23 1 
355 1 103 1 133 3 4 1 154 1 168 3 340 1 58 2 59 1 367 7 110 2 289 2 90 1 241 1 12 1 346 2 35 1 117 1 38 1 15 1 349 6 70 1 180 10 350 3 144 1 181 5 326 3 327 3 280 17 129 3 184 1 330 1 23 1 
355 1 103 1 133 1 154 1 168 2 340 1 59 1 367 4 90 1 346 1 117 1 38 1 349 2 180 4 350 1 144 1 181 2 326 1 327 1 280 8 129 1 184 1 330 1 
103 1 133 2 168 1 340 1 58 2 367 6 110 2 289 1 90 1 241 2 12 1 346 2 117 1 15 1 349 2 70 1 180 6 350 1 181 2 326 1 327 1 280 12 129 1 184 1 23 1 
355 1 103 1 133 3 4 1 154 1 168 3 340 1 58 2 59 1 367 8 110 2 289 2 12 1 90 1 241 1 346 2 35 2 117 1 38 1 15 1 349 8 70 1 180 10 350 4 144 1 181 5 326 4 327 4 280 18 129 4 184 1 330 1 23 1 
103 1 133 3 168 3 340 1 58 3 367 7 238 1 110 3 289 3 12 1 90 1 241 2 346 2 35 2 117 1 15 1 349 8 70 1 180 9 350 4 181 6 326 4 327 4 280 16 129 4 184 1 23 1 
355 1 133 1 154 3 168 3 180 3 367 4 144 1 181 6 289 3 280 7 346 1 330 3 38 2 
355 1 103 1 133 3 154 1 168 3 340 1 58 2 59 1 367 8 238 1 110 2 289 1 12 1 90 1 241 1 346 2 35 2 117 1 38 1 15 1 349 8 70 1 180 10 350 4 144 1 181 4 326 4 327 4 280 18 129 4 184 1 330 1 23 1 
282 1 109 1 137 1 265 1 128 1 200 1 347 1 
282 1 250 1 141 1 72 1 200 1 109 1 137 1 265 1 182 1 128 1 331 1 347 1 
277 1 160 1 266 1 71 1 290 1 
333 1 119 1 283 1 94 1 104 1 160 1 71 1 287 1 200 2 179 1 109 2 156 1 137 1 266 1 344 1 242 1 347 1 290 1 
333 2 283 1 104 3 5 1 287 1 109 2 156 2 137 2 114 1 266 1 242 1 344 2 347 1 348 1 119 1 275 1 94 1 160 1 71 1 200 2 297 1 179 1 332 1 
333 2 283 1 104 3 5 1 287 1 109 2 156 2 137 2 114 1 266 2 344 2 92 1 347 1 118 1 348 1 119 1 275 1 94 1 160 2 71 2 200 2 297 1 179 1 332 1 
338 2 104 4 5 1 172 2 287 1 156 1 114 1 266 3 343 1 344 1 92 1 319 1 290 1 37 1 249 1 159 1 275 1 160 3 71 3 179 1 300 1 380 1 353 1 
159 1 249 1 275 1 338 2 2 1 104 4 160 3 5 1 71 3 287 1 172 2 179 1 380 1 353 1 156 1 114 1 266 3 343 1 344 1 92 1 290 1 37 1 
160 1 266 1 71 1 170 1 287 1 179 1 
357 1 43 1 104 3 160 7 155 1 71 6 170 1 259 1 287 3 6 1 179 2 107 1 263 1 31 1 156 1 266 7 254 1 176 1 344 2 34 1 290 2 
333 1 355 1 283 1 27 1 133 1 104 1 360 2 168 2 154 1 59 1 232 1 287 1 259 1 262 1 367 3 109 2 156 1 137 1 266 1 344 1 242 1 346 1 157 1 347 2 38 1 291 1 198 1 119 1 94 1 349 4 160 1 71 1 200 2 180 3 179 1 350 2 96 1 379 1 144 1 127 1 181 2 326 2 327 2 280 6 129 2 330 1 22 2 
1 1 338 3 2 1 104 2 172 3 213 1 88 1 266 1 343 1 91 2 116 1 290 1 37 1 245 2 195 1 249 1 159 1 41 1 69 1 160 1 71 1 376 2 222 1 351 1 380 2 353 1 78 1 208 2 
249 1 104 2 160 2 258 1 71 2 170 1 259 1 287 2 179 1 156 1 266 2 344 1 34 1 
104 1 160 4 71 4 287 1 259 1 179 1 51 1 266 4 344 1 92 1 290 1 205 1 244 1 
358 1 104 1 322 1 160 2 5 1 155 1 71 2 287 2 179 1 366 1 107 1 156 1 266 2 344 1 
253 1 225 1 160 1 266 1 147 1 204 1 71 1 287 1 179 1 290 1 
357 1 104 1 160 2 71 2 259 1 287 1 179 1 97 1 263 1 266 2 344 1 
357 1 43 1 104 3 160 5 5 1 71 4 259 1 287 2 6 1 179 2 51 1 266 5 344 2 205 1 290 1 244 1 
357 1 43 1 104 3 160 5 5 1 71 4 259 1 287 2 179 2 51 1 266 5 344 2 317 1 205 1 290 1 244 1 
333 1 119 1 283 1 94 1 104 1 160 1 71 1 287 1 200 2 179 1 109 2 156 1 137 1 266 1 344 1 347 1 290 1 118 1 
104 1 160 1 5 1 155 1 71 1 287 2 179 1 107 1 156 1 266 1 254 1 344 1 34 1 
274 1 132 1 183 1 347 1 194 1 
159 1 274 2 338 2 132 1 210 1 84 1 297 1 172 2 85 1 142 1 353 1 78 1 183 2 93 1 347 1 332 1 37 1 194 2 348 1 
132 1 233 1 200 1 302 1 109 1 137 1 279 1 183 1 194 1 
210 1 132 1 85 1 
277 1 
247 1 356 1 57 1 203 1 339 1 134 1 95 1 
203 1 10 1 149 1 
247 1 356 1 57 1 339 3 134 1 95 1 122 1 203 3 214 1 52 2 163 1 243 1 
247 1 356 1 57 1 89 1 203 2 339 2 134 1 95 1 165 1 
247 1 253 1 337 1 57 1 203 1 339 1 214 1 147 1 95 1 171 1 125 1 
247 1 356 1 57 1 203 1 339 1 214 1 95 1 
247 1 356 2 203 1 339 1 214 1 134 1 95 1 
247 2 356 1 197 1 57 1 276 1 339 2 95 2 203 2 214 1 80 1 
247 1 356 1 57 2 25 1 339 3 134 1 95 1 125 1 73 1 203 3 214 1 165 2 81 1 
247 1 356 1 57 1 178 1 337 1 339 2 134 1 95 1 294 1 253 1 225 1 203 2 214 1 147 2 165 1 
247 2 356 1 57 2 339 4 134 1 95 2 125 1 203 4 342 1 89 1 214 1 165 2 81 1 
247 1 356 1 57 1 203 1 339 1 214 1 134 1 95 1 
247 1 356 2 57 3 339 4 134 2 95 1 122 1 125 1 126 1 203 4 52 1 243 1 165 2 81 1 
247 1 356 1 185 1 153 1 57 1 339 2 134 1 95 1 203 2 214 1 138 1 165 1 
247 1 356 1 57 1 339 3 134 1 95 1 122 2 261 1 203 3 214 1 52 2 243 1 
57 2 68 1 123 2 63 1 
247 1 203 1 339 1 214 1 95 1 192 1 
73 1 247 1 356 1 57 1 203 2 339 2 214 1 134 1 95 1 165 1 
152 1 
247 1 356 1 57 1 203 1 339 1 214 1 134 1 95 1 
73 1 247 1 356 1 57 1 203 3 339 3 52 1 214 1 134 1 95 1 165 1 
126 1 57 1 125 1 81 1 
356 1 57 1 

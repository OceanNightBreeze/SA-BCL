#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 87 (18,105,210) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
246 1 69 1 170 1 22 2 39 2 327 1 316 3 9 1 279 2 157 3 245 1 318 1 62 1 
246 2 270 2 224 1 167 2 300 1 170 1 39 2 126 1 327 4 7 1 172 1 149 1 178 1 9 3 279 5 306 2 132 1 62 1 46 2 184 1 69 1 22 2 315 1 316 9 94 1 157 9 245 1 318 6 
246 2 270 2 224 1 167 2 300 1 170 1 39 2 126 1 327 4 7 1 172 1 149 1 178 1 9 3 279 5 306 2 132 1 62 1 46 2 184 1 69 1 22 2 315 1 316 9 94 1 157 9 245 1 318 6 
246 2 270 2 224 1 167 2 300 1 170 1 39 2 126 1 327 5 7 1 172 1 149 1 178 1 9 4 279 6 306 2 132 1 62 1 46 2 184 1 69 1 22 2 315 1 316 10 94 1 157 10 245 1 318 7 
246 2 270 1 224 1 167 2 300 1 170 1 39 2 126 1 327 3 7 1 172 1 178 1 9 2 279 4 306 2 132 1 62 1 46 2 184 1 69 1 22 2 315 1 316 7 94 1 157 7 245 1 318 4 
270 2 46 1 167 1 170 1 22 1 39 1 327 2 172 1 149 1 316 4 178 1 9 1 279 3 157 4 306 1 245 1 318 3 62 1 
246 1 218 1 167 1 140 1 170 1 22 1 39 1 7 1 315 1 316 2 150 1 279 1 157 2 306 1 245 1 62 1 
246 1 270 2 300 1 167 1 170 1 39 2 327 4 172 1 149 1 178 1 9 3 279 5 306 1 16 1 62 1 46 1 69 1 22 2 120 1 316 9 94 1 157 9 245 1 318 7 
246 1 270 2 300 1 167 1 170 1 39 2 327 4 172 1 149 1 178 1 9 3 279 5 306 1 16 1 62 1 46 1 69 1 22 2 120 1 316 9 94 1 157 9 245 1 318 7 
55 1 281 1 258 1 64 1 273 1 326 1 5 1 119 1 90 1 341 1 72 1 230 1 222 1 211 1 
107 1 
107 1 155 1 281 2 258 2 74 1 76 1 198 1 222 1 
213 1 281 5 231 1 258 5 63 1 248 1 236 2 198 2 287 1 107 1 155 1 205 1 174 2 188 1 74 1 156 1 190 2 244 1 222 2 
107 1 276 1 74 1 
107 1 321 2 381 1 
55 2 90 2 341 2 103 1 230 2 326 1 5 2 119 2 
55 2 162 2 124 1 103 1 322 1 323 1 326 1 5 2 6 1 350 1 204 1 61 2 228 1 207 2 111 1 42 1 181 2 13 1 230 2 307 2 309 1 17 1 257 1 154 1 136 1 260 1 336 1 261 1 19 1 219 1 119 3 90 3 341 2 143 1 291 1 189 1 53 1 
55 1 64 1 90 1 341 1 72 1 273 1 230 1 326 1 5 1 119 1 
281 1 99 1 258 1 64 1 337 1 67 1 5 1 119 1 107 1 263 1 90 1 74 1 365 1 343 1 
55 1 281 2 99 1 258 2 64 1 67 1 5 1 119 1 107 1 263 1 90 1 341 1 74 1 365 1 230 1 
281 1 258 1 127 1 198 1 222 1 
107 1 155 1 281 2 277 1 258 2 74 1 198 1 222 1 
281 1 258 1 198 1 
55 1 103 2 5 2 119 2 90 2 341 1 329 1 230 1 79 1 
164 1 233 1 339 1 
257 1 154 1 260 1 374 1 103 1 19 1 119 1 61 1 90 1 207 1 111 1 291 1 189 1 181 1 13 1 17 1 
276 1 103 1 
55 1 90 3 341 3 103 1 230 3 5 3 171 1 119 3 
64 1 90 1 341 1 72 1 230 1 5 1 119 1 
55 1 64 1 90 1 341 1 329 1 230 1 79 1 5 1 119 1 
55 2 162 1 99 1 124 1 103 1 322 1 349 1 326 1 5 3 6 1 171 1 350 1 61 1 207 1 329 1 111 1 128 1 181 1 13 1 230 3 307 2 17 1 281 1 257 1 154 1 136 1 258 1 64 1 260 1 336 1 261 1 67 1 19 1 219 1 119 4 263 1 90 4 341 3 143 1 365 1 291 1 189 1 75 1 53 1 
90 2 341 1 103 1 343 1 230 1 34 1 5 2 119 2 171 1 
55 1 281 1 99 1 258 1 64 1 299 1 67 1 349 1 5 3 171 2 119 3 107 1 263 1 90 3 341 3 329 1 365 1 75 1 230 3 
55 1 164 1 339 1 5 2 171 1 119 2 90 2 341 2 329 1 230 2 
257 1 154 1 260 1 103 1 19 1 119 1 61 1 90 1 207 1 111 1 189 1 291 1 181 1 13 1 17 1 
257 1 154 1 260 1 103 1 359 1 19 1 119 1 24 1 61 1 90 1 207 1 291 1 181 1 13 1 17 1 
35 1 162 4 163 1 164 2 347 1 322 1 196 1 6 1 350 1 202 1 8 1 42 2 307 2 152 1 136 1 233 2 312 1 336 1 47 1 261 2 339 2 118 1 264 1 53 1 
99 1 64 1 90 1 341 1 230 1 5 1 275 1 119 1 
257 1 154 1 260 1 19 1 339 1 5 1 171 1 119 2 61 1 90 2 341 1 207 1 111 1 291 1 189 1 75 1 181 1 13 1 230 1 17 1 
55 1 103 1 4 1 5 5 171 2 119 5 90 5 341 4 329 1 75 1 343 1 230 4 34 1 123 1 
64 1 90 2 341 2 72 1 230 2 275 1 5 2 119 2 
18 1 84 1 210 1 
18 1 84 1 87 1 105 1 
18 1 84 1 
18 1 84 1 
87 1 105 1 
87 1 105 1 
87 1 105 1 
18 1 84 1 33 1 
18 1 84 1 33 1 
18 1 84 1 33 1 
18 1 84 1 21 1 
18 1 84 1 21 1 
18 1 84 1 21 1 
161 2 281 2 0 1 18 2 345 1 258 2 217 2 84 2 2 1 186 1 40 2 107 1 314 2 173 3 91 1 378 1 342 1 96 1 292 2 
161 1 103 1 199 1 5 2 173 1 230 2 210 1 281 1 18 1 258 1 217 1 84 1 115 1 66 1 186 1 240 1 117 1 119 2 314 1 25 1 90 2 341 2 242 1 292 1 
313 2 150 1 46 1 167 2 360 1 
46 1 167 1 306 1 
150 1 167 1 306 1 
313 1 150 1 46 2 167 3 360 1 144 1 
313 1 278 1 150 1 46 1 167 2 360 1 
193 2 163 1 321 3 248 1 347 1 198 1 168 1 59 1 107 2 174 1 152 1 213 2 281 5 258 5 82 1 232 1 259 2 335 1 47 1 236 1 85 1 117 1 287 3 289 1 155 1 25 1 242 1 74 1 190 1 344 2 222 4 381 1 
193 6 163 3 321 9 248 1 347 3 198 6 168 1 107 5 205 1 174 2 127 5 112 1 330 1 152 3 213 6 133 5 281 9 258 9 82 2 335 2 47 3 185 1 236 2 117 4 287 8 23 1 289 3 155 1 377 1 74 1 190 2 344 6 221 1 222 7 381 3 
193 2 163 1 321 4 347 1 107 3 59 1 174 1 205 1 152 1 281 3 213 2 258 3 82 1 259 1 335 1 236 1 47 1 85 1 117 1 287 3 289 1 74 1 190 1 344 2 222 2 381 2 
193 4 163 2 321 7 347 2 107 4 59 1 174 1 205 1 112 1 152 2 281 4 213 4 258 4 82 1 259 2 335 1 236 1 47 2 85 1 117 2 287 5 23 1 289 2 377 1 74 1 190 1 344 4 222 3 381 3 
305 1 
320 1 276 1 291 1 
284 1 291 1 
291 1 13 1 
320 2 154 1 146 1 291 3 290 1 13 1 
154 1 291 1 13 1 
71 1 291 1 
183 1 145 1 162 7 163 1 100 1 216 2 137 1 247 1 312 3 261 3 47 1 285 1 264 2 352 1 10 1 243 1 42 4 159 1 
145 2 162 31 100 5 163 4 347 3 56 1 322 1 274 1 370 3 350 1 176 4 352 2 10 2 42 16 280 1 307 2 152 3 183 1 216 3 136 1 137 1 138 1 312 10 261 15 47 4 285 1 361 1 289 3 264 5 243 1 29 1 53 1 159 2 160 1 
145 1 162 9 163 1 269 1 100 1 322 2 350 2 352 1 10 1 42 5 307 4 183 1 136 2 216 2 137 1 138 1 312 4 47 1 261 4 88 1 264 3 243 1 53 2 159 1 
183 1 145 1 162 7 163 1 100 1 216 2 137 1 312 3 261 3 47 1 285 1 264 2 352 1 10 1 243 1 42 4 159 1 
183 1 145 1 162 7 163 1 100 1 216 2 137 1 312 3 261 3 47 1 285 1 264 2 352 1 10 1 243 1 42 4 159 1 
257 1 246 2 37 2 165 1 237 1 197 1 19 1 376 2 239 2 22 1 39 1 61 1 351 1 316 1 207 1 291 1 12 1 181 1 13 1 157 1 354 1 15 1 17 1 
214 1 246 1 346 1 37 1 46 1 167 2 68 1 19 1 70 1 376 1 239 1 22 1 39 1 121 1 61 1 220 1 150 1 316 1 207 1 181 1 157 1 306 1 158 1 17 1 144 1 62 1 
194 1 246 1 346 1 37 1 167 2 170 1 39 1 61 1 207 1 150 1 279 1 181 1 306 1 17 1 62 1 214 1 46 1 68 1 19 1 239 1 376 1 70 1 22 1 121 1 316 2 157 2 158 1 245 1 318 1 144 1 
246 1 346 1 37 1 167 2 197 1 170 1 39 1 61 1 207 1 150 1 279 1 181 1 306 1 17 1 214 1 46 1 68 1 19 1 239 1 376 1 70 1 22 1 220 1 316 3 26 1 157 3 158 1 245 1 318 2 144 1 
246 1 346 1 37 1 167 2 170 1 61 1 207 1 150 1 279 1 181 1 306 1 17 1 214 1 46 1 68 1 19 1 239 1 376 1 220 1 316 2 26 1 157 2 245 1 318 2 144 1 
249 1 
99 1 248 1 301 1 198 6 5 1 107 2 58 1 303 2 61 2 351 1 207 2 13 1 14 2 17 1 153 2 213 2 257 2 311 1 215 1 258 5 64 1 67 1 19 1 119 1 155 3 263 1 364 1 28 1 74 1 365 1 321 2 367 4 368 1 41 2 174 1 181 2 373 1 281 5 45 2 335 1 234 1 235 1 237 1 236 1 337 1 287 2 142 1 90 1 291 1 95 1 97 2 190 1 343 1 380 2 381 2 
281 3 99 1 258 3 64 1 235 1 76 1 67 1 337 1 367 2 301 1 198 2 5 1 119 1 155 1 58 1 263 1 142 1 90 1 28 1 365 1 97 1 343 1 
281 3 99 1 258 3 64 1 235 1 76 1 67 1 337 1 367 3 301 1 198 1 5 1 119 1 155 1 107 1 58 1 263 1 142 1 90 1 28 1 74 1 365 1 343 1 380 1 
99 1 76 1 301 1 367 3 198 2 5 1 58 1 107 1 153 1 281 3 258 3 64 1 235 1 337 1 67 1 119 1 155 1 263 1 142 1 90 1 28 1 365 1 74 1 97 1 343 1 380 1 
99 1 248 1 76 1 301 1 367 6 348 1 198 7 325 1 5 1 41 2 107 5 58 1 303 2 174 1 129 1 14 2 212 1 153 4 213 1 311 1 281 5 258 5 64 1 45 2 235 1 236 1 337 1 67 1 238 1 287 1 119 1 155 3 263 1 142 1 90 1 364 1 28 1 74 5 365 1 190 1 97 4 343 1 380 4 381 2 
99 1 321 2 248 1 301 1 367 4 198 4 5 1 107 2 41 2 58 1 303 2 174 1 14 2 153 2 213 1 281 4 311 1 258 4 64 1 45 2 234 1 235 1 337 1 236 1 67 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 97 2 190 1 343 1 380 2 381 2 
99 1 248 1 301 1 367 4 198 4 325 1 5 1 107 1 41 2 58 1 303 2 174 1 14 2 153 2 212 1 213 1 311 1 281 4 258 4 64 1 45 2 235 1 337 1 67 1 236 1 238 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 97 2 190 1 343 1 380 2 381 2 
99 1 248 1 301 1 367 4 198 4 325 1 5 1 107 1 41 2 58 1 303 2 174 1 14 2 153 2 212 1 213 1 311 1 281 4 258 4 64 1 45 2 235 1 337 1 67 1 236 1 238 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 97 2 190 1 343 1 380 2 381 2 
99 1 321 2 38 2 248 1 301 1 367 4 198 4 325 1 5 1 107 1 41 2 58 1 174 1 256 1 11 2 14 2 153 2 213 1 281 4 258 4 64 1 65 1 235 1 337 1 67 1 236 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 32 1 97 2 190 1 343 1 380 2 
99 1 248 1 301 1 367 5 198 5 325 1 5 1 107 1 41 2 58 1 303 2 174 1 129 1 14 2 212 1 153 3 213 1 311 1 281 4 258 4 64 1 45 2 235 1 236 1 337 1 67 1 238 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 190 1 97 3 343 1 380 3 381 2 
99 1 248 1 301 1 367 5 198 5 325 1 5 1 107 1 41 2 58 1 303 2 174 1 129 1 14 2 212 1 153 3 213 1 311 1 281 4 258 4 64 1 45 2 235 1 236 1 337 1 67 1 238 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 190 1 97 3 343 1 380 3 381 2 
99 1 321 2 38 2 248 1 301 1 367 4 198 4 5 1 107 1 41 2 58 1 174 1 11 2 14 2 153 2 213 1 281 4 258 4 64 1 65 1 234 1 235 1 337 1 236 1 67 1 287 1 119 1 155 2 263 1 142 1 90 1 364 1 28 1 74 1 365 1 97 2 190 1 343 1 380 2 
35 1 162 2 194 1 195 1 322 2 104 1 252 1 5 1 171 1 6 2 350 2 61 8 351 1 207 8 228 1 42 1 181 7 230 1 13 2 307 4 309 2 17 2 257 2 136 2 336 2 261 1 237 1 262 1 19 2 119 1 219 1 220 1 90 1 341 1 92 1 291 3 52 1 53 2 192 1 
55 1 162 3 163 1 164 1 272 1 347 1 322 1 5 1 6 1 350 1 329 1 42 1 230 1 307 2 152 1 136 1 357 1 312 1 233 1 336 1 47 1 261 2 339 1 119 1 289 1 264 1 90 1 341 1 53 1 
35 1 162 6 163 1 164 1 103 2 322 1 6 1 276 1 350 1 352 1 42 3 307 2 183 1 136 1 216 1 137 1 312 2 233 1 336 1 47 1 261 3 339 1 264 2 243 1 53 1 159 1 
162 14 100 1 163 1 164 4 103 1 347 1 322 2 274 1 6 2 370 3 350 2 228 1 176 3 372 1 42 8 43 1 307 4 152 2 136 2 357 1 312 2 233 11 114 1 336 1 261 6 47 2 338 1 339 11 219 1 289 2 264 1 53 2 160 1 
162 2 101 1 164 1 103 1 322 1 5 1 6 1 171 1 369 1 350 1 61 1 207 1 228 1 111 1 180 1 42 1 181 1 13 1 230 1 307 2 17 1 257 1 154 1 136 1 357 1 260 1 336 1 374 1 261 1 19 1 119 2 219 1 90 2 341 1 291 1 189 1 75 1 53 1 
98 1 100 4 147 1 103 2 347 2 148 2 5 1 6 3 201 2 350 3 61 3 207 3 352 1 111 2 13 2 307 6 17 2 152 2 257 1 154 2 216 1 357 1 260 2 312 8 261 10 19 2 219 1 119 3 264 4 220 1 27 2 75 1 159 1 162 20 163 3 124 2 164 7 322 3 171 1 228 1 42 10 181 3 230 1 183 1 136 3 137 1 233 7 336 3 47 3 86 1 339 7 289 2 90 3 341 1 51 2 243 1 189 2 291 2 53 3 
162 2 35 1 100 1 136 1 312 1 164 1 233 1 336 1 47 1 322 1 196 1 339 1 6 1 350 1 42 2 53 1 307 2 152 1 
162 2 35 1 136 1 163 1 312 1 164 1 233 1 336 1 347 1 261 2 322 1 339 1 6 1 264 1 350 1 8 1 53 1 307 2 
35 1 162 4 100 1 163 1 164 2 347 1 322 1 6 1 350 1 42 2 307 2 152 1 136 1 233 2 312 2 336 1 47 1 261 2 339 2 289 1 264 1 53 1 
162 2 100 1 136 1 312 1 164 1 233 1 336 1 47 1 322 1 196 1 339 1 6 1 350 1 42 2 53 1 307 2 192 1 152 1 
162 2 136 1 163 1 312 1 164 1 233 1 336 1 347 1 261 2 322 1 339 1 6 1 264 1 350 1 8 1 53 1 307 2 192 1 
162 4 100 1 163 1 164 2 347 1 322 1 6 1 350 1 42 2 307 2 152 1 136 1 233 2 312 2 336 1 47 1 261 2 339 2 289 1 264 1 53 1 192 1 
162 4 100 1 163 1 164 2 347 1 322 1 6 1 350 1 42 2 307 2 152 1 136 1 233 2 312 2 336 1 47 1 261 2 339 2 289 1 264 1 53 1 
162 2 124 1 103 1 322 1 6 1 350 1 61 1 228 1 207 1 111 1 42 1 181 1 13 1 307 2 17 1 257 1 154 1 136 1 260 1 336 1 261 1 19 1 119 1 219 1 90 1 189 1 291 1 53 1 
162 2 103 1 322 1 6 1 350 1 61 1 228 1 207 1 42 1 181 1 13 1 307 2 17 1 257 1 154 1 136 1 260 1 358 1 336 1 359 1 261 1 19 1 119 1 219 1 24 1 90 1 291 1 53 1 
162 4 100 1 163 1 164 2 347 1 322 1 6 1 350 1 42 2 307 2 152 1 136 1 357 1 233 2 312 2 336 1 47 1 261 2 339 2 289 1 264 1 53 1 
162 4 163 1 100 1 194 1 124 1 164 2 347 1 322 1 6 1 201 1 350 1 61 1 207 1 111 1 42 2 181 1 13 1 307 2 17 1 152 1 154 1 136 1 312 2 233 2 260 1 336 1 261 2 47 1 19 1 339 2 119 1 289 1 264 1 90 1 189 1 291 1 53 1 
55 1 162 3 163 1 100 1 164 1 347 1 322 1 5 1 6 1 350 1 227 1 329 1 42 2 230 1 307 2 152 1 136 1 357 1 312 1 233 1 336 1 261 1 47 1 339 1 119 1 289 1 90 1 341 1 53 1 
162 19 296 1 269 1 100 3 163 3 36 1 347 3 250 1 322 2 125 2 274 1 370 1 350 2 371 1 176 2 110 1 42 9 307 4 152 3 136 2 83 1 282 2 312 6 139 1 261 10 47 3 289 3 264 3 53 2 160 1 
162 26 100 2 163 2 296 2 269 1 36 1 347 2 250 1 322 3 125 4 57 1 370 2 302 1 350 3 176 2 110 1 42 14 307 6 310 1 152 3 80 1 81 1 136 3 138 2 282 1 312 4 139 2 261 12 47 3 286 1 289 3 264 2 53 3 160 2 
100 4 296 2 347 4 250 1 57 1 302 1 350 3 206 1 352 1 110 1 307 6 152 4 310 1 216 1 312 8 261 21 264 4 159 1 160 3 162 41 163 5 269 1 36 1 322 3 125 4 274 1 370 3 176 4 42 20 80 1 183 1 81 1 136 3 137 1 83 1 138 1 282 1 139 1 47 5 286 1 289 4 243 1 53 3 
162 38 296 2 269 1 100 3 163 4 36 1 347 3 250 1 322 4 125 4 274 1 57 1 370 3 302 1 350 4 206 1 176 4 352 1 110 1 42 20 307 8 310 1 152 4 183 1 80 1 81 1 216 1 136 4 83 1 137 1 138 2 282 1 312 7 139 1 261 18 47 5 286 1 289 4 264 4 243 1 53 4 159 1 160 3 
162 52 296 1 269 1 100 7 163 8 36 1 347 7 250 1 322 2 125 4 274 2 57 1 370 4 302 1 350 2 176 4 352 1 110 1 42 27 43 2 307 4 310 1 152 7 183 1 80 1 81 1 216 1 136 2 137 1 138 1 282 1 312 14 139 1 261 25 47 8 286 1 289 7 264 7 243 1 53 2 159 1 160 2 
161 1 0 1 18 1 314 1 217 1 84 1 378 1 342 1 191 1 292 1 
199 1 210 1 
161 1 18 1 314 1 217 1 109 1 84 1 77 1 292 1 141 1 
281 1 161 1 0 1 18 1 345 1 258 1 217 1 84 1 2 1 186 1 40 1 107 1 314 1 173 2 91 1 378 1 342 1 292 1 
281 1 161 1 0 1 18 1 345 1 258 1 217 1 84 1 2 1 186 1 40 1 107 1 314 1 173 2 91 1 378 1 342 1 292 1 
281 1 161 1 0 1 18 1 345 1 258 1 217 1 84 1 2 1 186 1 40 1 107 1 314 1 173 2 91 1 378 1 342 1 292 1 
102 1 122 1 33 1 
102 1 122 1 33 1 
366 1 21 1 
102 1 366 1 21 1 
115 1 66 1 
161 1 103 1 199 1 5 2 40 1 173 1 208 1 230 2 210 1 281 1 18 1 258 1 217 1 84 1 115 1 66 1 240 1 117 1 119 2 314 1 25 1 90 2 91 1 341 2 242 1 292 1 222 1 
122 1 33 1 
102 1 366 1 21 1 
295 1 268 1 162 2 271 1 195 1 322 1 5 2 6 1 304 1 350 1 61 2 207 2 228 1 177 1 42 1 181 2 13 1 307 2 309 2 17 1 136 1 357 1 336 1 261 1 19 1 119 2 219 1 90 2 92 1 291 1 53 1 
257 1 37 1 166 1 165 1 237 1 19 1 375 1 61 1 351 1 207 1 291 1 181 1 13 1 17 1 
134 1 346 1 37 1 46 1 298 1 166 1 167 2 68 1 19 1 61 1 220 1 150 1 207 1 181 1 306 1 158 1 17 1 144 1 
134 1 194 1 346 1 37 1 46 1 298 1 166 1 167 2 68 1 19 1 61 2 220 1 150 1 207 2 181 2 306 1 158 1 17 1 144 1 
134 1 346 1 37 1 46 1 283 1 167 2 68 1 19 1 61 1 220 1 150 1 207 1 181 1 306 1 158 1 17 1 144 1 
288 1 
107 1 213 1 174 1 188 1 248 1 74 1 156 1 236 1 190 1 287 1 
193 5 213 5 163 2 321 10 47 2 347 2 200 2 287 5 289 2 107 5 27 1 344 5 355 1 152 2 381 5 
107 1 281 1 155 1 258 1 74 1 198 1 
248 1 368 1 198 4 253 1 205 1 174 2 61 4 351 1 207 4 181 4 13 1 17 1 373 2 257 2 213 2 281 3 135 2 215 1 258 3 335 2 236 2 237 1 19 1 287 2 155 2 50 1 363 1 291 1 190 2 
107 1 213 1 276 1 188 1 74 1 156 1 287 1 
281 1 311 1 213 1 258 1 321 1 45 1 248 1 236 1 198 1 287 1 155 1 107 2 303 1 174 1 74 1 190 1 381 1 
193 6 194 1 248 4 347 2 198 5 200 2 107 8 61 3 255 2 207 3 13 3 209 2 17 3 355 2 152 2 113 2 257 1 213 8 154 3 258 5 67 2 19 4 155 3 71 2 27 2 156 1 74 2 30 1 267 2 320 2 163 2 321 12 174 4 175 1 181 3 130 1 373 1 182 2 281 5 135 1 335 2 284 3 236 4 47 2 187 2 287 9 289 2 50 1 188 1 291 10 290 1 190 4 344 6 381 6 
193 5 266 1 163 2 321 6 248 2 347 2 198 1 324 1 200 2 57 1 370 1 302 1 107 5 174 2 176 1 373 1 355 1 310 1 152 2 81 1 281 1 213 5 258 1 335 1 236 2 47 2 286 1 287 8 155 1 289 2 74 2 190 2 344 5 160 1 381 3 
55 1 163 1 297 1 248 1 273 1 326 1 200 2 5 1 174 1 352 1 230 1 355 1 211 1 212 1 183 1 281 1 213 2 258 1 64 1 236 1 47 2 119 1 287 2 90 1 341 1 72 1 190 1 159 1 
55 2 162 1 124 1 103 1 322 1 326 1 5 2 6 1 350 1 61 1 207 1 111 1 181 1 230 2 13 1 307 2 17 1 257 1 154 1 136 1 260 1 336 1 261 1 19 1 219 1 119 3 90 3 341 2 143 1 189 1 291 1 53 1 
193 2 213 2 216 1 321 4 335 1 248 1 236 1 287 1 107 4 174 1 74 2 190 1 344 2 373 1 381 2 
0 1 217 1 151 1 115 1 292 1 
217 1 116 1 292 1 
217 1 116 1 292 1 
217 1 116 1 292 1 
254 1 217 1 292 1 
254 1 217 1 292 1 
254 1 217 1 292 1 
217 1 292 1 
18 1 84 1 
183 1 162 10 136 1 269 1 100 2 163 2 297 1 312 5 261 5 47 2 322 1 350 1 264 3 352 2 42 5 53 1 307 2 159 2 
162 2 269 1 136 1 100 1 312 1 47 1 322 1 350 1 42 2 53 1 307 2 152 1 
162 4 163 1 269 1 136 1 100 1 312 2 261 2 347 1 47 1 322 1 289 1 264 1 350 1 42 2 53 1 307 2 152 1 
162 3 269 1 136 3 100 1 83 1 138 1 312 2 261 2 322 3 20 1 350 3 264 1 352 1 42 1 53 3 307 6 159 1 
162 29 269 1 100 5 163 4 56 1 347 3 322 4 251 1 274 1 370 3 350 4 176 4 352 2 42 14 280 1 307 8 152 3 183 1 216 1 136 4 137 1 83 1 138 1 312 10 261 15 47 4 289 3 264 5 243 1 29 1 53 4 159 2 160 1 
183 1 162 8 216 1 163 1 100 1 136 2 137 1 138 1 312 3 47 1 261 4 322 2 264 2 350 2 352 1 243 1 42 4 53 2 307 4 159 1 
183 1 162 6 216 1 163 1 137 1 312 2 261 3 47 1 276 1 264 2 352 1 243 1 42 3 159 1 
162 4 163 1 136 1 100 1 312 2 261 2 347 1 47 1 322 1 251 1 289 1 264 1 350 1 42 2 53 1 307 2 152 1 
162 7 163 1 100 1 312 2 347 1 261 4 47 1 274 1 370 1 289 1 264 1 176 2 42 3 160 1 152 1 
162 23 100 4 163 3 347 2 322 2 274 1 370 2 350 2 176 2 352 2 372 1 42 11 43 1 307 4 152 2 183 1 216 1 136 2 137 1 138 2 312 9 47 3 261 12 20 1 289 2 264 5 243 1 53 2 159 2 
162 1 176 1 261 1 
370 1 162 1 42 1 
162 6 136 1 100 1 163 1 312 3 261 3 47 1 347 1 322 1 251 1 289 1 350 1 264 2 27 1 42 3 53 1 307 2 152 1 
162 12 100 1 269 1 163 2 347 2 322 1 57 1 370 1 302 1 350 1 176 1 42 6 307 2 310 1 152 2 81 1 136 1 312 2 261 6 47 2 286 1 289 2 264 1 53 1 160 1 
183 1 264 1 162 6 100 1 163 1 312 2 352 1 261 3 42 3 47 1 159 1 
162 3 100 1 136 1 137 1 138 1 312 2 261 2 322 1 20 1 264 1 350 1 352 1 243 1 42 1 53 1 159 1 307 2 
162 8 163 1 269 1 322 1 370 1 302 1 350 1 176 1 352 1 42 4 307 2 183 1 216 1 136 1 137 1 312 2 47 1 261 4 264 2 243 1 53 1 159 1 160 1 
162 11 163 1 269 1 100 1 322 2 251 1 274 1 370 1 302 1 350 2 176 2 352 1 42 6 307 4 152 1 183 1 216 1 136 2 137 1 312 3 261 5 47 2 289 1 264 2 243 1 53 2 159 1 160 1 
162 19 100 1 269 1 163 3 347 2 322 3 251 1 57 1 370 1 302 1 350 3 176 1 352 1 42 9 307 6 310 1 152 2 183 1 81 1 216 1 136 3 137 1 138 1 312 4 261 10 47 3 286 1 289 2 264 3 243 1 53 3 159 1 160 1 
162 17 100 2 269 1 163 2 347 1 322 3 251 1 57 1 370 1 302 1 350 3 176 1 352 1 42 10 307 6 310 1 152 2 183 1 81 1 216 1 136 3 137 1 138 1 312 5 261 7 47 3 286 1 289 2 264 3 243 1 53 3 159 1 160 1 
162 8 163 1 269 1 322 1 370 1 302 1 350 1 176 1 352 1 42 4 307 2 183 1 216 1 136 1 137 1 312 2 47 1 261 4 264 2 243 1 53 1 159 1 160 1 
162 12 100 1 269 1 163 2 347 2 322 1 57 1 370 1 302 1 350 1 176 1 42 6 307 2 310 1 152 2 81 1 136 1 312 2 261 6 47 2 286 1 289 2 264 1 53 1 160 1 
162 18 100 2 269 1 163 2 347 1 322 4 251 1 57 1 370 1 302 1 350 4 176 1 352 1 42 10 307 8 310 1 152 2 183 1 81 1 216 1 136 4 137 1 138 2 312 5 261 8 47 3 286 1 289 2 264 3 243 1 53 4 159 1 160 1 
162 16 100 3 269 1 163 2 347 2 322 4 57 1 370 1 302 1 350 4 176 1 42 9 307 8 310 1 152 3 81 1 136 4 83 1 138 2 312 6 261 7 47 3 286 1 289 3 264 3 53 4 160 1 
183 1 162 7 163 1 100 3 137 2 312 6 261 4 47 1 264 3 352 3 243 1 42 3 159 3 
162 18 100 1 269 1 163 2 347 1 322 4 57 1 370 1 302 1 350 4 176 1 352 1 42 10 307 8 310 1 152 2 183 1 81 1 216 1 136 4 137 1 83 1 138 2 312 4 261 8 47 3 286 1 289 2 264 3 243 1 53 4 159 1 160 1 
90 1 103 1 343 1 169 1 34 1 5 1 119 1 
333 1 226 1 90 1 93 1 103 1 343 1 169 1 379 1 34 1 5 1 54 1 119 1 
257 1 194 1 237 1 19 1 49 1 61 4 351 1 207 4 291 1 181 4 13 1 308 1 17 1 
154 1 135 1 147 1 19 2 241 1 61 2 207 2 78 1 73 1 291 1 181 2 13 1 331 1 17 1 
257 1 61 1 346 1 150 1 207 1 167 1 181 1 19 1 306 1 17 1 
295 1 194 1 195 1 19 1 61 2 220 1 207 2 291 1 181 2 13 1 17 1 
257 1 135 1 194 1 195 1 237 1 19 2 252 1 49 1 61 5 351 1 207 5 291 3 181 4 52 1 13 2 17 2 
257 1 135 1 194 1 195 1 237 1 19 2 252 1 49 1 60 1 61 5 351 1 207 5 291 3 181 4 13 2 17 2 
257 1 276 1 61 1 351 1 207 1 291 1 237 1 181 1 19 1 13 1 17 1 
257 1 154 1 260 1 103 1 19 1 5 1 171 1 119 2 61 1 90 2 341 1 207 1 291 1 189 1 181 1 13 1 230 1 17 1 
99 1 154 2 135 1 64 1 260 1 103 1 19 1 5 2 171 1 119 2 71 1 61 1 90 2 341 2 207 1 365 1 291 3 189 1 181 1 13 2 230 1 182 1 17 1 
99 1 154 2 135 1 64 1 260 1 103 1 19 1 5 2 171 1 119 2 71 1 24 1 61 2 90 2 341 2 207 2 365 1 291 3 181 2 13 2 230 1 308 1 182 1 17 1 
319 1 257 1 281 2 154 1 320 1 258 2 135 1 284 1 67 1 19 1 198 1 107 1 328 1 71 1 61 3 207 3 74 1 291 4 181 3 13 1 308 1 182 1 17 1 
257 1 281 2 154 1 320 1 258 2 135 1 284 1 67 1 19 1 198 1 187 1 107 1 71 1 61 3 207 3 74 1 291 4 181 3 13 1 308 1 182 1 17 1 
61 1 207 1 181 1 19 1 104 1 17 1 
257 2 154 1 194 1 195 1 262 1 19 3 104 1 252 1 241 1 61 7 220 1 207 7 229 1 78 1 290 1 291 3 52 1 181 6 13 2 309 1 17 2 
162 6 163 1 194 1 124 1 271 1 164 1 103 2 322 2 148 1 5 1 6 2 171 1 201 1 350 2 61 1 207 1 352 1 111 1 42 3 181 1 13 1 230 1 307 4 17 1 183 1 154 1 216 1 136 2 137 1 357 1 233 1 312 2 260 1 336 2 261 3 47 1 19 1 339 1 119 2 264 2 90 2 341 1 243 1 291 1 189 1 53 2 159 1 
267 1 320 1 248 2 198 2 107 1 61 1 174 2 207 1 181 1 209 1 113 1 213 1 257 1 281 3 258 3 284 1 236 2 67 1 187 1 287 1 155 1 50 1 188 1 74 1 156 1 291 2 190 2 222 1 
320 1 154 1 194 1 19 2 104 1 61 2 207 2 290 1 291 2 181 2 130 1 13 1 17 1 
257 1 154 1 260 1 103 1 19 1 5 1 171 1 119 2 24 1 61 1 90 2 341 1 207 1 291 1 181 1 13 1 230 1 17 1 
154 1 135 1 19 2 241 1 61 1 207 1 229 1 78 1 290 1 291 1 181 1 13 1 17 1 
268 1 5 1 119 1 48 1 304 1 90 1 177 1 31 1 131 1 
31 1 3 1 265 1 
48 1 179 1 31 1 103 1 131 1 
281 2 99 1 258 2 64 1 103 1 67 1 3 1 349 1 107 1 48 2 263 1 74 1 365 1 31 1 353 1 179 2 265 1 131 2 222 1 
316 1 279 1 157 1 170 1 245 1 39 1 22 1 62 1 
44 1 170 2 22 1 39 1 327 1 106 1 7 1 316 4 9 1 279 3 157 4 317 1 245 2 318 2 
170 1 22 1 39 1 89 1 203 1 316 2 279 1 157 2 245 1 16 1 318 1 62 1 
7 2 44 1 316 3 279 1 157 3 170 1 317 2 245 1 356 1 39 1 22 1 62 1 
294 1 108 1 1 2 279 2 
223 1 316 1 157 1 39 1 22 1 62 1 
316 2 300 1 279 1 157 2 170 1 245 1 318 1 39 1 22 1 62 1 
332 1 
316 1 279 1 157 1 170 1 245 1 39 1 22 1 62 1 
276 1 279 1 170 1 245 1 
316 1 279 1 157 1 170 1 245 1 39 1 22 1 
246 1 157 1 239 1 
44 1 170 1 22 1 39 1 362 1 7 2 316 3 279 1 157 3 317 1 245 1 62 1 
270 1 316 2 279 1 157 2 170 1 245 1 318 1 39 1 22 1 
46 1 167 1 22 1 39 1 327 1 316 1 178 1 279 1 157 1 306 1 62 1 
316 1 279 1 157 1 245 1 39 1 22 1 62 1 
316 1 157 1 170 1 245 2 39 1 22 1 62 1 
225 1 340 1 22 2 39 2 316 2 279 1 157 2 293 1 245 1 62 1 
300 1 170 1 22 1 39 1 327 1 316 3 9 1 94 1 279 2 157 3 245 1 318 2 62 1 
334 1 46 1 167 2 170 1 22 1 39 1 150 1 316 2 279 1 157 2 306 1 245 1 318 1 62 1 144 1 
270 1 170 1 22 2 39 2 327 1 316 4 149 1 9 1 279 2 157 4 245 1 318 2 62 1 
300 1 170 1 22 1 39 1 7 1 316 3 279 1 157 3 318 1 245 1 62 1 
106 1 9 1 279 1 327 1 
279 1 245 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
134 1 135 1 6 1 55 3 336 1 34 2 27 1 296 3 48 2 236 2 167 1 117 1 185 1 
0 2 334 1 134 1 135 4 87 2 6 1 241 1 336 3 338 2 45 1 320 1 27 1 296 9 48 2 167 6 117 2 223 1 198 1 227 1 55 9 173 1 130 1 57 1 34 2 380 1 236 5 185 1 156 2 
0 2 334 1 134 1 135 4 87 2 6 1 241 1 336 3 338 2 45 1 320 1 27 1 296 9 48 2 167 6 117 2 223 1 198 1 227 1 55 9 173 1 130 1 57 1 34 2 380 1 236 5 185 1 156 2 
0 2 334 1 134 1 135 5 87 2 6 1 241 1 336 4 338 2 45 1 320 1 27 1 296 10 48 2 167 7 117 2 223 1 198 1 227 1 55 10 173 1 130 1 57 1 34 2 380 1 236 6 185 1 156 2 
0 2 334 1 134 1 135 3 87 2 6 1 241 1 336 2 338 2 45 1 320 1 27 1 296 7 48 2 167 4 117 2 223 1 198 1 227 1 55 7 173 1 130 1 34 2 380 1 236 4 185 1 156 1 
0 1 334 1 135 2 87 1 6 1 241 1 55 4 336 1 57 1 338 1 34 1 27 1 296 4 48 1 236 3 167 3 185 1 156 2 
14 1 0 1 87 1 6 1 7 1 55 2 200 1 45 1 34 1 27 1 296 2 48 1 236 1 117 1 185 1 223 1 
0 1 334 1 135 4 134 1 87 1 6 1 241 1 336 3 338 1 27 1 322 1 296 9 48 2 167 7 117 1 198 1 55 9 173 1 378 1 57 1 34 2 236 5 185 1 156 2 
0 1 334 1 135 4 134 1 87 1 6 1 241 1 336 3 338 1 27 1 322 1 296 9 48 2 167 7 117 1 198 1 55 9 173 1 378 1 57 1 34 2 236 5 185 1 156 2 
50 1 22 1 39 1 313 1 62 1 136 1 53 1 103 1 175 1 354 1 141 1 355 1 168 1 272 1 
86 1 
377 1 50 1 201 1 86 1 364 1 44 1 103 2 272 2 
50 2 2 2 324 1 23 1 86 1 325 2 100 1 125 1 65 1 290 2 214 1 44 1 103 5 377 1 201 2 331 1 94 1 12 1 272 5 
293 1 377 1 86 1 
86 1 30 2 307 1 
38 1 39 2 22 2 354 2 141 2 313 2 168 1 175 2 
38 1 332 1 358 2 39 2 22 2 208 1 4 1 285 2 313 2 160 1 217 1 339 2 341 1 141 3 220 1 69 1 193 1 247 1 168 1 248 1 119 1 95 1 147 1 174 1 175 3 176 1 376 2 257 1 351 1 202 1 279 1 131 1 259 1 184 2 354 2 305 1 282 1 
39 1 22 1 354 1 141 1 313 1 136 1 53 1 355 1 168 1 175 1 
274 1 41 1 86 1 42 1 313 1 314 1 53 1 110 1 175 1 103 1 377 1 141 1 283 1 272 1 
22 1 39 1 274 1 41 1 86 1 313 1 53 1 110 1 103 2 175 1 377 1 354 1 141 1 283 1 272 2 
50 1 201 1 316 1 103 1 272 1 
377 1 50 1 201 1 58 1 86 1 44 1 103 2 272 2 
201 1 103 1 272 1 
38 2 39 1 22 1 153 1 354 1 141 2 313 2 187 1 175 2 
335 1 373 1 344 1 
38 1 358 1 119 1 208 1 4 1 175 1 376 1 257 1 114 1 279 1 131 1 184 1 141 1 220 1 193 1 69 1 
38 1 293 1 
119 1 358 1 335 1 4 1 39 1 208 1 51 1 313 1 175 2 376 1 257 1 216 1 279 1 131 1 184 1 354 1 141 2 220 1 69 1 193 1 
38 1 216 1 22 1 39 3 354 3 141 3 313 3 175 3 
39 1 354 1 141 1 313 1 53 1 355 1 175 1 
39 1 22 1 153 1 354 1 141 1 313 1 53 1 187 1 175 1 
38 1 332 1 358 1 4 1 208 1 22 2 39 3 285 2 41 1 313 3 110 1 160 1 216 1 217 1 339 1 244 1 141 4 220 1 69 1 193 1 91 1 247 1 168 1 272 1 119 1 147 1 274 1 51 1 53 1 175 4 103 1 176 1 376 1 257 1 202 1 153 1 279 1 131 1 259 1 184 1 354 3 305 1 282 1 283 1 
38 1 216 1 39 1 354 1 141 2 313 2 314 1 301 1 175 2 
22 1 39 3 274 1 41 1 51 1 86 1 313 3 61 1 53 1 110 1 103 1 175 3 216 2 153 1 354 3 244 1 141 3 283 1 272 1 
335 1 22 1 39 2 344 1 313 2 175 2 216 1 153 1 354 2 141 2 
38 1 358 1 119 1 208 1 4 1 175 1 376 1 257 1 131 1 279 1 184 1 141 1 220 1 193 1 69 1 
38 1 358 1 119 1 4 1 151 1 175 1 376 1 131 1 279 1 184 1 10 1 141 1 220 1 193 1 69 1 
332 1 335 2 309 1 285 2 311 1 26 1 217 1 339 4 341 2 247 1 144 1 118 1 72 1 323 1 373 2 344 2 256 1 177 1 178 1 202 1 203 1 259 1 305 2 282 1 
39 1 354 1 141 1 313 1 53 1 110 1 231 1 175 1 
38 1 39 4 22 1 172 1 51 1 313 5 314 1 301 1 175 5 216 2 153 1 354 4 141 5 92 1 
39 2 354 2 141 2 313 2 53 1 355 1 231 1 175 2 
75 1 265 1 262 1 
109 1 276 1 269 1 127 1 265 2 262 2 
265 1 262 1 
265 1 262 1 
276 1 127 1 
276 1 127 1 
276 1 127 1 
206 1 265 1 262 1 
206 1 265 1 262 1 
206 1 265 1 262 1 
295 1 265 1 262 1 
295 1 265 1 262 1 
295 1 265 1 262 1 
84 1 109 1 33 1 86 1 17 1 265 2 24 2 89 1 189 2 103 2 294 1 337 3 181 1 280 2 93 1 262 2 146 2 272 2 107 2 
38 1 39 2 359 1 313 2 265 1 24 1 189 1 215 1 366 1 337 1 28 1 141 2 146 1 272 1 75 1 103 1 175 2 102 1 181 1 19 1 35 1 280 1 354 2 262 1 
14 1 338 1 275 1 87 2 143 2 
0 1 338 1 87 1 
0 1 14 1 87 1 
14 1 338 2 275 1 87 3 143 1 369 1 
14 1 338 1 275 1 87 2 196 1 143 1 
207 2 2 1 309 1 311 1 86 2 65 2 290 1 44 1 366 1 268 2 28 1 144 1 30 3 94 1 145 1 272 5 50 4 273 1 325 1 228 2 125 3 152 1 128 1 328 1 102 1 103 5 377 1 201 1 203 1 379 1 260 1 307 1 
207 6 2 2 309 3 311 3 86 5 63 1 316 5 65 6 290 2 44 1 268 6 28 4 144 3 30 9 12 1 94 1 145 2 272 9 171 1 121 1 50 7 273 3 150 5 254 1 325 2 125 8 152 2 327 1 328 1 103 9 377 1 201 6 203 3 36 1 307 3 
2 1 207 2 309 1 311 1 86 3 290 1 65 2 268 2 28 1 144 1 30 4 12 1 145 1 272 3 50 2 273 1 325 1 125 3 228 1 152 1 128 1 103 3 377 1 203 1 379 1 307 2 
207 4 2 1 309 2 311 2 86 4 290 1 65 4 268 4 28 2 144 2 30 7 12 1 145 1 272 4 171 1 121 1 50 3 273 2 325 1 125 5 228 2 152 1 128 1 103 4 377 1 203 2 379 1 36 1 307 3 
288 1 
293 1 279 1 194 1 
279 1 188 1 
119 1 279 1 
119 1 368 1 279 3 240 1 69 1 194 2 
119 1 279 1 69 1 
279 1 252 1 
72 2 299 1 309 1 311 1 5 1 256 3 43 1 266 1 304 1 18 1 111 1 218 1 321 2 339 7 245 1 341 4 305 3 263 1 
332 1 309 4 285 2 311 4 5 1 43 1 319 1 266 2 111 1 217 1 339 31 321 3 218 5 245 2 341 16 247 1 270 1 144 3 370 1 72 5 31 1 273 3 126 1 256 10 304 2 303 4 18 2 352 1 203 3 132 3 305 15 282 1 20 1 263 1 
332 2 72 3 309 1 285 4 311 1 5 1 126 1 43 1 256 4 266 1 25 1 304 1 18 1 367 1 217 2 218 1 321 2 339 9 245 1 341 5 305 4 247 2 282 2 263 1 
72 2 309 1 311 1 5 1 256 3 266 1 43 1 304 1 18 1 111 1 218 1 321 2 339 7 245 1 341 4 305 3 263 1 
72 2 309 1 311 1 5 1 256 3 266 1 43 1 304 1 18 1 111 1 218 1 321 2 339 7 245 1 341 4 305 3 263 1 
358 1 315 1 286 1 317 1 296 1 220 1 48 1 193 1 222 1 117 2 11 1 119 1 148 1 55 1 255 2 376 1 105 2 34 1 131 1 279 1 184 1 82 1 83 2 
0 1 358 1 1 1 3 1 87 2 338 1 27 1 296 1 48 1 193 1 117 1 369 1 14 1 343 1 16 1 55 1 129 1 255 1 376 1 105 1 179 1 34 1 79 1 131 1 184 1 83 1 
0 1 358 1 1 1 87 2 6 1 64 1 338 1 27 1 296 2 48 1 193 1 167 1 117 1 369 1 14 1 343 1 16 1 55 2 129 1 255 1 376 1 105 1 179 1 34 1 79 1 131 1 184 1 236 1 185 1 83 1 
0 1 358 1 1 1 3 1 310 1 87 2 6 1 338 1 296 3 48 1 193 1 222 1 167 2 117 1 369 1 14 1 16 1 55 3 129 1 255 1 376 1 105 1 179 1 34 1 79 1 131 1 184 1 236 1 185 1 83 1 
358 1 0 1 3 1 310 1 87 2 6 1 338 1 296 2 193 1 167 2 117 1 369 1 14 1 16 1 55 2 255 1 376 1 105 1 179 1 79 1 131 1 184 1 236 1 185 1 83 1 
235 1 
2 1 41 1 186 1 86 2 42 1 286 1 290 1 291 2 44 3 46 2 139 1 141 1 193 1 94 1 253 1 15 1 152 1 54 1 53 1 101 1 103 5 201 6 204 1 307 2 358 2 108 2 158 1 313 1 314 1 110 1 65 2 66 2 112 2 115 4 220 2 30 2 271 1 272 5 119 1 170 1 73 2 274 1 122 1 76 2 325 1 125 2 175 1 377 1 376 2 279 1 131 1 184 2 82 1 283 1 284 1 
41 1 313 1 42 1 314 1 110 1 364 1 44 1 112 1 115 2 141 1 272 3 170 1 274 1 122 1 54 1 53 1 101 1 175 1 103 3 201 2 283 1 284 1 
41 1 86 1 313 1 42 1 314 1 110 1 364 1 44 1 46 1 115 3 141 1 272 3 170 1 274 1 122 1 54 1 53 1 101 1 175 1 103 3 377 1 201 1 283 1 284 1 
41 1 86 1 313 1 42 1 314 1 110 1 364 1 44 1 291 1 112 1 46 1 115 3 141 1 272 3 170 1 274 1 122 1 54 1 53 1 101 1 175 1 103 3 377 1 201 2 283 1 284 1 
2 1 108 2 360 1 158 1 186 1 41 1 86 5 313 1 42 1 314 1 110 1 65 1 290 1 364 1 66 2 44 3 291 4 112 4 46 4 115 6 141 1 94 1 272 5 170 1 73 2 226 1 274 1 122 1 76 2 199 1 325 1 125 1 54 1 53 1 101 1 103 5 175 1 377 5 201 7 238 1 37 1 283 1 307 2 284 1 
2 1 186 1 41 1 86 2 42 1 290 1 44 2 291 2 46 2 141 1 94 1 53 1 54 1 101 1 103 4 201 4 204 1 307 2 108 2 158 1 313 1 314 1 110 1 65 1 66 2 112 2 115 4 30 2 272 4 170 1 73 2 274 1 122 1 325 1 76 2 125 1 175 1 377 1 283 1 284 1 
2 1 108 2 158 1 186 1 41 1 86 1 313 1 42 1 314 1 110 1 65 1 290 1 291 2 44 2 66 2 112 2 46 2 115 4 141 1 94 1 272 4 170 1 73 2 274 1 226 1 122 1 76 2 199 1 325 1 125 1 54 1 53 1 101 1 175 1 103 4 377 1 201 4 37 1 283 1 307 2 284 1 
2 1 108 2 158 1 186 1 41 1 86 1 313 1 42 1 314 1 110 1 65 1 290 1 291 2 44 2 66 2 112 2 46 2 115 4 141 1 94 1 272 4 170 1 73 2 274 1 226 1 122 1 76 2 199 1 325 1 125 1 54 1 53 1 101 1 175 1 103 4 377 1 201 4 37 1 283 1 307 2 284 1 
2 1 108 2 158 1 41 1 86 1 313 1 42 1 314 1 110 1 65 1 290 1 291 2 44 2 112 2 46 2 115 4 141 1 30 2 297 1 94 1 272 4 170 1 73 2 274 1 149 2 122 1 199 1 325 1 125 1 229 2 54 1 53 1 101 1 175 1 103 4 377 1 201 4 306 1 283 1 356 1 284 1 
2 1 108 2 360 1 158 1 186 1 41 1 86 1 313 1 42 1 314 1 110 1 65 1 290 1 44 2 66 2 291 3 112 3 46 3 115 5 141 1 94 1 272 4 170 1 73 2 226 1 274 1 122 1 76 2 199 1 325 1 125 1 54 1 53 1 101 1 175 1 103 4 377 1 201 5 37 1 283 1 307 2 284 1 
2 1 108 2 360 1 158 1 186 1 41 1 86 1 313 1 42 1 314 1 110 1 65 1 290 1 44 2 66 2 291 3 112 3 46 3 115 5 141 1 94 1 272 4 170 1 73 2 226 1 274 1 122 1 76 2 199 1 325 1 125 1 54 1 53 1 101 1 175 1 103 4 377 1 201 5 37 1 283 1 307 2 284 1 
2 1 41 1 86 1 42 1 290 1 44 2 291 2 46 2 141 1 94 1 149 2 53 1 54 1 101 1 103 4 201 4 204 1 306 1 108 2 158 1 313 1 314 1 110 1 65 1 112 2 115 4 30 2 272 4 170 1 73 2 274 1 122 1 325 1 125 1 229 2 175 1 377 1 283 1 284 1 
358 8 332 2 3 1 264 1 39 1 285 4 313 1 286 1 64 1 318 1 216 1 217 2 339 2 140 1 141 1 220 2 341 1 193 2 166 1 247 2 95 2 119 2 96 1 99 1 346 1 175 1 176 1 178 1 376 7 202 2 351 1 131 2 279 3 184 8 259 2 354 1 305 1 282 2 82 1 
332 1 335 1 309 1 22 1 39 1 285 2 311 1 313 1 217 1 339 3 141 1 341 1 247 1 144 1 72 1 273 1 251 1 373 1 344 1 98 1 256 1 175 1 153 1 202 1 203 1 259 1 354 1 305 2 282 1 
332 1 38 2 335 1 309 1 285 2 311 1 5 1 43 1 293 1 217 1 339 6 321 1 245 1 341 3 247 1 72 2 373 1 344 1 256 2 304 1 178 1 202 1 259 1 305 3 282 1 263 1 
38 1 332 2 21 1 335 11 309 1 285 4 311 2 363 1 217 2 218 1 339 14 90 1 341 8 247 2 144 1 72 1 273 2 373 11 344 4 98 1 256 2 303 3 176 1 352 1 351 1 202 2 203 2 259 1 305 6 132 3 282 2 20 1 381 1 
38 1 358 1 332 1 4 1 208 1 39 1 285 2 313 1 216 1 217 1 114 1 339 2 220 1 141 2 341 1 69 1 193 1 247 1 119 1 97 1 344 1 51 1 98 1 175 2 329 1 176 1 376 1 257 1 202 1 351 1 279 1 131 1 184 1 259 1 354 1 305 1 282 1 106 1 
38 2 332 3 335 7 3 1 39 1 4 2 285 6 85 2 5 1 43 1 339 20 243 1 245 1 141 3 341 10 193 2 247 3 144 2 147 2 51 1 344 7 98 1 256 8 304 1 257 2 351 1 202 3 203 2 259 3 354 1 205 1 305 10 263 1 358 3 309 3 208 2 311 3 313 1 216 1 217 3 321 1 218 4 220 1 221 1 69 2 119 2 72 4 273 2 373 7 77 2 175 3 176 1 233 2 376 3 131 2 279 2 184 3 330 2 282 3 
332 1 335 1 373 1 285 2 344 1 311 1 256 1 177 1 178 1 217 1 218 1 339 2 202 1 203 1 259 1 341 2 247 1 282 1 
332 1 72 1 335 1 323 1 309 1 373 1 285 2 344 1 256 1 178 1 217 1 339 2 202 1 259 1 305 2 247 1 282 1 144 1 
332 1 335 2 309 1 285 2 311 1 217 1 339 4 218 1 341 2 247 1 144 1 72 1 273 1 373 2 344 2 256 2 178 1 203 1 202 1 259 1 305 2 282 1 
332 1 335 1 373 1 285 2 344 1 311 1 318 1 256 1 177 1 217 1 218 1 339 2 202 1 203 1 259 1 341 2 247 1 282 1 
332 1 72 1 335 1 323 1 309 1 373 1 285 2 344 1 318 1 256 1 217 1 339 2 202 1 259 1 305 2 247 1 282 1 144 1 
332 1 335 2 309 1 285 2 311 1 318 1 217 1 339 4 218 1 341 2 247 1 144 1 72 1 273 1 373 2 344 2 256 2 203 1 202 1 259 1 305 2 282 1 
332 1 72 1 335 2 309 1 273 1 373 2 285 2 344 2 311 1 256 2 217 1 218 1 202 1 203 1 339 4 259 1 341 2 305 2 247 1 282 1 144 1 
38 1 358 1 332 1 4 1 208 1 285 2 217 1 339 2 341 1 220 1 141 1 69 1 193 1 247 1 119 1 147 1 175 1 176 1 376 1 257 1 351 1 202 1 131 1 279 1 184 1 259 1 305 1 282 1 
38 1 358 1 332 1 4 1 285 2 217 1 339 2 10 1 341 1 220 1 141 1 69 1 193 1 195 1 247 1 119 1 151 1 175 1 176 1 376 1 351 1 202 1 131 1 279 1 184 1 259 1 305 1 282 1 
332 1 335 2 309 1 285 2 311 1 217 1 339 4 218 1 341 2 247 1 144 1 72 1 273 1 373 2 344 2 98 1 256 2 203 1 202 1 259 1 305 2 282 1 
358 1 332 1 335 2 309 1 4 1 208 1 285 2 311 1 64 1 217 1 218 1 339 4 341 2 141 1 69 1 193 1 247 1 144 1 147 1 119 1 72 1 273 1 373 2 344 2 256 2 175 1 376 1 257 1 203 1 202 1 131 1 279 1 184 1 259 1 305 2 330 1 282 1 
332 1 335 1 309 1 22 1 39 1 285 2 311 1 313 1 217 1 218 1 339 3 141 1 341 2 247 1 144 1 273 1 373 1 344 1 98 1 256 1 175 1 153 1 202 1 203 1 353 1 259 1 354 1 305 1 282 1 
332 2 309 3 60 2 285 4 209 1 311 3 367 1 217 2 340 1 339 19 218 3 163 1 341 9 247 2 70 1 298 1 144 3 197 1 72 3 273 3 52 2 256 6 303 2 352 1 203 3 305 10 132 1 282 2 20 1 59 1 
332 3 309 2 60 1 285 6 311 3 367 1 217 3 218 2 340 1 339 26 163 2 341 14 247 3 70 1 144 2 197 1 72 2 120 1 372 1 273 3 32 1 52 4 302 1 126 2 256 4 303 2 234 1 258 1 352 2 203 3 305 12 132 2 282 3 59 2 
332 3 309 5 60 1 285 6 40 1 209 1 311 5 5 1 43 1 367 1 217 3 321 1 340 1 339 41 218 4 163 1 245 1 341 20 247 3 70 1 144 4 197 1 120 1 72 4 372 1 273 4 32 1 52 4 302 1 126 1 256 8 304 1 303 4 234 1 258 1 352 3 203 4 305 21 132 3 282 3 20 1 263 1 59 2 
332 4 309 4 60 1 285 8 40 1 209 1 311 5 5 1 43 1 367 1 217 4 321 1 340 1 339 38 218 3 163 1 245 1 341 20 247 4 70 1 144 3 197 1 120 1 72 4 372 1 273 4 32 1 52 4 302 1 126 2 256 7 304 1 303 4 234 1 258 1 352 3 203 4 305 18 132 3 282 4 20 1 263 1 59 2 
332 2 309 8 60 1 285 4 311 8 5 1 43 1 367 1 217 2 321 1 340 1 339 52 218 7 90 2 163 1 245 1 341 27 247 2 70 1 144 7 197 1 120 1 72 7 372 1 273 7 32 1 52 4 302 1 126 1 256 14 304 1 303 4 234 1 258 1 352 2 203 7 305 25 132 4 282 2 20 2 263 1 59 1 
109 1 280 1 33 1 345 1 93 1 265 1 262 1 24 1 189 1 146 1 
75 1 215 1 
300 1 123 1 280 1 281 1 265 1 262 1 24 1 189 1 146 1 
84 1 109 1 33 1 86 1 17 1 265 1 24 1 89 1 189 1 103 1 337 2 181 1 280 1 93 1 262 1 272 1 146 1 107 1 
84 1 109 1 33 1 86 1 17 1 265 1 24 1 89 1 189 1 103 1 337 2 181 1 280 1 93 1 262 1 272 1 146 1 107 1 
84 1 109 1 33 1 86 1 17 1 265 1 24 1 89 1 189 1 103 1 337 2 181 1 280 1 93 1 262 1 272 1 146 1 107 1 
269 1 206 1 292 1 
269 1 206 1 292 1 
295 1 246 1 
295 1 269 1 246 1 
35 1 359 1 
38 1 39 2 359 1 313 2 265 1 24 1 189 1 215 1 366 1 337 1 28 1 116 1 141 2 272 1 146 1 50 1 75 1 17 1 175 2 103 1 102 1 19 1 35 1 280 1 354 2 262 1 107 1 
206 1 292 1 
295 1 269 1 246 1 
358 2 332 1 285 2 313 2 137 1 217 1 339 2 191 1 140 1 141 2 341 1 193 1 247 1 224 1 119 1 95 2 98 1 99 1 326 1 175 2 176 1 376 2 202 1 351 1 131 1 279 1 184 2 259 1 81 1 305 1 282 1 
119 1 358 1 361 1 286 1 376 1 105 1 131 1 279 1 184 1 220 1 193 1 155 1 11 1 82 1 
0 1 14 1 358 1 1 1 3 1 87 2 361 1 16 1 365 1 376 1 338 1 105 1 113 1 179 1 131 1 184 1 193 1 369 1 
0 1 14 1 358 2 1 1 3 1 87 2 361 1 16 1 64 1 365 1 376 2 338 1 105 1 113 1 179 1 131 1 184 2 193 1 369 1 
0 1 14 1 358 1 1 1 3 1 87 2 16 1 365 1 376 1 338 1 105 1 179 1 131 1 184 1 219 1 193 1 369 1 
78 1 
2 1 324 1 325 1 86 1 125 1 290 1 65 1 214 1 377 1 94 1 
207 5 273 2 309 2 85 1 311 2 210 2 86 5 125 5 347 1 65 5 203 2 268 5 30 10 144 2 307 5 
377 1 201 1 86 1 103 1 272 1 44 1 
358 4 2 2 211 1 286 1 159 2 290 2 65 2 161 1 44 2 139 1 220 2 193 1 12 1 94 1 271 1 272 3 119 1 325 2 125 2 15 2 152 2 103 3 376 4 180 1 201 4 131 1 279 1 184 4 82 1 
293 1 377 1 324 1 86 1 125 1 65 1 214 1 
2 1 186 1 86 2 65 1 290 1 66 1 44 1 30 1 94 1 272 1 325 1 76 1 125 1 103 1 377 1 201 1 307 1 
2 4 41 2 85 2 86 8 290 4 188 3 44 3 190 1 138 1 192 2 342 1 193 1 194 2 144 2 94 4 15 1 152 2 347 2 103 5 201 5 203 2 307 6 358 2 207 6 309 2 311 2 312 2 210 2 64 1 65 8 161 1 214 1 368 1 162 2 268 6 220 1 69 1 165 2 30 12 272 5 119 1 273 2 324 1 325 4 124 2 125 9 377 2 376 2 131 2 279 6 184 2 
207 5 2 2 309 2 311 2 210 2 86 5 290 2 65 5 44 1 268 5 9 1 30 6 144 2 94 2 272 1 120 1 372 1 273 2 32 1 325 2 15 1 125 8 152 1 347 1 103 1 303 1 234 1 377 2 201 1 258 1 352 1 203 2 132 1 133 1 307 3 
2 1 309 1 22 1 39 1 311 2 210 2 313 1 62 1 136 1 290 1 65 2 141 1 245 1 168 1 94 1 272 1 225 1 226 1 325 1 125 2 347 1 53 1 175 1 304 1 103 1 354 1 355 1 263 1 
38 1 358 1 332 1 39 2 22 2 208 1 4 1 285 2 313 2 160 1 217 1 339 1 220 1 141 3 193 1 69 1 247 1 168 1 147 1 119 1 175 3 176 1 376 1 257 1 202 1 131 1 279 1 184 1 259 1 354 2 305 1 282 1 
207 2 2 1 325 1 86 4 125 1 15 1 152 1 65 2 290 1 377 2 321 1 268 2 30 4 307 2 94 1 
104 1 359 1 280 1 93 1 189 1 
183 1 280 1 189 1 
183 1 280 1 189 1 
183 1 280 1 189 1 
280 1 212 1 189 1 
280 1 212 1 189 1 
280 1 212 1 189 1 
280 1 189 1 
265 1 262 1 
332 1 225 1 72 3 309 2 285 2 311 2 256 5 304 2 367 1 217 1 218 2 339 10 245 2 341 5 305 5 282 1 247 1 263 1 
332 1 285 2 311 1 256 1 367 1 217 1 203 1 339 2 218 1 341 2 247 1 282 1 
332 1 72 1 309 1 273 1 285 2 311 1 256 2 367 1 217 1 203 1 339 4 218 1 341 2 305 2 247 1 282 1 144 1 
332 3 72 1 285 6 209 1 126 1 256 2 304 1 367 1 217 3 339 3 218 1 245 1 341 1 305 2 247 3 282 3 71 1 
332 5 309 5 285 10 209 1 311 5 5 1 43 1 367 1 217 5 321 1 339 34 218 5 245 3 341 16 142 1 247 5 270 1 144 3 71 1 31 1 370 1 72 7 273 3 126 2 256 12 304 3 303 4 352 1 203 3 305 18 132 3 282 5 20 1 263 2 
332 1 309 1 285 2 311 1 5 1 43 1 367 1 217 1 321 1 339 8 341 4 245 1 247 1 120 1 72 2 256 2 303 1 304 1 352 1 132 1 305 4 282 1 263 1 
332 2 309 1 285 4 311 2 5 1 43 1 367 1 217 2 321 1 339 11 218 1 245 1 341 6 142 1 247 2 72 2 120 1 273 1 256 3 304 1 303 2 352 1 203 1 305 5 132 1 282 2 20 1 263 1 
332 3 309 3 285 6 311 3 5 1 43 1 367 1 217 3 321 1 218 1 339 19 245 1 341 9 142 1 247 3 144 2 120 1 72 3 372 1 273 2 32 1 126 1 256 4 304 1 303 1 234 1 258 1 352 1 203 2 132 1 305 10 282 3 263 1 
332 3 309 2 285 6 311 3 5 1 43 1 367 1 217 3 321 1 218 2 339 17 245 1 341 10 142 1 247 3 144 1 120 1 72 3 372 1 273 2 32 1 126 1 256 5 304 1 303 1 234 1 352 1 203 2 258 1 132 1 305 7 282 3 263 1 
332 1 309 1 285 2 311 1 5 1 43 1 367 1 217 1 321 1 339 8 341 4 245 1 247 1 120 1 72 2 256 2 303 1 304 1 352 1 132 1 305 4 282 1 263 1 
332 1 309 2 285 2 311 2 367 1 217 1 218 1 339 12 341 6 247 1 144 2 120 1 72 1 372 1 273 2 32 1 256 2 303 1 234 1 352 1 203 2 258 1 132 1 305 6 282 1 
332 4 309 2 285 8 311 3 5 1 43 1 367 1 217 4 321 1 218 2 339 18 245 1 341 10 142 1 247 4 144 1 120 1 72 3 372 1 273 2 32 1 126 2 256 5 304 1 303 1 234 1 258 1 352 1 203 2 305 8 132 1 282 4 263 1 
332 4 309 2 285 8 209 1 311 3 367 1 217 4 218 3 339 16 341 9 247 4 144 2 120 1 72 3 372 1 273 3 32 1 126 2 256 6 303 1 234 1 258 1 352 1 203 3 305 7 132 1 282 4 
72 3 309 1 311 1 5 1 43 2 256 6 304 3 339 7 218 3 245 3 341 3 305 4 263 1 
332 4 309 2 285 8 209 1 311 3 5 1 43 1 367 1 217 4 321 1 218 1 339 18 245 1 341 10 247 4 144 1 120 1 72 3 372 1 273 2 32 1 126 2 256 4 304 1 303 1 234 1 258 1 352 1 203 2 305 8 132 1 282 4 263 1 
332 2 72 2 309 1 285 4 311 1 5 1 126 1 256 3 43 1 304 1 217 2 321 1 339 8 218 1 341 4 245 1 305 4 247 2 282 2 263 1 
72 2 309 1 311 1 5 1 43 1 256 2 304 1 293 1 321 1 339 6 245 1 341 3 305 3 263 1 
332 1 72 1 309 1 273 1 285 2 311 1 256 2 217 1 203 1 339 4 218 1 341 2 305 2 142 1 247 1 282 1 144 1 
72 1 309 1 273 1 311 1 256 2 303 2 352 1 339 7 203 1 218 1 341 3 305 4 132 1 20 1 144 1 
332 2 309 3 285 4 311 3 5 1 363 1 43 1 217 2 321 1 218 4 339 23 90 1 245 2 341 11 247 2 144 2 71 1 72 5 273 2 126 2 256 9 304 2 303 2 203 2 132 2 305 12 282 2 20 1 263 1 
339 1 305 1 303 1 
339 1 341 1 132 1 
332 1 72 2 273 1 309 1 285 2 85 1 311 1 256 3 217 1 339 6 203 1 218 1 341 3 142 1 305 3 282 1 247 1 144 1 
332 1 309 2 285 2 311 2 367 1 217 1 218 1 339 12 341 6 247 1 144 2 120 1 72 1 372 1 273 2 32 1 256 2 303 1 234 1 352 1 203 2 258 1 132 1 305 6 282 1 
72 1 309 1 311 1 256 2 304 1 339 6 218 1 341 3 245 1 305 3 263 1 
332 1 72 1 285 2 5 1 126 1 256 2 43 1 304 1 217 1 218 1 339 3 341 1 245 1 305 2 247 1 282 1 71 1 
38 1 141 1 313 1 314 1 301 1 175 1 349 1 
38 1 371 1 250 1 313 1 301 1 314 1 349 1 175 1 47 1 141 1 237 1 261 1 
358 4 119 1 286 1 230 1 64 1 376 4 131 1 279 1 80 1 184 4 220 1 193 1 82 1 
249 1 358 2 119 1 159 1 287 1 213 1 376 2 279 1 131 2 184 2 221 1 69 1 193 1 169 1 
0 1 14 1 358 1 376 1 131 1 184 1 87 1 16 1 220 1 193 1 
358 2 119 1 3 1 64 1 376 2 191 1 279 1 131 1 184 2 140 1 193 1 
358 5 119 2 286 1 346 1 230 1 159 1 64 1 376 4 279 3 131 2 184 5 140 1 220 1 193 2 166 1 82 1 
358 5 119 2 333 1 286 1 346 1 230 1 159 1 64 1 376 4 279 3 131 2 184 5 140 1 220 1 193 2 82 1 
119 1 293 1 358 1 376 1 131 1 279 1 184 1 220 1 193 1 286 1 82 1 
38 1 119 1 358 1 4 1 39 1 313 1 175 2 376 1 216 1 257 1 279 1 131 1 184 1 354 1 141 2 220 1 69 1 193 1 
38 1 358 1 308 1 39 2 4 1 313 2 159 1 110 1 216 1 141 2 193 1 69 2 119 2 252 1 53 1 175 2 376 1 257 1 131 1 279 3 184 1 354 1 283 1 
38 1 358 2 308 1 39 2 4 1 313 2 159 1 110 1 216 1 141 2 193 1 69 2 119 2 252 1 151 1 53 1 175 2 376 2 131 1 279 3 80 1 184 2 354 1 283 1 
358 3 308 1 41 1 86 1 289 1 159 1 188 1 8 1 220 1 193 1 69 1 194 1 272 2 119 1 252 1 103 2 376 3 377 1 201 1 279 4 131 1 80 1 184 3 
119 1 308 1 358 3 252 1 41 1 86 1 159 1 188 1 103 2 377 1 376 3 201 1 131 1 279 4 80 1 184 3 220 1 69 1 165 1 193 1 194 1 272 2 
358 1 376 1 131 1 96 1 184 1 193 1 
95 1 249 1 358 7 119 2 3 1 264 1 96 1 346 1 64 1 287 1 376 6 368 1 350 1 279 3 131 3 140 1 184 7 220 2 69 1 193 2 166 1 
38 2 332 2 358 1 335 1 309 1 4 1 39 1 208 1 285 4 311 1 5 1 313 1 64 1 137 1 43 1 216 1 217 2 321 1 339 6 341 3 245 1 141 2 69 1 193 1 247 2 119 1 147 1 72 2 373 1 344 1 98 1 256 2 304 1 175 2 233 1 376 1 257 1 202 2 279 1 131 1 259 2 184 1 354 1 305 3 330 1 282 2 263 1 
358 1 2 2 41 1 86 1 65 1 290 2 214 1 161 1 188 1 44 1 162 1 192 1 220 1 165 1 194 1 94 2 272 3 50 1 324 1 325 2 125 1 124 1 103 3 377 1 376 1 201 2 279 2 184 1 
358 1 119 1 96 1 288 1 376 1 190 1 368 1 279 2 131 2 184 1 69 1 193 1 194 1 
38 1 119 1 358 1 4 1 39 1 151 1 313 1 175 2 376 1 216 1 279 1 131 1 184 1 354 1 141 2 220 1 69 1 193 1 
249 1 358 1 119 1 159 1 287 1 376 1 368 1 350 1 279 1 131 2 184 1 69 1 193 1 
38 1 374 1 49 1 375 1 267 1 
38 1 50 1 274 1 41 1 374 1 86 1 362 1 53 1 110 1 375 2 103 2 267 2 377 1 244 1 164 1 49 2 154 1 283 1 272 2 
374 1 141 1 313 1 81 1 326 1 375 1 224 1 175 1 267 1 
374 1 164 1 154 1 
34 1 27 1 296 1 6 1 48 1 236 1 185 1 55 1 
135 1 74 1 6 2 55 4 336 1 56 1 348 1 34 1 296 4 48 1 236 3 167 2 223 1 185 2 
6 1 242 1 55 2 232 1 378 1 34 1 27 1 296 2 48 1 236 1 167 1 185 1 
74 1 6 1 55 3 56 2 34 1 27 1 296 3 48 1 236 1 223 2 185 1 357 1 
157 2 236 2 29 1 13 1 
34 1 182 1 27 1 296 1 48 1 55 1 
198 1 34 1 27 1 296 2 6 1 48 1 236 1 167 1 185 1 55 2 
68 1 
34 1 27 1 296 1 6 1 48 1 236 1 185 1 55 1 
293 1 6 1 236 1 185 1 
34 1 296 1 6 1 48 1 236 1 185 1 55 1 
117 1 55 1 83 1 
34 1 74 1 27 1 239 1 296 3 6 1 48 1 236 1 185 1 223 2 55 3 56 1 
34 1 296 2 6 1 48 1 236 1 167 1 185 1 55 2 156 1 
0 1 334 1 135 1 87 1 55 1 338 1 34 1 27 1 296 1 48 1 236 1 
34 1 27 1 296 1 6 1 48 1 236 1 55 1 
34 1 27 1 296 1 6 2 48 1 185 1 55 1 
6 1 277 1 88 1 55 2 278 1 34 2 27 1 296 2 48 2 236 1 
198 1 135 1 6 1 55 3 173 1 336 1 34 1 27 1 296 3 48 1 236 2 167 2 185 1 
14 1 0 1 87 2 6 1 55 2 338 1 34 1 67 1 27 1 296 2 48 1 236 1 167 1 185 1 369 1 
135 1 6 1 55 4 336 1 57 1 34 2 27 1 296 4 48 2 236 2 167 2 185 1 156 1 
198 1 34 1 27 1 296 3 6 1 48 1 236 1 167 1 185 1 223 1 55 3 
135 1 236 1 336 1 348 1 
6 1 236 1 

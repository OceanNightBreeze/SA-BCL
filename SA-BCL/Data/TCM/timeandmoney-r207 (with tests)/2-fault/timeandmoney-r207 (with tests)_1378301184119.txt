#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (18,140,172) 21 107 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (18,140,172) 21 107 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (18,140,172) 21 (97,253,330) 121 275 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 195 319 238 229 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 195 208 273 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 195 208 238 229 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 195 208 238 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 195 319 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 195 319 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 195 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (18,140,172) 21 107 29 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (18,140,172) 21 107 29 111 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 2 122 3 177 1 237 9 272 1 4 1 155 1 45 1 321 1 184 2 293 1 106 5 210 6 353 1 81 1 299 1 53 2 300 2 33 2 213 1 34 1 35 1 91 1 15 2 311 9 169 1 117 2 228 4 
318 2 122 3 177 1 237 9 272 1 4 1 155 1 45 1 321 1 184 2 293 1 106 5 210 6 353 1 81 1 299 1 53 2 300 2 33 2 213 1 34 1 35 1 91 1 15 2 311 9 169 1 117 2 228 4 
318 2 122 4 177 1 237 10 272 1 4 1 155 1 45 1 321 1 184 2 293 1 106 6 210 7 353 1 81 1 299 1 53 2 300 2 33 2 213 1 34 1 35 1 91 1 15 2 311 10 169 1 117 2 228 5 
318 2 122 2 177 1 237 7 272 1 4 1 45 1 321 1 184 2 293 1 106 4 210 4 353 1 81 1 299 1 53 2 300 2 33 2 213 1 34 1 35 1 91 1 15 2 311 7 169 1 117 1 228 3 
210 3 353 1 318 1 300 1 53 1 122 1 33 1 213 1 34 1 272 1 237 4 35 1 155 1 311 4 184 1 117 2 106 3 228 2 
96 1 353 1 318 1 300 1 33 1 34 1 272 1 237 2 285 1 311 2 15 1 16 1 321 1 184 1 293 1 106 1 
210 1 353 1 81 1 318 2 122 1 33 2 34 1 272 1 237 3 311 3 15 1 106 2 228 1 
318 2 122 3 237 9 272 1 4 1 155 1 184 1 106 5 210 7 297 1 353 1 81 1 53 1 300 1 84 1 33 2 213 1 34 1 35 1 15 1 311 9 169 1 117 2 228 4 
318 2 122 3 237 9 272 1 4 1 155 1 184 1 106 5 210 7 297 1 353 1 81 1 53 1 300 1 84 1 33 2 213 1 34 1 35 1 15 1 311 9 169 1 117 2 228 4 
71 1 204 1 41 1 
190 2 134 1 41 1 
183 1 120 1 258 2 75 2 140 2 142 2 18 2 172 2 
0 1 120 1 201 1 123 1 24 1 23 2 183 1 156 1 46 2 256 2 102 1 258 3 75 2 158 1 127 1 105 1 322 1 9 1 324 1 49 1 11 1 51 1 161 2 132 1 302 1 89 1 193 1 136 1 167 2 284 1 360 1 140 2 142 2 18 2 172 3 40 1 289 1 
174 1 120 1 126 1 258 1 75 1 259 1 140 1 142 1 18 1 172 1 
21 1 140 1 97 1 
174 1 271 1 253 2 204 1 73 2 112 1 240 1 75 1 258 1 140 1 142 1 18 1 41 1 172 1 330 1 
73 1 217 1 278 1 225 1 253 1 
73 2 217 1 113 1 278 1 253 2 197 1 204 1 41 1 
73 1 217 1 253 1 
174 1 120 1 278 1 253 1 73 1 168 1 126 1 75 1 258 1 259 1 140 1 142 1 18 1 172 1 
41 1 
19 1 73 2 217 1 113 1 278 1 253 2 204 1 41 1 
28 1 264 1 22 1 269 1 148 2 278 2 253 5 179 1 204 1 281 1 73 5 217 2 113 1 337 1 336 2 243 1 78 2 351 1 41 1 
49 1 263 1 161 1 55 1 132 1 201 1 291 1 302 1 23 1 136 1 284 1 102 1 256 1 75 1 258 2 127 1 140 1 322 1 18 1 172 2 
183 1 71 1 
354 1 191 1 183 2 258 2 75 1 140 2 142 1 18 1 172 2 
182 1 55 1 62 1 
49 1 161 1 132 1 201 1 302 1 23 1 308 1 136 1 284 1 183 1 102 1 256 1 258 1 127 1 322 1 172 1 
183 1 258 3 75 3 291 1 140 3 142 1 18 3 172 3 
174 1 126 1 258 1 75 1 140 1 18 1 172 1 
174 1 354 1 258 1 75 1 140 1 142 1 191 1 18 1 172 1 
174 1 120 1 201 1 291 1 271 1 253 1 23 1 347 1 73 1 183 1 46 2 240 1 102 1 256 1 258 4 75 3 158 1 127 1 322 1 9 1 324 1 49 1 11 1 51 1 263 1 161 1 354 1 132 1 302 1 89 1 193 1 136 1 112 1 167 1 284 1 360 1 115 1 140 3 142 2 18 3 40 1 172 4 289 1 330 1 
21 1 107 1 258 1 75 1 140 2 291 1 18 1 172 1 
174 1 263 1 354 1 291 2 253 1 271 1 347 1 73 1 112 1 240 1 75 3 258 3 140 3 142 1 18 3 41 1 172 3 340 1 330 1 
354 1 55 1 291 1 182 1 75 2 258 2 140 2 142 1 18 2 172 2 
49 1 161 1 132 1 201 1 302 1 23 1 136 1 284 1 183 1 102 1 256 1 258 1 127 1 322 1 172 1 
49 1 161 1 132 1 201 1 346 1 23 1 98 1 136 1 284 1 183 1 102 1 256 1 258 1 322 1 172 1 
345 1 290 1 67 1 182 2 156 2 46 2 159 1 339 1 9 1 11 1 352 1 51 1 55 2 31 1 89 2 193 1 167 4 92 1 312 1 62 2 196 1 360 1 17 1 289 1 
112 1 174 1 66 1 258 1 75 1 140 1 18 1 172 1 
118 1 21 1 107 1 263 1 354 1 291 2 74 1 183 1 75 4 258 4 140 5 142 1 18 4 172 4 
66 1 174 1 126 1 258 2 75 2 140 2 18 2 172 2 
241 1 215 1 
241 1 215 1 
6 1 56 1 
6 1 56 1 
6 1 56 1 
265 1 241 1 215 1 
265 1 241 1 215 1 
241 1 260 1 215 1 
6 1 241 2 56 1 88 1 215 2 72 1 
265 1 241 1 215 1 
241 1 32 1 215 1 
241 1 32 1 215 1 
241 1 32 1 215 1 
250 3 246 1 69 1 327 1 150 1 83 2 82 2 253 2 303 1 305 2 215 2 72 1 73 2 93 2 287 2 241 2 242 1 207 1 41 1 
250 1 316 1 147 1 230 1 252 1 253 1 73 1 183 1 75 2 258 2 241 1 242 1 260 1 244 1 128 1 82 1 83 1 13 1 215 1 93 1 287 1 140 2 18 2 172 2 
300 1 53 1 184 1 
300 1 184 1 16 1 
53 2 300 3 16 1 70 1 328 1 292 1 
209 1 53 1 300 2 16 1 70 1 328 1 
53 1 300 2 16 1 70 2 328 1 
316 1 290 1 148 1 253 5 204 1 333 2 73 5 103 1 336 1 337 3 78 1 243 1 159 1 79 1 351 2 244 1 128 1 262 2 278 4 190 3 214 1 134 1 59 2 286 1 217 1 310 1 113 1 312 1 196 1 343 1 41 2 344 1 
316 4 269 1 290 3 148 2 68 1 253 9 2 1 204 1 333 6 73 9 103 3 336 2 337 8 243 1 78 2 159 3 79 1 351 6 261 1 278 7 54 1 301 1 190 9 214 2 134 3 192 5 59 6 309 1 217 6 310 2 113 1 312 3 196 3 225 5 41 5 
316 1 148 1 269 1 290 1 253 3 204 1 333 2 73 3 103 1 336 1 337 3 78 1 159 1 351 2 262 1 278 2 190 4 214 1 134 2 59 2 310 1 312 1 196 1 343 1 41 3 344 1 
316 2 148 1 269 1 290 2 253 4 204 1 333 4 73 4 103 2 336 1 337 5 78 1 159 2 351 4 261 1 262 2 278 3 301 1 190 7 214 1 134 3 59 4 309 1 310 1 312 2 196 2 343 1 41 4 344 1 
284 1 200 1 71 1 
284 1 186 1 
39 1 
284 1 136 1 
284 3 200 2 132 1 223 1 144 1 136 1 
284 1 132 1 136 1 
284 1 202 1 
146 1 290 1 67 2 149 1 119 1 89 3 58 1 90 1 167 7 92 3 156 4 60 1 47 1 114 1 159 1 314 1 277 2 
146 1 290 1 67 2 149 1 119 1 89 3 58 1 90 1 167 7 92 3 156 4 60 1 47 1 114 1 159 1 314 1 277 2 
146 1 290 1 67 2 149 1 119 1 89 3 58 1 307 1 90 1 167 7 92 3 156 4 60 1 47 1 114 1 159 1 314 1 277 2 
146 1 119 2 149 2 290 4 67 5 46 2 156 16 103 3 76 3 47 5 26 4 159 4 277 3 51 1 188 1 131 1 57 1 58 1 89 15 248 1 193 1 90 1 167 31 92 10 219 1 60 2 195 1 114 2 137 1 196 3 312 3 360 1 314 1 289 1 
146 1 290 1 119 1 149 1 67 3 46 4 156 5 47 1 159 1 8 1 277 2 51 2 57 1 89 4 58 1 193 2 90 1 167 9 92 4 60 1 114 1 360 2 288 1 289 2 
20 1 318 1 201 1 320 1 292 1 178 1 23 1 237 2 272 1 335 1 274 1 256 1 184 1 350 1 322 1 106 1 210 1 353 1 161 1 53 1 52 1 300 2 33 1 110 1 34 1 37 1 311 2 15 1 16 1 141 1 
317 1 318 1 201 1 292 1 320 1 178 1 23 1 237 3 335 1 256 1 184 1 350 1 349 1 322 1 106 1 210 2 353 1 161 1 53 1 52 1 300 2 211 1 33 1 110 1 34 1 37 1 311 3 15 1 16 1 141 1 
317 1 201 1 320 1 292 1 178 1 23 1 237 2 256 1 350 1 349 1 184 1 322 1 106 1 210 2 353 1 161 1 52 1 300 2 53 1 110 1 34 1 15 1 311 2 16 1 141 1 
318 1 42 1 201 1 43 1 178 2 23 1 237 1 256 1 102 1 350 2 322 1 161 1 342 1 326 1 52 2 211 1 189 1 33 1 136 1 284 1 311 1 15 2 227 1 
20 1 318 1 201 1 320 1 292 1 178 1 23 1 237 1 272 1 335 1 256 1 184 1 350 1 349 1 322 1 161 1 53 1 52 1 300 2 33 1 110 1 37 1 311 1 15 1 16 1 141 1 
163 1 
21 1 148 1 121 1 201 1 42 1 253 2 23 2 97 1 239 1 73 2 255 1 256 2 102 2 185 1 336 1 337 1 275 1 322 1 78 1 243 1 351 1 161 2 326 1 86 1 136 1 284 1 310 1 217 2 113 1 61 1 140 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 19 1 73 2 217 1 21 1 113 1 61 1 121 1 140 1 253 2 275 1 97 1 
239 1 73 1 21 1 148 1 61 1 121 1 336 1 140 1 253 1 275 1 78 1 243 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 61 1 121 1 140 1 253 1 275 1 97 1 
239 1 73 1 21 1 148 1 61 1 121 1 336 1 140 1 253 1 275 1 78 1 243 1 97 1 
146 1 67 2 290 1 71 1 182 1 183 2 46 2 156 3 159 1 9 1 277 1 11 1 352 1 51 1 55 1 58 1 89 3 193 1 90 1 167 6 92 2 60 1 114 1 62 1 360 1 289 1 
331 1 175 1 67 1 1 1 290 2 123 1 182 4 183 1 46 4 156 8 103 2 76 3 47 1 26 3 159 1 9 2 324 1 325 1 11 1 51 2 55 11 188 1 89 6 193 2 167 14 92 2 195 1 62 11 196 2 312 1 360 2 65 1 289 2 
1 1 201 1 291 1 123 1 23 1 154 1 182 1 183 1 256 1 102 1 46 2 156 1 258 2 75 1 127 1 322 1 9 1 324 1 49 1 27 1 11 1 161 1 51 1 263 1 132 1 302 1 89 1 193 1 136 1 308 1 284 1 167 2 222 1 140 1 360 1 18 1 172 2 289 1 
146 1 1 1 290 3 201 2 291 1 151 2 100 2 256 3 102 1 46 6 156 10 103 2 258 3 47 4 159 3 9 3 49 2 11 3 161 3 263 1 51 3 109 2 55 7 302 2 58 1 167 20 60 1 114 1 62 7 312 2 268 1 18 1 172 3 67 4 123 1 23 3 348 1 182 7 183 2 125 1 349 1 75 1 127 2 322 2 277 1 324 1 132 2 89 10 193 3 90 1 136 2 282 2 284 2 92 8 196 2 360 3 140 1 40 2 289 3 
270 1 201 2 42 1 291 1 123 1 153 1 23 7 274 1 256 8 102 2 46 4 156 1 25 1 157 1 349 1 258 1 75 1 105 2 322 2 9 2 160 1 324 1 352 1 11 2 161 8 51 2 12 1 326 1 87 1 89 1 193 2 136 2 284 3 167 2 140 1 360 2 18 1 172 1 289 2 
332 1 67 1 1 1 290 1 182 1 46 2 156 1 103 1 75 1 258 1 159 1 9 1 11 1 51 1 354 1 55 1 89 2 193 1 167 3 92 1 62 1 196 1 312 1 360 1 140 1 142 1 18 1 172 1 289 1 
352 1 11 1 51 1 290 1 55 1 193 1 182 1 167 2 92 1 46 2 156 2 47 1 62 1 196 1 360 1 339 1 9 1 289 1 
352 1 11 1 51 1 67 1 55 1 89 2 193 1 182 1 167 2 92 1 46 2 62 1 312 1 360 1 17 1 159 1 9 1 289 1 
290 1 67 1 182 2 156 2 46 2 103 1 47 1 159 1 9 1 11 1 352 1 51 1 55 2 89 2 193 1 167 4 92 2 196 1 62 2 312 1 360 1 289 1 
11 1 51 1 12 1 290 1 55 1 193 1 182 1 167 2 92 1 46 2 156 2 47 1 62 1 196 1 360 1 339 1 9 1 289 1 
11 1 51 1 67 1 12 1 55 1 89 2 193 1 182 1 167 2 92 1 46 2 62 1 312 1 360 1 17 1 159 1 9 1 289 1 
290 1 67 1 182 2 156 2 46 2 103 1 47 1 159 1 9 1 11 1 51 1 12 1 55 2 89 2 193 1 167 4 92 2 196 1 62 2 312 1 360 1 289 1 
290 1 67 1 182 2 156 2 46 2 103 1 47 1 159 1 9 1 11 1 51 1 55 2 89 2 193 1 167 4 92 2 196 1 62 2 312 1 360 1 289 1 
201 1 123 1 23 1 183 1 156 1 256 1 102 1 46 2 258 1 127 1 322 1 9 1 324 1 49 1 11 1 161 1 51 1 132 1 302 1 89 1 193 1 136 1 167 2 284 1 360 1 40 1 172 1 289 1 
201 1 123 1 346 1 23 1 98 1 183 1 156 1 256 1 102 1 46 2 258 1 322 1 9 1 324 1 49 1 11 1 161 1 51 1 162 1 132 1 89 1 193 1 136 1 167 2 284 1 360 1 172 1 289 1 
290 1 1 1 67 1 182 2 156 2 46 2 103 1 47 1 159 1 9 1 11 1 51 1 55 2 89 2 193 1 167 4 92 2 196 1 62 2 312 1 360 1 289 1 
67 1 290 1 201 1 23 1 182 2 274 1 156 2 256 1 46 2 103 1 258 1 47 1 127 1 322 1 159 1 9 1 49 1 11 1 161 1 51 1 55 2 132 1 302 1 89 2 193 1 136 1 282 1 167 4 284 1 92 2 312 1 62 2 196 1 360 1 40 1 172 1 289 1 
1 1 290 1 182 1 46 2 156 2 103 1 75 1 258 1 47 1 159 1 9 1 11 1 51 1 354 1 55 1 357 1 89 1 193 1 167 3 92 1 312 1 196 1 62 1 360 1 140 1 142 1 18 1 172 1 289 1 
67 1 290 2 319 1 238 1 273 1 46 4 156 10 257 1 103 2 76 3 47 2 26 4 159 2 8 1 10 3 208 2 51 2 188 1 89 11 193 2 216 1 167 21 92 3 195 3 196 2 312 2 139 1 360 2 116 1 229 1 289 2 
67 2 290 2 238 1 273 1 46 4 156 8 257 1 103 2 76 2 47 2 26 3 159 2 8 1 10 2 208 2 51 2 188 1 89 9 193 2 216 1 167 17 92 4 195 2 196 2 312 2 139 1 360 2 116 1 229 1 289 2 
146 1 290 1 67 1 238 1 46 2 156 5 257 1 76 1 26 1 159 1 277 1 8 1 10 1 208 1 51 1 89 4 58 1 193 1 90 1 167 9 92 1 60 1 195 1 114 1 360 1 229 1 289 1 
67 3 290 3 238 1 46 4 156 9 257 1 103 3 76 1 47 3 26 2 159 3 8 1 10 2 208 1 51 2 188 1 89 10 193 2 216 2 167 19 92 6 195 1 196 3 312 3 139 1 360 2 116 1 170 1 229 1 289 2 
51 1 89 2 193 1 238 2 167 4 156 2 46 2 257 1 76 1 195 1 26 1 360 1 8 1 229 1 289 1 10 1 208 2 
93 1 327 1 150 1 82 1 83 1 287 1 241 1 104 1 215 1 72 1 
147 1 260 1 
93 1 130 1 82 1 83 1 287 1 241 1 329 1 361 1 215 1 
250 2 246 1 327 1 150 1 83 1 82 1 253 1 303 1 305 1 215 1 72 1 73 1 93 1 287 1 241 1 242 1 207 1 41 1 
250 2 246 1 327 1 150 1 83 1 82 1 253 1 303 1 305 1 215 1 72 1 73 1 93 1 287 1 241 1 242 1 207 1 41 1 
250 2 246 1 327 1 150 1 83 1 82 1 253 1 303 1 305 1 215 1 72 1 73 1 93 1 287 1 241 1 242 1 207 1 41 1 
194 1 265 1 88 1 
194 1 265 1 88 1 
280 1 32 1 
280 1 32 1 88 1 
230 1 252 1 
250 1 316 1 147 1 230 1 252 1 253 1 334 1 73 1 183 1 258 2 75 2 241 1 260 1 244 1 128 1 278 1 82 1 83 1 303 1 13 1 305 1 215 1 93 1 287 1 140 2 18 2 172 2 
194 1 265 1 
280 1 32 1 88 1 
1 1 201 1 123 1 23 2 256 2 46 2 156 1 157 1 258 2 338 1 105 2 322 1 9 1 160 1 324 1 11 1 298 1 161 2 51 1 164 1 89 1 193 1 136 1 284 1 167 2 140 2 360 1 313 1 172 2 315 1 289 1 
161 2 53 1 300 2 201 1 30 1 292 1 178 1 23 2 110 1 249 1 335 1 274 1 256 2 184 1 16 1 349 1 141 1 322 1 323 1 
161 1 53 1 300 2 279 1 201 1 292 1 178 1 23 1 110 1 335 1 256 1 184 1 16 1 349 1 141 1 323 1 322 1 
161 1 326 1 201 1 42 1 178 1 23 1 249 1 136 1 284 1 102 1 256 1 322 1 227 1 64 1 
161 1 53 1 300 2 30 1 201 1 292 1 178 1 23 1 110 1 249 1 335 1 256 1 184 1 16 1 349 1 141 1 322 1 323 1 
251 1 
22 1 337 1 71 1 204 1 351 1 281 1 41 1 
148 1 253 1 204 1 73 1 205 1 337 1 336 1 78 1 243 1 351 1 190 1 134 1 358 1 217 1 218 1 113 1 41 2 
148 4 200 2 290 2 201 3 202 2 253 5 204 2 333 6 255 1 102 1 256 3 103 2 7 1 337 9 336 4 159 2 161 3 341 1 108 2 109 2 212 2 59 6 310 2 217 5 113 3 224 2 312 2 171 2 22 1 235 2 23 3 73 5 274 1 240 2 322 4 243 4 78 4 186 3 351 8 129 1 132 3 190 12 85 2 247 2 281 1 134 6 136 3 284 10 94 1 196 2 198 1 143 2 144 1 41 8 
148 2 290 2 232 1 319 1 253 1 204 2 99 1 333 5 255 1 73 1 103 2 76 1 337 8 26 1 336 2 78 2 243 2 159 2 351 5 50 1 212 1 190 6 134 3 59 5 310 1 217 1 113 1 195 1 38 1 196 2 312 2 171 2 145 1 41 5 173 1 
174 1 148 1 290 2 120 1 233 1 253 1 73 1 126 1 258 1 75 1 259 1 336 1 337 2 78 1 243 1 159 1 351 2 187 1 212 1 58 1 60 1 168 1 114 1 140 1 171 2 142 1 18 1 172 1 
148 1 22 1 281 1 204 1 336 1 337 1 243 1 78 1 351 1 41 1 
290 2 109 1 212 1 190 10 134 5 333 5 59 5 103 2 196 2 312 2 337 5 171 2 159 2 351 5 41 5 
73 1 217 1 113 1 253 1 204 1 41 1 
269 1 148 2 201 1 42 1 253 3 23 4 255 2 73 3 256 4 102 2 185 1 336 2 337 2 322 1 78 2 243 1 296 1 351 2 161 4 129 2 326 1 86 1 136 1 284 1 310 2 217 4 113 2 94 1 226 1 
120 1 201 1 23 1 183 1 46 2 256 1 102 1 258 3 75 2 158 1 127 1 322 1 9 1 324 1 49 1 11 1 51 1 161 1 132 1 302 1 89 1 193 1 136 1 167 1 284 1 360 1 140 2 142 2 18 2 172 3 40 1 289 1 
148 1 190 4 134 2 204 2 333 2 59 2 255 1 310 1 336 1 337 1 243 1 78 1 277 1 351 2 41 4 
93 1 287 1 206 1 
93 1 287 1 206 1 
93 1 327 1 287 1 356 1 252 1 
93 1 287 1 206 1 
93 1 287 1 63 1 
93 1 287 1 63 1 
93 1 287 1 63 1 
93 1 287 1 
241 1 215 1 
146 1 290 1 67 2 319 1 46 2 156 4 76 1 26 1 159 1 277 1 8 1 51 1 89 4 58 1 193 1 90 1 167 8 92 2 60 1 195 1 114 1 360 1 289 1 
146 1 67 2 290 2 319 1 46 4 156 6 103 1 76 1 47 1 26 2 77 1 159 1 277 1 8 1 51 2 188 1 58 1 89 5 193 2 90 1 167 11 92 3 60 1 195 1 114 1 196 1 360 2 289 2 
51 1 319 1 89 1 193 1 167 2 156 1 46 2 195 1 76 1 26 1 360 1 8 1 289 1 
146 1 290 3 67 3 232 1 319 1 46 6 156 10 103 2 76 1 47 2 77 1 26 1 159 2 277 1 8 1 50 1 51 3 57 1 58 1 89 7 193 3 90 1 167 17 92 5 60 1 195 1 114 1 196 2 312 1 38 1 360 3 145 1 289 3 
146 1 290 1 67 2 319 1 46 2 156 4 76 1 26 1 159 1 277 1 8 1 51 1 89 4 58 1 193 1 90 1 167 8 92 2 60 1 195 1 114 1 360 1 289 1 
51 1 319 1 89 1 193 1 167 2 156 1 46 2 195 1 76 1 26 1 360 1 8 1 289 1 
146 1 290 3 67 3 232 1 319 1 46 8 156 10 103 2 76 1 47 2 26 1 77 1 159 2 277 1 8 1 50 1 51 4 57 2 58 1 89 8 193 4 90 1 167 18 92 5 60 1 195 1 114 1 38 1 196 2 312 1 360 4 145 1 289 4 
290 3 67 3 232 1 319 1 46 8 156 9 103 3 76 1 47 3 26 1 159 2 8 1 50 1 51 4 57 2 89 7 193 4 167 16 92 6 195 1 38 1 196 3 312 2 360 4 116 1 145 1 289 4 
146 1 67 3 290 1 89 4 58 1 90 2 167 7 92 6 156 3 60 3 114 3 47 3 159 1 
146 1 290 3 67 3 232 1 319 1 46 8 156 10 103 2 76 1 47 1 26 1 159 2 277 1 8 1 50 1 51 4 57 2 58 1 89 8 193 4 90 1 167 18 92 4 60 1 195 1 114 1 38 1 196 2 312 1 360 4 116 1 145 1 289 4 
146 1 51 2 290 1 67 2 57 1 58 1 89 4 193 2 90 1 167 8 92 3 156 4 46 4 60 1 47 1 114 1 360 2 159 1 277 1 289 2 
146 1 67 2 290 1 71 1 89 3 58 1 90 1 167 6 92 2 156 3 60 1 114 1 159 1 277 1 
51 1 67 1 290 1 89 2 193 1 167 4 92 2 46 2 156 2 103 1 312 1 196 1 47 1 77 1 360 1 159 1 289 1 
167 2 156 1 76 1 195 1 26 1 89 1 
146 1 331 1 290 3 67 3 156 9 46 2 103 2 76 2 47 1 26 2 159 3 277 1 51 1 188 1 57 1 58 1 89 9 193 1 90 1 167 18 92 4 60 1 114 1 312 2 196 2 360 1 65 1 289 1 
167 1 26 1 89 1 
167 1 156 1 76 1 
51 1 290 1 67 2 109 1 89 3 193 1 167 6 92 3 46 2 156 3 103 1 196 1 47 1 312 1 77 1 360 1 159 1 289 1 
290 2 67 1 232 1 319 1 46 2 156 6 103 2 76 1 47 1 26 1 159 2 8 1 50 1 51 1 89 6 193 1 167 12 92 2 195 1 196 2 312 2 38 1 360 1 145 1 289 1 
290 1 67 1 58 1 89 3 167 6 92 2 156 3 60 1 114 1 47 1 159 1 
146 1 51 1 67 1 57 1 89 2 193 1 90 1 283 1 167 3 92 2 156 1 46 2 60 1 47 1 114 1 360 1 289 1 
51 1 67 3 290 2 233 1 89 5 58 1 193 1 167 10 92 5 46 2 156 5 60 2 114 2 47 2 360 1 159 2 8 1 289 1 
51 1 290 1 193 1 167 2 92 1 46 2 156 2 196 1 47 1 360 1 8 1 289 1 
51 1 67 1 290 1 89 2 193 1 167 4 92 2 46 2 156 2 103 1 312 1 196 1 47 1 360 1 159 1 8 1 289 1 
51 3 67 1 57 1 89 2 193 3 283 1 167 3 92 2 46 6 156 1 60 1 114 1 47 1 360 3 116 1 8 1 289 3 
146 1 290 5 67 7 46 10 156 16 103 3 76 3 47 5 26 4 77 1 159 5 277 1 8 1 51 5 131 1 188 1 57 2 58 2 248 1 89 18 193 5 90 1 283 1 167 34 92 12 219 1 60 3 195 1 114 3 196 3 312 3 360 5 116 1 289 5 
21 1 107 1 29 1 140 1 
21 1 107 1 29 1 140 1 254 1 203 1 180 1 199 1 111 1 
284 1 161 1 326 1 256 1 102 1 201 1 42 1 322 1 71 1 23 1 136 1 
49 1 161 1 132 1 201 1 291 1 302 1 23 1 136 1 284 1 183 1 102 1 256 1 75 1 258 2 140 1 322 1 18 1 172 2 
49 1 174 1 161 1 129 1 132 2 201 1 202 1 291 1 271 1 302 1 23 1 136 2 112 1 284 3 183 1 256 1 75 1 258 2 224 1 140 2 322 1 18 2 172 2 
174 1 201 1 291 1 202 1 271 1 23 2 98 1 183 1 256 2 258 2 75 1 322 1 276 1 49 1 161 2 129 1 132 2 136 2 112 1 284 3 224 1 140 2 18 2 172 2 
200 1 201 1 202 1 253 2 23 3 204 1 73 2 256 3 240 1 102 1 322 1 295 1 276 1 186 1 161 3 129 1 132 1 165 1 136 1 217 1 284 4 224 1 41 1 
161 3 129 1 200 1 132 1 201 1 202 1 85 1 253 2 23 3 204 1 136 1 73 2 284 4 217 1 102 1 240 1 256 3 224 1 322 1 276 1 186 1 41 1 
161 1 256 1 270 1 201 1 322 1 23 1 
161 7 270 1 132 1 201 2 87 1 153 1 23 6 236 1 136 2 284 3 274 1 102 2 256 7 220 1 25 1 349 1 105 1 322 3 95 1 144 1 160 1 
146 1 290 1 67 2 1 1 201 1 291 1 23 1 100 1 182 1 183 2 274 1 156 3 46 4 256 1 258 2 75 1 127 1 322 1 159 1 277 1 9 2 49 1 11 2 51 2 161 1 55 1 132 1 302 1 89 3 58 1 193 2 90 1 136 1 282 1 167 6 284 1 92 2 60 1 62 1 114 1 140 1 360 2 18 1 172 2 40 1 315 1 289 2 
22 1 148 2 200 1 253 3 235 1 23 1 204 1 73 3 102 1 256 1 240 1 337 1 336 2 78 2 243 2 351 1 186 1 161 1 278 1 85 1 247 1 281 1 284 2 217 2 113 1 94 1 143 1 41 1 
161 2 200 1 270 1 132 1 201 1 23 2 136 1 284 2 274 1 256 2 7 1 322 2 144 1 
161 4 326 1 42 1 201 1 23 4 359 1 136 1 284 1 274 1 102 1 256 4 322 1 276 1 
161 2 129 1 132 1 201 1 23 2 236 1 136 1 284 1 125 1 256 2 48 1 294 1 322 2 95 1 
161 1 256 1 102 1 300 1 184 1 16 1 201 1 141 1 322 1 23 1 
161 2 164 1 201 1 23 2 136 1 284 1 274 1 256 2 349 1 322 1 160 1 
161 5 129 1 326 1 42 1 201 2 23 4 87 1 359 1 136 2 284 3 274 1 102 1 256 5 25 1 322 2 160 1 
161 5 129 1 326 1 42 1 201 2 23 4 166 1 87 1 359 1 136 2 284 3 274 1 102 1 256 5 322 2 160 1 
49 1 161 1 132 1 201 1 291 1 23 1 98 1 136 1 284 1 183 1 102 1 256 1 75 1 258 2 140 1 322 1 18 1 172 2 
161 1 129 1 132 1 201 1 23 1 236 1 136 1 284 1 256 1 220 1 322 2 95 1 144 1 
298 1 124 1 258 1 140 1 338 1 133 1 313 1 172 1 80 1 
234 1 80 1 267 1 
183 1 124 1 138 1 133 1 80 1 
174 1 278 1 234 1 271 1 152 1 253 2 133 2 204 1 347 1 267 1 112 1 73 2 183 1 124 2 240 1 138 2 41 1 80 1 330 1 
353 1 71 1 106 1 34 1 
353 1 318 1 311 1 33 1 106 1 34 1 237 1 
15 1 52 1 311 1 
101 1 353 1 245 1 318 1 311 3 293 2 33 1 106 1 306 1 34 1 237 3 272 1 
210 1 353 1 318 1 311 2 33 1 106 1 117 1 34 1 237 2 
318 1 53 1 300 1 33 1 272 1 237 1 35 1 311 1 184 1 106 1 228 1 
318 1 311 1 33 1 106 1 34 1 237 1 272 1 
353 1 318 1 311 1 33 1 34 2 237 1 272 1 
318 2 231 1 33 2 3 1 34 1 272 1 237 2 311 2 221 1 106 1 
210 2 353 1 318 1 122 1 33 1 34 1 272 1 237 3 4 1 311 3 169 1 106 2 228 1 
210 1 353 1 318 1 300 2 53 1 292 1 33 1 135 1 34 1 272 1 237 2 311 2 16 1 184 1 106 1 
210 2 353 1 318 2 122 1 33 2 34 1 272 1 237 4 155 1 311 4 117 1 106 2 228 1 
353 1 318 1 311 1 33 1 106 1 34 1 237 1 272 1 
210 2 245 1 353 2 318 1 122 1 33 1 34 2 181 1 237 4 101 1 311 4 293 1 106 3 228 1 
210 1 297 1 353 1 318 1 266 1 176 1 33 1 34 1 272 1 237 2 311 2 106 1 
101 1 353 1 245 2 318 1 311 3 293 2 33 1 106 1 304 1 34 1 237 3 272 1 
5 2 106 2 36 1 14 1 
44 1 318 1 311 1 33 1 237 1 272 1 
210 1 353 1 318 1 311 2 169 1 33 1 106 1 34 1 237 2 272 1 
355 1 
353 1 318 1 311 1 33 1 106 1 34 1 237 1 272 1 
210 1 353 1 318 1 311 3 169 1 293 1 33 1 106 1 34 1 237 3 272 1 
122 1 106 1 181 1 228 1 
106 1 34 1 

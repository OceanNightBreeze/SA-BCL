#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 1 357 1 71 2 358 2 361 1 98 3 263 1 12 1 66 1 73 1 224 3 338 2 21 1 
0 1 357 1 358 2 361 4 64 1 328 1 66 1 330 1 224 9 208 2 373 2 338 5 69 1 7 1 342 1 9 2 232 2 231 1 71 2 98 9 263 1 12 1 102 1 73 6 241 1 352 1 276 2 21 3 
0 1 357 1 358 2 361 4 64 1 328 1 66 1 330 1 224 9 208 2 373 2 338 5 69 1 7 1 342 1 9 2 232 2 231 1 71 2 98 9 263 1 12 1 102 1 73 6 241 1 352 1 276 2 21 3 
0 1 357 1 358 2 361 5 64 1 328 1 66 1 330 1 224 10 208 2 373 2 338 6 69 1 7 1 342 1 9 2 232 2 231 1 71 2 98 10 263 1 12 1 102 1 73 7 241 1 352 1 276 2 21 4 
0 1 357 1 358 2 361 3 64 1 66 1 330 1 224 7 208 1 373 2 338 4 69 1 7 1 342 1 9 2 232 2 231 1 71 2 98 7 263 1 12 1 102 1 73 4 241 1 352 1 276 2 21 2 
232 1 71 1 358 1 361 2 98 4 263 1 12 1 328 1 102 1 66 1 73 3 224 4 208 2 276 1 373 1 338 3 21 1 69 1 
342 1 9 1 71 1 358 1 247 1 157 1 98 2 263 1 12 1 66 1 224 2 332 1 352 1 338 1 373 1 276 1 
357 1 358 2 361 4 82 1 64 1 328 1 66 1 224 9 5 1 208 2 338 5 373 1 69 1 9 1 232 1 71 2 98 9 263 1 12 1 102 1 73 7 241 1 276 1 21 3 
357 1 358 2 361 4 82 1 64 1 328 1 66 1 224 9 5 1 208 2 338 5 373 1 69 1 9 1 232 1 71 2 98 9 263 1 12 1 102 1 73 7 241 1 276 1 21 3 
76 1 229 1 72 1 134 1 218 1 113 1 150 1 136 1 178 1 162 1 223 1 17 1 369 1 89 1 
290 1 
178 2 15 1 280 1 333 1 198 1 113 2 89 1 290 1 
182 1 341 1 246 2 280 2 198 1 283 2 113 5 174 1 220 1 178 5 137 2 333 1 215 1 170 1 370 1 317 1 217 1 89 2 290 1 
377 1 
181 1 127 2 290 1 
229 2 162 2 76 2 17 2 223 2 148 1 369 2 150 1 
109 2 76 2 156 1 325 1 23 1 85 1 304 1 362 2 162 2 253 1 223 2 255 1 368 1 369 2 310 1 256 1 95 1 70 1 144 2 229 3 53 1 147 1 35 1 148 1 150 1 262 1 169 1 13 1 349 1 17 3 268 2 242 1 381 2 196 1 274 1 108 1 302 1 
229 1 162 1 76 1 17 1 223 1 134 1 369 1 218 1 150 1 136 1 
229 1 323 1 34 1 134 1 113 1 178 1 237 1 365 1 162 1 17 1 333 1 379 1 67 1 290 1 
76 1 229 1 323 1 134 1 113 2 178 2 237 1 162 1 223 1 17 1 333 1 379 1 369 1 67 1 290 1 
178 1 280 1 259 1 113 1 89 1 
178 2 280 1 333 1 198 1 113 2 89 1 290 1 51 1 
178 1 280 1 113 1 
109 1 70 1 76 1 229 2 155 1 53 1 156 1 35 1 169 1 362 1 349 1 162 1 253 1 57 1 223 1 17 2 268 1 274 1 108 1 142 1 
229 2 76 1 148 2 162 2 17 2 223 1 369 1 19 1 46 1 
57 1 141 1 130 1 
109 1 70 1 229 1 53 1 156 1 35 1 148 1 169 1 55 1 362 1 253 1 349 1 17 1 268 1 274 1 108 1 
377 1 
356 1 209 1 76 4 229 5 155 1 34 1 148 1 221 1 162 5 223 4 17 5 369 1 142 2 46 1 
229 2 162 2 76 2 17 2 223 2 134 1 218 1 319 1 
229 3 162 3 76 3 17 3 223 3 369 1 148 1 142 1 
229 1 162 1 76 1 17 1 223 1 134 1 218 1 
229 1 162 1 76 1 17 1 223 1 134 1 369 1 19 1 46 1 
109 1 76 3 155 1 323 1 156 1 134 1 113 1 325 1 23 1 85 1 178 1 362 1 162 3 253 1 223 3 368 1 369 2 310 1 67 1 256 1 142 1 32 1 70 1 144 1 229 4 53 1 147 1 35 1 148 1 150 1 262 1 169 1 237 1 349 1 17 4 268 1 242 1 379 1 381 2 318 1 196 1 274 1 108 1 46 1 
221 1 229 2 162 2 76 1 17 2 223 1 34 1 148 1 142 1 
76 3 229 3 155 1 323 1 134 1 113 1 178 1 237 1 162 3 223 3 17 3 379 1 216 1 369 1 67 1 318 1 290 1 142 2 46 1 
76 2 229 2 162 2 223 2 17 2 57 1 369 1 142 1 130 1 46 1 
109 1 70 1 229 1 53 1 156 1 35 1 148 1 169 1 362 1 253 1 349 1 17 1 268 1 274 1 108 1 
109 1 70 1 229 1 53 1 156 1 35 1 148 1 81 1 84 1 169 1 362 1 253 1 17 1 268 1 108 1 
144 4 293 1 321 1 77 1 282 1 147 1 296 1 23 1 11 1 262 1 238 1 57 2 308 1 255 2 242 1 88 1 244 1 310 1 141 2 256 2 381 2 196 1 130 2 143 1 
229 1 162 1 76 1 17 1 223 1 323 1 134 1 319 1 
359 1 112 1 118 1 
172 1 18 1 112 2 165 1 118 2 99 1 
112 1 118 1 
112 1 118 1 
172 1 99 1 
172 1 99 1 
172 1 99 1 
112 1 118 1 305 1 
112 1 118 1 305 1 
112 1 118 1 305 1 
125 1 112 1 118 1 
125 1 112 1 118 1 
125 1 112 1 118 1 
76 2 112 1 359 1 303 1 80 1 22 1 113 1 219 1 178 1 250 1 162 2 223 2 30 1 31 1 118 1 371 1 340 1 229 2 148 1 187 1 166 1 40 1 299 1 17 2 
94 1 112 2 303 2 165 1 187 2 234 1 22 2 113 2 219 1 178 2 28 1 269 1 30 3 300 1 31 2 118 2 290 1 107 1 131 2 
307 2 232 1 332 1 65 1 373 2 
232 1 276 1 373 1 
332 1 276 1 373 1 
307 1 252 1 232 2 332 1 65 1 373 3 
307 1 232 1 163 1 332 1 65 1 373 2 
133 1 246 1 321 1 280 1 283 1 198 1 80 1 199 2 113 5 178 5 27 1 329 1 137 1 308 1 181 1 333 1 370 3 89 4 290 2 143 1 312 1 293 1 183 1 123 2 166 1 346 1 40 1 215 2 271 1 127 3 317 1 105 2 
246 2 321 3 280 6 198 1 283 2 199 6 113 9 220 1 114 5 178 9 27 3 137 2 308 3 181 3 333 1 370 8 89 7 6 1 290 5 143 3 312 2 121 1 293 3 183 1 259 5 166 4 149 1 212 1 58 1 272 1 215 6 271 2 127 9 317 1 105 6 
133 1 246 1 321 1 283 1 113 3 199 2 220 1 178 3 329 1 137 1 27 1 308 1 333 1 181 2 370 3 89 2 290 3 143 1 312 1 293 1 123 1 166 1 271 1 215 2 127 4 105 2 
133 1 246 1 321 2 283 1 199 4 113 4 220 1 178 4 137 1 329 1 27 2 308 2 333 1 181 3 370 5 89 3 290 4 143 2 312 1 293 2 123 2 166 2 149 1 58 1 272 1 271 1 215 4 127 7 105 4 
277 1 
377 1 
279 1 169 1 
35 1 108 1 169 1 
336 1 169 1 
35 1 169 1 
47 1 35 1 291 2 108 1 169 3 61 1 
144 7 321 1 282 2 295 1 235 2 314 1 261 1 100 1 298 1 254 1 238 3 255 4 270 1 180 1 354 1 256 3 226 1 143 1 
278 1 321 4 282 5 175 1 23 1 285 3 286 1 27 3 254 5 308 3 255 16 180 1 4 4 226 2 256 15 143 4 144 31 293 3 147 1 295 1 235 3 314 1 261 2 262 1 264 1 298 2 238 10 242 1 270 2 353 1 354 1 381 2 45 1 62 1 
321 1 281 1 282 3 23 2 254 1 255 5 180 1 116 1 256 4 226 1 143 1 144 9 147 2 295 1 235 2 314 1 261 1 262 2 298 1 238 4 242 2 270 1 381 4 62 1 
144 7 321 1 282 2 295 1 235 2 314 1 261 1 298 1 254 1 238 3 255 4 270 1 180 1 354 1 256 3 226 1 143 1 
144 7 321 1 282 2 295 1 235 2 314 1 261 1 298 1 254 1 238 3 255 4 270 1 180 1 354 1 256 3 226 1 143 1 
109 1 48 1 358 1 156 1 362 1 253 1 224 1 205 1 68 2 9 2 53 1 71 1 35 1 98 1 189 1 54 1 169 1 103 2 239 1 268 1 44 1 275 1 20 2 
109 1 358 1 156 1 324 1 200 1 362 1 204 1 252 1 66 1 224 1 288 1 332 1 68 1 373 2 9 1 232 1 71 1 53 1 38 1 98 1 265 1 103 1 268 1 106 1 276 1 20 1 
109 1 358 1 156 1 200 1 326 1 362 1 204 1 252 1 66 1 224 2 288 1 332 1 338 1 68 1 373 2 9 1 232 1 71 1 53 1 38 1 98 2 263 1 12 1 265 1 73 1 103 1 268 1 106 1 276 1 20 1 
109 1 358 1 156 1 324 1 362 1 252 1 204 1 224 3 288 1 332 1 338 1 68 1 373 2 9 1 232 1 71 1 53 1 38 1 98 3 263 1 12 1 265 1 103 1 73 2 268 1 273 1 275 1 106 1 276 1 20 1 
109 1 156 1 324 1 362 1 204 1 252 1 224 2 288 1 332 1 338 1 68 1 373 2 9 1 232 1 53 1 98 2 263 1 12 1 265 1 103 1 73 2 268 1 273 1 20 1 276 1 
243 1 
48 1 280 6 323 1 134 1 283 1 177 1 178 5 287 2 137 1 333 1 181 2 290 2 339 2 229 1 230 1 53 1 10 1 185 1 186 1 297 1 348 2 237 1 17 1 193 2 153 1 109 2 154 2 246 1 111 1 360 1 156 1 197 4 159 2 198 3 113 5 201 2 362 2 253 2 365 1 162 1 370 2 67 1 311 1 312 1 164 1 34 1 35 1 375 1 169 1 268 2 44 1 215 2 379 1 127 2 317 1 
229 1 280 2 323 1 10 1 134 1 34 1 197 2 198 1 159 1 186 1 113 3 375 1 178 3 237 1 15 1 365 1 162 1 17 1 379 1 67 1 311 1 164 1 
280 1 323 1 134 1 197 3 198 1 113 3 178 3 287 1 162 1 365 1 333 1 67 1 311 1 290 1 164 1 229 1 10 1 34 1 186 1 375 1 237 1 15 1 17 1 379 1 
154 1 323 1 280 2 134 1 197 3 198 1 159 1 113 3 178 3 287 1 162 1 365 1 333 1 67 1 311 1 290 1 164 1 229 1 10 1 34 1 186 1 375 1 237 1 15 1 17 1 379 1 
154 4 246 1 111 1 280 7 323 1 134 1 197 6 283 1 198 3 159 4 113 5 201 2 161 1 178 5 363 1 287 4 137 1 162 1 365 1 181 2 333 5 206 1 370 1 67 1 311 1 339 2 290 5 164 1 93 1 229 1 10 1 34 1 186 1 375 1 297 1 348 2 237 1 15 1 17 1 193 2 215 1 379 1 317 1 171 1 
323 1 280 4 134 1 283 1 178 4 287 2 137 1 181 2 333 1 339 2 290 2 229 1 10 1 186 1 297 1 237 1 348 2 17 1 193 2 154 2 246 1 111 1 360 1 197 4 198 2 159 2 113 4 201 2 162 1 365 1 370 1 67 1 311 1 164 1 34 1 375 1 379 1 215 1 317 1 127 2 
154 2 246 1 280 4 111 1 323 1 134 1 197 4 159 2 198 2 283 1 113 4 201 2 178 4 161 1 363 1 287 2 137 1 162 1 365 1 333 1 181 2 370 1 67 1 311 1 290 1 339 2 164 1 93 1 229 1 10 1 34 1 186 1 375 1 297 1 348 2 237 1 17 1 193 2 215 1 379 1 317 1 
154 2 246 1 280 4 111 1 323 1 134 1 197 4 159 2 198 2 283 1 113 4 201 2 178 4 161 1 363 1 287 2 137 1 162 1 365 1 333 1 181 2 370 1 67 1 311 1 290 1 339 2 164 1 93 1 229 1 10 1 34 1 186 1 375 1 297 1 348 2 237 1 17 1 193 2 215 1 379 1 317 1 
154 2 246 1 280 4 323 1 134 1 197 4 159 2 198 2 283 1 113 4 178 4 363 1 287 2 137 1 162 1 365 1 333 1 370 1 225 2 67 1 311 1 290 1 164 1 229 1 10 1 34 1 186 1 375 1 190 2 297 1 348 2 237 1 315 1 56 1 17 1 350 1 193 2 215 1 379 1 127 2 317 1 
154 3 246 1 111 1 323 1 280 5 134 1 197 5 198 2 283 1 159 3 113 4 201 2 161 1 178 4 363 1 287 3 137 1 162 1 365 1 333 1 181 2 370 1 67 1 311 1 290 1 339 2 164 1 93 1 229 1 10 1 34 1 186 1 375 1 297 1 348 2 237 1 17 1 193 2 215 1 379 1 317 1 171 1 
154 3 246 1 111 1 323 1 280 5 134 1 197 5 198 2 283 1 159 3 113 4 201 2 161 1 178 4 363 1 287 3 137 1 162 1 365 1 333 1 181 2 370 1 67 1 311 1 290 1 339 2 164 1 93 1 229 1 10 1 34 1 186 1 375 1 297 1 348 2 237 1 17 1 193 2 215 1 379 1 317 1 171 1 
154 2 246 1 280 4 323 1 360 1 134 1 197 4 159 2 198 2 283 1 113 4 178 4 287 2 365 1 137 1 162 1 333 1 370 1 225 2 67 1 311 1 290 1 164 1 229 1 10 1 34 1 186 1 375 1 190 2 297 1 348 2 237 1 315 1 17 1 193 2 215 1 379 1 127 2 317 1 
109 8 76 1 48 1 156 2 324 1 135 1 23 2 1 1 85 1 326 1 362 7 306 1 162 1 253 2 223 1 255 1 88 1 310 2 256 1 142 1 95 1 229 1 144 2 53 2 147 2 35 2 168 1 101 1 169 3 262 2 151 1 13 2 17 1 268 8 44 1 242 2 194 1 381 4 196 2 
76 1 321 1 282 1 23 1 162 1 27 1 223 1 308 1 255 1 369 1 310 1 141 1 256 2 143 1 229 1 144 3 293 1 147 1 374 1 262 1 238 1 57 1 267 1 17 1 242 1 381 2 196 1 130 1 46 1 
377 1 242 1 147 1 88 1 310 1 381 2 23 1 196 1 262 1 
355 1 321 2 282 1 284 1 175 1 23 2 85 1 285 3 286 1 254 1 27 2 308 1 255 8 4 3 310 1 256 6 141 11 143 1 95 1 144 14 293 2 147 2 374 1 233 1 148 1 210 1 262 2 238 2 57 11 242 2 381 4 196 2 130 4 
109 1 76 1 155 1 156 1 23 1 176 1 85 1 362 1 202 1 253 1 162 1 223 1 255 1 310 1 256 1 142 1 70 1 95 1 229 2 144 2 122 1 53 1 147 1 374 1 35 1 148 1 169 1 262 1 55 1 349 1 268 1 17 2 242 1 381 2 274 1 196 1 108 1 130 1 
76 1 322 2 321 3 282 4 324 1 79 2 85 1 223 1 180 1 334 2 226 1 141 7 142 1 143 3 95 1 229 3 144 20 293 2 53 2 147 3 295 1 148 2 235 1 349 2 238 8 17 3 57 7 242 3 196 3 60 1 108 2 109 3 155 1 156 2 23 3 362 3 24 1 253 1 162 1 27 2 254 4 308 2 255 10 368 2 310 3 256 10 70 2 374 1 35 2 260 2 314 1 261 1 262 3 169 2 268 3 129 1 381 6 274 2 130 7 
144 2 293 1 321 1 147 1 77 1 23 1 262 1 238 1 254 1 57 1 255 2 242 1 88 1 310 1 141 1 381 2 196 1 130 1 
144 2 282 1 147 1 23 1 11 1 262 1 238 1 57 1 308 1 242 1 88 1 310 1 141 1 381 2 256 2 196 1 130 1 143 1 
321 1 282 1 23 1 27 1 254 1 308 1 255 2 88 1 310 1 141 2 256 2 143 1 144 4 293 1 147 1 262 1 238 2 57 2 242 1 381 2 196 1 130 2 
144 2 293 1 321 1 147 1 77 1 1 1 23 1 262 1 238 1 254 1 57 1 255 2 242 1 310 1 141 1 381 2 196 1 130 1 
144 2 282 1 147 1 1 1 23 1 11 1 262 1 238 1 57 1 308 1 242 1 310 1 141 1 381 2 256 2 196 1 130 1 143 1 
321 1 282 1 23 1 1 1 27 1 254 1 308 1 255 2 310 1 141 2 256 2 143 1 144 4 293 1 147 1 262 1 238 2 57 2 242 1 381 2 196 1 130 2 
144 4 293 1 321 1 282 1 147 1 23 1 262 1 238 2 254 1 27 1 308 1 57 2 255 2 242 1 310 1 256 2 141 2 381 2 196 1 130 2 143 1 
109 1 156 1 23 1 85 1 362 1 253 1 255 1 368 1 310 1 256 1 95 1 70 1 144 2 229 1 53 1 147 1 35 1 148 1 169 1 262 1 349 1 268 1 17 1 242 1 381 2 274 1 196 1 108 1 
109 1 156 1 81 1 23 1 84 1 85 1 362 1 253 1 255 1 310 1 256 1 95 1 70 1 144 2 229 1 53 1 147 1 35 1 124 1 148 1 169 1 262 1 268 1 17 1 242 1 381 2 196 1 108 1 
321 1 282 1 23 1 27 1 254 1 308 1 255 2 310 1 141 2 256 2 143 1 144 4 293 1 147 1 374 1 262 1 238 2 57 2 242 1 381 2 196 1 130 2 
109 1 321 1 322 1 282 1 156 1 23 1 326 1 362 1 254 1 27 1 308 1 255 2 368 1 310 1 256 2 141 2 143 1 70 1 144 4 229 1 293 1 53 1 147 1 35 1 169 1 262 1 238 2 349 1 57 2 268 1 17 1 242 1 381 2 274 1 196 1 130 2 108 1 
76 1 321 1 23 1 254 1 162 1 27 1 308 1 223 1 255 2 369 1 310 1 256 1 141 1 143 1 229 1 144 3 293 1 147 1 374 1 97 1 262 1 238 1 17 1 57 1 242 1 381 2 196 1 130 1 46 1 
321 3 282 3 175 1 160 1 23 2 285 1 286 1 27 3 254 3 308 3 255 9 4 2 116 1 256 10 372 1 143 3 227 1 343 1 8 1 144 19 294 2 293 3 147 2 39 1 262 2 14 1 191 2 238 6 242 2 381 4 
321 3 282 2 160 1 23 3 249 1 285 2 286 2 254 2 27 3 179 1 308 2 255 14 116 1 4 2 140 1 256 12 372 2 143 2 343 1 144 26 96 1 294 4 293 3 147 3 37 1 39 2 262 3 347 1 14 1 191 1 238 4 242 3 381 6 62 2 
321 5 282 4 175 1 285 3 286 3 179 1 180 1 4 4 140 1 226 1 143 5 343 1 144 41 8 1 293 4 294 4 96 1 147 3 295 1 235 1 347 1 14 1 191 1 238 8 242 3 62 1 23 3 160 1 249 1 254 4 27 4 308 4 255 20 116 1 256 21 372 2 37 1 39 1 314 1 261 1 262 3 266 1 381 6 
321 5 282 4 175 1 160 1 23 4 249 1 285 3 286 3 27 4 254 3 179 1 308 3 255 20 180 1 4 4 116 1 140 1 226 1 256 18 372 2 143 4 343 1 8 1 144 38 96 1 294 4 293 4 147 4 295 1 37 1 235 1 39 1 314 1 261 1 347 1 262 4 266 1 14 1 191 1 238 7 242 4 381 8 62 2 
321 8 282 7 175 2 160 1 23 2 249 1 285 4 286 2 27 7 254 7 179 1 308 7 255 27 180 1 4 4 116 1 140 1 226 1 256 25 372 1 143 8 343 1 144 52 96 1 294 4 293 7 147 2 295 1 37 1 235 1 210 2 39 1 314 1 261 1 347 1 262 2 14 1 191 1 238 14 242 2 381 4 62 1 
213 1 112 1 303 1 165 1 187 1 300 1 234 1 31 1 22 1 118 1 
359 1 371 1 
43 1 29 1 112 1 3 1 303 1 187 1 31 1 22 1 118 1 
92 1 305 1 
125 1 18 1 366 1 
94 1 112 1 303 1 165 1 187 1 234 1 113 1 22 1 219 1 178 1 28 1 30 2 300 1 31 1 118 1 290 1 107 1 131 1 
94 1 112 1 303 1 165 1 187 1 234 1 113 1 22 1 219 1 178 1 28 1 30 2 300 1 31 1 118 1 290 1 107 1 131 1 
94 1 112 1 303 1 165 1 187 1 234 1 113 1 22 1 219 1 178 1 28 1 30 2 300 1 31 1 118 1 290 1 107 1 131 1 
18 1 92 1 305 1 
18 1 92 1 305 1 
125 1 366 1 
125 1 18 1 366 1 
340 1 299 1 
76 2 112 1 359 1 303 1 80 1 113 1 22 1 178 1 250 1 162 2 223 2 30 1 31 1 89 1 118 1 371 1 340 1 94 1 313 1 229 2 148 1 187 1 166 1 40 1 299 1 17 2 131 1 
109 2 156 1 23 1 85 1 362 2 26 1 162 2 255 1 309 1 310 1 256 1 337 1 33 1 95 1 229 2 144 2 53 1 184 1 147 1 374 1 35 1 168 1 169 1 262 1 151 1 13 2 268 2 17 2 242 1 381 2 196 1 
109 1 53 1 48 1 156 1 35 1 158 1 169 1 54 1 362 1 253 1 103 1 268 1 378 1 44 1 
75 1 109 1 232 1 53 1 156 1 324 1 158 1 38 1 362 1 252 1 204 1 103 1 268 1 332 1 288 1 138 1 276 1 373 2 
75 1 109 2 232 1 53 1 156 1 324 1 158 1 38 1 326 1 362 2 252 1 204 1 103 1 268 2 332 1 288 1 138 1 276 1 373 2 
109 1 232 1 53 1 156 1 324 1 38 1 362 1 222 1 252 1 204 1 103 1 268 1 332 1 288 1 138 1 276 1 373 2 
87 1 
246 1 283 1 174 1 137 1 170 1 215 1 333 1 370 1 317 1 290 1 
293 2 321 2 79 1 199 5 41 2 27 2 308 2 215 5 181 5 370 5 139 1 127 10 105 5 290 5 143 2 
178 1 280 1 333 1 198 1 113 1 290 1 
109 4 245 2 246 2 280 4 48 1 156 1 283 2 198 2 113 3 220 1 177 1 178 3 362 4 137 2 253 2 370 2 312 2 230 2 53 1 35 1 185 1 169 1 214 1 268 4 44 1 215 2 316 1 317 1 128 1 
377 1 
246 1 111 1 280 1 283 1 198 1 113 1 201 1 178 1 137 1 181 1 333 1 370 1 290 2 339 1 215 1 317 1 127 1 
132 2 320 1 279 3 47 1 280 5 321 2 283 4 79 2 49 2 174 1 326 1 327 2 178 5 137 4 86 2 333 2 181 6 335 2 139 2 91 1 336 2 291 2 290 8 143 2 292 1 230 1 293 2 53 4 301 2 105 6 108 3 109 3 245 1 246 4 156 3 198 3 113 5 199 6 362 3 253 1 27 2 308 2 370 9 312 2 35 3 41 2 169 10 268 3 170 1 379 2 215 8 128 1 317 4 127 12 
246 2 280 1 321 2 198 1 283 2 113 1 199 5 249 1 285 1 178 1 286 1 137 2 27 2 179 1 308 2 181 3 333 2 370 8 139 1 4 1 140 1 257 1 290 5 312 1 143 2 230 1 293 2 37 1 41 2 347 1 42 1 215 5 127 6 317 2 105 5 
76 1 246 1 321 2 134 1 283 1 50 1 218 1 113 1 136 1 161 1 178 1 137 1 162 1 223 1 370 2 369 1 139 1 226 1 143 1 229 1 72 1 295 1 150 1 41 2 261 1 17 1 215 2 317 1 
109 1 76 2 156 1 325 1 23 1 85 1 362 1 253 1 162 2 223 2 368 1 369 2 310 1 256 1 70 1 144 1 229 3 53 1 147 1 35 1 148 1 150 1 262 1 169 1 349 1 268 1 17 3 242 1 381 2 274 1 196 1 108 1 
246 1 230 1 283 1 235 1 199 2 137 1 181 2 215 2 333 2 370 1 127 4 317 1 105 2 290 4 312 1 
340 1 187 1 300 1 31 1 119 1 
364 1 187 1 31 1 
364 1 187 1 31 1 
364 1 187 1 31 1 
104 1 187 1 31 1 
104 1 187 1 31 1 
104 1 187 1 31 1 
187 1 31 1 
112 1 118 1 
144 10 321 2 147 1 282 3 295 1 50 1 23 1 261 2 262 1 238 5 254 2 255 5 242 1 116 1 381 2 226 2 256 5 143 2 
144 2 293 1 321 1 147 1 23 1 262 1 254 1 238 1 255 2 242 1 116 1 381 2 
144 4 293 1 321 1 282 1 147 1 23 1 262 1 238 2 27 1 254 1 308 1 255 2 242 1 116 1 256 2 381 2 143 1 
8 1 144 3 147 3 282 1 23 3 261 1 262 3 238 2 254 1 255 1 242 3 116 1 380 1 256 2 381 6 226 1 62 1 
321 5 282 7 175 1 23 5 285 3 286 1 27 3 254 5 308 3 255 16 180 1 4 4 116 1 117 1 226 3 256 18 143 5 8 1 144 34 293 3 147 5 295 2 235 1 314 1 261 3 262 5 264 1 238 12 242 5 353 1 380 1 381 10 45 1 62 2 
144 8 321 1 282 2 147 1 295 1 235 1 314 1 23 1 261 1 262 1 285 1 286 1 238 2 179 1 255 4 242 1 180 1 116 1 4 1 226 1 381 2 256 4 143 1 
321 2 282 2 175 1 23 2 285 1 286 1 27 1 254 1 179 1 255 6 180 1 4 2 116 1 117 1 226 1 256 5 143 1 144 11 293 1 147 2 295 1 235 1 314 1 261 1 262 2 238 3 242 2 381 4 
321 3 282 3 23 3 249 1 285 1 286 1 254 1 27 2 179 1 308 2 255 9 180 1 4 1 116 1 117 1 140 1 226 1 256 10 143 3 144 19 293 2 147 3 295 1 37 1 235 1 314 1 261 1 262 3 347 1 238 4 242 3 381 6 62 1 
321 3 282 3 23 3 249 1 285 1 286 1 254 2 27 2 179 1 308 1 255 10 180 1 4 1 116 1 117 1 140 1 226 1 256 7 143 2 144 17 293 2 147 3 295 1 37 1 235 1 314 1 261 1 262 3 347 1 238 5 242 3 381 6 62 1 
144 8 321 1 282 2 147 1 295 1 235 1 314 1 23 1 261 1 262 1 285 1 286 1 238 2 179 1 255 4 242 1 180 1 116 1 4 1 226 1 381 2 256 4 143 1 
321 2 282 1 23 1 249 1 285 1 286 1 254 1 27 2 179 1 308 2 255 6 4 1 116 1 140 1 256 6 143 2 144 12 293 2 147 1 37 1 262 1 347 1 238 2 242 1 381 2 
321 3 282 3 23 4 249 1 285 1 286 1 254 2 27 2 179 1 308 1 255 10 180 1 4 1 116 1 140 1 117 1 226 1 256 8 143 2 144 18 293 2 147 4 295 1 37 1 235 1 314 1 261 1 262 4 347 1 238 5 242 4 381 8 62 2 
321 3 282 3 23 4 249 1 285 1 286 1 254 3 27 3 179 1 308 2 255 9 4 1 116 1 140 1 256 7 143 2 144 16 8 1 293 3 147 4 37 1 262 4 347 1 238 6 242 4 381 8 62 2 
144 7 321 1 282 3 295 1 314 1 261 3 238 6 254 3 255 3 180 2 256 4 226 3 143 1 
321 3 282 3 23 4 249 1 285 1 286 1 254 1 27 2 179 1 308 1 255 10 180 1 4 1 116 1 140 1 226 1 256 8 143 2 144 18 8 1 293 2 147 4 295 1 37 1 235 1 314 1 261 1 262 4 347 1 238 4 242 4 381 8 62 2 
144 8 321 1 282 2 147 2 295 1 235 1 23 2 314 1 261 1 262 2 254 1 238 3 255 4 242 2 180 1 256 4 381 4 226 1 143 1 62 1 
377 1 
144 4 293 1 321 1 282 1 147 1 23 1 262 1 238 2 27 1 254 1 308 1 255 2 242 1 117 1 256 2 381 2 143 1 
144 7 293 1 321 1 282 1 175 1 285 1 286 1 27 1 254 1 238 2 308 1 255 3 4 2 256 4 143 1 
321 3 282 5 175 1 23 2 285 2 254 4 27 2 308 2 255 11 180 1 4 2 226 2 256 12 143 3 144 23 293 2 147 2 295 1 233 1 235 1 210 1 314 1 261 2 262 2 238 9 242 2 381 4 380 1 62 2 
144 1 4 1 256 1 
144 1 255 1 285 1 
144 6 293 1 321 1 147 1 282 2 79 1 23 1 262 1 27 1 254 1 238 3 308 1 255 3 242 1 117 1 381 2 256 3 143 1 
321 2 282 1 23 1 249 1 285 1 286 1 254 1 27 2 179 1 308 2 255 6 4 1 116 1 140 1 256 6 143 2 144 12 293 2 147 1 37 1 262 1 347 1 238 2 242 1 381 2 
254 1 238 2 144 6 255 3 321 1 282 1 295 1 226 1 256 3 261 1 143 1 
144 3 282 1 147 1 23 1 314 1 261 1 262 1 254 1 238 2 255 1 242 1 180 1 226 1 380 1 256 2 381 2 62 1 
221 1 120 1 229 1 162 1 17 1 34 1 148 1 
63 1 120 1 229 1 146 1 34 1 148 1 167 1 221 1 152 1 162 1 17 1 90 1 
109 4 110 1 53 1 48 1 156 1 35 1 169 1 326 1 362 4 25 1 253 1 268 4 44 1 
109 2 245 1 258 1 53 2 344 1 156 1 35 1 173 1 169 1 362 2 24 1 203 1 268 2 108 1 
109 1 362 1 253 1 268 1 53 1 156 1 332 1 288 1 276 1 373 1 
109 2 33 1 53 1 156 1 324 1 35 1 168 1 169 1 326 1 362 2 268 2 
109 5 245 1 48 1 53 2 156 2 35 2 168 1 169 3 326 1 362 4 25 1 306 1 253 1 268 5 44 1 194 1 
109 5 245 1 48 1 53 2 156 2 35 2 168 1 169 3 326 1 362 4 25 1 306 1 253 1 268 5 44 1 59 1 
109 1 362 1 377 1 253 1 268 1 
109 1 70 1 76 1 229 2 53 1 156 1 35 1 148 1 169 1 362 1 162 1 253 1 349 1 223 1 17 2 268 1 108 1 142 1 
109 1 70 1 245 1 76 2 229 2 323 1 53 1 134 1 156 1 35 2 148 1 169 3 362 1 162 2 349 1 223 1 17 2 268 1 335 1 67 1 336 1 108 2 142 1 
109 2 245 1 110 1 76 2 323 1 156 1 134 1 84 1 362 2 162 2 223 1 335 1 67 1 336 1 142 1 70 1 229 2 53 1 35 2 148 1 169 3 268 2 17 2 108 2 
109 3 245 1 279 1 110 1 53 1 280 1 156 1 35 1 113 2 169 4 178 2 52 1 362 3 2 1 253 1 268 3 333 1 379 1 335 1 336 1 290 1 108 1 291 1 
109 3 245 1 279 1 110 1 53 1 280 1 156 1 35 1 113 2 169 4 178 2 362 3 253 1 268 3 333 1 379 1 335 1 301 1 336 1 290 1 108 1 291 1 
109 1 362 1 268 1 53 1 156 1 101 1 
109 7 47 1 53 3 344 1 156 2 324 1 135 1 35 2 168 1 101 1 376 1 169 3 13 1 326 1 362 6 306 1 203 1 253 2 268 7 194 1 108 1 
76 1 322 1 321 1 282 2 326 1 223 1 180 1 334 1 226 1 141 1 337 1 142 1 143 1 229 2 144 6 53 1 147 2 295 1 148 2 235 1 349 1 238 2 17 2 57 1 242 2 196 2 108 1 109 1 156 1 23 2 362 1 162 1 255 3 368 1 310 2 256 3 70 1 374 1 35 1 314 1 261 1 262 2 169 1 268 1 381 4 274 1 130 1 
132 1 109 1 279 1 246 2 280 2 283 2 198 1 113 3 174 1 178 3 327 1 362 1 253 1 137 2 86 1 333 1 370 1 89 1 290 1 291 1 169 2 268 1 215 1 170 1 379 1 317 2 128 1 301 1 
109 2 47 1 53 2 156 1 35 1 101 1 169 2 326 1 362 2 268 2 91 1 291 1 108 1 
109 1 70 1 76 1 229 2 53 1 156 1 35 1 148 1 169 1 84 1 362 1 162 1 253 1 223 1 17 2 268 1 108 1 142 1 
109 1 245 1 47 1 53 2 344 1 156 1 35 1 376 1 169 1 362 1 203 1 268 1 108 1 
240 1 145 1 289 1 148 1 248 1 
76 1 134 1 113 1 218 1 83 1 136 1 178 1 162 1 223 1 333 1 369 1 89 1 290 1 229 1 145 1 72 1 345 1 150 1 17 1 195 1 
229 1 145 1 184 1 26 1 162 1 240 1 17 1 309 1 289 1 
145 1 345 1 83 1 
66 1 224 1 71 1 358 1 98 1 338 1 263 1 12 1 
342 1 71 1 358 1 361 1 98 4 263 2 12 2 115 1 73 2 331 1 224 4 207 1 338 3 21 1 
71 1 358 1 98 2 82 1 263 1 12 1 66 1 73 1 126 1 224 2 74 1 338 1 
342 2 66 1 331 1 224 3 71 1 358 1 78 1 207 2 98 3 338 1 263 1 12 1 
228 1 16 1 236 2 338 2 
66 1 224 1 71 1 192 1 358 1 98 1 
73 1 66 1 224 2 71 1 358 1 98 2 64 1 338 1 263 1 12 1 
211 1 
66 1 224 1 71 1 358 1 98 1 338 1 263 1 12 1 
377 1 
224 1 71 1 358 1 98 1 338 1 263 1 12 1 
9 1 98 1 20 1 
342 2 71 1 358 1 188 1 98 3 12 1 263 1 66 1 331 1 224 3 207 1 338 1 
73 1 224 2 71 1 358 1 98 2 208 1 338 1 263 1 12 1 
232 1 71 1 358 1 361 1 98 1 102 1 66 1 224 1 338 1 373 1 276 1 
66 1 224 1 71 1 358 1 98 1 338 1 263 1 
66 1 224 1 71 1 358 1 98 1 263 2 12 1 
251 1 66 1 224 2 71 2 358 2 351 1 36 1 98 2 338 1 263 1 
71 1 358 1 361 1 98 3 64 1 263 1 12 1 66 1 73 2 241 1 224 3 338 2 21 1 
232 1 71 1 358 1 98 2 263 1 12 1 252 1 66 1 73 1 224 2 367 1 332 1 338 1 373 2 276 1 
71 2 358 2 361 1 98 4 263 1 12 1 328 1 66 1 73 2 224 4 208 1 338 2 21 1 
342 1 71 1 358 1 98 3 64 1 12 1 263 1 73 1 66 1 224 3 338 1 
361 1 338 1 115 1 21 1 
338 1 263 1 

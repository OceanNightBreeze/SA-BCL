#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
324 2 117 2 252 1 67 1 326 1 72 2 234 9 361 2 93 1 327 1 301 1 210 5 149 1 365 2 306 1 36 6 59 4 170 9 103 1 16 1 371 3 222 1 313 2 269 1 63 1 199 2 200 1 84 1 
324 2 117 2 252 1 67 1 326 1 72 2 234 9 361 2 93 1 327 1 301 1 210 5 149 1 365 2 306 1 36 6 59 4 170 9 103 1 16 1 371 3 222 1 313 2 269 1 63 1 199 2 200 1 84 1 
324 2 117 2 252 1 67 1 326 1 72 2 234 10 361 2 93 1 327 1 301 1 210 6 149 1 365 2 306 1 36 7 59 5 170 10 103 1 16 1 371 4 222 1 313 2 269 1 63 1 199 2 200 1 84 1 
324 2 117 2 252 1 67 1 326 1 72 2 234 7 361 2 93 1 327 1 301 1 210 4 149 1 365 1 306 1 36 4 59 3 170 7 103 1 16 1 371 2 222 1 313 2 269 1 199 2 200 1 84 1 
306 1 117 1 36 3 59 2 67 1 170 4 16 1 371 1 222 1 72 1 234 4 313 1 361 1 63 1 93 1 199 1 210 3 365 2 
306 1 117 1 324 1 170 2 16 1 18 1 346 1 72 1 234 2 269 1 361 1 93 1 327 1 210 1 199 1 13 1 
306 1 324 1 36 1 252 1 59 1 170 3 16 1 371 1 234 3 361 2 93 1 199 2 210 2 
324 1 117 1 252 1 140 1 67 1 326 1 72 1 234 9 361 2 93 1 302 1 210 5 149 1 365 2 306 1 36 7 59 4 170 9 16 1 371 3 222 1 313 1 63 1 199 2 
324 1 117 1 252 1 140 1 67 1 326 1 72 1 234 9 361 2 93 1 302 1 210 5 149 1 365 2 306 1 36 7 59 4 170 9 16 1 371 3 222 1 313 1 63 1 199 2 
294 1 61 1 126 1 
292 2 61 1 349 1 
132 2 315 2 300 2 246 2 190 2 161 2 42 1 113 1 
179 1 119 1 295 1 51 1 91 1 235 2 258 1 300 2 188 1 11 2 12 2 97 1 190 2 333 1 54 1 335 1 128 1 338 1 33 2 242 1 344 1 288 1 130 1 42 1 289 1 108 1 132 3 175 1 315 2 178 1 347 1 348 1 246 3 135 1 161 2 113 1 114 2 
132 1 315 1 300 1 85 1 246 1 190 1 161 1 42 1 98 1 165 1 
48 1 264 1 61 1 68 1 233 1 165 1 146 1 132 1 300 1 198 1 157 1 246 1 211 1 126 1 
61 1 68 1 233 1 165 1 146 1 132 1 315 1 300 1 198 2 157 1 246 1 211 2 190 1 126 1 161 1 
216 1 198 1 211 1 268 1 277 1 
6 1 351 1 216 1 198 2 61 1 211 2 268 1 126 1 
198 1 211 1 268 1 
132 1 315 1 216 1 300 1 198 1 85 1 246 1 150 1 211 1 190 1 161 1 42 1 98 1 165 1 
61 1 
6 1 216 1 198 2 61 1 211 2 354 1 268 1 126 1 
249 2 216 2 61 1 268 2 62 1 120 1 276 1 356 1 6 1 209 1 77 1 30 1 198 5 330 2 211 5 377 2 280 1 126 1 322 1 
128 1 2 1 33 1 242 1 164 1 288 1 51 1 108 1 91 1 132 2 258 1 208 1 315 1 235 1 300 1 348 1 246 2 11 1 135 1 161 1 
294 1 113 1 
132 2 315 1 300 2 362 1 246 2 190 1 161 1 113 2 223 1 
147 1 328 1 164 1 
128 1 33 1 242 1 288 1 51 1 108 1 372 1 91 1 132 1 235 1 258 1 246 1 348 1 11 1 135 1 113 1 
264 1 2 1 215 1 240 1 223 1 132 5 208 2 315 4 300 5 246 5 190 1 161 4 55 1 113 1 
132 2 315 2 300 2 85 1 246 2 161 2 74 1 165 1 
132 3 208 1 315 3 300 3 246 3 190 1 161 3 113 1 
132 1 315 1 300 1 85 1 246 1 161 1 165 1 
132 1 315 1 362 1 300 1 246 1 190 1 161 1 223 1 165 1 
179 1 2 1 119 1 295 1 68 1 51 1 233 1 91 1 165 1 146 1 258 1 208 1 235 1 300 3 188 1 211 1 11 1 12 1 97 1 190 2 333 1 128 1 337 1 338 1 33 1 242 1 288 1 42 1 289 1 108 1 223 1 132 4 315 3 45 1 178 1 347 1 198 1 157 1 348 1 246 4 135 1 161 3 113 1 114 2 
264 1 132 2 315 1 208 1 240 1 300 2 246 2 161 1 113 1 
2 1 218 1 61 1 68 1 233 1 223 1 146 1 165 1 132 3 208 2 315 3 45 1 198 1 300 3 157 1 246 3 211 1 190 1 161 3 
164 1 223 1 132 2 208 1 315 2 300 2 328 1 246 2 190 1 161 2 
128 1 33 1 242 1 288 1 51 1 108 1 91 1 132 1 235 1 258 1 246 1 348 1 11 1 135 1 113 1 
128 1 33 1 242 1 51 1 108 1 91 1 132 1 235 1 246 1 348 1 11 1 319 1 135 1 113 1 229 1 
291 1 203 1 266 1 119 1 38 1 295 1 164 2 172 1 107 1 71 1 358 1 289 1 147 2 347 1 178 1 328 2 110 1 188 1 12 4 97 2 332 1 54 2 114 2 56 1 
132 1 315 1 300 1 246 1 68 1 161 1 165 1 74 1 
141 1 254 1 
141 1 254 1 
124 1 303 1 
124 1 303 1 
124 1 303 1 
141 1 298 1 254 1 
169 1 141 1 254 1 
15 1 124 1 141 2 303 1 254 2 238 1 
141 1 298 1 254 1 
141 1 298 1 254 1 
21 1 141 1 254 1 
21 1 141 1 254 1 
21 1 141 1 254 1 
66 1 141 1 142 1 254 1 69 1 357 1 300 2 211 1 364 1 239 1 169 1 192 1 152 1 19 1 132 2 315 2 375 1 44 1 316 1 198 1 246 2 376 1 161 2 113 1 
3 2 15 1 86 1 141 2 129 1 61 1 206 1 142 2 69 2 254 2 357 2 197 1 375 2 44 1 177 1 198 2 316 3 329 1 211 2 
117 1 72 1 313 1 
117 1 346 1 72 1 
117 3 167 1 370 1 346 1 313 2 366 1 
117 2 167 1 370 1 195 1 346 1 313 1 
117 2 167 2 370 1 346 1 313 1 
292 3 249 1 203 1 353 2 296 1 120 2 186 1 356 1 6 1 30 3 330 1 211 5 96 2 332 1 126 1 56 1 191 2 32 1 216 4 192 1 266 1 219 1 61 2 17 1 268 1 173 1 152 1 198 5 376 1 349 1 377 1 321 1 
292 9 249 2 203 3 49 5 353 6 120 6 186 3 356 1 73 1 277 5 6 1 187 1 209 1 30 8 330 2 211 9 332 3 126 1 56 3 284 1 191 6 265 1 216 7 192 4 266 3 219 2 61 5 17 1 268 6 173 2 20 1 153 1 198 9 349 3 377 2 
249 1 292 4 203 1 353 2 186 1 120 2 209 1 30 3 330 1 211 3 96 1 332 1 126 1 56 1 191 2 32 1 216 2 192 1 266 1 219 1 61 3 173 1 198 3 349 2 377 1 321 1 
292 7 249 1 203 2 353 4 186 2 120 4 187 1 209 1 30 5 330 1 211 4 96 2 332 2 126 1 56 2 284 1 191 4 32 1 216 3 192 2 266 2 219 1 61 4 173 1 153 1 198 4 349 3 377 1 321 1 
294 1 242 1 273 1 
242 1 325 1 
228 1 
348 1 242 1 108 1 
299 1 242 1 
348 1 242 1 
137 1 348 1 242 3 286 1 273 2 108 1 
341 1 26 1 38 3 163 1 104 1 308 1 297 1 71 2 257 1 92 1 64 1 97 3 12 7 332 1 214 2 54 4 56 1 
341 1 26 1 38 3 163 1 104 1 308 1 297 1 71 2 257 1 92 1 64 1 97 3 12 7 332 1 214 2 54 4 56 1 
271 1 341 1 26 1 38 3 163 1 104 1 308 1 297 1 71 2 257 1 92 1 64 1 97 3 12 7 332 1 214 2 54 4 56 1 
118 1 26 1 204 1 119 1 295 1 163 1 297 1 71 1 92 1 53 1 188 1 212 1 97 3 12 6 54 3 214 1 282 1 267 1 38 2 104 1 22 1 178 1 64 2 114 2 
119 2 295 2 163 1 297 1 71 3 257 1 92 1 188 2 212 1 12 9 97 4 332 1 54 5 214 2 56 1 341 1 38 4 308 1 104 1 310 1 224 1 178 2 64 1 114 4 
324 1 117 2 274 1 231 1 51 1 72 1 234 2 235 1 361 1 93 1 7 1 210 1 11 1 305 1 366 1 306 1 57 1 128 1 33 1 36 1 307 1 78 1 170 2 16 1 346 1 311 1 313 1 46 1 245 1 199 1 
180 1 324 1 117 2 274 1 207 1 231 1 51 1 72 1 234 3 235 1 361 1 210 1 11 1 366 1 306 1 57 1 128 1 33 1 36 2 307 1 78 1 170 3 16 1 346 1 311 1 313 1 46 1 225 1 245 1 199 1 
180 1 324 1 117 2 274 1 51 1 72 1 234 2 235 1 210 1 11 1 366 1 306 1 57 1 128 1 33 1 36 2 78 1 170 2 16 1 346 1 311 1 313 1 46 1 225 1 245 1 
324 2 207 1 274 2 184 1 51 1 90 1 234 1 235 1 361 1 11 1 128 1 57 2 33 1 101 1 170 1 242 1 243 1 155 1 245 2 348 1 199 1 135 1 112 1 
324 1 117 2 274 1 231 1 51 1 72 1 234 1 235 1 361 1 93 1 7 1 11 1 366 1 57 1 128 1 33 1 307 1 78 1 170 1 346 1 311 1 313 1 46 1 225 1 245 1 199 1 
355 1 
230 2 48 1 323 2 88 1 51 1 233 1 146 1 6 3 235 2 330 1 278 2 11 2 336 1 102 2 101 1 342 1 61 2 242 1 196 1 109 1 155 1 198 5 157 1 348 1 246 1 65 1 349 2 115 1 292 2 249 1 253 1 68 1 120 2 356 1 122 1 165 1 30 2 300 1 211 5 126 1 128 1 264 1 33 2 34 4 219 1 268 6 41 2 43 2 132 1 47 2 226 1 134 1 377 1 135 2 136 1 
48 1 354 1 68 1 233 1 122 1 165 1 146 1 6 1 300 1 211 3 264 1 336 1 34 2 268 2 41 1 132 1 198 3 157 1 246 1 134 1 65 1 136 1 
48 1 323 1 354 1 68 1 233 1 122 1 165 1 146 1 6 1 300 1 211 3 126 1 264 1 336 1 34 3 61 1 268 1 132 1 198 3 157 1 246 1 134 1 65 1 136 1 
48 1 230 1 323 1 354 1 68 1 233 1 122 1 165 1 146 1 6 1 300 1 211 3 126 1 264 1 336 1 34 3 61 1 268 2 41 1 132 1 198 3 157 1 246 1 134 1 65 1 136 1 
230 4 48 1 323 4 233 1 146 1 6 3 148 1 330 1 278 2 336 1 102 2 61 5 109 1 198 5 160 1 157 1 246 1 65 1 23 1 349 2 115 1 249 1 354 1 68 1 120 1 356 1 122 1 165 1 360 1 300 1 30 1 211 5 126 5 264 1 34 6 220 1 268 7 41 4 43 2 132 1 47 2 134 1 377 1 136 1 
48 1 230 2 323 2 233 1 146 1 6 2 330 1 278 2 336 1 102 2 61 2 196 1 109 1 198 4 157 1 246 1 65 1 349 2 115 1 249 1 292 2 68 1 120 1 356 1 122 1 165 1 300 1 30 1 211 4 126 1 264 1 34 4 268 4 41 2 43 2 132 1 47 2 134 1 377 1 136 1 
230 2 115 1 48 1 323 2 249 1 68 1 120 1 233 1 356 1 122 1 165 1 146 1 6 2 360 1 30 1 300 1 330 1 278 2 211 4 126 1 264 1 336 1 102 2 34 4 61 1 220 1 268 4 41 2 43 2 109 1 132 1 198 4 47 2 157 1 246 1 134 1 65 1 23 1 349 2 377 1 136 1 
230 2 115 1 48 1 323 2 249 1 68 1 120 1 233 1 356 1 122 1 165 1 146 1 6 2 360 1 30 1 300 1 330 1 278 2 211 4 126 1 264 1 336 1 102 2 34 4 61 1 220 1 268 4 41 2 43 2 109 1 132 1 198 4 47 2 157 1 246 1 134 1 65 1 23 1 349 2 377 1 136 1 
230 2 48 1 323 2 292 2 249 1 181 1 68 1 120 1 275 1 233 1 356 1 122 1 165 1 146 1 6 2 30 1 300 1 330 1 211 4 126 1 367 2 264 1 336 1 34 4 61 1 220 1 268 4 81 1 41 2 43 2 109 1 132 1 133 2 198 4 47 2 157 1 246 1 134 1 65 1 377 1 136 1 
115 1 48 1 230 3 249 1 323 3 68 1 120 1 356 1 233 1 122 1 165 1 146 1 6 2 360 1 30 1 300 1 148 1 330 1 278 2 211 4 126 1 264 1 336 1 102 2 34 5 61 1 220 1 268 5 41 3 43 2 109 1 132 1 198 4 47 2 157 1 246 1 134 1 65 1 23 1 349 2 377 1 136 1 
115 1 48 1 230 3 249 1 323 3 68 1 120 1 356 1 233 1 122 1 165 1 146 1 6 2 360 1 30 1 300 1 148 1 330 1 278 2 211 4 126 1 264 1 336 1 102 2 34 5 61 1 220 1 268 5 41 3 43 2 109 1 132 1 198 4 47 2 157 1 246 1 134 1 65 1 23 1 349 2 377 1 136 1 
48 1 230 2 323 2 275 1 233 1 146 1 6 2 330 1 336 1 61 1 196 1 109 1 198 4 157 1 246 1 65 1 249 1 292 2 68 1 120 1 356 1 122 1 165 1 300 1 30 1 211 4 126 1 264 1 367 2 34 4 268 4 41 2 43 2 132 1 133 2 47 2 134 1 377 1 136 1 
291 1 341 1 294 1 119 1 38 2 295 1 104 1 308 1 164 1 71 2 289 1 257 1 147 1 92 1 347 1 178 1 328 1 188 1 97 3 12 6 332 1 214 1 54 3 113 2 56 1 114 2 
179 1 203 4 119 2 295 2 163 2 164 16 186 4 71 2 147 16 53 4 328 6 188 2 97 9 12 22 332 4 54 13 14 2 282 4 56 2 368 1 266 2 267 1 194 1 38 4 130 1 289 1 176 2 178 2 347 2 158 1 248 1 113 1 114 4 
2 1 179 1 202 1 119 1 295 1 51 1 91 1 258 1 235 1 208 1 300 1 328 1 188 1 11 1 97 1 12 2 54 1 128 1 33 1 242 1 288 1 130 1 108 1 289 1 372 1 132 2 315 1 178 1 347 1 158 1 348 1 246 2 320 1 378 1 135 1 161 1 113 1 114 2 
179 1 2 1 87 1 51 2 186 2 91 2 235 3 92 1 147 7 328 7 188 3 189 2 11 3 97 10 12 20 333 2 332 3 54 10 56 3 341 1 242 2 104 1 288 2 289 3 108 2 347 3 158 1 159 2 246 3 348 2 161 1 113 2 114 6 203 2 119 3 295 3 163 4 164 7 121 1 71 4 123 2 257 1 208 1 258 2 300 1 214 1 128 2 33 3 79 2 266 2 38 8 308 1 130 1 132 3 314 1 315 1 225 1 178 3 135 1 
179 1 291 1 138 1 119 2 352 1 295 2 272 1 51 2 208 1 235 8 300 1 188 2 11 7 12 2 97 1 237 1 305 1 54 1 128 2 33 8 101 1 58 1 242 3 130 1 289 2 132 1 374 1 315 1 175 2 154 1 225 1 178 2 347 2 155 1 246 1 348 2 135 2 161 1 114 4 
203 1 119 1 295 1 164 1 186 1 71 1 147 1 300 1 328 1 188 1 190 1 12 3 97 2 332 1 54 1 56 1 241 1 266 1 38 1 223 1 289 1 132 1 315 1 178 1 347 1 158 1 246 1 161 1 114 2 
291 1 203 1 119 1 38 1 295 1 163 1 164 1 289 1 358 1 147 1 347 1 178 1 328 1 188 1 12 2 332 1 54 2 114 2 
291 1 266 1 119 1 38 1 295 1 164 1 107 1 71 1 289 1 147 1 347 1 178 1 328 1 188 1 12 2 97 2 114 2 56 1 
291 1 203 1 119 1 295 1 163 1 164 2 186 1 71 1 147 2 328 2 188 1 12 4 97 2 332 1 54 2 56 1 266 1 38 2 289 1 178 1 347 1 114 2 
203 1 119 1 38 1 295 1 163 1 164 1 289 1 358 1 147 1 347 1 178 1 328 1 188 1 12 2 237 1 332 1 54 2 114 2 
266 1 119 1 38 1 295 1 164 1 107 1 71 1 289 1 147 1 347 1 178 1 328 1 188 1 12 2 97 2 237 1 114 2 56 1 
203 1 119 1 295 1 163 1 164 2 186 1 71 1 147 2 328 2 188 1 12 4 97 2 332 1 237 1 54 2 56 1 266 1 38 2 289 1 178 1 347 1 114 2 
203 1 266 1 119 1 38 2 295 1 163 1 164 2 186 1 71 1 289 1 147 2 347 1 178 1 328 2 188 1 97 2 12 4 332 1 54 2 56 1 114 2 
179 1 119 1 295 1 51 1 91 1 258 1 235 1 188 1 11 1 12 2 97 1 333 1 54 1 128 1 33 1 242 1 288 1 130 1 108 1 289 1 132 1 347 1 178 1 348 1 246 1 135 1 113 1 114 2 
179 1 119 1 295 1 51 1 91 1 235 1 188 1 11 1 12 2 97 1 54 1 128 1 33 1 242 1 151 1 130 1 108 1 289 1 132 1 347 1 178 1 348 1 246 1 319 1 135 1 113 1 114 2 229 1 
203 1 119 1 295 1 163 1 164 2 186 1 71 1 147 2 328 2 188 1 12 4 97 2 332 1 54 2 56 1 266 1 38 2 289 1 178 1 347 1 158 1 114 2 
203 1 119 1 295 1 163 1 164 2 51 1 186 1 71 1 91 1 258 1 235 1 147 2 328 2 188 1 11 1 97 2 12 4 332 1 333 1 54 2 305 1 56 1 128 1 33 1 79 1 266 1 38 2 242 1 288 1 108 1 289 1 132 1 347 1 178 1 348 1 246 1 114 2 
116 1 203 1 119 1 295 1 163 1 164 1 186 1 147 1 300 1 328 1 188 1 97 1 190 1 12 3 332 1 54 2 56 1 266 1 38 1 223 1 289 1 132 1 315 1 178 1 347 1 158 1 246 1 161 1 114 2 
186 7 144 1 92 2 9 1 53 5 188 4 12 60 97 27 332 9 14 2 54 33 56 7 282 5 193 1 341 2 285 1 104 2 201 1 114 8 203 7 293 1 119 4 295 4 163 7 71 6 257 2 75 1 76 1 212 2 213 1 214 2 35 1 266 5 38 13 267 3 308 2 309 4 174 1 312 1 224 1 176 2 178 4 317 2 83 1 
203 3 293 1 119 4 295 4 163 3 186 3 71 2 257 1 75 1 92 1 76 1 9 1 53 2 188 4 212 2 213 1 97 17 12 35 332 4 214 1 54 18 56 4 282 2 35 1 341 1 193 1 285 1 266 3 38 5 267 2 104 1 308 1 309 4 174 1 312 1 224 1 178 4 317 1 201 1 83 1 114 8 
203 5 293 1 119 3 295 3 163 3 186 5 71 5 257 1 75 1 92 1 76 1 9 1 53 3 188 3 212 2 97 20 12 42 332 6 214 1 54 22 14 1 282 3 56 5 35 1 341 1 193 1 285 1 266 4 267 2 38 8 104 1 308 1 309 4 174 1 312 1 224 1 176 1 178 3 317 1 201 1 83 1 114 6 
203 3 293 1 119 4 295 4 163 3 186 3 71 3 257 1 166 1 75 1 92 1 76 1 9 1 53 2 188 4 212 2 213 1 97 16 12 33 332 4 214 1 54 17 56 4 282 2 35 1 341 1 193 1 266 3 38 6 267 2 104 1 308 1 309 3 174 1 312 1 224 1 178 4 317 1 201 1 83 1 114 8 
203 7 293 1 119 3 295 3 163 4 186 7 71 4 75 1 76 1 9 1 53 4 188 3 212 2 97 22 12 46 332 7 54 24 14 2 282 4 56 6 35 1 193 1 285 1 266 6 38 8 267 2 309 4 174 1 312 1 224 1 176 2 178 3 317 2 201 1 83 2 114 6 
375 1 15 1 177 1 141 1 206 1 142 1 281 1 254 1 69 1 357 1 
169 1 66 1 
0 1 375 1 141 1 142 1 379 1 254 1 69 1 89 1 357 1 
298 1 263 1 
21 1 304 1 238 1 
3 1 15 1 141 1 129 1 61 1 206 1 142 1 69 1 254 1 357 1 197 1 44 1 375 1 177 1 198 1 316 2 329 1 211 1 
3 1 15 1 141 1 129 1 61 1 206 1 142 1 69 1 254 1 357 1 197 1 44 1 375 1 177 1 198 1 316 2 329 1 211 1 
3 1 15 1 141 1 129 1 61 1 206 1 142 1 69 1 254 1 357 1 197 1 44 1 375 1 177 1 198 1 316 2 329 1 211 1 
298 1 263 1 238 1 
298 1 263 1 238 1 
21 1 304 1 
21 1 304 1 238 1 
19 1 239 1 
3 1 66 1 141 1 142 1 254 1 69 1 357 1 145 1 300 2 211 1 364 1 239 1 169 1 216 1 192 1 129 1 152 1 19 1 132 2 375 1 315 2 198 1 316 1 246 2 376 1 161 2 113 1 
179 1 119 1 295 1 272 1 143 1 51 1 235 2 260 1 300 2 331 1 188 1 11 2 12 2 97 1 54 1 128 1 33 2 242 1 40 1 130 1 289 1 132 2 374 1 175 2 347 1 178 1 158 1 348 1 246 2 114 2 162 1 
128 1 33 2 117 2 78 1 274 1 185 1 346 1 51 1 231 1 311 1 72 1 313 1 235 2 225 1 10 1 11 2 262 1 305 1 366 1 
128 1 33 1 117 2 78 1 274 1 346 1 231 1 51 1 311 1 72 1 313 1 235 1 225 1 11 1 279 1 262 1 366 1 
128 1 33 1 101 1 217 1 242 1 274 1 185 1 51 1 90 1 235 1 155 1 348 1 11 1 135 1 
128 1 33 1 117 2 78 1 274 1 185 1 346 1 231 1 51 1 311 1 72 1 313 1 235 1 225 1 10 1 11 1 262 1 366 1 
127 1 
77 1 30 1 294 1 61 1 62 1 126 1 120 1 
115 1 102 1 292 1 249 1 61 2 268 1 120 1 356 1 6 1 198 1 30 1 330 1 278 1 211 1 377 1 349 1 126 1 
325 3 273 2 51 3 186 2 146 2 6 3 5 2 235 3 52 1 330 4 11 3 95 2 332 2 56 2 283 2 191 6 242 10 61 8 286 1 62 1 108 3 198 5 159 2 348 3 247 1 349 6 25 2 250 1 249 4 292 12 203 2 353 6 28 2 120 8 356 4 359 1 256 2 77 1 30 9 299 2 211 5 126 2 305 1 128 4 33 3 369 2 266 2 219 2 268 5 82 1 226 1 270 2 377 4 135 1 
292 10 249 2 203 4 293 1 353 8 120 8 186 4 356 2 6 1 259 1 75 1 9 1 30 13 53 2 330 2 211 1 332 4 126 2 14 1 282 2 56 4 100 1 191 8 283 3 35 1 266 4 219 1 267 1 61 7 268 1 174 1 176 1 198 1 226 1 270 1 377 2 349 5 
249 1 85 1 120 2 356 1 165 1 360 1 92 1 30 2 300 1 125 1 330 1 211 1 190 1 332 2 98 1 56 1 283 2 341 1 150 1 104 1 42 1 132 1 315 1 198 1 246 1 270 1 377 1 161 1 
249 1 61 1 62 1 120 1 356 1 77 1 30 1 330 1 377 1 126 1 
283 2 191 5 292 10 203 2 266 2 353 5 61 5 186 2 120 5 30 5 159 1 270 1 349 5 332 2 56 2 
6 1 198 1 61 1 211 1 268 1 126 1 
250 2 249 2 88 1 51 1 120 2 356 1 359 1 6 2 235 4 209 1 30 2 330 2 11 4 211 3 128 1 33 4 101 1 342 1 219 2 242 1 268 4 198 3 155 1 226 2 348 1 227 1 111 1 377 2 135 2 
179 1 119 1 295 1 51 1 91 1 235 1 258 1 300 2 188 1 11 1 12 1 97 1 190 2 333 1 128 1 33 1 338 1 242 1 288 1 42 1 108 1 289 1 132 3 315 2 178 1 347 1 246 3 348 1 135 1 161 2 113 1 114 2 
191 2 292 4 249 1 219 1 353 2 61 4 120 2 356 1 30 1 330 1 226 1 349 2 377 1 126 2 214 1 
375 1 363 1 357 1 
375 1 27 1 206 1 19 1 357 1 
375 1 363 1 357 1 
375 1 363 1 357 1 
375 1 24 1 357 1 
375 1 24 1 357 1 
375 1 24 1 357 1 
375 1 357 1 
141 1 254 1 
203 2 293 1 119 2 295 2 163 4 186 2 71 5 257 1 75 1 92 2 9 1 125 1 53 1 188 2 212 1 12 24 97 10 332 5 214 1 54 14 282 1 56 4 35 1 341 2 266 1 267 1 38 9 104 2 308 1 174 1 224 1 178 2 114 4 
203 2 293 1 119 3 295 3 163 1 186 2 71 3 257 1 75 1 92 1 9 1 53 1 188 3 212 1 12 17 97 7 332 3 214 1 54 10 282 1 56 2 35 1 341 1 266 1 267 1 38 4 104 1 308 1 221 1 174 1 224 1 178 3 114 6 
203 4 293 1 119 3 295 3 163 2 186 4 71 4 257 1 75 1 92 1 9 1 53 2 188 3 212 1 12 29 97 15 332 5 214 1 54 14 14 1 282 2 56 5 35 1 341 1 266 4 267 1 38 6 104 1 308 1 221 1 174 1 224 1 176 1 178 3 114 6 
203 4 293 1 119 3 295 3 163 3 186 4 71 4 257 1 75 1 92 1 9 1 53 2 188 3 212 1 12 27 97 12 332 5 214 1 54 15 14 1 282 2 56 4 35 1 341 1 266 3 267 1 38 7 104 1 308 1 221 1 174 1 224 1 176 1 178 3 114 6 
203 2 293 1 119 2 295 2 163 4 186 2 71 5 257 1 75 1 92 2 9 1 125 1 53 1 188 2 212 1 12 24 97 10 332 5 214 1 54 14 282 1 56 4 35 1 341 2 266 1 267 1 38 9 104 2 308 1 174 1 224 1 178 2 114 4 
203 4 293 1 119 1 295 1 163 2 186 4 71 2 75 1 9 1 53 2 188 1 12 22 97 11 332 4 54 11 14 1 282 2 56 4 35 1 266 4 267 1 38 4 174 1 224 1 176 1 178 1 114 2 
203 4 293 1 119 4 295 4 163 3 186 4 71 4 257 1 75 1 92 1 9 1 53 2 188 4 212 2 12 28 97 13 332 5 214 1 54 15 14 1 282 2 56 4 35 1 341 1 266 3 267 1 38 7 104 1 308 1 174 1 221 1 224 1 176 1 178 4 114 8 
203 1 119 2 295 2 186 1 71 1 75 1 53 2 188 2 12 7 97 4 213 1 332 1 54 3 14 1 282 1 56 1 266 1 267 1 38 1 224 1 178 2 114 4 
341 1 38 6 308 1 104 3 163 3 71 3 257 2 92 3 97 4 12 7 332 1 54 3 56 1 
203 1 119 2 295 2 186 1 71 1 75 1 53 2 188 2 12 7 97 4 213 1 332 1 54 3 14 1 282 1 56 1 266 1 267 1 38 1 224 1 178 2 114 4 
341 1 119 2 38 3 295 2 163 1 308 1 104 1 71 2 257 1 92 1 178 2 188 2 212 1 97 4 12 8 332 1 214 1 54 4 56 1 114 4 
341 1 294 1 38 2 308 1 104 1 71 2 257 1 92 1 97 3 12 6 332 1 214 1 54 3 56 1 
203 1 266 1 119 1 38 2 295 1 163 1 221 1 186 1 71 1 178 1 188 1 97 2 12 4 332 1 54 2 56 1 114 2 
203 2 266 2 38 2 267 1 163 1 186 2 71 1 176 1 53 2 97 6 12 12 332 2 54 6 14 1 282 2 56 2 
203 2 204 1 119 2 295 2 163 4 186 2 71 5 257 1 92 2 53 2 188 2 212 2 12 23 97 12 332 3 214 1 14 1 54 11 282 2 56 3 341 1 266 2 38 9 104 2 308 1 176 1 178 2 248 1 114 4 
53 1 12 1 97 1 
12 1 54 1 282 1 
203 1 266 1 119 1 295 1 38 3 163 1 221 1 186 1 71 2 178 1 159 1 188 1 97 3 12 6 332 1 54 3 114 2 56 1 
203 4 293 1 119 1 295 1 163 2 186 4 71 2 75 1 9 1 53 2 188 1 12 22 97 11 332 4 54 11 14 1 282 2 56 4 35 1 266 4 267 1 38 4 174 1 224 1 176 1 178 1 114 2 
341 1 38 2 104 1 163 1 71 1 92 1 12 6 97 3 332 1 54 3 56 1 
204 1 119 1 38 2 295 1 163 1 104 1 308 1 71 1 257 1 92 1 178 1 188 1 212 1 97 2 12 3 54 1 114 2 
341 1 119 1 295 1 38 5 104 2 163 2 71 3 224 1 92 2 178 1 125 1 188 1 12 10 97 5 332 2 54 5 114 2 56 2 
203 1 119 1 295 1 38 1 163 1 224 1 178 1 188 1 12 2 332 1 54 2 114 2 
203 1 266 1 119 1 38 2 295 1 163 1 186 1 71 1 224 1 178 1 188 1 97 2 12 4 332 1 54 2 56 1 114 2 
204 1 119 3 295 3 38 2 104 1 163 1 71 1 224 1 92 1 178 3 188 3 212 1 213 1 97 2 12 3 54 1 114 6 
204 1 119 4 295 4 163 3 71 3 257 1 92 2 125 1 53 1 188 4 212 1 97 8 213 1 12 15 332 2 54 7 56 2 282 1 341 1 38 6 267 1 308 1 104 2 221 1 224 1 22 1 178 4 114 8 
132 1 264 1 240 1 300 1 246 1 350 1 113 1 
264 1 339 1 240 1 183 1 50 1 70 1 373 1 132 1 300 1 246 1 350 1 113 1 
128 1 101 1 33 1 235 1 155 1 294 1 348 1 242 1 11 1 51 1 135 1 
128 1 33 1 242 1 51 1 108 1 91 1 132 2 208 1 315 1 235 1 258 1 300 1 348 1 246 2 11 1 135 1 161 1 113 1 
128 1 250 1 33 1 369 1 242 3 68 1 51 1 233 1 108 2 165 1 91 1 132 2 208 1 315 1 235 1 258 1 299 1 300 2 348 2 246 2 11 1 161 2 113 1 
250 1 68 1 51 1 233 1 91 1 165 1 235 2 208 1 300 2 299 1 11 2 334 1 128 1 33 2 369 1 242 3 108 2 132 2 315 1 246 2 348 2 161 2 113 1 229 1 
1 1 250 1 325 1 273 1 51 1 146 1 235 3 299 1 11 3 211 2 168 1 334 1 126 1 128 1 33 3 369 1 242 4 61 1 268 1 108 1 198 2 348 1 135 1 
128 1 250 1 33 3 369 1 61 1 242 4 325 1 268 1 273 1 51 1 108 1 146 1 256 1 235 3 299 1 198 2 348 1 211 2 11 3 334 1 135 1 126 1 
128 1 33 1 235 1 352 1 11 1 51 1 
128 3 33 7 138 1 58 1 352 1 242 3 286 1 39 1 51 2 108 1 175 1 374 1 235 7 154 1 290 1 225 1 348 2 11 6 318 1 135 2 305 1 
119 2 295 2 164 1 51 1 71 2 123 1 91 1 257 1 208 1 235 1 258 1 147 1 92 1 300 1 328 1 188 2 11 1 97 3 12 6 332 1 333 1 214 1 54 3 305 1 56 1 128 1 33 1 341 1 79 1 38 2 242 1 104 1 308 1 288 1 108 1 289 2 132 2 315 1 178 2 347 2 158 1 348 1 246 2 161 1 113 2 114 4 162 1 
249 2 325 1 28 1 273 1 120 1 356 2 359 1 256 1 146 1 6 1 235 1 77 1 30 1 330 2 11 1 211 3 95 1 126 1 33 1 216 1 61 1 242 2 268 2 62 1 198 3 377 2 135 1 25 1 
128 2 33 2 352 1 242 2 286 1 273 1 51 1 108 1 235 2 52 1 348 1 11 2 305 1 
128 1 33 4 101 1 182 1 242 1 51 1 235 4 155 1 348 1 11 4 334 1 135 1 305 1 
128 2 250 1 33 2 340 1 242 1 51 1 108 1 314 1 235 2 290 1 348 1 11 2 261 1 318 1 
128 1 33 1 235 1 117 1 78 1 11 1 346 1 51 1 135 1 72 1 
128 1 374 1 33 2 235 2 225 1 348 1 242 1 11 2 143 1 51 1 305 1 
128 2 250 1 101 1 33 5 58 1 182 1 242 3 51 2 235 5 374 1 154 1 155 1 348 2 11 4 135 1 305 1 
128 2 250 1 101 1 33 5 182 1 242 3 51 2 235 5 374 1 154 1 8 1 155 1 348 2 11 4 135 1 305 1 
128 1 33 1 242 1 51 1 108 1 91 1 132 2 208 1 315 1 235 1 300 1 348 1 246 2 11 1 135 1 161 1 113 1 229 1 
128 2 250 1 33 1 242 1 286 1 39 1 51 1 108 1 235 1 290 1 348 1 11 1 318 1 
132 1 300 1 260 1 156 1 331 1 246 1 31 1 106 1 40 1 
94 1 205 1 106 1 
156 1 31 1 106 1 131 1 113 1 
216 1 61 1 205 1 106 1 68 1 131 2 233 1 232 1 146 1 165 1 45 1 198 2 156 2 94 1 157 1 31 2 211 2 126 1 113 1 
306 1 294 1 210 1 16 1 
306 1 361 1 210 1 170 1 199 1 16 1 234 1 
324 1 245 1 170 1 
306 1 170 3 16 1 345 1 234 3 255 1 361 1 269 2 93 1 210 1 199 1 99 1 
306 1 361 1 36 1 210 1 170 2 199 1 16 1 365 1 234 2 
361 1 117 1 93 1 59 1 210 1 170 1 199 1 222 1 72 1 313 1 234 1 
306 1 361 1 93 1 210 1 170 1 199 1 234 1 
306 2 361 1 93 1 170 1 199 1 16 1 234 1 
306 1 170 2 4 1 171 1 29 1 234 2 361 2 93 1 210 1 199 2 
306 1 36 2 59 1 170 3 16 1 326 1 371 1 234 3 361 1 93 1 199 1 210 2 149 1 
306 1 117 2 36 1 60 1 170 2 16 1 346 1 72 1 234 2 313 1 361 1 93 1 210 1 199 1 366 1 
306 1 36 2 59 1 170 4 16 1 371 1 234 4 361 2 93 1 63 1 199 2 210 2 365 1 
306 1 361 1 93 1 210 1 170 1 199 1 16 1 234 1 
306 2 36 2 59 1 170 4 287 1 16 2 371 1 255 1 234 4 269 1 361 1 199 1 210 3 99 1 
306 1 36 1 170 2 16 1 244 1 234 2 361 1 93 1 302 1 210 1 199 1 236 1 
306 1 37 1 170 3 16 1 234 3 255 2 361 1 269 2 93 1 210 1 199 1 99 1 
139 1 251 1 210 2 105 2 
361 1 93 1 343 1 170 1 199 1 234 1 
306 1 361 1 36 1 93 1 210 1 170 2 199 1 149 1 16 1 234 2 
80 1 
306 1 361 1 93 1 210 1 170 1 199 1 16 1 234 1 
306 1 269 1 361 1 36 1 93 1 210 1 170 3 199 1 149 1 16 1 234 3 
59 1 210 1 287 1 371 1 
306 1 210 1 

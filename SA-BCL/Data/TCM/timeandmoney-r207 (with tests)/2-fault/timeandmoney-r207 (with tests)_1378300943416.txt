#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 24 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 2 218 1 363 9 225 1 84 1 261 2 285 1 366 4 203 1 367 6 7 1 12 2 183 1 184 2 295 1 326 3 162 1 141 2 297 1 116 5 208 1 165 2 253 1 212 1 254 2 97 1 217 9 192 1 
175 2 218 1 363 9 225 1 84 1 261 2 285 1 366 4 203 1 367 6 7 1 12 2 183 1 184 2 295 1 326 3 162 1 141 2 297 1 116 5 208 1 165 2 253 1 212 1 254 2 97 1 217 9 192 1 
175 2 218 1 363 10 225 1 84 1 261 2 285 1 366 5 203 1 367 7 7 1 12 2 183 1 184 2 295 1 326 4 162 1 141 2 297 1 116 6 208 1 165 2 253 1 212 1 254 2 97 1 217 10 192 1 
175 2 218 1 363 7 225 1 84 1 261 2 285 1 366 3 203 1 367 4 7 1 12 1 183 1 184 2 295 1 326 2 162 1 141 2 297 1 116 4 165 2 253 1 212 1 254 2 97 1 217 7 192 1 
184 1 175 1 218 1 326 1 363 4 225 1 141 1 116 3 208 1 165 1 253 1 261 1 366 2 367 3 192 1 217 4 12 2 97 1 
99 1 184 1 295 1 363 2 225 1 186 1 116 1 141 1 165 1 253 1 261 1 285 1 94 1 254 1 192 1 217 2 
363 3 326 1 225 1 297 1 116 2 165 2 253 1 261 2 366 1 367 1 254 1 192 1 217 3 
184 1 175 1 218 1 363 9 326 3 225 1 141 1 116 5 297 1 208 1 165 2 253 1 261 2 212 1 366 4 356 1 274 1 367 7 7 1 254 1 97 1 12 2 192 1 217 9 
184 1 175 1 218 1 363 9 326 3 225 1 141 1 116 5 297 1 208 1 165 2 253 1 261 2 212 1 366 4 356 1 274 1 367 7 7 1 254 1 97 1 12 2 192 1 217 9 
276 1 357 1 13 1 
294 1 219 2 13 1 
198 1 53 2 62 2 169 1 31 2 190 2 197 2 127 2 
336 1 53 3 103 1 3 1 223 2 83 1 311 2 197 3 61 2 198 1 62 2 31 2 32 1 135 1 248 1 37 1 158 2 114 1 69 1 348 1 187 1 16 1 117 1 118 1 270 1 351 2 232 1 353 1 145 1 169 1 189 1 122 1 190 2 126 1 334 1 171 1 127 2 
198 1 53 1 62 1 315 1 31 1 190 1 197 1 67 1 127 1 291 1 
52 1 53 1 1 1 197 1 62 1 108 1 286 1 120 1 246 1 357 1 288 1 67 1 13 1 146 1 
52 2 53 1 197 1 62 1 108 1 31 1 286 1 120 1 246 1 357 1 288 2 190 1 127 1 67 1 13 1 
52 1 281 1 288 1 319 1 80 1 
52 2 229 1 357 1 288 2 10 1 319 1 13 1 80 1 
52 1 288 1 80 1 
52 1 53 1 197 1 198 1 62 1 315 1 31 1 288 1 190 1 319 1 11 1 67 1 127 1 291 1 
13 1 
52 2 115 1 229 1 357 1 288 2 319 1 13 1 80 1 
52 5 369 2 130 1 322 2 229 1 266 1 104 1 70 1 328 1 357 1 76 1 288 5 77 2 275 1 113 1 289 1 319 2 13 1 80 2 
53 2 309 1 103 1 69 1 348 1 223 1 197 2 16 1 232 1 351 1 145 1 62 1 31 1 135 1 202 1 65 1 190 1 248 1 334 1 158 1 
276 1 169 1 
53 2 41 1 258 1 197 2 62 2 31 1 169 2 190 1 127 1 
17 1 166 1 309 1 
53 1 103 1 69 1 364 1 223 1 348 1 197 1 16 1 232 1 351 1 145 1 169 1 135 1 248 1 334 1 158 1 
53 3 62 3 169 1 31 3 202 1 190 3 197 3 127 1 
53 1 62 1 315 1 31 1 190 1 197 1 67 1 
53 1 62 1 31 1 190 1 41 1 258 1 197 1 67 1 127 1 
336 1 52 1 53 4 103 1 3 1 223 1 311 1 197 4 61 2 198 1 62 3 108 1 32 1 31 3 286 1 135 1 202 1 153 1 246 1 65 1 288 1 248 1 35 1 67 1 158 1 114 1 69 1 348 1 41 1 187 1 16 1 117 1 118 1 232 1 351 1 353 1 145 1 169 1 120 1 189 1 190 3 334 1 171 1 127 2 
194 1 53 2 62 2 169 1 31 1 202 1 190 1 197 2 146 1 
52 1 53 3 41 1 197 3 62 3 271 1 108 1 286 1 31 3 202 2 120 1 246 1 288 1 65 1 190 3 35 1 127 1 67 1 13 1 
53 2 309 1 41 1 197 2 166 1 62 2 31 2 202 1 190 2 127 1 
53 1 103 1 69 1 223 1 348 1 197 1 16 1 232 1 351 1 145 1 169 1 135 1 248 1 334 1 158 1 
53 1 103 1 220 1 223 1 348 1 197 1 232 1 351 1 145 1 169 1 135 1 215 1 248 1 334 1 158 1 
172 1 336 1 309 2 3 1 239 1 311 4 61 2 259 1 200 1 85 1 37 2 263 1 370 1 114 1 117 2 118 1 17 2 92 1 45 1 166 2 167 1 189 1 305 1 171 1 
53 1 62 1 108 1 31 1 373 1 190 1 197 1 67 1 
194 1 53 5 62 5 109 1 169 1 31 4 202 2 68 1 65 1 41 1 190 4 197 5 127 1 146 1 
53 2 62 2 315 1 31 2 373 1 190 2 197 2 67 1 
93 1 372 1 
93 1 372 1 
51 1 59 1 
51 1 59 1 
51 1 59 1 
93 1 372 1 375 1 
93 1 201 1 372 1 
51 1 93 2 81 1 372 2 57 1 59 1 
93 1 372 1 375 1 
93 1 372 1 375 1 
93 1 359 1 372 1 
93 1 359 1 372 1 
93 1 359 1 372 1 
52 2 338 2 81 1 371 1 293 1 372 2 131 2 327 2 224 3 269 1 283 1 91 1 93 2 64 2 379 1 288 2 96 1 50 2 13 1 
52 1 338 1 100 1 53 2 148 1 131 1 224 1 197 2 62 2 31 2 201 1 288 1 293 1 372 1 327 1 14 1 140 1 93 1 169 1 95 1 331 1 188 1 190 2 50 1 
184 1 175 1 141 1 
184 1 94 1 141 1 
184 3 175 2 94 1 213 1 245 1 227 1 
184 2 175 1 94 1 213 1 227 1 298 1 
184 2 175 1 94 1 213 1 227 2 
52 5 100 1 54 1 219 3 176 2 177 1 200 1 85 1 226 1 288 5 156 2 113 3 319 4 290 1 13 2 369 1 39 2 322 1 229 1 294 1 266 1 92 1 45 1 331 1 188 1 48 1 76 2 357 1 22 1 77 1 191 1 80 1 
52 9 100 4 219 9 177 2 281 5 107 1 179 1 200 3 316 5 85 3 226 3 204 1 288 9 136 1 289 1 156 6 113 8 319 7 290 1 38 1 13 5 369 2 39 6 322 2 229 1 294 3 266 1 92 3 45 3 76 6 357 1 77 2 191 2 80 6 129 1 
52 3 100 1 177 1 176 1 219 4 200 1 85 1 226 1 288 3 289 1 113 3 156 2 319 2 13 3 369 1 39 2 322 1 294 2 92 1 45 1 48 1 357 1 76 2 22 1 77 1 191 1 
52 4 100 2 219 7 177 1 176 2 179 1 200 2 85 2 226 2 204 1 288 4 156 4 289 1 113 5 319 3 38 1 13 4 369 1 39 4 322 1 294 3 92 2 45 2 48 1 357 1 76 4 77 1 22 1 191 1 
376 1 276 1 248 1 
248 1 307 1 
335 1 
348 1 248 1 
376 2 5 1 135 1 243 1 348 1 248 3 
135 1 348 1 248 1 
314 1 248 1 
263 2 174 1 26 1 40 1 325 1 82 1 221 1 311 7 117 3 259 3 260 2 45 1 85 1 154 1 124 1 37 4 98 1 
263 2 174 1 26 1 40 1 325 1 82 1 221 1 311 7 117 3 259 3 260 2 45 1 85 1 154 1 124 1 37 4 98 1 
263 2 174 1 26 1 40 1 325 1 82 1 221 1 42 1 311 7 117 3 259 3 260 2 45 1 85 1 154 1 124 1 37 4 98 1 
336 1 0 1 174 2 26 2 257 1 82 1 221 2 311 31 61 2 259 10 260 3 200 3 226 3 85 4 6 3 287 1 154 5 37 16 228 1 263 5 114 1 40 1 325 1 268 1 117 15 92 3 45 4 233 1 189 1 123 4 124 1 78 1 171 1 98 2 
336 2 174 1 26 1 82 1 221 1 311 9 61 4 259 4 260 2 85 1 154 1 37 5 228 1 263 3 114 2 40 1 325 1 349 1 117 4 45 1 170 1 189 2 171 2 98 1 
175 1 195 1 103 1 363 2 223 1 225 1 28 1 261 1 199 1 33 1 245 1 367 1 318 1 158 1 182 1 184 2 267 1 116 1 141 1 209 1 210 1 351 1 165 1 253 1 377 1 94 1 254 1 217 2 192 1 334 1 
175 1 195 1 103 1 363 3 223 1 225 1 60 1 28 1 261 1 245 1 34 1 367 2 318 1 158 1 182 1 184 2 267 1 72 1 116 1 141 1 209 1 210 1 351 1 165 1 253 1 377 1 94 1 254 1 217 3 334 1 
195 1 175 1 103 1 363 2 223 1 225 1 28 1 245 1 34 1 367 2 318 1 158 1 182 1 184 2 267 1 72 1 116 1 141 1 210 1 351 1 253 1 94 1 254 1 217 2 334 1 
147 1 182 2 256 1 346 1 195 2 103 1 310 1 363 1 348 1 223 1 132 1 60 1 232 1 351 1 165 1 18 1 261 1 318 2 254 2 248 1 217 1 334 1 158 1 
175 1 195 1 103 1 363 1 223 1 28 1 261 1 199 1 245 1 34 1 318 1 158 1 182 1 184 2 267 1 141 1 209 1 210 1 351 1 165 1 377 1 94 1 254 1 217 1 192 1 334 1 
313 1 
52 5 147 1 53 1 101 1 1 1 279 2 56 1 103 1 197 1 106 2 343 1 62 1 63 1 108 1 286 1 246 1 155 2 288 5 113 2 248 1 158 2 67 1 13 2 294 2 348 1 351 2 164 1 73 2 354 2 214 1 120 1 357 1 76 2 77 1 21 1 306 1 80 6 358 2 219 2 177 1 223 2 132 1 30 1 262 2 369 1 321 1 322 1 229 3 266 1 232 2 144 1 329 1 272 4 334 1 146 1 
52 3 321 1 53 1 101 1 1 1 115 1 229 1 197 1 144 1 30 1 73 1 62 1 108 1 272 2 286 1 246 1 120 1 288 3 21 1 67 1 80 2 146 1 
52 3 53 1 1 1 101 1 197 1 30 1 62 1 108 1 286 1 246 1 288 3 67 1 13 1 321 1 115 1 229 1 144 1 272 3 354 1 120 1 357 1 21 1 80 1 146 1 
52 3 53 1 1 1 101 1 197 1 106 1 30 1 62 1 108 1 286 1 246 1 288 3 67 1 13 1 321 1 115 1 229 1 144 1 73 1 272 3 354 1 120 1 357 1 21 1 146 1 80 2 
52 5 53 1 101 1 1 1 56 1 279 2 340 1 151 1 197 1 106 4 62 1 108 1 286 1 246 1 288 5 155 2 113 1 67 1 13 5 115 1 294 2 73 4 354 4 120 1 357 5 76 1 21 1 77 1 80 7 358 2 360 1 30 1 262 2 321 1 369 1 322 1 229 3 86 1 266 1 144 1 330 1 329 1 272 6 146 1 
52 4 53 1 101 1 1 1 56 1 279 2 197 1 106 2 62 1 108 1 63 1 286 1 246 1 288 4 155 2 113 1 67 1 13 2 294 2 73 2 354 2 120 1 76 1 357 1 77 1 21 1 80 4 358 2 219 2 30 1 262 2 369 1 321 1 322 1 229 2 266 1 329 1 144 1 272 4 146 1 
52 4 358 2 53 1 1 1 101 1 360 1 279 2 56 1 340 1 197 1 106 2 30 1 62 1 108 1 286 1 246 1 155 2 288 4 262 2 113 1 67 1 13 1 369 1 321 1 322 1 229 2 294 2 266 1 329 1 144 1 330 1 73 2 354 2 272 4 120 1 357 1 76 1 21 1 77 1 80 4 146 1 
52 4 358 2 53 1 1 1 101 1 360 1 279 2 56 1 340 1 197 1 106 2 30 1 62 1 108 1 286 1 246 1 155 2 288 4 262 2 113 1 67 1 13 1 369 1 321 1 322 1 229 2 294 2 266 1 329 1 144 1 330 1 73 2 354 2 272 4 120 1 357 1 76 1 21 1 77 1 80 4 146 1 
52 4 53 1 1 1 101 1 360 1 279 2 56 1 55 1 219 2 197 1 106 2 30 1 62 1 108 1 286 1 246 1 155 2 288 4 113 1 181 2 67 1 13 1 369 1 321 1 322 1 229 2 266 1 296 1 139 2 15 1 144 1 73 2 354 2 272 4 120 1 357 1 76 1 21 1 77 1 80 4 146 1 
52 4 358 2 53 1 1 1 101 1 360 1 279 2 56 1 340 1 197 1 106 3 30 1 62 1 108 1 286 1 246 1 155 2 288 4 262 2 113 1 67 1 13 1 369 1 321 1 322 1 229 2 294 2 266 1 86 1 329 1 330 1 144 1 73 3 272 5 354 3 120 1 357 1 76 1 77 1 21 1 146 1 80 5 
52 4 358 2 53 1 1 1 101 1 360 1 279 2 56 1 340 1 197 1 106 3 30 1 62 1 108 1 286 1 246 1 155 2 288 4 262 2 113 1 67 1 13 1 369 1 321 1 322 1 229 2 294 2 266 1 86 1 329 1 330 1 144 1 73 3 272 5 354 3 120 1 357 1 76 1 77 1 21 1 146 1 80 5 
52 4 53 1 1 1 101 1 279 2 56 1 219 2 197 1 106 2 30 1 62 1 63 1 108 1 286 1 246 1 155 2 288 4 113 1 181 2 67 1 13 1 321 1 369 1 322 1 229 2 266 1 139 2 15 1 144 1 73 2 354 2 272 4 120 1 357 1 76 1 21 1 77 1 80 4 146 1 
336 1 309 1 276 1 82 1 221 1 3 1 311 6 61 2 259 2 260 1 85 1 37 3 263 2 114 1 40 1 325 1 117 3 118 1 17 1 166 1 45 1 167 1 169 2 189 1 171 1 98 1 
336 2 149 1 309 11 257 1 3 2 311 14 312 1 259 2 61 4 200 1 226 2 85 1 317 1 6 3 154 1 37 8 263 1 114 2 117 6 300 1 118 1 17 11 92 2 353 1 45 2 166 4 169 1 233 1 302 1 189 2 123 3 126 1 171 2 
336 1 53 2 103 1 223 1 364 1 3 1 197 2 311 2 61 2 62 1 31 1 135 1 202 1 244 1 65 1 248 1 158 1 37 1 114 1 69 1 348 1 16 1 117 1 351 1 232 1 118 1 353 1 145 1 166 1 169 1 302 1 75 1 189 1 216 1 190 1 334 1 126 1 171 1 
336 3 53 3 103 2 3 3 197 3 152 1 61 6 62 1 200 2 202 1 65 1 154 4 157 2 248 2 158 3 114 3 69 2 348 2 16 2 117 10 351 3 118 3 17 7 353 1 166 7 169 2 302 1 304 2 126 1 171 3 309 7 82 1 221 1 223 3 311 20 259 8 260 1 31 1 32 2 85 3 135 2 226 2 34 1 320 2 37 10 263 4 138 2 40 1 87 1 325 1 142 1 232 1 92 2 145 2 45 3 189 3 190 1 334 2 98 1 
336 2 147 1 53 1 2 1 103 2 222 1 223 7 3 2 150 1 83 2 132 1 197 1 311 2 134 1 61 4 62 1 31 1 33 1 202 1 34 1 248 3 158 8 37 1 159 1 114 2 348 2 117 1 351 8 232 2 118 2 353 1 167 1 378 1 189 2 190 1 234 1 334 2 126 1 171 2 
336 1 53 1 309 1 3 1 197 1 311 3 259 1 61 2 62 1 31 1 200 1 226 1 85 1 37 1 263 1 114 1 137 1 41 1 117 2 118 1 17 1 92 1 166 1 45 1 302 1 189 1 190 1 127 1 171 1 
336 1 309 1 114 1 3 1 239 1 311 2 118 1 259 1 17 1 61 2 92 1 166 1 45 1 167 1 154 1 189 1 171 1 37 2 
336 1 172 1 263 1 309 1 114 1 3 1 311 2 117 2 118 1 259 1 17 1 61 2 166 1 167 1 200 1 85 1 189 1 171 1 
336 1 309 2 3 1 311 4 61 2 259 2 200 1 226 1 85 1 154 1 37 2 263 1 114 1 117 2 118 1 92 1 17 2 45 1 166 2 167 1 189 1 171 1 
336 1 309 1 114 1 3 1 239 1 150 1 311 2 118 1 259 1 17 1 61 2 92 1 166 1 45 1 154 1 189 1 171 1 37 2 
336 1 172 1 263 1 309 1 114 1 3 1 150 1 311 2 117 2 118 1 259 1 17 1 61 2 166 1 200 1 85 1 189 1 171 1 
336 1 309 2 3 1 150 1 311 4 61 2 259 2 200 1 226 1 85 1 154 1 37 2 263 1 114 1 117 2 118 1 92 1 17 2 45 1 166 2 189 1 171 1 
336 1 263 1 309 2 114 1 3 1 311 4 117 2 118 1 259 2 17 2 61 2 92 1 166 2 45 1 200 1 85 1 226 1 154 1 189 1 171 1 37 2 
336 1 53 1 103 1 223 1 3 1 311 2 197 1 61 2 32 1 135 1 248 1 37 1 158 1 114 1 69 1 348 1 16 1 117 1 351 1 232 1 118 1 353 1 145 1 169 1 189 1 126 1 334 1 171 1 
336 1 53 1 103 1 220 1 223 1 3 1 311 2 197 1 61 2 135 1 248 1 37 1 158 1 160 1 114 1 348 1 117 1 351 1 232 1 118 1 353 1 145 1 169 1 215 1 189 1 126 1 334 1 171 1 
336 1 309 2 3 1 311 4 61 2 259 2 200 1 226 1 85 1 154 1 37 2 263 1 114 1 117 2 118 1 92 1 17 2 45 1 166 2 302 1 189 1 171 1 
336 1 53 1 309 2 103 1 223 1 3 1 311 4 197 1 259 2 61 2 200 1 32 1 85 1 135 1 33 1 226 1 154 1 248 1 320 1 37 2 158 1 263 1 114 1 69 1 348 1 16 1 117 2 351 1 118 1 17 2 92 1 166 2 45 1 145 1 189 1 334 1 171 1 
336 1 53 1 309 1 3 1 197 1 311 3 259 1 61 2 62 1 200 1 31 1 85 1 226 1 154 1 37 2 114 1 41 1 117 1 118 1 92 1 17 1 44 1 45 1 166 1 302 1 189 1 190 1 127 1 171 1 
336 2 257 1 27 1 240 1 311 19 61 4 259 6 200 3 226 3 85 3 6 1 154 3 368 1 37 9 263 3 114 2 161 2 230 1 71 1 89 1 349 1 117 10 43 1 92 3 45 3 233 1 189 2 123 2 333 2 171 2 
336 1 27 1 240 1 311 16 284 1 61 2 200 1 85 1 226 1 6 2 368 1 37 8 206 1 114 1 161 4 71 2 89 2 349 1 117 8 92 1 45 1 233 2 189 1 123 2 333 1 171 1 
336 2 257 1 27 1 240 1 311 23 284 1 61 4 259 3 200 2 226 2 85 2 6 3 154 2 368 1 37 11 206 1 263 1 114 2 161 4 230 1 71 2 89 1 349 1 117 12 92 2 45 2 233 3 189 2 123 4 125 1 333 1 171 2 
336 2 257 1 27 1 240 1 311 23 284 1 61 4 259 4 200 2 226 2 85 2 6 3 154 2 368 1 37 11 206 1 263 2 114 2 161 4 230 1 71 2 89 1 349 1 117 12 92 2 45 2 233 3 189 2 123 4 125 1 333 1 171 2 
336 1 257 2 82 3 27 1 221 3 240 1 311 51 284 1 61 2 259 13 260 3 200 5 226 5 85 8 6 4 154 5 368 1 37 27 206 1 263 8 114 1 161 4 40 3 325 3 71 1 89 1 349 1 117 24 300 2 92 5 45 8 233 2 189 1 123 4 333 1 171 1 98 3 
338 1 93 1 81 1 372 1 110 1 379 1 131 1 327 1 50 1 269 1 
201 1 14 1 
264 1 338 1 93 1 372 1 131 1 327 1 50 1 66 1 36 1 
52 1 338 1 81 1 371 1 293 1 372 1 131 1 327 1 224 2 269 1 283 1 91 1 93 1 64 1 379 1 288 1 50 1 13 1 
52 1 338 1 81 1 371 1 293 1 372 1 131 1 327 1 224 2 269 1 283 1 91 1 93 1 64 1 379 1 288 1 50 1 13 1 
52 1 338 1 81 1 371 1 293 1 372 1 131 1 327 1 224 2 269 1 283 1 91 1 93 1 64 1 379 1 288 1 50 1 13 1 
308 1 57 1 375 1 
308 1 57 1 375 1 
359 1 49 1 
359 1 49 1 57 1 
148 1 140 1 
52 1 338 1 100 1 53 2 148 1 131 1 224 1 197 2 62 2 64 1 201 1 31 2 288 1 319 1 372 1 327 1 14 1 140 1 91 1 93 1 169 1 95 1 331 1 188 1 190 2 50 1 128 1 
308 1 375 1 
359 1 49 1 57 1 
336 1 53 2 237 1 103 1 222 1 3 1 223 2 83 2 197 2 311 2 61 2 241 1 62 2 344 1 248 1 158 2 37 1 251 1 114 1 348 1 117 1 351 2 118 1 353 1 302 1 189 1 234 1 334 1 126 1 171 1 235 1 
182 1 184 2 175 1 185 1 103 1 267 1 223 2 141 1 209 1 163 1 351 2 28 1 94 1 245 1 33 1 34 1 9 1 334 1 158 2 
182 1 184 2 175 1 185 1 103 1 267 1 223 1 141 1 342 1 209 1 351 1 28 1 94 1 245 1 34 1 334 1 158 1 
182 1 147 1 346 1 103 1 348 1 223 1 132 1 232 1 351 1 9 1 248 1 334 1 193 1 158 1 
182 1 184 2 175 1 185 1 103 1 267 1 223 1 141 1 209 1 163 1 351 1 28 1 94 1 245 1 34 1 9 1 334 1 158 1 
303 1 
130 1 276 1 357 1 76 1 70 1 113 1 13 1 
52 1 358 1 219 1 288 1 113 1 262 1 13 2 369 1 322 1 229 1 294 1 266 1 329 1 76 1 357 1 77 1 80 1 
52 5 277 1 238 1 103 4 339 2 282 2 343 1 242 2 286 2 200 2 243 1 288 5 113 9 156 6 248 10 158 3 205 2 13 8 294 6 70 1 348 3 350 2 351 3 352 2 357 2 76 8 77 4 23 1 307 3 80 5 173 1 130 1 177 2 219 12 223 3 365 1 314 2 33 1 135 3 226 2 85 2 369 4 39 6 322 4 229 3 138 2 266 4 90 2 143 2 232 1 376 2 92 2 45 2 334 3 
53 1 361 1 177 1 219 2 339 1 197 1 343 1 284 1 198 1 62 1 315 1 31 1 6 1 156 2 113 2 11 1 67 1 205 1 291 1 13 2 369 1 39 2 322 1 266 1 294 1 233 1 357 1 76 2 123 1 77 1 190 1 127 1 
52 1 53 1 339 2 221 1 197 1 198 1 62 1 315 1 31 1 85 1 288 1 113 2 11 1 205 1 67 1 291 1 369 1 322 1 266 1 325 1 330 1 45 2 121 1 76 2 77 1 190 1 127 1 98 1 
369 1 130 1 322 1 266 1 70 1 76 1 357 1 77 1 113 1 13 1 
39 5 138 1 294 5 339 2 219 10 92 2 45 2 200 2 226 2 85 2 76 5 156 5 113 5 205 1 13 5 
52 1 229 1 357 1 288 1 13 1 80 1 
52 3 173 1 147 1 277 2 103 1 177 2 223 4 132 1 343 2 112 1 288 3 289 1 113 2 248 1 158 4 369 2 322 2 229 2 266 1 348 1 351 4 232 2 164 1 211 1 214 1 76 2 77 2 334 1 80 4 
336 1 53 3 103 1 223 1 3 1 311 1 197 3 61 2 198 1 62 2 31 2 32 1 135 1 248 1 158 1 114 1 69 1 348 1 187 1 16 1 117 1 351 1 232 1 118 1 353 1 145 1 169 1 189 1 190 2 334 1 171 1 127 2 
369 1 39 2 322 1 294 2 266 1 219 4 177 1 343 1 260 1 76 2 357 2 77 1 156 2 113 1 13 4 
338 1 8 1 50 1 
338 1 148 1 324 1 50 1 269 1 
338 1 8 1 50 1 
338 1 8 1 50 1 
338 1 25 1 50 1 
338 1 25 1 50 1 
338 1 25 1 50 1 
338 1 50 1 
93 1 372 1 
336 2 228 1 263 2 114 2 40 1 325 1 82 1 221 1 311 8 117 4 259 3 61 4 260 1 45 1 85 1 154 1 189 2 37 4 171 2 98 1 
263 2 276 1 40 1 82 1 325 1 221 1 311 6 117 3 259 2 260 1 45 1 85 1 37 3 98 1 
336 1 263 1 265 1 114 1 311 4 117 2 259 2 61 2 92 1 45 1 200 1 85 1 226 1 189 1 154 1 171 1 37 2 
263 1 257 1 311 7 117 4 92 1 259 2 45 1 200 1 85 1 233 1 226 1 6 1 154 1 123 2 37 3 
336 2 257 1 82 1 221 2 311 23 312 1 259 9 61 4 260 1 29 1 200 2 226 2 85 3 6 2 154 4 37 11 228 2 263 5 114 2 40 1 325 1 117 12 300 1 92 2 45 3 189 2 123 2 171 2 98 2 
123 1 311 1 117 1 
6 1 311 1 37 1 
336 1 263 2 265 1 114 1 138 1 311 6 117 3 61 2 92 1 259 3 45 1 200 1 226 1 85 1 189 1 154 1 171 1 37 3 
336 1 114 1 349 1 311 2 117 1 284 1 61 2 233 1 6 1 189 1 123 1 37 1 171 1 
263 1 325 1 221 1 311 6 117 3 259 2 45 1 85 1 154 1 37 3 98 1 
228 1 336 1 263 1 114 1 40 1 82 1 221 1 311 3 117 2 259 2 61 2 29 1 154 1 189 1 37 1 171 1 98 1 
336 1 263 3 114 1 325 1 221 2 349 1 311 10 117 5 61 2 259 5 45 2 85 2 121 1 189 1 154 2 171 1 37 5 98 2 
336 1 114 1 349 1 311 2 61 2 92 1 259 1 45 1 189 1 154 1 171 1 37 2 
336 1 263 1 114 1 349 1 311 4 117 2 259 2 61 2 92 1 45 1 200 1 85 1 226 1 189 1 154 1 171 1 37 2 
228 1 336 3 263 1 114 3 230 1 221 1 349 1 311 3 117 2 61 6 259 2 29 1 189 3 154 1 171 3 37 1 98 1 
0 1 336 5 257 1 82 1 221 3 311 34 61 10 259 12 260 1 29 1 200 3 226 3 85 5 287 1 6 3 154 5 37 16 228 2 263 7 265 1 114 5 40 1 230 1 325 2 268 1 349 1 117 18 92 3 45 5 233 1 189 5 123 4 171 5 98 3 
336 2 337 1 82 1 221 2 311 24 284 1 61 4 259 9 260 1 200 1 226 2 85 4 6 1 154 4 37 14 228 1 263 5 114 2 292 1 40 1 325 2 349 1 117 10 92 2 45 5 46 1 233 1 273 1 121 1 189 2 123 1 171 2 98 2 
336 3 337 1 257 1 82 1 221 1 311 20 284 1 61 6 259 5 260 1 200 1 226 3 85 2 6 1 154 2 37 12 228 1 263 3 265 1 292 1 114 3 40 1 325 1 349 1 117 8 92 3 45 4 46 1 273 1 233 1 189 3 123 2 171 3 98 1 
336 2 82 1 221 2 311 15 284 1 61 4 259 4 260 1 85 3 6 1 154 1 37 8 263 3 265 1 114 2 40 1 325 2 349 1 117 7 45 3 233 1 121 1 189 2 123 1 171 2 98 2 
336 2 82 1 221 2 311 15 284 1 61 4 259 7 260 1 85 3 6 1 154 3 37 8 263 4 265 1 114 2 40 1 325 2 349 1 117 7 45 3 233 1 121 1 189 2 123 1 171 2 98 2 
336 2 337 1 82 1 221 2 311 24 284 1 61 4 259 9 260 1 200 1 226 2 85 4 6 1 154 4 37 14 228 1 263 5 114 2 292 1 40 1 325 2 349 1 117 10 92 2 45 5 46 1 233 1 273 1 121 1 189 2 123 1 171 2 98 2 
336 1 114 1 349 1 311 2 117 1 284 1 61 2 233 1 6 1 189 1 123 1 37 1 171 1 
336 2 265 1 114 2 349 1 311 2 117 1 284 1 61 4 233 1 6 1 189 2 123 1 37 1 171 2 
336 2 114 2 230 1 349 1 311 2 117 1 284 1 61 4 233 1 6 1 189 2 123 1 37 1 171 2 
263 3 40 1 82 2 325 1 221 3 311 7 117 4 259 6 45 1 85 1 154 3 37 3 98 3 
336 2 114 2 230 1 349 1 311 2 117 1 284 1 61 4 233 1 6 1 189 2 123 1 37 1 171 2 
194 1 53 1 62 1 169 1 133 1 197 1 146 1 
24 1 323 1 47 1 105 1 247 1 
147 1 276 1 103 1 348 1 223 1 248 1 132 1 334 1 158 1 351 1 232 1 
53 2 103 1 69 1 348 1 223 1 197 2 232 1 351 1 145 1 62 1 169 1 31 1 135 1 202 1 190 1 248 1 334 1 158 1 
53 2 277 1 103 1 223 1 197 2 282 1 62 2 314 1 108 1 31 1 202 1 135 2 246 1 248 3 158 1 67 1 69 1 348 2 351 1 145 1 169 1 190 2 334 1 
53 2 277 1 103 1 223 2 197 2 282 1 62 2 314 1 108 1 31 1 202 1 135 2 246 1 248 3 158 2 67 1 348 2 299 1 351 2 145 1 169 1 215 1 190 2 334 1 
52 2 277 1 103 1 178 1 341 1 223 3 282 1 314 1 286 1 135 1 288 2 248 4 158 3 13 1 348 1 299 1 351 3 232 1 376 1 357 1 334 1 80 1 307 1 
52 2 277 1 103 1 348 1 223 3 90 1 299 1 282 1 232 1 351 3 376 1 314 1 286 1 135 1 357 1 288 2 248 4 334 1 158 3 13 1 307 1 80 1 
103 1 223 1 334 1 158 1 351 1 134 1 
207 1 2 1 103 3 223 6 348 2 83 1 374 1 134 1 232 2 351 7 378 1 33 1 243 1 135 1 34 1 234 1 380 1 248 3 334 2 158 7 159 1 
336 2 53 2 103 1 3 2 197 2 61 4 62 1 344 1 202 1 157 1 248 1 158 1 114 2 69 1 348 1 16 1 117 3 351 1 118 2 17 1 166 1 169 2 302 1 171 2 309 1 82 1 221 1 223 1 311 6 259 2 260 1 32 1 31 1 33 1 135 1 85 1 320 1 37 3 263 2 40 1 325 1 145 1 45 1 189 2 190 1 334 1 98 1 
52 3 130 1 173 1 223 1 242 1 286 1 288 3 113 1 319 1 248 2 158 1 13 1 369 2 322 2 229 1 266 2 70 1 90 1 143 1 351 1 232 1 352 1 376 1 357 1 76 1 77 2 307 1 80 2 
103 2 223 2 348 1 365 1 134 1 351 2 376 1 33 1 243 1 135 1 248 2 334 1 158 2 
147 1 103 1 223 4 348 1 132 1 299 1 232 1 351 4 33 1 180 1 248 1 334 1 158 4 
207 1 277 1 87 1 103 2 223 2 348 1 374 1 351 2 111 1 135 1 248 1 334 1 158 2 250 1 
28 1 184 1 94 1 103 1 223 1 141 1 334 1 158 1 351 1 232 1 
237 1 33 1 103 1 34 1 348 1 223 2 248 1 234 1 334 1 158 2 351 2 
147 1 277 1 103 2 223 4 348 2 132 1 232 1 351 5 378 1 33 1 180 1 234 1 248 3 334 2 158 5 159 1 
147 1 277 1 103 2 231 1 223 4 348 2 132 1 232 1 351 5 33 1 180 1 234 1 248 3 334 2 158 5 159 1 
53 2 103 1 348 1 223 1 197 2 232 1 351 1 145 1 62 1 169 1 31 1 135 1 202 1 215 1 190 1 248 1 334 1 158 1 
207 1 277 1 103 2 223 1 348 1 374 1 351 1 243 1 135 1 380 1 248 1 334 1 158 1 
251 1 241 1 53 1 62 1 119 1 20 1 197 1 58 1 235 1 
168 1 19 1 119 1 
169 1 119 1 20 1 58 1 79 1 
52 2 58 2 108 1 168 1 169 1 286 1 119 1 19 1 20 2 246 1 120 1 357 1 288 2 319 1 35 1 67 1 249 1 79 2 13 1 
253 1 276 1 225 1 116 1 
165 1 253 1 261 1 363 1 225 1 116 1 217 1 
195 1 363 1 254 1 
236 1 102 1 363 3 4 1 225 1 116 1 165 1 253 1 261 1 285 2 192 1 217 3 
165 1 253 1 261 1 367 1 363 2 225 1 116 1 12 1 217 2 
184 1 175 1 363 1 116 1 141 1 165 1 261 1 366 1 192 1 217 1 97 1 
165 1 253 1 261 1 363 1 116 1 217 1 192 1 
165 1 253 2 261 1 363 1 225 1 217 1 192 1 
345 1 363 2 116 1 165 2 253 1 261 2 355 1 192 1 217 2 255 1 
165 1 253 1 261 1 212 1 366 1 326 1 367 2 363 3 7 1 225 1 116 2 217 3 192 1 
184 2 175 1 363 2 88 1 225 1 116 1 141 1 165 1 253 1 261 1 94 1 245 1 367 1 192 1 217 2 
165 2 253 1 261 2 366 1 326 1 367 2 363 4 225 1 116 2 12 1 217 4 192 1 208 1 
165 1 253 1 261 1 363 1 225 1 116 1 217 1 192 1 
236 1 363 4 326 1 4 1 225 2 196 1 116 3 165 1 253 2 261 1 285 1 366 1 367 2 217 4 
362 1 363 2 225 1 116 1 165 1 253 1 261 1 332 1 274 1 367 1 192 1 217 2 
236 2 347 1 363 3 4 1 225 1 116 1 165 1 253 1 261 1 285 2 192 1 217 3 
74 2 278 1 116 2 252 1 
165 1 261 1 280 1 363 1 217 1 192 1 
165 1 253 1 261 1 367 1 363 2 7 1 225 1 116 1 217 2 192 1 
301 1 
165 1 253 1 261 1 363 1 225 1 116 1 217 1 192 1 
363 3 225 1 116 1 165 1 253 1 261 1 285 1 367 1 7 1 192 1 217 3 
366 1 326 1 196 1 116 1 
253 1 116 1 

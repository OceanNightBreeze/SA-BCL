#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 6 90 9 134 4 212 1 27 2 5 2 6 1 120 1 193 1 321 2 54 1 57 2 268 1 365 3 296 2 99 1 196 9 147 2 79 1 276 1 39 1 248 1 125 1 249 1 128 2 86 5 281 1 20 1 
1 6 90 9 134 4 212 1 27 2 5 2 6 1 120 1 193 1 321 2 54 1 57 2 268 1 365 3 296 2 99 1 196 9 147 2 79 1 276 1 39 1 248 1 125 1 249 1 128 2 86 5 281 1 20 1 
1 7 90 10 134 5 212 1 27 2 5 2 6 1 120 1 193 1 321 2 54 1 57 2 268 1 365 4 296 2 99 1 196 10 147 2 79 1 276 1 39 1 248 1 125 1 249 1 128 2 86 6 281 1 20 1 
1 4 90 7 134 3 212 1 27 2 5 2 6 1 120 1 193 1 321 2 54 1 57 2 268 1 365 2 296 1 99 1 196 7 147 2 79 1 276 1 39 1 248 1 125 1 249 1 128 2 86 4 281 1 
196 4 1 3 90 4 134 2 125 1 27 1 5 1 6 1 128 1 86 3 193 1 321 1 57 1 268 1 365 1 281 1 296 2 20 1 
196 2 147 1 90 2 26 1 249 1 236 1 27 1 5 1 6 1 120 1 61 1 86 1 193 1 321 1 57 1 281 1 
5 2 6 1 1 1 196 3 147 1 86 2 193 1 54 1 90 3 57 2 134 1 365 1 281 1 
196 9 1 7 79 1 245 1 147 1 90 9 134 4 212 1 125 1 27 1 5 2 6 1 128 1 303 1 86 5 193 1 321 1 54 1 268 1 57 2 281 1 365 3 296 2 20 1 
196 9 1 7 79 1 245 1 147 1 90 9 134 4 212 1 125 1 27 1 5 2 6 1 128 1 303 1 86 5 193 1 321 1 54 1 268 1 57 2 281 1 365 3 296 2 20 1 
40 1 76 1 77 1 
40 1 251 2 237 1 
207 1 267 2 187 2 36 2 283 1 14 2 47 2 261 2 
22 1 0 1 256 1 288 2 188 1 187 2 289 1 336 1 135 1 261 2 263 2 73 1 32 1 363 1 267 2 55 1 241 1 368 1 244 1 369 1 148 2 221 1 36 3 38 1 346 1 153 1 177 1 14 2 252 1 207 1 229 2 232 2 184 1 353 1 283 1 330 1 47 3 
326 1 349 1 182 1 267 1 187 1 36 1 283 1 14 1 47 1 261 1 
160 1 36 1 176 1 40 1 190 1 261 1 349 1 302 1 183 1 295 1 76 1 323 1 47 1 286 1 
160 1 187 1 36 1 40 1 190 1 14 1 261 1 349 1 302 2 183 2 267 1 295 1 76 1 47 1 286 1 
302 1 199 1 183 1 175 1 82 1 
304 1 302 2 183 2 175 1 102 1 82 1 40 1 76 1 
302 1 183 1 175 1 
326 1 187 1 36 1 82 1 152 1 14 1 261 1 349 1 302 1 182 1 183 1 267 1 283 1 47 1 
40 1 
304 1 302 2 183 2 227 1 175 1 82 1 40 1 76 1 
24 2 246 1 82 2 175 2 40 1 105 1 154 1 291 1 304 1 302 5 42 1 62 2 16 1 215 1 183 5 269 2 254 1 378 1 76 1 
72 1 341 2 358 1 207 1 267 1 377 1 187 4 36 5 176 1 204 1 14 4 47 5 261 5 83 1 
349 1 182 1 187 2 36 2 142 1 14 2 47 2 261 2 
207 1 77 1 
187 1 36 2 14 1 261 2 72 1 226 1 267 1 207 2 47 2 
327 1 151 1 273 1 
256 1 244 1 148 1 289 1 36 1 346 1 177 1 263 1 363 1 207 1 55 1 232 1 241 1 353 1 143 1 47 1 
341 1 256 1 244 1 148 1 187 1 289 1 36 2 346 1 177 1 14 1 261 1 263 1 363 1 55 1 377 1 232 1 353 1 241 1 273 1 47 2 
341 1 267 1 207 1 187 3 36 3 14 3 47 3 261 3 
349 1 182 1 187 1 36 1 14 1 47 1 261 1 
72 1 349 1 226 1 267 1 187 1 36 1 14 1 47 1 261 1 
22 1 160 1 256 1 0 1 288 2 187 3 289 1 336 1 135 1 190 1 261 3 263 1 72 1 265 1 73 1 363 1 267 2 55 1 295 1 241 1 367 1 368 1 341 1 244 1 148 1 221 1 36 4 38 1 346 1 153 1 177 1 14 3 349 1 302 1 183 1 207 1 377 1 229 1 232 1 184 1 353 1 283 1 286 1 47 4 
341 1 207 1 187 1 36 2 176 1 14 1 47 2 261 2 83 1 
160 1 341 2 187 3 36 3 40 1 190 1 14 3 261 3 72 1 318 1 349 1 302 1 183 1 267 1 377 1 295 1 367 1 47 3 286 1 
341 1 327 1 187 2 36 2 14 2 261 2 72 1 267 1 273 1 47 2 
256 1 244 1 148 1 289 1 36 1 346 1 177 1 263 1 363 1 207 1 55 1 232 1 241 1 353 1 47 1 
244 1 148 1 289 1 11 1 36 1 346 1 177 1 263 1 301 1 363 1 207 1 55 1 232 1 353 1 47 1 
288 2 188 2 135 1 138 1 71 1 73 1 239 1 338 1 97 1 273 2 368 1 327 2 343 1 221 1 59 1 38 2 151 2 153 1 43 1 44 1 306 1 229 4 184 1 379 1 
349 1 187 1 36 1 190 1 14 1 142 1 47 1 261 1 
108 1 359 1 
108 1 359 1 
117 1 209 1 
117 1 209 1 
117 1 209 1 
108 1 279 1 359 1 
108 1 279 1 359 1 
108 1 359 1 250 1 
108 2 63 1 130 1 117 1 359 2 209 1 
108 1 279 1 359 1 
108 1 359 1 18 1 
108 1 359 1 18 1 
108 1 359 1 18 1 
133 1 187 2 50 1 359 1 3 1 261 2 292 1 166 1 7 1 370 1 219 1 10 1 36 2 12 1 14 2 250 1 127 1 108 1 302 1 183 1 207 1 231 1 355 1 47 2 
342 1 275 1 297 1 10 2 50 1 278 1 40 1 359 2 12 2 108 2 302 2 319 2 63 1 7 2 183 2 167 1 231 2 355 3 66 1 
128 1 321 1 27 1 
61 1 321 1 27 1 
61 1 128 2 362 1 294 1 101 1 321 3 
61 1 128 1 294 1 101 1 321 2 228 1 
61 1 128 1 294 2 101 1 321 2 
24 1 133 1 258 1 2 1 3 1 360 2 237 1 52 1 93 1 239 1 269 1 339 1 338 1 76 1 97 1 219 1 175 1 82 4 40 2 251 3 105 1 154 2 223 1 62 1 304 1 302 5 44 1 183 5 254 3 64 2 110 2 255 1 
158 1 24 2 133 4 258 3 2 2 360 6 237 3 52 2 239 3 269 2 338 3 322 5 76 1 97 3 199 5 100 1 222 1 175 6 82 7 40 5 251 9 105 1 154 6 223 1 305 1 42 1 302 9 304 1 62 2 44 3 183 9 254 8 351 1 64 6 65 1 
24 1 133 1 258 1 2 1 360 2 237 2 52 1 93 1 269 1 239 1 338 1 76 1 97 1 82 2 40 3 251 4 154 2 62 1 302 3 42 1 183 3 44 1 254 3 110 1 64 2 255 1 
158 1 24 1 133 2 258 2 2 1 360 4 237 3 52 1 93 1 269 1 239 2 338 2 76 1 97 2 82 3 40 4 251 7 154 4 305 1 62 1 302 4 42 1 183 4 44 2 254 5 351 1 64 4 110 2 255 1 
244 1 346 1 177 1 
177 1 178 1 
87 1 177 1 77 1 
177 1 92 1 
348 1 
346 1 177 1 
244 1 87 2 282 1 346 1 366 1 177 3 
78 1 188 4 38 3 313 1 374 1 181 2 43 2 293 1 238 1 306 3 280 1 239 1 229 7 307 1 97 1 186 1 195 1 
78 1 188 4 38 3 313 1 374 1 181 2 43 2 293 1 238 1 306 3 280 1 239 1 229 7 307 1 97 1 186 1 195 1 
78 1 188 4 38 3 313 1 374 1 181 2 43 2 293 1 238 1 306 3 280 1 239 1 229 7 307 1 97 1 46 1 186 1 195 1 
258 3 288 2 188 16 313 1 135 1 191 1 118 1 73 1 293 2 194 1 238 5 239 4 338 3 217 1 97 4 195 1 368 1 78 2 371 1 150 3 80 1 38 15 374 1 181 3 180 1 43 5 131 4 44 3 280 1 306 10 229 31 307 2 184 1 186 2 
115 1 288 4 188 5 313 1 135 2 118 1 73 2 293 1 238 1 239 1 33 1 97 1 368 2 78 1 38 4 374 1 181 2 43 3 306 4 280 1 229 9 307 1 184 2 186 1 
357 1 1 1 116 1 90 2 210 1 27 1 263 1 5 1 6 1 362 1 193 1 321 2 57 1 140 1 55 1 141 1 171 1 196 2 147 1 148 1 37 1 298 1 61 1 128 1 86 1 206 1 232 1 281 1 353 1 208 1 
357 1 1 2 116 1 90 3 210 1 27 1 263 1 5 1 6 1 362 1 193 1 321 2 57 1 55 1 141 1 270 1 196 3 147 1 148 1 37 1 298 1 300 1 61 1 128 1 86 1 206 1 232 1 353 1 308 1 208 1 
1 2 116 1 90 2 210 1 263 1 27 1 6 1 362 1 193 1 321 2 55 1 141 1 270 1 196 2 147 1 148 1 37 1 298 1 300 1 61 1 128 1 86 1 206 1 232 1 353 1 
111 1 196 1 147 2 163 1 148 1 90 1 289 1 37 2 346 1 177 1 104 1 263 1 5 1 121 1 206 2 55 1 57 1 141 2 240 1 232 1 353 1 308 1 35 1 
357 1 116 1 90 1 210 1 27 1 263 1 5 1 362 1 321 2 57 1 140 1 55 1 141 1 270 1 196 1 147 1 148 1 37 1 298 1 61 1 128 1 206 1 232 1 281 1 353 1 208 1 
287 1 
51 2 289 2 235 1 2 1 190 1 192 1 237 2 55 1 295 1 98 1 198 1 148 2 344 1 346 1 251 2 105 1 154 2 156 1 349 1 304 3 302 5 62 1 254 2 353 1 23 2 309 2 24 1 160 1 257 1 161 1 163 1 261 1 263 2 214 2 317 1 361 2 121 1 269 1 122 4 76 1 323 1 169 1 123 1 36 1 175 6 176 1 40 2 177 1 183 5 230 2 232 2 132 1 285 2 47 1 286 1 
160 1 198 1 36 1 175 2 176 1 190 1 192 1 261 1 349 1 156 1 304 1 302 3 183 3 227 1 230 1 122 2 295 1 132 1 323 1 169 1 47 1 286 1 
160 1 23 1 190 1 261 1 192 1 295 1 122 3 76 1 323 1 169 1 198 1 36 1 175 1 176 1 40 1 156 1 349 1 302 3 304 1 183 3 227 1 132 1 286 1 47 1 
160 1 23 1 190 1 261 1 192 1 295 1 122 3 76 1 323 1 169 1 198 1 36 1 176 1 175 2 40 1 156 1 349 1 304 1 302 3 183 3 227 1 230 1 132 1 286 1 47 1 285 1 
333 1 51 2 235 1 190 1 192 1 237 2 295 1 145 1 242 1 198 1 105 1 154 1 349 1 156 1 302 5 304 3 62 1 254 1 350 1 160 1 23 4 24 1 309 2 161 1 260 1 261 1 214 2 361 2 269 1 122 6 76 5 323 1 169 1 36 1 175 7 176 1 40 5 183 5 227 1 230 4 132 1 285 4 286 1 47 1 
23 2 309 2 24 1 160 1 257 1 161 1 51 2 235 1 190 1 261 1 192 1 237 2 214 2 361 2 269 1 295 1 122 4 76 1 323 1 169 1 198 1 36 1 175 4 176 1 40 2 251 2 105 1 154 1 156 1 349 1 304 2 62 1 302 4 183 4 230 2 254 1 132 1 285 2 47 1 286 1 
23 2 309 2 160 1 24 1 161 1 51 2 235 1 190 1 261 1 192 1 237 2 214 2 361 2 269 1 295 1 122 4 76 1 323 1 169 1 145 1 242 1 198 1 36 1 175 4 176 1 40 1 105 1 154 1 156 1 349 1 304 2 302 4 62 1 183 4 230 2 254 1 350 1 132 1 285 2 286 1 47 1 
23 2 309 2 160 1 24 1 161 1 51 2 235 1 190 1 261 1 192 1 237 2 214 2 361 2 269 1 295 1 122 4 76 1 323 1 169 1 145 1 242 1 198 1 36 1 175 4 176 1 40 1 105 1 154 1 156 1 349 1 304 2 302 4 62 1 183 4 230 2 254 1 350 1 132 1 285 2 286 1 47 1 
23 2 309 2 160 1 24 1 235 1 190 1 261 1 192 1 214 2 269 1 295 1 122 4 76 1 323 1 169 1 218 2 198 1 200 1 202 1 36 1 175 4 176 1 40 1 251 2 105 1 154 1 156 1 349 1 304 2 302 4 253 1 62 1 183 4 230 2 254 1 350 1 132 1 285 2 19 2 286 1 47 1 
309 2 24 1 160 1 23 3 161 1 51 2 235 1 190 1 260 1 261 1 192 1 237 2 214 2 361 2 269 1 295 1 122 5 76 1 323 1 169 1 145 1 242 1 198 1 36 1 176 1 175 5 40 1 105 1 154 1 156 1 349 1 304 2 62 1 302 4 183 4 254 1 230 3 350 1 132 1 286 1 47 1 285 3 
309 2 24 1 160 1 23 3 161 1 51 2 235 1 190 1 260 1 261 1 192 1 237 2 214 2 361 2 269 1 295 1 122 5 76 1 323 1 169 1 145 1 242 1 198 1 36 1 176 1 175 5 40 1 105 1 154 1 156 1 349 1 304 2 62 1 302 4 183 4 254 1 230 3 350 1 132 1 286 1 47 1 285 3 
23 2 309 2 24 1 160 1 257 1 235 1 190 1 261 1 192 1 214 2 269 1 295 1 122 4 76 1 323 1 169 1 218 2 198 1 200 1 36 1 175 4 176 1 40 1 251 2 105 1 154 1 156 1 349 1 304 2 62 1 302 4 183 4 230 2 254 1 132 1 285 2 19 2 47 1 286 1 
288 2 188 3 313 1 135 1 73 1 239 1 97 1 273 1 77 1 368 1 327 1 221 1 38 3 151 1 374 1 153 1 181 1 43 2 280 1 306 2 207 2 229 6 307 1 184 1 186 1 379 1 
22 1 258 2 288 4 188 8 135 2 70 1 73 2 238 1 239 2 338 1 217 1 271 1 97 1 273 11 368 2 150 3 327 4 373 1 80 1 221 2 38 6 151 11 153 1 179 1 252 1 43 1 131 3 44 2 207 1 306 2 229 14 184 2 233 1 
22 1 256 1 288 2 289 1 187 1 259 1 188 1 135 1 136 1 337 1 261 1 263 1 73 1 363 1 55 1 241 1 143 1 368 1 341 1 244 1 148 1 327 1 373 1 221 1 36 2 38 1 346 1 153 1 177 1 14 1 252 1 207 1 377 1 229 2 232 1 353 1 184 1 47 2 
288 6 289 1 187 1 188 10 336 2 137 1 135 3 238 4 55 2 239 3 338 2 241 2 97 3 341 1 244 2 148 3 151 7 346 2 153 3 14 1 252 1 205 1 207 2 306 8 307 1 353 2 109 2 22 1 256 2 258 2 313 1 261 1 263 3 73 3 363 2 75 1 270 1 273 7 368 3 274 2 327 7 373 1 36 3 221 3 38 10 374 1 177 2 181 1 84 2 43 4 44 2 280 1 377 1 229 20 232 3 184 3 186 1 47 3 380 2 
22 1 114 1 163 1 288 4 187 1 289 2 188 1 135 2 261 1 263 7 53 1 73 2 121 1 55 2 270 1 368 2 171 1 341 1 148 8 369 2 201 1 36 1 221 2 38 1 346 2 153 2 14 1 177 3 252 1 225 1 129 1 17 1 229 2 232 8 353 2 184 2 284 1 379 1 47 1 
258 1 288 2 187 1 188 1 135 1 261 1 72 1 165 1 73 1 267 1 239 1 338 1 97 1 273 1 368 1 327 1 373 1 221 1 36 1 151 1 38 2 153 1 14 1 43 1 44 1 306 1 229 3 184 1 47 1 
368 1 327 1 288 2 188 2 221 1 59 1 151 1 135 1 153 1 73 1 44 1 306 1 238 1 239 1 229 2 184 1 273 1 379 1 
368 1 327 1 288 2 221 1 151 1 38 2 135 1 153 1 138 1 43 1 73 1 306 1 229 2 338 1 184 1 97 1 273 1 379 1 
258 1 288 2 188 2 135 1 73 1 238 1 239 1 338 1 97 1 273 2 368 1 327 2 221 1 151 2 38 2 153 1 43 1 44 1 306 2 229 4 184 1 379 1 
368 1 327 1 288 2 188 2 221 1 59 1 151 1 135 1 153 1 129 1 73 1 44 1 306 1 238 1 239 1 229 2 184 1 273 1 
368 1 327 1 288 2 221 1 151 1 38 2 135 1 153 1 138 1 43 1 129 1 73 1 306 1 229 2 338 1 184 1 97 1 273 1 
258 1 288 2 188 2 135 1 73 1 238 1 239 1 338 1 97 1 273 2 368 1 327 2 221 1 151 2 38 2 153 1 129 1 43 1 44 1 306 2 229 4 184 1 
258 1 288 2 188 2 135 1 73 1 238 1 239 1 338 1 97 1 273 2 368 1 327 2 221 1 151 2 38 2 153 1 43 1 44 1 306 2 229 4 184 1 
22 1 256 1 288 2 188 1 289 1 336 1 135 1 263 1 73 1 363 1 55 1 241 1 368 1 244 1 148 1 36 1 221 1 38 1 346 1 153 1 177 1 252 1 207 1 229 2 232 1 353 1 184 1 47 1 
22 1 288 2 188 1 289 1 314 1 135 1 263 1 73 1 363 1 55 1 368 1 244 1 148 1 11 1 36 1 221 1 38 1 346 1 153 1 177 1 252 1 301 1 207 1 229 2 232 1 353 1 184 1 47 1 
258 1 288 2 188 2 135 1 73 1 238 1 239 1 338 1 97 1 273 2 368 1 327 2 373 1 221 1 151 2 38 2 153 1 43 1 44 1 306 2 229 4 184 1 
256 1 258 1 288 2 188 2 336 1 135 1 263 1 73 1 363 1 238 1 239 1 55 1 338 1 241 1 97 1 273 2 368 1 171 1 244 1 148 1 327 2 36 1 221 1 38 2 151 2 346 1 153 1 177 1 84 1 43 1 44 1 306 2 229 4 232 1 353 1 184 1 47 1 
258 1 288 2 187 1 188 2 135 1 261 1 72 1 73 1 238 1 267 1 239 1 338 1 97 1 273 1 368 1 327 1 373 1 221 1 36 1 38 1 151 1 153 1 14 1 44 1 306 1 229 3 184 1 352 1 47 1 
288 6 188 20 234 1 135 3 94 1 238 4 239 5 338 4 97 5 146 1 149 1 150 3 247 4 60 1 107 1 306 8 307 1 356 1 258 4 310 1 211 1 313 1 118 1 164 1 28 1 119 1 73 3 168 1 33 1 216 2 217 1 368 3 80 3 38 21 374 1 181 1 43 4 44 4 131 4 280 1 229 41 184 3 186 1 
356 1 310 1 258 4 288 8 234 1 188 20 313 1 211 1 135 4 164 1 118 2 119 1 28 1 73 4 94 1 168 1 238 3 33 1 239 5 216 2 338 3 217 1 97 4 146 1 368 4 149 1 150 3 247 4 80 3 38 18 374 1 60 1 181 1 107 1 43 4 131 4 44 4 280 1 306 7 229 38 307 1 184 4 186 1 
356 1 310 1 258 7 288 4 234 1 188 27 313 1 211 1 135 2 118 1 28 1 73 2 94 1 168 1 238 7 33 1 239 8 216 1 338 7 217 2 271 2 97 8 146 1 368 2 149 1 150 4 247 4 80 2 38 25 374 1 60 1 181 1 107 1 43 7 131 4 44 7 280 1 306 14 229 52 307 1 184 2 186 1 
25 1 258 3 288 4 234 2 188 9 211 1 135 2 119 1 28 1 73 2 238 3 33 1 239 3 216 1 338 3 217 1 97 3 368 2 150 1 247 2 80 1 38 10 60 1 107 1 43 3 131 2 44 3 306 6 229 19 184 2 
356 1 310 1 258 3 288 6 234 1 188 14 211 1 135 3 118 2 28 2 73 3 94 1 168 1 238 2 33 1 239 3 216 2 338 2 97 2 368 3 146 1 149 1 150 2 247 4 80 2 38 12 60 1 107 1 43 2 131 2 44 3 306 4 229 26 184 3 
279 1 345 1 
325 1 130 1 18 1 
108 1 63 1 7 1 342 1 95 1 10 1 231 1 278 1 12 1 359 1 
370 1 250 1 
108 1 7 1 10 1 277 1 231 1 12 1 359 1 272 1 106 1 
342 1 275 1 50 1 10 1 278 1 40 1 359 1 12 1 302 1 108 1 319 1 63 1 7 1 183 1 167 1 231 1 355 2 66 1 
342 1 275 1 50 1 10 1 278 1 40 1 359 1 12 1 302 1 108 1 319 1 63 1 7 1 183 1 167 1 231 1 355 2 66 1 
342 1 275 1 50 1 10 1 278 1 40 1 359 1 12 1 302 1 108 1 319 1 63 1 7 1 183 1 167 1 231 1 355 2 66 1 
130 1 279 1 345 1 
130 1 279 1 345 1 
325 1 18 1 
325 1 130 1 18 1 
127 1 166 1 
133 1 187 2 359 1 3 1 261 2 316 1 319 1 292 1 166 1 7 1 167 1 370 1 219 1 10 1 36 2 82 1 12 1 14 2 250 1 127 1 302 1 108 1 183 1 207 1 231 1 355 1 47 2 
22 1 288 2 188 1 135 1 315 1 261 2 262 1 263 2 264 1 73 1 55 1 368 1 148 2 369 2 373 1 221 1 36 2 38 1 346 1 153 1 103 1 177 1 347 1 252 1 225 1 17 1 229 2 232 2 353 1 184 1 47 2 
171 1 148 2 116 1 210 1 290 1 27 1 263 2 61 1 128 1 362 1 139 1 321 2 55 1 141 1 232 2 353 1 270 1 331 1 208 1 
148 1 116 1 210 1 174 1 290 1 27 1 263 1 61 1 128 1 362 1 321 2 55 1 141 1 232 1 270 1 353 1 208 1 
111 1 148 1 163 1 289 1 81 1 346 1 177 1 263 1 121 1 55 1 141 1 232 1 353 1 331 1 
148 1 116 1 210 1 290 1 27 1 263 1 61 1 128 1 362 1 139 1 321 2 55 1 141 1 232 1 353 1 270 1 331 1 208 1 
159 1 
291 1 254 1 378 1 40 1 76 1 154 1 77 1 
24 1 161 1 51 1 175 1 40 2 251 1 105 1 154 1 237 1 361 1 302 1 304 1 62 1 183 1 269 1 254 1 76 1 
289 1 189 2 2 2 92 3 4 2 237 6 291 1 55 3 239 2 338 2 295 2 97 2 144 2 243 2 244 3 148 3 13 1 346 3 105 4 251 12 154 8 15 2 62 4 302 5 304 3 254 9 353 4 109 2 64 6 21 2 24 4 113 1 258 2 360 6 263 3 320 2 364 1 269 4 76 2 366 1 34 1 170 2 171 1 123 1 173 1 175 5 40 8 177 10 178 2 87 2 183 5 44 2 378 1 232 3 
356 1 24 1 310 1 258 2 311 1 360 5 237 3 94 1 269 1 239 2 338 2 76 1 97 2 146 1 149 1 150 1 80 1 175 1 40 4 251 6 105 1 154 4 302 1 304 1 62 1 183 1 131 1 44 2 254 7 64 5 21 1 
24 1 187 1 313 1 261 1 267 1 269 1 239 2 97 1 326 1 242 1 36 1 152 1 14 1 105 1 126 1 154 2 15 1 349 1 62 1 302 1 182 1 183 1 254 2 307 1 283 1 186 1 47 1 21 2 
24 1 40 1 105 1 154 1 291 1 62 1 269 1 254 1 378 1 76 1 
258 2 40 5 360 5 251 10 154 5 237 5 15 1 44 2 239 2 338 2 254 5 109 1 64 5 97 2 21 2 
302 1 304 1 183 1 175 1 40 1 76 1 
24 2 67 1 163 1 289 2 2 2 213 1 263 4 317 1 121 1 364 2 55 1 269 2 34 1 123 2 148 4 344 1 175 4 346 1 177 1 105 1 154 2 42 1 62 2 304 2 302 3 183 3 254 2 232 4 353 1 
22 1 0 1 256 1 288 2 289 1 187 2 336 1 135 1 261 2 263 1 73 1 363 1 267 2 55 1 241 1 368 1 244 1 148 1 36 3 221 1 38 1 346 1 153 1 14 2 177 1 207 1 229 1 232 1 353 1 184 1 283 1 47 3 
24 1 123 1 2 1 40 4 360 2 251 4 105 1 181 1 237 2 154 2 62 1 269 1 254 1 64 2 76 2 
335 1 231 1 12 1 
335 1 231 1 12 1 
112 1 166 1 342 1 231 1 12 1 
335 1 231 1 12 1 
340 1 231 1 12 1 
340 1 231 1 12 1 
340 1 231 1 12 1 
231 1 12 1 
108 1 359 1 
310 1 288 2 188 4 313 1 135 1 73 1 239 1 33 1 97 1 368 1 150 1 80 1 38 4 374 1 181 1 43 2 131 1 280 1 306 2 229 8 307 1 184 1 186 1 
310 1 258 1 288 4 188 6 313 1 135 2 73 2 238 1 33 1 239 2 217 1 97 1 324 1 368 2 150 1 80 1 38 5 374 1 181 1 43 2 131 2 44 1 280 1 306 3 229 11 307 1 184 2 186 1 
356 1 310 1 258 2 288 6 188 9 313 1 135 3 118 1 73 3 94 1 238 1 33 1 239 3 338 2 97 3 324 1 368 3 146 1 149 1 150 1 80 1 38 10 374 1 181 1 43 3 131 1 44 2 280 1 306 4 229 19 307 1 184 3 186 1 
356 1 310 1 258 2 288 6 188 10 313 1 135 3 118 1 73 3 94 1 238 2 33 1 239 3 338 1 97 2 324 1 368 3 146 1 149 1 150 1 80 1 38 7 374 1 181 1 43 3 131 1 44 2 280 1 306 5 229 17 307 1 184 3 186 1 
310 1 288 2 188 4 313 1 135 1 73 1 239 1 33 1 97 1 368 1 150 1 80 1 38 4 374 1 181 1 43 2 131 1 280 1 306 2 229 8 307 1 184 1 186 1 
356 1 310 1 258 2 288 2 188 6 135 1 73 1 94 1 238 1 33 1 239 2 338 2 97 2 368 1 146 1 149 1 150 1 80 1 38 6 43 1 131 1 44 2 306 2 229 12 184 1 
356 1 310 1 258 2 288 8 188 10 313 1 135 4 118 2 73 4 94 1 238 2 33 1 239 3 338 1 97 2 324 1 368 4 146 1 149 1 150 1 80 1 38 8 374 1 181 1 43 3 131 1 44 2 280 1 306 5 229 18 307 1 184 4 186 1 
356 1 310 1 258 3 288 8 188 9 135 4 118 2 119 1 73 4 94 1 238 3 33 1 239 3 338 2 97 2 368 4 146 1 149 1 150 1 80 1 38 7 43 3 131 1 44 3 306 6 229 16 184 4 
188 3 38 4 313 1 374 2 43 3 280 1 306 6 238 3 239 1 229 7 307 3 97 1 186 3 
356 1 310 1 258 2 288 8 188 10 313 1 135 4 118 2 119 1 73 4 94 1 238 1 33 1 239 3 338 1 97 2 368 4 146 1 149 1 150 1 80 1 38 8 374 1 181 1 43 3 131 1 44 2 280 1 306 4 229 18 307 1 184 4 186 1 
368 2 288 4 188 4 313 1 38 4 135 2 374 1 118 1 181 1 43 2 73 2 238 1 306 3 280 1 239 1 229 8 307 1 184 2 97 1 186 1 
188 3 38 3 313 1 374 1 181 1 43 2 280 1 306 2 239 1 229 6 307 1 97 1 186 1 77 1 
368 1 258 1 288 2 188 2 38 2 135 1 43 1 73 1 44 1 306 2 238 1 239 1 338 1 229 4 184 1 97 1 324 1 
150 1 258 1 188 3 80 1 38 4 43 1 131 2 44 1 238 1 306 2 239 1 338 1 229 7 217 1 97 1 
258 2 88 1 288 4 188 11 313 1 135 2 118 2 73 2 238 4 239 3 338 2 217 1 97 3 271 1 368 2 150 2 38 12 374 1 181 1 43 5 44 2 131 2 280 1 306 9 229 23 307 2 184 2 186 2 233 1 
131 1 229 1 38 1 
150 1 188 1 229 1 
368 1 258 1 288 2 188 3 38 3 135 1 73 1 43 2 44 1 238 1 306 3 239 1 229 6 338 1 184 1 109 1 97 1 324 1 
356 1 310 1 258 2 288 2 188 6 135 1 73 1 94 1 238 1 33 1 239 2 338 2 97 2 368 1 146 1 149 1 150 1 80 1 38 6 43 1 131 1 44 2 306 2 229 12 184 1 
188 3 313 1 38 3 43 1 306 2 238 1 239 1 229 6 307 1 97 1 186 1 
368 1 88 1 288 2 188 1 38 2 135 1 374 1 118 1 43 1 73 1 238 1 306 2 280 1 229 3 307 1 184 1 186 1 
368 1 288 2 188 5 38 5 313 1 135 1 126 1 73 1 43 3 306 5 238 2 33 1 239 2 229 10 307 2 184 1 97 2 186 2 
368 1 288 2 188 2 135 1 73 1 44 1 238 1 306 1 33 1 239 1 229 2 184 1 
368 1 258 1 288 2 188 2 38 2 135 1 43 1 73 1 44 1 306 2 238 1 33 1 239 1 338 1 229 4 184 1 97 1 
368 3 88 1 288 6 188 1 38 2 135 3 118 1 119 1 73 3 43 1 306 2 238 1 33 1 229 3 307 1 184 3 186 1 
88 1 258 3 288 10 188 16 313 2 135 5 191 1 118 2 119 1 73 5 194 1 238 5 33 1 239 5 338 3 217 1 97 5 324 1 368 5 150 3 80 1 38 18 374 1 181 1 180 1 43 7 131 4 44 3 280 1 306 12 229 34 307 3 184 5 186 3 
266 1 207 1 36 1 176 1 47 1 261 1 83 1 
8 1 372 1 36 1 176 1 261 1 83 1 266 1 207 1 376 1 96 1 185 1 47 1 
341 1 244 1 148 1 187 1 289 1 11 1 36 2 346 1 177 1 14 1 261 1 263 1 363 1 207 1 55 1 232 1 353 1 47 2 
197 1 244 1 148 1 346 1 177 1 263 1 41 1 29 1 364 1 55 1 232 1 366 1 353 2 
121 1 163 1 148 1 55 1 289 1 232 1 353 1 346 1 177 1 77 1 263 1 
341 1 244 1 148 1 187 1 289 1 36 2 346 1 177 1 14 1 261 1 263 1 363 1 207 1 55 1 232 1 353 1 241 1 47 2 
160 1 341 1 244 2 148 1 189 1 187 2 36 2 190 1 346 2 177 3 14 1 178 1 261 2 263 1 349 1 363 1 207 1 364 1 55 1 232 1 353 1 241 1 47 2 
160 1 162 1 187 2 189 1 190 1 261 2 263 2 363 1 55 1 364 1 341 1 244 2 148 2 11 1 36 2 346 2 14 1 177 3 178 1 349 1 207 1 232 2 353 1 47 2 
162 1 189 1 289 1 92 1 263 3 31 1 55 1 364 1 295 1 76 1 244 1 148 3 175 1 346 1 40 1 177 4 178 1 302 2 87 1 183 2 232 3 353 1 354 1 
243 1 162 1 244 1 148 3 289 1 189 1 175 1 40 1 346 1 92 1 177 4 178 1 263 3 302 2 87 1 183 2 364 1 55 1 295 1 232 3 76 1 353 1 
148 1 55 1 232 1 353 1 284 1 263 1 
171 1 197 1 244 1 114 1 369 1 148 7 201 1 289 2 346 2 177 3 263 6 41 1 53 1 29 1 225 1 55 2 232 7 270 1 366 1 353 3 284 1 
256 1 288 4 188 3 187 1 313 1 336 1 135 2 315 1 261 1 263 1 73 2 363 1 239 1 55 1 241 1 97 1 273 1 368 2 274 1 341 1 171 1 244 1 148 1 327 1 373 1 221 2 36 2 151 1 38 3 346 1 374 1 153 2 177 1 14 1 181 1 84 1 43 2 207 2 306 2 280 1 229 6 307 1 232 1 353 1 184 2 186 1 47 2 
24 2 289 1 92 1 263 1 4 1 291 1 320 1 269 2 295 1 76 1 34 1 170 1 243 1 148 1 82 1 175 2 40 1 177 2 105 2 154 1 62 2 302 3 304 1 87 1 183 3 254 1 378 1 232 1 
171 1 113 1 244 1 148 2 346 1 177 2 263 2 87 1 55 1 232 2 366 1 353 2 284 1 
171 1 162 1 148 4 163 1 289 1 346 1 177 1 263 4 85 1 121 1 55 1 232 4 353 1 
197 1 244 1 148 2 68 1 49 1 346 1 177 1 263 2 29 1 364 1 75 1 55 1 232 2 353 2 
61 1 148 1 321 1 116 1 55 1 289 1 232 1 353 1 27 1 263 1 
264 1 171 1 225 1 148 2 55 1 232 2 353 1 346 1 270 1 177 1 263 2 
171 1 114 1 163 1 148 5 201 1 289 1 346 2 177 3 263 4 85 1 225 1 121 1 364 1 55 2 232 5 353 2 
171 1 163 1 148 5 201 1 289 1 328 1 346 2 177 3 263 4 85 1 225 1 121 1 364 1 55 2 232 5 353 2 
36 1 91 1 103 1 375 1 262 1 347 1 261 1 155 1 47 1 
155 1 224 1 58 1 
155 1 172 1 207 1 91 1 375 1 
160 1 172 2 82 1 91 2 40 1 190 1 375 2 155 1 349 1 224 1 302 2 74 1 183 2 207 1 58 1 295 1 76 1 367 1 286 1 
6 1 86 1 193 1 77 1 
5 1 6 1 196 1 86 1 193 1 90 1 57 1 
147 1 206 1 90 1 
196 3 9 1 90 3 69 1 5 1 6 1 120 2 86 1 193 1 57 1 281 1 157 1 
5 1 6 1 1 1 196 2 86 1 193 1 90 2 57 1 296 1 
5 1 196 1 128 1 86 1 321 1 90 1 57 1 134 1 281 1 125 1 27 1 
5 1 6 1 196 1 86 1 90 1 57 1 281 1 
5 1 6 2 196 1 193 1 90 1 57 1 281 1 
196 2 312 1 90 2 220 1 299 1 5 2 6 1 86 1 57 2 281 1 
196 3 1 2 79 1 90 3 134 1 212 1 5 1 6 1 86 2 193 1 57 1 281 1 365 1 
196 2 1 1 48 1 90 2 27 1 5 1 6 1 61 1 128 1 86 1 362 1 193 1 321 2 57 1 281 1 
5 2 6 1 1 2 196 4 86 2 193 1 90 4 57 2 134 1 365 1 281 1 296 1 20 1 
5 1 6 1 196 1 86 1 193 1 90 1 57 1 281 1 
334 1 1 2 196 4 9 1 90 4 134 1 69 1 5 1 6 2 120 1 86 3 193 2 57 1 365 1 
5 1 6 1 1 1 196 2 245 1 30 1 86 1 193 1 45 1 90 2 57 1 281 1 
196 3 9 2 89 1 90 3 69 1 5 1 6 1 120 2 86 1 193 1 57 1 281 1 
332 1 86 2 124 1 203 2 
5 1 196 1 56 1 90 1 57 1 281 1 
5 1 6 1 1 1 196 2 79 1 86 1 193 1 90 2 57 1 281 1 
329 1 
5 1 6 1 196 1 86 1 193 1 90 1 57 1 281 1 
1 1 196 3 79 1 90 3 5 1 6 1 120 1 86 1 193 1 57 1 281 1 
334 1 86 1 134 1 365 1 
6 1 86 1 

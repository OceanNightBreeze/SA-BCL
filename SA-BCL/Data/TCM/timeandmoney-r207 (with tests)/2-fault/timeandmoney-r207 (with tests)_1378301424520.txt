#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 6 77 1 202 2 333 1 26 1 176 1 339 1 340 1 153 2 362 1 310 1 212 5 101 2 363 2 62 3 42 1 233 1 192 1 235 1 347 1 370 2 321 2 109 9 86 1 219 1 326 2 22 4 327 9 
358 6 77 1 202 2 333 1 26 1 176 1 339 1 340 1 153 2 362 1 310 1 212 5 101 2 363 2 62 3 42 1 233 1 192 1 235 1 347 1 370 2 321 2 109 9 86 1 219 1 326 2 22 4 327 9 
358 7 77 1 202 2 333 1 26 1 176 1 339 1 340 1 153 2 362 1 310 1 212 6 101 2 363 2 62 4 42 1 233 1 192 1 235 1 347 1 370 2 321 2 109 10 86 1 219 1 326 2 22 5 327 10 
358 4 77 1 202 1 333 1 26 1 176 1 339 1 340 1 153 2 310 1 212 4 101 2 363 2 62 2 42 1 233 1 192 1 235 1 347 1 370 2 321 2 109 7 86 1 219 1 326 2 22 3 327 7 
62 1 358 3 42 1 233 1 192 1 202 2 347 1 321 1 370 1 109 4 153 1 362 1 219 1 212 3 326 1 101 1 22 2 327 4 
233 1 117 1 192 1 333 1 370 1 321 1 109 2 153 1 310 1 219 1 71 1 212 1 101 1 363 1 327 2 38 1 
62 1 358 1 233 1 192 1 235 1 370 2 109 3 219 1 212 2 101 2 22 1 363 1 327 3 
358 7 202 2 26 1 28 1 340 1 153 1 362 1 212 5 101 2 363 1 62 3 42 1 233 1 192 1 235 1 347 1 370 2 321 1 109 9 373 1 219 1 326 1 22 4 327 9 
358 7 202 2 26 1 28 1 340 1 153 1 362 1 212 5 101 2 363 1 62 3 42 1 233 1 192 1 235 1 347 1 370 2 321 1 109 9 373 1 219 1 326 1 22 4 327 9 
371 1 50 1 344 1 
160 2 50 1 134 1 
110 2 4 1 334 2 162 2 281 2 163 1 357 2 253 2 
75 1 172 2 91 1 54 1 243 1 93 1 92 1 201 1 4 1 5 2 334 3 338 1 224 1 59 2 266 1 289 1 311 1 37 1 12 1 343 1 294 1 253 2 17 2 299 1 162 2 43 2 163 1 217 1 323 1 110 2 166 1 375 1 281 2 23 1 357 3 282 1 115 1 
25 1 232 1 110 1 4 1 72 1 334 1 162 1 281 1 357 1 253 1 
102 1 0 1 25 1 264 1 334 1 300 1 208 1 371 1 181 1 99 1 238 1 50 1 281 1 357 1 
102 1 0 1 25 1 162 1 334 1 300 2 208 1 371 1 181 2 110 1 238 1 50 1 281 1 357 1 253 1 
171 1 181 1 191 1 49 1 300 1 
371 1 181 2 374 1 191 1 49 1 378 1 50 1 300 2 
181 1 49 1 300 1 
25 1 232 1 191 1 4 1 162 1 334 1 300 1 181 1 110 1 154 1 72 1 281 1 357 1 253 1 
50 1 
371 1 85 1 181 2 374 1 191 1 49 1 50 1 300 2 
130 1 222 1 191 2 236 1 174 2 320 1 300 5 207 1 265 1 371 1 152 1 66 1 181 5 374 1 60 2 49 2 50 1 195 2 328 1 
163 1 344 1 
331 1 78 1 334 2 162 1 163 2 110 1 281 2 357 2 253 1 
95 1 165 1 329 1 
75 1 91 1 17 1 201 1 6 1 5 1 299 1 334 1 163 1 217 1 59 1 323 1 343 1 294 1 357 1 282 1 
9 1 110 3 334 3 162 3 281 3 163 1 357 3 253 1 
25 1 110 1 72 1 334 1 162 1 281 1 357 1 
25 1 110 1 331 1 78 1 334 1 162 1 281 1 357 1 253 1 
75 1 172 2 91 1 0 1 25 1 54 1 93 1 92 1 201 1 78 1 4 1 5 1 334 4 338 1 224 1 208 1 150 1 59 1 9 1 181 1 311 1 37 1 343 1 294 1 253 2 102 1 254 1 17 1 299 1 162 3 43 1 300 1 163 1 217 1 323 1 110 3 238 1 166 1 281 3 23 1 239 1 282 1 357 4 115 1 
9 1 110 1 2 1 264 1 334 2 162 1 281 2 163 1 357 2 
254 1 102 1 25 1 0 1 78 1 162 3 334 3 300 1 208 1 150 1 9 2 181 1 110 3 352 1 238 1 50 1 281 3 357 3 253 1 
78 1 95 1 162 2 334 2 165 1 9 1 110 2 281 2 357 2 253 1 
75 1 91 1 17 1 201 1 5 1 299 1 334 1 163 1 217 1 59 1 323 1 343 1 294 1 357 1 282 1 
75 1 91 1 270 1 17 1 201 1 5 1 299 1 334 1 163 1 217 1 59 1 353 1 294 1 357 1 282 1 
172 2 93 1 92 1 94 1 95 2 118 1 338 1 224 1 209 1 123 1 311 1 37 1 12 2 341 1 342 1 297 1 132 1 257 1 43 4 165 2 23 2 196 1 240 1 329 2 
25 1 110 1 334 1 162 1 281 1 149 1 357 1 208 1 
254 1 75 1 91 1 17 1 201 1 95 1 299 1 5 1 162 1 334 2 217 1 59 1 9 1 323 1 110 1 343 1 281 1 294 1 282 1 357 2 
254 1 2 1 264 1 244 1 64 1 78 1 162 4 334 5 163 1 9 2 110 4 281 5 357 5 253 1 
25 1 110 2 72 1 334 2 162 2 149 1 281 2 357 2 
105 1 128 1 
105 1 128 1 
155 1 280 1 
155 1 280 1 
155 1 280 1 
105 1 308 1 128 1 
105 1 308 1 128 1 
324 1 105 1 128 1 
234 1 100 1 105 2 155 1 280 1 128 2 
105 1 308 1 128 1 
105 1 221 1 128 1 
105 1 221 1 128 1 
105 1 221 1 128 1 
234 1 3 2 105 2 300 2 29 1 8 3 301 1 181 2 193 1 377 2 11 1 262 2 50 1 314 2 40 1 145 1 189 1 128 2 305 2 
3 1 334 2 29 1 8 1 181 1 314 1 127 1 315 1 128 1 296 1 105 1 162 2 300 1 163 1 44 1 278 1 372 1 110 2 324 1 377 1 262 1 281 2 379 1 357 2 
153 1 326 1 321 1 
153 1 321 1 38 1 
272 1 84 1 326 2 88 1 321 3 38 1 
272 1 326 1 88 1 19 1 321 2 38 1 
272 2 326 1 88 1 321 2 38 1 
203 2 174 1 94 1 332 1 152 1 31 1 181 5 98 1 60 1 341 1 342 1 83 1 127 1 158 1 296 1 160 3 191 4 236 2 134 1 320 3 300 5 108 2 371 1 259 2 67 1 374 1 49 1 195 1 50 2 379 1 144 1 196 1 
171 5 52 1 203 6 174 2 94 3 332 2 152 1 181 9 98 1 60 2 341 3 342 3 13 1 230 1 130 1 160 9 191 7 236 6 134 3 320 8 300 9 371 1 259 6 67 3 374 1 112 1 73 1 49 6 50 5 195 2 379 4 144 2 196 3 197 5 89 1 
174 1 203 2 94 1 332 1 31 1 181 3 60 1 83 1 342 1 341 1 130 1 191 2 160 4 236 2 134 2 320 3 300 3 108 1 371 1 259 2 67 1 50 3 195 1 379 1 144 1 196 1 
203 4 174 1 94 2 332 1 31 1 181 4 60 1 83 1 342 2 341 2 230 1 130 1 160 7 191 3 236 4 134 3 320 5 300 4 108 2 371 1 259 4 67 2 112 1 73 1 50 4 195 1 379 2 144 1 196 2 
91 1 319 1 344 1 
91 1 245 1 
90 1 
91 1 217 1 
91 3 1 1 201 1 319 2 267 1 217 1 
91 1 201 1 217 1 
91 1 96 1 
55 1 94 1 350 1 135 1 43 9 179 1 118 3 209 2 82 1 226 1 35 2 290 1 36 1 12 5 341 1 126 1 23 4 
55 1 94 1 350 1 135 1 43 9 179 1 118 3 209 2 82 1 226 1 35 2 290 1 36 1 12 5 341 1 126 1 23 4 
55 1 94 1 350 1 135 1 43 9 179 1 118 3 209 2 82 1 226 1 35 2 290 1 36 1 325 1 12 5 341 1 126 1 23 4 
172 2 93 1 92 1 55 1 94 3 30 3 179 5 118 10 338 1 224 1 82 2 209 5 226 1 122 4 35 3 290 1 36 1 12 16 156 1 342 3 341 4 126 2 313 1 190 1 104 1 349 1 135 2 350 2 43 29 107 1 164 1 67 3 23 13 196 2 
172 4 92 2 93 2 103 1 55 1 94 1 350 1 135 1 43 11 164 1 179 2 118 5 224 2 338 2 82 1 209 3 35 2 290 1 36 1 141 1 12 6 341 1 126 1 23 5 
358 1 359 1 5 1 286 1 247 1 336 1 59 1 153 1 124 1 212 1 101 1 363 1 38 1 233 1 17 1 192 1 84 1 299 1 274 1 370 1 321 2 109 2 21 1 279 1 219 1 355 1 142 1 326 1 327 2 282 1 
358 2 359 1 5 1 247 1 336 1 120 1 59 1 227 1 153 1 124 1 212 1 228 1 101 1 363 1 38 1 233 1 17 1 192 1 84 1 299 1 274 1 370 1 321 2 109 3 279 1 355 1 142 1 326 1 327 3 282 1 
358 2 359 1 5 1 336 1 120 1 59 1 153 1 124 1 212 1 228 1 363 1 38 1 233 1 17 1 192 1 84 1 299 1 274 1 321 2 109 2 279 1 142 1 326 1 327 2 282 1 
75 1 359 2 91 1 246 1 5 1 97 1 59 1 227 1 124 2 211 1 101 1 363 2 17 1 299 1 273 1 274 2 370 1 109 1 217 1 304 1 356 1 327 1 282 1 
359 1 17 1 84 1 299 1 5 1 247 1 274 1 336 1 321 2 370 1 109 1 120 1 21 1 59 1 279 1 153 1 124 1 355 1 219 1 142 1 326 1 101 1 363 1 38 1 282 1 327 1 
330 1 
51 2 198 1 91 1 0 1 200 2 332 1 5 2 334 1 288 1 208 1 152 1 59 2 99 1 60 1 251 1 10 1 255 1 14 1 102 1 160 2 17 2 299 1 300 5 106 1 217 1 68 2 69 1 304 1 357 1 75 2 25 1 264 1 174 1 119 2 181 5 33 1 361 2 229 2 184 1 187 1 236 2 273 1 134 2 320 2 136 2 371 1 137 1 374 3 238 1 46 4 49 6 50 2 195 1 281 1 282 1 
102 1 25 1 0 1 200 1 264 1 334 1 300 3 106 1 208 1 85 1 181 3 99 1 374 1 238 1 251 1 69 1 46 2 10 1 49 2 184 1 281 1 357 1 
102 1 25 1 0 1 264 1 334 1 300 3 106 1 208 1 371 1 85 1 181 3 361 1 99 1 374 1 238 1 251 1 69 1 46 3 10 1 49 1 50 1 184 1 281 1 357 1 
102 1 25 1 0 1 200 1 264 1 334 1 300 3 106 1 208 1 371 1 85 1 181 3 361 1 99 1 374 1 238 1 68 1 251 1 69 1 46 3 10 1 49 2 50 1 184 1 281 1 357 1 
51 2 116 1 0 1 25 1 200 4 263 1 264 1 174 1 334 1 119 2 208 1 152 1 181 5 361 4 99 1 60 1 251 1 10 1 229 2 184 1 255 1 102 1 236 1 237 1 134 2 320 1 106 1 300 5 136 2 371 5 137 1 85 1 374 3 167 1 238 1 69 1 68 4 46 6 168 1 49 7 195 1 50 5 281 1 357 1 
51 2 0 1 25 1 200 2 264 1 174 1 334 1 288 1 119 2 208 1 152 1 181 4 361 2 99 1 251 1 60 1 10 1 229 2 184 1 255 1 102 1 160 2 236 1 134 2 320 1 106 1 300 4 136 2 371 1 137 1 374 2 238 1 68 2 69 1 46 4 49 4 50 2 195 1 281 1 357 1 
51 2 116 1 0 1 25 1 200 2 264 1 174 1 334 1 119 2 208 1 152 1 181 4 361 2 99 1 60 1 251 1 10 1 229 2 184 1 255 1 102 1 236 1 237 1 134 2 320 1 106 1 300 4 136 2 371 1 137 1 374 2 238 1 167 1 68 2 69 1 46 4 49 4 50 1 195 1 281 1 357 1 
51 2 116 1 0 1 25 1 200 2 264 1 174 1 334 1 119 2 208 1 152 1 181 4 361 2 99 1 60 1 251 1 10 1 229 2 184 1 255 1 102 1 236 1 237 1 134 2 320 1 106 1 300 4 136 2 371 1 137 1 374 2 238 1 167 1 68 2 69 1 46 4 49 4 50 1 195 1 281 1 357 1 
116 1 0 1 25 1 53 2 200 2 146 1 264 1 174 1 334 1 208 1 152 1 181 4 361 2 99 1 60 1 251 1 10 1 229 2 184 1 255 1 102 1 318 1 160 2 236 1 320 1 106 1 300 4 258 1 136 2 371 1 374 2 376 2 238 1 68 2 69 1 46 4 49 4 50 1 195 1 281 1 357 1 
51 2 116 1 0 1 25 1 200 3 264 1 263 1 174 1 334 1 119 2 208 1 152 1 181 4 99 1 361 3 60 1 251 1 10 1 229 2 184 1 255 1 102 1 236 1 237 1 134 2 320 1 106 1 300 4 136 2 371 1 137 1 374 2 238 1 167 1 69 1 68 3 46 5 49 5 50 1 195 1 281 1 357 1 
51 2 116 1 0 1 25 1 200 3 264 1 263 1 174 1 334 1 119 2 208 1 152 1 181 4 99 1 361 3 60 1 251 1 10 1 229 2 184 1 255 1 102 1 236 1 237 1 134 2 320 1 106 1 300 4 136 2 371 1 137 1 374 2 238 1 167 1 69 1 68 3 46 5 49 5 50 1 195 1 281 1 357 1 
0 1 25 1 53 2 200 2 264 1 146 1 174 1 334 1 288 1 208 1 152 1 181 4 361 2 99 1 251 1 60 1 10 1 229 2 184 1 255 1 102 1 160 2 236 1 320 1 106 1 300 4 136 2 371 1 374 2 376 2 238 1 68 2 69 1 46 4 49 4 50 1 195 1 281 1 357 1 
172 2 93 1 92 1 55 1 95 1 94 1 118 3 179 1 338 1 224 1 82 1 209 2 35 1 290 1 311 1 37 1 36 1 12 4 341 1 126 1 344 1 257 1 43 8 163 3 165 1 23 4 329 1 
172 4 54 1 93 2 92 2 95 11 94 1 285 1 206 1 287 1 30 3 179 1 118 2 338 2 224 2 209 1 249 1 266 1 122 3 311 2 37 1 12 8 342 2 341 2 313 1 190 1 43 14 163 1 165 4 67 2 23 6 380 1 196 1 329 11 
75 1 91 1 172 2 54 1 92 1 93 1 201 1 5 1 6 1 334 2 177 1 224 1 338 1 59 1 249 1 9 1 266 1 309 1 311 1 37 1 12 1 343 1 294 1 254 1 17 1 161 1 299 1 162 1 43 2 163 1 217 1 165 1 323 1 110 1 281 1 23 1 282 1 357 2 
91 2 54 1 93 3 92 3 201 2 55 1 94 3 5 3 95 7 334 3 338 3 209 6 59 3 249 1 9 1 290 1 12 11 342 2 341 3 343 2 294 2 254 1 17 3 346 2 348 1 299 2 162 1 163 3 217 2 165 7 302 2 110 1 67 2 23 11 357 3 115 2 75 1 172 6 27 2 179 5 118 11 224 3 120 1 82 1 266 1 35 1 36 1 37 3 311 3 312 1 125 2 126 1 43 22 138 1 323 2 281 1 282 2 196 2 329 7 
76 1 75 2 91 3 172 4 54 1 93 2 92 2 147 1 5 8 286 1 334 1 338 2 224 2 120 1 59 8 9 1 266 1 289 2 311 2 37 2 12 1 292 1 268 1 157 1 295 1 131 1 17 7 299 2 257 1 273 1 162 1 43 2 217 2 110 1 304 1 281 1 23 1 357 1 282 2 
172 2 93 1 92 1 78 1 95 1 94 1 334 1 118 1 338 1 224 1 209 1 249 1 151 1 311 1 37 1 12 1 342 1 341 1 253 1 162 1 43 3 165 1 110 1 67 1 281 1 23 2 357 1 196 1 329 1 
172 2 92 1 93 1 95 1 257 1 43 2 118 1 179 1 165 1 224 1 338 1 123 1 37 1 311 1 12 2 342 1 341 1 329 1 
172 2 92 1 93 1 297 1 95 1 94 1 257 1 43 2 118 1 165 1 224 1 338 1 209 1 37 1 311 1 23 2 196 1 329 1 
172 2 93 1 92 1 95 2 94 1 118 1 338 1 224 1 209 1 311 1 37 1 12 2 341 1 342 1 257 1 43 4 165 2 67 1 23 2 196 1 329 2 
172 2 92 1 93 1 95 1 43 2 118 1 179 1 165 1 224 1 338 1 123 1 37 1 311 1 12 2 342 1 341 1 292 1 329 1 
172 2 92 1 93 1 297 1 95 1 94 1 43 2 118 1 165 1 224 1 338 1 209 1 37 1 311 1 292 1 23 2 196 1 329 1 
172 2 93 1 92 1 95 2 94 1 179 1 118 2 338 1 224 1 209 1 311 1 37 1 12 2 341 1 342 1 292 1 43 4 165 2 67 1 23 2 196 1 329 2 
172 2 93 1 92 1 95 2 94 1 118 1 338 1 224 1 209 1 311 1 37 1 12 2 341 1 342 1 43 4 165 2 67 1 23 2 196 1 329 2 
75 1 91 1 172 2 54 1 92 1 93 1 201 1 5 1 334 1 224 1 338 1 59 1 266 1 37 1 311 1 12 1 343 1 294 1 17 1 299 1 43 2 163 1 217 1 323 1 23 1 282 1 357 1 115 1 
75 1 91 1 172 2 54 1 92 1 93 1 201 1 5 1 334 1 224 1 338 1 59 1 266 1 37 1 311 1 12 1 294 1 270 1 17 1 299 1 18 1 43 2 163 1 217 1 353 1 23 1 282 1 357 1 
172 2 93 1 92 1 95 2 94 1 118 1 338 1 224 1 249 1 209 1 311 1 37 1 12 2 341 1 342 1 43 4 165 2 67 1 23 2 196 1 329 2 
91 1 172 2 92 1 93 1 201 1 94 1 95 2 5 1 286 1 334 1 118 1 224 1 338 1 209 1 59 1 37 1 311 1 12 2 125 1 341 1 342 1 343 1 294 1 17 1 299 1 43 4 165 2 217 1 323 1 67 1 23 2 196 1 282 1 357 1 329 2 115 1 
172 2 93 1 92 1 78 1 94 1 95 1 334 1 118 1 179 1 338 1 224 1 249 1 311 1 37 1 12 2 342 1 341 1 253 1 41 1 162 1 43 3 165 1 110 1 67 1 281 1 23 1 196 1 357 1 329 1 
241 1 92 4 93 4 55 1 94 3 204 2 338 4 56 1 209 3 58 1 290 1 12 21 341 5 342 4 159 1 103 1 164 2 65 1 67 4 303 1 218 1 114 1 23 17 24 4 306 1 172 8 79 1 30 3 118 8 179 5 224 4 82 1 122 4 35 1 36 1 313 3 126 1 316 1 271 1 190 1 43 38 45 1 196 2 
172 4 93 2 92 2 94 1 204 1 30 1 179 2 118 3 338 2 224 2 56 1 209 1 58 1 122 2 12 7 342 2 341 2 313 1 271 1 103 1 190 1 43 13 65 1 67 2 45 1 218 1 23 6 196 1 24 2 
241 1 306 1 172 6 93 3 92 3 55 1 94 4 79 1 204 1 30 2 179 4 118 8 338 3 224 3 56 1 58 1 82 1 209 4 122 3 35 1 290 1 36 1 12 19 342 4 341 5 126 1 313 2 316 1 159 1 271 1 103 1 190 1 43 36 164 2 303 1 67 4 45 1 218 1 23 17 24 3 196 3 
172 4 93 2 92 2 94 1 204 1 30 1 179 1 118 2 338 2 224 2 56 1 209 1 122 2 12 6 342 2 341 2 313 1 367 1 271 1 103 1 190 1 43 11 65 1 67 2 45 1 218 1 23 5 196 1 24 1 
241 1 306 1 172 6 93 3 92 3 94 2 79 1 204 2 30 2 179 2 118 4 338 3 224 3 56 2 58 1 209 2 122 2 12 14 342 3 341 3 313 2 316 1 159 1 271 1 103 1 43 26 164 2 303 1 67 3 45 1 218 1 23 12 24 4 196 2 
234 1 3 1 48 1 377 1 11 1 105 1 262 1 314 1 40 1 128 1 
324 1 44 1 
15 1 3 1 148 1 377 1 194 1 105 1 262 1 314 1 128 1 
234 1 3 1 105 1 29 1 300 1 8 2 301 1 181 1 377 1 11 1 262 1 50 1 314 1 40 1 145 1 189 1 128 1 305 1 
234 1 3 1 105 1 29 1 300 1 8 2 301 1 181 1 377 1 11 1 262 1 50 1 314 1 40 1 145 1 189 1 128 1 305 1 
234 1 3 1 105 1 29 1 300 1 8 2 301 1 181 1 377 1 11 1 262 1 50 1 314 1 40 1 145 1 189 1 128 1 305 1 
100 1 80 1 308 1 
100 1 80 1 308 1 
199 1 221 1 
199 1 100 1 221 1 
372 1 278 1 
3 1 334 2 8 1 181 1 314 1 127 1 315 1 128 1 296 1 191 1 105 1 162 2 300 1 163 1 301 1 44 1 278 1 372 1 110 2 324 1 377 1 262 1 379 1 281 2 357 2 305 1 283 1 
80 1 308 1 
199 1 100 1 221 1 
242 1 91 1 172 2 54 1 307 1 92 1 93 1 147 1 5 2 175 1 334 2 224 1 338 1 59 2 249 1 266 1 289 2 311 1 37 1 12 1 295 1 17 2 299 1 43 2 351 1 275 1 217 1 281 2 23 1 282 1 357 2 
359 1 17 2 84 1 299 1 5 2 286 1 247 1 360 1 216 1 336 1 321 2 120 1 59 2 153 1 142 1 326 1 215 1 38 1 282 1 
359 1 17 1 84 1 5 1 299 1 247 1 360 1 336 1 321 2 120 1 59 1 153 1 142 1 326 1 38 1 170 1 282 1 
75 1 91 1 359 1 17 1 299 1 5 1 273 1 216 1 217 1 59 1 111 1 304 1 211 1 282 1 
359 1 17 1 84 1 299 1 5 1 247 1 360 1 216 1 336 1 321 2 120 1 59 1 153 1 142 1 326 1 215 1 38 1 282 1 
223 1 
371 1 66 1 222 1 236 1 320 1 50 1 344 1 
51 1 160 1 174 1 236 1 320 1 134 1 300 1 119 1 371 1 152 1 137 1 181 1 374 1 60 1 49 1 50 2 195 1 
198 1 91 10 1 1 245 3 201 3 203 6 332 2 5 3 96 2 94 2 286 1 205 2 248 1 152 4 59 3 60 4 342 2 341 2 345 1 160 12 17 3 256 1 346 2 299 4 300 5 217 3 259 6 66 1 67 2 354 2 169 2 75 1 222 1 174 4 81 2 180 2 181 5 186 2 317 2 129 1 319 2 236 8 320 9 134 6 371 2 374 3 238 2 87 2 47 1 49 5 195 4 50 8 282 3 196 2 
198 1 241 1 306 1 203 5 174 2 332 1 94 2 30 1 81 1 152 2 181 1 122 1 60 2 342 2 341 2 313 1 316 1 188 1 159 1 160 6 236 5 320 8 134 3 300 1 371 2 322 1 259 5 374 1 303 1 67 2 49 1 169 2 195 2 50 5 196 2 
25 1 174 1 4 1 94 1 334 1 81 1 82 1 152 1 181 1 60 1 36 1 154 1 341 2 126 1 253 1 232 1 236 2 237 1 320 2 162 1 300 1 277 1 110 1 72 1 169 2 195 1 281 1 357 1 
371 1 152 1 66 1 222 1 60 1 236 1 174 1 320 1 50 1 195 1 
160 10 346 1 236 5 203 5 94 2 134 5 320 5 81 1 259 5 67 2 342 2 341 2 169 2 50 5 196 2 
371 1 181 1 374 1 49 1 50 1 300 1 
75 2 198 2 91 1 174 2 5 4 332 2 152 1 59 4 181 3 60 2 187 1 365 1 129 2 14 1 130 1 345 1 17 4 236 2 299 1 273 1 320 2 300 3 217 1 374 2 139 1 304 1 49 4 195 2 282 1 
75 1 172 2 91 1 54 1 93 1 92 1 201 1 4 1 5 1 334 3 338 1 224 1 59 1 37 1 311 1 343 1 294 1 253 2 17 1 299 1 162 2 43 1 163 1 217 1 323 1 110 2 166 1 281 2 23 1 357 3 282 1 115 1 
198 1 160 4 203 2 236 2 174 1 332 1 134 2 320 1 152 1 371 2 259 2 35 1 60 1 195 1 50 4 
3 1 293 1 314 1 
3 1 293 1 314 1 
372 1 3 1 314 1 364 1 40 1 
3 1 293 1 314 1 
16 1 3 1 314 1 
16 1 3 1 314 1 
16 1 3 1 314 1 
3 1 314 1 
105 1 128 1 
172 2 93 1 92 1 55 1 94 1 30 1 118 3 179 1 338 1 224 1 82 1 209 2 122 1 35 1 290 1 36 1 12 5 341 1 313 1 126 1 159 1 103 1 43 10 23 5 
172 4 93 2 92 2 55 1 94 1 284 1 30 1 179 2 118 4 338 2 224 2 209 2 82 1 122 2 35 1 290 1 36 1 12 7 342 1 341 2 126 1 313 1 159 1 103 1 190 1 43 13 67 1 23 6 
241 1 306 1 172 8 93 4 92 4 284 1 94 1 30 1 179 2 118 3 338 4 224 4 209 1 122 1 12 7 342 2 341 2 313 1 316 1 159 1 103 1 43 12 164 2 303 1 67 2 23 5 196 1 
241 1 306 1 172 8 93 4 92 4 284 1 94 1 30 1 179 1 118 3 338 4 224 4 209 2 122 1 12 7 342 2 341 2 313 1 316 1 159 1 103 1 43 12 164 2 303 1 67 2 23 5 196 1 
172 2 93 1 92 1 55 1 94 1 30 1 118 3 179 1 338 1 224 1 82 1 209 2 122 1 35 1 290 1 36 1 12 5 341 1 313 1 126 1 159 1 103 1 43 10 23 5 
241 1 306 1 172 6 93 3 92 3 94 1 30 1 179 2 118 4 338 3 224 3 209 2 122 1 12 7 342 2 341 2 313 1 316 1 159 1 103 1 43 12 164 2 303 1 67 2 23 5 196 1 
241 1 306 1 172 8 93 4 92 4 55 1 284 1 94 2 30 1 179 2 118 5 338 4 224 4 82 1 209 3 122 1 35 1 290 1 36 1 12 11 342 2 341 3 126 1 313 1 316 1 159 1 103 1 43 20 164 2 303 1 67 2 23 9 196 1 
241 1 306 1 172 4 93 2 92 2 94 1 30 1 179 2 118 4 338 2 224 2 209 2 122 1 12 7 342 2 341 2 313 1 316 1 159 1 103 1 43 12 65 1 303 1 67 2 23 5 196 1 
55 1 43 4 118 4 179 2 82 2 209 2 290 2 12 2 126 2 23 2 
241 1 306 1 172 8 93 4 92 4 55 1 94 2 30 1 179 2 118 5 338 4 224 4 82 1 209 3 122 1 35 1 290 1 36 1 12 11 342 2 341 3 126 1 313 1 316 1 159 1 103 1 43 20 164 2 65 1 303 1 67 2 23 9 196 1 
172 4 92 2 93 2 55 1 94 1 43 8 179 1 118 3 164 1 224 2 338 2 209 2 82 1 35 1 290 1 36 1 12 4 341 1 126 1 23 4 
55 1 94 1 43 8 118 3 179 1 82 1 209 2 35 1 290 1 36 1 12 4 341 1 126 1 23 4 344 1 
172 2 92 1 93 1 94 1 284 1 43 4 118 2 179 1 224 1 338 1 209 1 67 1 12 2 342 1 341 1 23 2 196 1 
190 1 94 1 43 7 30 1 179 1 118 2 209 1 122 2 67 1 12 3 342 1 341 1 313 1 23 4 196 1 
172 4 92 2 93 2 55 1 94 3 285 1 30 2 118 9 179 4 224 2 338 2 82 2 209 5 122 2 35 1 290 1 36 1 12 11 341 3 342 2 213 1 126 2 190 1 43 23 164 2 67 2 23 12 380 1 196 2 
122 1 43 1 23 1 
12 1 43 1 30 1 
172 2 93 1 92 1 346 1 284 1 94 1 43 6 179 2 118 4 338 1 224 1 209 2 67 1 12 3 342 1 341 1 23 3 196 1 
306 1 241 1 172 2 93 1 92 1 94 1 30 1 179 2 118 4 338 1 224 1 209 2 122 1 12 7 342 2 341 2 313 1 316 1 159 1 103 1 43 12 303 1 67 2 23 5 196 1 
94 1 43 6 118 2 179 1 82 1 209 1 36 1 12 3 341 1 126 1 23 3 
172 2 92 1 93 1 55 1 43 3 179 1 118 2 164 1 224 1 338 1 209 1 82 1 290 1 12 1 213 1 126 1 23 2 
94 2 43 10 118 4 179 2 277 1 82 1 209 2 36 1 12 5 341 2 126 1 23 5 
172 2 92 1 93 1 103 1 43 2 179 1 118 1 224 1 338 1 12 2 342 1 341 1 
172 2 92 1 93 1 103 1 94 1 43 4 118 1 224 1 338 1 209 1 67 1 12 2 342 1 341 1 23 2 196 1 
172 2 92 1 93 1 103 1 43 2 118 2 179 1 224 1 338 1 82 1 209 1 12 1 126 1 23 1 
172 10 93 5 92 5 55 1 284 1 94 4 30 3 179 6 118 12 338 5 224 5 82 3 209 6 122 4 35 1 290 1 36 2 12 17 213 1 342 3 341 5 126 3 313 1 103 1 190 1 104 1 349 1 107 1 43 34 164 2 65 1 67 3 23 17 196 2 
32 1 2 1 264 1 334 1 281 1 163 1 357 1 
2 1 264 1 334 1 163 1 210 1 32 1 252 1 61 1 281 1 143 1 381 1 357 1 
59 1 75 1 91 1 17 1 304 1 299 1 5 1 273 1 282 1 217 1 344 1 
75 1 91 1 17 1 201 1 299 1 5 1 162 1 334 2 163 1 217 1 59 1 9 1 110 1 281 1 343 1 294 1 357 2 282 1 
91 3 0 1 25 1 201 2 5 1 96 1 334 2 208 1 59 1 9 1 180 1 343 1 294 1 129 1 17 1 299 1 162 1 163 1 217 2 110 2 281 2 282 1 357 2 
91 3 0 1 25 1 201 2 5 2 96 1 334 2 208 1 59 2 9 1 180 1 294 1 129 1 17 2 299 1 162 1 163 1 20 1 217 2 110 2 353 1 281 2 282 1 357 2 
75 1 91 4 245 1 201 1 5 3 96 1 59 3 180 1 181 2 185 1 129 1 369 1 17 3 319 1 299 1 300 2 20 1 217 1 371 1 238 1 49 1 50 1 282 1 
75 1 129 1 91 4 17 3 201 1 245 1 319 1 96 1 299 1 5 3 205 1 300 2 20 1 217 1 371 1 59 3 180 1 181 2 238 1 49 1 50 1 282 1 
59 1 76 1 17 1 299 1 5 1 282 1 
76 1 75 2 1 1 91 3 131 1 17 6 201 1 133 1 5 7 299 3 286 1 217 2 120 1 59 7 289 1 34 1 268 1 157 1 282 2 295 1 269 1 
91 1 93 2 92 2 201 1 55 1 95 1 5 1 94 1 286 1 334 2 338 2 59 1 249 1 209 2 9 1 290 1 12 4 341 1 343 1 294 1 17 1 299 1 162 1 351 1 163 3 165 1 217 1 302 1 110 1 23 4 357 2 115 1 172 4 118 3 179 1 224 2 82 1 35 1 37 2 311 2 36 1 125 1 126 1 43 8 323 1 281 1 282 1 329 1 
75 1 91 2 222 1 245 1 174 2 5 1 205 1 152 2 59 1 181 3 60 2 186 1 317 1 345 1 191 1 17 1 236 1 319 1 320 1 300 3 371 1 66 1 374 1 238 1 87 1 49 2 50 1 195 2 
76 1 1 1 91 2 17 2 201 1 319 1 5 2 299 2 286 1 217 1 59 2 47 1 282 1 
75 1 91 1 17 4 299 1 5 4 286 1 273 1 178 1 20 1 217 1 59 4 304 1 282 1 
129 1 91 1 17 2 201 1 133 1 348 1 5 2 299 2 217 1 59 2 34 1 182 1 140 1 282 1 
59 1 75 1 153 1 17 1 299 1 5 1 142 1 321 1 38 1 282 1 
91 1 17 2 5 2 299 1 286 1 275 1 217 1 120 1 59 2 282 1 295 1 
129 1 75 1 91 3 131 1 17 4 5 5 299 2 273 1 286 1 178 1 217 2 59 5 304 1 282 2 268 1 295 1 
129 1 75 1 91 3 17 4 5 5 299 2 273 1 286 1 178 1 217 2 59 5 304 1 70 1 282 2 268 1 295 1 
75 1 91 1 17 1 201 1 299 1 5 1 162 1 334 2 163 1 217 1 59 1 9 1 110 1 353 1 281 1 294 1 357 2 282 1 
129 1 1 1 91 1 17 1 201 1 133 1 5 1 299 2 217 1 59 1 34 1 282 1 269 1 
242 1 307 1 175 1 291 1 298 1 334 1 281 1 220 1 357 1 
121 1 291 1 183 1 
298 1 291 1 113 1 163 1 220 1 
102 1 25 1 0 1 191 1 7 1 298 2 300 2 163 1 208 1 371 1 121 1 150 1 181 2 238 1 291 1 50 1 183 1 113 2 220 2 
233 1 192 1 212 1 344 1 
233 1 192 1 212 1 101 1 327 1 370 1 109 1 
124 1 363 1 109 1 
63 1 368 1 233 1 192 1 333 2 370 1 109 3 276 1 219 1 212 1 101 1 327 3 
358 1 233 1 192 1 202 1 212 1 101 1 327 2 370 1 109 2 
153 1 347 1 219 1 212 1 326 1 22 1 101 1 321 1 327 1 370 1 109 1 
192 1 219 1 212 1 101 1 327 1 370 1 109 1 
233 1 192 2 219 1 101 1 327 1 370 1 109 1 
192 1 337 1 370 2 109 2 219 1 212 1 214 1 101 2 327 2 39 1 
62 1 358 2 340 1 233 1 192 1 219 1 212 2 26 1 22 1 101 1 327 3 370 1 109 3 
358 1 233 1 192 1 84 1 321 2 370 1 109 2 153 1 219 1 212 1 326 1 101 1 38 1 327 2 74 1 
358 2 62 1 233 1 192 1 202 1 370 2 109 4 362 1 219 1 212 2 101 2 22 1 327 4 
233 1 192 1 219 1 212 1 101 1 327 1 370 1 109 1 
358 2 62 1 368 1 233 2 192 2 333 1 370 1 109 4 276 1 250 1 212 3 101 1 22 1 327 4 
358 1 173 1 233 1 192 1 370 1 109 2 373 1 261 1 219 1 212 1 101 1 327 2 
368 2 233 1 192 1 333 2 370 1 109 3 276 1 260 1 219 1 212 1 101 1 327 3 
212 2 335 2 231 1 225 1 
219 1 101 1 327 1 370 1 109 1 57 1 
358 1 340 1 233 1 192 1 219 1 212 1 101 1 327 2 370 1 109 2 
366 1 
233 1 192 1 219 1 212 1 101 1 327 1 370 1 109 1 
358 1 340 1 233 1 192 1 219 1 212 1 333 1 101 1 327 3 370 1 109 3 
62 1 250 1 212 1 22 1 
192 1 212 1 

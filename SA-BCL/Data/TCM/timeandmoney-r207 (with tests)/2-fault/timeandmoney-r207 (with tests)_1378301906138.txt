#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 47 192 286 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
219 1 320 2 27 9 4 1 29 1 352 1 71 5 182 1 324 6 256 4 8 2 18 2 120 1 163 1 260 9 19 1 148 1 58 2 236 3 210 2 238 1 44 1 343 1 244 1 109 1 277 2 317 2 133 1 
219 1 320 2 27 9 4 1 29 1 352 1 71 5 182 1 324 6 256 4 8 2 18 2 120 1 163 1 260 9 19 1 148 1 58 2 236 3 210 2 238 1 44 1 343 1 244 1 109 1 277 2 317 2 133 1 
219 1 320 2 27 10 4 1 29 1 352 1 71 6 182 1 324 7 256 5 8 2 18 2 120 1 163 1 260 10 19 1 148 1 58 2 236 4 210 2 238 1 44 1 343 1 244 1 109 1 277 2 317 2 133 1 
219 1 320 2 27 7 4 1 29 1 352 1 71 4 182 1 324 4 256 3 8 2 18 1 120 1 163 1 260 7 19 1 148 1 58 2 236 2 210 2 238 1 343 1 244 1 109 1 277 2 317 2 133 1 
260 4 19 1 320 1 236 1 58 1 27 4 148 1 210 1 238 1 71 3 182 1 324 3 256 2 44 1 109 1 317 1 277 1 18 2 
260 2 320 1 27 2 58 1 210 1 238 1 71 1 352 1 182 1 8 1 343 1 9 1 287 1 274 1 109 1 317 1 
219 1 260 3 320 2 27 3 236 1 210 2 238 1 71 2 182 1 324 1 256 1 8 1 109 1 
219 1 19 1 260 9 279 1 234 1 320 2 58 1 148 1 4 1 27 9 236 3 210 2 238 1 71 5 182 1 324 7 256 4 44 1 8 1 109 1 317 1 277 1 133 1 18 2 
219 1 19 1 260 9 279 1 234 1 320 2 58 1 148 1 4 1 27 9 236 3 210 2 238 1 71 5 182 1 324 7 256 4 44 1 8 1 109 1 317 1 277 1 133 1 18 2 
357 1 33 1 315 1 
357 1 345 1 311 2 
331 2 242 1 34 2 176 2 37 1 269 2 119 2 200 2 
220 1 350 2 176 2 68 1 323 1 139 1 223 1 224 1 285 1 34 3 360 1 362 1 94 1 37 1 10 1 12 2 363 1 142 1 119 2 331 3 207 1 208 1 309 1 22 1 337 1 41 1 338 2 82 1 241 1 242 1 374 1 130 2 269 2 344 1 65 2 197 1 200 2 
331 1 242 1 34 1 176 1 269 1 138 1 202 1 265 1 119 1 200 1 
331 1 99 1 176 1 167 1 265 1 357 1 33 1 34 1 54 1 11 1 205 1 62 1 258 1 195 1 
331 1 99 1 176 1 167 1 265 1 357 1 33 1 34 1 269 1 54 1 11 2 205 1 62 2 200 1 119 1 
257 1 11 1 253 1 62 1 14 1 
357 1 33 1 257 1 11 2 62 2 222 1 229 1 14 1 
257 1 11 1 62 1 
331 1 176 1 138 1 202 1 265 1 242 1 34 1 269 1 11 1 62 1 14 1 217 1 200 1 119 1 
357 1 
357 1 33 1 257 1 299 1 11 2 62 2 222 1 14 1 
147 2 334 2 78 1 367 1 221 1 122 2 295 1 181 1 222 1 31 1 355 1 357 1 33 1 373 1 257 2 11 5 62 5 14 2 97 1 
37 1 315 1 
331 2 73 1 34 2 176 2 37 2 269 1 190 1 119 1 200 1 
213 1 376 1 15 1 
331 1 350 1 139 1 337 1 223 1 225 1 224 1 285 1 34 1 130 1 360 1 374 1 37 1 344 1 12 1 363 1 
77 1 331 5 21 1 176 5 190 1 254 1 34 5 194 2 269 4 37 1 195 1 186 1 119 4 200 1 
331 2 34 2 52 1 176 2 269 2 202 1 265 1 119 2 
331 2 350 1 176 1 254 1 337 1 139 1 223 1 285 1 224 1 213 1 34 2 374 1 360 1 194 1 130 1 269 1 344 1 12 1 363 1 119 1 
331 3 34 3 194 1 176 3 37 1 269 3 200 1 119 3 
331 1 34 1 176 1 269 1 202 1 265 1 119 1 
73 1 331 1 34 1 176 1 269 1 190 1 265 1 119 1 200 1 
220 1 350 1 176 3 68 1 92 1 254 1 139 1 223 1 285 1 224 1 34 4 360 1 362 1 37 1 54 1 11 1 205 1 12 1 363 1 142 1 119 3 331 4 99 1 208 1 309 1 190 1 337 1 41 1 338 2 167 1 265 1 339 1 82 1 241 1 242 1 374 1 194 1 130 1 269 3 344 1 62 1 65 1 197 1 200 2 
77 1 331 2 34 2 194 1 176 2 37 1 269 1 195 1 119 1 
99 1 331 3 176 3 190 1 254 1 167 1 265 1 339 1 357 1 341 1 34 3 194 2 269 3 54 1 11 1 62 1 205 1 200 1 119 3 
331 2 176 2 190 1 34 2 213 1 194 1 269 2 376 1 200 1 119 2 
331 1 350 1 139 1 337 1 223 1 224 1 285 1 34 1 130 1 360 1 374 1 37 1 344 1 12 1 363 1 
331 1 350 1 177 1 337 1 223 1 285 1 34 1 150 1 130 1 360 1 374 1 37 1 344 1 12 1 363 1 
250 1 110 1 68 1 361 1 161 1 362 2 10 2 74 1 15 2 208 1 264 1 309 1 335 1 41 1 338 2 82 1 241 1 128 1 213 2 271 1 376 2 65 4 198 1 218 1 
331 1 34 1 176 1 52 1 269 1 167 1 265 1 119 1 
85 1 59 1 
85 1 59 1 
188 1 166 1 
188 1 166 1 
188 1 166 1 
85 1 252 1 59 1 
85 1 59 1 169 1 
85 2 188 1 59 2 166 1 24 1 84 1 
85 1 252 1 59 1 
85 1 252 1 59 1 
85 1 59 1 189 1 
85 1 59 1 189 1 
85 1 59 1 189 1 
153 1 67 1 349 1 176 2 284 1 34 2 37 1 11 1 17 1 119 2 331 2 233 1 40 1 59 1 127 1 193 1 169 1 85 1 342 1 269 2 62 1 275 1 63 1 196 1 
263 1 178 1 111 1 59 2 40 3 191 1 24 1 284 2 193 1 86 1 357 1 85 2 342 2 36 1 11 2 62 2 275 2 17 2 231 2 
58 1 317 1 277 1 
58 1 274 1 317 1 
305 1 121 1 58 3 274 1 56 1 277 2 
305 1 121 1 58 2 274 1 277 1 316 1 
305 1 121 2 58 2 274 1 277 1 
175 2 349 1 250 1 110 1 221 1 222 1 181 3 204 1 357 2 257 1 33 1 11 5 288 2 74 1 14 4 329 1 97 2 233 1 147 1 334 1 122 1 297 1 311 3 81 1 313 2 270 1 345 1 62 5 246 1 63 1 64 1 218 1 
175 6 250 3 110 3 221 1 253 5 155 5 222 1 181 8 204 2 357 5 158 1 257 6 33 1 11 9 74 3 14 7 96 1 329 3 97 6 232 1 262 1 233 4 147 2 334 2 122 2 311 9 126 1 81 1 313 6 373 1 270 2 345 3 62 9 90 1 218 3 
175 2 250 1 110 1 181 3 204 1 357 3 33 1 11 3 288 1 74 1 14 2 329 1 97 2 233 1 147 1 334 1 122 1 311 4 313 2 373 1 270 1 345 2 62 3 246 1 64 1 218 1 
175 4 250 2 110 2 181 5 204 1 357 4 33 1 11 4 288 2 74 2 14 3 329 2 97 4 232 1 262 1 233 2 147 1 334 1 122 1 311 7 313 4 373 1 270 1 345 3 62 4 90 1 246 1 64 1 218 2 
151 1 363 1 315 1 
363 1 143 1 
101 1 
374 1 363 1 223 1 
333 1 363 1 
374 1 363 1 
0 1 151 2 91 1 374 1 363 3 223 1 
261 1 110 1 124 1 129 2 7 1 212 1 161 2 362 3 10 4 216 1 89 1 185 1 375 1 276 1 65 7 198 3 218 1 
261 1 110 1 124 1 129 2 7 1 212 1 161 2 362 3 10 4 216 1 89 1 185 1 375 1 276 1 65 7 198 3 218 1 
261 1 110 1 124 1 125 1 212 1 129 2 7 1 161 2 362 3 10 4 216 1 89 1 185 1 375 1 276 1 65 7 198 3 218 1 
359 1 161 1 362 3 10 3 185 2 146 1 261 1 293 1 208 1 309 1 124 1 338 2 168 1 82 1 192 1 241 1 129 1 45 1 89 1 375 1 276 1 47 1 65 6 198 2 
110 1 180 1 304 1 7 1 161 3 359 1 362 4 10 5 185 1 261 1 208 2 309 2 124 1 338 4 82 2 241 2 129 2 212 1 216 1 89 1 276 1 65 9 198 4 218 1 
350 1 320 1 280 1 154 1 27 2 71 1 324 1 182 1 285 1 8 1 358 1 325 1 117 1 12 1 56 1 330 1 260 2 58 2 210 1 337 1 238 1 340 1 130 1 274 1 109 1 317 1 277 1 174 1 378 1 46 1 
350 1 320 1 280 1 154 1 27 3 71 1 324 2 183 1 285 1 8 1 325 1 117 1 12 1 56 1 76 1 260 3 58 2 210 1 337 1 238 1 340 1 130 1 274 1 109 1 347 1 317 1 277 1 174 1 378 1 46 1 
350 1 154 1 27 2 71 1 324 2 285 1 8 1 325 1 117 1 12 1 56 1 76 1 260 2 58 2 337 1 238 1 340 1 130 1 274 1 109 1 347 1 277 1 317 1 174 1 46 1 
278 1 260 1 332 1 350 1 320 1 123 1 27 1 154 2 210 1 337 1 239 1 30 1 183 1 285 1 374 1 8 2 130 1 344 1 346 1 117 2 12 1 363 1 174 2 
350 1 320 1 280 1 154 1 27 1 182 1 285 1 8 1 358 1 325 1 117 1 12 1 56 1 260 1 58 2 210 1 337 1 340 1 130 1 274 1 347 1 317 1 277 1 174 1 378 1 46 1 
137 1 
278 1 176 1 2 2 221 1 222 3 181 2 285 1 51 1 54 1 326 1 11 5 228 2 141 1 12 2 97 2 331 1 99 1 332 1 147 1 334 1 235 2 237 1 337 1 25 4 344 2 345 2 62 5 195 1 302 1 350 2 353 2 357 2 33 1 257 6 34 1 35 1 116 2 205 1 363 1 258 1 364 1 75 1 164 1 122 1 368 1 311 2 167 1 265 1 83 1 374 1 130 2 270 1 171 2 132 1 134 2 
176 1 2 1 222 1 257 2 34 1 51 1 54 1 11 3 205 1 258 1 364 1 331 1 99 1 368 1 237 1 167 1 265 1 25 2 299 1 62 3 195 1 132 1 
176 1 222 1 357 1 257 1 33 1 34 1 51 1 54 1 11 3 228 1 205 1 258 1 364 1 331 1 99 1 368 1 237 1 167 1 265 1 25 3 299 1 62 3 195 1 132 1 
176 1 2 1 222 1 357 1 257 2 33 1 34 1 51 1 54 1 11 3 228 1 205 1 258 1 364 1 331 1 99 1 368 1 235 1 237 1 167 1 265 1 25 3 299 1 62 3 195 1 132 1 
176 1 319 1 221 1 2 4 181 1 222 3 353 2 157 1 357 5 114 1 33 5 257 7 51 1 34 1 116 2 54 1 11 5 228 4 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 20 1 334 1 122 1 368 1 235 4 237 1 80 1 167 1 265 1 83 1 25 6 299 1 345 2 171 2 62 5 195 1 132 1 134 2 
176 1 221 1 2 2 181 1 222 2 51 1 54 1 11 4 228 2 97 1 99 1 331 1 147 1 334 1 235 2 237 1 25 4 345 2 62 4 195 1 353 2 357 2 257 4 33 1 34 1 35 1 116 2 205 1 258 1 364 1 75 1 122 1 368 1 167 1 311 2 265 1 83 1 171 2 132 1 134 2 
176 1 2 2 221 1 222 2 181 1 353 2 157 1 357 1 33 1 257 4 114 1 34 1 51 1 116 2 54 1 11 4 228 2 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 334 1 235 2 368 1 122 1 237 1 80 1 167 1 265 1 83 1 25 4 345 2 171 2 62 4 195 1 132 1 134 2 
176 1 2 2 221 1 222 2 181 1 353 2 157 1 357 1 33 1 257 4 114 1 34 1 51 1 116 2 54 1 11 4 228 2 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 334 1 235 2 368 1 122 1 237 1 80 1 167 1 265 1 83 1 25 4 345 2 171 2 62 4 195 1 132 1 134 2 
176 1 2 2 221 1 222 2 181 1 70 2 353 2 157 1 357 1 33 1 257 4 34 1 51 1 54 1 11 4 228 2 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 334 1 235 2 368 1 122 1 237 1 311 2 167 1 265 1 240 2 25 4 298 1 62 4 152 1 195 1 132 1 348 1 134 2 
176 1 221 1 2 3 222 2 181 1 353 2 157 1 357 1 33 1 257 5 114 1 34 1 51 1 116 2 54 1 11 4 228 3 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 20 1 334 1 122 1 368 1 235 3 237 1 80 1 167 1 265 1 83 1 25 5 345 2 171 2 62 4 195 1 132 1 134 2 
176 1 221 1 2 3 222 2 181 1 353 2 157 1 357 1 33 1 257 5 114 1 34 1 51 1 116 2 54 1 11 4 228 3 205 1 258 1 364 1 97 1 75 1 331 1 99 1 147 1 20 1 334 1 122 1 368 1 235 3 237 1 80 1 167 1 265 1 83 1 25 5 345 2 171 2 62 4 195 1 132 1 134 2 
176 1 221 1 2 2 181 1 222 2 51 1 54 1 11 4 228 2 97 1 99 1 331 1 147 1 334 1 235 2 237 1 240 2 25 4 298 1 62 4 195 1 70 2 353 2 357 1 257 4 33 1 34 1 35 1 205 1 258 1 364 1 75 1 122 1 368 1 167 1 311 2 265 1 132 1 134 2 
110 1 68 1 7 1 161 2 362 3 37 2 10 3 15 1 208 1 309 1 124 1 41 1 338 2 82 1 241 1 128 1 212 1 129 1 213 1 216 1 376 1 89 1 315 1 65 6 198 2 218 1 
250 2 110 1 68 1 283 1 161 1 306 1 362 5 94 1 37 1 10 7 13 1 15 6 74 1 329 2 366 1 208 2 309 2 41 2 149 1 338 4 265 1 103 1 168 2 82 2 241 2 213 6 376 2 300 1 197 1 65 12 47 2 198 1 218 2 
350 1 176 1 68 1 254 1 139 1 112 1 223 1 32 1 285 1 224 1 225 1 34 2 360 1 362 1 37 1 94 1 10 1 12 1 363 1 119 1 331 2 208 1 309 1 337 1 41 1 338 2 42 1 103 1 82 1 241 1 374 1 130 1 194 1 344 1 269 1 376 1 197 1 65 2 
176 1 139 2 223 2 7 1 224 2 285 2 94 1 10 10 227 1 12 3 142 2 15 7 329 2 331 3 337 2 338 6 103 1 104 2 241 3 194 1 344 1 347 1 197 1 65 20 198 8 249 2 250 2 350 3 110 3 68 3 251 2 254 1 34 3 161 4 360 2 362 10 37 2 363 2 74 2 119 1 208 3 309 3 124 1 41 3 82 3 129 1 212 1 213 7 130 3 374 2 269 1 272 2 216 1 89 1 172 1 376 7 377 1 276 4 218 3 
278 1 136 1 350 7 176 1 68 2 356 1 285 2 34 1 362 1 94 1 10 1 12 8 363 3 307 1 16 1 119 1 291 1 330 1 331 1 332 1 208 2 309 2 310 1 22 2 337 2 211 1 41 2 338 4 82 2 128 1 241 2 194 1 130 8 374 2 269 1 344 2 347 1 65 2 197 1 
250 1 176 1 110 1 68 1 34 1 161 1 362 2 10 1 15 1 74 1 329 1 119 1 331 1 208 1 309 1 190 1 41 1 338 2 103 1 60 1 82 1 241 1 213 1 269 1 376 1 65 3 198 1 200 1 218 1 
250 1 208 1 309 1 335 1 68 1 41 1 338 2 82 1 128 1 241 1 213 1 10 2 376 1 15 1 276 1 65 2 198 1 218 1 
208 1 309 1 110 1 68 1 41 1 338 2 82 1 128 1 241 1 213 1 161 1 361 1 362 2 376 1 15 1 74 1 65 2 198 1 
250 1 110 1 68 1 161 1 362 2 10 2 15 2 74 1 329 1 208 1 309 1 41 1 338 2 82 1 241 1 128 1 213 2 376 2 276 1 65 4 198 2 218 1 
250 1 208 1 309 1 335 1 68 1 41 1 338 2 82 1 356 1 241 1 213 1 10 2 376 1 15 1 276 1 65 2 198 1 218 1 
208 1 309 1 110 1 68 1 41 1 338 2 82 1 356 1 241 1 213 1 161 1 361 1 362 2 376 1 15 1 74 1 65 2 198 1 
250 1 110 1 68 1 356 1 161 1 362 2 10 2 15 2 74 1 329 1 208 1 309 1 41 1 338 2 82 1 241 1 213 2 376 2 276 1 65 4 198 2 218 1 
250 1 208 1 110 1 309 1 68 1 41 1 338 2 82 1 241 1 213 2 161 1 362 2 10 2 376 2 74 1 15 2 276 1 329 1 65 4 198 2 218 1 
350 1 68 1 139 1 223 1 285 1 224 1 34 1 360 1 362 1 94 1 37 1 10 1 12 1 142 1 363 1 331 1 208 1 309 1 337 1 41 1 338 2 82 1 241 1 374 1 130 1 344 1 65 2 197 1 
350 1 177 1 68 1 223 1 285 1 34 1 360 1 362 1 94 1 37 1 10 1 12 1 363 1 98 1 331 1 208 1 309 1 337 1 41 1 338 2 82 1 241 1 150 1 374 1 130 1 344 1 65 2 197 1 
250 1 110 1 68 1 161 1 362 2 10 2 15 2 74 1 329 1 208 1 309 1 41 1 338 2 103 1 82 1 241 1 213 2 376 2 276 1 65 4 198 2 218 1 
249 1 250 1 350 1 110 1 68 1 139 1 223 1 285 1 224 1 34 1 161 1 360 1 362 2 10 2 12 1 142 1 363 1 74 1 15 2 329 1 330 1 331 1 208 1 309 1 337 1 41 1 338 2 82 1 241 1 213 2 130 1 374 1 376 2 276 1 65 4 198 2 218 1 
250 1 176 1 110 1 68 1 34 1 362 1 10 2 74 1 15 1 329 1 119 1 331 1 208 1 309 1 190 1 41 1 338 2 103 1 82 1 241 1 213 1 269 1 107 1 376 1 276 1 65 3 198 1 200 1 218 1 
1 1 250 3 110 3 5 1 282 1 180 1 93 1 72 1 113 1 161 3 286 1 362 13 10 12 184 1 13 1 74 3 329 3 208 2 294 1 309 2 79 2 338 4 168 3 82 2 192 2 241 2 215 4 276 2 65 25 47 2 198 5 218 3 
1 2 250 3 110 2 5 1 282 1 180 1 113 1 115 1 359 2 161 2 286 1 362 12 10 14 184 2 74 2 329 3 208 3 294 1 309 3 79 1 338 6 168 2 82 3 192 2 241 3 88 1 108 1 215 4 276 2 65 26 47 2 198 4 66 1 218 3 
1 2 250 4 110 5 5 1 282 1 180 1 72 1 113 1 7 1 115 1 359 1 161 4 286 1 362 21 10 20 184 1 328 1 13 1 74 4 329 4 208 3 294 1 309 3 124 1 79 1 338 6 168 4 82 3 192 3 241 3 129 1 212 1 88 1 108 1 215 4 216 1 89 1 276 3 65 41 47 3 198 7 66 1 218 5 
1 2 250 4 110 4 5 1 282 1 180 1 72 1 113 1 7 1 115 1 359 2 161 4 286 1 362 18 10 20 184 1 328 1 13 1 74 3 329 4 208 4 294 1 309 4 124 1 79 1 338 8 168 4 82 4 192 3 241 4 129 1 212 1 88 1 108 1 215 4 216 1 89 1 276 2 65 38 47 3 198 6 66 1 218 5 
1 1 250 5 110 8 5 1 282 1 180 1 113 1 7 3 115 1 359 1 286 1 161 7 362 24 10 28 184 1 13 1 74 5 329 5 366 1 208 2 294 1 309 2 124 3 79 1 338 4 168 3 82 2 192 2 241 2 129 3 212 3 88 1 108 1 215 4 216 3 89 3 276 5 65 52 47 3 198 12 66 1 218 8 
86 1 85 1 342 1 111 1 275 1 296 1 59 1 17 1 24 1 284 1 
153 1 169 1 
85 1 342 1 162 1 351 1 275 1 59 1 17 1 26 1 284 1 
252 1 281 1 
159 1 189 1 84 1 
263 1 111 1 59 1 40 2 191 1 24 1 193 1 284 1 86 1 357 1 85 1 342 1 36 1 11 1 62 1 275 1 17 1 231 1 
263 1 111 1 59 1 40 2 191 1 24 1 193 1 284 1 86 1 357 1 85 1 342 1 36 1 11 1 62 1 275 1 17 1 231 1 
263 1 111 1 59 1 40 2 191 1 24 1 193 1 284 1 86 1 357 1 85 1 342 1 36 1 11 1 62 1 275 1 17 1 231 1 
252 1 281 1 84 1 
252 1 281 1 84 1 
159 1 189 1 
159 1 189 1 84 1 
67 1 196 1 
153 1 67 1 349 1 176 2 284 1 34 2 160 1 37 1 11 1 14 1 17 1 231 1 119 2 331 2 233 1 59 1 40 1 191 1 127 1 169 1 85 1 342 1 269 2 62 1 275 1 63 1 196 1 
350 2 176 2 68 1 285 1 34 2 362 1 140 1 94 1 10 1 12 2 363 1 331 2 208 1 100 1 309 1 310 1 22 2 337 1 211 1 41 1 338 2 103 1 370 1 82 1 241 1 374 1 130 2 173 1 65 2 197 1 199 1 
330 1 350 2 280 1 58 2 337 1 340 1 285 1 130 2 117 1 274 1 12 2 327 1 347 1 56 1 317 1 277 1 230 1 46 1 365 1 
57 1 350 1 280 1 58 2 337 1 340 1 285 1 130 1 117 1 274 1 12 1 347 1 56 1 317 1 277 1 46 1 365 1 
278 1 332 1 350 1 337 1 102 1 239 1 285 1 374 1 130 1 344 1 117 1 12 1 327 1 363 1 
350 1 280 1 58 2 337 1 340 1 285 1 130 1 117 1 274 1 12 1 327 1 347 1 56 1 317 1 277 1 230 1 46 1 365 1 
53 1 
357 1 33 1 367 1 295 1 315 1 181 1 97 1 
221 1 181 1 222 1 357 2 257 1 33 1 116 1 11 1 97 1 147 1 334 1 122 1 311 1 83 1 345 1 171 1 62 1 
175 6 91 1 221 4 321 1 179 2 181 9 222 3 223 2 285 2 326 1 11 5 12 3 143 3 144 2 329 2 97 8 290 1 330 1 99 2 147 4 333 1 334 4 295 1 337 3 61 2 151 2 344 1 345 6 245 2 62 5 301 2 250 2 350 3 110 2 28 1 303 1 156 1 357 8 33 2 257 5 363 8 74 2 367 1 122 4 311 12 313 6 372 1 87 2 374 2 130 3 270 2 170 2 272 2 218 2 
175 1 147 1 334 1 221 1 122 1 181 1 311 2 168 1 192 1 313 1 357 1 286 1 345 1 97 1 47 1 
176 1 221 1 110 1 179 2 138 1 202 1 181 2 34 1 11 1 144 1 206 1 97 2 119 1 331 1 147 1 334 1 122 1 124 1 80 1 265 1 242 1 269 1 216 1 89 1 62 1 217 1 200 1 218 2 
147 1 334 1 221 1 122 1 367 1 295 1 181 1 357 1 33 1 97 1 
175 5 250 2 110 2 179 2 181 5 311 10 313 5 357 5 272 1 345 5 144 1 74 2 329 2 97 5 218 2 
357 1 33 1 257 1 11 1 62 1 222 1 
278 1 350 4 221 1 28 1 181 2 222 2 156 2 285 1 257 4 326 2 11 3 141 1 12 4 363 1 97 2 332 1 147 2 334 2 122 2 337 1 373 1 374 1 130 4 243 1 344 2 270 2 273 1 62 3 302 1 
220 1 350 1 176 2 68 1 139 1 223 1 224 1 285 1 34 3 360 1 362 1 37 1 12 1 142 1 363 1 119 2 331 3 208 1 309 1 337 1 41 1 338 2 82 1 241 1 242 1 130 1 374 1 344 1 269 2 65 1 197 1 200 2 
175 2 147 1 334 1 221 1 122 1 181 1 311 4 313 2 357 4 129 1 33 2 270 1 345 2 326 1 97 2 
342 1 38 1 275 1 
86 1 342 1 275 1 289 1 196 1 
342 1 38 1 275 1 
342 1 38 1 275 1 
342 1 209 1 275 1 
342 1 209 1 275 1 
342 1 209 1 275 1 
342 1 275 1 
85 1 59 1 
208 2 110 1 309 2 124 1 338 4 82 2 241 2 129 1 7 1 212 1 161 2 359 1 362 4 10 4 216 1 89 1 276 1 65 8 198 3 218 1 
110 1 124 1 129 1 7 1 212 1 161 2 362 3 10 3 216 1 89 1 315 1 65 6 198 2 218 1 
250 1 208 1 110 1 309 1 338 2 312 1 82 1 241 1 161 1 362 2 10 2 74 1 329 1 276 1 65 4 198 2 218 1 
362 1 10 1 47 1 65 2 168 1 192 1 
250 2 110 5 283 1 7 1 161 5 359 1 362 13 10 13 13 1 74 2 329 2 206 1 366 1 208 1 309 1 124 2 338 2 168 2 82 1 241 1 129 1 212 1 216 2 89 2 276 2 47 2 65 26 198 7 218 5 
362 1 65 1 168 1 
10 1 65 1 47 1 
250 1 208 1 309 1 110 1 338 2 82 1 312 1 241 1 161 2 362 3 272 1 10 3 74 1 329 1 276 1 65 6 198 3 218 1 
250 2 110 2 180 1 115 1 286 1 161 1 362 6 10 6 74 2 329 2 208 1 309 1 338 2 168 1 82 1 192 1 241 1 88 1 108 1 276 1 47 1 65 12 198 2 66 1 218 2 
110 1 124 1 161 1 362 3 10 3 216 1 89 1 276 1 65 6 198 2 218 1 
208 1 309 1 124 1 338 2 82 1 241 1 212 1 7 1 161 1 359 1 362 2 10 1 89 1 276 1 65 3 198 2 146 1 
208 1 309 1 110 2 180 1 124 2 338 2 82 1 241 1 161 3 362 5 10 5 216 1 89 2 276 2 206 1 65 10 198 5 218 2 
250 1 208 1 309 1 180 1 338 2 82 1 241 1 10 2 276 1 65 2 198 1 218 1 
250 1 208 1 110 1 309 1 180 1 338 2 82 1 241 1 161 1 362 2 10 2 74 1 329 1 276 1 65 4 198 2 218 1 
208 3 309 3 180 1 124 1 338 6 72 1 82 3 241 3 359 1 161 1 362 2 10 1 89 1 276 1 65 3 146 1 198 2 
110 2 180 1 72 1 7 1 359 1 161 3 362 8 10 7 206 1 146 1 208 4 309 4 124 2 338 8 168 1 312 1 82 4 192 1 241 4 212 1 45 1 216 1 89 2 276 3 65 15 47 1 198 6 218 2 
250 2 110 4 180 1 7 1 115 1 359 1 286 1 161 5 362 10 10 14 74 1 329 2 206 1 208 2 309 2 124 2 338 4 168 1 82 2 192 1 241 2 129 1 212 1 88 1 108 1 216 2 89 2 276 4 47 1 65 24 198 9 66 1 218 5 
250 2 110 2 180 1 7 1 115 1 359 1 286 1 161 3 362 7 10 10 74 1 329 2 208 3 309 3 124 1 338 6 168 1 82 3 312 1 192 1 241 3 129 1 212 1 88 1 108 1 216 1 89 1 276 1 65 17 47 1 198 4 66 1 218 3 
250 2 110 3 180 1 7 1 115 1 286 1 161 3 359 1 362 10 10 9 74 2 329 2 208 3 309 3 124 1 338 6 168 1 312 1 82 3 192 1 241 3 129 1 212 1 88 1 108 1 216 1 89 1 276 1 47 1 65 19 198 4 66 1 218 3 
250 2 110 2 180 1 7 1 115 1 359 1 286 1 161 3 362 7 10 10 74 1 329 2 208 3 309 3 124 1 338 6 168 1 312 1 82 3 192 1 241 3 129 1 212 1 88 1 108 1 216 1 89 1 276 2 47 1 65 17 198 5 66 1 218 3 
250 2 110 4 180 1 7 1 115 1 359 1 286 1 161 5 362 10 10 14 74 1 329 2 206 1 208 2 309 2 124 2 338 4 168 1 82 2 192 1 241 2 129 1 212 1 88 1 108 1 216 2 89 2 276 4 47 1 65 24 198 9 66 1 218 5 
250 2 110 2 180 1 115 1 286 1 161 1 362 6 10 6 74 2 329 2 208 1 309 1 338 2 168 1 82 1 192 1 241 1 88 1 108 1 276 1 47 1 65 12 198 2 66 1 218 2 
250 2 110 2 180 1 7 1 115 1 286 1 161 3 359 2 362 8 10 10 74 1 329 2 208 4 309 4 124 1 338 8 168 1 312 1 82 4 192 1 241 4 129 1 212 1 88 1 108 1 216 1 89 1 276 2 65 18 47 1 198 5 66 1 218 3 
250 3 110 2 180 1 72 1 115 1 286 1 161 3 359 2 362 7 10 9 74 2 329 3 208 4 309 4 338 8 168 1 82 4 192 1 241 4 88 1 108 1 276 3 65 16 47 1 198 6 66 1 218 3 
110 1 124 3 7 1 212 2 161 3 362 4 10 3 216 1 89 3 276 3 65 7 198 6 218 1 
250 2 110 2 180 1 72 1 7 1 115 1 286 1 161 3 359 2 362 8 10 10 74 1 329 2 208 4 309 4 124 1 338 8 168 1 82 4 192 1 241 4 129 1 212 1 88 1 108 1 216 1 89 1 276 1 65 18 47 1 198 4 66 1 218 3 
331 1 77 1 34 1 176 1 37 1 195 1 354 1 
331 1 77 1 34 1 176 1 37 1 165 1 322 1 201 1 195 1 145 1 354 1 255 1 
278 1 285 1 332 1 374 1 130 1 350 1 344 1 12 1 337 1 363 1 315 1 
331 2 350 1 176 1 337 1 223 1 224 1 285 1 34 2 374 1 360 1 194 1 130 1 37 1 269 1 344 1 12 1 363 1 119 1 
350 1 176 2 156 1 223 2 285 1 224 1 34 2 360 1 37 1 12 1 205 1 363 3 119 1 331 2 333 1 337 1 149 1 167 1 265 2 372 1 130 1 194 1 374 2 269 2 
350 1 176 2 156 1 223 2 285 1 34 2 360 1 37 1 12 1 205 1 363 3 119 1 331 2 333 1 337 1 149 1 167 1 265 2 372 1 150 1 130 1 194 1 374 2 269 2 
48 1 350 1 176 1 138 1 202 1 156 1 223 1 357 1 285 1 257 1 33 1 34 1 11 2 12 1 363 4 143 1 119 1 331 1 99 1 333 1 337 1 265 1 372 1 242 1 151 1 214 1 130 1 374 1 269 1 62 2 217 1 200 1 
350 1 176 1 138 1 202 1 156 1 223 1 357 1 285 1 257 1 33 1 34 1 11 2 12 1 363 4 143 1 119 1 331 1 99 1 333 1 337 1 265 1 61 1 372 1 242 1 151 1 130 1 374 1 269 1 62 2 217 1 200 1 
285 1 130 1 350 1 12 1 337 1 307 1 
330 1 136 1 91 1 350 6 22 1 369 1 337 3 211 1 223 1 43 1 267 1 285 2 130 7 374 2 344 2 12 7 347 1 363 3 307 1 16 1 291 1 
176 1 139 1 223 1 224 1 285 1 7 1 10 3 12 1 142 1 15 1 330 1 331 2 100 1 337 1 338 4 103 1 241 2 194 1 65 6 198 2 249 1 350 1 110 1 251 1 68 2 34 2 360 1 161 2 362 3 37 2 363 1 119 1 208 2 309 2 124 1 41 2 82 2 212 1 129 1 213 1 130 1 374 1 269 1 216 1 376 1 89 1 218 1 
350 1 221 2 181 1 28 1 222 1 357 1 33 1 257 2 11 3 12 1 143 1 363 2 14 1 97 1 99 1 147 2 334 2 367 1 122 2 295 1 61 1 151 1 130 1 87 1 344 1 62 3 245 1 301 1 
330 1 91 1 350 2 337 2 223 1 285 1 151 1 130 2 374 1 12 2 363 2 307 1 290 1 
330 1 278 1 332 1 350 4 50 1 337 1 266 1 285 1 130 4 374 1 344 1 12 4 363 1 
135 1 350 2 337 2 156 1 223 1 43 1 267 1 285 1 130 2 374 1 227 1 12 2 95 1 363 1 
285 1 130 1 350 1 344 1 58 1 274 1 12 1 337 1 317 1 46 1 
330 1 350 2 337 1 211 1 285 1 130 2 374 1 12 2 347 1 363 1 199 1 
278 1 330 1 332 1 136 1 350 4 337 2 211 1 156 1 266 1 285 2 130 5 374 2 344 1 12 5 363 3 291 1 
278 1 330 1 332 1 136 1 350 4 337 2 211 1 156 1 266 1 285 2 130 5 374 2 344 1 226 1 12 5 363 3 
331 2 350 1 176 1 337 1 223 1 285 1 34 2 150 1 374 1 360 1 194 1 130 1 37 1 269 1 344 1 12 1 363 1 119 1 
91 1 350 1 369 1 337 2 156 1 223 1 43 1 267 1 285 1 130 1 374 1 12 1 363 1 
37 1 69 1 203 1 318 1 292 1 
99 1 39 1 69 2 203 2 167 1 265 1 339 1 357 1 33 1 37 1 55 1 54 1 11 2 205 1 62 2 14 1 248 1 318 2 292 1 
331 1 34 1 176 1 140 1 69 1 173 1 370 1 318 1 292 1 
55 1 39 1 292 1 
109 1 315 1 238 1 71 1 
260 1 320 1 27 1 210 1 109 1 238 1 71 1 
260 1 8 1 174 1 
260 3 320 1 3 1 27 3 210 1 238 1 71 1 182 1 343 2 109 1 118 1 187 1 
260 2 320 1 27 2 210 1 109 1 238 1 71 1 18 1 324 1 
256 1 260 1 320 1 58 1 148 1 27 1 210 1 317 1 277 1 71 1 182 1 
260 1 320 1 27 1 210 1 109 1 71 1 182 1 
260 1 320 1 27 1 210 1 109 2 238 1 182 1 
260 2 105 1 106 1 320 2 49 1 27 2 210 2 109 1 71 1 182 1 
256 1 260 3 320 1 236 1 4 1 27 3 210 1 109 1 238 1 71 2 133 1 324 2 182 1 
260 2 320 1 58 2 27 2 210 1 238 1 71 1 182 1 324 1 314 1 274 1 109 1 56 1 277 1 317 1 
260 4 320 2 27 4 236 1 210 2 238 1 71 2 182 1 324 2 256 1 44 1 109 1 18 1 
260 1 320 1 27 1 210 1 109 1 238 1 71 1 182 1 
260 4 320 1 27 4 236 1 210 1 238 2 71 3 371 1 324 2 256 1 343 1 109 2 187 1 118 1 
268 1 260 2 234 1 320 1 336 1 27 2 210 1 109 1 238 1 71 1 324 1 182 1 
260 3 320 1 27 3 210 1 238 1 71 1 182 1 343 2 109 1 118 1 247 1 187 2 
6 2 23 1 308 1 71 2 
260 1 320 1 27 1 210 1 259 1 182 1 
260 2 320 1 27 2 210 1 109 1 238 1 71 1 133 1 324 1 182 1 
131 1 
260 1 320 1 27 1 210 1 109 1 238 1 71 1 182 1 
260 3 320 1 27 3 210 1 238 1 71 1 324 1 182 1 343 1 109 1 133 1 
256 1 236 1 71 1 371 1 
109 1 71 1 

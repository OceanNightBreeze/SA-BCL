#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 366 45 211 50 (12,97) (12,97) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 366 45 211 50 (12,97) (12,97) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 366 45 211 50 (12,97) (12,97) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 366 45 211 50 (12,97) (12,97) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 366 45 211 50 25 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 366 45 211 50 25 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 366 45 211 50 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 186 1 321 1 287 1 211 2 152 1 97 1 70 4 36 1 345 4 159 2 194 2 227 1 273 1 50 1 297 1 366 2 92 1 53 2 45 2 251 1 12 1 
31 1 186 1 321 1 287 1 211 2 152 1 97 1 70 4 36 1 345 4 159 2 194 2 227 1 273 1 50 1 297 1 366 2 92 1 53 2 45 2 251 1 12 1 
31 1 186 1 321 1 287 1 211 2 152 1 97 1 70 4 36 1 345 4 159 2 194 2 227 1 273 1 50 1 297 1 366 2 92 1 53 2 45 2 251 1 12 1 
31 1 186 1 321 1 287 1 211 2 152 1 97 1 70 4 36 1 345 4 159 2 194 2 227 1 273 1 50 1 297 1 366 2 92 1 53 2 45 2 251 1 12 1 
186 1 31 3 211 1 152 1 70 4 36 1 345 4 280 1 159 1 194 1 227 1 247 1 378 1 90 1 169 2 366 3 367 1 45 2 
186 1 223 1 152 1 155 1 70 2 345 2 280 1 159 1 194 1 227 1 146 1 247 1 297 1 366 1 92 1 53 1 
186 1 31 1 287 1 211 1 70 3 345 3 280 1 159 2 194 2 247 1 366 2 53 1 45 1 
186 1 31 2 287 1 211 2 143 1 70 4 345 4 159 2 194 2 25 1 273 1 50 1 366 2 53 1 45 2 
186 1 31 2 287 1 211 2 143 1 70 4 345 4 159 2 194 2 25 1 273 1 50 1 366 2 53 1 45 2 
112 1 202 1 16 1 
79 2 16 1 263 1 
128 1 350 2 136 2 310 2 296 1 108 2 184 2 373 2 
187 1 136 2 214 1 158 1 329 1 307 1 196 2 5 1 6 1 222 1 197 1 7 1 310 2 364 1 64 1 8 1 120 1 95 2 122 2 350 2 336 2 351 1 373 2 128 1 228 1 229 1 319 1 296 1 105 1 181 1 148 2 183 1 108 3 277 1 184 3 151 1 110 1 
32 1 350 1 136 1 310 1 296 1 108 1 184 1 373 1 73 1 48 1 
278 1 135 1 112 1 16 1 175 1 102 1 373 1 73 1 292 1 103 1 333 1 108 1 184 1 209 1 
278 1 112 1 350 1 136 1 16 1 175 2 102 1 373 1 73 1 292 1 103 2 310 1 108 1 184 1 209 1 
103 1 107 1 145 1 175 1 138 1 
346 1 112 1 103 2 16 1 145 1 349 1 175 2 138 1 
103 1 145 1 175 1 
32 1 350 1 136 1 289 1 175 1 373 1 73 1 48 1 103 1 296 1 310 1 138 1 108 1 184 1 
16 1 
346 1 112 1 103 2 179 1 16 1 145 1 175 2 138 1 
311 2 112 1 335 1 35 1 16 1 215 1 145 2 175 5 85 1 327 1 126 1 346 1 23 1 103 5 272 2 52 1 365 2 320 1 138 2 
128 1 202 1 
350 1 136 1 324 1 373 2 128 2 310 1 108 2 184 2 77 1 
281 1 188 1 249 1 
95 1 187 1 336 1 337 1 128 1 228 1 196 1 5 1 222 1 64 1 108 1 183 1 8 1 184 1 120 1 151 1 
187 1 95 1 350 1 336 1 373 1 177 1 228 1 196 1 5 1 222 1 310 1 64 1 183 1 8 1 108 2 249 1 120 1 184 2 151 1 170 1 
350 4 136 1 324 1 217 1 373 5 177 1 128 1 293 1 310 4 333 1 108 5 184 5 170 2 78 1 
213 1 350 2 310 2 108 2 184 2 373 2 73 1 48 1 
128 1 350 3 136 1 310 3 108 3 184 3 170 1 373 3 
350 1 310 1 108 1 184 1 373 1 73 1 48 1 
350 1 136 1 324 1 310 1 108 1 184 1 77 1 373 1 73 1 
278 1 187 1 136 2 214 1 324 1 158 1 307 1 196 1 5 1 6 1 222 1 7 1 310 3 364 1 284 1 64 1 8 1 120 1 170 1 95 1 122 2 350 3 141 1 336 1 351 1 175 1 102 1 373 3 177 1 73 1 128 1 228 1 292 1 229 1 103 1 319 1 296 1 181 1 148 1 183 1 108 4 209 1 184 4 151 1 
128 1 350 1 310 1 333 1 108 2 184 2 373 2 170 1 78 1 
278 1 350 3 136 1 153 1 324 1 141 1 16 1 175 1 102 1 373 3 73 1 177 1 292 1 103 1 310 3 108 3 184 3 209 1 170 2 
350 2 136 1 324 1 373 2 281 1 310 2 108 2 184 2 249 1 170 1 
95 1 187 1 336 1 128 1 228 1 196 1 5 1 222 1 64 1 108 1 8 1 183 1 184 1 120 1 151 1 
95 1 187 1 336 1 191 1 128 1 228 1 196 1 5 1 222 1 104 1 108 1 8 1 183 1 184 1 151 1 
188 2 57 1 1 1 214 1 34 1 157 1 37 1 216 1 158 1 61 1 60 1 281 2 195 1 6 2 364 1 122 2 351 1 225 1 24 1 229 1 181 1 148 4 277 2 249 2 
350 1 213 1 310 1 108 1 102 1 184 1 373 1 73 1 
33 1 11 1 
33 1 11 1 
257 1 290 1 
257 1 290 1 
257 1 290 1 
113 1 33 1 11 1 
113 1 33 1 11 1 
33 1 29 1 11 1 
257 1 309 1 33 2 300 1 290 1 11 2 
113 1 33 1 11 1 
33 1 203 1 11 1 
33 1 203 1 11 1 
33 1 203 1 11 1 
55 1 323 1 33 1 86 1 218 1 310 2 199 1 11 1 350 2 142 1 174 1 245 1 339 1 175 1 226 1 373 2 128 1 21 1 103 1 108 2 132 1 184 2 231 1 29 1 
0 1 55 2 323 3 33 2 16 1 175 2 46 2 86 2 226 2 218 1 21 2 89 1 103 2 347 1 27 1 208 1 300 1 94 1 11 2 
152 1 36 1 227 1 
223 1 152 1 227 1 
13 1 243 1 223 1 168 1 36 2 227 3 
13 1 362 1 223 1 168 1 36 1 227 2 
13 1 223 1 36 1 168 2 227 2 
79 3 252 1 57 1 112 1 154 1 35 3 215 2 60 1 40 1 346 1 195 1 164 1 199 1 365 1 138 4 285 1 263 1 68 1 96 2 311 1 16 2 145 1 339 1 175 5 24 1 103 5 272 1 75 1 132 1 320 1 298 2 30 2 
79 9 252 2 57 3 80 5 112 1 35 8 215 6 60 3 40 2 346 1 195 3 164 1 365 2 138 7 200 1 263 3 334 1 368 1 96 6 311 2 16 5 371 1 339 4 145 6 175 9 271 1 23 1 24 3 103 9 272 2 75 3 107 5 320 1 30 6 185 1 
252 1 79 4 112 1 57 1 35 3 215 2 60 1 40 1 195 1 365 1 138 2 285 1 263 2 68 1 311 1 96 2 16 3 339 1 175 3 23 1 24 1 103 3 272 1 75 1 298 1 30 2 
79 7 252 1 112 1 57 2 35 5 215 4 60 2 40 1 195 2 365 1 138 3 285 1 263 3 334 1 68 1 96 4 311 1 16 4 371 1 339 2 175 4 271 1 23 1 24 2 103 4 272 1 75 2 298 2 30 4 
202 1 183 1 357 1 
82 1 183 1 
332 1 
187 1 222 1 183 1 
72 1 183 1 
222 1 183 1 
187 1 222 1 370 1 312 1 183 3 357 2 
57 1 34 3 3 1 61 2 47 1 24 1 258 1 283 1 221 1 6 3 206 2 180 1 76 1 356 1 148 7 277 4 149 1 
57 1 34 3 3 1 61 2 47 1 24 1 258 1 283 1 221 1 6 3 206 2 180 1 76 1 356 1 148 7 277 4 149 1 
57 1 34 3 360 1 3 1 61 2 47 1 24 1 258 1 283 1 221 1 6 3 206 2 180 1 76 1 356 1 148 7 277 4 149 1 
322 1 57 4 34 10 214 1 325 1 3 2 158 1 60 3 61 5 116 3 330 1 258 5 195 3 283 1 221 1 6 15 364 1 69 1 122 2 351 1 372 1 47 1 24 4 376 1 294 1 206 3 75 3 76 1 180 2 356 2 148 31 277 16 149 2 301 4 
57 1 214 2 34 4 3 1 158 2 61 3 219 1 258 1 221 1 283 1 6 4 364 2 69 1 122 4 98 1 351 2 47 1 24 1 206 2 180 1 356 1 148 9 277 5 149 1 
31 1 186 1 253 1 152 1 255 1 36 1 345 2 237 1 280 1 159 1 194 1 4 1 196 1 91 1 366 1 65 1 8 1 9 1 261 1 243 1 95 1 223 1 140 1 336 1 70 2 227 2 247 1 53 1 250 1 151 1 
31 2 152 1 255 1 36 1 345 3 237 1 280 1 159 1 194 1 4 1 196 1 91 1 366 1 65 1 8 1 9 1 243 1 95 1 223 1 140 1 336 1 70 3 269 1 340 1 353 1 227 2 247 1 53 1 250 1 151 1 
31 2 152 1 255 1 36 1 345 2 237 1 280 1 4 1 196 1 366 1 65 1 8 1 9 1 243 1 95 1 223 1 336 1 70 2 269 1 340 1 227 2 247 1 53 1 250 1 151 1 
95 1 336 1 369 1 71 1 70 1 246 1 345 1 159 1 87 1 194 1 256 1 353 1 196 1 5 1 222 1 377 1 8 1 183 1 65 2 53 2 250 2 9 2 151 1 
243 1 186 1 253 1 95 1 223 1 152 1 140 1 336 1 255 1 70 1 36 1 345 1 237 1 159 1 269 1 4 1 194 1 227 2 196 1 91 1 8 1 65 1 53 1 9 1 250 1 151 1 
115 1 
56 1 112 1 58 2 304 1 215 2 346 3 5 2 222 1 63 1 348 1 8 1 263 2 311 1 15 1 16 2 18 1 175 5 73 1 230 2 272 1 320 1 183 1 184 1 79 2 278 1 135 1 234 1 35 2 83 1 192 2 326 2 87 1 40 1 196 2 41 2 365 1 333 1 286 1 95 2 336 2 99 1 145 6 246 1 204 4 102 1 341 1 373 1 374 2 292 1 103 5 106 2 108 1 209 1 151 1 54 1 
278 1 135 1 234 1 58 1 304 1 83 1 346 1 333 1 18 1 145 2 175 3 204 2 102 1 373 1 73 1 292 1 103 3 179 1 108 1 209 1 184 1 54 1 
278 1 135 1 234 1 112 1 304 1 83 1 346 1 333 1 16 1 145 1 18 1 175 3 204 3 102 1 373 1 73 1 374 1 292 1 103 3 179 1 108 1 209 1 184 1 54 1 
278 1 135 1 234 1 112 1 58 1 304 1 83 1 346 1 333 1 16 1 18 1 145 2 175 3 204 3 102 1 373 1 73 1 374 1 292 1 103 3 179 1 106 1 108 1 209 1 184 1 54 1 
111 1 56 1 112 5 58 4 2 1 304 1 215 1 346 3 263 2 311 1 16 5 18 1 175 5 73 1 22 1 272 1 230 2 179 1 355 1 320 1 184 1 278 1 234 1 135 1 83 1 35 1 192 2 279 1 326 2 41 2 365 1 333 1 286 1 145 7 204 6 102 1 373 1 374 4 292 1 103 5 106 4 108 1 209 1 54 1 
56 1 112 1 58 2 304 1 215 1 346 2 348 1 263 2 311 1 16 2 18 1 175 4 73 1 272 1 230 2 320 1 184 1 278 1 79 2 234 1 135 1 83 1 35 1 192 2 326 2 41 2 365 1 333 1 286 1 145 4 204 4 102 1 373 1 374 2 292 1 103 4 106 2 108 1 209 1 54 1 
278 1 111 1 56 1 135 1 234 1 112 1 58 2 304 1 35 1 83 1 192 2 215 1 326 2 279 1 346 2 41 2 365 1 333 1 263 2 286 1 311 1 16 1 145 4 18 1 175 4 204 4 102 1 373 1 374 2 73 1 292 1 22 1 103 4 230 2 272 1 106 2 108 1 320 1 209 1 184 1 54 1 
278 1 111 1 56 1 135 1 234 1 112 1 58 2 304 1 35 1 83 1 192 2 215 1 326 2 279 1 346 2 41 2 365 1 333 1 263 2 286 1 311 1 16 1 145 4 18 1 175 4 204 4 102 1 373 1 374 2 73 1 292 1 22 1 103 4 230 2 272 1 106 2 108 1 320 1 209 1 184 1 54 1 
79 2 278 1 135 1 234 1 112 1 81 1 58 2 304 1 35 1 83 1 192 2 215 1 279 1 346 2 162 2 365 1 333 1 121 1 286 1 311 1 16 1 338 1 145 4 18 1 175 4 204 4 102 1 373 1 374 2 73 1 292 1 317 2 103 4 230 2 272 1 106 2 108 1 320 1 209 1 184 1 54 1 
278 1 111 1 56 1 135 1 234 1 112 1 58 3 304 1 35 1 83 1 192 2 215 1 326 2 279 1 346 2 41 2 365 1 333 1 263 2 286 1 311 1 16 1 18 1 145 5 175 4 204 5 102 1 373 1 73 1 374 3 22 1 292 1 103 4 230 2 272 1 355 1 106 3 320 1 108 1 209 1 184 1 54 1 
278 1 111 1 56 1 135 1 234 1 112 1 58 3 304 1 35 1 83 1 192 2 215 1 326 2 279 1 346 2 41 2 365 1 333 1 263 2 286 1 311 1 16 1 18 1 145 5 175 4 204 5 102 1 373 1 73 1 374 3 22 1 292 1 103 4 230 2 272 1 355 1 106 3 320 1 108 1 209 1 184 1 54 1 
79 2 278 1 135 1 234 1 112 1 81 1 58 2 304 1 35 1 83 1 192 2 215 1 346 2 162 2 348 1 365 1 333 1 286 1 311 1 16 1 145 4 18 1 175 4 204 4 102 1 373 1 374 2 73 1 292 1 317 2 103 4 230 2 272 1 106 2 320 1 108 1 184 1 209 1 54 1 
188 1 1 1 57 1 214 1 34 2 158 1 61 2 281 1 221 1 283 1 6 3 364 1 122 2 202 1 351 1 47 1 128 2 24 1 229 1 206 1 181 1 180 1 356 1 148 6 249 1 277 3 
188 11 254 1 57 1 34 2 214 2 325 1 235 1 158 2 39 1 61 1 60 2 116 3 281 4 258 1 195 1 6 6 364 2 122 4 17 1 351 2 372 1 128 1 24 2 229 1 319 1 26 1 75 2 181 2 148 14 249 11 277 8 110 1 301 3 
187 1 189 1 214 1 158 1 281 1 196 1 5 1 222 1 6 1 310 1 364 1 64 1 8 1 120 1 170 1 95 1 350 1 122 2 336 1 337 1 124 1 351 1 373 1 177 1 128 1 228 1 229 1 26 1 319 1 181 1 248 1 183 1 108 2 148 2 184 2 277 1 151 1 110 1 
95 1 122 2 350 1 336 1 214 1 351 1 158 1 373 1 177 1 240 1 196 1 229 1 5 1 26 1 310 1 181 1 364 1 108 1 184 1 170 1 
1 1 214 2 114 1 158 2 329 2 87 1 196 8 161 1 5 2 6 1 222 2 310 1 364 2 8 2 262 1 261 1 170 1 139 1 95 8 350 1 122 4 336 7 351 2 246 1 313 1 269 1 205 1 373 1 229 2 319 1 181 2 108 1 183 3 148 2 379 1 184 1 277 1 151 2 110 1 
188 1 57 1 136 1 34 1 324 1 214 1 158 1 61 1 60 1 281 1 195 1 6 2 310 1 364 1 350 1 122 2 351 1 373 1 24 1 229 1 26 1 75 1 181 1 108 1 148 3 249 1 184 1 277 1 133 1 
188 1 1 1 122 2 34 1 214 1 351 1 216 1 158 1 60 1 281 1 258 1 24 1 229 1 181 1 364 1 148 2 249 1 277 2 
188 1 1 1 57 1 122 2 34 1 214 1 157 1 351 1 158 1 61 1 281 1 195 1 229 1 6 2 181 1 364 1 148 2 249 1 
188 2 1 1 57 1 214 1 34 2 158 1 60 1 61 1 281 2 258 1 195 1 6 2 364 1 122 2 351 1 24 1 229 1 75 1 181 1 148 4 277 2 249 2 
188 1 122 2 34 1 214 1 351 1 216 1 158 1 60 1 281 1 258 1 24 1 161 1 229 1 181 1 364 1 148 2 249 1 277 2 
188 1 57 1 122 2 34 1 214 1 157 1 351 1 158 1 61 1 281 1 195 1 161 1 229 1 6 2 181 1 364 1 148 2 249 1 
188 2 57 1 214 1 34 2 158 1 60 1 61 1 281 2 258 1 195 1 161 1 6 2 364 1 122 2 351 1 24 1 229 1 75 1 181 1 148 4 277 2 249 2 
188 2 57 1 122 2 34 2 214 1 351 1 158 1 61 1 60 1 281 2 195 1 258 1 24 1 229 1 6 2 75 1 181 1 364 1 148 4 249 2 277 2 
187 1 214 1 158 1 196 1 5 1 222 1 6 1 7 1 364 1 64 1 8 1 120 1 95 1 122 2 336 1 351 1 128 1 228 1 229 1 319 1 181 1 148 2 183 1 108 1 277 1 184 1 151 1 110 1 
187 1 191 1 214 1 158 1 196 1 5 1 222 1 6 1 364 1 8 1 95 1 122 2 336 1 351 1 128 1 228 1 229 1 319 1 104 1 275 1 181 1 148 2 183 1 108 1 277 1 184 1 151 1 110 1 
188 2 57 1 214 1 34 2 158 1 60 1 61 1 281 2 258 1 195 1 6 2 364 1 122 2 351 1 24 1 229 1 26 1 75 1 181 1 148 4 277 2 249 2 
188 2 187 1 57 1 34 2 214 1 158 1 61 1 60 1 281 2 195 1 258 1 196 1 6 2 222 1 7 1 364 1 64 1 8 1 44 1 120 1 261 1 95 1 122 2 336 1 351 1 228 1 24 1 229 1 75 1 181 1 148 4 183 1 108 1 249 2 277 2 184 1 151 1 
188 1 57 1 136 1 34 1 324 1 214 1 158 1 60 1 281 1 195 1 258 1 6 1 310 1 364 1 350 1 122 2 351 1 373 1 291 1 24 1 229 1 26 1 75 1 181 1 108 1 148 3 184 1 277 2 249 1 
57 3 343 1 214 2 34 6 325 1 158 2 61 3 60 3 116 1 239 1 258 3 195 3 6 10 42 1 364 2 267 1 122 4 173 1 98 1 244 2 351 2 372 1 24 3 129 2 274 1 75 3 182 1 148 19 277 9 301 2 
57 2 343 1 34 4 214 3 344 1 158 3 61 2 60 3 116 2 258 2 195 2 165 1 119 1 6 12 42 1 364 3 242 1 69 2 122 6 173 2 98 1 244 4 351 3 352 1 372 2 24 3 129 1 274 1 75 3 182 2 276 1 148 26 277 14 301 2 
57 5 343 1 214 3 34 8 325 1 344 1 158 3 61 4 60 4 116 3 258 4 195 4 283 1 221 1 165 1 119 1 6 21 42 1 364 3 242 1 267 1 69 1 122 6 123 1 173 2 98 1 244 4 351 3 352 1 372 3 47 1 24 5 129 1 206 1 274 1 75 4 180 1 182 1 356 1 276 1 148 41 277 20 301 4 
57 4 343 1 214 4 34 7 325 1 344 1 158 4 61 4 60 4 116 3 258 3 195 3 283 1 221 1 165 1 119 1 6 18 42 1 364 4 242 1 267 1 69 2 122 8 123 1 173 2 98 1 244 4 351 4 352 1 372 3 47 1 24 5 129 1 206 1 274 1 75 4 180 1 182 1 356 1 276 1 148 38 277 20 301 4 
57 8 343 1 214 2 34 14 325 2 344 1 158 2 61 7 60 7 116 4 258 7 195 7 283 1 221 1 165 1 119 1 6 25 42 1 364 2 242 1 69 1 122 4 173 1 98 1 244 4 17 2 351 2 352 1 372 2 47 1 24 8 129 1 206 1 274 1 75 7 180 1 182 1 356 1 276 1 148 52 277 27 301 4 
21 1 55 1 33 1 100 1 27 1 208 1 300 1 86 1 226 1 11 1 
245 1 29 1 
21 1 55 1 33 1 193 1 19 1 86 1 67 1 226 1 11 1 
375 1 113 1 
309 1 203 1 260 1 
0 1 55 1 323 2 33 1 16 1 175 1 46 1 86 1 218 1 226 1 21 1 103 1 347 1 27 1 208 1 300 1 94 1 11 1 
0 1 55 1 323 2 33 1 16 1 175 1 46 1 86 1 218 1 226 1 21 1 103 1 347 1 27 1 208 1 300 1 94 1 11 1 
0 1 55 1 323 2 33 1 16 1 175 1 46 1 86 1 218 1 226 1 21 1 103 1 347 1 27 1 208 1 300 1 94 1 11 1 
375 1 309 1 113 1 
375 1 309 1 113 1 
203 1 260 1 
309 1 203 1 260 1 
174 1 142 1 
55 1 323 1 33 1 238 1 86 1 347 1 199 1 310 2 138 1 11 1 350 2 142 1 174 1 245 1 339 1 175 1 46 1 226 1 373 2 128 1 21 1 103 1 108 2 132 1 184 2 231 1 29 1 
210 1 214 1 158 1 361 1 329 2 196 2 222 1 6 1 364 1 8 1 139 1 95 2 171 1 122 2 336 2 351 1 205 1 373 2 127 1 229 1 26 1 319 1 181 1 183 1 108 2 148 2 184 2 277 1 151 1 233 1 110 1 
243 1 95 2 223 1 152 1 336 2 255 1 36 1 237 1 269 1 88 1 227 2 282 1 62 1 196 2 91 1 8 1 250 1 261 1 151 1 
243 1 95 1 223 1 152 1 336 1 255 1 36 1 237 1 269 1 88 1 227 2 196 1 91 1 8 1 250 1 151 1 10 1 
95 1 336 1 71 1 246 1 87 1 282 1 196 1 5 1 222 1 130 1 8 1 183 1 250 1 151 1 
243 1 95 1 223 1 152 1 336 1 255 1 36 1 237 1 269 1 88 1 227 2 282 1 62 1 196 1 91 1 8 1 250 1 151 1 
20 1 
112 1 335 1 202 1 35 1 16 1 215 1 327 1 
79 1 56 1 112 1 35 1 215 1 326 1 346 1 41 1 365 1 263 1 311 1 16 2 145 1 175 1 103 1 272 1 320 1 
112 2 57 2 215 8 305 1 306 2 60 2 346 3 5 1 118 2 222 3 63 1 8 3 261 1 263 6 265 2 311 4 172 2 72 2 16 8 312 1 175 5 176 1 125 1 178 1 24 2 272 4 75 2 183 10 320 4 30 6 357 2 79 12 187 3 190 2 35 9 82 3 327 1 40 2 195 2 196 3 363 2 198 2 365 4 95 3 96 6 335 1 336 3 145 5 292 2 103 5 147 1 207 2 299 2 151 4 
79 6 57 2 112 2 35 8 215 5 344 1 60 2 40 1 116 1 346 1 195 2 363 1 165 1 119 1 63 1 365 2 263 3 242 1 96 5 311 2 172 2 16 5 145 1 175 1 372 1 24 2 103 1 272 2 354 1 75 2 276 1 320 2 150 1 30 5 301 1 
32 1 57 1 342 1 136 1 35 2 215 2 363 1 283 1 310 1 365 1 311 1 172 2 350 1 289 1 175 1 373 1 73 1 48 1 22 1 24 2 103 1 272 1 296 1 180 1 356 1 108 1 320 1 184 1 
311 1 112 1 272 1 335 1 35 1 16 1 365 1 215 1 320 1 327 1 
79 10 96 5 57 2 172 2 35 5 16 5 215 5 60 2 24 2 195 2 363 1 118 1 75 2 263 5 30 5 
346 1 112 1 103 1 16 1 145 1 175 1 
156 1 35 2 215 2 87 1 40 2 346 2 196 4 163 1 5 2 222 1 63 2 365 2 8 1 311 2 95 4 15 1 336 4 145 4 175 3 246 1 341 1 178 1 23 1 103 3 147 2 272 2 183 1 320 1 151 1 
187 1 136 2 214 1 158 1 307 1 196 1 5 1 6 1 222 1 7 1 310 2 364 1 64 1 8 1 120 1 95 1 122 2 350 2 336 1 351 1 373 2 128 1 228 1 229 1 319 1 296 1 181 1 148 1 108 3 183 1 184 3 151 1 
79 4 96 2 311 1 112 2 35 1 16 4 215 2 40 1 272 1 206 1 63 1 365 1 320 1 263 2 30 2 
21 1 59 1 86 1 
21 1 59 1 86 1 
21 1 14 1 174 1 27 1 86 1 
21 1 59 1 86 1 
21 1 86 1 314 1 
21 1 86 1 314 1 
21 1 86 1 314 1 
21 1 86 1 
33 1 11 1 
57 1 69 1 122 4 34 3 214 2 351 2 158 2 61 2 47 1 24 1 258 1 283 1 221 1 6 4 206 1 364 2 180 1 356 1 148 8 277 4 
57 1 202 1 34 2 61 2 47 1 24 1 221 1 283 1 6 3 206 1 180 1 356 1 148 6 277 3 
57 1 122 2 34 2 214 1 351 1 158 1 61 1 60 1 195 1 24 1 258 1 6 2 75 1 364 1 93 1 148 4 277 2 
57 1 34 2 325 1 372 1 61 1 60 1 116 1 195 1 24 1 258 1 6 4 75 1 148 7 277 3 301 2 
57 3 212 1 34 9 214 2 325 1 235 1 158 2 60 2 61 5 116 2 258 4 195 2 283 1 221 1 6 12 364 2 69 2 122 4 17 1 351 2 47 1 24 3 206 1 75 2 180 2 356 2 148 23 277 11 301 2 
6 1 148 1 301 1 
148 1 277 1 116 1 
57 1 122 2 214 1 34 3 351 1 158 1 60 1 61 2 24 1 258 1 195 1 118 1 6 3 75 1 364 1 93 1 148 6 277 3 
57 2 214 1 34 2 344 1 158 1 60 2 61 1 116 1 258 1 195 2 119 1 165 1 6 6 364 1 242 1 122 2 98 1 351 1 372 1 24 2 75 2 276 1 148 12 277 6 301 1 
57 1 34 2 61 1 24 1 258 1 283 1 6 3 180 1 356 1 148 6 277 3 
212 1 69 1 122 2 34 2 214 1 351 1 158 1 61 1 47 1 258 1 221 1 6 2 180 1 364 1 356 1 148 3 277 1 
57 2 122 2 342 1 98 1 214 1 34 5 351 1 158 1 61 3 258 2 24 2 283 1 6 5 364 1 180 2 356 2 148 10 277 5 
122 2 98 1 214 1 34 1 351 1 158 1 60 1 24 1 258 1 364 1 148 2 277 2 
57 1 122 2 98 1 34 2 214 1 351 1 158 1 61 1 60 1 195 1 24 1 258 1 6 2 75 1 364 1 148 4 277 2 
69 1 212 1 267 1 122 6 98 1 214 3 34 2 351 3 158 3 61 1 258 1 6 2 364 3 180 1 356 1 148 3 277 1 
322 1 212 1 57 5 214 5 34 12 325 1 158 5 60 3 61 7 116 3 258 5 195 3 283 2 221 1 6 18 364 5 93 1 69 2 267 1 122 10 98 1 351 5 372 1 47 1 24 5 376 1 294 1 206 1 75 3 180 3 356 3 148 34 277 16 301 4 
57 1 214 1 34 2 158 1 61 2 116 1 221 1 283 1 6 4 364 1 242 1 122 2 98 1 351 1 372 1 47 1 24 1 206 1 180 1 356 1 148 8 277 4 301 1 
57 1 214 2 34 3 325 1 158 2 61 2 60 1 116 1 258 1 283 1 221 1 6 5 364 2 93 1 242 1 122 4 98 1 351 2 372 1 47 1 24 2 206 1 75 1 180 1 356 1 148 11 277 6 301 2 
57 3 214 3 34 4 344 1 158 3 60 2 61 3 116 1 258 1 195 2 283 1 221 1 165 1 119 1 6 10 364 3 93 1 242 1 69 1 122 6 98 1 351 3 372 1 47 1 24 3 206 1 75 2 180 1 356 1 276 1 148 19 277 9 301 1 
57 2 214 3 34 5 344 1 158 3 60 2 61 3 116 1 258 2 195 1 283 1 221 1 119 1 165 1 6 7 364 3 93 1 242 1 69 1 122 6 98 1 351 3 372 1 47 1 24 3 206 1 75 2 180 1 356 1 276 1 148 17 277 10 301 1 
57 1 214 1 34 2 158 1 61 2 116 1 221 1 283 1 6 4 364 1 242 1 122 2 98 1 351 1 372 1 47 1 24 1 206 1 180 1 356 1 148 8 277 4 301 1 
57 2 214 1 34 2 344 1 158 1 60 2 61 1 116 1 258 1 195 2 119 1 165 1 6 6 364 1 242 1 122 2 98 1 351 1 372 1 24 2 75 2 276 1 148 12 277 6 301 1 
57 2 214 4 34 5 344 1 158 4 60 2 61 3 116 1 258 2 195 1 283 1 221 1 165 1 119 1 6 8 364 4 93 1 242 1 69 2 122 8 98 1 351 4 372 1 47 1 24 3 206 1 75 2 180 1 356 1 276 1 148 18 277 10 301 1 
57 2 214 4 34 6 344 1 158 4 60 3 61 3 116 1 258 3 195 2 165 1 119 1 6 7 364 4 242 1 267 1 69 2 122 8 98 1 351 4 372 1 24 3 75 3 276 1 148 16 277 9 301 1 
57 1 34 6 61 3 47 1 258 3 24 1 221 2 283 1 6 4 180 3 356 3 148 7 277 3 
57 2 214 4 34 4 344 1 158 4 60 2 61 3 116 1 258 1 195 1 283 1 221 1 165 1 119 1 6 8 364 4 242 1 267 1 69 2 122 8 98 1 351 4 372 1 47 1 24 3 206 1 75 2 180 1 356 1 276 1 148 18 277 10 301 1 
128 1 108 1 333 1 184 1 373 1 160 1 78 1 
303 1 137 1 308 1 160 1 373 1 117 1 128 1 333 1 108 1 28 1 184 1 78 1 
95 1 196 1 5 1 222 1 202 1 336 1 8 1 183 1 246 1 151 1 87 1 
187 1 95 1 350 1 336 1 373 1 128 1 228 1 196 1 5 1 222 1 310 1 183 1 108 2 8 1 184 2 120 1 151 1 170 1 
278 1 187 2 190 1 196 1 222 2 310 2 8 1 120 1 170 1 95 1 350 1 336 1 72 1 102 1 373 2 73 1 128 1 228 1 147 1 108 2 183 3 184 2 151 1 
278 1 187 2 190 1 191 1 196 2 167 1 222 2 310 2 8 1 170 1 95 2 350 1 336 2 72 1 102 1 373 2 73 1 128 1 228 1 147 1 108 2 183 3 184 2 151 1 
134 1 187 1 112 1 190 1 82 1 220 1 196 3 5 1 167 1 222 1 8 1 95 3 336 3 72 1 16 1 145 1 175 2 292 1 103 2 147 1 183 4 151 1 357 1 
187 1 95 3 112 1 190 1 336 3 82 1 16 1 72 1 145 1 175 2 306 1 292 1 103 2 196 3 5 1 147 1 167 1 222 1 183 4 8 1 151 1 357 1 
95 1 196 1 336 1 8 1 262 1 151 1 
95 7 187 1 336 6 114 1 236 1 312 1 313 1 269 1 329 1 196 7 5 2 318 1 222 2 183 3 8 2 379 1 262 1 261 1 151 3 241 1 139 1 
188 1 187 1 57 1 34 2 214 2 84 1 158 2 61 2 281 1 283 1 221 1 196 1 6 3 222 1 7 1 310 1 364 2 64 1 8 1 44 1 261 1 120 1 170 1 95 1 350 1 122 4 336 1 351 2 373 1 47 1 128 2 228 1 24 1 229 2 26 1 206 1 180 1 181 2 356 1 148 6 183 1 108 2 249 1 277 3 184 2 151 1 233 1 
112 1 35 1 82 1 215 1 327 1 306 1 346 1 196 1 5 1 365 2 138 1 265 1 95 1 311 2 335 1 336 1 16 1 145 2 175 3 292 1 178 1 103 3 272 2 207 1 320 2 299 1 183 2 357 1 
95 2 187 1 336 2 312 1 125 1 196 2 222 1 183 2 8 1 261 1 262 1 151 2 357 1 
95 4 336 4 246 1 87 1 196 4 49 1 5 1 167 1 222 1 183 1 8 1 261 1 151 1 
95 2 187 1 336 2 270 1 196 2 147 1 318 1 222 1 295 1 183 1 8 1 151 2 241 1 302 1 
95 1 223 1 152 1 196 1 5 1 336 1 8 1 237 1 151 1 227 1 
95 2 196 2 222 1 336 2 8 1 183 1 361 1 261 1 151 1 269 1 139 1 
95 5 336 4 114 1 246 1 313 1 87 1 196 5 49 1 147 1 5 1 222 2 183 3 8 2 261 1 151 2 139 1 
95 5 336 4 246 1 313 1 87 1 331 1 196 5 49 1 147 1 5 1 222 2 183 3 8 2 261 1 151 2 139 1 
187 1 95 1 350 1 336 1 191 1 373 1 128 1 228 1 196 1 5 1 222 1 310 1 183 1 108 2 8 1 184 2 151 1 170 1 
95 1 187 1 336 1 236 1 312 1 196 1 147 1 318 1 222 1 183 1 8 1 151 2 241 1 
210 1 358 1 171 1 373 1 127 1 259 1 108 1 184 1 232 1 
259 1 288 1 144 1 
128 1 266 1 358 1 259 1 232 1 
278 1 358 2 266 2 112 1 288 1 141 1 144 1 16 1 175 2 102 1 73 1 128 1 292 1 259 1 103 2 74 1 138 1 209 1 232 2 
202 1 247 1 366 1 280 1 
247 1 70 1 366 1 345 1 280 1 159 1 194 1 
70 1 53 1 9 1 
186 1 70 3 345 3 268 1 159 1 280 1 194 1 316 1 247 1 43 1 297 2 366 1 
31 1 247 1 70 2 366 1 169 1 345 2 280 1 159 1 194 1 
186 1 152 1 70 1 36 1 345 1 159 1 194 1 227 1 90 1 366 1 45 1 
186 1 70 1 366 1 345 1 280 1 159 1 194 1 
186 1 247 1 70 1 345 1 280 2 159 1 194 1 
186 1 70 2 345 2 280 1 159 2 328 1 194 2 166 1 366 1 66 1 
186 1 211 1 273 1 50 1 70 1 366 1 345 1 45 1 159 1 194 1 
186 1 243 1 31 1 223 1 152 1 70 2 36 1 345 2 224 1 280 1 159 1 194 1 227 2 247 1 366 1 
186 1 31 2 211 1 70 4 345 4 280 1 159 2 194 2 247 1 169 1 366 2 367 1 45 1 
186 1 247 1 70 1 366 1 345 1 280 1 159 1 194 1 
31 2 211 1 70 4 345 4 268 1 280 2 159 1 315 1 194 1 316 1 247 2 297 1 366 3 45 1 
186 1 201 1 31 1 143 1 70 2 345 2 280 1 159 1 194 1 51 1 247 1 366 1 
186 1 70 3 345 3 268 2 159 1 280 1 194 1 316 1 247 1 297 2 366 1 264 1 
359 2 366 2 131 1 109 1 
186 1 70 1 38 1 345 1 159 1 194 1 
186 1 70 1 345 1 159 1 280 1 315 1 194 1 273 1 247 1 
101 1 
186 1 247 1 70 1 366 1 345 1 280 1 159 1 194 1 
186 1 273 1 247 1 70 2 297 1 366 1 345 2 280 1 159 1 194 1 
211 1 366 1 45 1 315 1 
366 1 280 1 

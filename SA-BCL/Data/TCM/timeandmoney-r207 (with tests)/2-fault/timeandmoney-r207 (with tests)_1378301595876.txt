#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 218 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
357 9 358 2 155 1 322 1 256 5 80 1 279 2 365 2 4 1 308 3 262 1 164 9 165 2 284 2 33 1 290 1 216 2 9 1 217 1 313 1 369 4 64 2 16 1 102 1 198 1 374 6 150 1 302 1 
357 9 358 2 155 1 322 1 256 5 80 1 279 2 365 2 4 1 308 3 262 1 164 9 165 2 284 2 33 1 290 1 216 2 9 1 217 1 313 1 369 4 64 2 16 1 102 1 198 1 374 6 150 1 302 1 
357 10 358 2 155 1 322 1 256 6 80 1 279 2 365 2 4 1 308 4 262 1 164 10 165 2 284 2 33 1 290 1 216 2 9 1 217 1 313 1 369 5 64 2 16 1 102 1 198 1 374 7 150 1 302 1 
357 7 358 2 155 1 322 1 256 4 279 2 365 2 4 1 308 2 262 1 164 7 165 2 284 1 33 1 290 1 216 2 9 1 217 1 313 1 369 3 64 2 16 1 102 1 198 1 374 4 150 1 302 1 
357 4 358 1 216 1 217 1 313 1 322 1 369 2 256 3 80 1 16 1 279 1 365 1 4 1 374 3 308 1 164 4 165 1 284 2 
357 2 9 1 216 1 217 1 241 1 322 1 194 1 256 1 64 1 279 1 365 1 4 1 262 1 164 2 165 1 248 1 
357 3 216 2 217 1 322 1 369 1 256 2 64 1 365 2 102 1 4 1 374 1 308 1 164 3 
357 9 358 1 322 1 256 5 80 1 279 1 365 2 4 1 308 3 164 9 165 1 284 2 216 2 217 1 313 1 369 4 64 1 16 1 102 1 66 1 374 7 173 1 150 1 302 1 
357 9 358 1 322 1 256 5 80 1 279 1 365 2 4 1 308 3 164 9 165 1 284 2 216 2 217 1 313 1 369 4 64 1 16 1 102 1 66 1 374 7 173 1 150 1 302 1 
99 1 264 1 259 1 
99 1 190 1 139 2 
143 2 204 1 240 1 299 2 206 2 228 2 244 2 282 2 
153 1 204 1 74 1 78 1 106 1 206 2 228 2 157 1 180 1 234 1 136 1 113 1 182 1 185 1 306 1 367 2 345 1 282 2 140 1 188 1 328 1 143 3 10 1 240 1 144 1 331 2 13 1 347 2 317 1 267 1 299 2 172 1 244 3 301 1 174 2 22 2 202 1 
52 1 311 1 143 1 240 1 299 1 206 1 228 1 244 1 282 1 42 1 
238 1 143 1 311 1 94 1 321 1 25 1 99 1 297 1 259 1 298 1 299 1 199 1 244 1 163 1 
238 1 143 1 311 1 94 1 321 2 206 1 228 1 25 1 99 1 297 2 259 1 298 1 299 1 244 1 282 1 
297 1 366 1 321 1 337 1 62 1 
99 1 220 1 297 2 366 1 259 1 321 2 133 1 337 1 
297 1 366 1 321 1 
311 1 143 1 240 1 321 1 206 1 337 1 228 1 52 1 297 1 40 1 299 1 244 1 282 1 42 1 
99 1 
99 1 297 2 366 1 243 1 259 1 321 2 133 1 337 1 
75 1 115 1 271 1 132 1 273 1 321 5 48 2 292 1 133 1 337 2 254 2 230 1 99 1 276 2 297 5 366 2 259 1 90 1 187 1 
264 1 204 1 
310 1 143 2 204 2 206 1 228 1 299 2 244 2 282 1 213 1 
242 1 23 1 207 1 
328 1 143 1 204 1 78 1 144 1 136 1 180 1 83 1 113 1 267 1 367 1 172 1 244 1 174 1 22 1 202 1 
328 1 8 1 143 2 78 1 206 1 144 1 228 1 180 1 136 1 242 1 113 1 267 1 172 1 299 1 367 1 186 1 244 2 174 1 22 1 202 1 
8 1 143 3 204 1 299 3 206 3 228 3 244 3 282 1 
52 1 311 1 143 1 299 1 206 1 228 1 244 1 
310 1 311 1 143 1 299 1 206 1 228 1 244 1 282 1 213 1 
153 1 204 1 78 1 321 1 106 1 206 3 228 3 180 1 136 1 25 1 113 1 182 1 306 1 367 1 186 1 282 2 140 1 286 1 188 1 328 1 8 1 238 1 310 1 143 4 311 1 10 1 240 1 94 1 144 1 331 1 13 1 347 2 297 1 317 1 267 1 298 1 172 1 299 3 244 4 301 1 174 1 22 1 249 1 202 1 
8 1 147 1 143 2 204 1 299 2 206 1 228 1 199 1 244 2 
238 1 8 2 310 1 311 1 143 3 94 1 321 1 206 3 228 3 25 1 99 1 297 1 183 1 298 1 299 3 186 1 244 3 282 1 249 1 
8 1 310 1 143 2 206 2 228 2 207 1 242 1 299 2 244 2 282 1 
328 1 143 1 204 1 78 1 144 1 136 1 180 1 113 1 267 1 367 1 172 1 244 1 174 1 22 1 202 1 
143 1 204 1 78 1 144 1 177 1 136 1 180 1 267 1 367 1 172 1 281 1 244 1 174 1 22 1 202 1 
153 1 23 2 255 1 207 2 324 1 182 1 306 2 86 1 260 1 210 1 345 2 140 1 214 1 188 1 10 1 331 4 347 2 242 2 370 1 317 1 125 1 151 1 
311 1 143 1 335 1 298 1 299 1 206 1 228 1 244 1 
8 2 310 1 143 5 204 1 206 4 228 4 274 1 147 1 39 1 299 5 186 1 199 1 244 5 282 1 
52 1 311 1 143 2 335 1 299 2 206 2 228 2 244 2 
287 1 329 1 
287 1 329 1 
305 1 178 1 
305 1 178 1 
305 1 178 1 
287 1 329 1 121 1 
287 1 329 1 121 1 
287 1 329 1 85 1 
287 2 329 2 305 1 178 1 6 1 237 1 
287 1 329 1 121 1 
15 1 287 1 329 1 
15 1 287 1 329 1 
15 1 287 1 329 1 
287 2 93 2 329 2 251 1 265 1 321 2 107 1 117 1 196 1 99 1 348 2 297 2 161 2 30 1 200 3 355 2 166 1 237 1 7 2 
204 1 73 1 321 1 24 1 206 2 226 1 228 2 112 1 85 1 87 1 53 1 7 1 287 1 329 1 93 1 143 2 61 1 117 1 348 1 297 1 299 2 244 2 200 1 355 1 
358 1 279 1 165 1 
279 1 194 1 165 1 
37 1 358 2 279 3 1 1 194 1 159 1 
37 1 358 1 364 1 279 2 1 1 194 1 
358 1 37 2 279 2 1 1 194 1 
225 2 46 1 271 1 273 2 48 1 321 5 206 1 228 1 254 1 133 1 337 4 255 1 111 1 52 1 277 1 276 1 366 1 259 1 53 1 139 3 88 2 210 1 282 1 167 1 327 2 190 1 311 1 143 1 240 1 292 3 118 1 99 2 297 5 299 1 40 1 300 1 244 1 125 1 151 1 42 1 
48 1 206 1 337 4 254 1 255 1 111 1 52 1 259 1 53 1 210 1 167 1 311 1 62 2 65 1 125 1 225 2 271 1 273 2 321 5 228 1 133 1 276 1 277 1 366 3 139 3 88 2 282 1 32 1 190 1 143 1 240 1 292 3 99 2 297 5 299 1 40 1 373 2 300 1 244 1 42 1 151 1 
46 1 75 1 225 1 273 2 48 1 321 3 206 1 228 1 337 2 254 1 52 1 276 1 277 1 259 1 53 1 139 2 210 1 88 1 282 1 167 1 327 1 190 1 311 1 143 1 240 1 292 1 118 1 99 2 297 3 299 1 40 1 300 1 244 1 42 1 151 1 
225 1 75 1 46 1 273 2 48 1 321 2 254 1 337 1 276 1 277 1 53 1 139 2 88 1 210 1 167 1 327 1 190 1 218 1 292 1 118 1 99 1 297 2 300 1 151 1 
264 1 78 1 253 1 
78 1 314 1 
95 1 
78 1 267 1 
44 1 78 3 267 1 253 2 309 1 180 1 
78 1 267 1 180 1 
78 1 283 1 
320 1 59 1 192 1 35 2 331 7 255 1 275 1 38 1 296 3 350 1 306 3 371 1 316 1 318 1 114 2 210 1 345 4 
320 1 59 1 192 1 35 2 331 7 255 1 275 1 38 1 296 3 350 1 306 3 371 1 316 1 318 1 114 2 210 1 345 4 
320 1 59 1 192 1 35 2 331 7 255 1 275 1 208 1 38 1 296 3 350 1 306 3 371 1 316 1 318 1 114 2 210 1 345 4 
152 1 320 1 154 1 255 4 179 4 275 2 27 1 306 15 114 3 210 4 345 16 92 1 140 1 188 1 10 1 59 2 192 2 35 3 331 31 347 2 38 2 350 1 296 8 148 1 334 1 316 1 371 5 317 1 67 3 318 1 223 1 300 3 125 3 151 3 
320 1 255 1 109 1 275 1 306 4 114 2 210 1 345 5 140 2 89 1 188 2 10 2 192 1 59 1 35 3 331 9 347 4 38 1 296 4 148 1 317 2 371 1 316 1 318 1 
357 2 358 1 72 1 47 1 322 1 256 1 134 1 110 1 363 1 136 1 159 1 279 2 280 1 365 1 4 1 367 1 343 1 164 2 165 1 57 1 216 1 217 1 194 1 64 1 119 1 374 1 68 1 22 1 174 1 202 1 
357 3 358 1 72 1 47 1 256 1 134 1 110 1 136 1 159 1 279 2 365 1 4 1 367 1 343 1 164 3 165 1 57 1 216 1 217 1 194 1 333 1 64 1 119 1 222 1 352 1 374 2 68 1 22 1 174 1 202 1 
357 2 358 1 72 1 47 1 256 1 134 1 136 1 159 1 279 2 4 1 367 1 343 1 164 2 165 1 57 1 217 1 194 1 333 1 64 1 352 1 374 2 68 1 22 1 174 1 202 1 
57 2 357 1 129 1 216 1 78 1 144 1 136 1 82 1 258 1 64 2 365 1 351 1 222 1 267 1 367 1 343 2 21 1 68 2 164 1 174 1 22 1 43 1 202 1 
357 1 358 1 72 1 47 1 322 1 134 1 110 1 363 1 136 1 159 1 279 2 365 1 367 1 343 1 164 1 165 1 57 1 216 1 194 1 64 1 119 1 352 1 68 1 22 1 174 1 202 1 
215 1 
304 1 48 1 51 2 254 1 259 1 162 1 54 1 263 1 163 1 58 1 311 1 168 4 60 2 267 1 123 1 174 2 22 2 129 1 131 1 271 1 273 2 78 1 321 5 133 3 229 1 231 1 136 1 25 1 81 1 277 1 276 1 325 2 366 6 367 2 139 2 288 2 238 1 190 2 189 2 143 1 191 2 94 1 144 2 292 2 145 1 193 2 99 2 295 1 297 5 298 1 299 1 199 1 244 1 43 1 202 1 
131 1 321 3 133 1 25 1 81 1 325 1 366 2 162 1 163 1 263 1 238 1 58 1 143 1 311 1 168 2 94 1 297 3 243 1 298 1 299 1 244 1 199 1 
131 1 321 3 51 1 133 1 25 1 81 1 366 1 259 1 162 1 163 1 263 1 238 1 58 1 143 1 311 1 168 3 94 1 99 1 297 3 243 1 298 1 299 1 244 1 199 1 
131 1 321 3 133 1 51 1 25 1 81 1 325 1 366 2 259 1 162 1 163 1 263 1 238 1 58 1 143 1 311 1 191 1 168 3 94 1 99 1 297 3 243 1 298 1 299 1 244 1 199 1 
48 1 51 4 254 1 259 5 261 1 162 1 263 1 163 1 58 1 311 1 312 1 168 6 60 2 14 1 270 1 130 1 131 1 271 1 273 1 321 5 133 3 231 1 25 1 81 1 276 1 325 4 366 7 238 1 288 2 189 2 190 2 143 1 191 4 94 1 292 1 193 2 99 5 295 1 297 5 243 1 298 1 299 1 244 1 199 1 
48 1 254 1 51 2 259 1 162 1 263 1 163 1 58 1 311 1 168 4 60 2 123 1 131 1 271 1 273 1 321 4 133 2 231 1 25 1 81 1 276 1 366 4 325 2 139 2 238 1 288 2 189 2 190 2 143 1 191 2 94 1 292 1 193 2 295 1 99 2 297 4 298 1 299 1 244 1 199 1 
270 1 131 1 271 1 273 1 48 1 321 4 51 2 133 2 254 1 231 1 25 1 81 1 276 1 325 2 366 4 259 1 261 1 162 1 163 1 263 1 288 2 238 1 190 2 189 2 58 1 143 1 311 1 191 2 312 1 168 4 94 1 292 1 60 2 193 2 99 1 295 1 297 4 298 1 299 1 244 1 199 1 
270 1 131 1 271 1 273 1 48 1 321 4 51 2 133 2 254 1 231 1 25 1 81 1 276 1 325 2 366 4 259 1 261 1 162 1 163 1 263 1 288 2 238 1 190 2 189 2 58 1 143 1 311 1 191 2 312 1 168 4 94 1 292 1 60 2 193 2 99 1 295 1 297 4 298 1 299 1 244 1 199 1 
270 1 131 1 271 1 273 1 48 1 321 4 51 2 133 2 254 1 25 1 81 1 276 1 325 2 366 4 259 1 162 1 139 2 5 1 163 1 263 1 141 2 238 1 189 2 58 1 143 1 311 1 191 2 168 4 94 1 292 1 193 2 99 1 36 2 295 1 297 4 298 1 299 1 20 1 244 1 199 1 41 1 
270 1 131 1 271 1 273 1 48 1 321 4 133 2 254 1 51 3 231 1 25 1 81 1 276 1 325 3 366 5 259 1 261 1 162 1 163 1 263 1 288 2 238 1 190 2 189 2 58 1 143 1 311 1 312 1 191 3 168 5 94 1 292 1 60 2 193 2 99 1 295 1 14 1 297 4 298 1 299 1 244 1 199 1 
270 1 131 1 271 1 273 1 48 1 321 4 133 2 254 1 51 3 231 1 25 1 81 1 276 1 325 3 366 5 259 1 261 1 162 1 163 1 263 1 288 2 238 1 190 2 189 2 58 1 143 1 311 1 312 1 191 3 168 5 94 1 292 1 60 2 193 2 99 1 295 1 14 1 297 4 298 1 299 1 244 1 199 1 
48 1 254 1 51 2 259 1 162 1 263 1 163 1 58 1 311 1 168 4 123 1 131 1 271 1 273 1 321 4 133 2 25 1 81 1 276 1 366 4 325 2 139 2 141 2 238 1 189 2 143 1 191 2 94 1 292 1 193 2 295 1 36 2 99 1 297 4 298 1 299 1 244 1 199 1 41 1 
153 1 320 1 204 2 23 1 255 1 207 1 275 1 182 1 306 3 260 1 114 1 210 1 345 3 140 1 188 1 264 1 10 1 59 1 35 2 331 6 242 1 347 2 296 2 316 1 317 1 318 1 
152 1 153 1 204 1 23 10 154 1 76 1 2 1 106 1 50 1 179 3 135 1 207 3 182 2 185 1 306 4 210 2 345 8 140 2 188 2 10 2 331 12 347 4 242 10 100 1 296 1 317 2 371 1 67 3 300 2 151 2 
153 1 204 1 78 1 206 1 106 1 228 1 207 1 135 1 180 1 136 1 113 1 83 1 182 1 185 1 306 1 367 1 186 1 345 1 140 1 328 1 188 1 8 1 143 2 10 1 116 1 144 1 331 2 347 2 317 1 267 1 172 1 299 1 268 1 244 2 245 1 22 1 174 1 202 1 
153 2 205 1 106 1 206 1 207 2 158 1 113 1 306 2 210 1 345 3 8 1 10 2 13 1 347 4 317 2 267 1 172 1 19 1 22 1 174 1 70 1 319 1 23 2 78 1 228 1 135 1 136 1 180 1 182 2 367 1 186 1 140 2 188 2 328 1 143 2 144 1 35 1 331 5 242 2 296 1 299 1 300 1 244 2 151 1 202 1 
153 2 203 1 0 1 129 1 105 1 78 3 206 1 106 1 228 1 136 2 234 2 84 1 280 1 182 2 185 1 306 1 260 1 367 8 345 1 140 2 188 2 8 1 143 1 10 2 144 2 331 2 146 1 347 4 317 2 352 1 267 2 299 1 354 1 244 1 22 8 174 7 43 1 269 1 202 2 
153 1 23 1 206 1 228 1 255 1 207 1 135 1 182 1 306 2 210 1 282 1 345 1 140 1 188 1 310 1 143 1 10 1 35 1 331 3 242 1 347 2 296 1 317 1 299 1 300 1 244 1 125 1 69 1 151 1 
153 1 188 1 23 1 10 1 331 2 207 1 242 1 347 2 182 1 317 1 86 1 260 1 210 1 345 2 140 1 151 1 
153 1 188 1 23 1 10 1 35 1 331 2 255 1 207 1 242 1 347 2 296 1 370 1 182 1 317 1 306 2 260 1 125 1 140 1 
153 1 188 1 23 1 10 1 331 2 207 1 242 1 347 2 182 1 317 1 260 1 300 1 210 1 345 2 140 1 151 1 
153 1 188 1 0 1 23 1 10 1 331 2 207 1 242 1 347 2 182 1 317 1 86 1 210 1 345 2 140 1 151 1 
153 1 188 1 0 1 23 1 10 1 35 1 331 2 255 1 207 1 242 1 347 2 296 1 370 1 182 1 317 1 306 2 125 1 140 1 
153 1 188 1 0 1 23 1 10 1 331 2 207 1 242 1 347 2 182 1 317 1 300 1 210 1 345 2 140 1 151 1 
153 1 188 1 23 1 10 1 331 2 207 1 242 1 347 2 182 1 317 1 300 1 210 1 345 2 140 1 151 1 
153 1 204 1 78 1 106 1 180 1 136 1 113 1 182 1 185 1 306 1 367 1 345 1 140 1 328 1 188 1 143 1 10 1 144 1 331 2 13 1 347 2 317 1 267 1 172 1 244 1 22 1 174 1 202 1 
153 1 204 1 272 1 78 1 106 1 177 1 180 1 136 1 182 1 185 1 306 1 367 1 281 1 345 1 140 1 188 1 143 1 10 1 144 1 331 2 347 2 317 1 267 1 172 1 244 1 22 1 174 1 202 1 
153 1 188 1 23 1 10 1 331 2 207 1 135 1 242 1 347 2 182 1 317 1 300 1 210 1 345 2 140 1 151 1 
153 1 23 1 78 1 207 1 180 1 136 1 158 1 113 1 280 1 182 1 367 1 210 1 345 2 140 1 328 1 188 1 143 1 10 1 331 2 13 1 242 1 347 2 317 1 267 1 172 1 300 1 244 1 151 1 22 1 174 1 202 1 
153 1 23 1 206 1 228 1 255 1 135 1 235 1 182 1 306 1 210 1 282 1 345 2 140 1 188 1 310 1 143 1 10 1 331 3 347 2 242 1 317 1 299 1 300 1 244 1 125 1 151 1 
152 1 154 1 361 1 255 2 179 2 160 1 79 1 278 1 306 8 210 2 345 7 140 2 89 1 188 2 330 1 10 2 97 1 331 15 170 2 347 4 296 1 317 2 371 1 149 1 67 1 300 2 125 2 151 2 
152 1 154 1 361 1 255 2 179 2 160 1 79 1 278 1 306 8 210 2 345 7 140 2 89 1 188 2 330 1 10 2 97 1 331 15 170 2 347 4 296 1 317 2 371 1 149 1 67 1 300 2 125 2 151 2 
152 2 320 1 154 1 49 1 361 1 255 3 179 3 275 1 160 1 79 1 278 1 26 1 306 15 114 1 210 5 344 1 345 18 31 1 140 2 89 1 188 2 330 1 266 1 10 2 59 1 97 1 35 2 331 33 170 4 347 4 296 4 148 1 316 1 371 2 317 2 67 2 318 1 300 4 125 2 104 1 151 4 
152 1 45 1 154 1 361 1 255 1 179 2 79 1 278 1 306 5 210 2 345 6 140 2 89 1 188 2 330 1 10 2 97 1 331 11 170 1 347 4 296 1 317 2 371 1 149 1 67 1 300 2 125 1 151 2 
152 2 49 1 361 1 255 1 179 2 160 1 79 1 278 2 26 1 306 9 344 1 210 3 345 12 31 1 140 2 89 1 188 2 330 1 266 1 10 2 97 2 35 1 331 21 170 3 347 4 296 1 148 1 317 2 67 2 300 3 125 1 104 1 151 3 
303 1 287 1 93 1 329 1 98 1 332 1 348 1 372 1 355 1 7 1 
112 1 85 1 
287 1 348 1 329 1 93 1 339 1 294 1 108 1 355 1 7 1 
287 1 93 1 329 1 251 1 265 1 321 1 107 1 117 1 196 1 99 1 348 1 297 1 161 1 200 2 355 1 166 1 237 1 7 1 
287 1 93 1 329 1 251 1 265 1 321 1 107 1 117 1 196 1 99 1 348 1 297 1 161 1 200 2 355 1 166 1 237 1 7 1 
287 1 93 1 329 1 251 1 265 1 321 1 107 1 117 1 196 1 99 1 348 1 297 1 161 1 200 2 355 1 166 1 237 1 7 1 
121 1 368 1 6 1 
121 1 368 1 6 1 
15 1 307 1 
15 1 307 1 6 1 
73 1 61 1 
204 1 73 1 321 1 24 1 226 1 206 2 337 1 228 2 340 1 112 1 85 1 161 1 87 1 53 1 7 1 287 1 329 1 93 1 143 2 61 1 196 1 348 1 297 1 299 2 244 2 200 1 355 1 
121 1 368 1 
15 1 307 1 6 1 
153 1 224 1 78 1 106 1 135 1 136 1 234 2 182 1 209 1 185 1 306 1 367 2 345 1 140 1 188 1 143 2 10 1 219 1 331 2 146 1 347 2 349 1 317 1 267 1 299 2 244 2 22 2 174 2 202 1 269 1 356 1 
57 1 358 1 359 1 72 1 11 1 194 1 134 1 110 1 136 1 159 1 279 2 280 1 352 1 367 2 124 1 165 1 174 2 22 2 202 1 
57 1 358 1 72 1 11 1 194 1 134 1 110 1 136 1 159 1 279 2 352 1 367 1 165 1 174 1 22 1 236 1 202 1 
57 1 129 1 78 1 144 1 136 1 82 1 267 1 367 1 124 1 174 1 22 1 128 1 43 1 202 1 
57 1 358 1 359 1 72 1 11 1 194 1 134 1 110 1 136 1 159 1 279 2 352 1 367 1 124 1 165 1 174 1 22 1 202 1 
289 1 
99 1 264 1 259 1 273 1 292 1 230 1 90 1 
271 1 273 1 48 1 321 1 254 1 133 1 231 1 276 1 366 1 259 1 139 1 288 1 190 1 292 1 60 1 99 2 297 1 
225 2 271 2 273 3 205 1 78 4 321 2 253 1 48 2 133 1 254 2 323 1 180 1 136 1 181 1 276 2 277 1 366 2 367 1 342 1 138 1 139 4 210 1 88 2 309 1 326 1 238 1 190 2 144 1 314 2 292 2 99 2 197 1 297 2 267 1 300 1 377 1 151 1 22 1 174 1 127 1 202 2 
152 1 225 5 271 2 252 1 273 5 321 1 48 2 49 1 133 1 254 2 255 2 179 1 277 1 276 2 26 1 137 1 366 1 259 2 139 6 88 5 344 1 210 2 54 1 190 3 266 1 292 8 346 1 99 5 297 1 67 1 300 2 104 1 125 2 377 2 151 2 
320 1 271 1 273 2 48 1 321 1 206 1 254 1 228 1 255 1 275 1 52 1 276 1 184 1 137 1 210 2 282 1 311 1 143 1 312 1 240 1 59 1 292 2 297 1 40 1 299 1 244 1 377 2 42 1 
271 1 273 1 48 1 254 1 292 1 230 1 99 1 276 1 259 1 90 1 
190 1 225 1 273 2 99 1 300 1 139 2 210 1 88 1 151 1 
99 1 297 1 366 1 259 1 321 1 133 1 
129 1 304 1 75 1 271 1 78 1 273 2 48 2 321 3 360 2 229 1 254 2 133 2 156 1 136 1 276 2 277 2 366 4 367 4 54 2 142 1 144 2 292 2 297 3 267 1 22 4 174 4 247 1 43 1 202 1 
153 1 204 1 78 1 106 1 206 2 228 2 136 1 180 1 113 1 182 1 306 1 367 1 282 2 140 1 188 1 328 1 143 3 10 1 240 1 144 1 331 1 13 1 347 2 317 1 267 1 299 2 172 1 244 3 301 1 22 1 174 1 202 1 
190 2 225 2 271 1 273 2 48 1 254 1 292 1 99 4 276 1 277 1 259 2 114 1 139 4 88 2 54 1 
348 1 285 1 7 1 
348 1 285 1 7 1 
348 1 61 1 166 1 201 1 7 1 
348 1 285 1 7 1 
348 1 91 1 7 1 
348 1 91 1 7 1 
348 1 91 1 7 1 
348 1 7 1 
287 1 329 1 
152 1 320 1 255 1 179 1 275 1 26 1 306 4 114 1 210 1 345 4 140 1 89 1 188 1 10 1 59 1 35 2 331 8 347 2 296 2 317 1 316 1 67 1 318 1 
152 1 320 1 154 1 255 1 179 2 275 1 257 1 26 1 306 5 114 1 210 2 345 6 89 1 140 2 188 2 10 2 59 1 35 2 331 11 347 4 296 3 316 1 317 2 371 1 67 1 318 1 300 1 151 1 
152 1 320 1 49 1 255 2 179 1 275 1 257 1 26 1 306 8 114 1 344 1 210 3 345 9 140 3 89 1 188 3 10 3 266 1 59 1 35 3 331 17 347 6 296 4 148 1 316 1 317 3 371 1 67 1 318 1 300 2 125 1 104 1 151 2 
152 1 320 2 49 1 255 4 179 1 275 2 257 1 26 1 184 1 306 11 114 1 344 1 210 5 345 13 140 3 89 1 188 3 10 3 266 1 59 2 35 4 331 24 347 6 296 7 148 1 371 3 316 1 317 3 67 1 318 1 300 2 104 1 125 1 151 2 
152 1 320 1 255 1 179 1 275 1 26 1 306 4 114 1 210 1 345 4 140 1 89 1 188 1 10 1 59 1 35 2 331 8 347 2 296 2 317 1 316 1 67 1 318 1 
152 1 49 1 255 1 179 1 26 1 306 5 344 1 210 2 345 6 140 2 89 1 188 2 10 2 266 1 35 1 331 11 347 4 296 2 148 1 317 2 371 1 67 1 300 2 125 1 104 1 151 2 
152 1 49 1 255 1 179 1 257 1 26 1 306 5 344 1 210 2 345 6 140 3 89 1 188 3 10 3 266 1 35 1 331 11 347 6 296 1 148 1 317 3 67 1 300 2 125 1 104 1 151 2 
152 1 49 1 255 1 179 1 26 1 306 5 344 1 210 3 345 9 89 1 140 4 188 4 10 4 266 1 35 2 331 14 347 8 296 5 148 2 371 3 317 4 149 1 67 1 300 3 125 1 104 1 151 3 
320 1 59 3 35 3 331 7 255 1 275 3 296 6 306 4 316 2 371 3 318 1 210 1 345 3 
152 1 49 1 255 1 179 1 26 1 306 5 344 1 210 2 345 6 89 1 140 3 188 3 10 3 266 1 35 1 331 11 347 6 296 1 148 1 317 3 149 1 67 1 300 2 125 1 104 1 151 2 
188 2 320 1 10 2 59 1 35 2 331 8 255 1 275 1 347 4 296 3 148 1 306 4 371 1 317 2 316 1 318 1 114 1 210 1 345 4 140 2 
264 1 320 1 59 1 35 2 331 6 255 1 275 1 296 2 306 3 316 1 318 1 114 1 210 1 345 3 
188 1 10 1 331 2 257 1 347 2 317 1 300 1 210 1 345 2 140 1 151 1 
152 1 154 1 331 7 255 1 179 2 296 1 306 4 371 1 67 1 300 1 125 1 210 1 345 3 151 1 
320 2 76 1 154 1 50 1 255 4 179 2 275 2 184 1 306 10 114 1 210 5 345 13 140 1 188 1 10 1 59 2 35 4 331 23 347 2 296 8 148 1 316 1 371 4 317 1 67 2 318 1 300 2 125 1 151 2 
306 1 331 1 179 1 
67 1 331 1 345 1 
205 1 331 6 255 1 296 1 306 3 371 1 300 1 210 1 125 1 345 3 151 1 
152 1 49 1 255 1 179 1 26 1 306 5 344 1 210 2 345 6 140 2 89 1 188 2 10 2 266 1 35 1 331 11 347 4 296 2 148 1 317 2 371 1 67 1 300 2 125 1 104 1 151 2 
320 1 59 1 35 1 331 6 255 1 275 1 296 2 306 3 371 1 210 1 345 3 
188 1 10 1 59 1 35 1 331 3 275 1 347 2 296 2 148 1 371 1 316 1 306 2 317 1 353 1 318 1 345 1 140 1 
188 1 320 1 10 1 59 2 35 3 331 10 255 2 275 2 347 2 296 5 184 1 317 1 371 2 306 5 210 2 345 5 140 1 89 1 
188 1 10 1 331 2 347 2 317 1 210 1 345 2 89 1 140 1 151 1 
188 1 10 1 331 2 347 2 317 1 300 1 210 1 345 2 89 1 140 1 151 1 
188 3 10 3 59 1 35 1 331 3 275 1 347 6 296 2 148 1 306 2 317 3 371 1 149 1 353 1 345 1 89 1 140 3 
152 1 320 2 154 1 255 5 179 4 275 3 257 1 306 18 114 1 210 5 345 16 140 5 89 1 92 1 188 5 10 5 59 3 35 4 331 34 347 10 296 9 148 2 334 1 316 1 317 5 371 5 149 1 67 3 318 1 353 1 223 1 300 3 125 3 151 3 
147 1 143 1 204 1 299 1 244 1 199 1 71 1 
143 1 204 1 338 1 147 1 221 1 29 1 299 1 341 1 199 1 244 1 376 1 71 1 
129 1 264 1 78 1 267 1 367 1 144 1 22 1 174 1 136 1 43 1 202 1 
8 1 143 2 204 1 78 1 206 1 144 1 228 1 180 1 136 1 113 1 267 1 172 1 299 1 367 1 244 2 174 1 22 1 202 1 
8 1 311 1 143 2 204 1 94 1 78 3 206 2 228 1 360 1 180 2 136 1 113 1 298 1 267 2 172 1 299 2 367 1 244 2 126 1 283 1 174 1 22 1 202 1 
8 1 311 1 143 2 204 1 94 1 78 3 206 2 228 1 360 1 177 1 293 1 180 2 136 1 298 1 267 2 172 1 299 2 367 2 244 2 126 1 283 1 174 2 22 2 202 1 
238 1 78 4 321 2 169 1 253 1 144 1 360 1 314 1 293 1 180 1 136 1 99 1 297 2 366 1 259 1 267 1 367 3 126 1 211 1 283 1 174 3 22 3 202 1 
238 1 78 4 321 2 253 1 144 1 360 1 314 1 293 1 180 1 136 1 99 1 297 2 366 1 259 1 267 1 367 3 126 1 283 1 174 3 22 3 127 1 202 1 
84 1 367 1 22 1 174 1 136 1 202 1 
203 1 105 1 78 3 144 2 195 1 234 1 180 1 136 2 84 1 280 1 101 1 352 1 267 2 367 7 375 1 354 1 309 1 174 6 22 7 269 1 202 3 
153 2 204 2 206 1 255 1 207 1 158 1 113 1 306 3 114 1 210 1 345 3 8 1 10 2 59 1 13 1 347 4 317 2 316 1 267 1 172 1 318 1 22 1 174 1 319 1 224 1 320 1 23 1 78 1 228 1 135 1 136 1 180 1 275 1 280 1 182 2 367 1 140 2 328 1 188 2 143 2 35 2 331 6 242 1 296 2 299 1 244 2 202 1 
271 2 273 1 78 2 48 2 321 3 253 1 254 2 337 1 133 1 230 1 323 1 276 2 366 2 259 1 367 1 90 1 142 1 326 1 238 1 144 1 292 1 314 1 99 1 197 1 297 3 22 1 174 1 127 1 
78 2 253 1 180 1 136 1 84 1 280 1 267 1 367 2 342 1 309 1 174 2 22 2 202 2 
129 1 336 1 78 1 144 1 293 1 136 1 280 1 267 1 367 4 174 4 22 4 43 1 202 1 
34 1 96 1 78 1 360 1 315 1 195 1 180 1 136 1 101 1 267 1 367 2 174 2 22 2 202 2 
279 1 72 1 367 1 144 1 194 1 165 1 22 1 174 1 136 1 202 1 
78 1 219 1 136 1 280 1 352 1 267 1 367 2 174 2 22 2 269 1 202 1 
129 1 203 1 336 1 78 3 144 1 360 1 136 2 280 1 267 2 367 5 354 1 174 4 22 5 43 1 269 1 202 2 
129 1 203 1 336 1 78 3 144 1 360 1 362 1 136 2 280 1 267 2 367 5 174 4 22 5 43 1 269 1 202 2 
8 1 143 2 204 1 78 1 206 1 144 1 228 1 177 1 180 1 136 1 267 1 172 1 299 1 367 1 244 2 174 1 22 1 202 1 
78 1 360 1 195 1 180 1 136 1 101 1 267 1 367 1 375 1 309 1 174 1 22 1 202 2 
171 1 175 1 176 1 204 1 55 1 
238 1 175 2 311 1 176 1 204 1 94 1 321 2 337 1 291 1 63 1 25 1 99 1 297 2 171 2 259 1 298 1 103 1 55 2 249 1 
175 1 176 1 143 1 171 1 349 1 209 1 299 1 244 1 356 1 
176 1 103 1 291 1 
264 1 217 1 4 1 256 1 
357 1 365 1 216 1 217 1 4 1 256 1 164 1 
64 1 343 1 164 1 
357 3 216 1 9 2 217 1 3 1 322 1 256 1 365 1 28 1 18 1 4 1 164 3 
357 2 365 1 216 1 217 1 4 1 374 1 256 1 164 2 284 1 
357 1 358 1 279 1 365 1 216 1 313 1 322 1 256 1 369 1 164 1 165 1 
357 1 365 1 216 1 4 1 322 1 256 1 164 1 
357 1 365 1 216 1 217 1 4 2 322 1 164 1 
357 2 216 2 322 1 256 1 233 1 365 2 4 1 246 1 164 2 212 1 
357 3 216 1 217 1 322 1 369 1 256 2 365 1 4 1 374 2 308 1 150 1 164 3 302 1 
357 2 250 1 358 1 216 1 217 1 194 1 322 1 256 1 159 1 279 2 365 1 4 1 374 1 164 2 165 1 
357 4 216 2 217 1 322 1 369 1 256 2 80 1 365 2 4 1 374 2 308 1 164 4 284 1 
357 1 365 1 216 1 217 1 4 1 322 1 256 1 164 1 
357 4 9 1 216 1 217 2 369 1 256 3 365 1 28 1 18 1 4 2 120 1 374 2 308 1 164 4 
357 2 216 1 217 1 227 1 322 1 256 1 365 1 4 1 66 1 374 1 164 2 56 1 
357 3 216 1 9 2 217 1 322 1 256 1 232 1 365 1 28 2 18 1 4 1 164 3 
239 1 17 1 77 2 256 2 
357 1 365 1 216 1 122 1 322 1 164 1 
357 2 365 1 216 1 217 1 4 1 374 1 322 1 256 1 164 2 302 1 
12 1 
357 1 365 1 216 1 217 1 4 1 322 1 256 1 164 1 
357 3 9 1 365 1 216 1 217 1 4 1 374 1 322 1 256 1 164 3 302 1 
120 1 308 1 256 1 369 1 
4 1 256 1 

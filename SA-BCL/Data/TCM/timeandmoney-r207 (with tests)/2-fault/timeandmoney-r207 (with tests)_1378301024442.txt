#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 9 223 1 249 5 368 1 7 1 228 1 328 1 211 1 350 1 351 1 329 2 303 2 182 1 184 3 306 1 235 6 67 1 357 9 189 1 72 2 359 2 190 4 339 1 314 1 118 2 272 2 75 1 122 2 
23 9 223 1 249 5 368 1 7 1 228 1 328 1 211 1 350 1 351 1 329 2 303 2 182 1 184 3 306 1 235 6 67 1 357 9 189 1 359 2 190 4 72 2 339 1 314 1 118 2 272 2 75 1 122 2 
23 10 223 1 249 6 368 1 7 1 228 1 328 1 211 1 350 1 351 1 329 2 303 2 182 1 184 4 306 1 235 7 67 1 357 10 189 1 359 2 190 5 72 2 339 1 314 1 118 2 272 2 75 1 122 2 
23 7 223 1 249 4 368 1 7 1 228 1 328 1 350 1 351 1 329 2 303 2 182 1 184 2 306 1 235 4 67 1 357 7 189 1 359 2 190 3 72 1 339 1 314 1 118 2 272 2 75 1 122 2 
23 4 184 1 249 3 235 3 67 1 357 4 189 1 72 2 190 2 359 1 211 1 339 1 329 1 314 1 272 1 75 1 303 1 122 1 
156 1 23 2 249 1 67 1 252 1 357 2 189 1 368 1 7 1 44 1 329 1 314 1 118 1 272 1 303 1 122 1 
23 3 184 1 249 2 235 1 67 1 357 3 189 1 190 1 314 1 118 1 303 2 122 2 182 1 
23 9 223 1 249 5 281 1 328 1 211 1 329 1 303 2 182 1 184 3 235 7 9 1 67 1 357 9 189 1 190 4 72 2 359 1 339 1 314 1 118 1 272 1 75 1 122 2 
23 9 223 1 249 5 281 1 328 1 211 1 329 1 303 2 182 1 184 3 235 7 9 1 67 1 357 9 189 1 190 4 72 2 359 1 339 1 314 1 118 1 272 1 75 1 122 2 
246 1 247 1 265 1 
101 2 246 1 84 1 
1 2 131 1 335 1 316 2 285 2 332 2 153 2 309 2 
21 1 1 2 322 1 50 1 83 1 250 2 224 1 172 1 326 1 256 1 31 1 30 2 285 2 332 2 215 1 153 3 234 1 354 1 34 1 131 1 262 1 263 1 185 1 335 1 36 1 290 1 336 2 42 2 69 1 309 3 269 1 295 1 360 2 165 1 222 1 316 2 197 1 
333 1 1 1 131 1 158 1 376 1 316 1 285 1 332 1 153 1 309 1 
333 1 261 1 246 1 375 1 65 1 265 1 309 1 100 1 71 1 126 1 18 1 340 1 285 1 153 1 
1 1 333 1 261 1 246 1 375 2 65 2 265 1 309 1 100 1 71 1 18 1 316 1 285 1 332 1 153 1 
33 1 375 1 35 1 65 1 59 1 
33 1 246 1 16 1 375 2 35 1 65 2 265 1 317 1 
33 1 375 1 65 1 
333 1 1 1 131 1 375 1 158 1 35 1 65 1 52 1 376 1 309 1 316 1 285 1 332 1 153 1 
246 1 
33 1 246 1 16 1 375 2 35 1 65 2 265 1 105 1 
33 2 246 1 144 1 355 1 375 5 35 2 65 5 107 1 265 1 125 1 311 1 16 1 103 1 273 1 240 2 112 1 181 2 49 1 166 2 
247 1 335 1 
1 1 170 1 335 2 309 2 255 1 316 1 285 2 332 1 153 2 
136 1 26 1 10 1 
234 1 354 1 34 1 262 1 185 1 263 1 335 1 336 1 266 1 309 1 172 1 269 1 360 1 30 1 31 1 153 1 
34 1 354 1 234 1 262 1 263 1 185 1 26 1 336 1 309 2 172 1 269 1 31 1 360 1 30 1 89 1 316 1 285 1 369 1 332 1 153 2 
1 1 53 1 207 1 335 1 309 5 255 1 89 2 129 1 340 1 316 4 285 5 369 1 332 4 153 5 
333 1 304 1 376 1 316 2 285 2 332 2 153 2 309 2 
1 1 89 1 335 1 316 3 285 3 332 3 153 3 309 3 
333 1 376 1 316 1 285 1 332 1 153 1 309 1 
255 1 333 1 1 1 170 1 316 1 285 1 332 1 153 1 309 1 
21 1 1 2 83 1 250 2 172 1 255 1 326 1 31 1 30 1 128 1 89 1 285 3 369 1 332 3 153 4 34 1 354 1 234 1 333 1 131 1 261 1 262 1 375 1 263 1 185 1 218 1 65 1 335 1 36 1 290 1 336 1 42 1 69 1 309 4 100 1 269 1 71 1 295 1 360 1 165 1 18 1 222 1 316 3 197 1 
89 1 340 1 335 1 53 1 316 1 285 2 332 1 153 2 309 2 
1 1 333 1 261 1 246 1 375 1 218 1 65 1 309 3 100 1 255 1 71 1 89 2 18 1 284 1 316 3 285 3 369 1 332 3 153 3 
1 1 26 1 309 2 136 1 255 1 89 1 316 2 285 2 332 2 153 2 
234 1 354 1 34 1 262 1 185 1 263 1 335 1 336 1 309 1 172 1 269 1 360 1 30 1 31 1 153 1 
234 1 354 1 34 1 262 1 263 1 148 1 335 1 336 1 309 1 172 1 360 1 30 1 31 1 361 1 153 1 
322 2 244 1 83 2 323 1 26 2 250 2 124 1 226 1 208 1 173 1 326 1 61 1 10 2 36 1 290 1 42 4 161 1 136 2 46 1 295 1 165 1 238 1 363 1 197 1 
333 1 304 1 18 1 316 1 285 1 332 1 153 1 309 1 
378 1 186 1 
378 1 186 1 
88 1 195 1 
88 1 195 1 
88 1 195 1 
147 1 378 1 186 1 
147 1 378 1 186 1 
57 1 378 1 186 1 
88 1 97 1 220 1 195 1 378 2 186 2 
147 1 378 1 186 1 
109 1 378 1 186 1 
109 1 378 1 186 1 
109 1 378 1 186 1 
123 1 320 1 55 1 86 1 57 1 285 2 332 2 153 2 375 1 65 1 335 1 66 1 186 1 135 1 309 2 237 1 293 1 139 1 316 2 74 1 378 1 120 1 381 1 78 1 
123 2 200 1 246 1 375 2 278 2 97 1 65 2 366 1 5 1 308 1 186 2 253 1 135 2 237 3 139 2 120 2 378 2 381 1 20 1 
359 1 329 1 272 1 
44 1 329 1 272 1 
44 1 319 1 359 2 25 1 230 1 329 3 
44 1 319 1 359 1 230 1 329 2 11 1 
44 1 319 2 359 1 230 1 329 2 
198 1 246 2 3 1 108 1 208 1 84 1 54 1 55 1 348 2 173 1 325 2 174 1 61 1 181 1 33 1 375 5 113 1 35 4 65 5 265 1 268 1 293 1 101 3 311 2 16 1 238 1 240 1 273 1 74 1 104 2 166 1 49 3 
198 2 246 5 107 1 3 3 208 3 84 3 173 3 325 6 127 1 177 5 59 5 61 3 181 2 216 1 33 6 375 9 113 2 35 7 65 9 265 1 268 1 43 1 137 1 101 9 15 1 311 6 16 1 238 3 273 1 240 2 74 4 104 6 341 1 166 2 49 8 
198 1 246 3 107 1 3 1 108 1 208 1 84 2 54 1 348 1 173 1 325 2 61 1 181 1 375 3 113 1 35 2 65 3 265 1 101 4 311 2 238 1 240 1 74 1 104 2 166 1 49 3 
198 1 246 4 107 1 3 2 108 1 208 2 84 3 54 1 348 2 173 2 325 4 127 1 61 2 181 1 216 1 375 4 113 1 35 3 65 4 265 1 101 7 311 4 238 2 240 1 74 2 104 4 341 1 166 1 49 5 
247 1 172 1 233 1 
302 1 172 1 
310 1 
31 1 263 1 172 1 
134 1 172 1 
263 1 172 1 
31 1 210 1 263 1 205 1 233 2 172 3 
322 4 374 1 83 3 114 1 12 1 39 1 124 2 226 3 208 1 42 7 173 1 229 1 296 1 349 2 271 1 298 1 155 1 
322 4 374 1 83 3 114 1 12 1 39 1 124 2 226 3 208 1 42 7 173 1 229 1 296 1 349 2 271 1 298 1 155 1 
322 4 374 1 83 3 114 1 12 1 39 1 124 2 226 3 208 1 42 7 173 1 229 1 296 1 349 2 271 1 298 1 362 1 155 1 
322 11 83 12 51 1 250 4 3 3 124 2 226 6 209 3 208 3 173 3 229 1 349 1 283 1 214 1 231 1 61 3 286 1 155 1 374 1 36 2 39 1 290 2 42 23 164 2 165 2 192 1 296 2 238 3 298 4 196 4 318 1 197 2 
322 5 83 4 250 4 124 3 226 4 208 1 173 1 229 1 349 2 155 1 114 1 36 2 12 1 290 2 39 1 42 9 14 1 164 1 313 1 165 2 296 1 271 1 298 1 197 2 
23 2 248 1 249 1 25 1 30 1 8 1 329 2 330 1 60 1 303 1 372 1 234 1 354 1 235 1 336 1 67 1 115 1 187 1 357 2 189 1 44 1 359 1 116 1 360 1 314 1 272 1 118 1 47 1 315 1 122 1 
23 3 201 1 248 1 249 1 25 1 225 1 30 1 329 2 330 1 60 1 303 1 93 1 234 1 354 1 235 2 336 1 67 1 115 1 187 1 357 3 44 1 359 1 116 1 360 1 314 1 272 1 118 1 47 1 315 1 122 1 
23 2 201 1 249 1 25 1 30 1 329 2 330 1 60 1 93 1 234 1 354 1 235 2 336 1 67 1 115 1 187 1 357 2 44 1 116 1 359 1 360 1 314 1 118 1 272 1 47 1 
23 1 225 1 172 1 30 1 257 1 92 1 303 1 354 1 157 1 234 1 262 1 263 1 219 1 305 1 37 1 336 1 115 2 187 2 357 1 360 1 118 2 47 2 122 1 
23 1 201 1 248 1 25 1 30 1 8 1 329 2 330 1 60 1 303 1 234 1 354 1 336 1 115 1 187 1 357 1 189 1 44 1 359 1 116 1 360 1 272 1 118 1 47 1 315 1 122 1 
358 1 
198 1 143 1 246 2 202 1 206 1 300 1 153 1 354 1 262 2 261 1 263 1 65 5 305 1 265 1 160 2 309 1 71 1 311 2 16 3 360 2 117 1 18 1 19 1 221 2 273 1 166 1 22 2 80 2 168 2 27 1 84 2 172 1 30 2 126 1 179 4 92 1 285 1 180 2 181 1 94 1 33 6 234 1 333 1 375 5 133 1 377 1 336 2 291 2 100 1 101 2 239 1 340 1 240 1 49 2 142 1 
143 1 80 1 126 1 179 2 285 1 153 1 33 2 333 1 261 1 133 1 375 3 65 3 377 1 309 1 100 1 71 1 16 1 117 1 18 1 340 1 105 1 142 1 
143 1 246 1 126 1 179 3 285 1 153 1 33 1 333 1 261 1 133 1 375 3 65 3 377 1 265 1 309 1 160 1 100 1 71 1 16 1 117 1 18 1 340 1 105 1 142 1 
143 1 80 1 168 1 246 1 126 1 179 3 285 1 153 1 33 2 333 1 261 1 133 1 375 3 65 3 377 1 265 1 309 1 160 1 100 1 71 1 16 1 117 1 18 1 340 1 105 1 142 1 
243 1 143 1 246 5 151 1 352 1 153 1 261 1 65 5 265 5 309 1 160 4 71 1 311 1 16 3 117 1 18 1 273 1 221 2 166 1 22 2 80 4 168 4 324 1 84 2 126 1 179 6 285 1 181 1 94 1 180 2 33 7 333 1 375 5 133 1 377 1 291 2 100 1 191 1 239 1 340 1 240 1 105 1 142 1 49 1 
143 1 246 2 202 1 153 1 261 1 65 4 265 1 309 1 160 2 71 1 311 1 16 2 117 1 18 1 273 1 221 2 166 1 22 2 80 2 168 2 84 2 126 1 179 4 285 1 94 1 181 1 180 2 33 4 333 1 375 4 133 1 377 1 291 2 100 1 101 2 239 1 340 1 240 1 142 1 49 1 
22 2 243 1 143 1 80 2 168 2 246 1 84 2 126 1 179 4 151 1 285 1 180 2 94 1 181 1 153 1 33 4 333 1 261 1 133 1 375 4 65 4 377 1 265 1 291 2 160 2 309 1 100 1 71 1 311 1 191 1 16 2 117 1 239 1 18 1 340 1 221 2 273 1 240 1 49 1 166 1 142 1 
22 2 243 1 143 1 80 2 168 2 246 1 84 2 126 1 179 4 151 1 285 1 180 2 94 1 181 1 153 1 33 4 333 1 261 1 133 1 375 4 65 4 377 1 265 1 291 2 160 2 309 1 100 1 71 1 311 1 191 1 16 2 117 1 239 1 18 1 340 1 221 2 273 1 240 1 49 1 166 1 142 1 
143 1 80 2 168 2 246 1 203 2 24 2 279 1 126 1 179 4 151 1 285 1 181 1 259 1 153 1 33 4 333 1 261 1 133 1 375 4 65 4 377 1 265 1 291 2 160 2 309 1 100 1 101 2 71 1 311 1 16 2 117 1 239 1 18 1 340 1 221 2 273 1 240 1 241 1 49 1 166 1 142 1 
22 2 243 1 143 1 80 3 168 3 246 1 324 1 84 2 126 1 179 5 151 1 285 1 180 2 94 1 181 1 153 1 33 5 333 1 261 1 133 1 375 4 65 4 377 1 265 1 291 2 309 1 160 3 100 1 71 1 311 1 191 1 16 2 117 1 239 1 18 1 340 1 221 2 240 1 273 1 49 1 166 1 142 1 
22 2 243 1 143 1 80 3 168 3 246 1 324 1 84 2 126 1 179 5 151 1 285 1 180 2 94 1 181 1 153 1 33 5 333 1 261 1 133 1 375 4 65 4 377 1 265 1 291 2 309 1 160 3 100 1 71 1 311 1 191 1 16 2 117 1 239 1 18 1 340 1 221 2 240 1 273 1 49 1 166 1 142 1 
143 1 246 1 203 2 202 1 259 1 153 1 261 1 65 4 265 1 309 1 160 2 71 1 311 1 16 2 117 1 18 1 273 1 221 2 166 1 80 2 168 2 24 2 126 1 179 4 285 1 181 1 33 4 333 1 375 4 133 1 377 1 291 2 100 1 101 2 239 1 340 1 240 1 142 1 49 1 
322 3 247 1 83 3 26 1 323 1 250 2 124 2 226 2 208 1 173 1 326 1 349 1 155 1 114 1 10 1 36 1 12 1 335 2 290 1 39 1 42 6 136 1 295 1 165 1 271 1 197 1 
199 1 322 13 50 1 83 9 26 16 250 4 3 4 124 2 226 4 209 4 208 2 173 4 326 1 283 2 61 2 258 1 130 1 132 1 10 16 335 1 36 2 290 2 42 22 69 1 292 2 136 6 295 2 192 1 165 2 238 4 298 2 196 4 197 2 
199 1 322 1 50 1 83 1 250 2 172 1 326 1 31 1 30 1 89 1 285 1 369 1 332 1 153 2 34 1 354 1 234 1 63 1 262 1 263 1 185 1 335 1 36 1 336 1 290 1 266 1 42 2 309 2 69 1 136 1 269 1 360 1 295 1 165 1 138 1 316 1 277 1 197 1 
199 1 50 1 251 1 250 6 3 2 208 3 349 1 58 2 61 2 153 3 155 1 260 2 354 2 262 1 114 1 263 2 10 7 12 1 69 1 309 3 269 2 360 1 165 3 271 1 222 2 316 1 322 10 81 2 83 10 26 7 171 2 124 4 226 5 172 2 173 3 326 3 30 1 31 2 89 1 285 1 369 1 332 1 234 2 34 2 288 1 185 2 335 2 36 3 39 1 336 1 290 3 42 20 136 7 295 3 238 2 298 1 197 3 
322 1 50 1 201 1 83 1 323 1 250 4 344 1 365 1 6 1 172 3 227 1 175 1 326 2 256 2 30 8 89 1 285 1 92 1 332 1 153 1 154 1 372 1 354 2 234 2 262 2 263 2 305 1 36 2 38 1 336 8 290 2 42 2 309 1 69 1 360 7 295 2 165 2 316 1 197 2 
1 1 199 1 322 1 83 2 26 1 250 2 3 1 124 1 226 1 208 1 255 1 173 1 326 1 285 1 61 1 332 1 153 1 10 1 36 1 290 1 267 1 42 3 309 1 136 1 295 1 165 1 238 1 316 1 197 1 
322 2 26 1 323 1 10 1 250 2 36 1 290 1 226 1 42 2 161 1 136 1 173 1 326 1 295 1 165 1 238 1 298 1 197 1 
83 2 26 1 323 1 10 1 250 2 36 1 290 1 124 1 226 1 42 2 208 1 136 1 326 1 46 1 295 1 165 1 61 1 197 1 
322 2 83 2 323 1 26 2 250 2 3 1 124 1 226 2 208 1 173 1 326 1 61 1 10 2 36 1 290 1 42 4 136 2 295 1 238 1 165 1 298 1 197 1 
322 2 26 1 10 1 250 2 36 1 344 1 290 1 226 1 42 2 161 1 136 1 173 1 326 1 295 1 165 1 238 1 298 1 197 1 
83 2 26 1 10 1 250 2 36 1 344 1 290 1 124 1 226 1 42 2 208 1 136 1 326 1 46 1 295 1 165 1 61 1 197 1 
322 2 83 2 26 2 250 2 3 1 344 1 124 1 226 2 208 1 173 1 326 1 61 1 10 2 36 1 290 1 42 4 136 2 295 1 238 1 165 1 298 1 197 1 
322 2 83 2 26 2 250 2 3 1 124 1 226 2 208 1 173 1 326 1 61 1 10 2 36 1 290 1 42 4 136 2 295 1 238 1 165 1 298 1 197 1 
322 1 50 1 83 1 250 2 172 1 326 1 31 1 30 1 153 1 34 1 354 1 234 1 262 1 263 1 185 1 335 1 36 1 336 1 290 1 42 2 309 1 69 1 269 1 360 1 295 1 165 1 222 1 197 1 
167 1 322 1 50 1 83 1 148 1 250 2 172 1 326 1 31 1 30 1 153 1 34 1 354 1 234 1 262 1 263 1 335 1 36 1 336 1 290 1 42 2 309 1 69 1 360 1 295 1 165 1 361 1 197 1 
322 2 199 1 83 2 26 2 250 2 3 1 124 1 226 2 208 1 173 1 326 1 61 1 10 2 36 1 290 1 42 4 136 2 295 1 238 1 165 1 298 1 197 1 
322 2 81 1 83 2 26 2 250 2 3 1 124 1 226 2 208 1 172 1 173 1 326 1 31 1 30 1 61 1 153 1 34 1 354 1 234 1 372 1 185 1 263 1 10 2 36 1 336 1 290 1 42 4 309 1 136 2 269 1 360 1 295 1 238 1 165 1 222 1 298 1 197 1 
1 1 199 1 322 2 83 1 26 1 250 2 3 1 226 1 208 1 255 1 173 1 326 1 285 1 61 1 332 1 153 1 10 1 36 1 290 1 42 3 309 1 136 1 295 1 165 1 238 1 298 1 316 1 275 1 197 1 
321 1 245 1 322 25 145 1 83 21 250 8 3 7 364 1 299 1 124 4 226 10 209 5 208 5 367 1 56 4 173 7 283 2 61 5 353 1 98 1 36 4 290 4 40 2 42 46 292 2 162 1 14 1 294 1 270 1 164 2 192 3 165 4 238 7 194 1 298 6 196 5 141 1 197 4 
321 1 245 1 322 16 145 1 83 17 250 8 3 4 299 1 124 2 226 5 209 2 208 4 367 1 56 4 173 4 283 1 61 4 353 1 98 1 36 4 290 4 40 1 42 33 162 1 14 1 294 1 270 1 164 2 192 2 165 4 238 4 194 1 298 3 196 3 141 1 197 4 
321 1 245 1 322 27 145 1 83 27 250 6 3 7 299 1 124 8 226 14 209 4 208 8 367 1 56 4 173 8 349 1 283 2 61 7 155 1 114 1 98 1 12 1 36 3 39 1 290 3 40 1 42 54 292 2 162 1 14 1 294 1 270 1 164 2 192 2 165 3 238 7 194 1 271 1 298 6 196 4 141 1 197 3 
321 1 245 1 322 15 145 1 83 16 250 8 3 4 124 3 226 6 209 2 208 4 367 1 56 3 173 4 283 1 61 4 353 1 98 1 36 4 290 4 40 1 42 31 162 1 14 1 294 1 270 1 164 2 338 1 192 2 165 4 238 4 194 1 298 3 196 3 141 1 197 4 
321 1 245 1 322 24 145 1 83 22 250 6 3 7 299 1 124 4 226 8 209 4 208 6 367 1 56 4 173 7 283 2 61 6 98 2 36 3 290 3 40 2 42 46 292 2 162 1 14 1 294 1 270 1 164 2 165 3 192 2 238 7 194 1 298 4 196 4 141 1 197 3 
79 1 123 1 200 1 97 1 139 1 378 1 120 1 186 1 135 1 20 1 
86 1 57 1 
334 1 123 1 90 1 139 1 378 1 120 1 186 1 135 1 28 1 
147 1 213 1 
109 1 220 1 307 1 
123 1 200 1 246 1 375 1 278 1 97 1 65 1 366 1 5 1 308 1 186 1 135 1 237 2 139 1 120 1 378 1 381 1 20 1 
123 1 200 1 246 1 375 1 278 1 97 1 65 1 366 1 5 1 308 1 186 1 135 1 237 2 139 1 120 1 378 1 381 1 20 1 
123 1 200 1 246 1 375 1 278 1 97 1 65 1 366 1 5 1 308 1 186 1 135 1 237 2 139 1 120 1 378 1 381 1 20 1 
147 1 213 1 220 1 
147 1 213 1 220 1 
109 1 307 1 
109 1 220 1 307 1 
320 1 66 1 
123 1 320 1 278 1 366 1 55 1 86 1 57 1 285 2 332 2 153 2 62 1 375 1 35 1 65 1 335 1 66 1 186 1 135 1 309 2 237 1 293 1 139 1 74 1 316 2 378 1 120 1 78 1 
199 1 322 1 50 1 83 1 250 2 172 1 227 1 326 1 256 2 30 2 176 1 178 1 285 2 153 2 154 1 370 1 371 1 354 1 234 1 263 1 36 1 336 2 290 1 41 1 42 2 309 2 69 1 295 1 360 2 165 1 197 1 
354 1 234 1 372 1 159 1 201 1 25 1 289 1 336 2 4 1 44 1 359 1 116 1 360 2 30 2 329 2 272 1 47 1 315 1 60 1 
234 1 354 1 201 1 25 1 336 1 4 1 44 1 359 1 116 1 360 1 30 1 329 2 272 1 47 1 140 1 315 1 60 1 
354 1 234 1 157 1 262 1 159 1 263 1 305 1 336 1 172 1 360 1 30 1 301 1 47 1 92 1 
354 1 234 1 159 1 201 1 25 1 289 1 336 1 4 1 44 1 359 1 116 1 360 1 30 1 329 2 272 1 47 1 315 1 60 1 
183 1 
311 1 246 1 144 1 355 1 247 1 265 1 49 1 
22 1 246 2 84 1 94 1 181 1 180 1 33 1 375 1 65 1 265 1 101 1 311 1 16 1 240 1 273 1 49 1 166 1 
198 2 2 2 144 1 246 8 3 2 346 2 208 2 210 1 149 2 302 3 61 2 152 2 354 4 262 1 261 2 355 1 263 3 65 5 265 2 311 8 360 3 16 3 273 4 276 1 166 4 171 2 27 1 84 6 172 10 173 2 325 6 29 1 31 3 30 3 32 1 91 2 181 4 233 2 33 5 372 1 234 3 96 1 375 5 134 2 336 3 337 3 45 1 101 12 238 2 240 4 242 2 104 6 106 2 49 9 
198 1 245 1 246 7 27 1 3 4 84 5 209 2 208 4 367 1 173 4 325 8 283 1 91 3 61 4 181 2 33 1 375 1 65 1 265 2 292 1 337 1 162 1 294 1 101 10 311 8 16 1 192 1 238 4 194 1 119 1 240 2 273 2 104 8 196 2 379 1 49 13 166 2 
1 1 52 1 208 1 173 2 91 2 285 1 181 1 332 1 153 1 155 1 333 1 131 1 375 1 158 1 65 1 376 1 12 1 39 1 309 1 337 1 191 1 311 2 240 1 273 1 76 1 316 1 166 1 49 2 
355 1 144 1 246 1 265 1 311 1 273 1 240 1 181 1 166 1 49 1 
246 5 171 1 3 2 84 5 208 2 337 1 173 2 325 5 101 10 311 5 238 2 91 2 104 5 61 2 49 5 
33 1 246 1 375 1 16 1 65 1 265 1 
198 2 342 1 107 1 206 1 27 2 172 1 30 4 300 1 32 2 92 1 181 2 33 4 354 1 234 1 262 2 375 3 263 1 65 3 305 1 336 4 311 2 360 4 16 2 73 1 240 2 273 1 276 1 166 2 49 2 
21 1 1 2 83 1 250 2 172 1 326 1 30 1 31 1 285 2 332 2 153 3 234 1 354 1 34 1 131 1 262 1 185 1 263 1 335 1 36 1 290 1 336 1 42 1 69 1 309 3 269 1 360 1 295 1 165 1 222 1 316 2 197 1 
198 1 246 4 27 1 265 2 84 2 325 2 101 4 311 2 349 1 273 1 240 1 104 2 181 1 166 1 49 1 
123 1 287 1 135 1 
123 1 287 1 135 1 
320 1 123 1 200 1 345 1 135 1 
123 1 287 1 135 1 
123 1 212 1 135 1 
123 1 212 1 135 1 
123 1 212 1 135 1 
123 1 135 1 
378 1 186 1 
322 14 245 1 83 10 250 4 3 2 124 5 226 9 209 1 208 4 367 1 173 5 349 1 61 1 155 2 114 1 12 2 36 2 39 2 290 2 42 24 14 1 162 1 294 1 164 1 192 1 165 2 238 2 194 1 271 1 76 1 298 4 196 1 197 2 
322 6 83 5 250 4 3 1 124 2 226 3 208 1 209 1 367 1 173 2 349 1 283 1 155 1 114 1 12 1 36 2 39 1 290 2 42 11 68 1 14 1 192 1 165 2 238 1 271 1 298 1 196 2 197 2 
245 1 322 14 83 15 250 6 3 4 124 4 226 6 209 2 208 5 367 1 173 5 349 1 283 1 61 4 155 1 114 1 12 1 36 3 39 1 290 3 42 29 68 1 292 1 162 1 14 1 294 1 164 1 192 1 165 3 238 4 194 1 271 1 298 2 196 2 197 3 
245 1 322 15 83 12 250 6 3 4 124 4 226 7 209 2 208 4 367 1 173 5 349 1 283 1 61 3 155 1 114 1 12 1 36 3 39 1 290 3 42 27 68 1 292 1 162 1 14 1 294 1 164 1 192 1 165 3 238 4 194 1 271 1 298 3 196 2 197 3 
322 14 245 1 83 10 250 4 3 2 124 5 226 9 209 1 208 4 367 1 173 5 349 1 61 1 155 2 114 1 12 2 36 2 39 2 290 2 42 24 14 1 162 1 294 1 164 1 192 1 165 2 238 2 194 1 271 1 76 1 298 4 196 1 197 2 
245 1 322 11 83 11 250 2 3 4 124 2 226 4 209 2 208 4 367 1 173 4 283 1 61 4 36 1 290 1 42 22 292 1 162 1 14 1 294 1 192 1 165 1 238 4 194 1 298 2 196 2 197 1 
245 1 322 15 83 13 250 8 3 4 124 4 226 7 209 2 208 4 367 1 173 5 349 1 283 1 61 3 155 1 114 1 12 1 36 4 39 1 290 4 42 28 68 1 292 1 162 1 14 1 294 1 164 2 192 1 165 4 238 4 194 1 271 1 298 3 196 2 197 4 
322 3 83 4 250 4 3 1 124 1 226 1 209 1 208 1 367 1 173 1 283 1 61 1 353 1 36 2 290 2 42 7 14 1 192 1 165 2 238 1 196 2 197 2 
322 3 83 4 114 2 12 1 39 3 124 3 226 6 208 1 42 7 173 1 271 1 298 3 155 3 
322 3 83 4 250 4 3 1 124 1 226 1 209 1 208 1 367 1 173 1 283 1 61 1 353 1 36 2 290 2 42 7 14 1 192 1 165 2 238 1 196 2 197 2 
322 4 83 4 114 1 250 4 12 1 36 2 290 2 39 1 124 2 226 3 208 1 42 8 173 1 164 1 165 2 349 1 271 1 298 1 197 2 155 1 
322 3 247 1 83 3 114 1 12 1 39 1 124 2 226 2 42 6 208 1 173 1 349 1 271 1 155 1 
322 2 83 2 250 2 36 1 3 1 290 1 124 1 226 2 208 1 42 4 68 1 173 1 165 1 238 1 298 1 61 1 197 1 
322 6 83 6 3 2 124 1 226 2 42 12 209 2 208 2 292 1 173 2 192 1 238 2 283 1 298 1 196 2 61 2 
322 11 83 12 250 4 3 2 124 5 226 9 209 2 208 3 173 3 349 1 283 1 61 2 155 2 132 1 114 1 12 1 36 2 39 2 290 2 42 23 292 1 164 2 238 2 165 2 271 1 298 4 196 2 197 2 318 1 
83 1 196 1 42 1 
322 1 42 1 209 1 
322 3 83 3 250 2 171 1 36 1 3 1 290 1 124 2 226 4 42 6 208 1 68 1 173 1 165 1 238 1 298 2 61 1 197 1 
245 1 322 11 83 11 250 2 3 4 124 2 226 4 209 2 208 4 367 1 173 4 283 1 61 4 36 1 290 1 42 22 292 1 162 1 14 1 294 1 192 1 165 1 238 4 194 1 298 2 196 2 197 1 
322 3 83 3 12 1 39 1 124 1 226 2 42 6 208 1 173 1 298 1 155 1 
322 1 114 1 83 2 250 2 36 1 39 1 290 1 124 1 226 2 42 3 164 1 165 1 271 1 298 1 155 1 318 1 197 1 
322 5 83 5 250 2 36 1 12 1 290 1 39 2 124 3 226 5 42 10 208 2 14 1 173 2 165 1 76 1 298 2 197 1 155 2 
322 2 250 2 36 1 290 1 226 1 42 2 14 1 173 1 165 1 238 1 298 1 197 1 
322 2 83 2 250 2 36 1 3 1 290 1 124 1 226 2 208 1 42 4 14 1 173 1 165 1 238 1 298 1 61 1 197 1 
322 1 83 2 250 6 36 3 290 3 39 1 124 1 226 2 42 3 14 1 164 1 165 3 298 1 353 1 318 1 197 3 155 1 
322 7 83 8 250 8 124 3 226 6 208 2 209 1 173 2 214 1 353 1 155 2 114 1 12 1 36 4 290 4 39 2 42 15 68 1 14 1 164 1 192 1 165 4 271 1 76 1 298 3 196 1 197 4 318 1 
102 1 340 1 335 1 53 1 285 1 153 1 309 1 
204 1 335 1 53 1 236 1 309 1 102 1 17 1 110 1 282 1 340 1 285 1 153 1 
354 1 234 1 262 1 247 1 30 1 360 1 263 1 305 1 336 1 92 1 172 1 
34 1 354 1 234 1 262 1 263 1 185 1 335 1 336 1 309 2 172 1 31 1 360 1 30 1 89 1 316 1 285 1 332 1 153 2 
333 1 34 1 354 1 234 1 263 2 185 1 134 1 335 1 336 1 309 2 100 1 172 3 31 2 360 1 30 1 18 1 89 1 32 1 316 1 242 1 285 2 332 2 153 2 
333 1 34 1 354 1 234 1 263 2 134 1 335 1 336 2 309 2 100 1 172 3 254 1 31 2 360 2 30 2 18 1 89 1 32 1 316 1 361 1 242 1 285 2 332 2 153 2 
33 1 354 1 234 1 262 1 261 1 246 1 375 2 263 1 65 2 134 1 336 3 265 1 172 4 254 1 31 1 360 3 30 3 32 1 111 1 302 1 242 1 274 1 233 1 
33 1 354 1 234 1 262 1 261 1 246 1 375 2 263 1 65 2 134 1 336 3 265 1 172 4 254 1 31 1 360 3 30 3 32 1 302 1 242 1 152 1 233 1 
354 1 234 1 30 1 360 1 336 1 365 1 
372 1 234 2 354 3 262 2 201 1 263 2 356 1 38 1 336 7 365 1 6 1 70 1 172 3 227 1 256 1 175 1 360 6 30 7 210 1 31 1 331 1 
322 3 199 1 81 1 83 3 26 1 250 4 124 2 226 2 208 1 172 1 173 1 326 2 31 1 30 1 349 1 89 1 58 1 285 1 332 1 153 2 155 1 370 1 34 1 354 1 234 1 372 1 114 1 263 1 185 1 10 1 335 2 12 1 36 2 39 1 290 2 336 1 42 6 309 2 136 1 269 1 295 2 360 1 165 2 271 1 222 1 316 1 197 2 
2 1 246 1 144 1 346 1 172 2 30 1 302 1 181 2 152 1 233 1 33 2 262 1 261 1 355 1 375 3 35 1 65 3 336 1 265 1 311 1 360 1 16 1 240 2 273 2 276 1 106 1 49 1 166 2 
372 1 234 1 354 2 96 1 263 1 336 2 365 1 172 2 360 2 30 2 210 1 31 1 233 1 
354 1 372 1 234 1 262 1 263 1 305 1 336 4 172 1 254 1 85 1 360 4 30 4 92 1 
0 1 234 1 354 2 217 1 263 1 356 1 336 2 172 1 360 2 30 2 31 1 193 1 32 1 331 1 
44 1 354 1 234 1 262 1 30 1 360 1 329 1 272 1 60 1 336 1 
372 1 234 1 354 1 201 1 263 1 336 2 41 1 172 1 227 1 360 2 30 2 
372 1 234 2 354 2 262 1 263 2 305 1 336 5 6 1 172 3 227 1 175 1 85 1 360 4 30 5 32 1 92 1 
372 1 234 2 354 2 262 1 263 2 305 1 336 5 172 3 227 1 175 1 85 1 360 4 30 5 32 1 92 1 232 1 
34 1 354 1 234 1 262 1 263 1 335 1 336 1 309 2 172 1 31 1 360 1 30 1 89 1 316 1 361 1 285 1 332 1 153 2 
234 1 354 2 263 1 356 1 336 1 70 1 172 1 360 1 30 1 210 1 31 1 32 1 331 1 
297 1 99 1 335 1 77 1 347 1 
333 1 261 1 246 1 375 2 343 1 218 1 35 1 65 2 99 2 335 1 265 1 347 2 100 1 163 1 71 1 18 1 297 2 77 1 380 1 
371 1 347 1 309 1 176 1 297 1 178 1 285 1 77 1 153 1 
163 1 77 1 380 1 
247 1 249 1 314 1 67 1 
23 1 249 1 314 1 67 1 303 1 357 1 122 1 
23 1 118 1 115 1 
373 1 23 3 264 1 249 1 13 1 67 1 357 3 189 1 7 2 314 1 303 1 122 1 
72 1 23 2 249 1 314 1 235 1 67 1 303 1 357 2 122 1 
23 1 249 1 357 1 189 1 190 1 359 1 329 1 272 1 75 1 303 1 122 1 
23 1 249 1 67 1 303 1 357 1 122 1 189 1 
23 1 314 1 67 2 303 1 357 1 122 1 189 1 
23 2 64 1 249 1 67 1 357 2 189 1 327 1 87 1 303 2 122 2 
23 3 223 1 184 1 249 2 235 2 67 1 357 3 189 1 190 1 328 1 314 1 303 1 122 1 
95 1 23 2 249 1 25 1 235 1 67 1 357 2 189 1 44 1 359 1 329 2 314 1 272 1 303 1 122 1 
23 4 184 1 249 2 235 2 67 1 357 4 189 1 72 1 190 1 211 1 314 1 303 2 122 2 
23 1 249 1 314 1 67 1 303 1 357 1 122 1 189 1 
373 1 23 4 184 1 249 3 235 2 13 1 67 2 357 4 7 1 190 1 314 2 48 1 303 1 122 1 
23 2 249 1 235 1 67 1 357 2 189 1 281 1 312 1 314 1 303 1 121 1 122 1 
373 1 23 3 249 1 169 1 13 2 67 1 357 3 189 1 7 2 314 1 303 1 122 1 
146 1 150 1 249 2 280 2 
23 1 82 1 303 1 357 1 122 1 189 1 
23 2 223 1 249 1 314 1 235 1 67 1 303 1 357 2 122 1 189 1 
188 1 
23 1 249 1 314 1 67 1 303 1 357 1 122 1 189 1 
23 3 223 1 249 1 235 1 67 1 357 3 189 1 7 1 314 1 303 1 122 1 
190 1 184 1 249 1 48 1 
249 1 67 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 0 1 182 1 363 1 293 2 188 6 37 2 120 2 192 1 214 2 69 1 343 1 280 1 216 2 300 3 255 2 197 1 234 1 170 9 349 1 23 4 49 1 177 2 132 1 156 5 50 9 289 1 158 1 
52 1 0 1 182 1 363 1 293 2 188 6 37 2 120 2 192 1 214 2 69 1 343 1 280 1 216 2 300 3 255 2 197 1 234 1 170 9 349 1 23 4 49 1 177 2 132 1 156 5 50 9 289 1 158 1 
52 1 0 1 182 1 363 1 293 2 188 7 37 2 120 2 192 1 214 2 69 1 343 1 280 1 216 2 300 4 255 2 197 1 234 1 170 10 349 1 23 5 49 1 177 2 132 1 156 6 50 10 289 1 158 1 
52 1 0 1 182 1 363 1 293 2 188 4 37 2 120 2 214 2 69 1 343 1 280 1 216 2 300 2 255 2 197 1 234 1 170 7 349 1 23 3 49 1 177 1 132 1 156 4 50 7 289 1 158 1 
52 1 300 1 216 1 255 1 293 1 170 4 188 3 37 1 23 2 120 1 177 2 192 1 132 1 156 3 289 1 50 4 69 1 158 1 
52 1 216 1 255 1 363 1 197 1 293 1 170 2 37 1 38 1 25 1 162 1 214 1 156 1 289 1 50 2 69 1 
52 1 216 2 300 1 234 1 293 2 170 3 188 1 23 1 214 1 156 2 289 1 50 3 69 1 
52 1 293 2 247 1 188 7 37 1 120 1 192 1 214 1 69 1 324 1 343 1 300 3 216 2 255 1 234 1 170 9 23 4 49 1 177 2 132 1 156 5 50 9 289 1 158 1 
52 1 293 2 247 1 188 7 37 1 120 1 192 1 214 1 69 1 324 1 343 1 300 3 216 2 255 1 234 1 170 9 23 4 49 1 177 2 132 1 156 5 50 9 289 1 158 1 
258 1 12 1 203 1 
12 1 304 1 250 2 
319 1 169 2 374 2 136 2 67 1 309 2 47 2 305 2 
35 1 58 1 136 3 245 1 208 1 5 1 317 1 114 1 339 1 8 1 39 1 91 1 319 1 341 2 231 2 67 1 368 1 369 1 296 1 278 1 42 2 254 2 199 1 169 3 374 2 47 2 126 1 305 2 331 1 175 1 221 1 29 1 333 1 309 2 109 1 359 2 290 1 
111 1 100 1 319 1 169 1 374 1 136 1 179 1 309 1 47 1 305 1 
111 1 57 1 169 1 136 1 59 1 186 1 60 1 274 1 65 1 307 1 309 1 12 1 203 1 181 1 
111 1 374 1 169 1 136 1 59 1 47 1 60 1 305 1 274 1 65 1 307 2 309 1 12 1 203 1 181 2 
198 1 307 1 378 1 181 1 360 1 
90 1 198 1 307 2 12 1 203 1 224 1 181 2 360 1 
198 1 307 1 181 1 
111 1 100 1 374 1 169 1 136 1 47 1 305 1 319 1 179 1 307 1 367 1 309 1 360 1 181 1 
12 1 
62 1 198 1 307 2 12 1 203 1 224 1 181 2 360 1 
54 1 198 2 329 2 365 2 318 1 350 1 64 1 106 1 79 2 201 1 307 5 253 1 133 1 12 1 203 1 224 1 360 2 181 5 165 1 
258 1 67 1 
110 1 169 2 374 1 136 2 47 1 305 1 308 1 67 2 309 2 
240 1 99 1 134 1 
169 1 35 1 136 1 58 1 5 1 126 1 172 1 331 1 91 1 175 1 231 1 29 1 67 1 109 1 42 1 254 1 
35 1 169 2 58 1 136 2 5 1 47 1 126 1 305 1 91 1 331 1 353 1 175 1 121 1 231 1 29 1 309 1 109 1 134 1 42 1 254 1 
110 1 233 1 169 5 374 1 136 5 186 1 47 4 273 1 305 4 152 1 353 1 121 2 67 1 309 5 
111 1 100 1 93 1 169 2 136 2 309 2 47 2 305 2 
374 1 121 1 169 3 136 3 67 1 309 3 47 3 305 3 
111 1 100 1 169 1 136 1 309 1 47 1 305 1 
111 1 110 1 169 1 374 1 136 1 308 1 309 1 47 1 305 1 
110 1 111 1 364 1 35 1 58 1 59 1 136 4 245 1 208 1 5 1 114 1 339 1 60 1 8 1 274 1 91 1 319 1 121 1 341 1 231 1 65 1 67 1 368 1 278 1 42 1 254 1 218 1 374 2 169 4 47 3 126 1 305 3 331 1 353 1 175 1 221 1 29 1 307 1 333 1 309 3 109 1 359 2 290 1 181 1 
169 2 121 1 136 2 186 1 67 1 309 2 47 1 273 1 305 1 
110 1 111 1 364 1 374 1 169 3 136 3 59 1 60 1 47 3 305 3 274 1 127 1 353 1 121 2 307 1 65 1 309 3 12 1 181 1 
110 1 374 1 169 2 136 2 47 2 305 2 121 1 309 2 99 1 134 1 
169 1 35 1 136 1 58 1 5 1 126 1 331 1 91 1 175 1 231 1 29 1 67 1 109 1 42 1 254 1 
169 1 35 1 136 1 58 1 5 1 212 1 76 1 126 1 331 1 91 1 231 1 29 1 67 1 42 1 254 1 
72 1 282 1 151 1 228 1 21 1 339 1 230 1 8 1 191 1 320 1 341 4 221 1 240 2 333 1 288 1 11 1 356 1 368 1 369 2 99 2 134 2 278 1 359 2 290 2 
111 1 93 1 169 1 136 1 309 1 47 1 274 1 305 1 
209 1 355 1 
209 1 355 1 
92 1 184 1 
92 1 184 1 
92 1 184 1 
102 1 209 1 355 1 
102 1 209 1 355 1 
372 1 209 1 355 1 
92 1 243 1 184 1 209 2 342 1 355 2 
102 1 209 1 355 1 
260 1 209 1 355 1 
260 1 209 1 355 1 
260 1 209 1 355 1 
337 1 136 2 185 1 209 1 41 1 67 1 146 1 323 1 298 1 194 1 326 1 167 1 15 1 372 1 169 2 348 1 47 2 305 2 284 1 307 1 309 2 355 1 135 1 181 1 
337 2 159 1 167 2 15 2 125 1 315 1 209 2 348 1 138 1 352 2 307 2 342 1 355 2 12 1 223 1 157 1 146 3 298 2 181 2 
255 1 120 1 37 1 
255 1 162 1 37 1 
205 1 217 1 3 1 120 2 162 1 37 3 
217 1 3 1 120 1 162 1 140 1 37 2 
217 1 120 1 3 2 162 1 37 2 
111 1 338 1 136 1 365 1 250 1 319 1 64 1 94 1 367 1 98 1 12 1 323 1 100 1 198 1 169 1 374 1 329 1 21 1 171 1 47 1 305 1 350 2 330 1 79 1 285 2 179 1 202 1 307 5 81 1 133 1 288 1 31 1 309 1 203 1 224 1 181 5 360 4 
111 1 338 1 136 1 246 2 365 1 250 1 64 1 276 1 319 1 94 1 367 1 12 1 323 1 100 1 198 3 169 1 374 1 329 1 18 1 21 1 171 1 47 1 305 1 350 2 79 1 179 1 202 1 307 5 81 1 378 2 133 1 288 1 31 1 309 1 203 1 224 1 181 5 360 4 
111 1 338 2 136 1 228 1 365 1 230 1 318 1 250 3 319 1 367 1 98 1 12 2 323 1 100 1 169 1 374 1 329 1 21 1 171 1 47 1 304 1 305 1 330 1 350 2 285 1 79 1 179 1 202 1 307 3 81 2 309 1 133 3 31 1 288 1 203 1 360 2 181 3 
85 1 338 4 228 2 365 1 230 2 318 1 250 6 98 1 12 3 323 2 370 1 329 1 21 2 171 1 304 2 330 1 350 4 285 2 79 1 27 1 202 1 307 4 81 4 133 5 31 2 288 2 203 1 360 3 181 4 
58 1 258 1 379 1 
128 1 58 1 
325 1 
58 1 29 1 126 1 
58 1 97 1 
58 1 126 1 
58 3 29 1 19 1 82 1 379 2 126 1 
166 1 183 1 225 1 151 2 294 1 228 1 21 1 75 1 219 1 341 7 180 1 241 1 356 3 369 4 51 1 290 3 71 2 
166 1 183 1 225 1 151 2 294 1 228 1 21 1 75 1 219 1 341 7 180 1 241 1 356 3 369 4 51 1 290 3 71 2 
166 1 183 1 196 1 225 1 151 2 294 1 228 1 21 1 75 1 219 1 341 7 180 1 241 1 356 3 369 4 51 1 290 3 71 2 
183 2 225 5 294 1 137 4 228 4 316 1 230 3 8 1 96 1 341 31 321 1 368 1 369 16 278 1 71 3 166 2 151 5 21 4 75 1 237 1 219 1 221 1 238 1 178 1 180 2 108 1 241 2 31 3 288 3 356 10 51 1 359 2 265 3 290 15 
266 1 183 1 225 1 294 1 228 1 316 1 8 2 341 9 368 2 369 5 278 2 71 2 14 1 166 1 151 3 21 1 75 1 219 1 221 2 180 1 241 1 356 4 359 4 290 4 
52 1 205 1 86 1 293 1 6 1 5 1 188 1 37 2 117 1 91 1 120 1 340 1 231 1 162 1 277 1 214 1 69 1 42 1 254 1 216 1 255 1 168 1 301 1 124 1 170 2 235 1 351 1 156 1 50 2 289 1 
52 1 205 1 267 1 86 1 293 1 6 1 5 1 188 2 37 2 117 1 91 1 120 1 340 1 231 1 162 1 214 1 69 1 42 1 254 1 216 1 255 1 168 1 301 1 124 1 170 3 235 1 77 1 176 1 156 1 50 3 
52 1 205 1 267 1 6 1 5 1 188 2 37 2 117 1 91 1 120 1 231 1 162 1 214 1 69 1 42 1 254 1 255 1 168 1 301 1 124 1 170 2 235 1 77 1 156 1 50 2 
312 1 216 1 123 1 301 2 124 2 58 1 161 1 293 1 170 1 5 1 126 1 117 2 91 1 331 1 332 1 176 1 231 1 80 1 214 2 32 1 50 1 42 1 254 1 
205 1 86 1 293 1 6 1 5 1 37 2 117 1 91 1 120 1 340 1 231 1 162 1 214 1 42 1 254 1 216 1 255 1 168 1 301 1 124 1 170 1 235 1 77 1 351 1 50 1 289 1 
2 1 
111 1 55 1 57 1 161 1 58 1 59 1 113 2 5 1 249 4 250 2 60 1 64 1 252 2 65 1 163 1 12 2 70 1 254 2 123 1 169 1 304 2 259 2 126 1 350 2 79 1 130 2 307 5 133 2 309 1 263 1 357 2 224 3 181 5 136 1 186 1 365 1 89 1 142 1 274 1 190 1 91 1 231 2 232 2 42 2 371 1 198 6 373 1 149 1 329 1 200 1 331 2 202 1 239 1 154 2 203 1 
111 1 371 1 55 1 198 2 149 1 57 1 169 1 136 1 59 1 186 1 249 2 60 1 274 1 62 1 65 1 307 3 239 1 309 1 357 1 224 1 70 1 181 3 
111 1 371 1 55 1 198 1 149 1 57 1 169 1 136 1 59 1 186 1 249 3 60 1 274 1 62 1 252 1 65 1 307 3 239 1 309 1 12 1 203 1 224 1 70 1 181 3 
111 1 55 1 57 1 59 1 136 1 186 1 249 3 60 1 274 1 62 1 65 1 252 1 12 1 70 1 232 1 371 1 198 2 169 1 149 1 307 3 239 1 309 1 357 1 203 1 224 1 181 3 
111 1 55 1 57 1 59 1 113 2 249 6 115 1 60 1 62 1 64 1 65 1 252 4 68 1 12 5 70 1 169 1 259 2 304 2 350 1 79 1 130 2 307 5 309 1 263 1 133 1 357 4 224 3 181 5 136 1 186 1 229 1 365 1 89 1 274 1 232 4 371 1 101 1 198 7 149 1 329 1 239 1 153 1 154 2 203 5 
111 1 55 1 57 1 136 1 59 1 113 2 186 1 365 1 249 4 89 1 250 2 60 1 274 1 64 1 252 2 65 1 163 1 12 2 232 2 70 1 371 1 198 4 169 1 149 1 329 1 304 2 259 2 350 1 79 1 130 2 307 4 239 1 154 2 133 1 309 1 263 1 357 2 203 1 224 2 181 4 
111 1 55 1 57 1 59 1 136 1 113 2 186 1 249 4 229 1 365 1 89 1 60 1 274 1 64 1 252 2 65 1 12 1 232 2 70 1 101 1 371 1 198 4 169 1 149 1 329 1 304 2 259 2 350 1 79 1 130 2 307 4 239 1 154 2 153 1 133 1 263 1 309 1 357 2 203 1 224 2 181 4 
111 1 55 1 57 1 59 1 136 1 113 2 186 1 249 4 229 1 365 1 89 1 60 1 274 1 64 1 252 2 65 1 12 1 232 2 70 1 101 1 371 1 198 4 169 1 149 1 329 1 304 2 259 2 350 1 79 1 130 2 307 4 239 1 154 2 153 1 133 1 263 1 309 1 357 2 203 1 224 2 181 4 
111 1 55 1 57 1 59 1 136 1 268 2 186 1 249 4 365 1 89 1 250 2 60 1 274 1 63 1 64 1 252 2 65 1 12 1 232 2 70 1 101 1 371 1 327 1 198 4 169 1 149 1 329 1 259 2 350 1 174 2 79 1 307 4 239 1 154 2 133 1 309 1 310 1 357 2 203 1 224 2 181 4 
111 1 55 1 57 1 59 1 136 1 113 2 186 1 365 1 229 1 249 5 89 1 60 1 274 1 64 1 65 1 252 3 68 1 12 1 70 1 232 3 101 1 371 1 198 5 169 1 149 1 329 1 304 2 259 2 350 1 79 1 130 2 307 4 239 1 154 2 153 1 133 1 263 1 309 1 357 3 203 1 224 2 181 4 
111 1 55 1 57 1 59 1 136 1 113 2 186 1 365 1 229 1 249 5 89 1 60 1 274 1 64 1 65 1 252 3 68 1 12 1 70 1 232 3 101 1 371 1 198 5 169 1 149 1 329 1 304 2 259 2 350 1 79 1 130 2 307 4 239 1 154 2 153 1 133 1 263 1 309 1 357 3 203 1 224 2 181 4 
111 1 55 1 57 1 136 1 59 1 268 2 186 1 365 1 249 4 89 1 250 2 60 1 274 1 63 1 64 1 252 2 65 1 163 1 12 1 232 2 70 1 371 1 198 4 169 1 149 1 329 1 259 2 350 1 174 2 79 1 307 4 239 1 154 2 133 1 309 1 357 2 203 1 224 2 181 4 
183 1 294 1 228 1 339 1 8 1 341 6 67 2 11 1 368 1 369 3 99 1 278 1 71 1 166 1 258 1 151 2 21 1 75 1 219 1 221 1 333 1 240 1 356 2 134 1 359 2 290 3 
160 1 225 1 245 1 137 3 228 1 88 1 339 2 230 1 8 2 96 1 341 14 67 1 164 1 368 2 369 8 278 2 99 4 199 1 151 1 73 1 21 2 173 1 221 2 238 1 333 1 240 11 31 2 288 2 356 2 359 4 134 11 290 6 265 3 
35 1 58 1 136 2 244 1 245 1 5 1 339 1 8 1 91 1 121 1 231 1 341 2 67 1 368 1 369 1 42 1 99 1 278 1 279 1 254 1 199 1 169 2 47 1 126 1 305 1 172 1 173 1 331 1 353 1 175 1 221 1 29 1 333 1 309 1 109 1 359 2 290 1 336 1 
58 2 245 1 208 2 294 1 5 2 339 3 8 3 121 1 341 20 251 2 67 2 71 1 254 3 166 1 345 1 169 3 346 2 21 3 75 1 77 1 305 1 126 2 173 1 219 1 353 1 175 2 221 3 29 2 30 2 309 1 31 2 356 8 359 6 134 7 361 1 183 1 35 2 136 3 225 4 228 3 230 2 91 2 231 3 368 3 369 10 42 3 278 3 99 7 199 1 151 4 47 1 331 1 376 2 333 3 240 7 288 2 109 2 290 10 291 1 
136 1 58 3 161 1 245 1 5 2 317 2 339 2 8 2 116 1 91 2 121 1 231 8 341 2 277 1 11 1 368 2 369 1 42 8 278 2 254 7 123 1 16 1 199 1 169 1 44 1 347 1 77 1 47 1 305 1 126 2 24 1 331 2 221 2 333 2 287 1 309 1 359 4 290 1 84 1 
110 1 136 1 228 1 339 1 230 1 8 1 341 3 368 1 369 1 99 1 278 1 13 1 374 1 169 1 151 1 21 1 47 1 305 1 173 1 221 1 240 1 333 1 309 1 31 1 288 1 356 1 134 1 359 2 290 2 
225 1 282 1 21 1 339 1 8 1 341 2 221 1 240 1 333 1 11 1 288 1 356 1 368 1 369 2 99 1 134 1 278 1 359 2 
72 1 151 1 228 1 339 1 230 1 8 1 341 2 221 1 240 1 333 1 11 1 356 1 368 1 99 1 134 1 278 1 359 2 290 2 
225 1 228 1 339 1 230 1 8 1 341 4 11 1 368 1 369 2 278 1 99 2 151 1 21 1 221 1 333 1 240 2 288 1 31 1 356 2 359 2 134 2 290 2 
44 1 225 1 282 1 21 1 339 1 8 1 341 2 221 1 240 1 333 1 288 1 356 1 368 1 369 2 99 1 134 1 278 1 359 2 
72 1 44 1 151 1 228 1 339 1 230 1 8 1 341 2 221 1 240 1 333 1 356 1 368 1 99 1 134 1 278 1 359 2 290 2 
225 1 228 1 339 1 230 1 8 1 341 4 368 1 369 2 278 1 99 2 44 1 151 1 21 1 221 1 333 1 240 2 288 1 31 1 356 2 359 2 134 2 290 2 
225 1 151 1 228 1 21 1 230 1 339 1 8 1 221 1 341 4 240 2 333 1 31 1 288 1 356 2 368 1 369 2 99 2 134 2 278 1 359 2 290 2 
35 1 58 1 136 1 245 1 208 1 5 1 339 1 8 1 91 1 341 2 231 1 67 1 368 1 369 1 42 1 278 1 254 1 199 1 169 1 126 1 331 1 175 1 221 1 29 1 333 1 109 1 359 2 290 1 
35 1 58 1 136 1 245 1 5 1 212 1 339 1 8 1 91 1 341 2 231 1 67 1 368 1 369 1 42 1 278 1 254 1 199 1 169 1 236 1 76 1 126 1 331 1 221 1 29 1 333 1 359 2 290 1 
225 1 228 1 339 1 230 1 8 1 341 4 368 1 369 2 278 1 99 2 151 1 21 1 173 1 221 1 333 1 240 2 288 1 31 1 356 2 359 2 134 2 290 2 
35 1 225 1 58 1 136 1 208 1 5 1 228 1 230 1 339 1 8 1 91 1 341 4 231 1 277 1 368 1 369 2 99 2 42 1 278 1 254 1 169 1 151 1 21 1 126 1 376 1 175 1 221 1 29 1 240 2 333 1 288 1 31 1 356 2 109 1 134 2 359 2 290 2 
110 1 225 1 136 1 228 1 230 1 339 1 8 1 341 3 368 1 369 2 278 1 99 1 374 1 169 1 21 1 47 1 305 1 173 1 221 1 222 1 333 1 240 1 309 1 31 1 288 1 356 1 359 2 134 1 290 1 
266 1 292 1 225 3 137 2 228 3 141 1 230 3 61 2 8 2 275 1 96 1 341 19 10 1 368 2 369 9 278 2 43 1 281 1 45 1 151 3 21 3 221 2 238 1 354 2 31 3 288 3 356 6 359 4 290 10 265 1 
266 1 292 2 313 1 314 1 225 2 227 1 137 2 210 1 228 2 316 2 141 1 230 2 61 4 8 3 96 2 341 26 368 3 369 14 278 3 148 1 43 2 281 1 45 1 151 2 103 1 21 3 221 3 354 1 31 3 288 3 356 4 359 6 290 12 265 2 
266 1 183 1 292 2 313 1 314 1 225 4 227 1 294 1 137 4 210 1 228 5 316 1 141 1 230 4 61 4 8 3 118 1 96 3 341 41 10 1 368 3 369 20 278 3 71 1 148 1 166 1 43 1 281 1 45 1 151 4 103 1 21 5 75 1 219 1 221 3 238 1 354 1 31 4 288 4 356 8 359 6 290 21 265 3 
266 1 183 1 292 2 313 1 314 1 225 3 227 1 294 1 137 4 210 1 228 4 316 2 141 1 230 3 61 4 8 4 118 1 96 3 341 38 10 1 368 4 369 20 278 4 71 1 148 1 166 1 43 1 281 1 45 1 151 4 103 1 21 5 75 1 219 1 221 4 238 1 354 1 31 4 288 4 356 7 359 8 290 18 265 3 
266 1 183 1 160 2 292 1 313 1 314 1 225 7 227 1 294 1 137 4 210 1 228 8 316 1 141 1 230 7 61 4 8 2 96 2 341 52 368 2 369 27 278 2 71 1 148 1 166 1 43 1 281 1 45 1 151 7 103 1 21 8 75 1 219 1 221 2 238 2 354 1 31 7 288 7 356 14 359 4 290 25 265 4 
337 1 167 1 15 1 302 1 209 1 138 1 342 1 355 1 157 1 298 1 
372 1 284 1 
306 1 337 1 167 1 15 1 17 1 209 1 355 1 298 1 143 1 
95 1 102 1 
260 1 243 1 358 1 
337 1 159 1 167 1 15 1 315 1 209 1 348 1 138 1 352 1 307 1 342 1 355 1 12 1 223 1 157 1 146 2 181 1 298 1 
337 1 159 1 167 1 15 1 315 1 209 1 348 1 138 1 352 1 307 1 342 1 355 1 12 1 223 1 157 1 146 2 181 1 298 1 
337 1 159 1 167 1 15 1 315 1 209 1 348 1 138 1 352 1 307 1 342 1 355 1 12 1 223 1 157 1 146 2 181 1 298 1 
243 1 95 1 102 1 
243 1 95 1 102 1 
260 1 358 1 
260 1 243 1 358 1 
41 1 194 1 
159 1 337 1 56 1 136 2 185 1 209 1 41 1 67 1 146 1 323 1 298 1 194 1 326 1 167 1 15 1 372 1 169 2 47 2 284 1 305 2 352 1 307 1 309 2 355 1 135 1 181 1 360 1 
1 1 58 1 136 2 245 1 5 1 317 2 339 1 272 1 8 1 116 1 189 1 91 1 119 1 231 2 341 2 368 1 369 1 42 2 278 1 254 2 199 1 169 2 126 1 173 1 221 1 333 1 309 2 264 1 359 2 290 1 84 1 
205 1 255 1 168 1 301 1 235 1 5 1 248 1 303 1 37 2 77 1 91 1 120 1 340 1 9 1 231 2 162 1 277 1 42 2 254 2 
205 1 255 1 168 1 301 1 226 1 235 1 5 1 303 1 37 2 77 1 91 1 120 1 340 1 231 1 162 1 42 1 254 1 
123 1 301 1 58 1 161 1 20 1 5 1 126 1 91 1 331 1 9 1 231 1 80 1 42 1 254 1 
205 1 255 1 168 1 301 1 235 1 5 1 248 1 303 1 37 2 77 1 91 1 120 1 340 1 9 1 231 1 162 1 42 1 254 1 
36 1 
350 1 106 1 258 1 133 1 12 1 203 1 165 1 
113 1 365 1 250 1 64 1 12 2 198 1 329 1 304 1 350 1 79 1 130 1 307 1 133 1 263 1 203 1 224 1 181 1 
206 2 338 6 112 1 58 10 5 4 60 2 250 12 64 4 66 2 12 8 215 2 165 1 254 3 256 2 346 2 21 2 304 6 126 3 350 8 128 3 79 4 131 2 29 3 307 5 81 6 133 9 31 2 82 1 224 3 181 5 34 1 269 2 228 2 365 4 230 2 190 1 91 3 40 1 231 3 277 1 97 2 145 2 42 3 198 5 329 4 331 1 104 2 106 1 202 2 334 1 288 2 203 2 204 1 379 2 
338 5 313 1 314 1 227 1 137 1 210 1 228 2 365 2 230 2 250 6 190 1 64 2 96 1 145 1 12 5 198 1 256 2 329 2 103 1 21 2 304 3 48 1 350 5 79 2 202 1 307 1 81 5 286 1 133 8 31 2 288 2 203 2 224 1 181 1 265 1 
111 1 183 1 136 1 228 1 365 1 229 1 87 1 64 1 319 1 367 1 145 1 100 1 166 1 169 1 256 2 374 1 329 1 21 2 47 1 305 1 350 2 219 1 79 1 179 1 307 1 133 2 309 1 181 1 
329 1 365 1 350 1 64 1 106 1 79 1 133 1 203 1 12 1 165 1 
338 5 346 1 256 2 228 2 21 2 230 2 250 10 304 5 350 5 81 5 31 2 288 2 133 5 145 1 12 5 
198 1 307 1 12 1 203 1 224 1 181 1 
112 2 58 1 161 1 5 1 365 2 142 1 318 1 190 2 91 1 64 1 231 4 42 4 254 4 123 1 373 1 198 4 257 1 329 2 126 1 350 2 331 2 79 2 202 2 307 3 133 2 204 1 224 2 181 3 242 1 
35 1 136 3 58 1 245 1 208 1 5 1 114 1 339 1 8 1 91 1 319 1 341 1 231 1 67 1 368 1 42 1 278 1 254 1 169 3 374 2 47 2 305 2 126 1 331 1 175 1 221 1 29 1 333 1 309 2 109 1 359 2 290 1 
338 2 329 1 365 1 304 2 250 4 350 2 190 1 64 1 79 1 202 1 81 2 133 1 203 2 12 4 71 1 
337 1 28 1 298 1 
337 1 28 1 298 1 
337 1 138 1 33 1 194 1 298 1 
337 1 28 1 298 1 
337 1 271 1 298 1 
337 1 271 1 298 1 
337 1 271 1 298 1 
337 1 298 1 
209 1 355 1 
166 1 183 1 225 1 151 2 294 1 228 1 21 1 316 1 75 1 8 2 219 1 341 8 221 2 356 3 368 2 369 4 278 2 359 4 71 1 290 4 
166 1 183 1 258 1 151 2 294 1 228 1 21 1 75 1 219 1 341 6 356 2 369 3 71 1 290 3 
225 1 151 1 187 1 228 1 21 1 230 1 8 1 221 1 341 4 31 1 288 1 356 2 368 1 369 2 278 1 359 2 290 2 
225 1 151 1 137 2 228 1 21 1 230 1 96 1 341 7 238 1 31 1 288 1 356 2 369 3 290 4 265 1 
183 2 160 1 225 4 294 1 137 2 228 3 316 2 230 2 8 2 341 23 368 2 369 11 278 2 71 1 166 2 151 5 73 1 21 3 75 1 219 1 129 1 238 1 221 2 288 2 31 2 356 9 359 4 265 2 290 12 
341 1 137 1 290 1 
341 1 369 1 265 1 
346 1 225 1 151 2 187 1 228 1 21 1 230 1 8 1 221 1 341 6 31 1 288 1 368 1 356 3 369 3 359 2 278 1 290 3 
266 1 313 1 314 1 225 1 227 1 137 1 228 2 210 1 230 2 8 1 96 1 341 12 368 1 369 6 278 1 151 1 103 1 21 2 221 1 31 2 288 2 356 2 359 2 265 1 290 6 
166 1 183 1 225 1 151 1 228 1 21 1 219 1 341 6 356 2 369 3 290 3 
166 1 183 1 225 1 151 1 294 1 316 1 75 1 8 1 129 1 341 3 221 1 356 2 368 1 369 1 278 1 359 2 290 2 
166 2 266 1 183 2 225 2 151 3 228 2 21 2 87 1 8 1 219 1 221 1 341 10 368 1 356 5 369 5 359 2 278 1 290 5 
266 1 225 1 21 1 8 1 221 1 341 2 288 1 368 1 356 1 369 2 278 1 359 2 
266 1 225 1 151 1 228 1 21 1 230 1 8 1 221 1 341 4 31 1 288 1 356 2 368 1 369 2 278 1 359 2 290 2 
166 1 266 1 183 1 225 1 151 1 316 1 8 3 129 1 341 3 221 3 10 1 368 3 356 2 369 1 278 3 359 6 290 2 
266 1 183 3 225 5 294 1 137 4 187 1 228 5 316 2 230 3 8 5 96 1 341 34 10 1 368 5 369 16 278 5 71 1 166 3 151 7 21 5 75 1 237 1 219 2 129 1 178 1 221 5 238 1 108 1 31 3 288 3 356 12 359 10 290 18 265 3 
266 1 183 1 227 1 137 1 294 1 228 1 8 1 96 1 341 8 368 1 369 4 278 1 71 1 166 1 151 2 21 1 75 1 219 1 221 1 356 2 359 2 265 1 290 4 
266 1 183 1 225 1 227 1 294 1 137 2 187 1 228 1 8 2 96 1 341 11 368 2 369 6 278 2 71 1 166 1 151 2 21 2 75 1 219 1 221 2 238 1 31 1 288 1 356 3 359 4 290 5 265 1 
266 1 183 1 313 1 314 1 225 1 227 1 294 1 187 1 137 1 210 1 228 3 316 1 230 2 8 3 96 1 341 19 368 3 369 9 278 3 71 1 166 1 151 3 103 1 21 3 75 1 219 1 221 3 31 2 288 2 356 4 359 6 265 1 290 10 
266 1 183 1 313 1 314 1 225 2 227 1 294 1 187 1 137 1 228 2 210 1 316 1 230 1 8 3 96 1 341 17 368 3 369 10 278 3 71 1 166 1 151 3 103 1 21 3 75 1 219 1 221 3 31 2 288 2 356 5 359 6 265 1 290 7 
266 1 183 1 227 1 137 1 294 1 228 1 8 1 96 1 341 8 368 1 369 4 278 1 71 1 166 1 151 2 21 1 75 1 219 1 221 1 356 2 359 2 265 1 290 4 
266 1 313 1 314 1 225 1 227 1 137 1 228 2 210 1 230 2 8 1 96 1 341 12 368 1 369 6 278 1 151 1 103 1 21 2 221 1 31 2 288 2 356 2 359 2 265 1 290 6 
266 1 183 1 313 1 314 1 225 2 227 1 294 1 137 1 187 1 210 1 228 2 316 2 230 1 8 4 96 1 341 18 368 4 369 10 278 4 71 1 166 1 151 3 103 1 21 3 75 1 219 1 221 4 31 2 288 2 356 5 359 8 290 8 265 1 
266 1 313 1 314 1 225 3 227 1 137 1 210 1 228 2 316 2 230 2 8 4 96 1 341 16 10 1 368 4 369 9 278 4 151 3 103 1 21 3 221 4 31 3 288 3 356 6 359 8 290 7 265 1 
166 3 183 3 225 3 151 3 294 2 228 1 21 1 75 1 219 1 341 7 356 6 369 3 290 4 
266 1 183 1 313 1 314 1 225 1 227 1 294 1 137 1 210 1 228 2 316 2 230 1 8 4 96 1 341 18 10 1 368 4 369 10 278 4 71 1 166 1 151 3 103 1 21 3 75 1 219 1 221 4 31 2 288 2 356 4 359 8 290 8 265 1 
169 1 136 1 186 1 67 1 270 1 309 1 273 1 
4 1 169 1 136 1 186 1 270 1 74 1 211 1 273 1 366 1 67 1 309 1 297 1 
91 1 331 1 123 1 58 1 161 1 258 1 231 1 5 1 42 1 126 1 254 1 
35 1 169 2 58 1 136 2 5 1 47 1 126 1 305 1 331 1 91 1 121 1 175 1 231 1 29 1 67 1 309 1 42 1 254 1 
111 1 35 1 169 2 58 3 136 2 112 1 5 1 47 2 274 1 126 2 305 1 91 1 121 1 175 1 131 1 231 1 65 1 29 2 67 1 97 1 309 2 42 1 254 1 
111 1 35 1 112 1 136 2 58 3 5 1 274 1 91 1 121 1 231 2 65 1 67 1 97 1 42 2 254 2 169 2 76 1 47 2 305 1 126 2 131 1 29 2 107 1 309 2 
58 4 112 1 207 1 5 1 60 1 91 1 231 3 97 1 12 1 42 3 254 3 198 1 126 1 331 1 128 1 131 1 307 2 29 1 107 1 203 1 379 1 335 1 181 2 
198 1 112 1 58 4 5 1 60 1 126 1 331 1 91 1 128 1 131 1 231 3 29 1 307 2 107 1 66 1 97 1 12 1 203 1 42 3 379 1 181 2 254 3 
91 1 231 1 5 1 287 1 42 1 254 1 
16 1 344 1 58 3 347 1 5 3 317 1 139 1 77 1 126 2 24 1 331 2 91 2 220 1 231 7 29 1 277 1 287 1 82 1 42 7 84 1 254 6 
58 1 208 1 5 1 294 1 339 2 8 2 119 1 121 1 341 6 67 2 71 1 254 1 166 1 169 2 21 1 75 1 305 1 126 1 173 1 219 1 175 1 221 2 29 1 30 1 309 1 356 2 359 4 134 1 183 1 35 1 136 2 228 1 91 1 231 1 277 1 368 2 369 3 99 1 42 1 278 2 151 2 47 1 376 1 333 2 240 1 109 1 290 3 
58 2 269 1 365 2 60 1 64 2 231 1 66 1 12 1 42 1 215 1 165 1 254 1 198 2 329 2 350 1 331 1 104 1 128 1 106 1 79 2 307 3 133 1 203 1 204 1 379 1 224 1 181 3 360 1 
58 2 5 2 126 1 91 1 231 2 29 1 277 1 287 1 334 1 82 1 379 1 42 2 254 2 
123 1 161 1 58 1 5 1 46 1 126 1 331 1 91 1 231 4 107 1 277 1 42 4 254 4 
345 1 344 1 112 1 58 1 5 2 126 1 91 1 220 1 231 2 29 1 193 1 295 1 42 2 254 2 
255 1 91 1 331 1 231 1 162 1 235 1 5 1 37 1 42 1 254 1 
1 1 58 1 5 1 77 1 126 1 91 1 231 2 277 1 42 2 254 2 84 1 
123 1 16 1 112 1 161 1 58 3 347 1 5 2 46 1 126 2 331 1 91 2 231 5 277 1 42 5 254 4 84 1 
123 1 16 1 112 1 161 1 58 3 5 2 46 1 126 2 331 1 91 2 231 5 277 1 42 5 254 4 83 1 84 1 
35 1 169 2 58 1 136 2 5 1 76 1 47 1 126 1 305 1 331 1 91 1 121 1 231 1 29 1 67 1 309 1 42 1 254 1 
344 1 112 1 58 1 5 2 139 1 126 1 91 1 220 1 231 1 29 1 82 1 42 1 254 1 
213 1 377 1 375 1 67 1 7 1 
111 1 364 1 375 1 150 1 59 1 283 1 7 2 60 1 274 1 261 1 213 2 377 2 65 1 307 2 67 1 12 1 203 1 360 1 181 2 
375 1 169 1 136 1 7 1 272 1 189 1 377 1 264 1 309 1 
150 1 375 1 283 1 
52 1 258 1 156 1 69 1 
52 1 216 1 170 1 293 1 156 1 50 1 69 1 
124 1 214 1 50 1 
216 1 195 1 52 1 197 2 328 1 293 1 170 3 144 1 156 1 289 1 50 3 69 1 
52 1 216 1 177 1 170 2 293 1 156 1 188 1 50 2 69 1 
216 1 255 1 293 1 170 1 37 1 23 1 120 1 156 1 289 1 50 1 158 1 
52 1 216 1 170 1 293 1 156 1 50 1 289 1 
52 2 216 1 170 1 293 1 50 1 289 1 69 1 
52 1 216 2 362 1 53 1 293 2 170 2 22 1 156 1 289 1 50 2 
52 1 216 1 300 1 293 1 170 3 188 2 23 1 49 1 156 2 289 1 50 3 69 1 343 1 
52 1 216 1 205 1 255 1 293 1 170 2 188 1 37 2 120 1 162 1 156 1 289 1 50 2 69 1 147 1 
52 1 216 2 300 1 293 2 170 4 188 2 23 1 177 1 192 1 156 2 289 1 50 4 69 1 
52 1 216 1 170 1 293 1 156 1 50 1 289 1 69 1 
195 1 52 2 216 1 300 1 197 1 328 1 170 4 293 1 188 2 23 1 156 3 311 1 50 4 69 2 
52 1 216 1 293 1 170 2 188 1 78 1 156 1 155 1 289 1 50 2 69 1 324 1 
216 1 195 2 52 1 197 2 328 1 293 1 170 3 26 1 156 1 289 1 50 3 69 1 
262 1 156 2 299 1 122 2 
216 1 322 1 170 1 293 1 50 1 289 1 
52 1 216 1 170 2 293 1 156 1 188 1 50 2 289 1 69 1 343 1 
105 1 
52 1 216 1 170 1 293 1 156 1 50 1 289 1 69 1 
216 1 52 1 197 1 293 1 170 3 188 1 156 1 289 1 50 3 69 1 343 1 
300 1 156 1 311 1 23 1 
52 1 156 1 

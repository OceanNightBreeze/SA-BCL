#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
197 2 103 2 136 2 27 1 137 2 169 1 201 1 316 2 226 2 246 1 9 6 269 4 320 1 13 9 152 1 44 1 270 1 49 2 17 1 274 5 349 1 146 9 185 3 277 1 328 1 188 1 333 1 225 1 
197 2 103 2 136 2 27 1 169 1 137 2 201 1 316 2 226 2 246 1 9 6 269 4 320 1 13 9 152 1 44 1 270 1 49 2 17 1 274 5 349 1 146 9 185 3 277 1 328 1 188 1 333 1 225 1 
197 2 103 2 136 2 27 1 169 1 137 2 201 1 316 2 226 2 246 1 9 7 269 5 320 1 13 10 152 1 44 1 270 1 49 2 17 1 274 6 349 1 146 10 185 4 277 1 328 1 188 1 333 1 225 1 
197 2 103 2 136 2 27 1 169 1 137 1 201 1 316 2 226 2 246 1 9 4 269 3 320 1 13 7 152 1 44 1 270 1 49 2 17 1 274 4 349 1 146 7 185 2 277 1 328 1 188 1 225 1 
197 1 136 1 137 2 274 3 349 1 201 1 185 1 146 4 316 1 328 1 226 1 333 1 9 3 269 2 13 4 152 1 44 1 49 1 
197 1 103 1 274 1 349 1 146 2 233 1 328 1 316 1 226 1 230 1 259 1 13 2 44 1 270 1 49 1 225 1 
103 1 27 1 274 2 349 1 146 3 185 1 328 1 226 2 9 1 269 1 13 3 44 1 49 2 
197 1 103 1 168 1 27 1 136 1 169 1 137 2 201 1 88 1 316 1 226 2 9 7 269 4 320 1 13 9 152 1 44 1 49 2 274 5 349 1 185 3 146 9 328 1 333 1 
197 1 103 1 168 1 27 1 136 1 169 1 137 2 201 1 88 1 316 1 226 2 9 7 269 4 320 1 13 9 152 1 44 1 49 2 274 5 349 1 185 3 146 9 328 1 333 1 
356 1 174 1 335 1 
335 1 260 1 304 2 
286 2 148 2 135 2 1 2 287 2 39 1 339 2 243 1 
286 3 135 2 1 2 287 2 87 1 170 1 341 1 243 1 5 1 171 1 89 2 90 1 140 2 173 1 8 1 39 1 178 2 94 2 97 1 153 1 55 1 74 1 215 2 329 1 58 1 351 1 218 1 353 1 148 3 221 1 163 1 123 1 339 2 191 1 82 1 130 1 380 1 
364 1 286 1 144 1 148 1 135 1 1 1 287 1 39 1 339 1 25 1 
52 1 286 1 364 1 181 1 356 1 135 1 327 1 278 1 352 1 21 1 78 1 148 1 306 1 335 1 
52 2 286 1 364 1 356 1 1 1 135 1 287 1 327 1 278 1 352 2 78 1 148 1 306 1 335 1 339 1 
52 1 295 1 6 1 352 1 34 1 
52 2 38 1 356 1 335 1 41 1 295 1 6 1 352 2 
52 1 295 1 352 1 
52 1 364 1 286 1 144 1 1 1 135 1 287 1 6 1 352 1 206 1 148 1 39 1 339 1 25 1 
335 1 
52 2 38 1 356 1 335 1 295 1 71 1 6 1 352 2 
52 5 154 1 356 1 240 1 105 2 57 1 202 1 6 2 303 2 352 5 36 1 220 1 38 1 335 1 43 2 295 2 379 1 131 1 381 1 
174 1 243 1 
286 2 135 2 1 1 357 1 287 1 243 2 237 1 148 2 339 1 
258 1 115 1 111 1 
153 1 286 1 363 1 87 1 215 1 243 1 351 1 218 1 89 1 90 1 140 1 173 1 148 1 163 1 82 1 130 1 
153 1 286 2 1 1 135 1 287 1 87 1 215 1 159 1 351 1 218 1 189 1 90 1 89 1 173 1 140 1 148 2 163 1 82 1 115 1 130 1 
286 5 1 4 135 5 287 4 370 1 243 1 159 2 227 1 189 1 237 1 21 1 148 5 92 1 339 1 
364 1 286 2 239 1 144 1 148 2 135 2 1 2 287 2 
286 3 148 3 135 3 1 3 287 3 339 1 243 1 159 1 
364 1 286 1 144 1 148 1 135 1 1 1 287 1 
237 1 364 1 286 1 148 1 135 1 1 1 357 1 287 1 339 1 
286 4 135 3 1 3 287 3 87 1 243 1 171 1 90 1 89 1 173 1 140 1 8 1 362 1 39 1 178 1 94 2 153 1 52 1 364 1 55 1 74 1 327 1 215 1 329 1 58 1 159 1 351 1 278 1 218 1 352 1 189 1 237 1 78 1 306 1 148 4 221 1 163 1 123 1 339 2 191 1 82 1 130 1 63 1 380 1 
21 1 286 2 148 2 135 2 1 1 287 1 370 1 243 1 159 1 
52 1 364 1 286 3 1 3 135 3 287 3 327 1 159 2 278 1 352 1 189 1 237 1 147 1 78 1 148 3 362 1 306 1 335 1 339 1 
286 2 1 2 135 2 287 2 159 1 237 1 148 2 258 1 339 1 115 1 
153 1 286 1 87 1 215 1 243 1 351 1 218 1 89 1 90 1 140 1 173 1 148 1 163 1 82 1 130 1 
153 1 286 1 87 1 215 1 243 1 351 1 160 1 218 1 89 1 90 1 140 1 173 1 148 1 163 1 280 1 
241 1 200 1 289 1 341 2 245 1 111 2 171 1 228 1 8 1 207 1 94 2 178 4 115 2 55 1 143 1 74 1 329 1 305 1 77 1 221 1 377 1 258 2 165 1 380 2 
364 1 286 1 148 1 135 1 1 1 239 1 287 1 278 1 
314 1 183 1 
314 1 183 1 
10 1 65 1 
10 1 65 1 
10 1 65 1 
314 1 106 1 183 1 
314 1 106 1 183 1 
20 1 314 1 183 1 
299 1 10 1 314 2 183 2 65 1 187 1 
314 1 106 1 183 1 
314 1 183 1 109 1 
314 1 183 1 109 1 
314 1 183 1 109 1 
272 1 15 1 52 1 286 2 135 2 1 2 145 1 287 2 326 1 314 1 183 1 369 1 243 1 100 1 371 1 352 1 20 1 139 1 22 1 148 2 62 1 238 1 285 1 296 1 
52 2 313 2 99 1 145 2 326 2 314 2 183 2 275 1 187 1 352 2 373 1 22 3 335 1 238 2 164 1 208 1 84 1 296 2 285 1 
197 1 136 1 316 1 
197 1 230 1 316 1 
197 3 167 1 136 2 315 1 230 1 261 1 
197 2 136 1 315 1 70 1 230 1 261 1 
197 2 136 1 315 2 230 1 261 1 
264 1 133 1 356 1 240 2 105 1 200 1 6 4 204 1 245 1 291 2 36 3 139 1 38 1 11 1 113 1 43 1 295 1 15 1 272 1 52 5 273 2 154 1 324 1 56 1 303 1 304 3 352 5 305 1 335 2 377 1 24 2 260 1 
133 2 356 1 240 6 105 2 200 3 6 7 204 1 33 1 245 3 291 6 34 5 36 8 139 4 344 1 38 1 247 1 11 3 295 6 43 2 45 1 52 9 252 1 154 1 56 2 303 2 304 9 352 9 305 3 220 1 335 5 377 3 24 6 340 5 260 3 195 1 
133 1 356 1 105 1 240 2 200 1 6 2 245 1 291 2 36 3 139 1 11 1 113 1 43 1 52 3 273 1 324 1 56 1 303 1 304 4 352 3 305 1 220 1 335 3 377 1 24 2 260 2 
133 1 356 1 105 1 240 4 200 2 6 3 33 1 245 2 291 4 36 5 139 2 247 1 11 2 113 1 43 1 45 1 52 4 273 2 324 1 56 1 303 1 304 7 352 4 305 2 220 1 335 4 377 2 24 4 260 3 
76 1 174 1 87 1 
87 1 325 1 
255 1 
153 1 87 1 351 1 
87 1 301 1 
153 1 87 1 
76 2 153 1 87 3 351 1 244 1 122 1 
200 1 120 1 341 4 254 1 245 1 205 1 332 1 207 3 190 1 175 1 337 2 141 1 178 7 165 2 380 3 355 1 262 1 
200 1 120 1 341 4 254 1 245 1 205 1 332 1 207 3 190 1 175 1 337 2 141 1 178 7 165 2 380 3 355 1 262 1 
200 1 120 1 341 4 254 1 245 1 205 1 151 1 332 1 207 3 190 1 175 1 337 2 141 1 178 7 165 2 380 3 355 1 262 1 
86 1 200 4 3 1 341 16 205 2 245 4 292 1 207 10 8 1 175 1 11 3 94 2 178 31 141 5 120 1 74 1 329 1 254 1 236 1 332 1 305 3 190 2 221 1 256 1 376 1 337 3 281 3 377 3 354 1 310 4 165 5 380 15 355 2 262 2 
86 1 200 1 341 5 245 1 205 1 8 2 207 4 94 4 178 9 141 1 74 2 120 1 329 2 254 1 219 1 60 1 332 1 190 1 221 2 337 2 165 3 355 1 380 4 262 1 
197 2 103 1 167 1 136 1 242 1 316 1 66 1 226 1 89 1 90 1 140 1 173 1 9 1 112 1 177 1 40 1 230 1 13 2 44 1 96 1 49 1 53 1 365 1 274 1 349 1 214 1 146 2 215 1 328 1 283 1 
197 2 167 1 103 1 2 1 136 1 242 1 316 1 66 1 226 1 89 1 90 1 140 1 173 1 69 1 91 1 9 2 177 1 40 1 230 1 13 3 44 1 96 1 49 1 53 1 365 1 274 1 349 1 214 1 146 3 215 1 
197 2 103 1 167 1 2 1 136 1 242 1 316 1 89 1 90 1 140 1 173 1 9 2 91 1 177 1 40 1 230 1 13 2 44 1 53 1 365 1 274 1 349 1 214 1 146 2 215 1 
103 2 87 1 226 1 318 1 35 1 90 1 89 1 140 1 173 1 69 1 177 2 40 2 13 1 49 1 298 1 153 1 53 2 146 1 215 1 75 1 163 1 224 1 309 1 
197 2 103 1 167 1 2 1 136 1 242 1 316 1 66 1 226 1 89 1 90 1 140 1 173 1 177 1 40 1 230 1 13 1 96 1 49 1 53 1 365 1 214 1 146 1 215 1 328 1 283 1 
172 1 
286 1 240 2 105 1 288 1 4 2 108 2 294 1 295 6 116 2 73 1 153 1 16 1 154 1 215 2 216 1 303 1 304 2 352 5 21 1 78 1 306 1 81 2 163 2 125 2 222 1 126 2 260 2 356 1 135 1 87 1 359 1 318 1 35 1 36 2 89 2 90 1 38 3 140 2 173 1 176 2 43 1 48 4 52 5 364 1 181 1 366 1 56 1 184 1 327 1 278 1 331 1 148 1 61 1 335 2 336 1 
286 1 135 1 288 1 108 1 38 1 294 1 295 2 71 1 48 2 52 3 364 1 181 1 184 1 327 1 278 1 331 1 352 3 21 1 78 1 306 1 148 1 61 1 
286 1 135 1 356 1 288 1 38 1 294 1 295 1 71 1 48 3 52 3 364 1 181 1 184 1 327 1 278 1 331 1 352 3 21 1 78 1 306 1 148 1 61 1 81 1 335 1 
286 1 135 1 356 1 288 1 108 1 38 1 294 1 71 1 295 2 48 3 52 3 364 1 181 1 184 1 327 1 278 1 331 1 352 3 21 1 78 1 306 1 148 1 61 1 81 1 125 1 335 1 
286 1 356 5 135 1 240 1 105 1 29 1 288 1 4 2 108 4 36 1 267 1 38 3 176 2 294 1 43 1 295 7 71 1 116 2 73 1 48 6 16 1 52 5 364 1 154 1 181 1 184 1 327 1 330 1 235 1 303 1 278 1 331 1 352 5 21 1 78 1 148 1 306 1 81 4 61 1 335 5 23 1 125 4 126 2 260 2 
286 1 105 1 240 1 288 1 4 2 108 2 294 1 295 4 73 1 116 2 16 1 154 1 216 1 303 1 304 2 352 4 21 1 78 1 306 1 81 2 125 2 126 2 260 2 135 1 356 1 36 1 38 2 176 2 43 1 48 4 52 4 364 1 181 1 184 1 327 1 278 1 331 1 148 1 61 1 335 2 
286 1 356 1 135 1 240 1 105 1 288 1 29 1 4 2 108 2 36 1 267 1 38 2 176 2 294 1 295 4 43 1 116 2 73 1 48 4 16 1 52 4 364 1 181 1 154 1 184 1 327 1 330 1 278 1 303 1 331 1 352 4 21 1 78 1 306 1 148 1 81 2 61 1 335 1 125 2 126 2 260 2 
286 1 356 1 135 1 240 1 105 1 288 1 29 1 4 2 108 2 36 1 267 1 38 2 176 2 294 1 295 4 43 1 116 2 73 1 48 4 16 1 52 4 364 1 181 1 154 1 184 1 327 1 330 1 278 1 303 1 331 1 352 4 21 1 78 1 306 1 148 1 81 2 61 1 335 1 125 2 126 2 260 2 
286 1 356 1 135 1 240 1 105 1 288 1 108 2 36 1 38 2 294 1 295 4 43 1 116 2 73 1 114 1 48 4 180 2 52 4 364 1 181 1 154 1 323 1 184 1 327 1 330 1 278 1 303 1 331 1 304 2 352 4 21 1 162 2 78 1 306 1 148 1 81 2 61 1 335 1 125 2 126 2 128 1 
286 1 356 1 135 1 240 1 105 1 29 1 288 1 4 2 108 3 36 1 267 1 38 2 176 2 294 1 43 1 295 5 116 2 73 1 48 5 16 1 52 4 364 1 154 1 181 1 184 1 327 1 330 1 235 1 303 1 278 1 331 1 352 4 21 1 78 1 306 1 148 1 61 1 81 3 335 1 125 3 126 2 260 2 
286 1 356 1 135 1 240 1 105 1 29 1 288 1 4 2 108 3 36 1 267 1 38 2 176 2 294 1 43 1 295 5 116 2 73 1 48 5 16 1 52 4 364 1 154 1 181 1 184 1 327 1 330 1 235 1 303 1 278 1 331 1 352 4 21 1 78 1 306 1 148 1 61 1 81 3 335 1 125 3 126 2 260 2 
286 1 105 1 240 1 288 1 108 2 294 1 295 4 114 1 73 1 116 2 154 1 216 1 303 1 304 2 352 4 21 1 78 1 162 2 306 1 81 2 125 2 126 2 135 1 356 1 36 1 38 2 43 1 48 4 52 4 180 2 364 1 181 1 184 1 327 1 278 1 331 1 148 1 61 1 335 1 
143 1 55 1 200 1 74 1 120 1 341 3 243 2 329 1 254 1 245 1 205 1 111 1 171 1 332 1 207 2 190 1 8 1 174 1 221 1 337 1 258 1 178 6 94 2 165 2 115 1 380 3 
200 1 341 8 243 1 317 1 245 2 111 11 171 1 292 1 207 2 8 2 11 2 346 1 141 1 94 4 178 14 115 11 97 1 55 2 74 2 155 1 156 1 329 2 236 1 305 2 221 2 281 3 258 4 377 1 191 1 165 1 310 3 83 1 380 6 
286 2 132 1 135 1 1 1 287 1 87 1 341 1 243 1 171 1 90 1 89 1 173 1 140 1 8 1 94 2 178 2 231 1 97 1 153 1 363 1 55 1 155 1 74 1 215 1 329 1 159 1 351 1 218 1 189 1 148 2 163 1 221 1 223 1 258 1 82 1 191 1 130 1 380 1 
286 3 2 1 1 1 287 1 200 3 341 10 243 2 205 1 245 3 111 7 293 1 8 3 207 8 11 2 115 7 153 2 211 1 120 1 74 3 155 1 215 3 159 1 351 2 254 1 218 2 305 2 79 1 163 1 221 3 258 7 82 2 26 2 165 4 130 2 135 1 265 2 87 2 32 2 171 3 89 3 90 2 140 3 173 2 94 6 178 20 141 4 97 1 51 2 55 3 329 3 58 2 189 1 332 1 190 1 148 3 337 1 377 2 191 1 380 10 
286 1 2 1 135 1 1 1 287 1 87 3 266 1 341 1 318 1 171 2 35 1 90 2 89 8 173 2 140 8 8 2 112 1 94 4 178 2 297 1 97 1 153 2 143 1 55 2 74 2 213 1 253 1 215 7 329 2 159 1 18 1 372 1 353 2 148 1 163 2 221 2 308 1 191 1 380 1 
286 1 1 1 135 1 287 1 200 1 341 1 245 1 111 1 171 1 207 1 8 1 11 1 94 2 178 3 115 1 55 1 74 1 155 1 329 1 237 1 305 1 148 1 221 1 258 1 339 1 377 1 165 1 380 2 102 1 
143 1 55 1 74 1 341 2 329 1 245 1 111 1 171 1 305 1 77 1 207 1 8 1 221 1 258 1 141 1 178 2 94 2 115 1 
143 1 55 1 74 1 200 1 329 1 111 1 171 1 207 1 8 1 228 1 221 1 258 1 377 1 178 2 94 2 165 1 115 1 380 2 
200 1 341 2 245 1 111 2 171 1 8 1 207 2 11 1 94 2 178 4 141 1 115 2 55 1 143 1 74 1 329 1 305 1 221 1 258 2 377 1 165 1 380 2 
55 1 74 1 341 2 329 1 372 1 245 1 111 1 171 1 305 1 77 1 207 1 8 1 221 1 258 1 141 1 178 2 94 2 115 1 
55 1 74 1 200 1 329 1 372 1 111 1 171 1 207 1 8 1 228 1 221 1 258 1 377 1 178 2 94 2 165 1 115 1 380 2 
200 1 341 2 245 1 111 2 171 1 8 1 207 2 11 1 94 2 178 4 141 1 115 2 55 1 74 1 329 1 372 1 305 1 221 1 258 2 377 1 165 1 380 2 
55 1 200 1 74 1 341 2 329 1 245 1 111 2 171 1 305 1 207 2 8 1 221 1 11 1 377 1 258 2 141 1 94 2 178 4 165 1 115 2 380 2 
286 1 87 1 341 1 243 1 171 1 90 1 89 1 173 1 140 1 8 1 178 2 94 2 97 1 153 1 55 1 74 1 215 1 58 1 329 1 351 1 218 1 148 1 163 1 221 1 82 1 191 1 130 1 380 1 
286 1 87 1 341 1 243 1 171 1 90 1 89 1 173 1 140 1 8 1 178 2 94 2 97 1 153 1 251 1 55 1 74 1 215 1 329 1 351 1 218 1 160 1 148 1 163 1 221 1 280 1 191 1 380 1 
200 1 341 2 245 1 111 2 171 1 8 1 207 2 11 1 94 2 178 4 141 1 115 2 55 1 74 1 155 1 329 1 305 1 221 1 258 2 377 1 165 1 380 2 
286 1 200 1 265 1 87 1 341 2 245 1 111 2 171 1 90 1 89 1 173 1 140 1 207 2 8 1 112 1 11 1 141 1 178 4 94 2 115 2 153 1 55 1 74 1 215 1 58 1 329 1 351 1 218 1 305 1 148 1 221 1 377 1 258 2 82 1 165 1 130 1 380 2 
286 1 1 1 135 1 287 1 200 1 341 2 245 1 111 1 171 1 207 1 8 1 11 1 141 1 94 2 178 3 115 1 55 1 74 1 155 1 234 1 329 1 237 1 305 1 148 1 221 1 377 1 339 1 258 1 380 1 
200 3 341 9 342 1 245 3 361 2 292 1 8 2 207 6 11 3 250 1 94 4 178 19 141 3 54 1 182 1 212 2 74 2 300 1 329 2 236 1 60 1 305 3 374 1 80 1 221 2 281 1 377 3 165 3 310 2 380 10 
312 1 86 2 104 1 134 1 198 1 200 2 341 14 342 2 203 1 245 3 361 1 292 2 319 1 207 4 8 3 11 3 141 2 250 1 94 6 178 26 182 1 212 4 74 3 300 1 329 3 60 1 305 3 80 2 221 3 281 2 377 2 165 2 310 2 380 12 
312 1 86 1 104 1 198 1 134 1 200 5 341 20 203 1 342 1 290 1 205 1 245 5 361 1 292 3 319 1 8 3 207 8 11 4 250 1 94 6 178 41 141 4 182 1 120 1 212 4 74 3 300 1 329 3 254 1 236 1 332 1 60 1 305 4 374 1 190 1 80 2 221 3 337 1 281 3 377 4 165 4 310 4 380 21 
312 1 86 2 104 1 198 1 134 1 200 4 341 20 203 1 342 1 290 1 205 1 245 5 361 1 292 3 319 1 8 4 207 7 11 4 250 1 94 8 178 38 141 3 182 1 120 1 212 4 74 4 300 1 329 4 254 1 236 1 332 1 60 1 305 4 374 1 190 1 80 2 221 4 337 1 281 3 377 3 165 4 310 4 380 18 
312 1 86 1 104 1 198 1 134 1 200 8 341 27 203 1 342 1 205 1 245 8 361 1 292 2 319 1 8 2 207 14 11 7 250 1 94 4 178 52 141 7 182 1 120 1 212 4 74 2 300 1 156 2 329 2 254 1 236 2 332 1 60 1 305 7 190 1 80 1 221 2 337 1 281 4 377 7 165 7 310 4 380 25 
373 1 99 1 145 1 314 1 326 1 183 1 238 1 217 1 187 1 296 1 
20 1 369 1 
334 1 145 1 314 1 326 1 183 1 238 1 46 1 110 1 296 1 
106 1 348 1 
350 1 109 1 
52 1 313 1 99 1 145 1 326 1 314 1 183 1 275 1 187 1 352 1 373 1 22 2 335 1 238 1 164 1 208 1 285 1 296 1 
52 1 313 1 99 1 145 1 326 1 314 1 183 1 275 1 187 1 352 1 373 1 22 2 335 1 238 1 164 1 208 1 285 1 296 1 
52 1 313 1 99 1 145 1 326 1 314 1 183 1 275 1 187 1 352 1 373 1 22 2 335 1 238 1 164 1 208 1 285 1 296 1 
299 1 106 1 348 1 
299 1 106 1 348 1 
299 1 350 1 109 1 
350 1 109 1 
100 1 371 1 
272 1 15 1 52 1 313 1 286 2 135 2 1 2 287 2 145 1 326 1 314 1 183 1 369 1 243 1 100 1 6 1 371 1 352 1 20 1 139 1 22 1 148 2 62 1 238 1 208 1 129 1 296 1 
286 2 135 2 87 1 30 1 341 1 343 1 171 1 90 1 89 2 173 1 140 2 8 1 268 1 94 2 178 2 14 1 297 1 97 1 153 1 55 1 155 1 74 1 253 1 215 2 329 1 353 2 148 2 221 1 338 1 191 1 380 1 
197 2 53 1 167 1 2 1 136 1 214 1 242 1 215 2 316 1 66 1 90 1 89 2 37 1 173 1 140 2 112 1 230 1 179 1 209 1 
197 2 53 1 167 1 2 1 136 1 214 1 242 1 215 1 316 1 66 1 89 1 90 1 140 1 173 1 230 1 179 1 322 1 
153 1 298 1 53 1 87 1 215 1 318 1 35 1 90 1 89 1 37 1 173 1 140 1 163 1 93 1 
197 2 53 1 167 1 2 1 136 1 214 1 242 1 215 1 316 1 66 1 90 1 89 1 37 1 140 1 173 1 230 1 179 1 209 1 
149 1 
36 1 356 1 174 1 240 1 335 1 379 1 131 1 
356 1 240 1 105 1 4 1 36 1 38 1 176 1 43 1 295 1 16 1 52 1 154 1 303 1 304 1 352 1 335 2 260 1 
196 1 0 2 105 4 240 8 200 2 244 1 245 2 291 6 112 1 11 2 248 1 249 1 295 5 153 3 154 4 301 2 215 3 158 1 351 3 303 4 304 12 352 5 76 2 305 2 78 2 163 1 222 1 257 2 24 6 260 6 131 1 356 2 87 10 28 2 358 2 31 2 36 9 90 4 89 3 173 3 140 3 38 3 43 4 271 2 52 5 51 2 56 2 325 3 186 2 59 2 335 8 378 1 377 2 379 1 
104 1 134 1 198 1 356 2 105 2 240 5 28 1 200 2 358 2 203 1 138 1 245 2 291 5 36 8 38 1 292 1 319 1 11 2 295 1 42 1 43 2 52 1 154 2 56 1 303 2 304 6 352 1 305 2 222 1 335 5 24 5 281 1 377 2 310 1 260 3 
286 1 1 1 135 1 105 1 240 2 287 1 28 1 200 1 358 2 29 1 205 1 245 2 36 2 206 1 39 1 43 1 52 1 364 1 154 1 144 1 303 1 254 1 352 1 148 1 190 1 339 1 25 1 192 1 
154 1 356 1 105 1 240 1 303 1 36 1 335 1 43 1 379 1 131 1 
51 1 240 5 28 1 200 2 358 2 304 10 245 2 291 5 305 2 36 5 11 2 335 5 24 5 377 2 260 5 
52 1 38 1 356 1 335 1 295 1 352 1 
85 1 105 2 240 2 87 1 359 1 318 1 36 2 35 1 90 1 89 4 173 1 140 4 38 2 43 2 295 4 153 1 52 3 154 1 98 1 56 2 215 4 158 2 303 2 352 3 220 1 163 2 222 2 336 1 378 1 
286 3 135 2 1 2 287 2 87 1 243 1 171 1 89 1 90 1 140 1 173 1 8 1 39 1 178 1 94 2 153 1 55 1 74 1 215 1 329 1 58 1 351 1 218 1 148 3 221 1 163 1 123 1 339 2 191 1 82 1 130 1 380 1 
154 1 356 2 240 2 105 1 56 1 303 1 304 4 291 2 36 1 335 4 222 1 337 1 24 2 43 1 260 2 
238 1 302 1 296 1 
238 1 302 1 296 1 
373 1 238 1 371 1 296 1 194 1 
238 1 302 1 296 1 
157 1 238 1 296 1 
157 1 238 1 296 1 
157 1 238 1 296 1 
238 1 296 1 
314 1 183 1 
86 1 200 1 74 2 120 1 341 4 329 2 254 1 245 1 205 1 332 1 207 3 8 2 190 1 221 2 337 1 178 8 141 1 94 4 165 2 380 4 
120 1 200 1 341 3 254 1 205 1 245 1 332 1 174 1 190 1 207 2 337 1 178 6 165 2 380 3 
200 1 74 1 276 1 341 2 329 1 245 1 305 1 207 2 8 1 221 1 11 1 377 1 94 2 178 4 141 1 165 1 380 2 
200 1 341 3 236 1 245 1 305 1 292 1 207 2 11 1 377 1 281 1 178 7 141 1 165 1 310 2 380 4 
86 2 200 3 341 11 205 2 245 3 7 1 207 9 8 2 11 2 346 1 141 4 178 23 94 4 120 1 74 2 156 1 329 2 254 1 236 1 332 1 305 2 190 2 221 2 337 1 281 2 377 2 310 2 165 5 380 12 
178 1 310 1 380 1 
341 1 281 1 178 1 
51 1 74 1 200 1 276 1 341 3 329 1 245 1 305 1 8 1 207 3 221 1 11 1 377 1 94 2 178 6 141 1 165 2 380 3 
134 1 198 1 104 1 200 2 341 6 203 1 245 2 292 1 8 1 207 2 319 1 11 2 141 1 178 12 94 2 74 1 329 1 60 1 305 2 221 1 281 1 377 2 310 1 165 1 380 6 
207 2 190 1 200 1 341 3 141 1 178 6 165 1 254 1 205 1 380 3 245 1 
86 1 74 1 120 1 341 1 329 1 205 1 332 1 7 1 207 2 190 1 8 1 221 1 141 1 178 3 94 2 165 1 380 2 
74 1 200 2 341 5 329 1 254 1 205 2 245 2 60 1 8 1 190 2 207 5 221 1 94 2 192 1 141 2 178 10 165 3 380 5 
74 1 341 2 329 1 245 1 60 1 305 1 8 1 207 1 221 1 94 2 178 2 141 1 
200 1 74 1 341 2 329 1 245 1 60 1 305 1 207 2 8 1 221 1 11 1 377 1 94 2 178 4 141 1 165 1 380 2 
86 1 74 3 341 1 329 3 205 1 7 1 60 1 374 1 8 3 190 1 207 2 221 3 178 3 94 6 141 1 165 1 380 2 
86 2 200 5 341 16 205 3 245 5 7 1 292 1 8 5 207 12 11 3 94 10 178 34 141 5 120 1 74 5 276 1 329 5 254 2 236 1 332 1 60 1 305 3 374 1 190 3 256 1 221 5 337 1 376 1 281 3 377 3 354 1 310 4 165 7 380 18 
134 1 200 1 341 4 245 1 205 1 292 1 8 1 207 2 178 8 94 2 74 1 120 1 329 1 254 1 60 1 332 1 190 1 221 1 337 1 281 1 310 1 165 2 380 4 
134 1 200 1 341 6 205 1 245 2 292 1 8 2 207 3 11 1 178 11 94 4 141 1 120 1 74 2 276 1 329 2 254 1 236 1 332 1 60 1 305 1 190 1 221 2 337 1 281 1 165 2 310 2 380 5 
86 1 104 1 134 1 198 1 200 3 341 9 203 1 205 1 245 3 292 1 8 3 207 4 319 1 11 2 141 1 178 19 94 6 120 1 74 3 276 1 329 3 254 1 332 1 60 1 305 2 190 1 221 3 337 1 281 1 377 2 310 1 165 3 380 10 
86 1 134 1 198 1 104 1 200 2 341 10 203 1 205 1 245 3 292 1 8 3 207 5 319 1 11 2 141 2 178 17 94 6 120 1 74 3 276 1 329 3 254 1 332 1 60 1 305 2 190 1 221 3 337 1 281 1 377 1 310 1 165 3 380 7 
134 1 200 1 341 4 245 1 205 1 292 1 8 1 207 2 178 8 94 2 74 1 120 1 329 1 254 1 60 1 332 1 190 1 221 1 337 1 281 1 310 1 165 2 380 4 
134 1 198 1 104 1 200 2 341 6 203 1 245 2 292 1 8 1 207 2 319 1 11 2 141 1 178 12 94 2 74 1 329 1 60 1 305 2 221 1 281 1 377 2 310 1 165 1 380 6 
86 2 104 1 134 1 198 1 200 2 341 10 203 1 205 1 245 3 292 1 319 1 8 4 207 5 11 2 141 2 178 18 94 8 120 1 74 4 276 1 329 4 254 1 332 1 60 1 305 2 190 1 221 4 337 1 281 1 377 1 310 1 165 3 380 8 
86 2 104 1 134 1 198 1 200 2 341 9 203 1 245 3 292 1 319 1 8 4 207 6 11 3 141 3 178 16 94 8 74 4 329 4 60 1 305 3 374 1 221 4 281 1 377 2 310 1 165 3 380 7 
200 1 120 1 341 3 254 1 205 3 245 1 332 2 190 3 207 6 178 7 141 3 165 3 380 4 
86 2 104 1 134 1 198 1 200 2 341 10 203 1 205 1 245 3 292 1 319 1 8 4 207 4 11 2 141 1 178 18 94 8 120 1 74 4 329 4 254 1 332 1 60 1 305 2 374 1 190 1 221 4 337 1 281 1 377 1 310 1 165 3 380 8 
286 1 21 1 148 1 135 1 368 1 370 1 243 1 
286 1 135 1 368 1 370 1 243 1 21 1 161 1 345 1 148 1 307 1 375 1 193 1 
153 1 35 1 90 1 89 1 173 1 140 1 174 1 163 1 87 1 215 1 318 1 
153 1 286 2 1 1 135 1 287 1 87 1 215 1 243 1 159 1 351 1 218 1 90 1 89 1 140 1 173 1 148 2 163 1 130 1 
286 2 135 2 1 2 287 1 87 3 243 1 89 1 90 1 173 1 140 1 153 2 364 1 301 1 215 1 327 1 158 1 159 1 351 2 278 1 59 1 218 1 148 2 130 1 
286 2 135 2 1 2 287 1 87 3 243 1 89 2 90 1 173 1 140 2 153 2 364 1 347 1 301 1 215 2 327 1 158 1 159 1 351 2 278 1 59 1 218 1 148 2 280 1 
286 1 135 1 1 1 356 1 287 1 87 4 199 1 107 1 89 2 90 1 173 1 140 2 206 1 39 1 295 1 52 2 153 1 364 1 144 1 325 1 301 1 215 2 158 1 59 1 351 1 352 2 76 1 78 1 148 1 163 1 335 1 339 1 25 1 
153 1 52 2 347 1 356 1 325 1 87 4 301 1 215 3 158 1 351 1 59 1 352 2 76 1 90 1 89 3 78 1 140 3 173 1 163 1 335 1 257 1 295 1 
90 1 89 1 173 1 140 1 308 1 215 1 
153 2 142 1 119 1 2 1 87 3 213 1 266 1 215 6 244 1 351 1 18 1 353 1 89 7 90 3 140 7 173 2 163 2 112 1 308 1 95 1 297 1 
286 2 135 1 1 1 287 1 200 1 87 1 265 1 341 3 243 2 32 1 343 1 245 1 205 1 111 1 171 2 90 1 89 1 173 1 140 1 207 2 8 2 112 1 178 6 94 4 115 1 153 1 55 2 120 1 155 1 74 2 215 1 329 2 58 1 159 1 351 1 254 1 218 1 332 1 190 1 148 2 221 2 337 1 258 1 82 1 165 2 130 1 380 3 
0 1 356 1 240 1 105 2 87 2 31 1 6 1 36 1 89 1 140 1 38 1 43 2 295 2 52 3 154 2 325 1 215 1 186 1 303 2 352 3 76 1 78 1 163 1 335 1 257 1 378 1 379 1 131 1 
196 1 153 1 87 2 215 2 244 1 351 1 76 1 89 2 90 2 140 2 173 1 112 1 308 1 
153 1 347 1 367 1 87 1 215 4 318 1 35 1 90 1 89 4 140 4 173 1 163 1 112 1 
153 1 142 1 150 1 87 1 215 2 158 1 351 1 89 2 90 2 140 2 173 1 293 1 95 1 232 1 
197 1 90 1 89 1 173 1 140 1 163 1 214 1 230 1 215 1 316 1 
153 1 90 1 89 2 173 1 140 2 2 1 87 1 112 1 215 2 14 1 297 1 
153 2 367 1 87 3 213 1 266 1 215 4 158 1 318 1 35 1 89 5 90 2 140 5 173 2 163 1 112 1 297 1 
153 2 367 1 87 3 213 1 215 4 158 1 318 1 35 1 89 5 90 2 140 5 173 2 163 1 112 1 311 1 297 1 
153 1 286 2 1 1 135 1 287 1 87 1 215 1 243 1 159 1 351 1 218 1 90 1 89 1 140 1 173 1 148 2 163 1 280 1 
142 1 153 1 90 2 119 1 89 1 173 1 140 1 87 1 215 1 158 1 351 1 244 1 95 1 
19 1 12 1 243 1 282 1 284 1 
52 2 364 1 64 1 356 1 327 1 243 1 278 1 6 1 352 2 19 2 78 1 362 1 306 1 335 1 12 2 282 2 127 1 284 1 101 1 
19 1 286 1 148 1 135 1 268 1 30 1 338 1 282 1 284 1 
64 1 284 1 101 1 
174 1 274 1 349 1 44 1 
274 1 349 1 146 1 13 1 44 1 226 1 49 1 
103 1 177 1 146 1 
263 1 274 1 349 1 146 3 328 1 121 1 226 1 229 1 13 3 270 2 44 1 49 1 
9 1 274 1 137 1 349 1 146 2 13 2 44 1 226 1 49 1 
197 1 136 1 274 1 201 1 146 1 328 1 316 1 226 1 269 1 13 1 49 1 
274 1 146 1 328 1 13 1 44 1 226 1 49 1 
349 1 146 1 328 1 13 1 44 2 226 1 49 1 
68 1 166 1 274 1 146 2 328 1 67 1 13 2 44 1 226 2 49 2 
169 1 274 2 349 1 146 3 185 1 328 1 226 1 9 2 269 1 320 1 13 3 44 1 49 1 
197 2 167 1 136 1 274 1 349 1 146 2 328 1 316 1 226 1 9 1 124 1 230 1 13 2 44 1 49 1 
137 1 274 2 349 1 146 4 185 1 328 1 226 2 333 1 9 2 269 1 13 4 44 1 49 2 
274 1 349 1 146 1 328 1 13 1 44 1 226 1 49 1 
263 1 274 3 349 2 146 4 185 1 226 1 9 2 229 1 269 1 13 4 72 1 270 1 44 2 49 1 
9 1 274 1 349 1 279 1 146 2 88 1 328 1 13 2 44 1 226 1 49 1 321 1 
263 2 274 1 349 1 146 3 328 1 226 1 229 1 13 3 270 2 44 1 117 1 49 1 
118 2 210 1 274 2 360 1 
146 1 328 1 13 1 47 1 226 1 49 1 
9 1 274 1 349 1 146 2 320 1 328 1 13 2 44 1 226 1 49 1 
50 1 
274 1 349 1 146 1 328 1 13 1 44 1 226 1 49 1 
9 1 274 1 349 1 146 3 320 1 328 1 13 3 44 1 270 1 226 1 49 1 
274 1 269 1 185 1 72 1 
274 1 44 1 

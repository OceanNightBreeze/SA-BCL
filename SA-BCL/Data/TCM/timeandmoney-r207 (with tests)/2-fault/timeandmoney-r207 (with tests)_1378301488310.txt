#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
70 1 186 3 9 2 189 1 363 1 339 2 355 2 340 1 139 1 127 3 311 1 39 1 198 1 
70 1 72 1 363 6 51 1 339 5 340 3 24 1 296 1 127 9 215 1 182 2 186 9 9 2 302 1 189 1 163 1 134 2 355 2 166 1 376 1 139 1 87 2 88 1 357 1 228 2 311 2 39 1 198 4 
70 1 72 1 363 6 51 1 339 5 340 3 24 1 296 1 127 9 215 1 182 2 186 9 9 2 302 1 189 1 163 1 134 2 355 2 166 1 376 1 139 1 87 2 88 1 357 1 228 2 311 2 39 1 198 4 
70 1 72 1 363 7 51 1 339 6 340 4 24 1 296 1 127 10 215 1 182 2 186 10 9 2 302 1 189 1 163 1 134 2 355 2 166 1 376 1 139 1 87 2 88 1 357 1 228 2 311 2 39 1 198 5 
70 1 72 1 363 4 51 1 339 4 340 2 296 1 127 7 215 1 182 1 186 7 9 2 302 1 189 1 163 1 134 2 355 2 166 1 376 1 139 1 87 2 88 1 357 1 228 2 311 2 39 1 198 3 
70 1 186 4 9 1 189 1 363 3 163 1 134 1 339 3 340 1 355 1 166 1 24 1 87 1 127 4 228 1 39 1 182 2 198 2 
70 1 186 2 9 1 121 1 189 1 339 1 51 1 355 1 265 1 87 1 88 1 127 2 228 1 311 1 39 1 286 1 
70 1 92 1 363 7 339 5 340 3 24 1 127 9 215 1 182 2 186 9 9 2 302 1 189 1 163 1 134 1 355 2 166 1 139 1 87 1 228 1 311 1 195 1 39 1 198 4 
70 1 92 1 363 7 339 5 340 3 24 1 127 9 215 1 182 2 186 9 9 2 302 1 189 1 163 1 134 1 355 2 166 1 139 1 87 1 228 1 311 1 195 1 39 1 198 4 
145 1 161 1 62 1 162 1 190 1 239 1 222 1 292 1 54 1 100 1 295 1 168 1 115 1 17 1 
98 1 
98 1 153 1 292 1 255 1 377 1 190 2 239 2 219 1 
298 1 190 5 63 1 239 5 97 1 14 1 221 2 98 1 153 1 292 2 99 1 367 1 4 1 377 2 217 2 129 1 116 1 219 1 196 2 
98 1 106 1 219 1 
98 1 68 2 281 1 
54 1 168 2 295 2 100 2 62 2 162 2 271 1 115 2 
260 1 231 1 312 1 46 2 176 1 235 1 266 1 152 1 54 1 295 2 100 2 80 1 155 1 214 1 270 1 271 1 104 1 105 2 185 2 248 1 32 1 322 1 10 1 62 2 162 3 33 2 136 1 35 1 167 1 223 1 168 3 379 1 141 2 310 1 229 1 115 2 332 1 
54 1 145 1 168 1 295 1 100 1 161 1 62 1 162 1 115 1 17 1 
261 1 161 1 162 1 326 1 190 1 280 1 239 1 52 1 53 1 98 1 305 1 295 1 168 1 219 1 
62 1 161 1 162 1 326 1 190 2 280 1 239 2 52 1 53 1 98 1 100 1 295 1 168 1 115 1 219 1 
292 1 377 1 234 1 190 1 239 1 
98 1 153 1 292 1 377 1 374 1 190 2 239 2 219 1 
377 1 190 1 239 1 
100 1 168 2 295 2 62 1 325 1 162 2 181 1 271 2 115 1 
372 1 378 1 368 1 
105 1 260 1 185 1 32 1 322 1 46 1 10 1 162 1 324 1 235 1 152 1 168 1 379 1 229 1 271 1 104 1 
106 1 271 1 
260 1 105 1 185 1 335 1 32 1 322 1 10 1 62 1 46 1 162 2 235 1 165 1 152 1 100 1 295 1 168 2 378 1 379 1 229 1 104 1 
168 3 295 3 100 3 62 3 162 3 115 1 271 1 165 1 
168 1 295 1 100 1 161 1 62 1 162 1 17 1 
168 1 295 1 100 1 161 1 62 1 162 1 325 1 181 1 115 1 
260 1 335 1 231 1 312 1 46 1 235 1 239 1 52 1 53 1 266 1 152 1 54 1 295 3 100 3 80 1 155 1 270 1 271 1 104 1 105 1 185 1 248 1 32 1 322 1 10 1 220 1 62 3 161 1 325 1 162 4 326 1 190 1 33 1 280 1 136 1 165 1 254 1 168 4 379 1 141 2 310 1 229 1 115 2 332 1 
305 1 168 2 295 2 100 1 62 1 380 1 162 2 271 1 165 1 
335 1 161 1 62 3 220 1 325 1 162 3 326 1 190 1 280 1 239 1 52 1 165 2 53 1 98 1 342 1 100 3 295 3 168 3 115 1 
372 1 168 2 295 2 100 2 378 1 62 2 162 2 325 1 115 1 165 1 
105 1 260 1 185 1 32 1 46 1 10 1 322 1 162 1 235 1 152 1 168 1 379 1 229 1 271 1 104 1 
105 1 260 1 185 1 32 1 46 1 10 1 322 1 162 1 338 1 235 1 152 1 168 1 5 1 229 1 271 1 
372 2 273 1 231 2 287 1 248 1 44 1 213 1 312 1 303 1 109 1 33 4 22 1 149 1 266 1 223 2 378 2 80 1 368 2 141 2 331 1 270 1 310 1 216 1 348 1 
168 1 295 1 100 1 161 1 62 1 256 1 162 1 280 1 
335 1 188 1 62 4 162 5 325 1 165 2 96 1 305 1 100 4 295 5 168 5 380 1 115 1 271 1 
168 2 295 2 100 2 256 1 161 1 62 2 162 2 17 1 
158 1 58 1 224 1 
207 1 146 1 175 1 58 2 224 2 200 1 
58 1 224 1 
58 1 224 1 
175 1 200 1 
175 1 200 1 
175 1 200 1 
58 1 224 1 84 1 
58 1 224 1 84 1 
58 1 224 1 84 1 
58 1 224 1 123 1 
58 1 224 1 123 1 
58 1 224 1 123 1 
361 2 133 2 146 1 42 2 262 1 190 2 327 3 253 2 239 2 164 2 241 1 98 1 78 1 79 1 224 2 58 2 66 1 67 1 6 1 
361 1 42 1 237 1 239 1 77 1 100 2 295 2 58 1 6 1 271 1 244 1 158 1 133 1 246 1 62 2 162 2 327 1 190 1 164 1 168 2 208 1 193 1 224 1 113 1 
87 2 323 1 134 1 29 2 286 1 
87 1 228 1 134 1 
87 1 228 1 286 1 
45 1 87 3 323 1 134 2 29 1 286 1 
87 2 323 1 134 1 7 1 29 1 286 1 
44 1 237 1 122 1 22 1 178 2 149 1 238 1 239 5 97 2 153 1 292 4 98 2 4 1 367 3 317 1 346 1 83 1 217 1 219 1 246 1 190 5 135 2 110 2 281 1 221 1 377 1 208 1 331 1 257 1 68 3 196 1 259 1 
44 3 234 5 20 1 22 3 178 6 149 3 239 9 97 6 292 7 98 5 153 1 4 1 367 8 346 2 83 3 156 1 217 2 219 1 190 9 11 1 110 6 281 3 14 1 221 2 208 4 377 6 331 3 257 2 114 1 227 1 68 9 89 5 144 1 259 1 196 2 
44 1 122 1 22 1 149 1 178 2 238 1 239 3 97 2 98 3 292 2 367 3 346 1 83 1 217 1 219 1 190 3 135 1 110 2 281 2 14 1 221 1 208 1 331 1 257 1 68 4 196 1 
44 2 122 1 20 1 22 2 178 4 149 2 239 4 238 1 97 4 98 4 292 3 367 5 346 1 83 2 156 1 217 1 219 1 190 4 135 2 110 4 281 3 14 1 221 1 208 2 331 2 257 1 114 1 68 7 196 1 
95 1 
274 1 106 1 322 1 
322 1 276 1 
322 1 10 1 
260 1 274 2 294 1 322 3 10 1 103 1 
260 1 322 1 10 1 
322 1 75 1 
318 1 320 1 245 1 231 3 60 2 44 1 213 2 22 1 109 3 33 7 36 1 223 4 343 1 297 1 170 1 359 1 157 1 203 1 
334 1 231 15 44 4 213 5 47 3 22 4 289 1 149 3 50 1 266 1 343 2 81 1 270 1 347 1 297 1 83 3 157 1 203 2 320 5 245 2 248 1 60 3 321 1 33 31 109 10 36 2 223 16 141 2 331 3 308 4 310 1 170 1 359 1 258 1 
334 1 231 4 44 1 199 1 213 3 22 1 266 2 343 1 270 2 203 1 157 1 320 1 245 1 248 2 60 2 250 1 33 9 109 4 36 1 223 5 141 4 310 2 359 1 170 1 
320 1 245 1 231 3 60 2 44 1 213 2 22 1 109 3 33 7 36 1 223 4 343 1 297 1 170 1 359 1 203 1 157 1 
320 1 245 1 231 3 60 2 44 1 213 2 22 1 109 3 33 7 36 1 223 4 343 1 297 1 170 1 359 1 203 1 157 1 
46 1 120 1 235 1 341 1 264 1 152 1 101 2 127 1 105 1 185 1 319 1 186 1 9 1 32 1 204 1 351 1 10 1 322 1 191 2 355 1 283 2 311 2 381 1 
118 1 212 1 46 1 45 1 235 1 291 1 179 1 101 1 127 1 105 1 185 1 186 1 9 1 32 1 134 1 252 1 191 1 355 1 283 1 138 1 87 2 228 1 311 1 39 1 69 1 286 1 
70 1 118 1 212 1 46 1 45 1 235 1 363 1 339 1 291 1 179 1 101 1 127 2 105 1 185 1 186 2 9 1 32 1 189 1 134 1 191 1 355 1 283 1 138 1 306 1 87 2 228 1 311 1 39 1 69 1 286 1 
70 1 118 1 212 1 45 1 46 1 120 1 235 1 363 2 339 1 291 1 101 1 127 3 105 1 185 1 186 3 9 1 32 1 189 1 134 1 252 1 353 1 191 1 355 1 283 1 138 1 87 2 228 1 311 1 69 1 286 1 
70 1 118 1 212 1 46 1 45 1 235 1 363 2 339 1 101 1 127 2 105 1 185 1 186 2 32 1 189 1 252 1 353 1 134 1 191 1 283 1 87 2 228 1 311 1 69 1 286 1 
370 1 
46 2 235 1 147 2 239 5 3 2 52 1 97 2 53 1 152 2 98 2 153 3 4 1 295 1 57 1 344 1 345 1 105 2 59 1 351 1 61 2 10 1 161 1 162 1 108 1 305 1 168 1 209 1 64 1 257 1 68 2 360 1 173 1 261 1 316 2 126 2 367 2 26 1 217 1 218 1 28 4 219 1 132 2 185 2 31 1 32 1 322 1 326 1 190 5 280 1 281 2 221 1 377 6 225 2 381 1 196 1 
261 1 147 1 239 3 52 1 53 1 153 1 295 1 26 1 28 2 59 1 161 1 162 1 326 1 108 1 190 3 280 1 305 1 255 1 168 1 377 2 64 1 360 1 
261 1 239 3 52 1 3 1 53 1 98 1 153 1 295 1 26 1 28 3 219 1 59 1 161 1 162 1 326 1 108 1 190 3 280 1 305 1 255 1 377 1 168 1 64 1 360 1 
261 1 147 1 239 3 52 1 3 1 53 1 153 1 98 1 295 1 26 1 28 3 219 1 59 1 161 1 162 1 326 1 108 1 190 3 280 1 255 1 305 1 168 1 377 2 64 1 225 1 360 1 
145 1 147 2 239 3 52 1 53 1 97 1 153 1 98 1 54 1 295 2 4 1 100 1 59 1 62 1 161 2 162 2 108 1 255 1 305 1 168 2 64 1 16 1 115 1 360 1 17 1 173 1 119 1 261 1 367 1 26 1 217 1 28 2 219 1 275 1 326 1 190 3 280 1 221 1 222 1 377 3 284 1 225 2 196 1 
147 2 239 4 52 1 3 2 53 1 97 1 153 2 98 2 295 1 4 1 57 1 59 1 61 2 161 1 162 1 108 1 305 1 168 1 64 1 68 2 360 1 173 1 261 1 316 2 367 1 126 2 26 1 217 1 28 4 218 1 132 2 219 1 326 1 190 4 280 1 281 2 221 1 377 4 225 2 196 1 
145 1 173 1 261 1 239 2 52 1 97 1 53 1 54 1 98 1 100 1 367 1 295 2 4 1 26 1 217 1 28 2 219 1 59 1 275 1 62 1 161 2 162 2 326 1 108 1 190 2 280 1 222 1 221 1 305 1 168 2 64 1 284 1 115 1 360 1 17 1 196 1 
145 1 173 1 261 1 239 2 52 1 97 1 53 1 54 1 98 1 100 1 367 1 295 2 4 1 26 1 217 1 28 2 219 1 59 1 275 1 62 1 161 2 162 2 326 1 108 1 190 2 280 1 222 1 221 1 305 1 168 2 64 1 284 1 115 1 360 1 17 1 196 1 
211 2 261 1 147 2 365 1 316 2 239 4 3 2 52 1 97 1 53 1 98 1 153 2 367 1 56 1 295 1 4 1 57 1 25 1 26 1 217 1 28 4 219 1 350 1 59 1 61 2 161 1 162 1 326 1 108 1 190 4 280 1 221 1 192 2 305 1 377 4 168 1 64 1 225 2 68 2 360 1 196 1 
145 1 147 1 239 2 3 1 52 1 53 1 97 1 98 1 54 1 295 2 4 1 100 1 59 1 161 2 62 1 162 2 108 1 305 1 168 2 64 1 16 1 115 1 360 1 17 1 173 1 261 1 367 1 26 1 217 1 28 3 219 1 275 1 326 1 190 2 280 1 221 1 222 1 377 1 284 1 225 1 196 1 
145 1 147 1 239 2 3 1 52 1 53 1 97 1 98 1 54 1 295 2 4 1 100 1 59 1 161 2 62 1 162 2 108 1 305 1 168 2 64 1 16 1 115 1 360 1 17 1 173 1 261 1 367 1 26 1 217 1 28 3 219 1 275 1 326 1 190 2 280 1 221 1 222 1 377 1 284 1 225 1 196 1 
147 2 239 4 52 1 3 2 53 1 97 1 153 2 98 1 56 1 295 1 4 1 57 1 59 1 61 2 161 1 162 1 108 1 305 1 168 1 64 1 68 2 360 1 211 2 261 1 316 2 367 1 26 1 217 1 28 4 218 1 219 1 326 1 190 4 280 1 221 1 192 2 377 4 225 2 196 1 
231 1 174 1 46 8 312 2 93 1 235 2 152 2 266 2 295 1 100 1 80 2 270 2 216 1 183 1 105 7 185 8 32 2 248 2 351 1 205 1 62 1 322 3 10 2 162 1 252 1 33 2 136 1 35 1 165 1 167 2 223 1 306 1 168 1 141 4 310 2 38 1 143 1 90 1 381 1 
231 2 44 1 213 1 312 1 22 1 149 1 266 1 100 1 295 1 80 1 368 1 369 1 270 1 83 1 372 1 248 1 301 1 62 1 325 1 162 1 109 1 33 3 223 1 168 1 378 1 141 2 331 1 310 1 115 1 
231 3 44 1 312 1 213 2 22 1 266 1 343 1 80 1 368 1 270 1 216 1 271 2 157 1 372 1 245 1 106 1 248 1 60 1 109 2 33 6 223 3 378 1 141 2 310 1 359 1 170 1 
231 6 43 1 44 2 213 1 312 1 47 3 22 1 149 2 240 1 266 2 125 1 80 2 81 1 368 11 270 2 83 2 271 1 372 4 320 1 248 2 301 1 107 1 109 2 33 14 136 1 35 1 223 8 378 11 141 4 331 1 308 3 310 2 258 1 
260 1 335 1 231 1 46 1 312 1 235 1 152 1 266 1 295 1 100 1 80 1 270 1 271 1 104 1 105 1 372 1 185 1 299 1 32 1 248 1 322 1 10 1 301 1 62 1 277 1 324 1 162 2 33 2 136 1 35 1 165 1 223 1 168 2 379 1 85 1 141 2 310 1 229 1 
40 1 335 1 231 10 44 3 46 3 235 2 2 2 149 2 152 1 100 1 295 1 343 1 157 1 104 2 105 3 245 1 60 1 248 3 62 1 301 1 10 2 162 3 252 1 109 8 165 1 168 3 169 2 310 3 170 1 359 1 260 2 172 1 213 4 312 3 364 2 22 3 266 3 80 3 368 7 270 3 83 2 271 2 371 1 372 7 185 3 320 4 32 2 322 2 33 20 136 1 35 1 223 10 379 2 378 7 194 2 141 6 331 2 229 2 332 2 
372 1 320 1 248 1 44 1 312 1 303 1 109 1 33 2 149 1 266 1 223 2 378 1 80 1 368 1 141 2 270 1 310 1 216 1 
372 1 231 2 248 1 213 1 312 1 109 1 33 2 22 1 266 1 378 1 80 1 368 1 141 2 331 1 270 1 310 1 216 1 348 1 
231 2 44 1 312 1 213 1 22 1 149 1 266 1 80 1 368 2 270 1 83 1 216 1 372 2 320 1 248 1 33 4 109 2 223 2 378 2 141 2 331 1 310 1 
372 1 320 1 248 1 44 1 312 1 303 1 109 1 33 2 149 1 266 1 223 2 378 1 80 1 368 1 141 2 270 1 310 1 38 1 
372 1 231 2 248 1 213 1 312 1 109 1 33 2 22 1 266 1 378 1 80 1 368 1 141 2 331 1 270 1 310 1 38 1 348 1 
231 2 44 1 312 1 213 1 22 1 149 1 266 1 80 1 368 2 270 1 83 1 372 2 320 1 248 1 33 4 109 2 223 2 378 2 141 2 331 1 310 1 38 1 
231 2 44 1 312 1 213 1 22 1 149 1 266 1 80 1 368 2 270 1 83 1 372 2 320 1 248 1 33 4 109 2 223 2 378 2 141 2 331 1 310 1 
105 1 260 1 185 1 231 1 248 1 32 1 312 1 322 1 46 1 10 1 162 1 235 1 33 2 136 1 35 1 266 1 152 1 223 1 168 1 80 1 379 1 141 2 310 1 270 1 229 1 271 1 332 1 104 1 
105 1 260 1 185 1 231 1 248 1 32 1 312 1 322 1 46 1 10 1 162 1 338 1 235 1 33 2 136 1 35 1 266 1 152 1 293 1 223 1 168 1 80 1 141 2 5 1 310 1 270 1 229 1 271 1 
231 2 44 1 312 1 213 1 22 1 149 1 266 1 80 1 368 2 270 1 83 1 372 2 320 1 248 1 301 1 33 4 109 2 223 2 378 2 141 2 331 1 310 1 
260 1 231 2 44 1 213 1 46 1 312 1 235 1 22 1 149 1 266 1 80 1 368 2 270 1 83 1 104 1 372 2 105 1 320 1 185 1 32 1 248 1 10 1 322 1 162 1 109 2 33 4 223 2 306 1 168 1 378 2 379 1 169 1 331 1 141 2 310 1 229 1 332 1 
231 1 44 1 312 1 22 1 149 1 266 1 100 1 295 1 80 1 368 1 180 1 270 1 83 1 372 1 320 1 248 1 301 1 62 1 325 1 162 1 109 1 33 3 223 2 168 1 378 1 331 1 141 2 310 1 115 1 
18 1 231 10 199 1 44 3 213 3 313 2 47 1 48 1 22 3 149 3 263 1 266 2 267 2 81 1 270 2 83 3 130 1 320 3 159 1 248 2 33 19 109 6 223 9 86 1 141 4 331 3 308 2 226 1 310 2 258 1 
334 1 18 2 231 12 199 1 44 3 213 1 313 4 47 2 48 1 22 2 149 3 263 1 266 2 267 1 270 2 83 3 102 1 130 1 320 1 248 2 300 1 251 1 375 1 109 2 33 26 13 1 15 1 223 14 141 4 331 2 308 2 226 2 310 2 258 2 
334 1 231 21 44 5 199 1 47 3 48 1 149 4 343 1 242 1 102 1 157 1 245 1 248 3 60 1 300 1 251 1 109 8 13 1 15 1 308 4 310 3 258 3 359 1 170 1 18 2 213 4 313 4 22 5 263 1 266 3 267 1 81 1 270 3 83 4 130 1 320 4 33 41 375 1 223 20 86 1 331 4 141 6 226 1 
334 1 231 18 44 5 199 1 47 3 48 1 149 4 343 1 242 1 102 1 157 1 245 1 248 3 60 1 300 1 251 1 109 6 13 1 15 1 308 4 310 3 258 3 359 1 170 1 18 2 213 4 313 4 22 4 263 1 266 3 267 1 81 1 270 3 83 4 130 1 320 2 33 38 375 1 223 20 86 1 331 3 141 6 226 1 
18 1 231 24 199 1 44 8 213 7 313 3 47 4 48 1 22 8 149 7 263 1 266 1 267 1 343 1 81 2 270 1 83 7 102 1 157 1 130 1 320 6 245 1 60 1 248 1 300 1 107 2 251 1 375 1 33 50 109 13 13 1 15 1 223 26 141 2 331 7 308 4 226 1 310 1 170 1 359 1 258 2 
361 1 241 1 133 1 146 1 42 1 262 1 58 1 224 1 21 1 164 1 
244 1 158 1 
361 1 268 1 133 1 42 1 71 1 58 1 224 1 333 1 164 1 
361 1 133 1 146 1 42 1 262 1 190 1 327 2 253 1 239 1 164 1 241 1 98 1 78 1 224 1 58 1 66 1 67 1 6 1 
361 1 133 1 146 1 42 1 262 1 190 1 327 2 253 1 239 1 164 1 241 1 98 1 78 1 224 1 58 1 66 1 67 1 6 1 
361 1 133 1 146 1 42 1 262 1 190 1 327 2 253 1 239 1 164 1 241 1 98 1 78 1 224 1 58 1 66 1 67 1 6 1 
207 1 73 1 84 1 
207 1 73 1 84 1 
160 1 123 1 
207 1 160 1 123 1 
77 1 193 1 
361 1 42 1 362 1 237 1 239 1 77 1 292 1 100 2 295 2 58 1 271 1 244 1 158 1 133 1 246 1 62 2 162 2 190 1 327 1 253 1 164 1 168 2 208 1 193 1 224 1 113 1 67 1 
73 1 84 1 
207 1 160 1 123 1 
231 1 171 1 46 2 312 1 235 1 236 1 266 1 295 2 80 1 270 1 349 1 183 1 105 2 185 2 32 1 248 1 322 1 10 1 205 1 301 1 162 2 304 1 33 2 136 1 35 1 167 2 223 1 168 2 141 2 37 1 310 1 
105 1 185 1 319 1 32 1 1 1 351 1 322 1 10 1 46 1 235 1 191 1 152 1 381 1 197 1 
105 1 185 1 118 1 32 1 249 1 212 1 45 1 46 1 235 1 94 1 134 1 252 1 191 1 138 1 87 2 228 1 286 1 197 1 
105 2 185 2 118 1 32 1 249 1 212 1 45 1 46 2 235 1 94 1 134 1 252 1 191 1 138 1 306 1 87 2 228 1 286 1 197 1 
105 1 185 1 118 1 249 1 32 1 212 1 45 1 46 1 235 1 134 1 252 1 191 1 138 1 87 2 228 1 286 1 184 1 
55 1 
97 1 221 1 98 1 99 1 4 1 367 1 217 1 129 1 196 1 219 1 
19 2 44 2 364 1 22 2 149 2 178 5 110 5 281 5 97 5 98 5 367 5 331 2 83 2 68 10 272 1 
98 1 153 1 377 1 190 1 239 1 219 1 
0 1 46 4 235 1 239 3 97 2 152 2 153 2 4 1 367 2 344 1 243 1 217 2 105 4 185 4 31 1 32 1 351 1 322 1 10 1 190 3 14 1 221 2 377 4 140 1 209 2 257 2 117 2 381 1 196 2 
97 1 98 1 99 1 367 1 106 1 129 1 219 1 
173 1 190 1 239 1 281 1 97 1 221 1 153 1 98 2 377 1 4 1 367 1 126 1 68 1 217 1 219 1 132 1 196 1 
44 2 46 3 235 3 148 2 149 2 239 5 52 2 97 8 152 1 153 3 98 8 99 1 294 1 4 4 154 2 105 3 10 3 354 1 110 6 306 1 209 1 257 2 309 1 68 12 117 1 260 3 210 2 19 2 364 2 22 2 23 2 178 6 75 2 367 9 83 2 217 4 129 1 219 2 272 2 185 3 274 2 32 4 276 3 322 10 190 5 34 2 281 6 221 4 377 5 140 1 330 1 331 2 285 2 196 4 
19 2 44 2 47 1 22 2 178 5 149 2 239 1 97 5 153 1 98 5 367 8 4 2 83 2 102 1 217 2 272 1 219 2 300 1 251 1 190 1 375 1 110 5 281 3 13 1 137 1 221 2 377 1 209 1 331 2 257 1 308 1 65 1 68 6 258 1 196 2 
19 2 145 1 44 2 22 1 239 1 97 2 54 1 4 1 367 2 100 1 295 1 343 1 8 1 217 1 272 1 245 1 161 1 62 1 162 1 190 1 221 1 222 1 168 1 284 1 170 1 115 1 17 1 196 1 
260 1 231 1 46 1 312 1 235 1 266 1 152 1 54 1 295 2 100 2 80 1 155 1 270 1 271 1 104 1 105 1 185 1 248 1 32 1 62 2 10 1 322 1 162 3 33 1 136 1 168 3 379 1 141 2 310 1 229 1 115 2 332 1 
60 1 178 2 110 2 281 2 97 2 221 1 98 4 4 1 367 1 209 1 257 1 68 4 217 1 196 1 219 2 
361 1 241 1 193 1 42 1 177 1 
361 1 230 1 42 1 
361 1 230 1 42 1 
361 1 230 1 42 1 
361 1 356 1 42 1 
361 1 356 1 42 1 
361 1 356 1 42 1 
361 1 42 1 
58 1 224 1 
320 2 245 2 231 5 248 1 199 1 44 2 213 3 109 5 33 10 22 2 266 1 223 5 343 2 141 2 310 1 270 1 8 1 170 1 
320 1 248 1 199 1 44 1 33 2 109 1 149 1 266 1 223 2 141 2 270 1 310 1 
320 1 231 2 248 1 199 1 44 1 213 1 22 1 109 2 33 4 149 1 266 1 223 2 331 1 141 2 270 1 310 1 83 1 
334 1 320 1 245 1 231 2 248 3 199 1 213 1 33 3 109 2 266 3 223 1 86 1 343 1 141 6 270 3 310 3 358 1 
334 2 231 18 199 1 44 5 213 7 337 1 47 3 22 5 289 1 149 3 266 5 343 3 81 1 270 5 347 1 83 3 157 1 320 5 245 3 60 1 248 5 321 1 33 34 109 12 223 16 86 1 141 10 331 3 308 4 310 5 358 1 170 2 359 1 258 1 
231 4 44 1 199 1 213 2 47 1 22 1 266 1 343 1 270 1 102 1 157 1 245 1 60 1 248 1 33 8 109 2 223 4 141 2 308 1 310 1 258 1 359 1 170 1 
231 5 199 1 44 2 213 2 337 1 47 1 22 1 149 1 266 2 343 1 81 1 270 2 83 1 102 1 157 1 320 1 245 1 60 1 248 2 33 11 109 3 223 6 141 4 308 2 310 2 170 1 359 1 258 1 
334 1 231 10 199 1 44 3 213 3 337 1 47 1 22 3 149 2 266 3 343 1 270 3 83 2 102 1 157 1 320 1 245 1 60 1 248 3 300 1 251 1 33 19 109 4 375 1 13 1 223 9 141 6 331 2 308 1 310 3 170 1 359 1 258 1 
231 4 199 1 44 2 213 1 337 1 47 1 22 1 149 2 266 2 270 2 83 2 102 1 248 2 300 1 251 1 33 11 109 1 375 1 13 1 223 7 141 4 331 1 308 1 310 2 258 1 
231 4 44 1 199 1 213 2 47 1 22 1 266 1 343 1 270 1 102 1 157 1 245 1 60 1 248 1 33 8 109 2 223 4 141 2 308 1 310 1 258 1 359 1 170 1 
320 1 231 6 248 1 44 2 199 1 300 1 213 1 251 1 47 1 375 1 109 2 22 2 33 12 149 2 13 1 266 1 223 6 331 2 141 2 308 1 270 1 310 1 83 2 102 1 258 1 
334 1 231 5 199 1 44 2 213 1 337 1 47 1 22 1 149 2 266 3 270 3 83 2 102 1 248 3 300 1 251 1 375 1 33 12 109 1 13 1 223 7 141 6 331 1 308 1 310 3 258 1 
334 1 231 5 199 1 44 2 213 2 47 1 22 1 149 2 266 3 270 3 83 2 102 1 320 2 248 3 300 1 251 1 375 1 33 12 109 4 13 1 223 7 86 1 141 6 331 1 308 1 310 3 258 1 
320 3 245 3 231 4 44 1 213 3 22 1 33 7 109 6 223 3 343 3 359 1 170 1 157 2 
334 1 231 5 199 1 44 2 213 1 47 1 22 1 149 2 266 3 270 3 83 2 102 1 248 3 300 1 251 1 375 1 33 12 109 1 13 1 223 7 86 1 141 6 331 1 308 1 310 3 258 1 
334 1 320 1 245 1 231 4 60 1 248 2 44 1 213 2 22 1 33 8 109 3 266 2 223 4 343 1 141 4 270 2 310 2 170 1 359 1 157 1 
245 1 231 3 60 1 106 1 44 1 213 2 109 2 33 6 22 1 223 3 343 1 359 1 170 1 157 1 
320 1 231 2 248 1 44 1 213 1 337 1 22 1 109 2 33 4 149 1 266 1 223 2 331 1 141 2 270 1 310 1 83 1 
320 1 231 4 44 1 213 1 47 1 22 1 33 7 109 2 149 1 223 3 81 1 331 1 308 2 83 1 258 1 
334 2 231 12 44 3 213 5 47 2 22 3 149 2 240 1 266 2 343 2 81 1 270 2 83 2 157 1 320 4 245 2 60 1 248 2 107 1 109 9 33 23 223 11 331 2 141 4 308 2 310 2 358 1 170 1 359 1 
231 1 308 1 33 1 
223 1 47 1 33 1 
320 1 231 3 248 1 44 1 213 2 337 1 364 1 33 6 109 3 22 1 149 1 266 1 223 3 141 2 331 1 310 1 270 1 83 1 
320 1 231 6 248 1 44 2 199 1 300 1 213 1 251 1 47 1 375 1 109 2 22 2 33 12 149 2 13 1 266 1 223 6 331 2 141 2 308 1 270 1 310 1 83 2 102 1 258 1 
320 1 245 1 231 3 223 3 343 1 44 1 213 1 109 2 22 1 33 6 170 1 
334 1 320 1 245 1 231 2 248 1 213 1 109 2 33 3 266 1 223 1 343 1 141 2 270 1 310 1 358 1 359 1 157 1 
305 1 168 1 295 1 336 1 162 1 380 1 271 1 
336 1 162 1 314 1 278 1 201 1 290 1 305 1 295 1 168 1 380 1 269 1 271 1 
105 4 373 1 185 4 247 1 32 1 351 1 46 4 10 1 322 1 235 1 152 1 306 1 381 1 
105 2 260 1 40 1 185 2 32 2 232 1 46 2 10 1 322 1 235 1 328 1 124 1 307 1 117 1 
105 1 118 1 185 1 152 1 32 1 87 1 46 1 235 1 228 1 286 1 
105 2 185 2 32 1 306 1 171 1 322 1 10 1 205 1 46 2 235 1 252 1 
105 4 185 5 247 1 351 1 32 2 46 5 205 1 10 2 322 3 174 1 235 2 152 1 306 1 143 1 117 1 381 1 
105 4 185 5 247 1 351 1 32 2 46 5 205 1 10 2 322 3 174 1 235 2 49 1 152 1 306 1 117 1 381 1 
105 1 185 1 152 1 32 1 351 1 106 1 322 1 10 1 46 1 235 1 381 1 
260 1 105 1 185 1 32 1 322 1 10 1 62 1 46 1 162 2 235 1 165 1 152 1 100 1 295 1 168 2 379 1 229 1 271 1 
260 2 105 1 185 1 32 1 161 1 322 3 10 2 62 2 46 1 162 2 235 1 280 1 75 1 165 1 53 1 100 1 295 2 168 2 379 1 154 1 229 1 271 1 117 1 
260 2 46 2 235 1 75 1 53 1 295 2 100 1 154 1 5 1 271 1 105 2 373 1 185 2 32 1 62 2 10 2 322 3 161 1 162 2 280 1 165 1 168 2 229 1 117 1 
260 1 41 1 46 3 235 1 75 1 239 2 52 1 152 1 98 1 154 1 219 1 105 3 373 1 185 3 274 1 32 1 322 4 276 1 10 1 279 1 190 2 377 1 117 1 
260 1 105 3 373 1 185 3 210 1 274 1 32 1 10 1 46 3 276 1 322 4 235 1 190 2 75 1 239 2 52 1 152 1 98 1 377 1 154 1 117 1 219 1 
105 1 185 1 32 1 46 1 93 1 235 1 
105 6 260 1 185 7 30 1 32 3 174 1 205 1 46 7 10 2 322 3 93 1 235 2 252 1 328 1 167 1 152 2 294 1 306 1 307 1 143 1 90 1 
231 3 44 1 46 1 235 1 100 1 295 1 343 1 104 1 157 1 105 1 245 1 248 2 60 1 62 1 301 1 10 1 162 2 304 1 109 2 165 1 306 1 168 2 169 1 310 2 359 1 170 1 260 1 312 2 213 2 22 1 266 2 80 2 368 1 270 2 271 2 372 1 185 1 32 1 322 1 33 6 223 3 379 1 378 1 194 1 141 4 229 1 332 1 
210 1 46 1 23 1 239 3 52 1 97 1 152 1 98 1 292 1 153 1 99 1 367 1 4 2 217 2 129 1 219 1 105 1 185 1 274 1 276 1 322 2 190 3 34 1 221 2 377 2 140 1 285 1 196 2 
105 2 260 1 185 2 274 1 32 2 46 2 10 1 322 2 93 1 235 1 294 1 306 1 309 1 
260 1 105 1 185 1 32 1 322 1 10 1 62 1 46 1 162 2 235 1 165 1 152 1 100 1 295 1 168 2 5 1 229 1 271 1 
105 1 260 1 185 1 30 1 32 2 46 1 10 1 322 1 235 1 328 1 294 1 307 1 117 1 
352 1 27 1 128 1 271 1 131 1 
161 1 233 1 220 1 326 1 190 2 352 2 74 1 280 1 12 1 239 2 52 1 53 1 98 1 292 1 27 2 128 2 271 1 219 1 131 1 
168 1 295 1 162 1 236 1 37 1 27 1 128 1 349 1 131 1 
233 1 74 1 131 1 
70 1 186 1 9 1 127 1 189 1 339 1 355 1 39 1 
70 2 186 4 9 1 189 2 363 2 339 3 355 1 340 1 151 1 76 1 88 1 127 4 202 1 198 1 
70 1 92 1 186 2 9 1 189 1 363 1 339 1 355 1 112 1 127 2 142 1 39 1 
70 1 186 3 187 1 9 1 189 1 339 1 355 1 151 1 127 3 88 2 202 2 39 1 
282 1 82 2 206 1 339 2 
186 1 9 1 127 1 288 1 355 1 39 1 
70 1 186 2 9 1 127 2 189 1 363 1 339 1 215 1 355 1 39 1 
366 1 
70 1 186 1 9 1 127 1 189 1 339 1 355 1 39 1 
70 1 106 1 189 1 339 1 
70 1 186 1 9 1 127 1 189 1 339 1 355 1 
283 1 186 1 311 1 
70 1 151 1 186 3 9 1 111 1 88 2 127 3 189 1 202 1 339 1 355 1 39 1 
70 1 186 2 9 1 127 2 189 1 363 1 339 1 182 1 355 1 
186 1 9 1 163 1 134 1 339 1 355 1 87 1 127 1 228 1 39 1 198 1 
186 1 9 1 127 1 189 1 339 1 355 1 39 1 
70 1 186 1 9 1 127 1 189 2 355 1 39 1 
91 1 186 2 9 2 189 1 339 1 329 1 315 1 355 2 127 2 39 1 
70 1 186 3 9 1 302 1 189 1 363 2 339 2 355 1 340 1 127 3 215 1 39 1 198 1 
70 1 186 2 9 1 45 1 189 1 363 1 134 1 339 1 150 1 355 1 87 2 127 2 228 1 39 1 286 1 
70 1 186 4 9 2 189 1 363 2 339 2 355 2 340 1 24 1 127 4 39 1 182 1 198 1 
70 1 186 3 9 1 363 1 189 1 339 1 355 1 127 3 88 1 215 1 39 1 
76 1 339 1 340 1 198 1 
189 1 339 1 

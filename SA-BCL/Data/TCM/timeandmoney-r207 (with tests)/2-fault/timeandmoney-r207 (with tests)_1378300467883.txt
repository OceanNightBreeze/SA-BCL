#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
335 1 285 9 187 9 165 1 111 2 313 1 343 1 214 2 366 5 142 2 215 1 369 6 47 1 294 2 295 3 149 2 297 2 95 1 151 4 21 1 240 1 22 1 242 1 177 1 103 1 101 2 104 1 80 1 
335 1 285 9 187 9 165 1 111 2 313 1 343 1 214 2 366 5 142 2 215 1 369 6 47 1 294 2 295 3 297 2 149 2 95 1 151 4 21 1 240 1 22 1 242 1 177 1 103 1 101 2 104 1 80 1 
335 1 285 10 187 10 165 1 111 2 313 1 343 1 214 2 366 6 142 2 215 1 369 7 47 1 294 2 295 4 297 2 149 2 95 1 151 5 21 1 240 1 22 1 242 1 177 1 103 1 101 2 104 1 80 1 
335 1 285 7 187 7 165 1 111 2 313 1 343 1 214 2 366 4 142 2 369 4 47 1 294 2 295 2 297 2 149 1 95 1 151 3 21 1 240 1 22 1 242 1 177 1 103 1 101 2 104 1 80 1 
335 1 295 1 297 1 149 2 95 1 285 4 187 4 151 2 240 1 111 1 177 1 103 1 214 1 101 1 366 3 142 1 215 1 369 3 
47 1 294 1 335 1 297 1 285 2 187 2 111 1 313 1 177 1 103 1 214 1 366 1 367 1 142 1 247 1 370 1 
294 1 335 1 295 1 285 3 187 3 151 1 111 2 177 1 103 1 214 2 366 2 369 1 80 1 
335 1 285 9 187 9 3 1 111 2 214 2 366 5 142 1 215 1 369 7 168 1 294 1 295 3 149 2 297 1 95 1 151 4 240 1 22 1 177 1 103 1 101 1 104 1 80 1 
335 1 285 9 187 9 3 1 111 2 214 2 366 5 142 1 215 1 369 7 168 1 294 1 295 3 149 2 297 1 95 1 151 4 240 1 22 1 177 1 103 1 101 1 104 1 80 1 
140 1 353 1 81 1 
135 2 81 1 332 1 
354 2 381 2 89 1 19 2 128 1 360 2 320 2 269 2 
354 3 230 1 357 2 185 2 360 2 269 2 270 1 88 1 89 1 346 1 43 2 90 1 143 1 69 1 274 1 320 3 321 1 277 1 19 2 327 1 299 1 174 1 173 1 52 2 53 1 381 2 102 1 155 1 57 1 180 1 58 1 128 1 77 1 26 2 29 1 304 1 226 1 
354 1 381 1 89 1 73 1 204 1 19 1 360 1 320 1 269 1 85 1 
354 1 322 1 204 1 375 1 261 1 360 1 98 1 154 1 42 1 345 1 140 1 352 1 81 1 320 1 
354 1 322 1 204 1 19 1 261 1 360 1 98 1 269 1 154 2 42 2 381 1 140 1 352 1 81 1 320 1 
154 1 42 1 12 1 5 1 176 1 
218 1 154 2 42 2 140 1 12 1 5 1 63 1 81 1 
154 1 42 1 12 1 
354 1 204 1 19 1 360 1 5 1 269 1 154 1 42 1 89 1 381 1 73 1 365 1 320 1 85 1 
81 1 
218 1 229 1 154 2 42 2 140 1 12 1 5 1 81 1 
218 1 162 2 1 1 5 2 166 1 8 1 153 2 11 1 154 5 329 2 42 5 273 1 140 1 75 1 12 2 78 1 81 1 115 1 70 1 
128 1 353 1 
354 2 48 1 278 1 19 1 360 2 269 1 381 1 128 2 320 2 
116 1 40 1 181 1 
354 1 185 1 299 1 174 1 210 1 270 1 53 1 102 1 155 1 58 1 128 1 43 1 26 1 69 1 320 1 226 1 
354 5 324 2 19 4 278 1 376 1 360 5 269 1 381 4 345 1 302 1 200 1 128 1 318 1 320 5 
354 2 381 2 73 1 33 1 204 1 19 2 360 2 320 2 
116 1 354 2 324 1 19 1 185 1 299 1 360 1 174 1 53 1 270 1 102 1 381 1 155 1 58 1 43 1 26 1 318 1 69 1 320 2 226 1 
354 3 381 3 324 1 19 3 128 1 360 3 320 3 269 1 
354 1 381 1 73 1 204 1 19 1 360 1 320 1 
354 1 381 1 48 1 204 1 19 1 278 1 360 1 320 1 269 1 
354 4 230 1 357 1 204 1 185 1 360 3 269 2 270 1 88 1 42 1 89 1 346 1 43 1 90 1 143 1 318 1 69 1 320 4 322 1 277 1 324 1 278 1 19 3 261 1 327 1 96 1 299 1 98 1 174 1 52 2 53 1 154 1 102 1 381 3 155 1 57 1 351 1 180 1 58 1 128 1 352 1 26 1 304 1 226 1 
354 2 381 1 345 1 324 1 19 1 128 1 200 1 360 2 320 2 
354 3 322 1 324 2 204 1 278 1 19 3 261 1 360 3 98 1 269 1 213 1 154 1 42 1 381 3 351 1 352 1 318 1 81 1 320 3 
116 1 354 2 40 1 381 2 324 1 19 2 278 1 360 2 320 2 269 1 
354 1 185 1 299 1 174 1 270 1 53 1 102 1 155 1 58 1 128 1 43 1 26 1 69 1 320 1 226 1 
354 1 185 1 337 1 174 1 54 1 53 1 102 1 155 1 58 1 128 1 43 1 26 1 69 1 320 1 226 1 
160 1 355 1 230 1 357 4 267 1 288 1 88 1 40 2 167 1 346 1 143 2 116 2 296 1 325 1 327 1 198 1 51 1 52 2 57 1 244 1 180 1 181 2 29 2 131 1 
354 1 322 1 381 1 204 1 33 1 19 1 360 1 320 1 
272 1 249 1 
272 1 249 1 
17 1 251 1 
17 1 251 1 
17 1 251 1 
272 1 249 1 34 1 
272 1 249 1 164 1 
272 2 249 2 17 1 298 1 251 1 175 1 
272 1 249 1 34 1 
272 1 249 1 34 1 
272 1 249 1 315 1 
272 1 249 1 315 1 
272 1 249 1 315 1 
354 2 323 1 249 1 205 1 197 1 19 2 360 2 164 1 363 1 312 1 64 1 154 1 342 1 42 1 380 1 272 1 381 2 13 1 128 1 258 1 331 1 306 1 320 2 30 1 
371 1 196 1 249 2 323 1 205 2 298 1 361 1 363 2 154 2 380 2 272 2 42 2 56 1 182 2 28 1 331 3 81 1 282 1 30 2 
101 1 297 1 142 1 
297 1 142 1 370 1 
101 2 308 1 297 3 2 1 92 1 370 1 
101 1 297 2 2 1 92 1 124 1 370 1 
101 1 297 2 2 1 92 2 370 1 
160 1 162 1 1 3 5 4 166 1 135 3 11 2 42 5 344 1 140 1 12 1 368 2 258 1 217 1 218 1 296 1 373 1 372 1 197 1 279 2 51 1 153 1 329 1 154 5 72 1 244 1 25 1 105 2 332 1 81 2 306 1 265 1 
160 3 284 1 162 2 1 8 5 7 110 1 166 1 212 1 135 9 11 6 271 1 42 9 344 2 140 1 68 1 12 6 368 6 258 4 115 1 218 1 296 3 373 1 279 6 219 1 262 5 176 5 51 3 153 2 154 9 329 2 244 3 25 3 332 3 81 5 265 2 
160 1 162 1 1 3 5 2 11 2 135 4 42 3 344 1 140 1 258 1 368 2 115 1 296 1 372 1 279 2 153 1 51 1 329 1 154 3 72 1 25 1 244 1 105 1 81 3 332 2 265 1 
160 2 162 1 1 5 5 3 212 1 135 7 11 4 271 1 42 4 344 1 140 1 368 4 258 2 115 1 296 2 372 1 279 4 219 1 153 1 51 2 329 1 154 4 72 1 25 2 244 2 105 2 81 4 332 3 265 1 
148 1 69 1 353 1 
239 1 69 1 
349 1 
53 1 174 1 69 1 
69 1 130 1 
53 1 69 1 
53 1 148 2 74 1 174 1 69 3 268 1 
160 1 202 1 16 1 325 3 350 1 0 2 357 7 267 2 37 1 339 1 51 1 301 1 256 1 340 1 44 1 143 3 29 4 
160 1 202 1 16 1 325 3 350 1 0 2 357 7 267 2 37 1 339 1 51 1 301 1 256 1 340 1 44 1 143 3 29 4 
160 1 202 1 16 1 325 3 350 1 0 2 357 7 267 2 37 1 339 1 51 1 301 1 256 1 340 1 44 1 143 3 29 4 147 1 
160 4 202 1 357 31 0 3 186 4 267 5 209 1 37 2 339 1 38 1 340 1 254 1 256 5 346 1 44 1 143 15 144 1 94 1 16 2 325 10 296 3 350 2 18 1 327 1 52 2 301 2 51 4 127 1 57 1 25 3 244 3 180 1 29 16 83 3 
160 1 357 9 0 2 267 3 37 1 339 1 256 1 340 1 346 2 44 1 143 4 144 1 91 1 16 1 325 4 350 1 327 2 377 1 51 1 52 4 301 1 57 2 180 2 29 5 
335 1 132 1 308 1 185 1 285 2 187 2 111 1 133 1 137 1 214 1 366 1 43 1 142 1 257 1 369 1 114 1 259 1 370 1 294 1 297 2 125 1 100 1 177 1 103 1 101 1 102 1 179 1 155 1 224 1 26 1 
335 1 132 1 308 1 185 1 285 3 187 3 111 1 211 1 137 1 214 1 366 1 43 1 142 1 257 1 369 2 114 1 259 1 370 1 294 1 297 2 152 1 125 1 100 1 103 1 101 1 102 1 179 1 155 1 26 1 84 1 
335 1 132 1 308 1 185 1 285 2 187 2 137 1 366 1 43 1 257 1 142 1 369 2 114 1 259 1 370 1 294 1 297 2 152 1 100 1 103 1 102 1 101 1 155 1 26 1 84 1 
294 2 326 1 185 1 285 1 187 1 111 1 211 1 65 1 53 1 100 2 364 1 41 1 137 2 102 1 214 1 155 1 43 1 235 1 26 1 69 1 259 2 226 1 333 1 
132 1 308 1 185 1 285 1 187 1 111 1 133 1 137 1 214 1 43 1 142 1 257 1 114 1 259 1 370 1 294 1 297 2 125 1 100 1 177 1 101 1 102 1 179 1 155 1 26 1 84 1 
107 1 
162 1 203 1 204 1 1 2 109 1 166 1 11 2 344 1 345 1 291 1 12 6 293 1 113 1 69 1 218 3 71 2 261 1 221 1 123 2 23 2 222 1 352 1 76 2 26 2 81 2 226 2 354 1 185 2 360 1 310 1 135 2 364 1 42 5 140 1 141 1 43 2 276 1 320 1 322 1 49 1 375 1 98 1 153 1 53 1 154 5 329 1 379 1 102 1 155 1 199 2 156 2 60 2 61 4 332 2 333 1 
354 1 229 1 203 1 204 1 360 1 109 1 310 1 42 3 345 1 291 1 12 2 276 1 320 1 218 1 322 1 261 1 375 1 98 1 123 1 154 3 352 1 61 2 
354 1 229 1 203 1 204 1 360 1 109 1 310 1 42 3 345 1 291 1 140 1 12 1 276 1 320 1 218 1 322 1 71 1 261 1 375 1 98 1 154 3 352 1 61 3 81 1 
229 1 354 1 203 1 204 1 360 1 109 1 310 1 42 3 345 1 291 1 140 1 12 2 276 1 320 1 218 1 322 1 71 1 261 1 375 1 98 1 123 1 154 3 352 1 61 3 60 1 81 1 
162 1 203 1 204 2 1 1 109 1 166 1 11 1 345 1 291 1 12 7 293 1 218 3 71 2 19 1 261 1 220 1 123 4 222 1 23 2 73 1 352 1 76 2 79 1 81 1 227 1 85 1 354 2 229 1 360 2 310 1 269 1 233 1 42 5 89 1 365 1 140 1 276 1 320 2 322 1 375 1 98 1 153 1 154 5 329 1 381 1 199 2 156 2 245 1 60 4 61 4 332 2 
162 1 203 1 204 1 1 1 109 1 166 1 11 1 345 1 291 1 12 4 293 1 218 2 71 2 261 1 222 1 23 2 123 2 221 1 352 1 76 2 81 2 354 1 360 1 310 1 135 2 42 4 140 1 276 1 320 1 322 1 375 1 98 1 153 1 154 4 329 1 199 2 156 2 61 4 60 2 332 2 
162 1 203 1 204 2 1 1 109 1 166 1 11 1 345 1 291 1 12 4 293 1 218 2 71 2 19 1 261 1 222 1 23 2 123 2 73 1 352 1 76 2 79 1 81 1 227 1 85 1 354 2 360 2 310 1 269 1 42 4 89 1 365 1 140 1 276 1 320 2 322 1 375 1 98 1 153 1 329 1 154 4 381 1 199 2 156 2 245 1 61 4 60 2 332 2 
162 1 203 1 204 2 1 1 109 1 166 1 11 1 345 1 291 1 12 4 293 1 218 2 71 2 19 1 261 1 222 1 23 2 123 2 73 1 352 1 76 2 79 1 81 1 227 1 85 1 354 2 360 2 310 1 269 1 42 4 89 1 365 1 140 1 276 1 320 2 322 1 375 1 98 1 153 1 329 1 154 4 381 1 199 2 156 2 245 1 61 4 60 2 332 2 
162 1 203 1 204 2 1 1 108 1 109 1 166 1 11 1 112 1 345 1 291 1 12 4 293 1 218 2 71 2 19 1 261 1 20 2 23 2 123 2 73 1 352 1 76 2 129 2 81 1 85 1 354 2 360 2 310 1 269 1 135 2 42 4 89 1 365 1 140 1 276 1 320 2 46 1 322 1 375 1 98 1 153 1 329 1 154 4 381 1 245 1 61 4 60 2 
162 1 203 1 204 2 1 1 109 1 166 1 11 1 345 1 291 1 12 5 293 1 218 2 71 3 19 1 261 1 220 1 123 3 222 1 23 2 73 1 352 1 76 2 79 1 81 1 227 1 85 1 354 2 360 2 310 1 269 1 42 4 89 1 365 1 140 1 276 1 320 2 322 1 375 1 98 1 153 1 154 4 329 1 381 1 199 2 156 2 245 1 60 3 61 5 332 2 
162 1 203 1 204 2 1 1 109 1 166 1 11 1 345 1 291 1 12 5 293 1 218 2 71 3 19 1 261 1 220 1 123 3 222 1 23 2 73 1 352 1 76 2 79 1 81 1 227 1 85 1 354 2 360 2 310 1 269 1 42 4 89 1 365 1 140 1 276 1 320 2 322 1 375 1 98 1 153 1 154 4 329 1 381 1 199 2 156 2 245 1 60 3 61 5 332 2 
354 1 162 1 203 1 204 1 1 1 360 1 109 1 310 1 166 1 135 2 11 1 42 4 112 1 345 1 291 1 140 1 12 4 293 1 276 1 320 1 218 2 71 2 322 1 20 2 375 1 261 1 98 1 221 1 123 2 23 2 153 1 329 1 154 4 352 1 76 2 60 2 129 2 61 4 81 1 
160 1 230 1 357 6 0 1 267 2 339 1 340 1 40 1 88 1 167 1 346 1 44 1 143 3 116 1 16 1 325 2 350 1 327 1 52 2 51 1 57 1 180 1 128 2 181 1 29 3 353 1 
160 1 230 1 357 14 186 3 267 1 254 1 256 1 88 2 40 4 346 2 45 1 143 6 321 1 117 1 116 11 325 2 296 1 327 2 122 1 378 1 52 4 51 2 127 1 57 2 25 2 244 2 180 2 128 1 181 11 246 1 29 8 304 1 83 3 
354 2 230 1 357 2 185 1 188 1 360 1 210 1 270 1 40 1 88 1 346 1 43 1 45 1 318 1 143 1 69 1 320 2 321 1 348 1 324 1 19 1 327 1 299 1 174 1 52 2 53 1 102 1 381 1 155 1 57 1 58 1 59 1 180 1 128 1 26 1 29 1 304 1 226 1 
160 3 0 1 339 1 340 1 255 1 256 4 346 3 69 2 116 7 16 1 296 2 350 1 19 1 299 2 174 2 25 2 180 3 128 2 26 3 181 7 29 10 304 1 305 2 84 1 226 1 264 2 354 3 230 3 32 1 357 20 185 3 267 4 360 1 362 2 270 2 39 2 88 3 40 7 43 3 44 1 45 1 90 2 143 10 318 1 320 3 321 1 324 1 325 8 327 3 52 6 51 3 53 2 381 1 102 2 155 2 57 3 244 2 157 1 58 2 
354 1 307 1 230 2 266 1 357 2 185 8 250 1 360 1 163 1 88 2 364 1 167 1 346 2 43 7 143 1 69 3 145 1 320 1 321 1 170 1 324 1 19 1 327 2 173 2 243 1 52 4 53 2 381 1 102 2 155 2 57 2 180 2 224 1 26 8 29 1 304 1 84 1 226 2 333 1 
354 1 160 1 230 1 357 3 267 1 359 1 360 1 269 1 40 1 88 1 346 1 45 1 143 2 320 1 116 1 325 1 296 1 19 1 278 1 327 1 52 2 51 1 381 1 57 1 25 1 244 1 180 1 181 1 29 1 
116 1 230 1 325 1 357 2 327 1 198 1 52 2 51 1 256 1 40 1 88 1 167 1 57 1 244 1 180 1 346 1 181 1 29 2 
116 1 160 1 230 1 325 1 296 1 357 2 267 1 327 1 288 1 52 2 40 1 88 1 167 1 57 1 180 1 346 1 181 1 143 2 
160 1 230 1 357 4 267 1 256 1 88 1 40 2 167 1 346 1 143 2 116 2 325 2 296 1 327 1 51 1 52 2 57 1 244 1 25 1 180 1 181 2 29 2 
116 1 230 1 266 1 325 1 357 2 327 1 198 1 52 2 51 1 256 1 40 1 88 1 57 1 244 1 180 1 346 1 181 1 29 2 
116 1 160 1 230 1 266 1 325 1 296 1 357 2 267 1 327 1 288 1 52 2 40 1 88 1 57 1 180 1 346 1 181 1 143 2 
160 1 230 1 266 1 357 4 267 1 256 1 88 1 40 2 346 1 143 2 116 2 325 2 296 1 327 1 51 1 52 2 57 1 244 1 25 1 180 1 181 2 29 2 
116 2 160 1 230 1 296 1 325 2 357 4 267 1 327 1 52 2 51 1 256 1 40 2 88 1 57 1 25 1 244 1 180 1 346 1 181 2 143 2 29 2 
354 1 230 1 357 2 185 1 270 1 88 1 346 1 43 1 90 1 143 1 69 1 320 1 321 1 327 1 299 1 174 1 52 2 53 1 102 1 155 1 57 1 58 1 180 1 128 1 26 1 29 1 304 1 226 1 
354 1 230 1 357 2 185 1 337 1 88 1 346 1 43 1 143 1 69 1 320 1 321 1 171 1 327 1 174 1 52 2 53 1 54 1 102 1 155 1 57 1 58 1 180 1 128 1 26 1 29 1 304 1 226 1 
160 1 230 1 357 4 267 1 256 1 88 1 40 2 346 1 45 1 143 2 116 2 325 2 296 1 327 1 51 1 52 2 57 1 244 1 25 1 180 1 181 2 29 2 
354 1 160 1 230 1 357 4 185 1 267 1 256 1 270 1 40 2 88 1 346 1 43 1 90 1 143 2 69 1 320 1 116 2 296 1 325 2 327 1 299 1 174 1 51 1 52 2 53 1 102 1 155 1 57 1 244 1 25 1 58 1 180 1 224 1 181 2 26 1 29 2 264 1 
354 1 160 1 230 1 206 1 357 3 360 1 269 1 256 1 88 1 40 1 346 1 45 1 143 1 320 1 116 1 296 1 325 1 19 1 278 1 327 1 52 2 51 1 381 1 57 1 25 1 244 1 180 1 181 1 29 2 
160 3 357 19 186 2 267 3 336 1 286 1 62 1 287 1 338 2 254 1 190 1 256 3 346 2 216 1 143 10 91 1 325 6 296 3 374 1 327 2 120 2 52 4 51 3 127 1 57 2 25 3 244 3 180 2 29 9 83 1 
160 2 357 26 186 2 267 2 336 1 286 2 338 4 136 1 256 2 190 1 254 2 346 3 14 1 143 12 216 2 144 2 236 1 146 1 91 1 325 4 296 2 374 1 327 3 120 1 52 6 51 3 281 1 57 3 25 3 244 3 180 3 27 1 29 14 83 2 
160 5 0 1 286 2 336 1 287 1 338 4 339 1 256 4 254 3 340 1 346 3 14 1 216 1 16 1 296 4 350 1 120 1 127 1 25 4 180 3 27 1 29 20 83 3 357 41 186 4 267 4 190 1 136 1 87 1 44 1 143 21 236 1 144 1 146 1 91 1 325 8 374 1 327 3 51 5 52 6 281 1 57 3 244 4 
160 4 0 1 357 38 186 4 267 4 336 1 286 2 287 1 338 4 339 1 87 1 340 1 136 1 254 3 190 1 256 3 346 4 14 1 44 1 216 1 143 18 144 2 236 1 146 1 91 1 16 1 325 7 296 3 350 1 374 1 327 4 120 1 52 8 51 5 281 1 127 1 57 4 25 4 244 4 180 4 27 1 29 20 83 3 
160 8 0 1 357 52 186 4 267 7 336 1 286 1 338 4 339 1 340 1 136 1 254 2 190 1 256 7 346 2 14 1 44 1 216 1 143 25 144 1 236 1 146 1 91 1 117 2 16 1 325 14 296 7 350 1 374 1 327 2 120 1 52 4 51 8 281 1 127 2 57 2 25 7 244 7 180 2 27 1 29 27 83 4 
371 1 272 1 380 1 249 1 205 1 298 1 28 1 363 1 314 1 30 1 
342 1 164 1 
272 1 380 1 249 1 260 1 205 1 119 1 363 1 30 1 9 1 
34 1 311 1 
159 1 175 1 315 1 
371 1 323 1 249 1 205 1 298 1 361 1 363 1 154 1 42 1 380 1 272 1 56 1 182 1 28 1 331 2 81 1 282 1 30 1 
371 1 323 1 249 1 205 1 298 1 361 1 363 1 154 1 42 1 380 1 272 1 56 1 182 1 28 1 331 2 81 1 282 1 30 1 
371 1 323 1 249 1 205 1 298 1 361 1 363 1 154 1 42 1 380 1 272 1 56 1 182 1 28 1 331 2 81 1 282 1 30 1 
34 1 175 1 311 1 
34 1 175 1 311 1 
159 1 315 1 
159 1 175 1 315 1 
13 1 64 1 
354 2 249 1 205 1 360 2 5 1 361 1 164 1 363 1 312 1 64 1 42 1 272 1 342 1 13 1 258 1 320 2 195 1 197 1 19 2 154 1 380 1 381 2 128 1 182 1 331 1 30 1 306 1 
354 2 230 1 283 1 357 2 185 2 360 2 35 1 88 1 346 1 43 2 45 1 143 1 69 1 145 1 320 2 321 1 170 1 327 1 172 1 173 2 328 1 52 2 53 1 102 1 155 1 57 1 180 1 26 2 201 1 29 1 304 1 
308 1 297 2 185 2 253 1 125 1 101 1 102 1 155 1 292 1 43 2 330 1 224 1 142 1 26 2 257 1 114 1 259 1 84 1 370 1 
308 1 297 2 185 1 253 1 125 1 101 1 102 1 155 1 43 1 142 1 26 1 257 1 114 1 319 1 259 1 84 1 370 1 
185 1 65 1 53 1 138 1 364 1 102 1 155 1 43 1 330 1 26 1 69 1 259 1 226 1 333 1 
308 1 297 2 185 1 253 1 125 1 101 1 102 1 155 1 292 1 43 1 330 1 142 1 26 1 257 1 114 1 259 1 84 1 370 1 
194 1 
11 1 140 1 1 1 78 1 353 1 81 1 8 1 
162 1 1 1 166 1 11 1 135 1 42 1 140 1 12 1 218 1 222 1 153 1 329 1 154 1 199 1 156 1 332 1 81 2 
160 2 162 4 1 9 208 2 252 1 166 4 8 1 66 2 11 8 290 1 344 2 12 5 69 10 218 3 296 2 174 3 300 2 223 2 25 2 224 1 352 2 78 1 26 3 225 2 130 2 305 2 81 8 226 1 356 1 231 2 232 1 185 3 268 1 189 2 135 12 42 5 140 2 141 1 43 3 368 6 148 2 279 6 97 1 239 3 153 4 51 2 53 3 329 4 154 5 102 3 155 4 244 2 248 2 332 6 
160 2 162 2 1 8 186 1 166 2 135 6 254 1 11 5 42 1 344 1 141 1 192 1 140 2 12 1 14 1 368 5 236 1 146 1 218 1 296 2 279 5 153 2 51 2 154 1 329 2 126 1 281 1 223 2 25 2 244 2 27 1 248 1 332 3 81 5 83 1 
354 1 161 1 160 1 162 1 204 1 1 2 360 1 166 1 269 1 11 2 42 1 89 1 365 1 44 1 320 1 16 1 350 1 19 1 153 1 51 2 329 1 154 1 381 1 73 1 223 2 248 1 227 1 85 1 
162 1 1 1 166 1 8 1 153 1 329 1 11 1 140 1 78 1 81 1 
160 2 296 2 1 5 279 5 51 2 11 5 135 10 223 2 25 2 244 2 368 5 248 1 305 1 332 5 81 5 
154 1 218 1 42 1 140 1 12 1 81 1 
162 2 356 2 185 4 1 2 166 1 134 1 11 2 42 3 364 1 344 2 141 2 12 4 43 4 69 1 115 1 218 2 49 1 97 1 153 2 53 1 329 2 154 3 379 1 102 1 155 1 26 4 82 1 226 2 333 1 
354 3 230 1 357 1 185 1 360 2 269 2 270 1 88 1 89 1 346 1 43 1 90 1 143 1 69 1 320 3 277 1 19 2 327 1 299 1 174 1 52 2 53 1 381 2 102 1 155 1 57 1 58 1 180 1 128 1 26 1 304 1 226 1 
162 1 0 1 1 1 279 2 166 1 153 1 135 4 11 2 329 1 344 1 140 2 141 1 368 2 332 2 81 4 
205 1 6 1 363 1 
347 1 205 1 13 1 28 1 363 1 
205 1 6 1 363 1 
205 1 6 1 363 1 
280 1 205 1 363 1 
280 1 205 1 363 1 
280 1 205 1 363 1 
205 1 363 1 
272 1 249 1 
160 1 16 1 325 3 0 1 357 8 350 1 267 2 327 2 339 1 51 1 52 4 256 1 340 1 57 2 180 2 346 2 44 1 143 4 29 4 144 1 
160 1 16 1 325 2 0 1 350 1 357 6 267 2 339 1 51 1 340 1 44 1 143 3 29 3 353 1 
160 1 296 1 325 2 184 1 357 4 267 1 327 1 52 2 51 1 256 1 57 1 25 1 244 1 180 1 346 1 143 2 29 2 
160 1 296 1 325 2 357 7 186 2 267 1 51 1 254 1 256 1 127 1 25 1 244 1 143 4 29 3 83 1 
160 3 0 1 357 23 186 2 267 5 339 1 340 1 256 4 346 2 44 1 143 12 144 2 117 1 16 2 325 9 296 2 350 2 327 2 150 1 122 1 51 3 52 4 127 1 57 2 244 2 25 2 180 2 29 11 83 2 
357 1 186 1 143 1 
357 1 29 1 83 1 
160 1 184 1 325 3 296 1 357 6 327 1 267 2 52 2 51 1 256 1 57 1 25 1 244 1 346 1 180 1 143 3 29 3 305 1 
160 2 357 12 186 1 267 1 256 1 254 1 346 1 14 1 143 6 236 1 146 1 91 1 296 2 325 2 327 1 52 2 51 2 281 1 57 1 25 2 244 2 180 1 27 1 29 6 83 1 
160 1 16 1 325 2 357 6 350 1 267 1 51 1 256 1 44 1 29 3 143 3 
16 1 325 2 350 1 357 3 267 1 150 1 327 1 339 1 52 2 256 1 340 1 57 1 180 1 346 1 29 1 143 2 144 1 
161 1 160 2 16 2 325 5 350 2 357 10 327 1 267 3 52 2 51 2 256 2 57 1 346 1 180 1 44 1 29 5 143 5 91 1 
325 1 357 2 327 1 52 2 51 1 256 1 57 1 244 1 180 1 346 1 29 2 91 1 
160 1 296 1 325 2 357 4 267 1 327 1 52 2 51 1 256 1 57 1 25 1 244 1 180 1 346 1 143 2 29 2 91 1 
16 1 325 2 357 3 350 1 150 1 327 3 267 1 287 1 52 6 256 1 57 3 180 3 346 3 143 2 29 1 144 1 91 1 
160 5 184 1 0 1 357 34 186 4 267 7 209 1 287 1 339 1 38 1 340 1 254 1 256 5 346 5 44 2 143 18 144 2 91 1 16 3 325 12 296 3 350 3 18 1 150 1 327 5 52 10 51 5 127 1 57 5 25 3 244 3 180 5 29 16 83 3 
160 1 0 1 357 8 186 1 267 2 339 1 254 1 340 1 346 1 44 1 143 4 146 1 91 1 16 1 325 2 350 1 327 1 51 1 52 2 57 1 180 1 29 4 83 1 
160 1 184 1 0 1 357 11 186 2 267 2 339 1 340 1 254 1 256 1 346 2 44 1 143 5 146 1 91 1 16 1 325 3 350 1 327 2 52 4 51 2 127 1 57 2 25 1 244 1 180 2 29 6 83 1 
160 3 184 1 0 1 357 19 186 1 267 3 339 1 340 1 256 1 254 1 346 3 14 1 44 1 143 10 236 1 144 1 146 1 91 1 16 1 296 2 325 4 350 1 327 3 52 6 51 3 281 1 57 3 25 2 244 2 180 3 27 1 29 9 83 1 
160 2 184 1 0 1 357 17 186 1 267 3 339 1 340 1 256 2 254 1 346 3 14 1 44 1 143 7 144 1 236 1 146 1 91 1 16 1 296 1 325 5 350 1 327 3 52 6 51 3 281 1 57 3 25 2 244 2 180 3 27 1 29 10 83 1 
160 1 0 1 357 8 186 1 267 2 339 1 254 1 340 1 346 1 44 1 143 4 146 1 91 1 16 1 325 2 350 1 327 1 51 1 52 2 57 1 180 1 29 4 83 1 
160 2 357 12 186 1 267 1 256 1 254 1 346 1 14 1 143 6 236 1 146 1 91 1 296 2 325 2 327 1 52 2 51 2 281 1 57 1 25 2 244 2 180 1 27 1 29 6 83 1 
160 2 184 1 0 1 357 18 186 1 267 3 339 1 340 1 256 2 254 1 346 4 14 1 44 1 143 8 236 1 144 2 146 1 91 1 16 1 296 1 325 5 350 1 327 4 52 8 51 3 281 1 57 4 25 2 244 2 180 4 27 1 29 10 83 1 
160 2 357 16 186 1 267 3 287 1 256 3 254 1 346 4 14 1 143 7 236 1 144 2 146 1 91 1 296 2 325 6 327 4 52 8 51 3 281 1 57 4 25 3 244 3 180 4 27 1 29 9 83 1 
160 1 16 3 325 6 357 7 350 3 267 3 339 2 51 1 340 1 256 3 44 1 143 4 29 3 
160 2 0 1 357 18 186 1 267 3 287 1 339 1 340 1 256 1 254 1 346 4 14 1 44 1 143 8 236 1 144 2 146 1 91 1 16 1 296 1 325 4 350 1 327 4 52 8 51 3 281 1 57 4 25 2 244 2 180 4 27 1 29 10 83 1 
354 1 345 1 128 1 200 1 360 1 7 1 320 1 
31 1 354 1 360 1 7 1 50 1 139 1 24 1 345 1 128 1 200 1 193 1 320 1 
53 1 364 1 102 1 155 1 185 1 43 1 26 1 69 1 353 1 226 1 333 1 
354 2 324 1 19 1 185 1 360 1 299 1 174 1 53 1 381 1 102 1 155 1 58 1 128 1 43 1 26 1 69 1 320 2 226 1 
354 2 356 1 204 1 185 1 360 2 43 1 69 3 320 2 322 1 324 1 19 1 299 1 98 1 174 2 300 1 53 2 102 1 381 2 155 1 58 1 128 1 26 1 130 1 
354 2 183 1 356 1 204 1 185 2 360 2 43 2 69 3 320 2 322 1 324 1 19 1 98 1 174 2 300 1 54 1 53 2 102 1 381 2 155 1 58 1 128 1 26 2 130 1 
183 1 356 1 185 3 86 1 42 2 140 1 12 1 43 3 69 4 15 1 148 1 239 1 174 1 300 1 154 2 53 1 102 1 155 1 352 1 26 3 130 1 81 1 226 1 
183 1 356 1 148 1 185 3 239 1 174 1 300 1 53 1 154 2 42 2 102 1 155 1 140 1 12 1 352 1 43 3 26 3 225 1 69 4 81 1 130 1 226 1 
102 1 155 1 185 1 43 1 26 1 163 1 
334 1 307 1 170 1 185 7 250 1 173 1 4 1 174 1 163 1 268 1 243 1 53 2 191 1 102 2 155 3 224 1 43 6 26 7 69 3 84 1 226 2 
160 1 0 1 339 1 340 1 346 2 69 1 116 1 16 1 350 1 19 1 299 1 172 1 174 1 180 2 224 1 128 2 26 1 181 1 29 3 264 1 354 2 230 2 357 6 185 1 267 2 360 1 362 1 270 1 40 1 88 2 43 1 90 1 45 1 44 1 143 3 320 2 324 1 325 2 327 2 52 4 51 1 53 1 381 1 102 1 155 1 57 2 58 1 
162 2 1 1 185 1 208 1 5 1 189 1 166 2 8 1 11 1 66 1 42 3 140 1 12 2 43 1 69 2 218 1 148 1 97 1 239 1 153 2 329 2 154 3 352 1 78 1 26 1 225 1 81 1 226 1 
148 1 185 2 174 1 163 1 252 1 268 1 53 1 102 1 155 2 224 1 43 2 26 2 69 2 
183 1 185 4 53 1 364 1 102 1 67 1 155 1 43 4 224 1 26 4 69 1 226 1 333 1 
334 1 356 1 185 2 174 1 53 1 191 1 102 1 155 2 157 1 43 2 263 1 26 2 158 1 69 1 
102 1 155 1 297 1 185 1 43 1 142 1 257 1 26 1 226 1 370 1 
170 1 185 2 35 1 53 1 102 1 155 1 224 1 43 2 26 2 69 1 84 1 
307 1 170 1 356 1 185 5 250 1 53 2 364 1 102 2 67 1 155 2 43 4 224 1 26 5 69 3 226 1 333 1 
170 1 356 1 185 5 250 1 53 2 364 1 102 2 67 1 155 2 43 4 224 1 26 5 69 3 275 1 226 1 333 1 
354 2 324 1 19 1 185 1 360 1 174 1 53 1 54 1 381 1 102 1 155 1 58 1 128 1 43 1 26 1 69 1 320 2 226 1 
334 1 356 1 185 1 4 1 174 1 268 1 53 1 191 1 102 1 155 2 43 1 26 1 69 1 
316 1 178 1 128 1 234 1 36 1 
322 1 169 1 204 1 238 1 261 1 98 1 5 1 36 2 154 2 316 1 55 1 42 2 178 2 351 1 140 1 128 1 352 1 234 2 81 1 
354 1 316 1 283 1 234 1 360 1 201 1 36 1 320 1 328 1 
316 1 169 1 238 1 
103 1 335 1 366 1 353 1 
103 1 214 1 335 1 366 1 285 1 187 1 111 1 
137 1 294 1 187 1 
237 1 47 2 335 1 285 3 187 3 111 1 177 1 214 1 103 1 366 1 317 1 228 1 
103 1 214 1 335 1 149 1 366 1 285 2 187 2 369 1 111 1 
297 1 95 1 285 1 187 1 151 1 111 1 177 1 214 1 101 1 366 1 142 1 
177 1 214 1 335 1 366 1 285 1 187 1 111 1 
177 1 103 1 214 1 335 2 285 1 187 1 111 1 
177 1 214 2 335 1 366 1 285 2 187 2 358 1 121 1 111 2 289 1 
335 1 295 1 285 3 187 3 151 1 111 1 22 1 177 1 103 1 214 1 366 2 104 1 369 2 
335 1 297 2 308 1 285 2 187 2 111 1 177 1 103 1 214 1 101 1 366 1 142 1 369 1 106 1 370 1 
335 1 295 1 149 1 285 4 187 4 151 1 111 2 177 1 103 1 214 2 366 2 215 1 369 2 
177 1 103 1 214 1 335 1 366 1 285 1 187 1 111 1 
47 1 237 1 335 2 118 1 295 1 285 4 187 4 151 1 111 1 103 2 214 1 317 1 366 3 369 2 
99 1 177 1 103 1 214 1 335 1 366 1 285 2 187 2 369 1 168 1 111 1 241 1 
237 1 47 2 335 1 285 3 207 1 187 3 111 1 177 1 214 1 103 1 366 1 317 2 
93 2 341 1 366 2 303 1 
177 1 214 1 309 1 285 1 187 1 111 1 
177 1 103 1 214 1 335 1 366 1 104 1 285 2 187 2 369 1 111 1 
10 1 
177 1 103 1 214 1 335 1 366 1 285 1 187 1 111 1 
177 1 47 1 103 1 214 1 335 1 366 1 104 1 285 3 187 3 369 1 111 1 
118 1 295 1 366 1 151 1 
335 1 366 1 

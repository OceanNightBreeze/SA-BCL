#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 10 (132,245) (132,245) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 10 (132,245) (132,245) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 10 (132,245) (132,245) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 10 (132,245) (132,245) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
10 1 341 1 324 1 118 1 330 1 67 1 35 1 102 1 132 1 46 1 245 1 
10 1 341 1 324 1 118 1 330 1 67 1 35 1 102 1 132 1 46 1 245 1 
10 1 341 1 324 1 118 1 330 1 67 1 35 1 102 1 132 1 46 1 245 1 
10 1 341 1 324 1 118 1 330 1 67 1 35 1 102 1 132 1 46 1 245 1 
175 3 183 1 324 1 118 1 336 3 213 1 35 1 46 4 186 1 24 2 13 2 256 1 106 1 341 4 50 1 363 1 349 1 30 1 
183 1 324 1 336 1 118 1 309 1 35 1 100 1 102 1 46 2 186 1 256 1 341 2 168 1 169 1 330 1 363 1 
183 1 324 2 118 2 213 1 46 9 24 4 374 1 186 1 50 1 363 1 96 1 150 1 30 1 175 7 336 5 35 1 368 1 102 1 13 2 256 1 106 1 341 9 229 1 349 3 
183 1 324 2 118 2 213 1 46 9 24 4 374 1 186 1 50 1 363 1 96 1 150 1 30 1 175 7 336 5 35 1 368 1 102 1 13 2 256 1 106 1 341 9 229 1 349 3 
175 1 183 1 324 2 118 2 336 2 35 1 102 1 46 3 24 1 256 1 341 3 150 1 349 1 
283 1 34 1 271 1 293 1 134 1 216 1 144 1 228 1 48 1 15 1 300 1 125 1 333 1 44 1 
18 1 
18 1 110 1 39 1 
18 1 185 1 26 2 
271 2 125 2 293 2 216 2 134 1 228 2 204 1 44 2 
164 2 325 1 271 3 293 2 236 1 25 1 216 2 27 1 187 1 95 2 189 1 360 2 331 1 125 2 72 1 126 1 305 1 97 1 378 1 178 1 200 1 227 1 154 1 250 1 201 1 134 1 202 1 379 2 228 3 204 1 111 1 381 2 88 1 321 1 267 1 140 1 44 2 
15 1 271 1 125 1 293 1 216 1 134 1 144 1 333 1 228 1 44 1 
18 1 177 1 34 1 271 1 216 1 144 1 228 1 275 1 110 1 9 1 300 1 265 1 280 1 210 1 
18 1 177 1 34 2 271 1 293 1 216 1 144 1 228 1 275 1 110 1 125 1 300 2 265 1 280 1 44 1 
20 1 34 1 93 1 300 1 48 1 
18 1 20 1 110 1 34 2 300 2 151 1 252 1 48 1 
20 1 34 1 300 1 
18 1 20 1 110 1 34 2 300 2 165 1 252 1 48 1 
18 1 335 1 334 2 20 2 34 5 66 1 252 1 56 1 166 1 48 2 340 1 297 1 258 1 371 1 276 2 110 1 139 1 300 5 346 2 
257 1 344 1 80 1 
39 1 204 1 
271 2 293 1 216 2 228 2 204 2 287 1 83 1 125 1 44 1 
164 1 271 2 293 1 250 1 236 1 25 1 216 1 202 1 27 1 228 2 81 1 156 1 360 1 344 1 111 1 125 1 381 1 72 1 140 1 378 1 
271 5 293 4 216 5 228 5 204 1 81 2 156 1 83 1 9 1 125 4 361 1 347 1 64 1 44 1 
225 1 271 2 125 2 293 2 216 2 144 1 333 1 228 2 
81 1 271 3 125 3 293 3 216 3 228 3 44 1 204 1 
271 1 125 1 293 1 216 1 144 1 333 1 228 1 
287 1 83 1 271 1 125 1 293 1 216 1 144 1 228 1 44 1 
351 1 164 1 325 1 271 4 293 3 236 1 25 1 216 3 144 1 27 1 95 1 189 1 275 1 360 1 331 1 125 3 300 1 72 1 280 1 378 1 97 1 177 1 178 1 34 1 227 1 250 1 154 1 201 1 134 1 202 1 379 2 228 4 204 1 81 1 156 1 83 1 111 1 381 1 88 1 265 1 114 1 267 1 140 1 44 2 
81 1 9 1 271 2 125 1 361 1 293 1 216 2 228 2 204 1 
18 1 177 1 34 1 271 3 292 1 293 3 216 3 144 1 228 3 81 2 156 1 83 1 275 1 300 1 125 3 265 1 280 1 114 1 44 1 
81 1 257 1 83 1 344 1 271 2 125 2 293 2 216 2 228 2 44 1 
164 1 271 1 236 1 250 1 25 1 202 1 27 1 228 1 204 1 360 1 111 1 381 1 72 1 140 1 378 1 
164 1 17 1 271 1 236 1 250 1 25 1 228 1 204 1 360 1 7 1 111 1 381 1 72 1 140 1 378 1 
325 1 238 1 95 4 69 1 189 1 331 1 242 1 220 1 178 1 131 1 311 1 200 2 249 1 201 1 155 1 379 2 136 1 80 2 257 2 344 2 59 1 88 1 288 1 267 2 
225 1 271 1 125 1 293 1 280 1 216 1 144 1 228 1 
164 1 271 1 236 1 250 1 25 1 202 1 27 1 228 1 204 1 360 1 111 1 381 1 72 1 52 1 140 1 378 1 
338 1 358 1 
338 1 358 1 
84 1 212 1 
84 1 212 1 
84 1 212 1 
365 1 338 1 358 1 
365 1 338 1 358 1 
365 1 338 1 358 1 
329 1 338 1 358 1 
329 1 338 1 358 1 
329 1 338 1 358 1 
338 1 358 1 376 1 
84 1 277 1 338 2 358 2 70 1 212 1 
271 2 293 2 358 1 216 2 214 1 122 1 191 1 125 2 300 1 194 1 303 1 376 1 367 1 307 1 54 1 34 1 199 1 338 1 313 1 228 2 204 1 255 1 109 1 117 1 
18 1 34 2 54 3 199 2 338 2 358 2 313 2 122 1 109 2 207 1 277 1 316 2 300 2 362 1 171 1 196 1 116 1 303 2 222 1 
50 1 363 1 186 1 
309 1 363 1 186 1 
148 1 309 1 50 2 186 3 284 1 94 1 
58 1 148 1 309 1 50 1 186 2 284 1 
148 1 309 1 50 1 186 2 284 2 
18 2 20 1 352 1 185 1 214 1 238 1 26 3 145 2 69 1 274 1 328 2 48 4 276 1 191 1 300 5 242 1 244 1 364 2 334 1 335 1 34 5 249 1 252 1 79 1 255 1 258 3 157 1 110 1 139 2 346 1 348 1 89 1 
233 1 18 5 20 6 352 2 185 3 93 5 68 5 238 3 26 9 121 1 145 6 69 3 48 7 298 1 124 1 276 2 300 9 242 3 244 1 364 6 246 1 335 1 334 2 34 9 249 3 252 1 79 2 340 1 255 4 258 8 110 1 139 6 346 2 209 1 348 3 
18 3 352 1 185 2 238 1 26 4 145 2 274 1 328 1 69 1 48 2 276 1 300 3 242 1 364 2 334 1 34 3 249 1 79 1 340 1 255 1 258 3 110 1 346 1 139 2 89 1 348 1 
18 4 352 1 185 3 238 2 26 7 121 1 145 4 274 1 328 2 69 2 48 3 298 1 124 1 276 1 300 4 242 2 364 4 334 1 34 4 249 2 79 1 340 1 255 2 258 5 110 1 346 1 139 4 89 1 348 2 
119 1 
38 1 39 1 140 1 
140 1 306 1 
111 1 25 1 140 1 
295 1 140 1 
111 1 140 1 
111 1 337 1 25 1 38 2 140 3 90 1 
32 1 21 1 200 4 133 1 238 1 373 1 180 1 136 2 77 2 95 7 69 1 146 1 82 1 206 1 59 3 16 1 172 1 267 3 
272 1 373 5 238 4 95 31 69 4 146 2 190 4 331 1 242 3 172 1 195 1 366 1 282 1 32 2 178 1 99 1 200 16 249 3 133 2 201 1 251 1 180 1 379 2 77 3 136 5 105 3 82 1 206 1 59 10 16 2 88 1 348 3 182 1 267 15 
238 1 373 1 95 9 69 1 146 1 331 2 172 1 282 1 129 1 32 1 178 2 200 5 201 2 133 1 379 4 77 2 136 3 180 1 82 1 59 4 16 1 88 2 290 1 267 4 
32 1 200 4 133 1 238 1 373 1 180 1 136 2 77 2 95 7 69 1 146 1 82 1 206 1 59 3 16 1 172 1 267 3 
32 1 200 4 133 1 238 1 373 1 180 1 136 2 77 2 95 7 69 1 146 1 82 1 206 1 59 3 16 1 172 1 267 3 
183 1 164 1 0 1 324 1 118 1 45 1 143 1 46 2 186 2 94 1 360 1 50 1 72 1 363 1 378 1 175 1 198 1 336 1 309 1 35 1 102 1 254 1 181 1 256 1 341 2 113 1 381 1 60 1 160 1 211 1 
183 1 164 1 0 1 324 1 118 1 234 1 143 1 46 3 237 1 186 2 94 1 360 1 50 1 72 1 363 1 378 1 198 1 175 2 98 1 336 1 309 1 102 1 254 1 181 1 256 1 341 3 113 1 381 1 60 1 211 1 
183 1 164 1 0 1 46 2 237 1 186 2 94 1 360 1 50 1 72 1 363 1 378 1 198 1 175 2 98 1 336 1 309 1 102 1 181 1 256 1 341 2 113 1 381 1 60 1 211 1 
198 2 291 1 164 1 324 1 234 1 118 1 270 1 102 2 236 1 46 1 103 1 120 1 341 1 360 1 111 1 381 1 72 1 60 2 162 1 140 1 211 2 350 1 378 1 
198 1 0 1 98 1 164 1 324 1 309 1 118 1 143 1 35 1 102 1 46 1 186 2 94 1 181 1 254 1 341 1 360 1 50 1 113 1 381 1 72 1 60 1 363 1 160 1 211 1 378 1 
302 1 
291 1 352 1 185 2 236 2 47 2 4 1 144 1 299 1 360 2 9 1 300 5 369 4 252 3 57 1 258 2 110 1 111 1 159 2 263 2 319 1 265 1 63 2 210 1 163 1 323 2 322 1 164 2 18 2 20 6 270 1 271 1 216 1 26 2 217 1 276 1 275 1 170 1 72 1 280 1 173 2 128 1 29 1 378 1 335 1 334 1 177 1 34 5 228 1 40 2 345 1 139 2 346 1 87 1 381 2 140 1 
322 1 20 2 271 1 165 1 216 1 144 1 217 1 299 1 275 1 9 1 170 1 300 3 280 1 177 1 34 3 369 2 228 1 252 1 40 1 345 1 265 1 210 1 
322 1 18 1 20 1 271 1 165 1 47 1 216 1 144 1 217 1 299 1 275 1 9 1 170 1 300 3 280 1 177 1 34 3 369 3 228 1 252 1 345 1 110 1 265 1 210 1 
322 1 18 1 20 2 271 1 165 1 47 1 216 1 144 1 217 1 299 1 275 1 9 1 170 1 300 3 280 1 177 1 34 3 369 3 252 1 228 1 40 1 345 1 110 1 159 1 265 1 210 1 
323 2 322 1 18 5 20 7 185 2 271 1 165 1 47 4 216 1 144 1 327 1 217 1 239 1 299 1 276 1 275 1 8 1 9 1 170 1 300 5 280 1 173 2 53 1 128 1 334 1 335 1 177 1 33 1 34 5 369 6 252 3 228 1 40 4 57 1 258 1 110 5 345 1 159 4 139 1 346 1 263 2 265 1 63 2 210 1 
323 2 322 1 18 2 20 4 185 2 271 1 47 2 216 1 144 1 26 2 217 1 299 1 276 1 275 1 9 1 170 1 300 4 280 1 173 2 128 1 334 1 335 1 177 1 34 4 369 4 252 2 228 1 40 2 57 1 258 1 110 1 345 1 159 2 139 1 346 1 263 2 265 1 63 2 210 1 163 1 
323 2 322 1 18 1 20 4 185 2 271 1 47 2 216 1 144 1 217 1 299 1 275 1 276 1 9 1 8 1 170 1 300 4 280 1 173 2 53 1 128 1 177 1 335 1 334 1 33 1 34 4 369 4 252 2 228 1 40 2 57 1 258 1 110 1 345 1 159 2 139 1 346 1 263 2 265 1 63 2 210 1 
323 2 322 1 18 1 20 4 185 2 271 1 47 2 216 1 144 1 217 1 299 1 275 1 276 1 9 1 8 1 170 1 300 4 280 1 173 2 53 1 128 1 177 1 335 1 334 1 33 1 34 4 369 4 252 2 228 1 40 2 57 1 258 1 110 1 345 1 159 2 139 1 346 1 263 2 265 1 63 2 210 1 
322 1 268 1 18 1 20 4 271 1 47 2 216 1 144 1 26 2 217 1 299 1 275 1 276 1 9 1 170 1 300 4 280 1 173 2 53 1 177 1 335 1 334 1 34 4 369 4 252 2 228 1 40 2 107 2 57 1 258 1 110 1 345 1 159 2 85 1 260 2 139 1 346 1 265 1 63 2 161 1 210 1 
323 2 322 1 18 1 20 5 185 2 271 1 47 3 216 1 144 1 327 1 217 1 299 1 276 1 275 1 9 1 8 1 170 1 300 4 280 1 173 2 53 1 128 1 334 1 335 1 177 1 33 1 34 4 369 5 252 2 228 1 40 3 57 1 258 1 110 1 345 1 159 3 139 1 346 1 263 2 265 1 63 2 210 1 
323 2 322 1 18 1 20 5 185 2 271 1 47 3 216 1 144 1 327 1 217 1 299 1 276 1 275 1 9 1 8 1 170 1 300 4 280 1 173 2 53 1 128 1 334 1 335 1 177 1 33 1 34 4 369 5 252 2 228 1 40 3 57 1 258 1 110 1 345 1 159 3 139 1 346 1 263 2 265 1 63 2 210 1 
322 1 268 1 18 1 20 4 271 1 47 2 216 1 144 1 26 2 217 1 299 1 276 1 275 1 9 1 170 1 300 4 280 1 173 2 334 1 335 1 177 1 34 4 369 4 252 2 228 1 40 2 107 2 57 1 258 1 110 1 345 1 159 2 260 2 139 1 346 1 265 1 63 2 210 1 163 1 
325 1 238 1 95 6 69 1 146 1 189 1 331 1 172 1 178 1 200 3 201 1 39 1 379 2 136 2 180 1 77 1 80 1 204 2 257 1 82 1 344 1 59 2 16 1 88 1 288 1 267 3 
325 1 92 1 373 1 238 1 187 1 95 14 69 2 71 1 190 3 189 2 331 2 242 1 195 1 223 1 366 1 178 2 227 1 200 8 249 2 201 2 37 1 136 1 379 4 80 11 204 1 105 3 257 4 344 11 59 2 61 1 88 2 348 2 267 6 
164 1 325 1 269 1 271 2 293 1 236 1 25 1 216 1 27 1 95 2 187 1 360 1 189 1 331 1 125 1 72 1 52 1 378 1 223 1 308 1 178 1 250 1 227 1 200 1 201 1 202 1 55 1 228 2 379 2 204 1 81 1 156 1 257 1 111 1 381 1 88 1 140 1 267 1 
293 1 236 1 238 3 187 1 95 20 146 1 360 3 189 3 149 1 242 2 197 2 97 2 98 1 250 2 249 2 200 10 201 3 202 2 204 2 156 1 205 1 257 7 111 2 59 8 16 1 267 10 164 3 325 3 271 3 216 1 25 2 373 4 27 2 69 3 331 3 125 1 172 1 72 2 223 1 378 2 178 3 227 1 226 2 77 1 180 1 136 4 379 6 228 3 80 7 342 1 81 1 82 1 41 2 344 7 381 3 88 3 348 2 289 2 140 2 
325 1 178 1 311 1 249 1 200 2 201 1 373 1 95 2 379 2 80 1 69 1 257 1 189 1 344 1 59 1 331 1 88 1 288 1 
325 1 178 1 201 1 238 1 136 1 95 2 379 2 80 1 257 1 189 1 344 1 59 1 331 1 242 1 88 1 288 1 220 1 267 2 
325 1 178 1 249 1 200 2 201 1 238 1 373 1 136 1 95 4 379 2 80 2 69 1 257 2 189 1 344 2 59 2 331 1 242 1 88 1 288 1 348 1 267 2 
325 1 178 1 311 1 249 1 200 2 201 1 373 1 104 1 95 2 379 2 80 1 69 1 257 1 189 1 344 1 59 1 331 1 88 1 
325 1 178 1 201 1 238 1 104 1 136 1 95 2 379 2 80 1 257 1 189 1 344 1 59 1 331 1 242 1 88 1 220 1 267 2 
325 1 178 1 249 1 200 2 201 1 238 1 373 1 104 1 136 1 95 4 379 2 80 2 69 1 257 2 189 1 344 2 59 2 331 1 242 1 88 1 348 1 267 2 
325 1 178 1 249 1 200 2 201 1 238 1 373 1 136 1 379 2 95 4 80 2 69 1 257 2 189 1 344 2 59 2 331 1 242 1 88 1 348 1 267 2 
164 1 325 1 271 1 236 1 25 1 27 1 187 1 95 2 360 1 189 1 331 1 72 1 378 1 97 1 178 1 200 1 250 1 227 1 201 1 202 1 228 1 379 2 204 1 111 1 381 1 88 1 140 1 267 1 
17 1 164 1 325 1 271 1 236 1 25 1 187 1 95 2 6 1 7 1 360 1 189 1 331 1 72 1 378 1 178 1 200 1 250 1 227 1 201 1 228 1 379 2 204 1 111 1 381 1 88 1 140 1 267 1 
325 1 178 1 249 1 200 2 201 1 238 1 373 1 136 1 95 4 379 2 80 2 69 1 257 2 189 1 344 2 59 2 331 1 242 1 88 1 348 1 267 2 223 1 
164 1 325 1 45 1 271 1 238 1 373 1 25 1 27 1 95 4 69 1 360 1 189 1 331 1 242 1 72 1 378 1 97 1 178 1 200 2 249 1 250 1 226 1 201 1 202 1 136 1 228 1 379 2 80 2 257 2 344 2 111 1 59 2 381 1 88 1 348 1 267 2 140 1 
325 1 326 1 271 1 293 1 238 1 373 1 216 1 95 3 69 1 189 1 331 1 125 1 242 1 223 1 178 1 249 1 200 2 201 1 379 2 228 1 80 1 257 1 83 1 344 1 59 1 88 1 348 1 267 1 44 1 
164 8 291 1 325 2 270 1 45 1 271 1 293 1 236 2 216 1 5 1 28 1 187 1 95 2 147 1 360 8 189 2 331 2 192 1 125 1 72 2 305 2 378 2 98 1 178 2 200 1 227 1 201 2 104 1 228 1 379 4 81 1 111 2 381 7 88 2 320 1 264 1 288 1 140 3 267 1 
325 1 271 1 293 1 216 1 238 1 95 3 69 1 189 1 331 1 125 1 242 1 223 1 178 1 249 1 200 1 201 1 136 1 379 2 253 1 228 1 80 1 257 1 83 1 344 1 59 1 88 1 348 1 267 2 44 1 
184 1 215 1 373 3 238 3 95 19 69 3 190 2 331 2 242 3 195 1 174 2 304 2 366 1 129 1 178 2 200 9 249 3 201 2 136 3 379 4 105 1 14 1 138 1 59 6 262 1 230 1 372 1 88 2 348 3 267 10 
232 1 184 2 373 2 238 2 215 2 95 26 69 3 188 1 190 2 331 3 242 2 174 1 304 4 282 2 366 2 129 1 178 3 75 1 200 14 249 3 201 3 312 1 136 2 379 6 339 1 105 2 138 1 42 1 59 4 230 1 372 1 88 3 348 3 267 12 
232 1 184 1 215 2 373 4 238 5 95 41 69 5 146 1 188 1 190 4 331 3 242 4 279 1 172 1 195 1 174 1 304 4 282 1 366 3 129 1 178 3 75 1 200 20 249 4 201 3 312 1 77 1 180 1 136 4 379 6 339 1 105 3 14 1 138 1 82 1 42 1 59 8 16 1 230 1 372 1 88 3 348 4 267 21 
232 1 184 1 215 2 373 3 238 4 95 38 69 5 146 1 188 1 190 4 331 4 242 3 279 1 172 1 195 1 174 1 304 4 282 2 366 3 129 1 178 4 75 1 200 20 249 4 201 4 312 1 77 1 180 1 136 4 379 8 339 1 105 3 14 1 138 1 82 1 42 1 59 7 16 1 230 1 372 1 88 4 348 4 267 18 
232 1 184 1 215 1 373 7 238 8 95 52 69 8 146 1 188 1 71 2 190 4 331 2 242 7 172 1 195 2 174 1 304 4 282 1 366 2 129 1 178 2 75 1 200 27 249 7 201 2 312 1 77 1 180 1 136 7 379 4 339 1 105 4 138 1 82 1 42 1 59 14 16 1 230 1 372 1 88 2 348 7 267 25 
109 1 277 1 199 1 208 1 338 1 362 1 358 1 196 1 313 1 303 1 
307 1 376 1 
176 1 109 1 193 1 199 1 338 1 76 1 358 1 313 1 303 1 
365 1 278 1 
329 1 359 1 70 1 
18 1 34 1 54 2 199 1 338 1 358 1 313 1 122 1 109 1 277 1 316 1 300 1 362 1 171 1 196 1 116 1 303 1 222 1 
18 1 34 1 54 2 199 1 338 1 358 1 313 1 122 1 109 1 277 1 316 1 300 1 362 1 171 1 196 1 116 1 303 1 222 1 
18 1 34 1 54 2 199 1 338 1 358 1 313 1 122 1 109 1 277 1 316 1 300 1 362 1 171 1 196 1 116 1 303 1 222 1 
365 1 278 1 70 1 
365 1 278 1 70 1 
329 1 359 1 
329 1 359 1 70 1 
194 1 117 1 
271 2 293 2 358 1 214 1 216 2 48 1 191 1 300 1 125 2 194 1 303 1 376 1 367 1 307 1 34 1 54 1 101 1 199 1 338 1 313 1 228 2 204 1 255 1 109 1 316 1 116 1 117 1 
164 2 325 1 235 1 271 2 357 1 216 2 187 1 95 2 296 1 241 1 147 1 360 2 189 1 331 1 243 1 72 1 305 2 378 1 223 1 178 1 200 1 227 1 201 1 228 2 379 2 111 1 381 2 88 1 264 1 140 1 267 1 
98 1 164 2 309 1 45 1 179 1 186 2 94 1 254 1 181 1 360 2 343 1 50 1 113 1 381 2 72 1 363 1 377 1 211 1 378 1 
98 1 164 1 309 1 22 1 186 2 94 1 254 1 181 1 360 1 343 1 50 1 113 1 381 1 72 1 363 1 211 1 378 1 
164 1 291 1 270 1 236 1 273 1 360 1 111 1 381 1 72 1 162 1 377 1 140 1 211 1 378 1 
98 1 164 1 309 1 179 1 186 2 94 1 254 1 181 1 360 1 343 1 50 1 113 1 381 1 72 1 363 1 377 1 211 1 378 1 
318 1 
18 5 185 5 249 2 294 1 238 2 26 10 167 2 145 5 69 2 41 1 258 5 139 5 242 2 348 2 364 5 
258 1 18 1 371 1 110 1 139 1 66 1 39 1 
323 1 18 2 335 1 334 1 20 1 34 1 185 1 26 1 252 1 258 1 276 1 110 1 300 1 346 1 139 1 263 1 128 1 
352 2 354 1 185 6 45 1 236 1 3 1 294 2 238 2 295 2 145 6 240 1 360 3 300 5 242 2 364 6 247 1 306 3 310 1 249 2 252 3 371 1 258 9 110 2 111 3 65 2 164 3 18 8 20 5 66 1 25 3 26 12 167 2 69 2 123 2 276 4 275 2 72 3 127 2 29 1 378 4 335 4 334 4 130 2 34 5 337 1 38 2 137 2 41 2 346 4 139 8 381 3 43 2 348 2 140 10 
232 1 18 5 20 1 352 1 355 1 185 3 294 1 238 2 26 6 167 2 145 5 69 2 188 1 190 1 276 2 300 1 242 2 332 1 364 5 29 1 366 1 334 2 335 2 34 1 249 2 312 1 252 1 339 1 105 1 258 8 42 1 110 2 346 2 139 5 348 2 
271 1 293 1 294 1 238 1 216 1 144 1 167 2 69 2 146 1 276 1 300 1 125 1 333 1 283 1 334 1 335 1 33 1 34 1 134 1 228 1 180 1 258 2 15 1 16 1 380 1 346 1 139 2 44 1 
335 1 334 1 18 1 66 1 371 1 258 1 276 1 110 1 346 1 139 1 
164 1 325 1 271 3 293 2 236 1 216 2 25 1 27 1 95 1 360 1 189 1 331 1 125 2 72 1 97 1 378 1 178 1 227 1 154 1 250 1 201 1 134 1 202 1 379 2 228 3 204 1 111 1 381 1 88 1 267 1 140 1 44 2 
335 1 334 1 18 4 352 1 185 2 26 4 77 1 145 2 258 1 276 1 110 2 139 2 346 1 364 2 29 1 
18 1 20 1 110 1 34 1 300 1 252 1 
164 4 291 1 20 4 352 2 270 1 236 2 4 1 240 1 276 2 360 4 300 3 72 1 74 1 378 1 29 2 334 2 335 1 152 1 34 3 310 2 252 2 340 1 258 2 111 1 346 2 139 2 87 1 381 4 140 1 
36 1 313 1 303 1 
36 1 313 1 303 1 
36 1 313 1 303 1 
356 1 313 1 303 1 
356 1 313 1 303 1 
356 1 313 1 303 1 
313 1 303 1 
338 1 358 1 
112 1 362 1 117 1 313 1 303 1 
129 1 178 1 200 5 201 1 373 2 238 2 379 2 136 3 95 10 180 1 69 2 146 2 331 1 59 5 380 1 16 2 88 1 267 5 
129 1 178 1 249 1 200 2 201 1 373 1 379 2 95 2 69 1 331 1 59 1 88 1 
129 1 178 1 249 1 200 2 201 1 238 1 373 1 136 1 379 2 95 4 69 1 59 2 331 1 242 1 88 1 348 1 267 2 
282 1 129 1 178 3 153 1 200 1 201 3 373 1 95 3 379 6 136 1 146 1 14 1 331 3 59 2 16 1 88 3 267 2 
373 5 238 5 95 34 69 5 146 3 190 4 331 5 242 3 172 1 195 1 282 2 366 1 129 1 178 5 99 1 153 1 200 16 249 3 201 5 251 1 77 1 180 2 379 10 136 7 105 3 14 1 82 1 259 1 59 12 16 3 88 5 348 3 182 1 267 18 
282 1 178 2 200 4 201 2 238 1 373 1 77 1 180 1 95 8 136 2 379 4 69 1 146 1 82 1 59 3 331 2 16 1 88 2 172 1 267 4 
200 3 238 1 77 1 39 1 136 2 180 1 95 6 69 1 146 1 82 1 59 2 16 1 172 1 267 3 
178 1 249 1 200 2 201 1 238 1 373 1 136 1 379 2 95 4 69 1 259 1 59 2 331 1 242 1 88 1 348 1 267 2 
366 1 200 3 249 1 238 1 373 1 136 1 95 7 69 1 105 1 190 2 59 2 242 1 195 1 348 1 267 4 
373 4 238 3 95 23 69 3 146 2 71 1 190 2 331 2 242 2 172 1 195 1 282 2 178 2 153 1 249 2 200 11 201 2 77 1 180 1 136 5 379 4 105 2 82 1 59 9 16 2 61 1 88 2 348 2 267 12 
190 1 95 1 267 1 
200 1 95 1 105 1 
178 1 249 1 200 3 201 1 373 1 238 1 379 2 95 6 136 2 69 1 41 1 259 1 331 1 59 3 242 1 88 1 348 1 267 3 
232 1 373 1 238 2 95 12 69 2 188 1 190 1 331 1 242 2 366 1 129 1 178 1 200 6 249 2 201 1 312 1 379 2 136 1 339 1 105 1 42 1 59 2 88 1 348 2 267 6 
200 3 238 1 373 1 180 1 95 6 136 1 69 1 146 1 59 2 16 1 267 3 
282 1 178 1 153 1 200 1 201 1 373 1 136 1 95 3 379 2 146 1 82 1 59 2 331 1 16 1 172 1 88 1 267 2 
238 1 95 8 69 1 146 1 190 1 331 1 172 1 366 1 129 1 178 1 200 4 201 1 77 1 379 2 136 2 180 1 105 1 82 1 42 1 59 2 16 1 88 1 267 4 
238 1 373 1 95 11 69 2 146 1 190 2 331 2 172 1 195 1 366 1 129 1 178 2 200 6 249 1 201 2 77 1 180 1 136 2 379 4 105 1 82 1 42 1 259 1 59 3 16 1 88 2 348 1 267 5 
232 1 373 1 238 3 95 19 69 3 146 1 188 1 190 1 331 3 242 2 172 1 366 1 282 1 129 1 178 3 200 9 249 2 201 3 312 1 77 1 180 1 379 6 136 3 339 1 105 1 82 1 259 1 42 1 59 4 16 1 88 3 348 2 267 10 
232 1 373 2 238 2 95 17 69 3 146 1 188 1 190 1 331 3 242 1 172 1 282 1 366 1 129 1 178 3 200 10 249 2 201 3 312 1 77 1 180 1 379 6 136 3 339 1 105 1 82 1 259 1 42 1 59 5 16 1 88 3 348 2 267 7 
238 1 95 8 69 1 146 1 190 1 331 1 172 1 366 1 129 1 178 1 200 4 201 1 77 1 379 2 136 2 180 1 105 1 82 1 42 1 59 2 16 1 88 1 267 4 
232 1 373 1 238 2 95 12 69 2 188 1 190 1 331 1 242 2 366 1 129 1 178 1 200 6 249 2 201 1 312 1 379 2 136 1 339 1 105 1 42 1 59 2 88 1 348 2 267 6 
232 1 373 2 238 2 95 18 69 3 146 1 188 1 190 1 331 4 242 1 172 1 366 1 282 2 129 1 178 4 200 10 249 2 201 4 312 1 77 1 180 1 379 8 136 3 339 1 105 1 82 1 42 1 259 1 59 5 16 1 88 4 348 2 267 8 
232 1 373 3 238 2 95 16 69 3 188 1 190 1 331 4 242 2 366 1 282 2 129 1 178 4 200 9 249 3 201 4 312 1 379 8 136 3 339 1 105 1 14 1 42 1 59 6 88 4 348 3 267 7 
200 3 238 1 373 3 95 7 136 3 180 1 69 1 146 3 82 1 59 6 16 3 172 2 267 4 
232 1 373 1 238 2 95 18 69 3 146 1 188 1 190 1 331 4 242 1 172 1 366 1 282 2 129 1 178 4 200 10 249 2 201 4 312 1 77 1 180 1 379 8 136 3 339 1 105 1 14 1 82 1 42 1 59 4 16 1 88 4 348 2 267 8 
9 1 271 1 361 1 2 1 216 1 228 1 204 1 
31 1 12 1 271 1 2 1 23 1 216 1 228 1 204 1 9 1 361 1 115 1 73 1 
141 1 164 2 11 1 91 1 310 1 25 1 205 1 360 2 111 1 381 2 72 1 140 1 221 1 378 2 
164 1 309 1 360 1 381 1 72 1 236 1 363 1 186 1 181 1 378 1 
164 2 98 1 235 1 45 1 360 2 111 1 381 2 72 1 264 1 140 1 378 1 
291 1 164 1 360 1 111 1 270 1 381 1 72 1 236 1 39 1 140 1 378 1 
164 1 271 2 293 1 250 1 236 1 25 1 216 1 27 1 228 2 204 1 81 1 360 1 111 1 125 1 381 1 72 1 140 1 378 1 
164 1 177 1 271 2 310 1 293 2 250 1 25 2 216 2 144 1 295 1 27 1 228 2 204 1 137 1 81 1 360 1 111 2 125 1 381 1 72 1 280 1 140 3 378 1 
17 1 164 2 271 2 293 2 216 2 25 2 144 1 295 1 360 2 125 1 72 1 280 1 378 1 177 1 310 1 250 1 228 2 204 1 81 1 137 1 111 2 381 2 140 3 231 1 
164 3 18 1 20 1 236 1 25 1 295 1 360 3 275 1 300 2 72 1 306 1 378 1 34 2 310 1 38 1 314 1 137 1 111 1 110 1 158 1 381 3 140 4 231 1 
164 3 18 1 20 1 34 2 310 1 236 1 25 1 295 1 38 1 137 1 275 1 360 3 110 1 111 1 300 2 381 3 72 1 127 1 140 4 231 1 378 1 306 1 
164 1 360 1 381 1 72 1 320 1 378 1 
141 1 98 1 164 7 45 1 337 1 236 2 25 1 5 1 28 1 360 7 111 2 192 1 381 6 72 2 320 1 62 1 264 1 305 1 140 3 221 1 378 3 
45 1 293 1 357 1 238 1 95 6 146 1 360 1 189 2 197 1 97 1 250 1 200 3 201 2 202 1 204 2 257 1 111 1 59 2 16 1 267 3 164 1 325 2 271 2 216 1 25 1 27 1 69 1 331 2 125 1 72 1 172 1 223 1 378 1 178 2 226 1 379 4 228 2 136 2 180 1 77 1 80 1 81 1 82 1 344 1 381 1 88 2 140 1 
164 1 18 1 20 2 66 1 236 1 48 1 240 1 276 2 360 1 123 1 275 1 300 3 127 1 306 1 334 2 335 2 34 3 130 1 38 1 252 1 258 1 371 1 110 1 139 1 346 2 381 1 43 1 140 2 
164 2 45 1 337 1 25 1 38 1 360 2 111 1 381 2 72 1 320 1 247 1 140 2 378 2 
164 4 291 1 270 1 45 1 236 1 285 1 360 4 111 1 381 4 72 1 140 1 231 1 378 1 
164 1 17 1 271 2 293 1 250 1 236 1 25 1 216 1 228 2 204 1 81 1 360 1 111 1 125 1 381 1 72 1 140 1 378 1 
141 1 164 1 310 1 337 1 25 1 360 1 111 1 381 1 72 1 62 1 140 1 221 1 378 2 
291 1 164 5 270 1 310 1 45 1 236 1 285 1 28 1 360 5 111 2 192 1 381 4 72 2 264 1 140 3 378 2 
291 1 164 5 270 1 310 1 45 1 236 1 285 1 28 1 360 5 111 2 381 4 317 1 72 2 264 1 140 3 378 2 
353 1 271 1 216 1 228 1 296 1 241 1 243 1 51 1 281 1 
19 1 353 1 219 1 
353 1 51 1 266 1 281 1 204 1 
18 1 177 1 19 1 353 1 34 2 144 1 78 1 204 1 48 1 275 1 110 1 300 2 219 1 51 2 280 1 265 1 266 2 114 1 281 2 
175 2 183 2 324 1 118 1 336 3 142 1 46 4 24 1 256 2 341 4 218 1 49 1 169 1 349 1 
175 1 183 1 324 1 336 1 118 1 1 1 35 1 46 2 374 1 256 1 341 2 108 1 
224 1 183 1 324 1 336 1 118 1 35 1 46 3 256 1 341 3 218 2 49 1 169 2 
370 1 336 2 261 2 375 1 
341 1 324 1 118 1 35 1 301 1 46 1 
183 1 336 1 39 1 256 1 
341 1 183 1 324 1 336 1 118 1 46 1 256 1 
198 1 341 1 102 1 
183 1 324 1 336 1 118 1 35 1 46 3 286 1 256 1 341 3 218 1 49 1 169 2 
175 1 341 2 183 1 324 1 336 1 118 1 46 2 13 1 256 1 
341 1 324 1 336 1 118 1 50 1 35 1 363 1 46 1 186 1 24 1 106 1 
341 1 183 1 324 1 336 1 118 1 35 1 46 1 
341 1 183 2 324 1 118 1 35 1 46 1 256 1 
183 1 324 2 336 1 118 2 35 1 46 2 203 1 135 1 341 2 86 1 
175 2 183 1 324 1 118 1 336 2 35 1 368 1 46 3 24 1 256 1 341 3 96 1 349 1 
175 1 183 1 324 1 336 1 309 1 118 1 35 1 46 2 186 2 94 1 256 1 341 2 50 1 363 1 248 1 
175 2 183 1 324 2 118 2 336 2 213 1 35 1 46 4 24 1 13 1 256 1 341 4 349 1 
341 1 183 1 324 1 336 1 118 1 35 1 46 1 256 1 
175 1 341 2 183 1 324 1 336 1 118 1 35 1 46 2 96 1 256 1 
315 1 
341 1 183 1 324 1 336 1 118 1 35 1 46 1 256 1 
175 1 183 1 324 1 118 1 336 1 35 1 46 3 256 1 341 3 169 1 96 1 
341 1 175 1 336 1 46 1 24 1 349 1 
183 1 336 1 

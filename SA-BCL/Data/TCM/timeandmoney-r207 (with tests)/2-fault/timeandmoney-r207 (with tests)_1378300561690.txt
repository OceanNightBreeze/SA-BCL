#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 107 141 84 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 107 229 84 349 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 107 141 55 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 107 141 84 349 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 360 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 107 229 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 354 378 256 229 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 107 229 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 354 378 256 229 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 354 378 256 229 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
220 1 36 1 59 1 37 1 201 2 138 5 304 1 350 1 232 9 371 2 189 3 307 2 16 2 115 1 238 1 164 2 206 1 266 1 309 4 144 1 19 6 269 9 171 1 124 1 126 1 70 2 247 2 176 1 
220 1 36 1 59 1 37 1 201 2 138 5 304 1 350 1 232 9 371 2 189 3 307 2 16 2 115 1 238 1 164 2 206 1 266 1 309 4 144 1 19 6 269 9 171 1 124 1 126 1 70 2 247 2 176 1 
220 1 36 1 59 1 37 1 201 2 138 6 304 1 350 1 232 10 371 2 189 4 307 2 16 2 115 1 238 1 164 2 206 1 266 1 309 5 144 1 19 7 269 10 171 1 124 1 126 1 70 2 247 2 176 1 
220 1 36 1 59 1 37 1 201 1 138 4 350 1 232 7 371 2 189 2 307 2 16 2 115 1 238 1 164 2 206 1 266 1 309 3 144 1 19 4 269 7 171 1 124 1 126 1 70 2 247 2 176 1 
307 1 16 1 115 1 164 1 238 1 309 2 19 3 37 1 269 4 171 1 201 2 138 3 304 1 350 1 247 1 232 4 371 1 189 1 
307 1 16 1 263 1 115 1 164 1 266 1 346 1 37 1 269 2 319 1 138 1 124 1 350 1 70 1 247 1 232 2 
307 2 115 1 164 2 309 1 19 1 37 1 269 3 138 2 350 1 70 1 232 3 176 1 189 1 
220 1 307 2 16 1 115 1 238 1 164 2 309 4 144 1 19 7 37 1 171 1 269 9 201 2 138 5 304 1 350 1 70 1 247 1 232 9 216 1 371 1 176 1 189 3 132 1 
220 1 307 2 16 1 115 1 238 1 164 2 309 4 144 1 19 7 37 1 171 1 269 9 201 2 138 5 304 1 350 1 70 1 247 1 232 9 216 1 371 1 176 1 189 3 132 1 
368 1 77 1 270 1 
235 1 324 2 77 1 
173 1 223 2 181 1 86 2 8 2 217 2 100 2 212 2 
223 2 72 1 252 1 344 1 105 1 181 1 106 1 157 1 8 3 83 1 230 1 321 2 86 2 186 1 284 1 162 1 352 2 43 2 308 1 329 1 45 1 241 2 211 1 212 3 310 1 121 1 173 1 174 1 125 1 97 1 127 1 339 2 129 1 147 1 217 2 100 2 276 1 
223 1 193 1 32 1 181 1 86 1 154 1 8 1 217 1 100 1 212 1 
0 1 342 1 133 1 225 1 64 1 32 1 265 1 77 1 8 1 212 1 368 1 214 1 369 1 217 1 
342 2 0 1 133 1 223 1 225 1 32 1 265 2 77 1 8 1 212 1 368 1 369 1 86 1 100 1 217 1 
342 1 96 1 102 1 343 1 265 1 
342 2 96 1 368 1 69 1 343 1 265 2 345 1 77 1 
342 1 343 1 265 1 
342 1 223 1 193 1 32 1 265 1 181 1 154 1 8 1 212 1 96 1 86 1 377 1 100 1 217 1 
77 1 
342 2 96 1 348 1 368 1 343 1 265 2 345 1 77 1 
341 1 149 1 342 5 262 2 265 5 279 1 104 1 343 2 153 1 145 1 345 1 77 1 255 1 363 1 96 2 368 1 248 1 323 2 148 2 
173 1 270 1 
223 1 8 2 212 2 301 1 173 2 272 1 86 1 217 2 100 1 
327 1 75 1 218 1 
43 1 72 1 308 1 165 1 106 1 45 1 8 1 212 1 121 1 173 1 83 1 230 1 321 1 186 1 147 1 352 1 
219 1 223 4 64 1 8 5 212 5 301 1 173 1 187 1 86 4 358 2 88 1 99 1 217 5 100 1 
223 2 193 1 32 1 86 2 290 1 8 2 217 2 212 2 
223 1 43 1 72 1 308 1 106 1 75 1 45 1 8 2 212 2 121 1 83 1 230 1 321 1 186 1 86 1 147 1 358 1 99 1 217 1 352 1 
173 1 223 3 86 3 358 1 8 3 100 1 217 3 212 3 
223 1 193 1 32 1 86 1 8 1 217 1 212 1 
223 1 32 1 272 1 86 1 8 1 217 1 100 1 212 1 301 1 
0 1 342 1 133 1 72 1 223 3 225 1 252 1 344 1 32 1 105 1 181 1 106 1 157 1 8 4 301 1 83 1 230 1 369 1 321 1 186 1 86 3 352 1 204 1 43 1 308 1 265 1 331 1 45 1 241 1 211 1 212 4 310 1 121 1 173 1 174 1 125 1 339 2 129 1 147 1 358 1 99 1 100 2 217 3 276 1 
173 1 223 1 64 1 86 1 358 1 88 1 8 2 217 2 212 2 
342 1 0 1 133 1 223 3 225 1 265 1 32 1 331 1 77 1 8 3 301 1 212 3 369 1 86 3 358 2 99 1 52 1 100 1 217 3 
223 2 75 1 8 2 301 1 212 2 86 2 358 1 100 1 217 2 218 1 
43 1 72 1 308 1 106 1 45 1 8 1 212 1 121 1 173 1 83 1 230 1 321 1 186 1 147 1 352 1 
43 1 106 1 45 1 8 1 212 1 197 1 302 1 121 1 173 1 83 1 230 1 321 1 186 1 147 1 352 1 
29 1 344 1 105 2 75 2 34 1 228 1 113 1 139 1 162 2 327 2 326 1 372 1 267 1 288 1 241 4 354 1 211 1 310 1 174 1 125 1 198 1 339 2 129 1 218 2 
133 1 223 1 32 1 86 1 290 1 8 1 217 1 212 1 
74 1 271 1 
74 1 271 1 
57 1 21 1 
57 1 21 1 
57 1 21 1 
63 1 74 1 271 1 
63 1 74 1 271 1 
2 1 74 1 271 1 
18 1 74 2 57 1 80 1 21 1 271 2 
63 1 74 1 271 1 
277 1 74 1 271 1 
277 1 74 1 271 1 
277 1 74 1 271 1 
342 1 223 2 2 1 317 1 74 1 109 1 8 2 137 1 86 2 305 1 351 1 194 1 205 1 265 1 196 1 271 1 212 2 173 1 172 1 50 1 356 1 376 1 98 1 217 2 
342 2 317 1 205 2 194 2 265 2 200 1 4 1 74 2 239 1 77 1 46 1 80 1 271 2 356 3 338 1 305 2 376 2 12 2 380 1 
16 1 247 1 371 1 
16 1 247 1 319 1 
122 1 135 1 247 3 268 1 371 2 319 1 
135 1 41 1 247 2 268 1 371 1 319 1 
135 2 247 2 268 1 371 1 319 1 
341 2 342 5 222 1 343 1 153 3 345 1 9 2 77 2 137 1 228 1 81 1 113 1 368 1 323 1 260 1 235 1 324 3 262 1 265 5 372 1 240 2 66 1 145 1 354 1 196 1 96 4 172 1 378 1 379 1 274 2 148 1 25 1 
341 6 342 9 178 1 102 5 222 1 279 1 343 6 153 8 76 1 345 1 9 6 77 5 228 3 113 3 368 1 323 2 235 3 324 9 262 2 192 1 265 9 372 3 66 2 145 1 168 5 354 3 196 4 96 7 22 1 51 1 378 3 274 6 275 1 148 2 25 2 
342 3 341 2 279 1 153 3 77 3 9 2 228 1 113 1 368 1 260 1 323 1 235 2 324 4 262 1 265 3 372 1 240 1 66 1 354 1 196 1 96 2 379 1 378 1 274 2 148 1 25 1 
342 4 341 4 279 1 153 5 76 1 77 4 9 4 228 2 113 2 368 1 323 1 260 1 235 3 324 7 262 1 265 4 372 2 240 2 66 1 354 2 196 2 96 3 22 1 51 1 379 1 378 2 274 4 148 1 25 1 
147 1 244 1 270 1 
147 1 254 1 
93 1 
121 1 230 1 147 1 
175 1 147 1 
121 1 147 1 
27 1 121 1 230 1 147 3 7 1 244 2 
326 2 65 1 105 3 182 1 288 3 241 7 228 1 292 2 113 1 185 1 367 1 40 1 293 1 159 1 340 1 54 1 162 4 
326 2 65 1 105 3 182 1 288 3 241 7 228 1 292 2 113 1 185 1 367 1 40 1 293 1 159 1 340 1 54 1 162 4 
326 2 65 1 105 3 373 1 182 1 288 3 241 7 228 1 292 2 113 1 185 1 367 1 40 1 293 1 159 1 340 1 54 1 162 4 
344 1 105 15 107 1 182 2 228 4 185 1 367 2 113 4 40 2 159 1 61 1 162 16 203 3 326 5 65 1 372 3 374 1 288 10 241 31 354 3 211 1 292 3 310 1 49 1 355 4 311 1 293 2 339 2 129 1 340 5 378 3 54 1 312 1 71 1 
344 2 105 4 182 1 228 1 113 1 367 1 185 1 40 1 162 5 325 1 326 3 65 1 288 4 210 1 241 9 211 2 292 2 310 2 293 1 339 4 129 2 340 1 54 1 71 1 
280 1 35 1 361 1 37 1 110 1 319 1 138 1 350 1 321 1 85 1 232 2 186 1 371 1 352 1 307 1 16 1 43 1 115 1 164 1 92 1 195 1 19 1 45 1 167 1 269 2 122 1 335 1 246 1 70 1 247 2 
1 1 280 1 361 1 37 1 110 1 319 1 138 1 321 1 85 1 232 3 186 1 140 1 371 1 352 1 307 1 286 1 16 1 43 1 115 1 164 1 92 1 19 2 45 1 167 1 269 3 122 1 335 1 246 1 70 1 247 2 
16 1 1 1 43 1 115 1 280 1 45 1 19 2 167 1 361 1 37 1 110 1 269 2 319 1 138 1 122 1 335 1 246 1 70 1 247 2 321 1 186 1 232 2 140 1 371 1 352 1 
286 1 307 1 134 1 43 1 31 1 164 1 106 1 330 1 280 2 45 1 361 2 227 1 269 1 95 1 121 1 335 2 70 2 321 1 186 1 232 1 147 1 87 1 352 1 
307 1 16 1 43 1 164 1 92 1 280 1 45 1 35 1 167 1 361 1 110 1 269 1 319 1 122 1 335 1 246 1 70 1 350 1 247 2 85 1 321 1 186 1 232 1 140 1 371 1 352 1 
336 1 
341 2 342 5 0 1 343 6 153 2 106 2 5 1 6 2 297 1 345 3 8 1 11 1 306 1 352 2 62 2 262 1 163 1 264 1 64 1 265 5 166 2 170 2 212 1 121 1 214 1 130 1 217 1 25 1 133 1 31 1 225 1 32 1 33 2 77 2 82 1 368 1 369 1 321 2 283 1 186 1 87 1 323 1 324 2 235 2 43 2 236 2 90 1 45 1 289 1 145 1 333 2 295 4 147 1 148 1 249 1 
0 1 342 3 133 1 225 1 32 1 343 2 5 1 345 1 8 1 82 1 348 1 369 1 283 1 306 1 64 1 265 3 166 1 212 1 214 1 295 2 130 1 217 1 
0 1 342 3 133 1 225 1 343 1 32 1 5 1 345 1 8 1 77 1 82 1 348 1 368 1 369 1 283 1 306 1 64 1 265 3 333 1 212 1 214 1 295 3 130 1 217 1 
0 1 342 3 133 1 225 1 32 1 343 2 5 1 345 1 8 1 77 1 82 1 348 1 368 1 369 1 283 1 306 1 236 1 64 1 265 3 166 1 333 1 212 1 214 1 295 3 130 1 217 1 
341 1 342 5 0 1 133 1 30 1 225 1 343 7 32 1 153 1 108 1 33 2 5 1 6 2 297 1 345 3 298 1 77 5 8 1 183 1 82 1 348 1 368 5 369 1 283 1 306 1 323 1 235 2 62 2 262 1 236 4 64 1 265 5 166 4 332 1 145 1 170 2 333 4 212 1 214 1 295 6 130 1 217 1 249 1 148 1 
0 1 342 4 341 1 343 4 153 1 5 1 297 1 6 2 345 2 8 1 306 1 62 2 262 1 64 1 265 4 166 2 170 2 212 1 214 1 130 1 217 1 133 1 225 1 32 1 33 2 77 2 82 1 368 1 369 1 283 1 323 1 235 2 324 2 236 2 145 1 289 1 333 2 295 4 249 1 148 1 
341 1 0 1 342 4 133 1 30 1 225 1 343 4 32 1 153 1 33 2 5 1 6 2 297 1 345 2 77 1 8 1 183 1 82 1 368 1 369 1 283 1 306 1 323 1 235 2 62 2 262 1 236 2 64 1 265 4 166 2 332 1 145 1 333 2 170 2 212 1 214 1 295 4 130 1 217 1 249 1 148 1 
341 1 0 1 342 4 133 1 30 1 225 1 343 4 32 1 153 1 33 2 5 1 6 2 297 1 345 2 77 1 8 1 183 1 82 1 368 1 369 1 283 1 306 1 323 1 235 2 62 2 262 1 236 2 64 1 265 4 166 2 332 1 145 1 333 2 170 2 212 1 214 1 295 4 130 1 217 1 249 1 148 1 
341 1 0 1 342 4 133 1 225 1 103 1 343 4 32 1 153 1 5 1 297 1 345 2 77 1 8 1 183 1 300 1 82 1 368 1 369 1 283 1 306 1 323 1 14 2 324 2 62 2 262 1 236 2 64 1 265 4 166 2 145 1 333 2 170 2 212 1 214 1 337 2 295 4 130 1 217 1 250 1 148 1 
341 1 0 1 342 4 133 1 30 1 225 1 32 1 343 5 153 1 108 1 33 2 5 1 6 2 297 1 345 2 77 1 8 1 183 1 82 1 368 1 369 1 283 1 306 1 323 1 235 2 62 2 262 1 236 3 64 1 265 4 166 3 332 1 145 1 170 2 333 3 212 1 214 1 295 5 130 1 217 1 249 1 148 1 
341 1 0 1 342 4 133 1 30 1 225 1 32 1 343 5 153 1 108 1 33 2 5 1 6 2 297 1 345 2 77 1 8 1 183 1 82 1 368 1 369 1 283 1 306 1 323 1 235 2 62 2 262 1 236 3 64 1 265 4 166 3 332 1 145 1 170 2 333 3 212 1 214 1 295 5 130 1 217 1 249 1 148 1 
0 1 342 4 341 1 343 4 153 1 5 1 297 1 345 2 8 1 306 1 14 2 62 2 262 1 64 1 265 4 166 2 170 2 212 1 214 1 130 1 217 1 133 1 225 1 32 1 77 1 82 1 368 1 369 1 283 1 323 1 324 2 236 2 145 1 289 1 333 2 295 4 337 2 250 1 148 1 
344 1 105 3 75 1 182 1 228 1 367 1 185 1 113 1 162 3 326 2 327 1 65 1 267 1 288 2 241 6 270 1 211 1 292 1 310 1 173 2 174 1 125 1 339 2 129 1 54 1 218 1 
252 1 344 2 107 1 105 6 360 1 75 11 299 1 228 2 113 1 231 1 162 8 203 3 326 1 327 11 329 1 372 1 288 2 241 14 354 2 211 2 310 2 173 1 355 3 174 2 125 1 311 1 339 4 129 2 340 1 273 1 378 2 313 1 218 4 
72 1 223 1 344 1 252 1 106 1 105 1 8 2 83 1 230 1 321 1 186 1 86 1 352 1 162 1 261 1 43 1 308 1 44 1 329 1 165 1 45 1 119 1 241 2 211 1 212 2 310 1 121 1 173 1 174 1 125 1 129 1 339 2 147 1 358 1 273 1 99 1 217 1 218 1 
252 1 344 3 105 10 106 1 157 2 8 3 113 3 258 2 202 2 352 3 162 10 308 2 65 1 354 2 211 3 212 3 310 3 23 1 121 2 173 2 174 3 125 3 129 3 358 1 273 1 217 1 218 7 28 2 223 1 72 2 278 1 75 7 182 1 226 2 228 3 83 2 185 1 367 1 230 2 321 3 86 1 186 2 140 1 43 3 326 4 327 7 329 1 91 1 372 2 45 2 288 8 241 20 292 1 339 6 340 4 147 2 99 1 378 2 54 1 
223 1 31 1 151 1 344 2 56 1 252 1 106 2 105 1 8 1 112 1 321 7 86 1 186 2 140 1 87 1 160 1 352 8 162 1 43 8 329 1 195 1 287 1 267 1 45 2 241 2 211 2 212 1 310 2 121 2 174 2 125 2 68 1 127 2 339 4 129 2 358 1 147 3 53 1 217 1 
223 1 344 1 105 2 75 1 8 1 228 1 301 1 113 1 86 1 162 1 326 1 327 1 372 1 288 1 241 3 354 1 211 1 212 1 310 1 174 1 125 1 339 2 129 1 273 1 378 1 24 1 100 1 217 1 218 1 
327 1 344 1 75 1 34 1 288 1 267 1 241 2 354 1 228 1 211 1 310 1 174 1 125 1 129 1 339 2 340 1 218 1 162 2 
326 1 327 1 344 1 372 1 105 2 75 1 288 1 267 1 241 2 211 1 310 1 174 1 125 1 113 1 129 1 339 2 139 1 218 1 
326 1 327 2 344 1 105 2 372 1 75 2 288 2 267 1 241 4 354 1 228 1 211 1 310 1 174 1 113 1 125 1 129 1 339 2 340 1 378 1 218 2 162 2 
327 1 344 1 75 1 34 1 288 1 241 2 354 1 228 1 211 1 310 1 174 1 68 1 125 1 129 1 339 2 340 1 218 1 162 2 
326 1 327 1 344 1 372 1 105 2 75 1 288 1 241 2 211 1 310 1 174 1 68 1 125 1 113 1 129 1 339 2 139 1 218 1 
326 1 327 2 344 1 105 2 372 1 75 2 288 2 241 4 354 1 228 1 211 1 310 1 174 1 113 1 68 1 125 1 129 1 339 2 340 1 378 1 218 2 162 2 
326 1 327 2 344 1 105 2 372 1 75 2 288 2 241 4 354 1 228 1 211 1 310 1 174 1 113 1 125 1 129 1 339 2 340 1 378 1 218 2 162 2 
72 1 344 1 252 1 106 1 105 1 157 1 8 1 83 1 230 1 321 1 186 1 162 1 352 1 43 1 308 1 329 1 45 1 241 2 211 1 212 1 310 1 121 1 173 1 174 1 125 1 129 1 339 2 147 1 
344 1 252 1 106 1 105 1 8 1 302 1 83 1 230 1 321 1 186 1 89 1 162 1 352 1 43 1 329 1 45 1 241 2 211 1 197 1 212 1 310 1 121 1 173 1 174 1 125 1 129 1 339 2 147 1 
326 1 327 2 344 1 105 2 372 1 75 2 288 2 241 4 354 1 228 1 211 1 310 1 174 1 113 1 125 1 129 1 339 2 340 1 273 1 378 1 218 2 162 2 
72 1 344 1 105 2 75 2 157 1 226 1 8 1 228 1 83 1 113 1 230 1 321 1 186 1 162 2 352 1 43 1 326 1 327 2 308 1 372 1 195 1 288 2 45 1 241 4 354 1 211 1 212 1 310 1 121 1 174 1 125 1 129 1 339 2 340 1 147 1 378 1 218 2 
221 1 223 1 344 1 105 1 75 1 8 1 228 1 301 1 113 1 86 1 162 2 327 1 372 1 288 1 241 3 354 1 211 1 212 1 310 1 174 1 125 1 339 2 129 1 340 1 273 1 378 1 100 1 217 1 218 1 
199 1 344 2 107 1 105 10 228 3 113 3 349 1 84 1 141 1 161 2 13 1 162 9 325 1 203 1 326 3 372 3 288 6 241 19 354 3 47 1 211 2 245 2 310 2 355 2 311 1 128 1 339 4 129 2 340 3 378 3 
203 1 325 1 344 1 107 1 105 2 241 4 211 1 245 1 310 1 355 1 349 1 128 1 84 2 129 1 339 2 141 2 162 2 
55 1 199 1 344 2 107 3 105 11 228 2 113 2 229 1 349 1 84 1 141 2 161 1 13 1 162 10 325 1 203 3 326 1 372 2 288 3 241 21 354 2 211 2 245 3 310 2 355 4 311 1 128 1 339 4 129 2 340 2 378 2 
55 1 199 1 344 2 107 2 105 9 228 2 113 2 349 1 84 1 141 2 161 1 13 1 162 8 325 1 203 2 326 2 372 2 288 4 241 17 354 2 211 2 245 2 310 2 355 3 311 1 128 1 339 4 129 2 340 2 378 2 
344 1 107 1 105 4 182 1 228 1 113 1 367 1 185 1 349 1 84 1 141 1 162 5 325 1 203 1 326 1 65 1 288 1 241 9 211 1 292 1 245 1 310 1 355 1 128 1 339 2 129 1 54 1 
73 1 194 1 205 1 74 1 239 1 338 1 376 1 305 1 80 1 271 1 
2 1 50 1 
213 1 194 1 205 1 215 1 74 1 208 1 376 1 305 1 271 1 
63 1 224 1 
277 1 316 1 18 1 
342 1 317 1 265 1 205 1 194 1 4 1 74 1 239 1 77 1 46 1 80 1 271 1 356 2 338 1 305 1 376 1 12 1 380 1 
342 1 317 1 265 1 205 1 194 1 4 1 74 1 239 1 77 1 46 1 80 1 271 1 356 2 338 1 305 1 376 1 12 1 380 1 
342 1 317 1 265 1 205 1 194 1 4 1 74 1 239 1 77 1 46 1 80 1 271 1 356 2 338 1 305 1 376 1 12 1 380 1 
63 1 224 1 18 1 
63 1 224 1 18 1 
277 1 316 1 
277 1 316 1 18 1 
351 1 98 1 
342 1 2 1 223 2 74 1 109 1 8 2 137 1 86 2 305 1 351 1 12 1 265 1 194 1 205 1 46 1 196 1 212 2 271 1 96 1 173 1 172 1 50 1 356 1 357 1 376 1 98 1 217 2 
179 1 151 1 344 1 56 1 252 1 105 1 58 1 8 2 321 2 186 1 42 1 352 2 162 1 43 2 329 1 45 1 94 1 241 2 211 1 212 2 120 1 310 1 121 1 174 1 125 1 127 2 129 1 339 2 147 1 273 1 217 2 
16 1 43 2 117 1 92 1 195 1 45 1 361 1 167 1 319 1 122 1 246 1 247 2 321 2 186 1 140 1 371 1 60 1 352 2 26 1 
16 1 43 1 117 1 92 1 45 1 361 1 167 1 146 1 319 1 122 1 246 1 247 2 321 1 186 1 140 1 371 1 352 1 
43 1 31 1 106 1 330 1 209 1 45 1 361 1 121 1 321 1 186 1 147 1 87 1 352 1 26 1 
16 1 43 1 117 1 92 1 45 1 361 1 167 1 319 1 122 1 246 1 247 2 321 1 186 1 140 1 371 1 60 1 352 1 26 1 
48 1 
341 1 149 1 368 1 153 1 77 1 255 1 270 1 
342 1 341 1 324 1 235 1 262 1 265 1 343 1 153 1 33 1 6 1 345 1 145 1 77 2 368 1 323 1 148 1 249 1 
149 1 342 5 341 8 343 5 153 9 106 1 156 2 254 3 345 3 7 1 9 6 255 1 158 2 113 2 352 3 353 1 17 2 262 4 163 1 265 5 354 2 121 3 175 2 274 6 25 2 28 2 225 2 180 1 359 2 281 1 78 1 77 8 228 2 364 2 366 2 368 2 230 3 321 3 186 3 142 1 188 2 322 2 323 4 324 12 235 6 43 3 372 2 195 1 45 4 145 4 244 2 147 10 378 2 148 4 
342 1 341 5 343 1 153 8 107 1 156 2 345 1 9 5 77 5 136 1 228 2 256 1 366 1 303 1 113 2 229 1 368 2 285 1 323 2 324 6 235 3 203 1 262 2 163 1 191 1 265 1 372 2 145 2 354 2 169 1 355 1 378 2 274 5 25 1 148 2 
342 1 341 2 223 1 32 1 153 2 181 1 156 2 182 1 154 1 8 1 228 2 366 1 367 1 185 1 113 1 86 1 323 1 262 1 193 1 265 1 332 1 145 1 212 1 377 1 100 1 217 1 131 1 148 1 
149 1 341 1 262 1 153 1 145 1 77 1 255 1 368 1 323 1 148 1 
341 5 28 1 324 10 235 5 372 2 153 5 156 2 9 5 77 5 354 2 228 2 366 1 113 2 378 2 274 5 
342 1 368 1 265 1 343 1 345 1 77 1 
341 2 342 3 31 1 279 1 343 4 106 2 153 2 345 2 184 1 321 4 186 1 87 1 142 2 323 2 352 4 353 1 262 2 43 4 90 1 163 2 264 1 265 3 45 1 145 1 121 1 147 1 101 1 148 2 25 2 
223 2 72 1 252 1 344 1 105 1 106 1 181 1 157 1 8 3 83 1 230 1 321 1 86 2 186 1 352 1 43 1 308 1 45 1 241 1 211 1 212 3 310 1 121 1 173 1 174 1 125 1 339 2 129 1 147 1 217 2 100 2 276 1 
341 2 235 2 324 4 262 1 163 1 153 1 145 1 9 2 77 4 292 1 368 2 274 2 323 1 148 1 25 1 
194 1 205 1 118 1 
194 1 205 1 118 1 
194 1 205 1 239 1 351 1 370 1 
194 1 205 1 118 1 
194 1 205 1 259 1 
194 1 205 1 259 1 
194 1 205 1 259 1 
194 1 205 1 
74 1 271 1 
326 2 344 2 65 1 105 4 182 1 288 3 241 8 228 1 211 2 292 1 310 2 113 1 185 1 367 1 129 2 339 4 340 1 54 1 71 1 162 4 
326 2 65 1 105 3 182 1 288 2 241 6 228 1 270 1 292 1 367 1 185 1 113 1 54 1 162 3 
326 1 344 1 105 2 372 1 288 2 242 1 241 4 354 1 228 1 211 1 310 1 113 1 129 1 339 2 340 1 378 1 162 2 
203 1 355 1 105 1 107 1 241 2 162 1 
344 1 105 9 360 1 182 1 228 3 185 1 367 1 113 3 231 1 162 9 203 2 326 3 65 1 372 2 288 4 241 18 354 2 211 1 292 1 310 1 355 2 311 1 129 1 339 2 340 1 378 2 54 1 71 1 
355 1 105 1 241 1 
203 1 241 1 162 1 
28 1 326 2 344 1 105 3 372 1 288 3 242 1 241 6 354 1 228 1 211 1 310 1 113 1 339 2 129 1 340 1 378 1 162 3 
325 1 203 1 326 1 344 1 372 2 107 1 105 6 288 2 241 12 136 1 228 2 354 2 211 1 256 1 310 1 355 1 303 1 113 2 229 1 129 1 339 2 340 1 378 2 285 1 162 6 
326 1 105 3 182 1 288 2 241 6 228 1 185 1 113 1 367 1 340 1 162 3 
326 1 65 1 344 1 105 2 182 1 288 2 241 3 211 1 310 1 367 1 129 1 339 2 340 1 54 1 71 1 162 1 190 1 
325 1 326 3 344 1 105 5 182 2 288 5 241 10 228 2 211 1 310 1 367 2 185 1 113 2 339 2 129 1 340 2 131 1 162 5 
325 1 344 1 288 1 241 2 354 1 228 1 211 1 310 1 129 1 339 2 340 1 162 2 
325 1 326 1 344 1 105 2 372 1 288 2 241 4 354 1 228 1 211 1 310 1 113 1 129 1 339 2 340 1 378 1 162 2 
325 1 326 1 344 3 105 2 182 1 288 2 241 3 211 3 310 3 367 1 129 3 339 6 340 1 13 1 71 1 190 1 162 1 
344 5 105 18 107 1 182 3 228 5 185 2 367 3 113 5 13 1 190 1 61 1 162 16 325 1 203 3 326 7 65 1 372 3 374 1 288 12 242 1 241 34 354 3 211 5 292 1 310 5 355 4 311 1 339 10 129 5 340 5 378 3 54 1 71 2 312 1 
344 1 105 4 107 1 182 1 228 1 113 1 367 1 185 1 229 1 162 4 203 1 325 1 326 2 65 1 288 2 241 8 211 1 292 1 310 1 355 1 339 2 129 1 54 1 
344 2 105 5 107 1 182 1 228 2 113 1 185 1 367 1 229 1 162 6 325 1 203 1 326 2 65 1 288 3 241 11 242 1 354 1 211 2 292 1 310 2 355 2 311 1 339 4 129 2 340 1 378 1 54 1 
310 1 203 1 325 1 355 1 229 1 344 1 105 1 107 1 339 2 129 1 241 2 211 1 162 1 
325 1 203 1 326 1 344 1 372 1 107 1 105 4 288 1 241 10 136 1 228 2 354 2 211 1 256 1 310 1 355 1 303 1 113 1 229 1 129 1 339 2 378 2 285 1 162 6 
344 1 105 4 107 1 182 1 228 1 113 1 367 1 185 1 229 1 162 4 203 1 325 1 326 2 65 1 288 2 241 8 211 1 292 1 310 1 355 1 339 2 129 1 54 1 
310 1 203 1 325 1 355 1 229 1 344 1 105 1 107 1 339 2 129 1 241 2 211 1 162 1 
344 3 105 5 107 1 136 1 228 2 256 1 303 1 113 1 229 1 285 1 162 6 325 1 203 1 326 1 372 1 288 1 241 11 242 1 354 2 211 3 310 3 355 1 339 6 129 3 378 2 71 1 
344 4 105 7 107 1 136 1 228 3 256 1 303 1 113 2 229 1 285 1 13 1 162 9 325 1 203 1 326 3 372 2 288 6 241 16 354 3 211 4 310 4 355 1 339 8 129 4 340 3 378 3 71 2 
326 3 65 2 105 4 182 3 288 6 241 7 228 1 113 1 367 3 185 1 340 3 54 1 162 3 
344 3 105 5 107 1 136 1 228 2 256 1 303 1 113 1 229 1 285 1 13 1 162 6 325 1 203 1 326 1 372 1 288 1 241 11 354 2 211 3 310 3 355 1 339 6 129 3 378 2 71 1 
173 1 64 1 88 1 8 1 217 1 212 1 234 1 
251 1 64 1 207 1 20 1 8 1 212 1 111 1 257 1 173 1 88 1 217 1 234 1 
121 1 43 1 31 1 321 1 106 1 186 1 45 1 147 1 87 1 270 1 352 1 
223 1 43 1 308 1 106 1 45 1 8 2 212 2 121 1 173 1 83 1 230 1 321 1 86 1 186 1 147 1 358 1 217 1 352 1 
133 1 223 1 32 1 359 1 8 2 83 1 230 2 369 1 321 1 186 1 86 2 142 1 352 1 43 1 308 1 45 1 212 2 121 2 173 1 175 1 358 1 147 3 217 2 
133 1 223 1 32 1 359 1 155 1 8 2 302 1 83 1 230 2 369 1 321 2 186 1 86 2 142 1 352 2 43 2 45 1 212 2 121 2 173 1 175 1 358 1 147 3 217 2 
342 2 43 3 225 1 237 1 359 1 265 2 343 1 106 1 318 1 155 1 45 1 254 1 77 1 244 1 121 1 368 1 175 1 230 1 321 3 186 1 147 4 142 1 352 3 
342 2 43 3 225 1 359 1 265 2 343 1 106 1 155 1 45 1 254 1 77 1 244 1 364 1 121 1 368 1 175 1 230 1 321 3 186 1 147 4 142 1 352 3 
43 1 321 1 186 1 45 1 160 1 352 1 
315 1 43 7 151 1 106 2 195 1 287 1 45 3 7 1 67 1 112 1 121 2 39 1 127 1 230 1 321 6 186 2 140 1 147 3 160 1 53 1 352 7 
223 1 72 1 344 2 105 3 75 1 182 1 58 1 226 1 157 1 8 2 228 1 83 1 113 1 185 1 367 1 230 1 321 1 186 1 86 1 202 1 162 3 352 1 43 1 327 1 326 2 308 1 65 1 195 1 288 2 45 1 241 6 211 2 292 1 212 2 310 2 121 1 173 2 174 2 125 2 129 2 339 4 147 1 358 1 273 1 54 1 217 1 218 1 
341 1 149 1 342 3 225 1 343 2 153 1 106 1 254 1 345 1 77 1 255 1 364 1 158 1 368 1 321 1 188 1 323 2 352 1 353 1 17 1 262 2 43 1 265 3 145 2 244 1 96 1 147 2 148 2 
43 2 180 1 195 1 45 2 7 1 244 1 121 1 230 1 321 2 186 1 147 2 160 1 352 2 
43 4 31 1 106 1 195 1 155 1 45 1 121 1 294 1 321 4 186 1 87 1 147 1 352 4 
15 1 43 2 45 2 67 1 334 1 23 1 121 1 39 1 230 1 321 2 186 1 147 1 142 1 352 2 
16 1 43 1 247 1 321 1 106 1 186 1 45 1 167 1 319 1 352 1 
43 2 151 1 195 1 45 1 94 1 121 1 321 2 186 1 140 1 147 1 352 2 
43 5 31 1 151 1 106 1 195 1 287 1 45 2 112 1 121 2 294 1 321 4 186 2 87 1 147 3 142 1 352 5 
43 5 31 1 151 1 106 1 195 1 45 2 291 1 112 1 121 2 294 1 321 4 186 2 87 1 147 3 142 1 352 5 
223 1 43 1 106 1 45 1 8 2 212 2 121 1 302 1 173 1 83 1 230 1 321 1 86 1 186 1 147 1 358 1 217 1 352 1 
315 1 43 1 45 2 7 1 67 1 121 1 39 1 230 1 321 1 186 1 147 1 142 1 352 1 
173 1 328 1 3 1 177 1 375 1 
342 2 0 1 133 1 225 1 152 1 328 2 32 1 265 2 3 2 331 1 77 1 38 1 375 2 96 1 173 1 282 1 368 1 369 1 177 1 
179 1 328 1 3 1 42 1 8 1 217 1 177 1 212 1 120 1 
282 1 177 1 38 1 
138 1 115 1 37 1 270 1 
307 1 138 1 115 1 164 1 232 1 37 1 269 1 
335 1 70 1 232 1 
307 1 150 1 115 1 164 1 37 1 269 3 347 1 138 1 123 1 124 2 350 1 232 3 
307 1 138 1 115 1 164 1 232 2 19 1 37 1 269 2 201 1 
307 1 16 1 164 1 238 1 309 1 269 1 138 1 350 1 247 1 232 1 371 1 
307 1 138 1 164 1 350 1 232 1 37 1 269 1 
307 1 115 1 164 1 350 1 232 1 37 2 269 1 
307 2 164 2 116 1 37 1 243 1 79 1 269 2 138 1 350 1 232 2 
307 1 220 1 115 1 164 1 309 1 144 1 19 2 37 1 269 3 138 2 350 1 232 3 189 1 
307 1 16 1 115 1 164 1 19 1 37 1 362 1 269 2 319 1 138 1 122 1 350 1 247 2 232 2 371 1 
307 2 115 1 164 2 309 1 19 2 37 1 269 4 201 1 138 2 304 1 350 1 232 4 189 1 
307 1 138 1 115 1 164 1 350 1 232 1 37 1 269 1 
150 1 307 1 115 2 164 1 309 1 19 2 37 2 269 4 347 1 138 3 124 1 232 4 189 1 314 1 
143 1 307 1 138 1 114 1 115 1 164 1 350 1 232 2 19 1 216 1 37 1 269 2 
307 1 150 2 115 1 164 1 37 1 269 3 347 1 138 1 10 1 124 2 350 1 232 3 
365 1 138 2 320 2 253 1 
307 1 164 1 350 1 232 1 296 1 269 1 
220 1 307 1 138 1 115 1 164 1 350 1 232 2 19 1 37 1 269 2 
233 1 
307 1 138 1 115 1 164 1 350 1 232 1 37 1 269 1 
220 1 307 1 138 1 124 1 115 1 164 1 350 1 232 3 19 1 37 1 269 3 
138 1 309 1 189 1 314 1 
138 1 37 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 9 288 1 342 2 244 2 7 1 49 2 364 1 68 1 109 1 299 1 182 1 10 4 372 1 72 2 304 1 184 3 273 2 185 1 16 9 231 2 277 1 139 1 258 1 353 1 211 5 237 6 161 2 143 1 
94 9 288 1 342 2 244 2 7 1 49 2 364 1 68 1 109 1 299 1 182 1 10 4 372 1 72 2 304 1 184 3 273 2 185 1 16 9 231 2 277 1 139 1 258 1 353 1 211 5 237 6 161 2 143 1 
94 10 288 1 342 2 244 2 7 1 49 2 364 1 68 1 109 1 299 1 182 1 10 5 372 1 72 2 304 1 184 4 273 2 185 1 16 10 231 2 277 1 139 1 258 1 353 1 211 6 237 7 161 2 143 1 
94 7 288 1 342 2 244 2 7 1 49 2 68 1 109 1 299 1 182 1 10 3 372 1 72 2 304 1 184 2 273 2 185 1 16 7 231 1 277 1 139 1 258 1 353 1 211 4 237 4 161 2 143 1 
10 2 372 1 72 1 184 1 273 1 94 4 342 1 16 4 244 1 231 2 139 1 258 1 364 1 353 1 211 3 237 3 161 1 182 1 
201 1 372 1 185 1 273 1 94 2 342 1 16 2 204 1 288 1 244 1 49 1 258 1 353 1 211 1 69 1 161 1 
10 1 372 1 184 1 94 3 342 2 16 3 244 2 7 1 49 1 258 1 353 1 211 2 237 1 
94 9 342 2 244 2 7 1 49 1 364 1 68 1 294 1 299 1 182 1 10 4 372 1 72 1 184 3 273 1 328 1 16 9 231 2 139 1 258 1 353 1 211 5 237 7 161 1 
94 9 342 2 244 2 7 1 49 1 364 1 68 1 294 1 299 1 182 1 10 4 372 1 72 1 184 3 273 1 328 1 16 9 231 2 139 1 258 1 353 1 211 5 237 7 161 1 
175 1 341 1 18 1 
193 2 261 1 18 1 
371 2 333 2 35 1 238 1 265 2 123 2 180 2 257 2 
285 1 217 1 168 1 44 1 287 2 220 1 265 2 96 2 3 1 123 3 122 1 99 1 48 1 102 1 50 1 176 1 151 1 297 2 55 1 180 2 128 1 371 2 302 1 61 2 35 1 351 1 375 1 374 1 352 1 135 1 257 3 333 2 279 1 210 2 334 1 238 1 379 1 
371 1 333 1 35 1 265 1 256 1 123 1 180 1 47 1 344 1 257 1 
145 1 75 1 243 1 265 1 256 1 18 1 172 1 123 1 257 1 232 1 175 1 150 1 23 1 87 1 
371 1 145 2 75 2 265 1 256 1 18 1 172 1 123 1 257 1 232 1 333 1 175 1 150 1 87 1 180 1 
11 1 271 1 145 1 339 1 75 1 
11 1 145 2 339 1 175 1 75 2 218 1 18 1 147 1 
11 1 145 1 75 1 
371 1 145 1 339 1 226 1 75 1 35 1 265 1 256 1 47 1 123 1 344 1 257 1 333 1 180 1 
18 1 
11 1 145 2 339 1 175 1 75 2 218 1 212 1 18 1 
145 5 11 2 283 1 339 2 75 5 218 1 36 1 2 1 319 2 229 1 18 1 205 1 362 1 173 2 137 1 175 1 363 1 278 1 189 2 
371 1 285 1 302 1 351 1 287 1 265 1 374 1 307 1 352 1 135 1 123 2 257 2 48 1 333 1 210 1 297 1 55 1 129 1 128 1 144 1 
341 1 238 1 
371 1 338 1 265 2 123 2 257 2 115 1 333 1 238 2 180 1 
337 1 313 1 129 1 
302 1 285 1 215 1 351 1 287 1 374 1 352 1 135 1 123 1 257 1 48 1 210 1 238 1 297 1 55 1 128 1 
371 3 333 3 238 1 265 3 307 1 180 1 123 3 257 3 
371 1 333 1 265 1 256 1 123 1 344 1 257 1 
371 1 115 1 338 1 333 1 265 1 256 1 123 1 180 1 257 1 
145 1 285 1 217 1 168 1 287 1 220 1 265 3 96 1 172 1 123 4 122 1 48 1 102 1 50 1 176 1 150 1 297 1 55 1 180 2 128 1 371 3 302 1 75 1 61 2 351 1 35 1 275 1 374 1 375 1 307 1 352 1 256 1 135 1 257 4 115 1 232 1 333 3 279 1 210 1 238 1 379 1 87 1 88 1 144 1 
371 1 333 1 238 1 23 1 265 2 307 1 123 2 343 1 257 2 
371 3 145 1 75 1 275 1 265 3 307 2 256 1 18 1 172 1 123 3 257 3 115 1 232 1 333 3 150 1 152 1 87 1 180 1 144 1 
371 2 265 2 307 1 123 2 257 2 115 1 333 2 313 1 180 1 129 1 
302 1 285 1 351 1 287 1 374 1 352 1 135 1 123 1 257 1 48 1 210 1 238 1 297 1 55 1 128 1 
285 1 195 1 351 1 287 1 374 1 352 1 135 1 123 1 257 1 331 1 210 1 238 1 297 1 55 1 128 1 
337 2 165 1 217 1 168 1 317 1 120 1 220 1 96 4 99 2 50 1 176 2 199 1 129 2 251 1 70 1 61 2 77 1 255 1 305 1 157 1 332 1 279 1 379 1 313 2 
371 1 164 1 333 1 265 1 256 1 87 1 123 1 257 1 
371 4 265 5 307 2 361 1 123 5 343 1 257 5 115 1 333 4 293 1 23 1 238 1 180 1 144 1 
164 1 371 2 333 2 265 2 256 1 123 2 344 1 257 2 
263 1 242 1 
263 1 242 1 
316 1 114 1 
316 1 114 1 
316 1 114 1 
263 1 242 1 65 1 
263 1 242 1 65 1 
239 1 263 1 242 1 
263 2 316 1 242 2 186 1 85 1 114 1 
263 1 242 1 65 1 
263 1 223 1 242 1 
263 1 223 1 242 1 
263 1 223 1 242 1 
263 2 145 2 241 1 75 2 242 2 219 1 37 1 18 1 4 1 276 2 222 1 378 2 259 1 247 2 280 2 295 3 85 1 354 2 262 1 
263 1 145 1 239 1 242 1 45 1 26 1 265 2 146 1 123 2 222 1 247 1 295 1 125 1 371 2 75 1 276 1 257 2 79 1 333 2 280 1 234 1 238 1 354 1 336 1 
72 1 273 1 161 1 
273 1 161 1 204 1 
40 1 72 2 311 1 273 3 28 1 204 1 
72 1 311 1 273 2 28 1 204 1 282 1 
72 1 311 2 273 2 28 1 204 1 
193 3 145 5 283 1 339 4 218 1 319 1 2 3 29 1 6 2 98 1 173 1 245 1 30 2 175 1 178 2 367 1 348 1 70 1 251 1 200 1 11 1 75 5 77 1 255 1 18 2 205 2 20 1 79 1 234 1 189 1 261 1 336 1 
145 6 193 3 339 5 283 1 2 3 47 1 344 1 98 1 6 2 200 1 251 1 11 4 255 1 256 1 18 3 205 2 257 1 20 1 261 1 218 1 318 1 265 1 319 1 29 1 123 1 173 1 322 1 175 1 30 2 32 1 366 3 180 1 70 1 371 1 271 3 226 1 75 6 35 1 77 1 333 1 234 2 189 1 
145 3 193 4 339 2 319 1 2 3 98 1 6 2 173 1 245 1 175 1 363 1 30 2 178 1 348 1 70 1 200 1 251 1 75 3 77 1 255 1 18 3 205 2 20 1 234 1 189 1 261 2 
193 7 145 4 339 3 319 1 2 5 6 4 98 1 173 1 245 1 175 1 30 4 363 1 178 2 348 1 70 2 200 1 251 2 202 1 75 4 77 2 255 2 18 4 205 4 187 1 20 2 234 2 189 1 261 3 163 1 
341 1 55 1 330 1 
113 1 55 1 
345 1 
285 1 55 1 
285 1 82 1 162 1 55 3 135 1 330 2 
285 1 55 1 135 1 
248 1 55 1 
0 1 165 2 60 1 272 1 340 1 120 3 96 7 376 1 267 2 99 4 176 3 270 1 260 1 181 1 70 1 251 1 314 1 
0 1 165 2 60 1 272 1 340 1 120 3 96 7 376 1 267 2 99 4 176 3 270 1 260 1 181 1 70 1 251 1 314 1 
0 1 165 2 60 1 272 1 340 1 120 3 96 7 121 1 376 1 267 2 99 4 176 3 270 1 260 1 181 1 70 1 251 1 314 1 
0 2 165 5 340 1 217 1 167 1 169 1 120 10 220 1 170 3 96 31 289 1 99 16 267 3 50 1 176 15 9 1 106 1 270 1 181 5 153 1 251 4 70 4 130 4 60 1 272 1 61 2 254 1 77 3 255 3 376 2 20 3 279 1 260 2 314 2 
0 1 165 3 217 2 167 1 340 1 120 4 220 2 96 9 99 5 267 2 50 2 176 4 270 1 181 1 70 1 251 1 60 1 61 4 376 1 158 1 41 1 279 2 260 1 314 1 
1 1 287 1 94 2 27 1 342 1 321 1 244 1 49 1 103 1 292 1 297 1 198 1 372 1 72 1 74 1 273 2 351 1 374 1 16 2 204 1 38 1 40 1 258 1 210 1 353 1 211 1 237 1 22 1 161 1 380 1 
1 1 287 1 94 3 27 1 342 1 321 1 244 1 49 1 103 1 292 1 53 1 297 1 198 1 372 1 72 1 74 1 273 2 351 1 133 1 374 1 16 3 17 1 204 1 40 1 258 1 210 1 211 1 22 1 237 2 161 1 
287 1 94 2 321 1 49 1 103 1 292 1 53 1 297 1 198 1 372 1 72 1 74 1 273 2 351 1 374 1 16 2 17 1 204 1 40 1 258 1 210 1 211 1 22 1 237 2 161 1 
285 1 216 1 287 1 94 1 342 1 244 1 321 2 49 2 103 2 52 1 67 1 269 1 297 1 55 1 128 1 110 1 351 1 374 1 133 1 16 1 210 1 22 2 355 1 
1 1 287 1 94 1 27 1 342 1 321 1 244 1 49 1 103 1 292 1 53 1 297 1 198 1 72 1 74 1 273 2 351 1 374 1 16 1 204 1 40 1 210 1 353 1 22 1 161 1 380 1 
62 1 
193 2 145 5 283 1 89 1 285 1 92 1 287 2 243 1 2 2 98 1 149 1 150 1 107 2 297 2 298 2 55 1 57 2 110 1 11 6 350 1 303 1 13 1 351 1 15 1 256 1 18 2 205 2 309 4 257 1 310 1 210 2 23 1 261 2 359 1 218 3 360 2 319 1 265 1 172 1 123 1 173 1 175 1 323 2 365 2 269 1 325 1 128 2 75 5 329 1 374 1 136 2 232 1 189 1 335 1 87 1 
11 2 57 1 145 3 89 1 350 1 75 3 218 1 15 1 243 1 265 1 256 1 172 1 309 2 123 1 257 1 232 1 149 1 150 1 212 1 335 1 23 1 87 1 
145 3 89 1 218 1 243 1 265 1 172 1 123 1 175 1 149 1 150 1 107 1 11 1 350 1 75 3 15 1 256 1 18 1 309 3 257 1 232 1 23 1 335 1 212 1 87 1 
145 3 89 1 218 1 243 1 265 1 172 1 123 1 175 1 149 1 150 1 323 1 107 1 57 1 11 2 350 1 75 3 15 1 256 1 18 1 309 3 257 1 232 1 212 1 23 1 335 1 87 1 
145 5 89 1 283 1 92 1 243 1 2 1 51 1 149 1 150 1 107 4 56 1 298 2 57 4 11 7 350 1 15 1 256 1 18 5 309 6 205 1 257 1 310 1 209 1 212 1 23 1 261 2 357 1 218 3 360 2 265 1 319 1 172 1 123 1 173 1 175 5 323 4 365 2 34 1 75 5 136 2 232 1 189 1 335 1 87 1 
145 4 193 2 89 1 283 1 92 1 243 1 2 1 149 1 150 1 107 2 298 2 11 4 57 2 350 1 13 1 15 1 256 1 18 2 309 4 205 1 257 1 310 1 23 1 261 2 218 2 360 2 265 1 319 1 172 1 123 1 173 1 175 1 323 2 365 2 75 4 136 2 232 1 189 1 335 1 87 1 
357 1 145 4 89 1 283 1 218 2 92 1 360 2 243 1 2 1 319 1 265 1 172 1 123 1 173 1 175 1 149 1 150 1 323 2 365 2 107 2 298 2 56 1 57 2 11 4 350 1 75 4 15 1 256 1 18 1 136 2 205 1 309 4 257 1 232 1 310 1 209 1 189 1 23 1 335 1 261 2 87 1 
357 1 145 4 89 1 283 1 218 2 92 1 360 2 243 1 2 1 319 1 265 1 172 1 123 1 173 1 175 1 149 1 150 1 323 2 365 2 107 2 298 2 56 1 57 2 11 4 350 1 75 4 15 1 256 1 18 1 136 2 205 1 309 4 257 1 232 1 310 1 209 1 189 1 23 1 335 1 261 2 87 1 
357 1 193 2 145 4 89 1 283 1 218 2 360 2 46 1 243 1 2 1 319 1 265 1 172 1 123 1 290 2 173 1 175 1 149 1 150 1 323 2 107 2 33 2 298 2 57 2 11 4 350 1 75 4 274 1 15 1 256 1 134 1 18 1 205 1 309 4 257 1 232 1 310 1 189 1 23 1 335 1 87 1 
357 1 145 4 283 1 89 1 218 2 92 1 360 2 243 1 2 1 319 1 265 1 172 1 123 1 173 1 175 1 149 1 150 1 323 3 365 2 107 3 298 2 56 1 34 1 57 3 11 5 350 1 75 4 15 1 256 1 18 1 136 2 205 1 309 5 257 1 232 1 310 1 209 1 189 1 23 1 335 1 261 2 87 1 
357 1 145 4 283 1 89 1 218 2 92 1 360 2 243 1 2 1 319 1 265 1 172 1 123 1 173 1 175 1 149 1 150 1 323 3 365 2 107 3 298 2 56 1 34 1 57 3 11 5 350 1 75 4 15 1 256 1 18 1 136 2 205 1 309 5 257 1 232 1 310 1 209 1 189 1 23 1 335 1 261 2 87 1 
193 2 145 4 283 1 89 1 218 2 360 2 243 1 2 1 319 1 265 1 172 1 123 1 290 2 173 1 175 1 149 1 150 1 323 2 107 2 33 2 298 2 57 2 11 4 350 1 13 1 75 4 274 1 15 1 256 1 18 1 205 1 309 4 257 1 232 1 310 1 189 1 335 1 23 1 87 1 
0 1 337 1 165 2 60 1 168 1 217 1 341 1 340 1 317 1 61 2 120 2 220 1 96 6 376 1 267 1 99 3 50 1 176 3 279 1 238 2 379 1 270 1 313 1 129 1 70 1 251 1 
165 1 337 11 217 2 168 2 90 1 120 2 220 2 96 14 170 3 99 8 102 1 50 2 176 6 106 1 179 1 181 1 129 11 153 1 251 2 70 1 130 3 61 4 77 2 306 1 255 1 20 2 207 1 159 1 279 2 334 1 238 1 379 1 313 4 
285 1 215 1 217 1 168 1 287 1 220 1 265 1 96 2 123 2 99 1 48 1 100 1 50 1 102 1 176 1 297 1 55 1 128 1 300 1 371 1 302 1 351 1 61 2 374 1 307 1 352 1 135 1 257 2 333 1 159 1 210 1 279 1 334 1 238 1 379 1 313 1 191 1 144 1 
0 1 337 7 285 2 340 1 287 3 96 20 99 10 48 2 102 1 50 3 53 1 54 1 297 3 55 2 251 3 301 2 60 1 302 2 61 6 351 2 156 2 255 2 307 1 352 2 257 3 20 2 159 1 210 3 313 7 165 4 315 2 168 3 217 3 120 8 265 1 220 3 123 3 267 1 124 1 176 10 270 1 128 1 129 7 181 4 70 3 326 1 371 1 77 2 375 2 374 2 135 2 376 1 333 1 279 3 334 1 42 2 238 2 379 3 144 1 
285 2 217 2 168 2 286 1 317 1 287 7 265 1 220 2 96 2 5 1 123 1 99 1 50 2 102 1 176 1 53 1 151 2 269 1 297 8 127 1 55 3 128 2 371 1 110 1 252 1 351 2 61 4 307 1 374 2 38 1 257 1 333 1 210 8 279 2 64 1 236 1 334 1 379 2 160 1 
165 1 337 1 217 1 168 1 120 1 220 1 265 1 96 3 123 1 99 1 50 1 176 2 129 1 180 1 251 1 70 1 371 1 61 2 77 1 255 1 257 1 20 1 115 1 333 1 159 1 279 1 379 1 117 1 313 1 
337 1 168 1 217 1 317 1 61 2 120 1 77 1 220 1 96 2 157 1 99 2 50 1 279 1 379 1 313 1 181 1 129 1 251 1 
165 1 337 1 168 1 217 1 317 1 61 2 120 1 220 1 305 1 255 1 96 2 50 1 176 2 279 1 379 1 313 1 129 1 70 1 
337 2 165 1 217 1 168 1 317 1 120 2 220 1 96 4 99 2 50 1 176 2 129 2 181 1 251 1 70 1 61 2 77 1 255 1 20 1 279 1 379 1 313 2 
337 1 168 1 217 1 61 2 120 1 77 1 220 1 96 2 157 1 99 2 50 1 279 1 236 1 379 1 313 1 181 1 129 1 251 1 
165 1 337 1 168 1 217 1 61 2 120 1 220 1 305 1 255 1 96 2 50 1 176 2 279 1 236 1 379 1 313 1 129 1 70 1 
337 2 165 1 217 1 168 1 120 2 220 1 96 4 99 2 50 1 176 2 129 2 181 1 251 1 70 1 61 2 77 1 255 1 20 1 279 1 236 1 379 1 313 2 
337 2 165 1 217 1 168 1 120 2 220 1 96 4 99 2 50 1 176 2 129 2 181 1 251 1 70 1 61 2 77 1 255 1 20 1 279 1 379 1 313 2 
285 1 168 1 217 1 287 1 220 1 96 2 123 1 99 1 48 1 50 1 102 1 176 1 297 1 55 1 128 1 302 1 351 1 61 2 374 1 375 1 352 1 135 1 257 1 210 1 279 1 334 1 238 1 379 1 
285 1 168 1 217 1 195 1 287 1 220 1 96 2 97 1 123 1 99 1 50 1 102 1 176 1 297 1 55 1 128 1 351 1 61 2 374 1 352 1 135 1 331 1 257 1 210 1 279 1 334 1 238 1 379 1 
337 2 165 1 217 1 168 1 120 2 220 1 96 4 99 2 50 1 176 2 129 2 181 1 251 1 70 1 61 2 77 1 255 1 20 1 159 1 279 1 379 1 313 2 
165 1 337 2 285 1 168 1 217 1 120 2 287 1 220 1 96 4 123 1 99 2 48 1 50 1 176 2 297 1 55 1 181 1 129 2 70 1 251 1 302 1 351 1 61 2 77 1 255 1 374 1 375 1 352 1 135 1 38 1 257 1 20 1 210 1 279 1 42 1 379 1 313 2 
337 1 217 1 168 1 120 1 220 1 265 1 96 3 123 1 99 2 50 1 174 1 176 1 181 1 180 1 129 1 70 1 251 1 371 1 61 2 77 1 255 1 257 1 20 1 115 1 333 1 159 1 279 1 379 1 313 1 
358 1 165 3 217 2 120 6 220 2 96 19 170 1 221 2 99 9 50 2 176 10 106 1 126 1 369 2 181 3 153 1 251 3 70 3 130 2 58 1 227 1 61 4 77 3 255 3 20 3 158 1 279 2 141 1 235 1 381 1 
165 2 167 2 217 3 120 4 220 3 96 26 170 2 171 1 221 4 148 1 99 14 50 3 176 12 31 1 106 2 126 1 369 1 181 2 70 2 251 3 130 2 58 1 131 1 227 1 61 6 77 3 255 2 20 3 158 1 279 3 141 2 235 2 118 1 356 1 
0 1 340 1 96 41 148 1 99 20 50 3 106 3 251 5 153 1 58 1 60 1 61 6 255 4 20 4 158 1 63 1 118 1 356 1 358 1 165 4 217 3 167 1 120 8 220 3 170 3 171 1 221 4 267 1 176 21 31 1 126 1 270 1 369 1 181 4 70 5 130 4 131 1 227 1 77 4 376 1 279 3 235 1 141 2 
358 1 0 1 165 4 340 1 167 2 217 4 120 7 220 4 96 38 170 3 171 1 221 4 148 1 267 1 99 20 50 4 176 18 31 1 106 3 270 1 126 1 369 1 181 3 153 1 251 5 70 4 130 4 131 1 58 1 60 1 227 1 61 8 77 4 255 3 376 1 20 4 158 1 63 1 279 4 141 2 235 1 118 1 356 1 
0 1 165 7 340 1 167 1 217 2 90 2 120 14 220 2 96 52 170 4 171 1 221 4 148 1 267 1 99 27 50 2 176 25 31 1 106 2 270 1 126 1 369 1 181 7 153 2 251 8 70 8 130 4 131 1 58 1 60 1 227 1 61 4 77 7 255 7 376 1 20 7 158 1 279 2 141 1 235 1 118 1 356 1 
263 1 247 1 241 1 280 1 242 1 219 1 85 1 84 1 354 1 276 1 
239 1 45 1 
263 1 247 1 280 1 242 1 196 1 203 1 354 1 39 1 276 1 
145 1 263 1 241 1 75 1 242 1 219 1 37 1 18 1 4 1 222 1 276 1 378 1 247 1 280 1 295 2 85 1 354 1 262 1 
145 1 263 1 241 1 75 1 242 1 219 1 37 1 18 1 4 1 222 1 276 1 378 1 247 1 280 1 295 2 85 1 354 1 262 1 
145 1 263 1 241 1 75 1 242 1 219 1 37 1 18 1 4 1 222 1 276 1 378 1 247 1 280 1 295 2 85 1 354 1 262 1 
101 1 65 1 186 1 
101 1 65 1 186 1 
73 1 223 1 
73 1 223 1 186 1 
26 1 146 1 
145 1 263 1 239 1 339 1 242 1 45 1 26 1 265 2 146 1 123 2 247 1 295 1 125 1 371 2 75 1 230 1 257 2 276 1 79 1 333 2 378 1 280 1 234 1 238 1 354 1 336 1 262 1 
101 1 65 1 
73 1 223 1 186 1 
285 1 168 1 217 1 287 2 220 1 265 2 96 2 123 2 99 1 50 1 102 1 176 1 151 2 296 1 297 2 55 1 250 1 76 1 253 1 351 1 61 2 374 1 257 2 159 1 210 2 279 1 64 1 334 1 379 1 142 1 160 1 
72 1 74 1 1 1 273 2 351 1 287 2 374 1 204 1 321 1 38 1 40 1 377 1 138 1 208 1 210 2 292 1 53 1 161 1 297 2 
72 1 74 1 1 1 273 2 351 1 287 1 374 1 204 1 321 1 40 1 138 1 210 1 292 1 53 1 190 1 161 1 297 1 
110 1 285 1 216 1 351 1 287 1 374 1 321 1 19 1 377 1 210 1 269 1 297 1 55 1 128 1 
72 1 74 1 1 1 273 2 351 1 287 1 374 1 204 1 321 1 40 1 377 1 138 1 208 1 210 1 292 1 53 1 161 1 297 1 
246 1 
175 1 341 1 36 1 2 1 18 1 205 1 362 1 
193 1 145 1 283 1 218 1 92 1 2 1 319 1 173 1 175 1 365 1 11 1 75 1 18 2 205 1 136 1 189 1 261 1 
145 5 193 12 283 4 285 3 240 1 91 2 287 3 2 9 95 1 98 2 6 6 248 2 297 3 55 10 154 1 251 2 11 5 301 2 113 3 351 3 255 2 18 8 206 2 205 8 20 2 210 3 24 2 162 1 213 1 261 6 218 3 319 4 362 1 173 4 175 2 30 6 177 2 128 1 70 2 327 2 225 2 183 1 75 5 36 1 77 2 329 1 78 2 374 4 135 3 38 1 330 2 232 2 189 4 83 2 
145 1 193 6 283 2 218 1 2 8 319 2 170 1 171 1 98 1 6 5 173 2 30 5 175 2 31 1 106 1 251 2 70 2 11 1 130 1 131 1 75 1 132 1 77 2 329 1 78 1 255 2 18 5 206 2 205 5 20 2 21 1 189 2 118 1 261 3 356 1 
0 1 145 1 283 1 319 1 2 2 265 1 123 1 47 1 344 1 173 1 56 1 180 1 251 2 70 1 371 1 60 1 111 1 226 1 75 1 35 1 78 1 256 1 206 2 376 1 205 2 257 1 333 1 189 1 
283 1 36 1 319 1 2 1 18 1 362 1 205 1 173 1 175 1 189 1 
301 1 193 10 77 2 78 1 255 2 2 5 18 5 206 2 205 5 20 2 6 5 30 5 261 5 251 2 70 2 
145 1 11 1 175 1 75 1 218 1 18 1 
145 3 359 1 283 1 285 1 218 2 287 4 319 2 2 2 98 2 173 2 363 1 269 1 297 4 325 1 55 1 128 2 154 1 11 4 110 1 75 3 14 1 351 1 329 2 374 1 205 2 210 4 188 1 189 2 213 2 
285 1 217 1 168 1 287 1 265 2 220 1 96 1 123 3 122 1 48 1 102 1 50 1 176 1 297 1 55 1 128 1 180 2 371 2 302 1 61 2 35 1 351 1 375 1 374 1 352 1 135 1 257 3 333 2 279 1 210 1 238 1 379 1 
193 4 283 1 319 1 2 1 329 1 18 4 205 2 267 1 6 2 98 1 173 1 30 2 175 2 189 1 261 2 
247 1 105 1 276 1 
247 1 105 1 276 1 
25 1 247 1 241 1 146 1 276 1 
247 1 105 1 276 1 
71 1 247 1 276 1 
71 1 247 1 276 1 
71 1 247 1 276 1 
247 1 276 1 
263 1 242 1 
0 1 165 2 60 1 217 2 167 1 340 1 61 4 120 3 220 2 96 8 376 1 267 1 99 4 50 2 176 4 279 2 270 1 181 1 70 1 251 1 
0 1 165 2 60 1 341 1 340 1 120 2 96 6 376 1 267 1 99 3 176 3 270 1 251 1 70 1 
165 1 217 1 61 2 120 2 77 1 255 1 220 1 96 4 20 1 99 2 50 1 233 1 176 2 279 1 181 1 70 1 251 1 
165 1 130 2 77 1 120 2 255 1 96 7 170 1 99 3 20 1 176 4 106 1 181 1 70 1 153 1 251 1 
0 2 165 5 340 1 167 2 217 2 90 1 120 9 220 2 170 2 96 23 267 1 99 11 50 2 176 12 270 1 181 4 251 3 153 1 70 3 130 2 155 1 60 1 61 4 77 2 255 2 376 2 20 2 207 1 279 2 
130 1 176 1 96 1 
96 1 170 1 99 1 
301 1 165 2 217 1 61 2 77 1 120 3 220 1 255 1 96 6 20 1 99 3 50 1 233 1 176 3 279 1 181 1 251 1 70 1 
165 1 217 1 120 2 220 1 170 1 96 12 171 1 99 6 50 1 176 6 31 1 106 1 181 1 251 2 70 2 130 1 131 1 61 2 77 2 255 2 20 2 158 1 279 1 118 1 356 1 
0 1 165 1 60 1 120 2 96 6 376 1 99 3 176 3 181 1 251 1 70 1 
0 1 165 1 155 1 167 1 217 1 340 1 61 2 120 2 220 1 96 3 376 1 99 1 50 1 176 2 279 1 270 1 181 1 
0 2 165 3 60 1 217 1 111 1 61 2 120 5 220 1 96 10 376 2 99 5 158 1 50 1 176 5 279 1 181 2 251 2 70 2 
217 1 61 2 77 1 120 1 220 1 96 2 99 2 158 1 50 1 279 1 181 1 251 1 
165 1 217 1 61 2 120 2 77 1 255 1 220 1 96 4 20 1 99 2 158 1 50 1 176 2 279 1 181 1 70 1 251 1 
358 1 0 1 165 1 155 1 167 1 217 3 61 6 120 2 220 3 96 3 376 1 99 1 158 1 50 3 176 2 279 3 181 1 
0 3 358 1 165 7 340 1 167 2 217 5 169 1 120 12 220 5 96 34 170 3 289 1 267 1 99 16 50 5 176 18 9 1 106 1 270 1 181 5 153 1 251 5 70 5 130 4 155 1 60 2 61 10 77 3 255 3 376 3 20 3 158 1 233 1 279 5 
0 1 165 2 217 1 340 1 120 2 220 1 170 1 96 8 267 1 99 4 50 1 176 4 31 1 106 1 270 1 70 1 251 1 130 1 60 1 61 2 376 1 158 1 279 1 
0 1 165 2 340 1 217 2 120 3 220 2 96 11 170 1 267 1 99 6 50 2 176 5 31 1 106 1 270 1 181 1 70 1 153 1 251 2 130 2 60 1 61 4 77 1 376 1 20 1 158 1 233 1 279 2 
0 1 165 3 340 1 217 3 167 1 120 4 220 3 170 1 96 19 171 1 267 1 99 9 50 3 176 10 31 1 106 1 270 1 181 1 251 3 70 3 130 1 131 1 60 1 61 6 77 2 255 2 376 1 20 2 158 1 233 1 279 3 118 1 356 1 
0 1 165 3 340 1 167 1 217 3 120 5 220 3 170 1 96 17 171 1 267 1 99 10 50 3 176 7 31 1 106 1 270 1 181 2 251 3 70 2 130 1 131 1 60 1 61 6 77 2 255 1 376 1 20 2 158 1 233 1 279 3 118 1 356 1 
0 1 165 2 217 1 340 1 120 2 220 1 170 1 96 8 267 1 99 4 50 1 176 4 31 1 106 1 270 1 70 1 251 1 130 1 60 1 61 2 376 1 158 1 279 1 
165 1 217 1 120 2 220 1 170 1 96 12 171 1 99 6 50 1 176 6 31 1 106 1 181 1 251 2 70 2 130 1 131 1 61 2 77 2 255 2 20 2 158 1 279 1 118 1 356 1 
0 1 165 3 340 1 217 4 167 2 120 5 220 4 96 18 170 1 171 1 267 1 99 10 50 4 176 8 31 1 106 1 270 1 181 2 251 3 70 2 130 1 131 1 60 1 61 8 77 2 255 1 376 1 20 2 158 1 233 1 279 4 118 1 356 1 
358 1 165 3 217 4 167 2 120 6 220 4 96 16 170 1 171 1 99 9 50 4 176 7 31 1 106 1 181 3 251 3 70 2 130 1 131 1 61 8 77 3 255 2 20 3 158 1 279 4 118 1 356 1 
0 3 165 3 60 1 340 1 120 6 96 7 376 3 99 3 176 4 270 2 181 3 70 1 251 1 
0 1 358 1 165 3 340 1 217 4 167 2 120 4 220 4 96 18 170 1 171 1 267 1 99 10 50 4 176 8 31 1 106 1 270 1 181 1 251 3 70 2 130 1 131 1 60 1 61 8 77 2 255 1 376 1 20 2 158 1 279 4 118 1 356 1 
268 1 238 1 23 1 265 1 123 1 257 1 343 1 
373 1 265 1 123 1 343 1 257 1 268 1 116 1 238 1 23 1 108 1 370 1 224 1 
110 1 285 1 341 1 210 1 269 1 351 1 287 1 374 1 297 1 55 1 128 1 
371 1 285 1 351 1 287 1 265 1 374 1 307 1 352 1 135 1 123 2 257 2 48 1 333 1 210 1 238 1 297 1 55 1 128 1 
285 2 287 1 265 2 172 1 123 2 48 1 248 1 297 1 55 3 371 2 225 1 351 1 307 1 374 1 352 1 256 1 135 2 257 2 333 1 210 1 238 1 213 1 87 1 
43 1 285 2 195 1 287 2 265 2 172 1 123 2 248 1 297 2 55 3 371 2 225 1 351 1 307 1 374 1 352 1 256 1 135 2 257 2 333 1 210 2 238 1 213 1 87 1 
145 2 43 1 285 1 287 3 175 1 346 1 248 1 368 1 297 3 55 4 128 1 11 1 225 1 75 2 113 1 351 1 374 1 135 1 18 1 330 1 232 1 210 3 213 1 
145 2 11 1 225 1 43 1 285 1 75 2 113 1 351 1 287 3 374 1 18 1 135 1 330 1 232 1 175 1 210 3 83 1 248 1 297 3 213 1 55 4 128 1 
210 1 351 1 287 1 374 1 297 1 5 1 
192 1 252 1 285 2 286 1 351 2 287 6 374 3 135 1 5 1 38 1 210 7 64 1 140 1 151 1 53 1 297 7 162 1 127 1 55 3 128 2 214 1 
0 1 337 1 165 2 315 1 285 1 340 1 217 2 168 2 120 2 287 1 220 2 265 1 96 6 123 2 267 1 99 3 48 1 50 2 176 3 270 1 297 1 55 1 129 1 70 1 251 1 371 1 60 1 302 1 76 1 351 1 61 4 374 1 307 1 375 1 352 1 135 1 376 1 257 2 38 1 333 1 159 1 279 2 210 1 42 1 238 2 379 2 313 1 
145 3 283 2 339 1 91 1 218 1 287 1 2 1 319 2 362 1 173 2 175 1 297 1 55 2 128 1 154 1 327 1 11 2 75 3 113 1 36 1 18 1 205 1 330 1 232 1 210 1 189 2 83 1 24 1 
285 1 351 1 287 2 95 1 374 2 135 1 5 1 38 1 330 1 210 2 297 2 162 1 55 2 
110 1 43 1 285 1 351 1 287 4 374 1 38 1 80 1 210 4 269 1 297 4 55 1 128 1 
326 1 285 1 228 1 351 1 287 2 308 1 374 2 135 1 210 2 140 1 297 2 213 1 55 1 214 1 
74 1 210 1 273 1 351 1 287 1 161 1 374 1 297 1 204 1 128 1 
285 1 210 2 64 1 53 1 351 1 287 2 374 1 296 1 297 2 55 1 38 1 
110 1 285 2 286 1 351 2 287 4 374 2 38 1 80 1 210 5 64 1 269 1 297 5 213 1 55 3 127 1 128 1 
110 1 285 2 351 2 287 4 374 2 38 1 80 1 210 5 64 1 269 1 297 5 213 1 55 3 127 1 128 1 66 1 
371 1 285 1 195 1 351 1 287 1 265 1 374 1 307 1 352 1 135 1 123 2 257 2 333 1 210 1 238 1 297 1 55 1 128 1 
192 1 285 1 351 1 287 1 374 2 135 1 210 1 140 1 297 1 162 1 213 1 55 1 214 1 
8 1 312 1 238 1 324 1 119 1 
145 2 339 1 75 2 264 1 275 1 256 1 18 1 172 1 232 1 8 2 175 1 104 1 150 1 347 1 312 1 238 1 324 2 87 1 119 2 
8 1 253 1 312 1 324 1 265 1 142 1 123 1 250 1 257 1 
104 1 347 1 312 1 
372 1 258 1 341 1 211 1 
372 1 258 1 211 1 94 1 16 1 342 1 244 1 
49 1 22 1 94 1 
372 1 185 2 94 3 342 1 16 3 266 1 244 1 258 1 353 1 211 1 249 1 86 1 
372 1 258 1 211 1 237 1 94 2 16 2 342 1 231 1 244 1 
10 1 72 1 273 1 94 1 342 1 16 1 244 1 139 1 353 1 211 1 161 1 
258 1 353 1 211 1 94 1 16 1 342 1 244 1 
372 1 258 2 353 1 94 1 16 1 342 1 244 1 
284 1 59 1 94 2 93 1 342 2 16 2 244 2 258 1 353 1 211 1 
10 1 372 1 184 1 94 3 342 1 16 3 244 1 258 1 353 1 68 1 211 2 237 2 299 1 
372 1 72 1 273 2 94 2 204 1 342 1 16 2 244 1 40 1 258 1 291 1 353 1 211 1 237 1 161 1 
10 1 372 1 184 1 94 4 342 2 16 4 244 2 231 1 258 1 364 1 353 1 211 2 237 2 
372 1 258 1 353 1 211 1 94 1 16 1 342 1 244 1 
10 1 372 2 184 1 185 1 112 1 94 4 16 4 342 1 244 1 258 2 211 3 237 2 249 1 86 1 
372 1 94 2 342 1 16 2 197 1 244 1 258 1 353 1 81 1 211 1 294 1 237 1 
372 1 166 1 258 1 185 2 353 1 211 1 94 3 249 1 16 3 342 1 86 2 244 1 
12 1 211 2 320 2 349 1 
194 1 353 1 94 1 16 1 342 1 244 1 
372 1 258 1 353 1 211 1 237 1 94 2 16 2 342 1 244 1 299 1 
281 1 
372 1 258 1 353 1 211 1 94 1 16 1 342 1 244 1 
372 1 185 1 94 3 342 1 16 3 244 1 258 1 353 1 211 1 237 1 299 1 
10 1 184 1 112 1 211 1 
258 1 211 1 

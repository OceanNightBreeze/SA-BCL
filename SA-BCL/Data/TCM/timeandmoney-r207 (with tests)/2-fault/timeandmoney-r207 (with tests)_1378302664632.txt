#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 214 1 92 3 362 1 95 2 143 1 49 1 340 2 34 2 123 1 171 1 311 4 172 1 368 6 263 2 372 2 371 2 223 2 104 1 22 5 40 1 207 1 107 9 26 1 136 1 255 9 61 1 231 1 
0 1 214 1 92 3 362 1 95 2 143 1 49 1 340 2 34 2 123 1 171 1 311 4 172 1 368 6 263 2 371 2 372 2 223 2 104 1 22 5 40 1 207 1 107 9 26 1 136 1 255 9 61 1 231 1 
0 1 214 1 92 4 362 1 95 2 143 1 49 1 340 2 34 2 123 1 171 1 311 5 172 1 368 7 263 2 371 2 372 2 223 2 104 1 22 6 40 1 207 1 107 10 26 1 136 1 255 10 61 1 231 1 
0 1 92 2 362 1 95 2 143 1 49 1 340 2 34 2 123 1 171 1 311 3 172 1 368 4 263 2 371 2 372 1 223 2 104 1 22 4 40 1 207 1 107 7 26 1 136 1 255 7 61 1 231 1 
92 1 214 1 263 1 371 1 372 2 362 1 223 1 143 1 22 3 49 1 340 1 34 1 107 4 26 1 255 4 61 1 311 2 368 3 
371 1 223 1 95 1 143 1 22 1 49 1 340 1 299 1 34 1 107 2 26 1 343 1 255 2 283 1 171 1 231 1 
92 1 371 2 95 1 143 1 22 2 49 1 34 2 107 3 26 1 123 1 255 3 311 1 368 1 
0 1 92 3 214 1 362 1 114 1 95 1 143 1 49 1 340 1 169 1 34 2 123 1 311 4 368 7 263 1 371 2 372 2 223 1 104 1 22 5 107 9 26 1 255 9 61 1 
0 1 92 3 214 1 362 1 114 1 95 1 143 1 49 1 340 1 169 1 34 2 123 1 311 4 368 7 263 1 371 2 372 2 223 1 104 1 22 5 107 9 26 1 255 9 61 1 
11 1 52 1 358 1 
339 2 11 1 162 1 
331 1 254 2 239 2 125 2 278 2 43 2 23 1 303 2 
331 1 235 2 2 2 6 1 7 1 239 2 47 1 96 1 187 1 278 2 121 1 168 1 146 1 147 1 193 1 125 3 148 1 149 2 290 1 175 1 370 1 293 2 54 1 269 1 23 1 378 2 155 1 134 1 208 1 209 1 254 3 212 1 89 1 357 1 110 1 43 2 303 2 
334 1 254 1 239 1 77 1 125 1 278 1 43 1 23 1 63 1 303 1 
334 2 333 1 116 1 183 1 239 1 278 1 145 1 11 1 52 1 75 1 77 1 125 2 16 1 23 1 298 1 254 2 157 1 29 1 43 2 63 1 303 1 
334 1 116 1 183 2 239 1 278 1 298 1 11 1 145 1 254 1 52 1 75 1 125 1 16 2 43 1 303 1 
18 1 30 1 183 1 186 1 16 1 
18 1 11 1 265 1 52 1 344 1 183 2 186 1 16 2 
18 1 183 1 16 1 
334 1 333 1 183 1 239 1 186 1 278 1 23 1 254 1 77 1 125 1 16 1 63 1 43 1 303 1 
11 1 
18 1 220 1 11 1 52 1 344 1 183 2 186 1 16 2 
18 2 90 1 3 1 183 5 48 1 186 2 165 2 72 1 11 1 13 1 122 1 52 1 100 2 344 1 272 1 232 2 16 5 327 1 287 1 
331 1 358 1 
234 1 331 2 276 1 239 1 278 1 254 2 125 2 43 2 303 1 
219 1 271 1 337 1 
331 1 293 1 6 1 378 1 155 1 364 1 121 1 208 1 254 1 168 1 209 1 193 1 125 1 357 1 148 1 149 1 
234 1 331 1 334 1 239 4 278 1 56 1 279 2 377 1 206 1 254 5 157 1 300 1 126 1 125 5 43 5 303 4 
334 1 254 2 236 1 239 2 77 1 125 2 43 2 303 2 
293 1 6 1 239 1 279 1 377 1 378 1 155 1 271 1 121 1 208 1 209 1 254 2 168 1 193 1 125 2 148 1 357 1 43 1 149 1 303 1 
331 1 254 3 239 3 125 3 278 1 279 1 43 3 303 3 
334 1 254 1 239 1 77 1 125 1 43 1 303 1 
234 1 276 1 334 1 254 1 239 1 125 1 278 1 43 1 303 1 
234 1 331 1 235 1 2 2 334 1 6 1 116 1 239 3 183 1 96 1 187 1 278 2 279 1 188 1 121 1 145 1 168 1 146 1 193 1 147 1 75 1 125 4 148 1 16 1 149 1 290 1 175 1 293 1 54 1 268 1 377 1 23 1 378 1 155 1 298 1 134 1 208 1 209 1 254 4 212 1 89 1 357 1 43 3 303 3 
331 1 334 1 239 1 279 1 206 1 254 2 157 1 125 2 126 1 43 2 303 1 
234 1 334 1 116 1 183 1 239 3 238 1 268 1 278 1 279 2 377 1 298 1 11 1 145 1 254 3 75 1 125 3 16 1 43 3 303 3 
234 1 239 2 278 1 279 1 337 1 271 1 254 2 125 2 43 2 303 2 
331 1 293 1 6 1 378 1 155 1 121 1 208 1 254 1 168 1 209 1 193 1 125 1 357 1 148 1 149 1 
331 1 293 1 317 1 6 1 378 1 155 1 121 1 208 1 254 1 168 1 209 1 355 1 125 1 148 1 149 1 
235 4 2 2 31 1 96 1 187 1 337 2 99 1 285 1 345 1 175 1 290 2 219 2 81 1 221 1 203 1 177 1 134 1 271 2 135 1 229 1 212 1 89 1 110 2 233 1 
334 1 254 1 236 1 116 1 239 1 125 1 43 1 303 1 
9 1 55 1 
9 1 55 1 
332 1 118 1 
332 1 118 1 
332 1 118 1 
9 1 322 1 55 1 
9 1 322 1 55 1 
9 1 380 1 55 1 
9 2 275 1 354 1 332 1 118 1 55 2 
9 1 322 1 55 1 
9 1 191 1 55 1 
9 1 191 1 55 1 
9 1 191 1 55 1 
304 1 330 1 331 1 256 1 161 1 239 2 183 1 9 1 71 1 167 1 125 2 16 1 80 1 173 1 199 1 373 1 153 1 55 1 132 1 254 2 380 1 326 1 43 2 303 2 
173 2 80 3 330 2 349 1 199 1 335 1 237 2 183 2 55 2 306 1 83 1 9 2 132 2 166 1 354 1 11 1 356 1 326 2 16 2 
340 1 263 1 223 1 
340 1 299 1 223 1 
291 1 263 2 340 3 12 1 299 1 241 1 
291 1 263 1 340 2 12 1 299 1 198 1 
291 1 263 1 340 2 12 2 299 1 
304 1 183 5 162 1 186 4 97 2 165 1 240 1 72 2 339 3 167 1 11 2 341 2 13 1 122 3 100 1 52 1 308 1 344 1 285 1 313 1 16 5 18 1 247 1 264 1 153 1 177 1 203 1 84 1 86 1 229 1 230 2 232 1 
140 1 30 5 183 9 162 3 186 7 97 6 165 2 72 6 339 9 11 5 13 1 122 8 52 1 100 2 308 2 344 1 286 1 285 3 313 3 16 9 289 1 18 6 247 2 374 1 296 1 153 4 177 3 203 3 86 1 379 5 229 3 230 6 232 2 327 1 112 1 
183 3 162 2 186 2 165 1 97 2 240 1 72 2 339 4 11 3 341 1 122 3 52 1 100 1 308 1 285 1 313 1 16 3 247 1 264 1 153 1 177 1 203 1 229 1 232 1 230 2 327 1 
183 4 162 3 186 3 97 4 165 1 240 1 72 4 339 7 11 4 341 2 122 5 52 1 100 1 308 1 286 1 285 2 313 2 16 4 289 1 247 1 264 1 296 1 153 2 177 2 203 2 229 2 230 4 232 1 327 1 
155 1 202 1 358 1 
155 1 24 1 
292 1 
155 1 209 1 6 1 
155 1 185 1 
155 1 209 1 
155 3 209 1 6 1 244 1 202 2 204 1 
290 3 246 1 1 1 197 2 235 7 31 3 184 1 177 1 203 1 164 1 321 1 338 1 74 1 325 1 110 4 233 2 315 1 
290 3 246 1 1 1 197 2 235 7 31 3 184 1 177 1 203 1 164 1 321 1 338 1 74 1 325 1 110 4 233 2 315 1 
290 3 246 1 1 1 197 2 235 7 31 3 184 1 177 1 203 1 164 1 321 1 338 1 74 1 325 1 108 1 110 4 233 2 315 1 
305 1 1 1 235 31 2 2 31 10 184 2 96 1 164 1 187 1 338 1 74 2 76 4 313 3 285 3 315 2 246 1 175 1 290 15 197 3 200 1 318 1 203 4 177 4 154 1 321 5 58 1 228 1 88 3 229 3 325 2 212 1 181 1 110 16 233 5 
235 9 1 1 2 4 31 4 96 2 184 1 187 2 338 1 243 1 74 1 312 1 315 1 175 2 290 4 246 1 197 2 177 1 203 1 321 1 58 1 212 2 325 1 110 5 233 3 
361 1 46 1 142 1 95 1 143 1 336 1 49 1 241 1 10 1 121 1 340 2 34 1 368 1 369 1 149 1 245 1 263 1 293 1 371 1 223 1 22 1 376 1 378 1 208 1 299 1 107 2 26 1 27 1 255 2 180 1 
46 1 142 1 95 1 49 1 241 1 10 1 121 1 340 2 34 1 36 1 369 1 149 1 368 2 245 1 263 1 293 1 371 1 152 1 223 1 22 1 376 1 378 1 208 1 299 1 107 3 26 1 27 1 255 3 180 1 382 1 
46 1 95 1 49 1 241 1 10 1 121 1 340 2 36 1 369 1 149 1 368 2 245 1 293 1 263 1 152 1 223 1 22 1 376 1 378 1 208 1 299 1 107 2 26 1 27 1 255 2 
293 1 371 1 182 1 5 1 46 2 95 2 281 1 378 1 155 1 106 1 10 2 121 1 208 1 209 1 34 1 107 1 168 1 255 1 37 1 149 1 369 2 195 1 382 1 
361 1 46 1 142 1 95 1 143 1 241 1 10 1 121 1 340 2 34 1 36 1 369 1 149 1 245 1 263 1 293 1 371 1 223 1 376 1 378 1 208 1 299 1 107 1 27 1 255 1 180 1 
192 1 
139 1 334 1 182 1 277 1 94 1 183 5 281 1 189 2 339 2 11 2 145 1 13 1 14 2 52 1 100 1 15 1 344 3 284 2 16 5 149 2 196 1 18 6 247 1 293 2 294 1 351 2 155 1 298 1 208 1 60 2 209 1 254 1 157 1 211 1 29 1 116 1 162 2 119 2 258 2 165 1 259 1 72 2 121 1 168 2 122 2 261 1 75 1 125 1 262 1 222 1 176 1 130 4 378 2 232 1 43 1 
139 1 262 1 220 1 18 2 334 1 277 1 116 1 183 3 130 2 298 1 145 1 60 1 254 1 157 1 15 1 75 1 211 1 344 1 29 1 125 1 16 3 43 1 
139 1 262 1 334 1 277 1 116 1 183 2 130 3 298 1 189 1 145 1 254 1 157 1 15 1 75 1 211 1 29 1 125 1 16 2 43 1 
139 1 334 1 116 1 277 1 183 3 189 1 145 1 14 1 15 1 75 1 344 1 125 1 16 3 262 1 18 2 220 1 130 3 298 1 254 1 60 1 157 1 211 1 29 1 43 1 
139 1 333 1 334 2 277 1 239 1 183 5 278 1 189 3 11 2 145 1 13 1 14 4 52 2 15 1 100 1 344 3 284 2 16 5 150 1 196 1 18 7 20 1 351 2 23 1 105 1 352 1 298 1 60 4 254 2 157 1 211 1 29 1 63 1 303 1 116 1 162 2 258 2 119 2 165 1 72 1 122 1 261 1 75 1 77 1 125 2 262 1 220 1 130 5 85 1 232 1 43 2 
139 1 334 1 277 1 183 4 94 1 189 2 339 2 145 1 11 2 13 1 14 2 100 1 15 1 52 1 344 2 284 2 16 4 196 1 18 4 351 2 298 1 254 1 60 2 157 1 211 1 29 1 116 1 162 2 258 2 119 2 165 1 72 1 122 1 261 1 75 1 125 1 262 1 130 4 232 1 43 1 
139 1 334 1 116 1 277 1 183 4 162 2 119 2 258 2 165 1 189 2 72 1 11 1 145 1 13 1 14 2 122 1 52 1 261 1 15 1 100 1 75 1 344 2 284 2 125 1 16 4 196 1 262 1 18 4 20 1 351 2 130 4 105 1 298 1 85 1 60 2 254 1 157 1 211 1 29 1 232 1 43 1 
139 1 334 1 116 1 277 1 183 4 162 2 119 2 258 2 165 1 189 2 72 1 11 1 145 1 13 1 14 2 122 1 52 1 261 1 15 1 100 1 75 1 344 2 284 2 125 1 16 4 196 1 262 1 18 4 20 1 351 2 130 4 105 1 298 1 85 1 60 2 254 1 157 1 211 1 29 1 232 1 43 1 
139 1 334 1 116 1 277 1 183 4 165 1 189 2 72 1 339 2 190 1 11 1 145 1 13 1 14 2 122 1 52 1 261 1 15 1 100 1 75 1 344 2 284 2 125 1 16 4 288 2 53 2 262 1 18 4 267 1 351 2 130 4 298 1 85 1 60 2 254 1 156 1 157 1 211 1 29 1 232 1 43 1 
139 1 334 1 116 1 277 1 183 4 162 2 119 2 258 2 165 1 72 1 189 3 11 1 145 1 13 1 122 1 14 3 52 1 261 1 100 1 15 1 75 1 344 2 284 2 125 1 16 4 150 1 196 1 262 1 18 5 20 1 351 2 130 5 105 1 298 1 85 1 254 1 60 3 157 1 211 1 29 1 232 1 43 1 
139 1 334 1 116 1 277 1 183 4 162 2 119 2 258 2 165 1 72 1 189 3 11 1 145 1 13 1 122 1 14 3 52 1 261 1 100 1 15 1 75 1 344 2 284 2 125 1 16 4 150 1 196 1 262 1 18 5 20 1 351 2 130 5 105 1 298 1 85 1 254 1 60 3 157 1 211 1 29 1 232 1 43 1 
139 1 334 1 277 1 183 4 94 1 189 2 190 1 339 2 145 1 11 1 13 1 14 2 100 1 15 1 52 1 344 2 284 2 16 4 53 2 288 2 18 4 351 2 298 1 254 1 60 2 157 1 211 1 29 1 116 1 165 1 72 1 122 1 261 1 75 1 125 1 262 1 130 4 232 1 43 1 
331 2 1 1 235 6 2 2 31 2 184 1 96 1 187 1 337 1 338 1 74 1 246 1 175 1 290 3 219 1 197 1 203 1 177 1 271 1 134 1 135 1 212 1 89 1 110 3 358 1 233 2 
331 1 235 14 2 4 363 1 31 2 47 1 96 2 187 2 280 1 337 4 76 3 313 2 285 1 290 6 175 2 219 11 54 1 203 2 177 1 321 1 134 1 271 11 252 1 88 3 228 1 229 2 212 2 89 2 138 1 158 1 181 1 110 8 233 1 
331 1 235 2 2 2 6 1 239 1 96 1 47 1 187 1 279 1 337 1 364 1 121 1 168 1 193 1 125 2 148 1 149 1 175 1 290 1 293 1 54 1 201 1 320 1 377 1 378 1 155 1 134 1 208 1 209 1 254 2 62 1 212 1 89 1 357 1 158 1 110 1 43 1 303 1 
331 2 1 1 235 20 91 2 2 6 141 1 6 2 239 1 184 1 47 1 96 3 187 3 279 1 337 7 338 1 147 2 193 2 346 2 148 2 285 2 149 3 246 1 290 10 197 1 293 3 54 1 203 3 155 2 59 2 208 2 254 3 209 2 212 3 158 1 357 2 110 10 303 1 66 2 31 8 73 1 121 2 168 1 74 1 36 1 125 3 313 2 174 1 175 3 219 7 177 3 377 1 321 4 378 3 134 3 271 7 229 2 89 3 43 1 233 4 
113 1 235 2 2 4 182 1 239 1 96 2 47 1 187 2 336 1 279 1 144 1 281 1 121 2 168 2 309 1 35 1 36 1 125 1 149 8 175 2 290 1 19 1 293 8 54 1 269 2 297 1 378 7 155 3 133 1 134 2 208 2 254 1 209 2 135 1 212 2 89 2 110 1 43 1 303 1 
234 1 235 3 2 2 31 1 67 1 239 1 96 1 278 1 187 1 337 1 125 1 313 1 285 1 219 1 175 1 290 2 203 1 177 1 271 1 134 1 254 1 229 1 212 1 89 1 158 1 110 1 43 1 233 1 303 1 
219 1 175 1 235 2 2 2 31 1 96 1 187 1 203 1 321 1 337 1 271 1 134 1 135 1 229 1 89 1 212 1 345 1 110 2 
219 1 175 1 290 2 235 2 2 2 221 1 31 1 96 1 187 1 177 1 337 1 271 1 134 1 135 1 89 1 212 1 285 1 233 1 
235 4 2 2 31 2 96 1 187 1 337 2 313 1 285 1 175 1 219 2 290 2 203 1 177 1 321 1 134 1 271 2 135 1 229 1 212 1 89 1 110 2 233 1 
219 1 175 1 235 2 2 2 31 1 96 1 187 1 203 1 321 1 297 1 337 1 271 1 134 1 229 1 89 1 212 1 345 1 110 2 
219 1 175 1 290 2 235 2 2 2 221 1 31 1 96 1 187 1 177 1 297 1 337 1 271 1 134 1 89 1 212 1 285 1 233 1 
235 4 2 2 31 2 96 1 187 1 337 2 313 1 285 1 175 1 219 2 290 2 203 1 177 1 297 1 321 1 134 1 271 2 229 1 212 1 89 1 110 2 233 1 
235 4 2 2 31 2 96 1 187 1 337 2 313 1 285 1 175 1 219 2 290 2 203 1 177 1 321 1 134 1 271 2 229 1 212 1 89 1 110 2 233 1 
331 1 235 2 2 2 6 1 47 1 96 1 187 1 121 1 168 1 193 1 147 1 125 1 148 1 149 1 175 1 290 1 293 1 54 1 378 1 155 1 134 1 208 1 209 1 254 1 89 1 212 1 357 1 110 1 
331 1 235 2 2 2 6 1 32 1 47 1 96 1 187 1 121 1 168 1 125 1 148 1 149 1 175 1 290 1 293 1 54 1 317 1 378 1 155 1 134 1 208 1 209 1 254 1 355 1 89 1 212 1 110 1 
235 4 2 2 31 2 96 1 187 1 337 2 313 1 285 1 175 1 219 2 290 2 203 1 177 1 321 1 134 1 271 2 229 1 212 1 89 1 158 1 110 2 233 1 
235 4 2 2 6 1 31 2 96 1 187 1 336 1 337 2 121 1 193 1 147 1 125 1 285 1 148 1 346 1 313 1 149 1 290 2 219 2 175 1 293 1 177 1 203 1 321 1 378 1 155 1 271 2 134 1 208 1 209 1 254 1 229 1 89 1 212 1 357 1 110 2 233 1 
234 1 235 3 2 2 31 1 239 1 96 1 278 1 187 1 337 1 125 1 285 1 313 1 290 1 175 1 219 1 224 1 177 1 203 1 321 1 134 1 271 1 254 1 229 1 212 1 89 1 158 1 110 2 43 1 303 1 
235 19 2 4 31 6 96 2 163 1 187 2 69 1 243 1 282 1 76 2 313 3 285 3 175 2 290 10 250 1 203 3 177 3 321 3 87 1 88 1 228 1 137 2 41 1 324 1 229 3 212 2 302 2 181 1 110 9 233 3 
235 26 2 6 31 4 96 3 163 1 187 3 243 1 282 2 342 1 76 2 78 1 194 1 313 3 285 2 290 12 175 3 82 1 250 1 177 2 203 3 321 2 25 1 58 2 87 1 88 2 137 1 324 2 229 3 212 3 302 4 110 14 181 2 328 1 233 2 
1 1 235 41 2 6 31 8 184 1 96 3 163 1 187 3 338 1 243 1 282 2 74 1 342 1 76 4 78 1 194 1 313 4 285 4 246 1 175 3 290 21 197 1 129 1 82 1 250 1 203 5 177 5 321 4 25 1 58 1 87 1 88 3 228 1 137 1 41 1 324 1 229 4 212 3 302 4 181 3 110 20 328 1 233 4 
1 1 235 38 2 8 31 7 184 1 96 4 163 1 187 4 338 1 243 1 282 2 74 1 342 1 76 4 78 1 194 1 313 4 285 3 246 1 175 4 290 18 197 1 129 1 82 1 250 1 203 5 177 4 321 3 25 1 58 2 87 1 88 3 228 1 137 1 41 1 324 1 229 4 212 4 302 4 181 3 110 20 328 1 233 4 
1 1 235 52 2 4 31 14 184 1 96 2 163 1 187 2 338 1 243 1 282 1 74 1 342 1 76 4 78 1 194 1 313 7 285 7 246 1 175 2 290 25 197 1 82 1 250 1 203 8 177 8 321 7 25 1 58 1 87 1 88 4 228 2 137 1 324 1 229 7 212 2 138 2 302 4 181 2 110 27 328 1 233 7 
132 1 173 1 9 1 330 1 166 1 354 1 335 1 170 1 55 1 326 1 
256 1 380 1 
132 1 173 1 9 1 330 1 248 1 249 1 28 1 55 1 326 1 
322 1 365 1 
275 1 191 1 17 1 
173 1 80 2 330 1 349 1 199 1 335 1 237 1 183 1 55 1 83 1 9 1 132 1 166 1 354 1 11 1 356 1 326 1 16 1 
173 1 80 2 330 1 349 1 199 1 335 1 237 1 183 1 55 1 83 1 9 1 132 1 166 1 354 1 11 1 356 1 326 1 16 1 
173 1 80 2 330 1 349 1 199 1 335 1 237 1 183 1 55 1 83 1 9 1 132 1 166 1 354 1 11 1 356 1 326 1 16 1 
322 1 275 1 365 1 
322 1 275 1 365 1 
191 1 17 1 
275 1 191 1 17 1 
161 1 373 1 
304 1 330 1 331 1 256 1 161 1 237 1 183 1 239 2 186 1 9 1 71 1 167 1 125 2 16 1 173 1 80 1 349 1 316 1 373 1 153 1 55 1 132 1 254 2 380 1 326 1 43 2 303 2 
329 1 235 2 2 2 96 1 47 1 187 1 144 1 121 1 309 1 125 2 149 2 314 1 175 1 290 1 293 2 54 1 151 1 350 1 269 2 131 1 378 2 155 1 134 1 208 1 209 1 254 2 212 1 89 1 158 1 110 1 43 2 
263 1 293 2 128 1 223 1 336 1 376 1 241 1 378 2 217 1 10 1 340 2 121 1 299 1 208 1 36 1 273 1 180 1 149 2 245 1 
263 1 293 1 128 1 223 1 68 1 376 1 241 1 378 1 10 1 340 2 121 1 299 1 208 1 36 1 180 1 149 1 245 1 
293 1 182 1 319 1 378 1 281 1 155 1 217 1 10 1 121 1 208 1 209 1 168 1 149 1 195 1 
263 1 293 1 128 1 223 1 376 1 241 1 378 1 217 1 10 1 340 2 121 1 299 1 208 1 36 1 273 1 180 1 149 1 245 1 
57 1 
72 1 11 1 122 1 52 1 48 1 272 1 358 1 
183 1 162 1 258 1 119 1 165 1 72 1 339 1 11 2 13 1 122 1 100 1 52 1 344 1 16 1 196 1 18 1 232 1 
45 2 91 2 6 3 183 5 48 1 185 2 336 1 97 6 50 2 242 1 339 12 11 8 13 4 52 2 100 4 244 1 344 3 285 2 16 5 149 3 247 2 18 5 293 3 21 1 202 2 203 2 24 3 205 1 155 10 208 3 209 3 213 2 360 2 359 2 159 2 215 2 162 6 165 4 33 1 72 8 121 4 168 1 122 9 75 2 127 2 313 2 176 1 177 2 378 3 270 1 229 2 272 1 232 4 230 6 
213 1 360 2 115 1 183 1 162 3 97 5 165 2 72 5 339 6 11 5 13 2 122 8 100 2 52 2 342 1 344 1 76 1 78 1 194 1 313 2 285 2 16 1 247 1 18 1 82 1 176 1 203 2 177 2 353 1 88 1 229 2 230 5 232 2 181 1 328 1 
213 1 360 2 1 1 334 1 333 1 183 1 239 1 184 1 278 1 165 1 72 2 13 1 122 2 74 1 100 1 77 1 125 1 218 1 16 1 203 2 177 1 23 1 105 1 254 1 232 1 63 1 43 1 303 1 
72 1 11 1 13 1 122 1 52 1 100 1 48 1 272 1 232 1 165 1 
213 1 360 2 91 1 162 5 203 2 177 2 97 5 72 5 339 10 11 5 122 5 229 2 313 2 230 5 285 2 
18 1 11 1 52 1 183 1 344 1 16 1 
182 1 183 3 259 1 165 2 281 1 242 2 72 2 121 1 13 1 168 2 122 2 100 2 344 2 102 1 16 3 149 4 247 2 18 4 293 4 222 1 176 2 378 4 155 1 205 1 208 1 209 1 232 2 111 1 327 1 
331 1 235 1 2 2 6 1 239 2 96 1 187 1 278 2 121 1 168 1 146 1 147 1 193 1 125 3 148 1 149 1 290 1 175 1 293 1 54 1 23 1 378 1 155 1 134 1 208 1 254 3 209 1 89 1 212 1 357 1 43 2 303 2 
247 1 197 1 162 2 176 1 97 2 165 1 72 2 339 4 11 4 13 1 122 1 100 1 52 2 230 2 232 1 
132 1 173 1 253 1 
132 1 173 1 253 1 
132 1 173 1 161 1 295 1 335 1 
132 1 173 1 253 1 
132 1 173 1 65 1 
132 1 173 1 65 1 
132 1 173 1 65 1 
132 1 173 1 
9 1 55 1 
290 4 175 2 246 1 197 1 1 1 235 8 2 4 31 3 96 2 184 1 177 1 203 1 187 2 321 1 58 1 338 1 74 1 212 2 110 4 233 2 
290 3 246 1 197 1 1 1 235 6 31 2 184 1 203 1 177 1 338 1 74 1 110 3 358 1 233 2 
290 2 175 1 235 4 2 2 31 2 96 1 177 1 187 1 203 1 260 1 321 1 229 1 212 1 285 1 313 1 110 2 233 1 
290 4 235 7 31 2 177 1 203 1 321 1 88 1 228 1 76 2 229 1 285 1 313 1 181 1 110 3 233 1 
1 1 235 23 2 4 31 9 184 2 96 2 187 2 280 1 338 1 74 2 76 2 313 2 285 2 246 1 290 12 175 2 197 1 203 3 177 3 321 4 58 2 228 1 88 2 229 2 212 2 138 1 110 11 109 1 233 5 
290 1 235 1 76 1 
235 1 88 1 110 1 
175 1 290 3 91 1 235 6 2 2 31 3 96 1 187 1 203 1 177 1 260 1 321 1 229 1 212 1 313 1 285 1 110 3 233 2 
235 12 2 2 31 2 96 1 187 1 243 1 342 1 76 1 78 1 313 2 285 2 194 1 290 6 175 1 82 1 203 2 177 2 321 1 88 1 229 2 212 1 181 1 110 6 328 1 233 1 
290 3 1 1 235 6 31 2 184 1 203 1 177 1 321 1 74 1 110 3 233 1 
246 1 290 2 175 1 235 3 2 2 31 2 184 1 96 1 187 1 321 1 58 1 338 1 74 1 212 1 110 1 109 1 233 1 
175 1 290 5 235 10 1 1 2 2 31 5 96 1 184 2 187 1 203 2 177 2 321 2 243 1 74 2 212 1 218 1 110 5 233 3 
175 1 235 2 2 2 31 1 96 1 187 1 203 1 321 1 243 1 229 1 212 1 110 2 
290 2 175 1 235 4 2 2 31 2 96 1 177 1 187 1 203 1 321 1 243 1 229 1 212 1 285 1 313 1 110 2 233 1 
290 2 175 3 235 3 2 6 31 2 96 3 184 1 187 3 321 1 58 1 243 1 74 1 41 1 212 3 109 1 110 1 233 1 
305 1 1 2 235 34 2 10 31 12 184 3 96 5 187 5 260 1 338 1 243 1 74 3 76 4 313 3 285 3 246 1 290 18 175 5 197 1 318 1 154 1 203 5 177 5 321 5 58 2 88 3 228 1 41 1 229 3 212 5 109 1 181 1 110 16 233 7 
235 8 1 1 2 2 31 2 96 1 184 1 187 1 338 1 243 1 74 1 76 1 78 1 290 4 175 1 246 1 197 1 177 1 203 1 88 1 212 1 181 1 110 4 233 2 
1 1 235 11 2 4 31 3 184 1 96 2 187 2 260 1 338 1 243 1 74 1 76 2 78 1 313 1 246 1 290 5 175 2 197 1 177 1 203 2 321 1 88 1 228 1 229 1 212 2 181 1 110 6 233 2 
1 1 235 19 2 6 31 4 184 1 96 3 187 3 260 1 338 1 243 1 74 1 342 1 76 1 78 1 194 1 313 2 285 2 246 1 290 10 175 3 197 1 82 1 203 3 177 3 321 1 58 1 88 1 229 2 212 3 181 1 110 9 328 1 233 3 
1 1 235 17 2 6 31 5 184 1 96 3 187 3 260 1 338 1 243 1 74 1 342 1 76 1 78 1 313 2 285 1 194 1 246 1 290 7 175 3 197 1 82 1 203 3 177 2 321 2 58 1 88 1 229 2 212 3 181 1 110 10 328 1 233 3 
235 8 1 1 2 2 31 2 96 1 184 1 187 1 338 1 243 1 74 1 76 1 78 1 290 4 175 1 246 1 197 1 177 1 203 1 88 1 212 1 181 1 110 4 233 2 
235 12 2 2 31 2 96 1 187 1 243 1 342 1 76 1 78 1 313 2 285 2 194 1 290 6 175 1 82 1 203 2 177 2 321 1 88 1 229 2 212 1 181 1 110 6 328 1 233 1 
1 1 235 18 2 8 31 5 184 1 96 4 187 4 260 1 338 1 243 1 74 1 342 1 76 1 78 1 194 1 313 2 285 1 246 1 290 8 175 4 197 1 82 1 203 3 177 2 321 2 58 2 88 1 229 2 212 4 181 1 110 10 328 1 233 3 
235 16 2 8 31 6 96 4 187 4 243 1 342 1 76 1 78 1 194 1 313 3 285 2 290 7 175 4 82 1 203 3 177 2 321 3 58 2 88 1 41 1 229 3 212 4 181 1 110 9 328 1 233 3 
290 4 246 2 235 7 1 1 31 6 184 3 177 1 203 1 321 3 338 1 74 3 110 3 233 3 
1 1 235 18 2 8 31 4 184 1 96 4 187 4 338 1 243 1 74 1 342 1 76 1 78 1 194 1 313 2 285 1 246 1 290 8 175 4 197 1 82 1 203 3 177 2 321 1 58 2 88 1 41 1 229 2 212 4 181 1 110 10 328 1 233 3 
331 1 334 1 251 1 206 1 254 1 157 1 126 1 125 1 43 1 
331 1 334 1 160 1 4 1 225 1 251 1 206 1 307 1 254 1 157 1 124 1 126 1 125 1 43 1 
155 1 121 1 293 1 208 1 209 1 182 1 168 1 149 1 281 1 358 1 378 1 
331 1 293 1 6 1 239 1 279 1 378 1 155 1 121 1 208 1 209 1 254 2 168 1 125 2 148 1 357 1 43 1 149 1 303 1 
359 1 331 1 334 2 6 2 116 1 239 1 185 1 279 1 242 1 121 1 125 1 148 1 149 1 293 1 378 1 155 3 298 1 206 1 208 1 254 1 209 2 357 1 43 1 303 1 
359 1 331 1 334 2 6 2 116 1 239 1 185 1 279 1 242 1 121 1 125 1 148 1 149 1 293 1 378 1 155 3 298 1 206 1 208 1 254 1 209 2 355 1 43 1 303 1 
359 1 6 1 183 2 185 1 98 1 242 1 121 1 11 1 168 1 52 1 75 1 16 2 149 3 18 1 293 3 202 1 375 1 24 1 378 3 155 4 208 1 209 1 323 1 
359 1 18 1 293 3 6 1 183 2 185 1 202 1 24 1 378 3 98 1 50 1 155 4 242 1 11 1 121 1 208 1 168 1 209 1 52 1 75 1 16 2 149 3 
121 1 293 1 133 1 208 1 149 1 378 1 
113 1 19 1 293 7 38 1 6 1 269 1 336 1 144 1 378 6 155 3 178 1 133 1 121 3 208 2 168 2 209 2 244 1 35 1 36 1 347 1 149 7 
331 2 235 6 1 1 2 4 66 1 6 1 31 2 239 1 184 1 96 2 187 2 279 1 336 1 337 1 338 1 121 1 74 1 147 1 193 1 125 2 148 1 346 1 149 1 219 1 290 3 246 1 175 2 197 1 293 1 350 1 177 1 203 1 378 1 155 1 271 1 134 2 208 1 209 1 254 2 212 2 89 2 158 1 357 1 110 3 43 1 233 2 303 1 
45 1 159 1 183 3 48 1 186 1 165 2 50 1 72 1 11 1 168 1 13 2 122 1 52 1 100 2 75 1 344 1 127 1 16 3 149 1 18 2 293 1 202 1 24 1 378 1 205 1 155 2 272 1 232 2 
293 2 6 1 202 1 336 1 33 1 378 2 155 2 133 1 121 2 208 1 209 1 244 1 149 2 
348 1 293 4 182 1 336 1 378 4 281 1 98 1 155 1 121 1 208 1 168 1 209 1 149 4 
174 1 293 2 38 1 6 1 378 2 155 1 242 1 178 1 179 1 121 2 208 1 209 1 367 1 149 2 
340 1 121 1 293 1 299 1 208 1 168 1 223 1 149 1 245 1 378 1 
329 1 293 2 336 1 144 1 378 2 155 1 121 1 208 1 209 1 36 1 149 2 
113 1 348 1 293 5 182 1 336 1 144 1 281 1 378 4 155 3 242 1 121 2 208 2 168 1 209 2 35 1 149 5 
113 1 348 1 293 5 182 1 216 1 336 1 144 1 281 1 378 4 155 3 242 1 121 2 208 2 168 1 209 2 149 5 
331 1 293 1 6 1 239 1 279 1 378 1 155 1 121 1 208 1 209 1 254 2 168 1 355 1 125 2 148 1 43 1 149 1 303 1 
293 1 38 1 6 1 378 1 155 1 178 1 242 1 121 2 208 1 209 1 244 1 347 1 149 1 
64 1 151 1 227 1 131 1 254 1 310 1 125 1 314 1 43 1 
101 1 227 1 44 1 
331 1 64 1 93 1 310 1 227 1 
331 1 64 2 334 1 93 2 116 1 183 2 268 1 227 1 186 1 70 1 298 1 11 1 145 1 52 1 75 1 101 1 310 2 16 2 44 1 
26 1 22 1 49 1 358 1 
371 1 107 1 34 1 26 1 255 1 22 1 49 1 
107 1 46 1 95 1 
371 1 143 1 22 1 226 1 8 1 49 1 210 1 34 1 107 3 26 1 255 3 231 2 
372 1 371 1 107 2 34 1 26 1 255 2 22 1 49 1 368 1 
340 1 263 1 371 1 362 1 107 1 34 1 223 1 255 1 143 1 22 1 311 1 
371 1 107 1 34 1 26 1 255 1 143 1 22 1 
371 1 107 1 34 1 26 2 255 1 143 1 49 1 
371 2 257 1 107 2 34 2 26 1 255 2 117 1 301 1 143 1 22 1 
0 1 92 1 371 1 143 1 104 1 22 2 49 1 34 1 107 3 26 1 255 3 311 1 368 2 
263 1 371 1 223 1 143 1 22 1 49 1 241 1 340 2 299 1 34 1 107 2 366 1 26 1 255 2 368 1 
214 1 92 1 371 2 372 1 143 1 22 2 49 1 34 2 107 4 26 1 255 4 311 1 368 2 
371 1 107 1 34 1 26 1 255 1 143 1 22 1 49 1 
92 1 371 1 226 1 22 3 8 1 49 2 120 1 107 4 34 1 26 2 255 4 311 1 231 1 368 2 
371 1 114 1 143 1 22 1 49 1 51 1 34 1 107 2 26 1 255 2 79 1 368 1 
371 1 143 1 226 1 22 1 8 2 49 1 34 1 107 3 26 1 255 3 231 2 42 1 
103 1 39 1 22 2 381 2 
274 1 371 1 107 1 34 1 255 1 143 1 
0 1 371 1 107 2 34 1 26 1 255 2 143 1 22 1 49 1 368 1 
266 1 
371 1 107 1 34 1 26 1 255 1 143 1 22 1 49 1 
0 1 371 1 143 1 22 1 49 1 34 1 107 3 26 1 255 3 231 1 368 1 
92 1 22 1 311 1 120 1 
26 1 22 1 

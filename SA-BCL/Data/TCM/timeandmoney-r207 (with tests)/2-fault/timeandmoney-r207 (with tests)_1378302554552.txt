#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 297 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 9 218 3 113 1 360 1 312 1 24 1 364 1 26 1 170 6 68 1 10 1 250 2 269 2 270 2 272 9 31 5 182 1 346 2 323 2 126 1 208 4 209 1 350 2 189 1 109 2 141 1 357 1 307 1 
23 9 218 3 113 1 360 1 312 1 24 1 364 1 26 1 170 6 68 1 10 1 250 2 269 2 270 2 272 9 31 5 182 1 323 2 346 2 126 1 208 4 209 1 350 2 189 1 109 2 141 1 357 1 307 1 
23 10 218 4 113 1 360 1 312 1 24 1 364 1 26 1 170 7 68 1 10 1 250 2 269 2 270 2 272 10 31 6 182 1 323 2 346 2 126 1 208 5 209 1 350 2 189 1 109 2 141 1 357 1 307 1 
23 7 218 2 360 1 312 1 24 1 364 1 26 1 170 4 68 1 10 1 250 2 269 2 270 2 272 7 31 4 182 1 323 2 346 1 126 1 208 3 209 1 350 2 189 1 109 2 141 1 357 1 307 1 
23 4 218 1 208 2 113 1 209 1 24 1 350 1 170 3 68 1 10 1 250 1 269 1 270 1 272 4 31 3 182 1 323 1 346 2 
23 2 360 1 209 1 24 1 350 1 68 1 190 1 250 1 109 1 44 1 270 1 31 1 272 2 284 1 357 1 323 1 
23 3 218 1 208 1 209 1 312 1 24 1 170 1 68 1 250 2 109 1 272 3 31 2 323 2 
23 9 218 3 113 1 312 1 338 1 24 1 26 1 170 7 68 1 10 1 250 2 269 1 270 1 272 9 31 5 182 1 323 2 346 2 208 4 209 1 350 1 109 1 139 1 141 1 
23 9 218 3 113 1 312 1 338 1 24 1 26 1 170 7 68 1 10 1 250 2 269 1 270 1 272 9 31 5 182 1 323 2 346 2 208 4 209 1 350 1 109 1 139 1 141 1 
142 1 220 1 292 1 
21 1 378 2 142 1 
75 2 328 2 266 2 216 2 351 1 79 2 72 2 20 1 
167 1 266 2 365 1 314 1 146 1 293 2 267 1 118 1 94 1 223 2 95 1 29 1 173 1 320 2 203 1 180 2 72 2 183 1 127 1 231 1 233 1 349 1 256 1 75 2 186 1 328 3 351 1 79 3 259 1 41 1 240 1 138 1 216 2 45 1 335 1 193 2 20 1 
253 1 87 1 75 1 266 1 328 1 79 1 228 1 216 1 72 1 20 1 
253 1 142 1 128 1 266 1 328 1 292 1 222 1 79 1 92 1 169 1 316 1 317 1 175 1 230 1 
253 2 87 1 142 1 128 1 75 2 266 2 328 2 292 1 222 2 79 2 92 1 169 1 316 2 283 1 228 1 216 2 72 2 20 1 230 1 
316 1 100 1 291 1 341 1 222 1 
316 2 157 1 142 1 100 1 291 1 292 1 222 2 19 1 
316 1 100 1 222 1 
253 1 87 1 75 1 291 1 266 1 328 1 222 1 79 1 316 1 283 1 228 1 216 1 72 1 20 1 
142 1 
316 2 157 1 142 1 100 1 291 1 292 1 179 1 222 2 
0 1 142 1 131 1 313 1 291 2 292 1 222 5 81 1 156 1 27 1 136 1 316 5 157 1 260 2 84 2 202 2 191 1 100 2 160 1 
220 1 351 1 
253 1 75 1 144 1 266 2 328 2 210 1 79 2 351 1 119 1 216 1 72 1 
262 1 201 1 98 1 
231 1 328 1 365 1 314 1 146 1 351 1 79 1 223 1 66 1 29 1 41 1 320 1 138 1 203 1 45 1 193 1 
231 1 36 1 266 1 328 2 365 1 314 1 146 1 79 2 223 1 201 1 41 1 29 1 320 1 138 1 203 1 45 1 216 1 72 1 193 1 273 1 
253 1 3 1 36 1 75 1 266 5 328 5 210 1 79 5 351 1 97 1 119 1 332 1 175 1 216 4 72 4 273 2 
253 1 328 1 266 1 228 1 216 1 79 1 72 1 
253 1 266 2 328 2 79 2 351 1 119 1 216 2 72 2 273 1 
253 1 328 1 266 1 228 1 216 1 79 1 72 1 
253 1 75 1 266 1 328 1 144 1 210 1 79 1 216 1 72 1 
308 1 167 1 266 3 365 1 222 1 314 1 146 1 293 1 92 1 267 1 118 1 169 1 223 1 316 1 29 1 320 1 203 1 180 2 72 3 273 1 230 1 183 1 231 1 127 1 253 1 74 1 233 1 349 1 128 1 256 1 75 2 36 1 186 1 328 4 210 1 351 1 79 4 41 1 138 1 45 1 216 3 335 1 193 1 20 1 
253 1 266 2 328 2 79 2 351 1 97 1 119 1 175 1 216 1 72 1 273 1 
253 1 308 1 142 1 128 1 75 1 36 1 340 1 266 3 328 3 210 1 222 1 79 3 92 1 169 1 316 1 216 3 72 3 273 2 230 1 
262 1 201 1 75 1 328 2 266 2 210 1 216 2 79 2 72 2 273 1 
231 1 328 1 365 1 314 1 146 1 351 1 79 1 223 1 29 1 41 1 320 1 138 1 203 1 45 1 193 1 
274 1 328 1 365 1 314 1 146 1 351 1 79 1 223 1 29 1 41 1 320 1 138 1 304 1 203 1 193 1 
262 2 265 1 196 1 167 2 293 4 267 1 118 1 201 2 295 1 7 1 98 2 173 2 322 1 180 2 324 1 183 1 15 1 349 1 372 1 256 1 186 1 108 1 331 1 285 1 
253 1 359 1 266 1 328 1 79 1 92 1 216 1 72 1 
342 1 151 1 
342 1 151 1 
288 1 4 1 
288 1 4 1 
288 1 4 1 
342 1 99 1 151 1 
342 1 99 1 151 1 
342 1 371 1 151 1 
342 2 288 1 4 1 245 1 107 1 151 2 
342 1 99 1 151 1 
342 1 252 1 151 1 
342 1 252 1 151 1 
342 1 252 1 151 1 
1 1 2 1 88 1 219 1 266 2 222 1 168 1 65 1 342 1 316 1 171 1 70 1 72 2 151 1 254 1 371 1 327 1 328 2 237 1 351 1 79 2 330 1 216 2 140 1 
254 2 103 1 2 3 142 1 163 1 245 1 222 2 106 1 342 2 65 2 316 2 343 1 330 2 8 1 171 1 18 2 261 1 140 2 151 2 
269 1 270 1 350 1 
270 1 44 1 350 1 
130 1 269 2 270 3 44 1 221 1 242 1 
130 1 269 1 270 2 44 1 221 1 344 1 
130 2 269 1 270 2 44 1 221 1 
287 1 21 1 265 1 337 2 142 2 196 1 313 3 291 4 222 5 292 1 168 1 316 5 147 1 148 2 202 1 100 1 322 1 70 1 229 1 34 1 131 2 185 1 237 1 108 1 136 1 157 1 260 1 378 3 84 1 241 1 43 1 355 2 
287 1 21 3 62 1 265 3 142 5 196 3 313 8 291 7 341 5 222 9 292 1 168 4 316 9 147 3 6 5 148 6 172 1 202 2 100 6 271 1 322 3 34 2 131 6 235 1 155 1 108 3 57 1 156 1 136 1 157 1 260 2 378 9 84 2 43 2 355 6 
21 2 265 1 337 1 142 3 196 1 313 3 291 2 292 1 222 3 168 1 316 3 147 1 148 2 202 1 322 1 229 1 34 1 131 2 108 1 156 1 260 1 378 4 84 1 241 1 43 1 355 2 
21 3 62 1 265 2 337 2 142 4 196 2 313 5 291 3 292 1 222 4 168 2 316 4 147 2 148 4 172 1 202 1 322 2 229 1 34 1 131 4 235 1 108 2 156 1 260 1 378 7 84 1 241 1 43 1 355 4 
203 1 220 1 39 1 
226 1 203 1 
49 1 
41 1 138 1 203 1 
203 1 217 1 
138 1 203 1 
263 1 41 1 138 1 203 3 39 2 336 1 
289 1 196 1 363 2 244 1 167 3 38 1 145 1 293 7 375 1 302 1 59 1 173 4 149 1 322 1 285 2 324 3 111 1 
289 1 196 1 363 2 244 1 167 3 38 1 145 1 293 7 375 1 302 1 59 1 173 4 149 1 322 1 285 2 324 3 111 1 
289 1 196 1 363 2 244 1 167 3 38 1 145 1 375 1 293 7 302 1 59 1 173 4 149 1 322 1 369 1 285 2 324 3 111 1 
265 3 289 2 196 4 244 1 363 3 167 15 145 5 293 31 117 4 120 1 147 3 173 16 149 2 322 4 177 1 251 1 180 2 150 1 324 10 183 1 349 1 256 1 78 1 186 1 38 1 375 1 108 3 40 3 302 2 59 2 303 1 334 1 285 5 111 1 
264 1 289 1 196 1 363 2 244 1 167 4 145 1 91 1 293 9 173 5 149 1 322 1 180 4 324 4 183 2 349 2 256 2 78 1 186 2 38 1 375 1 302 1 59 1 285 3 
23 2 114 1 24 1 365 1 314 1 223 1 170 1 68 1 225 1 320 1 250 1 269 1 270 2 227 1 31 1 272 2 323 1 207 1 152 1 234 1 275 1 209 1 277 1 350 1 83 1 109 1 44 1 242 1 243 1 193 1 
23 3 50 1 24 1 365 1 314 1 223 1 170 2 225 1 320 1 250 1 269 1 270 2 227 1 31 1 272 3 323 1 207 1 298 1 234 1 275 1 209 1 277 1 350 1 300 1 83 1 109 1 44 1 242 1 243 1 193 1 
23 2 24 1 365 1 314 1 223 1 170 2 225 1 320 1 269 1 270 2 31 1 272 2 207 1 298 1 275 1 209 1 277 1 350 1 300 1 83 1 109 1 44 1 242 1 243 1 193 1 
23 1 309 1 50 1 25 1 365 1 314 1 315 1 146 1 223 1 320 1 250 1 203 1 272 1 323 1 348 1 275 2 37 1 277 2 83 2 109 2 137 1 138 1 193 1 
23 1 114 1 365 1 314 1 223 1 68 1 225 1 320 1 250 1 269 1 270 2 227 1 272 1 323 1 207 1 298 1 234 1 275 1 277 1 350 1 83 1 109 1 44 1 242 1 243 1 193 1 
96 1 
142 2 292 1 146 2 92 1 294 1 202 1 54 1 100 6 203 1 204 1 253 1 12 2 153 1 105 1 157 3 260 1 158 4 161 2 356 2 21 2 162 1 311 1 362 2 313 2 266 1 222 5 365 1 315 1 314 1 116 1 169 1 223 2 316 5 224 1 368 2 317 1 320 2 69 2 175 1 178 2 230 1 34 1 128 1 131 2 276 1 37 1 328 1 238 1 79 1 136 1 378 2 84 1 42 1 138 1 193 2 
311 1 266 1 222 3 116 1 92 1 169 1 316 3 224 1 317 1 54 1 175 1 100 2 179 1 204 1 230 1 253 1 128 1 328 1 79 1 157 1 158 2 356 1 
311 1 142 1 266 1 222 3 292 1 116 1 92 1 169 1 316 3 224 1 317 1 54 1 100 1 175 1 178 1 179 1 204 1 230 1 253 1 128 1 328 1 79 1 157 1 158 3 
311 1 142 1 266 1 222 3 292 1 116 1 92 1 169 1 316 3 224 1 317 1 54 1 175 1 100 2 178 1 179 1 204 1 230 1 253 1 12 1 128 1 328 1 79 1 157 1 158 3 356 1 
194 1 142 5 292 5 92 1 9 1 54 1 202 1 100 7 204 1 253 1 12 4 153 1 352 1 157 3 158 6 260 1 161 2 356 4 21 2 311 1 362 2 313 1 266 1 222 5 116 1 169 1 316 5 224 1 368 2 317 1 69 2 175 1 178 4 179 1 230 1 128 1 131 1 77 1 328 1 79 1 82 1 136 1 84 1 42 1 
142 2 292 1 92 1 54 1 202 1 100 4 204 1 253 1 12 2 153 1 157 2 158 4 260 1 161 2 356 2 21 2 162 1 311 1 362 2 313 1 266 1 222 4 116 1 169 1 316 4 224 1 368 2 317 1 69 2 175 1 178 2 230 1 128 1 131 1 328 1 79 1 136 1 378 2 84 1 42 1 
21 2 194 1 142 1 311 1 362 2 313 1 266 1 292 1 222 4 116 1 92 1 169 1 316 4 224 1 368 2 317 1 69 2 54 1 202 1 100 4 175 1 178 2 204 1 230 1 253 1 12 2 128 1 153 1 131 1 328 1 79 1 352 1 82 1 136 1 157 2 260 1 158 4 84 1 42 1 161 2 356 2 
21 2 194 1 142 1 311 1 362 2 313 1 266 1 292 1 222 4 116 1 92 1 169 1 316 4 224 1 368 2 317 1 69 2 54 1 202 1 100 4 175 1 178 2 204 1 230 1 253 1 12 2 128 1 153 1 131 1 328 1 79 1 352 1 82 1 136 1 157 2 260 1 158 4 84 1 42 1 161 2 356 2 
142 1 311 1 313 1 266 1 292 1 222 4 116 1 92 1 169 1 316 4 224 1 368 2 53 1 317 1 69 2 54 1 202 1 100 4 175 1 178 2 204 1 32 2 230 1 253 1 325 1 12 2 128 1 153 1 131 1 328 1 79 1 352 1 377 1 136 1 157 2 260 1 158 4 378 2 84 1 110 2 356 2 
21 2 194 1 142 1 311 1 362 2 313 1 266 1 292 1 222 4 116 1 92 1 169 1 316 4 224 1 368 2 317 1 69 2 202 1 54 1 175 1 100 5 178 3 204 1 230 1 253 1 12 3 128 1 153 1 131 1 77 1 328 1 79 1 352 1 136 1 82 1 157 2 260 1 158 5 84 1 42 1 161 2 356 3 
21 2 194 1 142 1 311 1 362 2 313 1 266 1 292 1 222 4 116 1 92 1 169 1 316 4 224 1 368 2 317 1 69 2 202 1 54 1 175 1 100 5 178 3 204 1 230 1 253 1 12 3 128 1 153 1 131 1 77 1 328 1 79 1 352 1 136 1 82 1 157 2 260 1 158 5 84 1 42 1 161 2 356 3 
142 1 292 1 92 1 54 1 202 1 100 4 204 1 253 1 12 2 153 1 157 2 158 4 260 1 110 2 356 2 162 1 311 1 313 1 266 1 222 4 116 1 169 1 316 4 224 1 368 2 317 1 69 2 175 1 178 2 32 2 230 1 128 1 131 1 328 1 79 1 377 1 136 1 378 2 84 1 
262 1 289 1 196 1 244 1 363 1 220 1 167 3 293 6 267 1 118 1 201 1 98 1 173 3 322 1 180 2 324 2 183 1 349 1 256 1 186 1 38 1 375 1 351 2 331 1 59 1 285 2 
262 4 265 2 196 2 167 6 145 1 293 14 117 3 267 2 118 1 247 1 5 1 201 11 120 1 367 1 147 2 98 11 173 8 322 1 180 4 150 1 324 2 183 2 255 1 349 2 256 2 186 2 351 1 108 1 40 3 240 1 85 1 285 1 335 1 
262 1 266 1 167 1 365 1 314 1 146 1 293 2 267 1 118 1 223 1 66 1 29 1 367 1 320 1 174 1 173 1 203 1 180 2 205 1 72 1 273 1 231 1 183 1 349 1 36 1 256 1 328 2 186 1 351 1 79 2 41 1 214 1 240 1 138 1 45 1 216 1 193 1 335 1 
289 1 196 3 244 1 145 4 146 1 293 20 201 7 147 2 98 7 203 2 298 1 349 3 256 3 351 2 108 2 17 1 59 1 216 1 112 2 262 7 265 2 363 1 167 10 266 1 365 2 314 2 118 3 267 3 223 3 29 2 366 2 367 1 320 3 173 10 122 1 322 3 180 6 72 1 273 1 324 8 183 3 127 2 231 2 36 1 186 3 328 3 38 1 278 2 375 1 79 3 80 2 135 1 41 2 240 1 138 2 45 2 285 4 335 1 193 3 
22 1 266 1 167 1 365 2 314 2 315 1 146 2 293 2 267 2 118 2 223 8 95 2 320 7 173 1 203 3 180 4 71 1 72 1 206 1 273 1 183 2 152 1 298 1 349 2 256 2 236 1 37 1 328 1 186 2 56 1 79 1 331 1 240 1 138 2 216 1 358 1 193 8 306 1 335 1 
262 1 265 1 196 1 266 1 167 2 246 1 293 3 267 1 118 1 201 1 367 1 147 1 98 1 173 1 322 1 180 2 72 1 324 1 183 1 349 1 75 1 256 1 186 1 328 1 210 1 79 1 108 1 216 1 285 1 
262 1 183 1 265 1 349 1 372 1 256 1 196 1 186 1 145 1 293 2 118 1 267 1 201 1 98 1 331 1 173 2 180 2 324 1 
262 1 183 1 15 1 349 1 256 1 186 1 167 2 293 2 108 1 118 1 267 1 201 1 98 1 331 1 322 1 180 2 285 1 324 1 
262 2 265 1 196 1 167 2 145 1 293 4 267 1 118 1 201 2 147 1 98 2 173 2 322 1 180 2 324 2 183 1 349 1 256 1 186 1 108 1 331 1 285 1 
262 1 183 1 265 1 349 1 372 1 256 1 196 1 186 1 145 1 293 2 118 1 267 1 201 1 98 1 173 2 180 2 306 1 324 1 
262 1 183 1 15 1 349 1 256 1 186 1 167 2 293 2 108 1 118 1 267 1 201 1 98 1 322 1 180 2 285 1 306 1 324 1 
262 2 265 1 196 1 167 2 145 1 293 4 267 1 118 1 201 2 147 1 98 2 173 2 322 1 180 2 324 2 183 1 349 1 256 1 186 1 108 1 285 1 306 1 
262 2 265 1 196 1 167 2 145 1 293 4 267 1 118 1 201 2 147 1 98 2 173 2 322 1 180 2 324 2 183 1 349 1 256 1 186 1 108 1 285 1 
167 1 365 1 314 1 146 1 293 2 118 1 267 1 223 1 29 1 173 1 320 1 203 1 180 2 231 1 127 1 183 1 349 1 256 1 328 1 186 1 351 1 79 1 41 1 240 1 138 1 45 1 193 1 335 1 
167 1 365 1 314 1 146 1 293 2 118 1 267 1 223 1 29 1 173 1 320 1 203 1 180 2 33 1 183 1 274 1 349 1 256 1 328 1 186 1 351 1 79 1 41 1 240 1 138 1 304 1 193 1 335 1 
262 2 265 1 196 1 167 2 145 1 293 4 267 1 118 1 201 2 147 1 367 1 98 2 173 2 322 1 180 2 324 2 183 1 349 1 256 1 186 1 108 1 285 1 
262 2 265 1 196 1 167 2 365 1 145 1 314 1 293 4 118 1 267 1 223 1 201 2 29 1 147 1 98 2 173 2 320 1 322 1 203 1 180 2 324 2 231 1 127 1 183 1 152 1 349 1 256 1 328 1 186 1 278 1 108 1 79 1 41 1 138 1 45 1 285 1 193 1 
262 1 265 1 196 1 167 1 266 1 145 1 293 3 267 1 118 1 201 1 367 1 147 1 98 1 173 2 322 1 180 2 72 1 324 1 183 1 349 1 75 1 256 1 186 1 328 1 210 1 133 1 108 1 79 1 216 1 
265 3 196 3 167 10 145 3 91 1 293 19 117 2 93 1 249 1 120 1 147 3 173 9 321 2 322 3 30 1 180 4 150 1 296 1 124 1 324 6 370 2 183 2 13 1 349 2 256 2 186 2 108 3 40 1 285 3 46 1 
265 3 196 3 164 1 167 12 145 2 91 1 293 26 93 2 117 2 249 1 120 2 147 3 173 14 321 1 322 2 181 1 180 6 296 2 124 1 345 1 324 4 101 1 370 4 183 3 13 1 349 3 256 3 78 2 186 3 108 2 279 1 40 2 188 1 285 2 
289 1 196 5 244 1 145 4 293 41 91 1 93 2 249 1 248 1 147 4 150 1 296 1 345 1 101 1 13 1 349 3 256 3 108 4 59 1 265 4 164 1 363 1 167 21 117 4 120 3 173 20 321 1 322 5 180 6 181 1 124 1 324 8 183 3 370 4 78 1 186 3 38 1 375 1 279 1 40 3 188 1 285 4 46 1 
265 4 289 1 196 5 164 1 363 1 244 1 167 18 145 3 91 1 293 38 117 4 93 2 248 1 249 1 120 3 147 4 173 20 321 1 322 4 181 1 180 8 150 1 296 1 124 1 345 1 101 1 324 7 370 4 183 4 13 1 349 4 256 4 78 2 186 4 38 1 375 1 108 3 279 1 40 3 188 1 59 1 285 4 46 1 
265 7 289 1 196 8 164 1 363 1 244 1 167 25 145 7 91 1 293 52 117 4 93 1 5 2 249 1 120 2 147 7 173 27 321 1 322 8 181 1 180 4 150 2 296 1 124 1 345 1 101 1 324 14 370 4 183 2 13 1 349 2 256 2 78 1 186 2 38 1 375 1 108 7 279 1 40 4 188 1 59 1 285 7 
239 1 65 1 342 1 343 1 254 1 330 1 8 1 245 1 140 1 151 1 
88 1 371 1 
65 1 342 1 254 1 330 1 373 1 140 1 380 1 374 1 151 1 
99 1 159 1 
89 1 107 1 252 1 
254 1 103 1 2 2 142 1 163 1 245 1 222 1 106 1 342 1 65 1 316 1 343 1 330 1 8 1 171 1 18 1 140 1 151 1 
254 1 103 1 2 2 142 1 163 1 245 1 222 1 106 1 342 1 65 1 316 1 343 1 330 1 8 1 171 1 18 1 140 1 151 1 
254 1 103 1 2 2 142 1 163 1 245 1 222 1 106 1 342 1 65 1 316 1 343 1 330 1 8 1 171 1 18 1 140 1 151 1 
99 1 159 1 107 1 
99 1 159 1 107 1 
89 1 252 1 
89 1 107 1 252 1 
1 1 327 1 
1 1 2 1 88 1 163 1 219 1 291 1 266 2 222 1 168 1 199 1 65 1 342 1 316 1 70 1 72 2 151 1 254 1 371 1 327 1 328 2 237 1 351 1 79 2 330 1 18 1 140 1 216 2 
143 1 166 1 266 2 167 1 365 1 314 1 293 2 267 1 118 1 223 2 95 2 367 1 173 1 320 2 203 1 180 2 71 1 206 1 183 1 349 1 256 1 328 2 186 1 79 2 211 1 240 1 281 1 138 1 60 1 193 2 335 1 
152 1 298 1 232 1 234 1 76 1 277 1 365 1 350 1 314 1 223 2 329 1 225 1 320 2 269 1 270 2 44 1 242 1 243 1 193 2 
298 1 234 1 76 1 277 1 365 1 350 1 314 1 223 1 28 1 225 1 320 1 269 1 270 2 44 1 242 1 243 1 193 1 
232 1 309 1 197 1 37 1 277 1 365 1 314 1 315 1 146 1 223 1 320 1 138 1 203 1 193 1 
298 1 232 1 234 1 76 1 277 1 365 1 350 1 314 1 223 1 329 1 225 1 320 1 269 1 270 2 44 1 242 1 243 1 193 1 
187 1 
142 1 131 1 313 1 160 1 220 1 292 1 81 1 
21 1 142 2 362 1 313 1 222 1 292 1 316 1 202 1 100 1 131 1 136 1 157 1 260 1 378 1 84 1 42 1 161 1 
48 2 142 8 196 2 51 2 90 2 292 2 146 1 198 2 294 1 147 2 148 6 202 4 100 5 203 6 11 1 297 1 152 1 257 2 108 2 157 3 260 4 213 1 355 6 160 1 305 2 263 1 21 6 265 2 313 9 115 2 365 1 222 5 314 2 169 2 223 3 316 5 320 3 121 1 226 3 322 2 34 2 131 8 80 2 81 1 376 1 39 2 136 4 41 1 378 12 84 4 138 1 193 3 
21 3 265 2 47 1 142 5 196 2 164 1 313 8 222 1 292 2 198 1 294 1 117 1 316 1 120 1 147 2 148 5 202 2 100 1 322 2 181 1 345 1 101 1 34 1 131 5 257 2 108 2 40 1 136 2 157 1 188 1 260 2 378 6 84 2 355 5 192 1 
87 1 289 1 196 2 313 2 266 1 222 1 198 1 316 1 202 1 322 1 123 1 228 1 72 1 253 1 75 1 131 2 328 1 257 2 38 1 79 1 136 1 82 1 260 1 59 1 84 1 283 1 216 1 20 1 
142 1 131 1 313 1 292 1 81 1 136 1 260 1 84 1 202 1 160 1 
21 5 265 2 142 5 196 2 131 5 313 5 257 2 198 1 80 1 108 2 147 2 148 5 378 10 355 5 322 2 
316 1 157 1 142 1 100 1 292 1 222 1 
313 2 365 1 222 3 314 1 315 1 146 2 294 2 223 4 316 3 320 4 121 2 202 2 100 4 55 1 203 1 34 2 129 1 131 2 276 1 37 1 238 1 156 1 136 1 157 2 260 2 213 1 84 2 138 1 193 4 
167 1 266 2 365 1 314 1 146 1 293 1 118 1 267 1 223 1 29 1 320 1 203 1 180 2 72 2 127 1 231 1 183 1 233 1 349 1 256 1 75 2 186 1 328 3 351 1 79 3 41 1 138 1 216 2 45 1 335 1 193 1 20 1 
21 2 34 1 142 4 131 2 363 1 313 1 292 2 294 1 136 1 260 1 148 2 378 4 84 1 202 1 355 2 
347 1 65 1 140 1 
347 1 65 1 140 1 
65 1 8 1 327 1 132 1 140 1 
347 1 65 1 140 1 
65 1 318 1 140 1 
65 1 318 1 140 1 
65 1 318 1 140 1 
65 1 140 1 
342 1 151 1 
183 2 289 1 349 2 196 1 256 2 363 1 244 1 78 1 167 4 186 2 38 1 145 1 293 8 375 1 173 4 59 1 322 1 180 4 285 2 324 3 
289 1 196 1 363 1 244 1 167 3 220 1 38 1 375 1 293 6 59 1 173 3 322 1 285 2 324 2 
183 1 265 1 349 1 256 1 196 1 167 2 186 1 145 1 108 1 293 4 147 1 173 2 322 1 180 2 285 1 324 2 125 1 
265 1 196 1 167 4 145 1 108 1 293 7 117 2 40 1 120 1 147 1 173 3 322 1 150 1 285 1 324 2 
265 2 289 2 196 3 363 1 244 1 167 12 145 4 293 23 117 2 5 1 147 2 173 11 322 3 150 1 180 4 324 9 183 2 255 1 349 2 256 2 35 1 78 2 186 2 38 1 375 1 108 2 40 2 59 2 285 5 
167 1 293 1 117 1 
40 1 173 1 293 1 
183 1 265 1 349 1 256 1 196 1 186 1 167 3 145 1 80 1 293 6 108 1 147 1 173 3 322 1 180 2 285 2 125 1 324 3 
265 2 196 2 164 1 167 6 145 1 293 12 91 1 117 1 120 1 147 2 173 6 322 2 180 2 181 1 345 1 101 1 324 2 183 1 349 1 256 1 186 1 108 2 40 1 188 1 285 1 
289 1 196 1 167 3 38 1 145 1 293 6 173 3 59 1 322 1 285 1 324 2 
183 1 289 1 349 1 35 1 256 1 244 1 78 1 167 2 186 1 145 1 375 1 293 3 173 1 59 1 180 2 285 1 324 2 
183 1 289 2 349 1 256 1 196 2 186 1 167 5 38 1 145 2 91 1 293 10 59 2 173 5 322 2 123 1 180 2 285 3 324 5 
183 1 265 1 349 1 256 1 196 1 186 1 145 1 91 1 293 2 173 2 180 2 324 1 
183 1 265 1 349 1 256 1 196 1 167 2 186 1 145 1 108 1 91 1 293 4 147 1 173 2 322 1 180 2 285 1 324 2 
183 3 289 1 349 3 35 1 256 3 78 1 167 2 186 3 145 1 293 3 91 1 59 1 173 1 180 6 285 1 46 1 324 2 
265 3 289 3 196 5 363 1 244 1 167 18 145 5 91 1 293 34 117 4 120 1 147 3 173 16 177 1 322 5 251 1 180 10 150 1 125 1 324 12 183 5 349 5 35 1 256 5 78 2 186 5 38 2 375 1 108 3 40 3 59 3 303 1 285 7 46 1 
289 1 196 1 363 1 244 1 167 4 293 8 91 1 117 1 120 1 173 4 322 1 180 2 324 2 183 1 349 1 256 1 186 1 38 1 375 1 40 1 188 1 59 1 285 2 
265 1 289 1 196 2 363 1 244 1 167 5 145 1 293 11 91 1 117 2 120 1 147 1 173 6 322 1 180 4 150 1 125 1 324 3 183 2 349 2 256 2 186 2 38 1 375 1 40 1 188 1 59 1 285 2 
265 2 289 1 196 3 164 1 363 1 244 1 167 10 145 1 293 19 91 1 117 1 120 1 147 2 173 9 322 3 180 6 181 1 345 1 125 1 101 1 324 4 183 3 349 3 256 3 78 1 186 3 38 1 375 1 108 2 40 1 188 1 59 1 285 3 
265 2 289 1 196 3 164 1 363 1 244 1 167 7 145 2 293 17 91 1 117 1 120 1 147 2 173 10 322 2 180 6 181 1 345 1 125 1 101 1 324 5 183 3 349 3 256 3 78 1 186 3 38 1 375 1 108 1 40 1 188 1 59 1 285 3 
289 1 196 1 363 1 244 1 167 4 293 8 91 1 117 1 120 1 173 4 322 1 180 2 324 2 183 1 349 1 256 1 186 1 38 1 375 1 40 1 188 1 59 1 285 2 
265 2 196 2 164 1 167 6 145 1 293 12 91 1 117 1 120 1 147 2 173 6 322 2 180 2 181 1 345 1 101 1 324 2 183 1 349 1 256 1 186 1 108 2 40 1 188 1 285 1 
265 2 289 1 196 3 164 1 363 1 244 1 167 8 145 2 293 18 91 1 117 1 120 1 147 2 173 10 322 2 181 1 180 8 345 1 125 1 101 1 324 5 183 4 349 4 256 4 78 2 186 4 38 1 375 1 108 1 40 1 188 1 59 1 285 3 
265 3 196 3 164 1 167 7 145 3 293 16 91 1 117 1 120 1 147 3 173 9 322 2 181 1 180 8 345 1 101 1 324 6 183 4 349 4 256 4 78 2 186 4 108 2 40 1 188 1 285 3 46 1 
289 3 196 1 244 1 167 4 38 1 145 3 293 7 375 2 59 3 173 3 322 1 285 3 324 6 
265 2 289 1 196 3 164 1 363 1 244 1 167 8 145 1 293 18 91 1 117 1 120 1 147 2 173 10 322 2 181 1 180 8 345 1 101 1 324 4 183 4 349 4 256 4 78 2 186 4 38 1 375 1 108 1 40 1 188 1 59 1 285 3 46 1 
97 1 175 1 104 1 328 1 266 1 351 1 79 1 
104 1 16 1 266 1 328 1 351 1 79 1 97 1 280 1 215 1 268 1 333 1 175 1 
223 1 320 1 138 1 37 1 203 1 220 1 365 1 314 1 315 1 146 1 193 1 
266 1 328 2 365 1 314 1 146 1 351 1 79 2 223 1 41 1 29 1 320 1 138 1 203 1 216 1 45 1 72 1 193 1 273 1 
266 2 365 1 314 1 92 1 223 1 29 1 119 1 320 1 121 1 203 3 72 1 273 1 230 1 253 2 328 2 351 1 79 2 301 1 41 2 138 2 45 1 216 2 217 1 193 1 
266 2 365 1 314 1 92 1 223 1 29 1 119 1 320 1 121 1 203 3 72 1 273 1 230 1 253 2 274 1 328 2 351 1 79 2 301 1 41 2 138 2 216 2 217 1 193 1 
87 1 142 1 339 1 266 1 292 1 222 1 223 1 316 1 320 1 226 1 121 1 203 1 228 1 72 1 253 1 75 1 328 1 79 1 283 1 216 1 193 1 20 1 
87 1 142 1 266 1 292 1 222 1 223 1 316 1 320 1 226 1 121 1 203 1 228 1 72 1 253 1 75 1 328 1 79 1 283 1 305 1 216 1 193 1 20 1 
223 1 320 1 365 1 56 1 314 1 193 1 
263 1 152 1 298 1 22 1 236 1 56 1 365 2 314 3 146 2 223 7 95 1 52 1 41 1 353 1 320 6 138 2 203 3 358 1 193 7 286 1 206 1 
289 1 196 1 244 1 293 6 201 1 98 1 203 1 152 1 349 2 256 2 351 2 211 1 59 1 216 1 262 1 112 1 363 1 266 1 167 3 365 1 314 1 118 2 267 2 223 1 29 1 367 1 320 1 173 3 322 1 180 4 72 1 273 1 324 2 231 1 127 1 183 2 186 2 328 2 278 1 38 1 79 2 375 1 41 1 138 1 45 1 285 2 193 1 
48 1 142 1 313 1 51 1 115 1 291 1 292 1 222 3 146 1 169 1 223 1 316 3 320 1 202 2 226 1 100 2 203 2 131 1 81 1 39 1 136 2 157 1 260 2 213 1 84 2 160 1 305 1 193 1 
263 1 152 1 56 1 365 1 314 2 39 1 223 2 41 1 320 2 138 1 203 2 11 1 193 2 
102 1 152 1 37 1 365 1 314 1 315 1 146 1 64 1 223 4 320 4 138 1 203 1 193 4 
63 1 365 1 314 2 223 2 52 1 41 1 17 1 320 2 121 1 379 1 138 1 203 1 193 2 286 1 
223 1 225 1 320 1 270 1 44 1 365 1 350 1 314 1 146 1 193 1 
223 2 152 1 298 1 320 2 281 1 138 1 203 1 365 1 314 1 193 2 206 1 
102 1 152 1 22 1 37 1 365 2 315 1 314 2 146 1 223 5 320 4 121 1 138 2 203 3 193 5 358 1 206 1 
102 1 152 1 326 1 22 1 37 1 365 2 315 1 314 2 146 1 223 5 320 4 121 1 138 2 203 3 193 5 206 1 
274 1 266 1 328 2 365 1 314 1 146 1 351 1 79 2 223 1 41 1 29 1 320 1 138 1 203 1 216 1 72 1 193 1 273 1 
263 1 365 1 314 2 223 1 52 1 41 1 353 1 320 1 121 1 138 1 203 1 193 1 286 1 
134 1 299 1 310 1 381 1 351 1 
308 1 87 1 310 1 142 1 266 1 291 1 222 2 292 1 92 1 169 1 316 2 228 1 72 1 230 1 253 2 73 1 299 1 14 1 128 1 75 1 328 1 79 1 134 1 212 1 283 1 216 1 381 1 20 1 
299 1 310 1 143 1 166 1 266 1 328 1 79 1 134 1 60 1 
134 1 73 1 14 1 
209 1 24 1 220 1 31 1 
23 1 209 1 250 1 24 1 31 1 272 1 323 1 
23 1 275 1 109 1 
23 3 360 2 209 1 290 1 184 1 24 1 68 1 250 1 176 1 31 1 272 3 323 1 
23 2 170 1 209 1 250 1 24 1 31 1 272 2 346 1 323 1 
23 1 208 1 68 1 250 1 269 1 270 1 350 1 31 1 272 1 182 1 323 1 
23 1 68 1 250 1 24 1 31 1 272 1 323 1 
23 1 68 1 209 1 250 1 24 2 272 1 323 1 
23 2 361 1 165 1 24 1 68 1 319 1 250 2 31 1 272 2 323 2 
23 3 208 1 218 1 170 2 68 1 209 1 250 1 24 1 31 2 141 1 272 3 26 1 323 1 
23 2 209 1 24 1 350 1 200 1 170 1 68 1 250 1 269 1 44 1 270 2 242 1 31 1 272 2 323 1 
23 4 208 1 218 1 170 2 113 1 68 1 209 1 250 2 24 1 31 2 272 4 346 1 323 2 
23 1 68 1 209 1 250 1 24 1 31 1 272 1 323 1 
23 4 208 1 218 1 170 2 360 1 209 2 250 1 290 1 154 1 184 1 24 2 31 3 272 4 323 1 
23 2 209 1 24 1 258 1 170 1 68 1 250 1 354 1 139 1 31 1 272 2 323 1 
23 3 360 2 209 1 290 1 184 2 24 1 67 1 68 1 250 1 31 1 272 3 323 1 
61 1 195 2 31 2 86 1 
23 1 58 1 68 1 250 1 272 1 323 1 
23 2 170 1 68 1 209 1 250 1 24 1 31 1 141 1 272 2 323 1 
282 1 
23 1 68 1 209 1 250 1 24 1 31 1 272 1 323 1 
23 3 170 1 360 1 68 1 209 1 250 1 24 1 141 1 31 1 272 3 323 1 
208 1 218 1 154 1 31 1 
24 1 31 1 

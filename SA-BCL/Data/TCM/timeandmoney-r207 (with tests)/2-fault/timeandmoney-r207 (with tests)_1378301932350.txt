#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 332 (45,107,237) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 47 186 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 47 186 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 47 186 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 47 186 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 47 186 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
104 3 319 2 368 2 322 1 298 1 286 1 8 2 239 3 148 1 20 1 242 1 231 1 241 1 
257 1 104 9 132 1 286 1 8 2 239 9 108 1 267 1 9 1 292 1 242 1 241 4 319 5 368 2 322 1 298 1 117 2 250 1 148 7 228 1 304 1 20 3 231 1 206 1 
257 1 104 9 132 1 286 1 8 2 239 9 108 1 267 1 9 1 292 1 242 1 241 4 319 5 368 2 322 1 298 1 117 2 250 1 148 7 228 1 304 1 20 3 231 1 206 1 
257 1 128 1 104 9 132 2 5 1 286 1 8 2 239 9 108 2 9 2 267 1 242 1 241 4 319 5 368 2 369 1 341 1 245 1 322 1 298 1 117 2 250 1 148 6 228 1 20 3 348 1 231 2 206 1 
257 1 128 1 104 9 132 2 5 1 286 1 8 2 239 9 108 2 9 2 267 1 242 1 241 4 319 5 368 2 369 1 341 1 245 1 322 1 298 1 117 2 250 1 148 6 228 1 20 3 348 1 231 2 206 1 
257 1 128 1 104 10 132 2 5 1 286 1 8 2 239 10 108 2 9 2 267 1 242 1 241 5 319 6 368 2 369 1 341 1 245 1 322 1 298 1 117 2 250 1 148 7 228 1 20 4 348 1 231 2 206 1 
128 1 104 7 132 2 5 1 286 1 8 2 239 7 108 2 9 2 267 1 242 1 241 3 319 4 368 2 369 1 341 1 245 1 322 1 298 1 117 1 250 1 148 4 228 1 20 2 348 1 231 2 206 1 
257 1 104 4 132 1 319 3 368 1 322 1 298 1 117 2 8 1 239 4 250 1 108 1 148 3 9 1 228 1 20 1 242 1 241 2 
128 1 104 2 319 1 132 1 368 1 209 1 369 1 322 1 298 1 8 1 239 2 108 1 242 1 231 1 50 1 90 1 
366 1 339 1 94 1 18 1 17 1 162 1 153 1 7 1 100 1 218 1 59 1 167 1 22 1 373 1 
308 1 
184 1 218 1 136 1 230 1 308 1 153 2 333 1 100 2 
187 2 81 1 82 2 145 2 308 1 153 5 343 1 247 1 333 2 106 1 100 5 335 1 184 1 278 1 218 2 175 1 230 1 221 1 64 1 
230 1 96 1 308 1 
150 2 133 1 308 1 
33 1 339 2 17 2 162 2 7 2 167 2 22 2 373 1 
234 1 127 1 1 1 236 1 25 1 53 2 212 1 7 2 189 2 334 1 310 1 219 1 33 1 135 1 358 1 137 1 271 1 317 1 10 1 67 1 338 1 140 2 339 2 115 1 146 1 17 3 162 3 249 1 79 1 251 1 346 2 229 2 204 1 167 2 22 2 373 1 327 1 
366 1 339 1 59 1 17 1 18 1 162 1 7 1 167 1 22 1 373 1 
170 1 17 1 162 1 308 1 153 1 7 1 214 1 100 1 303 1 230 1 59 1 347 1 89 1 326 1 
170 1 339 1 17 1 162 1 308 1 153 2 7 1 100 2 303 1 230 1 59 1 347 1 167 1 22 1 89 1 
218 1 210 1 153 1 333 1 100 1 
184 1 226 1 218 1 230 1 308 1 153 2 333 1 100 2 
153 1 333 1 100 1 
339 1 17 2 162 2 7 2 33 2 178 1 167 1 195 1 22 1 
275 1 262 1 374 1 
127 1 140 1 1 1 115 1 25 1 17 1 162 1 249 1 79 1 251 1 219 1 33 1 346 1 229 1 60 1 137 1 
33 1 96 1 
33 1 339 1 17 3 162 3 154 1 7 3 167 3 22 3 
366 1 59 1 17 1 162 1 7 1 167 1 22 1 
339 1 59 1 17 1 178 1 162 1 7 1 167 1 195 1 22 1 
234 1 170 1 127 1 1 1 25 1 53 2 154 1 153 1 7 3 189 1 334 1 216 1 310 1 219 1 174 1 33 1 358 1 59 1 137 1 178 1 317 1 10 1 89 1 338 1 140 1 115 1 339 2 146 1 17 4 162 4 249 1 100 1 79 1 251 1 346 1 303 1 229 1 347 1 204 1 279 1 167 3 22 3 373 1 327 1 
290 1 33 1 17 2 162 2 154 1 7 2 167 1 22 1 326 1 
170 1 339 1 17 3 162 3 308 1 153 1 154 2 7 3 100 1 216 1 174 1 293 1 303 1 59 1 347 1 178 1 167 3 22 3 89 1 
275 1 339 1 17 2 162 2 154 1 262 1 7 2 178 1 167 2 22 2 
127 1 140 1 1 1 115 1 25 1 17 1 162 1 249 1 79 1 251 1 219 1 33 1 346 1 229 1 137 1 
127 1 140 1 1 1 25 1 17 1 284 1 162 1 79 1 251 1 219 1 33 1 346 1 229 1 193 1 137 1 
234 2 130 1 260 1 53 2 212 2 262 2 355 1 189 4 334 1 310 1 357 1 358 1 192 1 37 1 317 1 196 1 197 1 275 2 371 1 46 1 204 1 49 1 327 1 374 2 
59 1 17 1 211 1 162 1 7 1 167 1 89 1 22 1 
127 1 275 1 1 1 140 1 115 1 25 1 17 2 162 2 154 1 7 1 249 1 79 1 219 1 251 1 174 1 346 1 229 1 137 1 167 1 22 1 
339 1 17 5 162 5 154 2 7 5 56 1 290 1 174 1 33 1 345 1 178 1 167 4 22 4 326 1 
366 1 59 1 211 1 17 2 162 2 7 2 167 2 22 2 
45 1 223 1 332 1 107 1 
45 1 237 1 223 1 
45 1 223 1 
45 1 223 1 
332 1 107 1 
332 1 107 1 
332 1 107 1 
45 1 223 1 40 1 
45 1 223 1 40 1 
45 1 223 1 40 1 
45 1 223 1 321 1 
45 1 223 1 321 1 
45 1 223 1 321 1 
259 1 237 1 4 1 83 1 153 1 6 1 7 2 33 1 66 1 41 1 93 1 14 1 223 1 17 2 162 2 99 1 100 1 301 1 77 1 45 1 255 1 167 2 22 2 169 1 
41 1 180 1 258 1 93 2 223 2 306 1 308 1 83 2 153 2 6 2 100 2 77 2 301 3 45 2 361 1 39 2 168 1 318 1 23 1 
108 2 9 1 248 1 50 1 337 2 
108 1 9 1 132 1 
108 1 132 1 50 1 
108 3 185 1 9 2 248 1 50 1 337 1 
108 2 9 1 248 1 75 1 50 1 337 1 
187 1 130 1 259 1 283 1 133 1 82 1 153 5 308 2 333 1 156 1 171 1 110 2 218 4 112 2 64 1 197 1 14 1 340 1 145 1 371 1 43 1 343 3 247 2 325 1 100 5 184 1 150 3 230 1 49 1 207 1 169 1 329 2 
187 2 81 1 130 3 259 4 133 3 210 5 82 2 28 1 153 9 308 5 333 6 156 2 110 6 218 7 35 1 270 1 112 6 64 1 197 3 340 3 143 5 15 1 145 2 116 1 371 3 97 1 43 1 343 8 247 6 100 9 184 1 150 9 230 1 49 3 207 2 
187 1 81 1 130 1 259 1 133 2 82 1 308 3 153 3 156 1 171 1 218 2 110 2 112 2 197 1 340 1 145 1 371 1 343 3 325 1 247 2 100 3 150 4 230 1 207 1 49 1 329 1 
187 1 81 1 130 2 259 2 133 3 82 1 308 4 28 1 153 4 156 1 171 1 110 4 218 3 112 4 197 2 340 2 145 1 116 1 371 2 97 1 343 5 325 1 247 4 100 4 150 7 230 1 207 1 49 2 329 2 
88 1 
137 1 96 1 349 1 
219 1 137 1 
1 1 219 1 261 1 137 3 349 2 277 1 
1 1 219 1 137 1 
137 1 352 1 
227 1 137 1 
234 3 131 1 295 1 3 1 72 1 74 1 371 1 212 4 29 1 276 1 189 7 299 1 302 1 121 2 192 3 37 2 360 1 49 1 
234 15 130 3 131 2 3 1 53 2 212 16 189 31 289 1 310 1 336 1 192 10 37 5 360 1 317 1 197 3 139 3 92 1 295 2 340 3 160 1 72 2 74 2 371 4 276 1 299 1 44 1 121 3 302 5 123 4 204 1 102 1 49 4 327 1 328 1 
234 4 131 1 3 1 53 4 212 5 189 9 310 2 192 4 37 3 360 1 317 2 11 1 13 1 92 1 295 1 72 1 74 1 371 1 276 1 121 2 302 1 204 2 49 1 327 2 
234 3 131 1 295 1 3 1 72 1 74 1 371 1 212 4 189 7 276 1 299 1 302 1 121 2 192 3 37 2 360 1 49 1 
234 3 131 1 295 1 3 1 72 1 74 1 371 1 212 4 189 7 276 1 299 1 302 1 121 2 192 3 37 2 360 1 49 1 
127 1 104 1 25 1 263 2 8 1 55 1 239 1 265 2 219 1 240 1 137 1 62 1 140 1 368 1 224 1 120 1 79 1 166 1 346 1 229 1 231 2 205 1 330 2 
127 1 199 1 140 1 200 1 104 1 132 1 161 1 368 1 25 1 322 1 263 1 8 1 239 1 108 2 265 1 86 1 185 1 9 1 346 1 229 1 36 1 61 1 231 1 179 1 50 1 330 1 
127 1 235 1 104 2 132 1 25 1 263 1 8 1 239 2 265 1 108 2 86 1 9 1 36 1 61 1 242 1 140 1 199 1 200 1 319 1 368 1 161 1 322 1 298 1 148 1 185 1 346 1 229 1 231 1 50 1 330 1 
127 1 104 3 132 1 25 1 263 1 8 1 239 3 265 1 108 2 311 1 9 1 36 1 61 1 242 1 179 1 140 1 199 1 200 1 319 1 368 1 161 1 298 1 148 2 185 1 166 1 346 1 229 1 231 1 50 1 330 1 
127 1 104 2 132 1 25 1 263 1 239 2 265 1 108 2 311 1 9 1 61 1 242 1 179 1 140 1 199 1 200 1 319 1 298 1 148 2 185 1 346 1 229 1 231 1 50 1 330 1 
282 1 
151 1 187 1 52 2 153 4 7 1 333 5 105 2 287 1 59 1 159 5 63 2 64 1 68 1 71 1 17 1 162 1 118 1 343 1 247 1 303 1 80 3 347 1 125 3 254 2 170 1 82 1 133 2 308 1 214 1 87 1 177 1 89 1 272 1 141 1 181 1 144 3 145 1 324 1 100 4 184 2 230 1 326 1 
170 1 151 1 187 1 52 2 133 2 82 1 308 1 153 4 7 1 333 5 105 2 214 1 287 1 87 1 59 1 177 1 63 2 159 5 64 1 272 1 89 1 68 1 181 1 141 1 71 1 145 1 144 3 17 1 162 1 324 1 343 1 118 1 247 1 100 4 184 2 303 1 230 1 347 1 80 3 125 3 254 2 326 1 
151 1 170 1 187 1 82 1 308 1 153 4 7 1 333 4 105 2 214 1 172 2 59 1 177 1 159 4 64 1 272 1 89 1 273 1 68 1 181 1 365 1 71 1 144 2 145 1 17 1 162 1 343 1 247 1 100 4 184 2 101 2 150 2 303 1 230 1 80 2 347 1 125 2 254 2 326 1 
151 1 187 1 52 2 153 5 7 1 333 6 105 2 55 1 156 1 59 1 63 2 159 4 64 1 65 1 68 1 71 1 17 1 162 1 343 2 247 2 120 1 79 2 346 2 303 1 80 2 347 1 125 2 254 2 126 1 170 1 127 1 133 2 82 1 25 1 308 2 353 1 354 1 214 1 219 1 177 1 137 1 89 1 272 1 273 1 140 2 181 1 144 2 145 1 324 1 100 5 184 3 150 2 229 2 230 1 326 1 
170 1 151 1 153 3 7 1 333 2 214 1 136 1 59 1 177 1 159 2 89 1 68 1 181 1 71 1 17 1 162 1 100 3 184 1 303 1 347 1 80 1 326 1 
170 1 151 1 153 3 308 1 7 1 333 1 214 1 136 1 59 1 177 1 159 3 89 1 68 1 181 1 71 1 17 1 162 1 100 3 184 1 303 1 230 1 347 1 125 1 326 1 
170 1 151 1 153 3 308 1 7 1 333 2 214 1 136 1 59 1 177 1 159 3 89 1 68 1 181 1 71 1 144 1 17 1 162 1 100 3 184 1 303 1 230 1 347 1 80 1 125 1 326 1 
151 1 170 1 187 1 52 2 133 2 82 1 308 5 153 5 7 1 333 7 105 2 214 1 287 1 58 1 87 1 136 1 59 1 177 1 63 2 159 6 64 1 272 1 89 1 68 1 141 1 181 1 71 1 145 1 144 4 17 1 162 1 324 1 343 1 118 1 247 1 100 5 184 3 303 1 230 5 347 1 80 4 125 4 254 2 326 1 
151 1 187 1 52 2 153 4 7 1 333 4 105 2 59 1 159 4 63 2 64 1 68 1 71 1 17 1 162 1 343 1 247 1 303 1 347 1 80 2 125 2 254 2 170 1 82 1 133 2 308 2 214 1 177 1 89 1 272 1 273 1 181 1 145 1 144 2 324 1 100 4 184 2 150 2 230 1 326 1 
170 1 151 1 187 1 52 2 133 2 82 1 308 1 153 4 7 1 333 4 105 2 214 1 287 1 87 1 59 1 177 1 63 2 159 4 64 1 272 1 89 1 68 1 181 1 71 1 144 2 145 1 17 1 162 1 324 1 343 1 118 1 247 1 100 4 184 2 303 1 230 1 80 2 347 1 125 2 254 2 326 1 
170 1 151 1 187 1 52 2 133 2 82 1 308 1 153 4 7 1 333 4 105 2 214 1 287 1 87 1 59 1 177 1 63 2 159 4 64 1 272 1 89 1 68 1 181 1 71 1 144 2 145 1 17 1 162 1 324 1 343 1 118 1 247 1 100 4 184 2 303 1 230 1 80 2 347 1 125 2 254 2 326 1 
170 1 151 1 187 1 82 1 308 1 153 4 7 1 333 4 105 2 214 1 172 2 87 1 59 1 111 1 177 1 159 4 64 1 272 1 89 1 68 1 365 1 181 1 71 1 144 2 145 1 17 1 162 1 343 1 119 1 247 1 100 4 184 2 101 2 150 2 303 1 230 1 80 2 347 1 125 2 254 2 326 1 
234 1 127 2 235 1 236 2 25 2 53 4 154 1 212 1 7 1 213 1 355 1 189 2 55 1 334 2 310 2 219 2 176 1 358 2 137 3 271 1 113 1 317 2 179 1 140 8 114 1 320 1 17 1 146 1 162 1 183 1 120 1 79 2 346 8 252 1 229 7 204 2 167 1 22 1 327 2 
234 2 103 1 130 1 53 2 262 1 212 1 7 1 189 3 334 1 310 1 358 1 192 1 178 1 37 1 317 1 197 1 275 1 339 1 340 1 17 1 162 1 371 1 78 1 204 1 167 1 22 1 49 1 374 1 327 1 
234 3 131 1 3 1 53 2 262 1 212 3 355 1 189 6 334 1 310 1 33 2 358 1 192 2 37 2 360 1 317 1 275 1 295 1 96 1 371 1 276 1 121 1 204 1 49 1 327 1 374 1 
234 6 130 1 2 1 53 4 212 8 262 4 189 14 334 2 310 2 33 1 358 1 336 1 192 2 271 1 37 1 194 1 317 2 197 2 139 3 275 11 340 2 146 1 371 1 78 1 44 1 302 1 123 3 204 2 280 1 49 2 327 2 374 11 51 1 
234 1 127 1 1 1 188 1 25 1 53 2 262 1 154 1 212 1 7 1 189 2 334 1 310 1 219 1 174 1 33 1 32 1 358 1 60 1 137 1 271 1 317 1 140 1 115 1 17 2 146 1 162 2 249 1 78 1 79 1 251 1 346 1 229 1 149 1 204 1 167 1 22 1 327 1 
234 10 1 2 3 1 53 6 154 1 7 1 189 20 334 3 192 8 10 2 197 2 69 2 295 1 115 2 340 2 16 2 17 3 162 3 249 2 78 1 121 1 79 1 302 4 251 2 346 3 204 3 167 1 22 1 127 2 130 2 131 1 25 2 262 7 212 10 85 2 310 3 174 1 219 2 33 2 358 3 314 1 34 1 137 2 271 1 37 4 360 1 316 2 317 3 179 1 140 3 275 7 146 1 371 3 182 1 276 1 229 3 49 3 327 3 374 7 
275 1 260 1 53 2 262 1 212 2 189 2 355 1 334 1 302 1 310 1 358 1 192 1 204 1 317 1 49 1 374 1 327 1 197 1 
234 2 275 1 130 1 53 2 371 1 262 1 189 2 355 1 334 1 310 1 358 1 357 1 192 1 204 1 37 1 317 1 374 1 327 1 
234 2 130 1 53 2 212 2 262 2 355 1 189 4 334 1 310 1 358 1 192 2 37 1 317 1 197 1 275 2 340 1 371 1 302 1 204 1 49 1 327 1 374 2 
275 1 260 1 53 2 262 1 212 2 213 1 189 2 334 1 302 1 310 1 358 1 192 1 204 1 317 1 49 1 374 1 327 1 197 1 
234 2 275 1 130 1 53 2 371 1 262 1 213 1 189 2 334 1 310 1 358 1 357 1 192 1 204 1 37 1 317 1 374 1 327 1 
234 2 130 1 53 2 212 2 262 2 213 1 189 4 334 1 310 1 358 1 192 2 37 1 317 1 197 1 275 2 340 1 371 1 302 1 204 1 49 1 327 1 374 2 
234 2 130 1 53 2 212 2 262 2 189 4 334 1 310 1 358 1 192 2 37 1 317 1 197 1 275 2 340 1 371 1 302 1 204 1 49 1 327 1 374 2 
234 1 127 1 1 1 25 1 53 2 212 1 189 2 334 1 310 1 219 1 33 1 358 1 137 1 271 1 317 1 10 1 140 1 115 1 17 1 146 1 162 1 249 1 79 1 251 1 346 1 229 1 204 1 327 1 
234 1 127 1 1 1 25 1 284 1 53 2 212 1 189 2 334 1 310 1 219 1 33 1 220 1 358 1 193 1 137 1 271 1 317 1 140 1 17 1 146 1 162 1 79 1 251 1 346 1 229 1 204 1 327 1 
234 2 130 1 53 2 212 2 262 2 189 4 334 1 310 1 358 1 192 2 37 1 317 1 197 1 275 2 340 1 371 1 78 1 302 1 204 1 49 1 327 1 374 2 
234 2 127 1 1 1 235 1 130 1 25 1 53 2 262 2 212 2 189 4 334 1 310 1 219 1 358 1 192 2 137 1 37 1 316 1 317 1 10 1 197 1 275 2 140 1 115 1 340 1 17 1 371 1 162 1 249 1 302 1 251 1 346 1 229 1 204 1 49 1 374 2 327 1 
234 1 331 1 130 1 53 2 212 2 262 1 7 1 189 3 334 1 310 1 358 1 192 1 178 1 317 1 197 1 275 1 339 1 340 1 17 1 371 1 162 1 78 1 302 1 204 1 167 1 22 1 49 1 327 1 374 1 
13 1 310 1 53 2 204 1 47 1 317 1 186 1 327 1 76 1 
13 1 310 1 53 2 204 1 47 1 317 1 186 1 327 1 76 1 
13 1 310 1 53 2 204 1 47 1 317 1 186 1 327 1 76 1 
13 1 310 1 53 2 204 1 47 1 317 1 186 1 327 1 76 1 
13 1 310 1 53 2 204 1 47 1 317 1 186 1 327 1 76 1 
77 1 45 1 93 1 142 1 223 1 306 1 361 1 83 1 6 1 23 1 
237 1 99 1 
77 1 45 1 93 1 223 1 305 1 73 1 83 1 6 1 190 1 
40 1 309 1 
222 1 31 1 321 1 
41 1 180 1 93 1 223 1 306 1 308 1 153 1 83 1 6 1 100 1 77 1 301 2 45 1 361 1 39 1 168 1 318 1 23 1 
41 1 180 1 93 1 223 1 306 1 308 1 153 1 83 1 6 1 100 1 77 1 301 2 45 1 361 1 39 1 168 1 318 1 23 1 
41 1 180 1 93 1 223 1 306 1 308 1 153 1 83 1 6 1 100 1 77 1 301 2 45 1 361 1 39 1 168 1 318 1 23 1 
31 1 40 1 309 1 
31 1 40 1 309 1 
222 1 321 1 
222 1 31 1 321 1 
4 1 66 1 
259 1 237 1 4 1 153 1 83 1 6 1 7 2 215 1 218 1 33 1 39 1 66 1 180 1 93 1 14 1 223 1 17 2 162 2 99 1 100 1 77 1 301 1 45 1 255 1 167 2 22 2 169 1 
234 1 127 1 236 2 25 1 53 2 212 1 7 2 189 2 334 1 310 1 219 1 358 1 137 1 271 1 317 1 362 1 140 2 320 1 17 2 146 1 162 2 183 1 225 1 78 1 165 1 346 2 229 2 253 1 204 1 327 1 351 1 
127 1 140 1 25 1 26 1 55 1 265 1 120 1 79 1 219 1 313 1 346 1 229 1 137 1 62 1 
127 1 140 1 200 1 132 1 161 1 25 1 246 1 372 1 108 2 265 1 185 1 9 1 313 1 346 1 229 1 61 1 179 1 50 1 
127 1 140 2 235 1 200 1 132 1 161 1 25 1 246 1 372 1 108 2 265 1 185 1 9 1 313 1 346 2 229 2 61 1 179 1 50 1 
127 1 140 1 200 1 132 1 161 1 25 1 372 1 108 2 265 1 185 1 9 1 346 1 229 1 61 1 179 1 281 1 50 1 
232 1 
187 1 82 1 145 1 308 1 343 1 247 1 106 1 278 1 230 1 64 1 
69 1 130 2 340 2 133 5 42 1 371 2 308 5 343 5 247 5 191 2 110 5 150 10 112 5 49 2 197 2 
184 1 230 1 308 1 153 1 333 1 100 1 
127 1 187 2 81 1 25 1 82 2 353 1 153 3 333 4 354 2 156 2 55 1 219 1 137 1 64 1 274 1 140 4 296 1 145 2 323 2 343 2 247 2 100 3 120 1 79 2 184 2 346 4 229 4 203 1 126 1 
234 1 127 1 1 1 25 1 53 2 7 2 189 1 334 1 310 1 219 1 33 1 358 1 137 1 317 1 10 1 338 1 140 1 339 2 115 1 146 1 17 3 162 3 249 1 79 1 251 1 346 1 229 1 204 1 167 2 22 2 373 1 327 1 
187 1 133 2 82 1 145 1 308 4 343 1 247 2 354 1 156 1 121 1 110 2 150 4 230 2 112 2 64 1 
278 1 230 1 96 1 308 1 343 1 247 1 106 1 
187 1 52 1 133 1 82 1 308 2 153 1 333 1 63 1 64 1 145 1 324 1 343 1 247 1 100 1 184 1 150 1 230 1 
187 4 235 1 1 3 153 5 155 2 333 5 156 2 106 1 191 2 110 6 112 6 64 4 197 2 69 2 340 2 343 9 247 8 79 1 346 3 347 2 203 1 21 2 349 2 24 1 127 3 129 1 130 2 25 4 82 4 307 1 134 2 133 6 352 2 308 8 354 1 264 2 217 2 219 3 137 10 363 2 140 3 145 4 42 2 371 2 323 1 277 1 100 5 184 3 278 1 227 3 229 3 150 12 230 2 49 2 
187 2 130 2 82 2 133 3 153 1 308 5 354 1 333 1 156 1 57 1 158 1 191 2 30 1 110 5 336 1 315 1 269 1 112 5 64 2 197 2 139 1 367 1 70 1 340 2 145 2 42 1 371 2 343 8 247 5 100 1 184 1 150 6 123 1 230 2 49 2 
187 1 131 1 82 1 153 1 7 1 287 1 191 2 59 1 360 1 64 1 366 1 295 1 339 1 145 1 94 1 17 1 18 1 42 1 162 1 371 1 98 1 343 2 247 2 100 1 167 1 49 2 22 1 373 1 
0 1 93 1 306 1 6 1 66 1 
208 1 93 1 6 1 
208 1 93 1 6 1 
208 1 93 1 6 1 
93 1 268 1 6 1 
93 1 268 1 6 1 
93 1 268 1 6 1 
93 1 6 1 
45 1 223 1 
13 1 234 5 131 2 295 2 53 2 371 2 212 5 98 1 189 10 310 1 302 2 192 5 204 1 37 3 360 1 317 1 49 2 327 1 
13 1 53 2 212 2 189 2 310 1 302 1 192 1 204 1 317 1 49 1 327 1 197 1 
234 2 13 1 130 1 340 1 53 2 371 1 212 2 189 4 310 1 302 1 192 2 204 1 37 1 317 1 49 1 327 1 197 1 
234 2 13 1 92 1 131 1 295 1 53 6 84 1 212 1 189 3 310 3 302 1 19 1 192 2 204 3 37 1 317 3 327 3 
234 18 130 3 131 3 3 1 53 10 54 1 84 1 212 16 189 34 289 1 310 5 336 1 192 12 37 7 360 2 317 5 197 3 13 1 139 3 92 2 295 3 160 1 340 3 371 5 276 1 44 1 121 1 302 5 19 1 123 4 204 5 49 5 328 1 327 5 
234 4 131 1 3 1 53 2 212 4 189 8 310 1 336 1 315 1 192 2 37 2 360 1 317 1 139 1 13 1 295 1 371 1 276 1 121 1 123 1 204 1 49 1 327 1 
234 5 131 1 3 1 53 4 54 1 212 6 189 11 310 2 336 1 315 1 192 3 37 2 360 1 317 2 197 1 13 1 139 1 295 1 340 1 371 1 276 1 44 1 121 1 302 1 123 2 204 2 49 2 327 2 
234 10 130 2 131 1 3 1 53 6 54 1 212 9 189 19 57 1 158 1 310 3 336 1 315 1 192 4 37 3 360 1 317 3 197 2 139 1 13 1 92 1 367 1 70 1 295 1 340 2 371 3 276 1 121 1 302 1 123 1 204 3 49 3 327 3 
234 7 130 1 131 1 3 1 53 6 54 1 212 10 189 17 57 1 158 1 310 3 336 1 315 1 192 5 37 3 360 1 317 3 197 2 139 1 13 1 92 1 367 1 70 1 295 1 340 2 371 2 276 1 121 1 302 2 123 1 204 3 49 3 327 3 
234 4 131 1 3 1 53 2 212 4 189 8 310 1 336 1 315 1 192 2 37 2 360 1 317 1 139 1 13 1 295 1 371 1 276 1 121 1 123 1 204 1 49 1 327 1 
234 6 130 2 53 2 212 6 189 12 57 1 158 1 310 1 336 1 315 1 192 2 37 1 317 1 197 2 139 1 13 1 367 1 70 1 340 2 371 2 302 1 123 1 204 1 49 2 327 1 
234 8 130 1 131 1 3 1 53 8 54 1 212 10 189 18 57 1 158 1 310 4 336 1 315 1 192 5 37 3 360 1 317 4 197 2 13 1 139 1 92 2 367 1 70 1 295 1 340 2 371 2 276 1 121 1 302 2 123 1 204 4 49 3 327 4 
234 7 130 2 53 8 84 1 212 9 189 16 57 1 158 1 310 4 336 1 315 1 192 6 37 3 317 4 197 3 13 1 139 1 92 2 367 1 70 1 340 3 371 2 302 3 123 1 204 4 49 3 327 4 
234 4 131 3 3 1 295 3 371 1 212 3 189 7 276 2 302 3 192 6 37 3 360 1 49 1 
234 8 130 1 131 1 3 1 53 8 84 1 212 10 189 18 57 1 158 1 310 4 336 1 315 1 192 4 37 3 360 1 317 4 197 2 13 1 139 1 92 2 367 1 70 1 295 1 340 2 371 2 276 1 121 1 302 1 123 1 204 4 49 3 327 4 
234 4 92 1 131 1 3 1 295 1 53 4 371 1 212 4 189 8 276 1 121 1 302 1 310 2 192 3 204 2 37 2 360 1 317 2 49 1 327 2 
234 3 121 1 131 1 295 1 3 1 192 2 96 1 371 1 37 2 212 3 360 1 49 1 189 6 276 1 
234 2 130 1 340 1 53 2 371 1 54 1 212 2 189 4 310 1 302 1 192 2 204 1 37 1 317 1 49 1 327 1 197 1 
234 4 139 1 130 1 340 1 371 1 212 3 189 7 44 1 302 1 123 2 336 1 192 2 37 1 49 1 197 1 
234 12 130 2 131 2 3 1 53 4 212 11 189 23 310 2 192 9 37 5 360 1 194 1 317 2 197 2 139 2 92 2 295 2 340 2 371 3 276 1 44 1 121 1 302 4 19 1 123 2 204 2 280 1 49 3 327 2 
234 1 123 1 189 1 
139 1 212 1 189 1 
234 3 69 1 130 1 340 1 53 2 54 1 371 1 212 3 189 6 310 1 302 1 192 3 204 1 37 2 317 1 49 1 327 1 197 1 
234 6 130 2 53 2 212 6 189 12 57 1 158 1 310 1 336 1 315 1 192 2 37 1 317 1 197 2 139 1 13 1 367 1 70 1 340 2 371 2 302 1 123 1 204 1 49 2 327 1 
234 3 131 1 295 1 371 1 212 3 189 6 302 1 192 2 37 1 360 1 49 1 
234 2 92 1 131 1 295 1 3 1 53 2 212 1 276 1 189 3 302 1 310 1 19 1 192 2 204 1 37 1 317 1 327 1 
238 1 17 1 162 1 163 1 7 1 122 1 290 1 33 1 356 1 201 1 326 1 350 1 
290 1 33 1 356 1 17 1 162 1 7 1 326 1 
127 1 140 4 235 1 25 1 147 1 55 1 120 1 79 1 219 1 346 4 229 4 137 1 138 1 
127 1 140 2 1 1 25 2 323 1 344 1 173 1 312 1 219 1 346 2 229 2 314 1 137 1 359 1 
108 1 127 1 140 1 79 1 346 1 132 1 229 1 25 1 61 1 50 1 
127 1 235 1 140 2 25 1 183 1 219 1 346 2 229 2 137 1 179 1 351 1 
127 2 140 5 235 1 25 2 323 1 183 1 147 1 55 1 120 1 79 1 219 2 346 5 229 4 252 1 137 3 113 1 
127 2 140 5 235 1 25 2 323 1 183 1 147 1 55 1 120 1 79 1 219 2 346 5 229 4 252 1 202 1 137 3 
120 1 127 1 140 1 79 1 219 1 346 1 229 1 25 1 137 1 96 1 55 1 
127 1 1 1 140 1 25 1 17 2 162 2 154 1 7 1 79 1 219 1 251 1 33 1 346 1 229 1 137 1 193 1 167 1 22 1 
127 1 140 1 1 1 25 2 152 1 323 1 277 1 344 1 173 1 219 1 346 1 229 1 137 1 
127 1 1 1 140 1 25 1 17 2 162 2 154 1 7 1 249 1 79 1 219 1 251 1 33 1 346 1 229 1 137 1 167 1 22 1 
127 1 1 2 25 1 134 1 154 1 352 1 7 2 219 2 33 1 59 1 137 3 89 1 140 1 17 2 162 2 323 1 249 1 251 1 346 1 229 1 303 1 167 1 22 2 
127 1 1 2 25 1 134 1 154 1 352 1 7 2 219 2 33 1 59 1 193 1 137 3 89 1 138 1 140 2 17 2 162 2 323 1 251 1 346 2 229 2 303 1 167 1 22 2 
127 1 1 1 140 3 134 1 25 1 308 1 352 1 153 2 323 1 285 1 333 1 100 2 79 1 219 1 346 3 227 1 229 3 230 1 347 1 137 4 48 1 349 1 138 1 
127 1 1 1 140 3 134 1 25 1 308 1 352 1 153 2 323 1 155 1 333 1 100 2 79 1 219 1 346 3 227 1 229 3 230 1 347 1 137 4 349 1 138 1 
127 1 140 1 346 1 229 1 176 1 25 1 
127 2 235 1 140 7 1 1 236 1 114 1 25 3 152 1 183 1 277 1 344 1 79 2 173 1 219 2 346 7 176 1 252 1 229 6 137 3 113 1 179 1 
234 3 235 1 1 1 3 1 53 4 154 1 7 1 189 6 334 2 192 2 10 1 115 1 295 1 16 1 17 2 162 2 249 1 78 1 121 1 251 1 346 1 204 2 167 1 22 1 127 1 131 1 25 1 262 1 212 3 310 2 219 1 33 2 358 2 137 1 37 2 316 1 360 1 317 2 140 1 275 1 371 1 276 1 225 1 229 1 49 1 327 2 374 1 
187 2 82 2 308 1 153 3 155 1 333 2 106 1 217 1 218 1 137 2 64 2 363 1 140 1 145 2 343 1 247 1 100 3 79 1 184 1 278 1 346 1 227 1 229 1 230 1 347 1 203 1 21 1 349 1 
127 1 235 1 140 2 1 1 307 1 25 2 277 1 219 1 346 2 176 1 229 2 137 2 349 1 
364 1 17 1 162 1 7 1 165 1 253 1 233 1 12 1 362 1 
364 1 370 1 164 1 
364 1 33 1 294 1 233 1 12 1 
170 1 364 1 370 1 308 1 153 2 164 1 100 2 216 1 266 1 218 1 33 1 303 1 230 1 59 1 294 2 347 1 233 2 89 1 12 2 
104 1 319 1 368 1 242 1 322 1 298 1 8 1 239 1 
128 1 104 4 319 3 368 1 95 1 244 1 298 2 8 1 300 1 239 4 148 2 20 1 242 2 241 1 
104 2 319 1 368 1 297 1 322 1 342 1 298 1 8 1 239 2 148 1 304 1 242 1 
128 2 104 3 319 1 368 1 95 2 244 1 242 1 256 1 322 1 298 1 8 1 239 3 
319 2 198 1 288 2 91 1 
104 1 368 1 124 1 322 1 8 1 239 1 
148 1 104 2 319 1 368 1 242 1 322 1 298 1 206 1 8 1 239 2 
38 1 
104 1 319 1 368 1 242 1 322 1 298 1 8 1 239 1 
128 1 104 3 319 1 368 1 322 1 298 1 8 1 239 3 148 1 242 1 206 1 
319 1 20 1 241 1 300 1 
319 1 242 1 
319 1 96 1 242 1 298 1 
104 1 319 1 368 1 242 1 298 1 8 1 239 1 
231 1 330 1 239 1 
128 2 104 3 319 1 368 1 95 1 244 1 322 1 298 1 8 1 239 3 242 1 243 1 
148 1 104 2 319 1 368 1 242 1 298 1 117 1 8 1 239 2 
104 1 319 1 132 1 368 1 322 1 8 1 239 1 250 1 108 1 9 1 241 1 
104 1 319 1 368 1 242 1 322 1 8 1 239 1 
104 1 368 1 242 2 322 1 298 1 8 1 239 1 
104 2 319 1 368 2 27 1 322 1 8 2 157 1 239 2 109 1 242 1 
104 3 319 2 368 1 322 1 298 1 8 1 239 3 148 2 267 1 20 1 242 1 241 1 206 1 
104 2 319 1 132 1 368 1 322 1 298 1 8 1 239 2 108 2 148 1 291 1 185 1 9 1 242 1 50 1 
257 1 104 4 319 2 368 2 322 1 298 1 117 1 8 2 239 4 148 2 20 1 242 1 241 1 

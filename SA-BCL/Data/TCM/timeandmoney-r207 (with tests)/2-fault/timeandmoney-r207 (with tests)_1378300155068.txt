#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 40 376 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 40 376 311 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 40 376 359 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 40 376 359 157 290 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 40 376 359 157 290 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 40 376 359 157 199 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 40 376 324 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 40 376 324 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 40 376 359 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
259 1 34 2 263 1 159 1 243 1 105 4 146 1 248 5 304 1 69 2 305 2 16 9 133 2 42 9 113 3 18 6 217 1 367 2 45 1 220 1 140 1 286 1 228 1 118 2 177 2 120 1 232 1 289 1 
259 1 34 2 263 1 159 1 243 1 105 4 146 1 248 5 304 1 69 2 305 2 16 9 42 9 133 2 113 3 18 6 217 1 367 2 45 1 220 1 140 1 286 1 228 1 118 2 177 2 120 1 232 1 289 1 
259 1 34 2 263 1 159 1 243 1 105 5 146 1 248 6 304 1 69 2 305 2 16 10 42 10 133 2 113 4 18 7 217 1 367 2 45 1 220 1 140 1 286 1 228 1 118 2 177 2 120 1 232 1 289 1 
259 1 34 2 263 1 159 1 243 1 105 3 146 1 248 4 69 2 305 2 16 7 42 7 133 1 113 2 18 4 217 1 367 2 45 1 220 1 140 1 286 1 228 1 118 2 177 2 120 1 232 1 289 1 
18 3 367 1 34 1 45 1 220 1 140 1 105 2 146 1 118 1 248 3 232 1 304 1 305 1 69 1 16 4 42 4 133 2 113 1 
217 1 367 1 45 1 220 1 243 1 244 1 146 1 66 1 118 1 177 1 248 1 355 1 69 1 305 1 16 2 42 2 
18 1 367 2 45 1 220 1 105 1 286 1 146 1 177 1 248 2 69 2 16 3 42 3 113 1 
0 1 34 1 263 1 105 4 146 1 248 5 304 1 69 2 305 1 16 9 42 9 133 2 113 3 18 7 367 2 45 1 220 1 140 1 286 1 80 1 118 1 177 1 232 1 289 1 
0 1 34 1 263 1 105 4 146 1 248 5 304 1 69 2 305 1 16 9 42 9 133 2 113 3 18 7 367 2 45 1 220 1 140 1 286 1 80 1 118 1 177 1 232 1 289 1 
210 1 184 1 214 1 
211 1 184 1 258 2 
72 2 353 2 32 1 60 2 233 2 240 1 171 2 57 2 
32 1 260 1 60 3 185 1 128 2 298 1 264 1 35 1 240 1 265 1 323 1 242 1 245 1 10 1 67 2 190 1 246 1 341 2 191 1 344 1 135 2 72 2 218 2 170 1 22 1 171 2 222 1 173 1 224 1 51 1 353 2 154 1 83 1 233 2 125 1 57 3 85 1 
92 1 72 1 278 1 353 1 32 1 60 1 233 1 171 1 343 1 57 1 
43 1 345 1 60 1 184 1 369 1 368 1 309 1 300 1 25 1 92 1 145 1 353 1 210 1 57 1 
72 1 345 1 60 1 184 1 368 1 171 1 309 2 300 1 25 1 92 1 145 2 353 1 210 1 233 1 57 1 
145 1 200 1 309 1 357 1 58 1 
145 2 210 1 269 1 184 1 200 1 309 2 301 1 357 1 
145 1 309 1 357 1 
278 1 72 1 32 1 60 1 171 1 309 1 302 1 92 1 145 1 353 1 233 1 200 1 343 1 57 1 
184 1 
145 2 210 1 269 1 184 1 123 1 200 1 309 2 357 1 
17 1 150 1 138 1 184 1 362 2 309 5 160 1 223 1 145 5 210 1 269 1 153 1 313 1 200 2 147 1 316 2 134 2 357 2 166 1 
240 1 214 1 
277 1 72 1 60 2 171 1 240 2 322 1 353 2 233 1 57 2 
139 1 330 1 340 1 
60 1 260 1 185 1 128 1 35 1 240 1 323 1 242 1 247 1 246 1 154 1 341 1 191 1 57 1 344 1 135 1 
72 1 260 1 114 1 60 2 185 1 128 1 139 1 35 1 323 1 242 1 152 1 353 1 246 1 154 1 233 1 341 1 191 1 344 1 57 2 135 1 
72 3 353 3 114 1 60 3 233 3 171 1 240 1 57 3 
92 1 72 1 353 1 60 1 233 1 343 1 57 1 
92 1 72 1 277 1 353 1 60 1 233 1 171 1 322 1 57 1 
32 1 260 1 60 4 185 1 128 1 264 1 35 1 240 1 242 1 323 1 300 1 10 1 92 1 145 1 67 1 190 1 246 1 341 1 191 1 344 1 135 1 277 1 72 3 345 1 114 1 218 2 368 1 22 1 196 1 171 2 309 1 222 1 173 1 224 1 51 1 25 1 255 1 353 3 152 1 154 1 233 3 125 1 85 1 57 4 
72 1 43 1 353 2 60 2 114 1 233 1 99 1 240 1 57 2 
277 1 72 3 345 1 114 2 60 3 360 1 184 1 368 1 171 1 309 1 300 1 25 1 92 1 255 1 145 1 152 1 353 3 233 3 57 3 
277 1 72 2 114 1 60 2 139 1 171 1 353 2 233 2 340 1 57 2 
60 1 260 1 185 1 128 1 35 1 240 1 323 1 242 1 246 1 154 1 341 1 191 1 57 1 344 1 135 1 
60 1 260 1 185 1 128 1 35 1 240 1 323 1 246 1 154 1 275 1 341 1 191 1 164 1 57 1 135 1 
335 1 320 1 295 1 264 1 241 1 10 1 190 1 67 4 340 2 37 1 193 1 20 1 218 2 330 2 139 2 22 1 222 2 173 1 225 1 119 1 83 2 373 1 234 1 125 1 
92 1 72 1 353 1 60 1 233 1 300 1 57 1 377 1 
72 4 277 1 167 1 43 1 114 2 60 5 350 1 171 1 240 1 353 5 152 1 233 4 99 1 57 5 
92 1 72 2 353 2 60 2 233 2 343 1 57 2 377 1 
68 1 62 1 
68 1 62 1 
238 1 41 1 
238 1 41 1 
238 1 41 1 
68 1 62 1 102 1 
68 1 62 1 102 1 
68 1 62 1 375 1 
68 2 238 1 62 2 273 1 266 1 41 1 
68 1 62 1 102 1 
206 1 68 1 62 1 
206 1 68 1 62 1 
206 1 68 1 62 1 
215 2 184 1 62 2 5 2 89 1 371 1 309 2 285 1 145 2 68 2 270 1 338 1 273 1 178 1 192 2 179 3 181 2 126 1 205 2 
60 2 62 1 5 1 240 1 36 1 145 1 68 1 338 1 326 1 192 1 72 2 215 1 21 1 309 1 226 1 353 2 233 2 375 1 315 1 56 1 179 1 57 2 205 1 101 1 
118 1 34 1 305 1 
66 1 118 1 305 1 
66 1 118 3 294 1 34 2 98 1 47 1 
66 1 118 2 294 1 34 1 47 1 203 1 
66 1 118 2 294 2 34 1 47 1 
317 1 127 2 1 1 335 1 184 2 63 1 362 1 241 1 145 5 211 1 269 1 210 1 274 1 326 1 109 1 327 2 134 1 17 2 150 1 73 2 138 3 309 5 226 1 254 1 26 1 373 1 200 4 234 1 258 3 316 1 357 1 101 1 
317 1 127 6 335 3 184 5 362 2 241 3 160 1 145 9 211 3 210 1 269 1 274 3 39 1 134 2 194 1 17 6 150 1 73 6 346 1 138 8 116 1 309 9 197 1 254 2 312 5 26 2 373 3 200 7 201 1 234 3 258 9 316 2 357 6 101 4 58 5 
127 2 1 1 335 1 184 3 63 1 362 1 241 1 160 1 145 3 210 1 211 2 274 1 327 1 134 1 17 2 73 2 138 3 309 3 254 1 26 1 373 1 200 2 234 1 316 1 258 4 101 1 
127 4 1 1 335 2 184 4 63 1 362 1 241 2 160 1 145 4 210 1 211 3 274 2 327 2 134 1 194 1 17 4 73 4 138 5 116 1 309 4 197 1 254 1 26 1 373 2 200 3 234 2 258 7 316 1 101 2 
364 1 154 1 214 1 
154 1 365 1 
111 1 
154 1 191 1 
364 2 318 1 260 1 154 3 129 1 191 1 
260 1 154 1 191 1 
154 1 349 1 
291 1 20 3 144 1 262 2 320 2 3 1 321 1 241 1 222 3 76 1 67 7 256 1 373 1 83 4 235 1 132 1 276 1 
291 1 20 3 144 1 262 2 320 2 3 1 321 1 241 1 222 3 76 1 67 7 256 1 373 1 83 4 235 1 132 1 276 1 
291 1 20 3 144 1 262 2 320 2 3 1 321 1 241 1 222 3 76 1 9 1 67 7 256 1 373 1 83 4 235 1 132 1 276 1 
291 2 144 2 262 3 335 3 320 5 61 1 3 1 103 1 321 1 264 1 241 4 10 1 190 1 67 31 108 1 274 3 132 1 149 4 342 1 276 1 20 10 348 1 252 1 218 2 222 15 76 2 173 1 253 3 256 2 83 16 373 4 234 3 235 5 59 1 
291 1 144 1 262 2 320 3 3 1 264 2 241 1 130 1 10 2 190 2 67 9 131 1 132 1 276 1 20 4 252 1 218 4 222 4 173 2 76 1 256 1 373 1 83 5 235 1 
207 1 34 1 128 1 35 1 104 1 6 1 8 1 146 1 66 1 246 1 248 1 305 1 69 1 341 1 16 2 42 2 135 1 18 1 367 1 45 1 220 1 198 1 118 2 177 1 54 1 98 1 143 1 180 1 100 1 183 1 
34 1 128 1 35 1 104 1 6 1 8 1 66 1 246 1 248 1 305 1 69 1 341 1 16 3 42 3 135 1 18 2 367 1 45 1 220 1 48 1 198 1 118 2 177 1 54 1 230 1 98 1 29 1 143 1 100 1 183 1 
128 1 34 1 35 1 104 1 6 1 66 1 246 1 248 1 305 1 341 1 16 2 42 2 135 1 18 2 45 1 220 1 48 1 198 1 118 2 177 1 54 1 230 1 98 1 100 1 183 1 
86 1 293 1 367 1 128 1 219 1 97 1 35 1 323 1 104 2 91 1 246 1 177 2 154 1 54 2 29 1 69 1 341 1 191 1 16 1 165 1 42 1 135 1 183 2 
34 1 128 1 35 1 104 1 6 1 8 1 146 1 66 1 246 1 305 1 69 1 341 1 16 1 42 1 135 1 367 1 198 1 118 2 177 1 54 1 230 1 98 1 143 1 180 1 100 1 183 1 
363 1 
86 1 260 1 128 2 362 1 35 3 323 2 145 2 246 2 269 1 341 2 191 2 134 1 135 2 328 1 150 1 17 1 138 1 280 1 331 1 219 1 309 2 50 1 24 1 117 1 229 1 154 2 26 1 316 1 357 2 
345 1 43 1 60 1 186 1 368 1 369 1 309 2 188 1 300 1 49 1 25 1 92 1 209 2 145 2 353 1 14 1 38 1 40 1 57 1 
60 1 184 1 186 1 188 1 300 1 92 1 145 3 209 3 210 1 269 1 14 1 15 1 38 1 345 1 43 1 369 1 368 1 309 3 49 1 25 1 353 1 123 1 357 1 57 1 
43 1 345 1 60 1 186 1 368 1 369 1 309 2 188 1 300 1 49 1 25 1 92 1 209 2 145 2 353 1 14 1 376 1 38 1 40 1 57 1 
345 1 43 1 60 1 186 1 368 1 369 1 309 3 188 1 300 1 49 1 311 1 25 1 92 1 209 2 145 3 353 1 269 1 14 1 123 1 376 1 38 1 40 1 57 1 357 1 
359 1 60 1 186 1 4 1 362 1 299 1 188 1 300 1 92 1 145 3 209 2 269 1 211 1 14 1 38 1 40 1 134 1 17 1 150 1 43 1 345 1 138 1 369 1 368 1 370 1 309 3 49 1 77 1 25 1 353 1 376 1 356 1 258 1 316 1 357 1 57 1 
359 1 60 1 157 1 186 1 4 1 362 1 299 1 188 1 300 1 92 1 145 3 209 2 269 1 211 1 14 1 38 1 40 1 134 1 17 1 150 1 345 1 43 1 94 1 138 1 369 1 368 1 370 1 309 3 49 1 77 1 25 1 353 1 376 1 356 1 316 1 357 1 57 1 290 1 
359 1 60 1 157 1 186 1 4 1 362 1 299 1 188 1 300 1 92 1 145 3 209 2 269 1 211 1 14 1 38 1 40 1 134 1 17 1 150 1 345 1 43 1 94 1 138 1 369 1 368 1 370 1 309 3 49 1 77 1 25 1 353 1 376 1 356 1 316 1 357 1 57 1 290 1 
359 1 60 1 157 1 186 1 362 1 188 1 300 1 92 1 145 3 209 2 269 1 14 1 38 1 40 1 70 1 134 1 17 1 150 1 345 1 43 1 138 1 369 1 368 1 309 3 49 1 77 1 25 1 353 1 141 1 27 1 199 1 376 1 356 1 257 1 258 1 316 1 357 1 57 1 
43 1 345 1 60 1 186 1 368 1 369 1 309 2 188 1 300 1 49 1 25 1 92 1 209 2 145 2 324 1 353 1 14 1 376 1 38 1 40 1 57 1 
43 1 345 1 60 1 186 1 368 1 369 1 309 2 188 1 300 1 49 1 25 1 92 1 209 2 145 2 324 1 353 1 14 1 376 1 38 1 40 1 57 1 
359 1 60 1 186 1 362 1 188 1 300 1 92 1 145 3 209 2 269 1 14 1 38 1 40 1 70 1 134 1 17 1 150 1 43 1 345 1 138 1 369 1 368 1 309 3 49 1 77 1 25 1 353 1 141 1 27 1 376 1 356 1 258 1 316 1 357 1 57 1 
291 1 262 1 320 2 3 1 264 1 240 2 241 1 10 1 190 1 67 6 340 1 132 1 37 1 276 1 214 1 20 2 218 2 139 1 330 1 22 1 222 3 76 1 173 1 83 3 373 1 125 1 
358 1 335 1 320 1 64 1 264 2 240 1 241 2 10 2 190 2 67 14 274 2 340 4 149 3 342 1 279 1 20 2 218 4 330 11 139 11 170 1 22 2 172 1 222 6 173 2 51 1 253 3 83 8 373 1 142 1 235 1 234 2 125 1 59 1 
260 1 60 2 185 1 128 1 64 1 35 1 264 1 240 1 242 1 323 1 10 1 267 1 190 1 67 2 246 1 247 1 272 1 341 1 340 1 191 1 344 1 135 1 72 1 308 1 114 1 218 2 22 1 170 1 222 1 173 1 51 1 353 1 152 1 154 1 83 1 233 1 125 1 57 2 
291 1 60 3 185 2 335 2 64 1 3 1 297 1 240 2 241 3 242 2 10 3 190 3 67 20 246 2 303 1 341 3 306 2 340 7 191 2 344 2 72 1 114 1 20 8 22 3 76 1 152 1 353 1 352 2 82 1 154 2 314 2 83 10 125 3 85 2 260 2 262 1 320 4 128 3 264 3 35 2 323 1 274 2 132 1 276 1 135 3 218 6 281 2 330 7 139 7 170 1 222 10 173 3 51 1 230 1 373 3 233 1 234 2 235 4 57 3 
86 1 60 1 207 1 128 7 35 2 264 2 265 2 323 2 189 1 10 2 190 2 67 2 246 2 307 1 341 8 213 1 191 2 37 1 135 8 72 1 114 1 19 1 218 4 74 1 96 1 22 2 170 1 219 1 75 1 222 1 173 2 51 1 353 1 154 3 230 1 83 1 233 1 125 2 57 1 
60 1 335 1 320 1 64 1 264 1 241 1 10 1 190 1 67 3 274 1 340 1 277 1 72 1 20 1 218 2 139 1 330 1 22 1 171 1 222 2 173 1 353 1 83 1 373 1 233 1 234 1 288 1 125 1 57 1 
20 1 218 2 139 1 330 1 22 1 264 1 241 1 173 1 10 1 67 2 190 1 119 1 83 2 235 1 234 1 340 1 37 1 125 1 
20 1 335 1 320 1 218 2 139 1 330 1 295 1 22 1 264 1 222 2 173 1 10 1 67 2 190 1 373 1 340 1 37 1 125 1 
20 2 335 1 320 1 218 2 139 2 330 2 22 1 264 1 241 1 222 2 173 1 10 1 67 4 190 1 373 1 83 2 274 1 235 1 234 1 340 2 37 1 125 1 
20 1 19 1 218 2 139 1 330 1 22 1 264 1 241 1 173 1 10 1 67 2 190 1 119 1 83 2 235 1 234 1 340 1 125 1 
20 1 19 1 335 1 320 1 218 2 139 1 330 1 295 1 22 1 264 1 222 2 173 1 10 1 67 2 190 1 373 1 340 1 125 1 
20 2 19 1 335 1 320 1 218 2 139 2 330 2 22 1 264 1 241 1 222 2 173 1 10 1 67 4 190 1 373 1 83 2 274 1 235 1 234 1 340 2 125 1 
20 2 335 1 320 1 218 2 139 2 330 2 22 1 264 1 241 1 222 2 173 1 10 1 190 1 67 4 373 1 83 2 274 1 235 1 234 1 340 2 125 1 
260 1 60 1 185 1 128 1 35 1 264 1 240 1 242 1 323 1 10 1 67 2 190 1 246 1 341 1 191 1 344 1 135 1 218 2 170 1 22 1 222 1 173 1 51 1 154 1 83 1 125 1 85 1 57 1 
260 1 60 1 185 1 128 1 35 1 264 1 240 1 323 1 10 1 67 2 190 1 246 1 275 1 341 1 191 1 164 1 135 1 329 1 218 2 170 1 22 1 222 1 173 1 51 1 154 1 83 1 125 1 57 1 
20 2 335 1 320 1 64 1 218 2 139 2 330 2 22 1 264 1 241 1 222 2 173 1 10 1 67 4 190 1 373 1 83 2 274 1 235 1 234 1 340 2 125 1 
260 1 60 1 335 1 185 1 207 1 320 1 128 1 35 1 264 1 241 1 242 1 10 1 67 4 190 1 246 1 274 1 340 2 341 1 191 1 344 1 135 1 20 2 218 2 139 2 330 2 22 1 222 2 173 1 352 1 154 1 373 1 83 2 235 1 234 1 125 1 85 1 57 1 
60 1 335 1 64 1 264 1 241 1 10 1 190 1 67 3 274 1 340 1 277 1 72 1 195 1 20 1 218 2 330 1 139 1 22 1 171 1 222 1 173 1 353 1 373 1 83 2 233 1 235 1 234 1 125 1 57 1 
335 3 320 3 264 2 241 3 65 2 10 2 268 1 190 2 67 19 131 1 271 1 274 3 93 1 149 2 342 1 250 1 20 6 95 1 218 4 221 1 222 10 173 2 52 2 253 1 151 1 83 9 373 3 234 3 235 3 59 1 
335 2 320 2 264 3 241 3 65 1 7 1 10 3 268 1 190 3 67 26 131 1 212 1 271 1 274 3 93 1 149 2 250 2 20 4 252 2 169 1 218 6 222 12 173 3 52 4 253 2 151 2 175 1 231 1 373 2 83 14 122 1 235 2 234 3 59 2 
291 1 262 1 335 4 320 4 336 1 3 1 264 3 241 5 65 1 7 1 10 3 268 1 190 3 67 41 212 1 131 1 271 1 274 4 93 1 132 1 149 4 342 1 276 1 250 2 20 8 252 1 169 1 218 6 221 1 222 21 76 1 173 3 52 4 253 3 151 1 175 1 231 1 83 20 373 5 122 1 234 4 235 4 59 3 
291 1 262 1 335 3 320 4 336 1 3 1 264 4 241 5 65 1 7 1 10 4 268 1 190 4 67 38 212 1 131 1 271 1 274 4 93 1 132 1 149 4 342 1 276 1 250 2 20 7 252 2 169 1 218 8 221 1 222 18 76 1 173 4 52 4 253 3 151 1 175 1 231 1 83 20 373 4 122 1 234 4 235 3 59 3 
291 1 262 1 335 7 320 7 3 1 264 2 241 8 65 1 7 1 10 2 268 1 190 2 67 52 212 1 131 1 271 1 274 7 93 1 132 1 149 4 342 2 276 1 279 2 250 1 20 14 252 1 169 1 218 4 222 25 76 1 173 2 52 4 253 4 151 1 175 1 231 1 83 27 373 8 122 1 234 7 235 7 59 2 
215 1 68 1 249 1 62 1 273 1 5 1 89 1 371 1 192 1 205 1 
375 1 56 1 
215 1 68 1 115 1 121 1 62 1 374 1 5 1 192 1 205 1 
215 1 184 1 62 1 5 1 89 1 371 1 309 1 285 1 145 1 68 1 270 1 338 1 273 1 178 1 192 1 179 2 181 1 205 1 
215 1 184 1 62 1 5 1 89 1 371 1 309 1 285 1 145 1 68 1 270 1 338 1 273 1 178 1 192 1 179 2 181 1 205 1 
215 1 184 1 62 1 5 1 89 1 371 1 309 1 285 1 145 1 68 1 270 1 338 1 273 1 178 1 192 1 179 2 181 1 205 1 
102 1 266 1 202 1 
102 1 266 1 202 1 
206 1 23 1 
206 1 23 1 266 1 
315 1 36 1 
60 2 62 1 5 1 240 1 36 1 145 1 68 1 163 1 326 1 192 1 72 2 215 1 21 1 309 1 226 1 353 2 233 2 200 1 375 1 178 1 315 1 56 1 179 1 57 2 181 1 205 1 101 1 
102 1 202 1 
206 1 23 1 266 1 
319 1 60 2 64 1 128 2 35 1 264 1 265 2 10 1 190 1 67 2 246 1 341 2 191 1 135 2 218 2 96 1 22 1 170 1 75 1 310 1 351 1 222 1 173 1 51 1 79 1 353 2 154 1 83 1 334 1 125 1 57 2 
168 1 207 1 34 1 128 2 35 1 6 1 198 1 227 1 66 1 118 2 246 1 230 1 54 1 55 1 98 1 305 1 143 1 341 2 135 2 
34 1 128 1 33 1 35 1 6 1 198 1 66 1 118 2 246 1 230 1 54 1 55 1 98 1 305 1 143 1 341 1 135 1 
86 1 168 1 128 1 219 1 35 1 323 1 162 1 246 1 154 1 54 1 341 1 191 1 165 1 135 1 
168 1 34 1 128 1 35 1 6 1 198 1 227 1 66 1 118 2 246 1 230 1 54 1 55 1 98 1 305 1 143 1 341 1 135 1 
239 1 
17 1 210 1 153 1 138 1 184 1 223 1 214 1 
184 2 4 1 362 1 299 1 145 1 211 1 269 1 210 1 134 1 17 1 150 1 138 1 370 1 309 1 316 1 258 1 357 1 
292 1 184 8 335 2 241 2 145 5 337 2 13 2 246 3 341 3 191 3 148 2 112 1 150 4 17 8 73 6 349 2 309 5 153 1 26 2 154 10 316 4 258 12 357 5 318 1 127 6 260 3 207 1 128 3 158 1 362 4 208 2 35 4 323 1 364 2 210 2 269 3 211 6 365 3 274 2 134 4 135 3 216 1 137 2 138 9 280 1 368 2 281 2 283 2 223 1 176 2 373 2 287 1 234 2 182 2 
127 5 184 5 335 2 187 1 362 2 208 2 241 2 145 1 269 1 211 3 210 2 212 1 274 2 149 1 134 2 150 2 17 5 73 5 138 8 169 1 280 1 309 1 253 1 176 1 175 1 26 1 231 1 373 2 122 1 234 2 258 6 316 2 357 1 237 1 59 1 
291 1 32 1 60 1 3 1 362 1 208 2 241 2 161 1 302 1 92 1 145 1 343 1 134 1 150 1 17 2 278 1 72 1 94 1 138 2 171 1 309 1 76 1 176 1 353 1 373 1 233 1 316 1 57 1 
150 1 17 1 184 1 138 1 362 1 223 1 210 1 153 1 316 1 134 1 
17 5 127 5 73 5 184 5 335 2 138 5 281 1 208 2 241 2 176 1 211 5 373 2 274 2 234 2 258 10 
145 1 210 1 269 1 184 1 309 1 357 1 
86 1 260 1 128 2 362 1 35 3 323 2 145 1 246 2 269 1 341 2 191 2 134 1 135 2 328 1 150 1 17 1 138 1 280 1 331 1 219 1 309 1 50 1 24 1 117 1 229 1 154 2 26 1 287 1 316 1 357 2 
32 1 60 3 260 1 185 1 128 1 264 1 35 1 240 1 323 1 242 1 10 1 67 1 190 1 246 1 341 1 191 1 344 1 135 1 72 2 218 2 22 1 171 2 222 1 173 1 224 1 51 1 353 2 154 1 233 2 125 1 57 3 85 1 
17 2 150 1 127 2 73 2 262 1 138 1 184 4 280 1 362 1 211 2 210 2 26 1 258 4 316 1 134 1 
215 1 251 1 205 1 
215 1 251 1 205 1 
332 1 215 1 371 1 36 1 205 1 
215 1 251 1 205 1 
215 1 261 1 205 1 
215 1 261 1 205 1 
215 1 261 1 205 1 
215 1 205 1 
68 1 62 1 
291 1 20 3 262 1 252 1 320 2 218 4 3 1 264 2 241 1 222 4 173 2 76 1 10 2 67 8 190 2 373 1 83 4 235 1 132 1 276 1 
291 1 20 2 262 1 320 2 3 1 241 1 222 3 76 1 67 6 83 3 373 1 132 1 276 1 214 1 
20 2 335 1 320 1 218 2 264 1 241 1 222 2 173 1 10 1 190 1 67 4 373 1 83 2 274 1 234 1 235 1 30 1 
20 2 335 1 320 1 241 1 222 4 253 1 67 7 373 1 83 3 274 1 234 1 235 1 149 2 342 1 59 1 
291 2 262 1 335 2 320 5 3 1 264 2 241 3 10 2 67 23 190 2 274 2 132 1 149 2 342 1 276 1 279 1 20 9 252 2 218 4 222 12 76 2 173 2 253 2 78 1 83 11 373 3 142 1 235 4 234 2 
67 1 149 1 222 1 
67 1 83 1 253 1 
20 3 335 1 218 2 320 2 281 1 264 1 241 1 222 3 173 1 10 1 190 1 67 6 83 3 373 1 274 1 234 1 235 1 30 1 
335 2 320 1 264 1 241 2 10 1 67 12 190 1 212 1 131 1 274 2 149 1 20 2 218 2 169 1 222 6 173 1 253 1 175 1 83 6 373 2 231 1 122 1 235 1 234 2 59 1 
291 1 20 2 320 1 3 1 241 1 222 3 76 1 67 6 83 3 373 1 235 1 
291 1 20 2 252 1 320 1 218 2 264 1 222 2 76 1 173 1 78 1 10 1 67 3 190 1 83 1 235 1 132 1 276 1 
291 2 20 5 218 2 320 3 3 1 264 1 241 2 222 5 173 1 161 1 76 2 10 1 190 1 67 10 131 1 83 5 373 2 235 2 
20 1 218 2 264 1 241 1 173 1 10 1 190 1 67 2 131 1 83 2 234 1 235 1 
20 2 335 1 320 1 218 2 264 1 241 1 222 2 173 1 10 1 190 1 67 4 131 1 373 1 83 2 274 1 234 1 235 1 
291 1 20 2 252 1 218 6 320 1 264 3 221 1 222 2 173 3 76 1 78 1 10 3 67 3 190 3 131 1 83 1 235 1 
291 3 262 1 335 3 61 1 320 7 3 2 103 1 264 5 241 5 10 5 190 5 67 34 131 1 274 3 132 1 149 4 342 1 276 1 20 12 252 2 348 1 218 10 221 1 222 18 76 3 173 5 78 1 253 3 83 16 373 5 234 3 235 5 30 1 59 1 
291 1 262 1 320 2 3 1 264 1 241 1 10 1 67 8 190 1 212 1 131 1 132 1 149 1 276 1 20 2 218 2 222 4 173 1 76 1 253 1 373 1 83 4 59 1 
291 1 262 1 320 2 3 1 264 2 241 2 10 2 67 11 190 2 212 1 131 1 274 1 132 1 149 2 342 1 276 1 20 3 218 4 222 5 76 1 173 2 253 1 373 1 83 6 234 1 235 1 30 1 59 1 
291 1 262 1 335 2 320 3 3 1 264 3 241 3 10 3 67 19 190 3 212 1 131 1 274 2 132 1 149 1 276 1 20 4 252 1 169 1 218 6 222 10 76 1 173 3 253 1 175 1 83 9 373 3 231 1 122 1 235 1 234 2 30 1 59 1 
291 1 262 1 335 1 320 3 3 1 264 3 241 3 10 3 67 17 190 3 212 1 131 1 274 2 132 1 149 1 276 1 20 5 252 1 218 6 169 1 222 7 76 1 173 3 253 1 175 1 83 10 373 2 231 1 122 1 235 2 234 2 30 1 59 1 
291 1 262 1 320 2 3 1 264 1 241 1 10 1 67 8 190 1 212 1 131 1 132 1 149 1 276 1 20 2 218 2 222 4 173 1 76 1 253 1 373 1 83 4 59 1 
335 2 320 1 264 1 241 2 10 1 67 12 190 1 212 1 131 1 274 2 149 1 20 2 218 2 169 1 222 6 173 1 253 1 175 1 83 6 373 2 231 1 122 1 235 1 234 2 59 1 
291 1 262 1 335 1 320 3 3 1 264 4 241 3 10 4 67 18 190 4 212 1 131 1 274 2 132 1 149 1 276 1 20 5 252 2 169 1 218 8 222 8 76 1 173 4 253 1 175 1 231 1 83 10 373 2 122 1 235 2 234 2 30 1 59 1 
335 2 320 3 264 4 241 3 10 4 67 16 190 4 212 1 131 1 274 3 149 1 20 6 252 2 169 1 218 8 221 1 222 7 173 4 253 1 175 1 231 1 83 9 373 2 122 1 235 3 234 3 59 1 
291 3 20 6 320 3 3 1 241 1 222 4 76 3 67 7 373 1 83 3 235 3 132 1 276 2 
291 1 262 1 335 1 320 3 3 1 264 4 241 3 10 4 67 18 190 4 212 1 131 1 274 2 132 1 149 1 276 1 20 4 252 2 169 1 218 8 221 1 222 8 76 1 173 4 253 1 175 1 231 1 83 10 373 2 122 1 235 1 234 2 59 1 
353 1 43 1 60 1 28 1 99 1 240 1 57 1 
43 1 60 1 240 1 372 1 11 1 12 1 353 1 28 1 99 1 31 1 204 1 57 1 
86 1 246 1 154 1 128 1 219 1 35 1 341 1 191 1 323 1 214 1 135 1 
72 1 260 1 114 1 60 2 185 1 128 1 35 1 240 1 323 1 353 1 246 1 154 1 233 1 341 1 191 1 57 2 344 1 135 1 
72 2 260 2 114 1 60 2 185 1 128 1 349 1 35 1 240 1 300 1 25 1 92 1 13 1 353 2 246 1 154 3 233 1 341 1 191 2 57 2 344 1 112 1 135 1 
72 2 260 2 114 1 60 2 185 1 128 2 349 1 35 1 240 1 300 1 25 1 92 1 13 1 353 2 246 1 154 3 233 1 275 1 341 2 191 2 236 1 57 2 112 1 135 2 
136 1 260 1 184 1 128 3 368 1 349 1 361 1 35 1 309 2 323 1 145 2 364 1 13 1 210 1 246 1 154 4 365 1 341 3 191 1 236 1 357 1 112 1 135 3 
260 1 184 1 128 3 368 1 349 1 35 1 309 2 323 1 145 2 364 1 13 1 337 1 210 1 246 1 154 4 365 1 341 3 191 1 236 1 357 1 112 1 135 3 
246 1 128 1 35 1 341 1 213 1 135 1 
318 1 260 1 207 1 128 6 74 1 96 1 35 3 265 1 323 2 24 1 189 1 229 1 246 2 154 3 230 1 307 1 341 7 213 1 191 2 135 7 71 1 
291 1 60 2 185 1 64 1 3 1 240 2 241 1 242 1 10 2 190 2 67 6 246 1 340 1 306 1 341 1 191 1 344 1 72 1 114 1 20 2 22 2 310 1 76 1 352 1 353 1 154 1 83 3 125 2 85 1 260 1 207 1 262 1 128 1 320 2 264 2 35 1 132 1 276 1 135 1 218 4 330 1 139 1 222 3 173 2 373 1 233 1 57 2 
184 1 128 1 362 2 323 1 145 3 364 1 337 1 210 1 269 1 365 1 341 1 148 1 134 2 135 1 17 1 150 2 138 1 137 1 368 1 309 3 223 1 153 1 154 2 200 1 287 1 316 2 182 1 357 2 
318 1 260 1 207 1 128 2 158 1 35 2 364 1 246 1 154 2 341 2 213 1 191 1 135 2 
86 1 207 1 366 1 128 4 219 1 35 1 323 1 246 1 154 1 341 4 191 1 236 1 135 4 
328 1 260 1 128 2 35 2 50 1 24 1 229 1 246 1 303 1 154 1 341 2 191 1 112 1 135 2 
66 1 118 1 246 1 128 1 305 1 35 1 341 1 323 1 198 1 135 1 
246 1 154 1 230 1 207 1 128 2 96 1 334 1 35 1 341 2 191 1 135 2 
86 1 207 1 366 1 128 4 96 1 74 1 219 1 35 2 323 1 246 2 154 3 341 5 307 1 191 2 112 1 135 5 
86 1 207 1 366 1 128 4 96 1 74 1 219 1 35 2 323 1 246 2 154 3 155 1 341 5 191 2 112 1 135 5 
72 1 260 1 114 1 60 2 185 1 128 1 35 1 240 1 323 1 353 1 246 1 154 1 233 1 275 1 341 1 191 1 57 2 135 1 
318 1 260 1 128 1 35 2 24 1 229 1 246 1 154 1 341 1 191 1 112 1 135 1 71 1 
2 1 46 1 240 1 90 1 124 1 
345 1 184 1 44 1 2 1 368 1 46 2 240 1 90 2 284 1 309 2 300 1 25 1 92 1 255 1 145 2 210 1 354 1 200 1 124 2 
319 1 60 1 2 1 46 1 351 1 79 1 353 1 124 1 57 1 
354 1 44 1 2 1 
248 1 45 1 220 1 214 1 
248 1 367 1 45 1 69 1 220 1 16 1 42 1 
177 1 104 1 42 1 
146 1 106 1 248 1 367 1 45 1 88 1 69 1 220 1 243 2 16 3 84 1 42 3 
18 1 248 1 367 1 45 1 69 1 220 1 16 2 133 1 42 2 
367 1 34 1 105 1 146 1 118 1 248 1 232 1 69 1 305 1 16 1 42 1 
146 1 248 1 367 1 69 1 220 1 16 1 42 1 
146 1 367 1 45 1 69 1 220 2 16 1 42 1 
347 1 367 2 296 1 220 1 146 1 248 1 107 1 69 2 16 2 42 2 
18 2 367 1 45 1 263 1 220 1 105 1 146 1 248 2 69 1 16 3 289 1 42 3 113 1 
18 1 367 1 34 1 45 1 220 1 66 1 146 1 118 2 81 1 248 1 98 1 69 1 305 1 16 2 42 2 
18 2 367 2 45 1 220 1 105 1 146 1 248 2 304 1 69 2 16 4 42 4 133 1 113 1 
146 1 248 1 367 1 45 1 69 1 220 1 16 1 42 1 
18 2 367 1 88 1 45 2 282 1 220 2 243 1 105 1 248 3 69 1 16 4 84 1 42 4 113 1 
18 1 146 1 0 1 53 1 248 1 367 1 45 1 156 1 69 1 220 1 16 2 42 2 
367 1 88 2 45 1 220 1 243 2 146 1 248 1 69 1 339 1 16 3 84 1 42 3 
174 2 325 1 333 1 248 2 
146 1 87 1 367 1 69 1 16 1 42 1 
18 1 146 1 248 1 367 1 45 1 69 1 220 1 289 1 16 2 42 2 
110 1 
146 1 248 1 367 1 45 1 69 1 220 1 16 1 42 1 
18 1 146 1 248 1 367 1 45 1 69 1 220 1 289 1 243 1 16 3 42 3 
248 1 282 1 105 1 113 1 
248 1 220 1 

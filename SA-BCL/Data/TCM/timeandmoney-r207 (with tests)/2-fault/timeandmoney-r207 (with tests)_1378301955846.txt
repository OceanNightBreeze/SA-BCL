#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) (256,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (256,323) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) (256,323) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (72,118,137,210) (72,118,137,210) (72,118,137,210) 133 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 67 1 133 1 
173 1 212 1 200 1 
120 1 212 1 153 2 
306 2 229 2 183 1 136 2 112 1 237 2 44 2 170 2 
296 2 121 1 302 1 304 1 15 1 306 2 183 1 136 3 95 1 17 1 223 1 19 1 314 1 188 1 278 1 229 3 24 1 148 1 235 2 65 1 324 1 199 2 237 2 288 1 156 2 110 1 203 1 112 1 245 1 207 2 164 1 74 1 292 1 250 1 166 1 44 2 170 2 
217 1 306 1 229 1 183 1 136 1 293 1 237 1 44 1 275 1 170 1 
229 1 212 1 281 1 106 1 234 1 282 1 200 1 217 1 306 1 262 1 136 1 114 1 185 1 186 1 
229 1 212 1 281 1 106 2 234 1 282 1 200 1 237 1 217 1 306 1 136 1 114 1 185 2 44 1 170 1 
143 1 123 1 105 1 185 1 106 1 
143 1 99 1 212 1 123 1 301 1 185 2 106 2 200 1 
143 1 185 1 106 1 
229 1 123 1 106 1 31 1 237 1 217 1 306 1 183 1 136 1 185 1 293 1 44 1 275 1 170 1 
212 1 
143 1 99 1 212 1 123 1 185 2 106 2 32 1 200 1 
99 1 143 2 81 1 194 1 212 1 123 2 47 2 106 5 88 1 108 1 152 1 200 1 239 2 185 5 209 2 248 1 77 1 270 1 276 1 
173 1 112 1 
229 2 197 1 237 1 306 2 136 2 263 1 112 2 44 1 170 1 
82 1 320 1 132 1 
188 1 296 1 229 1 324 1 156 1 242 1 203 1 110 1 136 1 112 1 207 1 17 1 223 1 19 1 74 1 166 1 
188 1 296 1 320 1 229 2 324 1 237 1 327 1 156 1 110 1 203 1 306 1 136 2 289 1 207 1 17 1 19 1 223 1 74 1 166 1 44 1 
306 3 229 3 136 3 112 1 289 1 237 3 44 3 170 1 
217 1 306 1 229 1 136 1 237 1 44 1 275 1 
217 1 306 1 229 1 136 1 263 1 197 1 237 1 44 1 170 1 
296 1 121 1 302 1 304 1 217 1 93 1 15 1 306 3 183 1 136 4 263 1 17 1 185 1 19 1 223 1 188 1 278 1 24 1 229 4 148 1 281 1 106 1 29 1 234 1 235 2 65 1 282 1 324 1 199 1 237 3 327 1 156 1 110 1 203 1 112 1 245 1 114 1 289 1 207 1 74 1 166 1 250 1 44 3 170 2 
80 1 306 2 262 1 229 2 136 2 112 1 289 1 237 1 44 1 
229 3 212 1 106 1 281 1 234 1 282 1 237 3 327 1 217 1 93 1 306 3 136 3 111 1 263 1 289 2 114 1 185 1 44 3 170 1 
82 1 306 2 320 1 229 2 136 2 263 1 289 1 237 2 44 2 170 1 
188 1 296 1 229 1 324 1 156 1 203 1 110 1 136 1 112 1 207 1 17 1 223 1 19 1 74 1 166 1 
188 1 296 1 229 1 90 1 324 1 156 1 37 1 110 1 136 1 112 1 207 1 223 1 19 1 74 1 166 1 
82 2 121 1 84 1 174 1 132 2 302 1 216 1 304 1 261 1 309 1 96 1 314 2 278 2 320 2 195 1 148 1 235 2 65 1 199 4 157 1 329 1 331 1 245 1 79 1 
217 1 306 1 229 1 136 1 27 1 281 1 237 1 44 1 
80 1 229 5 233 1 51 1 237 4 327 1 306 5 262 1 136 5 263 1 112 1 289 2 44 4 170 1 
217 1 306 2 229 2 136 2 27 1 237 2 44 2 275 1 
45 1 7 1 
45 1 7 1 
300 1 42 1 
300 1 42 1 
300 1 42 1 
45 1 7 1 226 1 
45 1 7 1 226 1 
45 1 149 1 7 1 
45 2 193 1 122 1 300 1 7 2 42 1 
45 1 7 1 226 1 
45 1 192 1 7 1 
45 1 192 1 7 1 
45 1 192 1 7 1 
171 1 45 2 46 1 59 2 122 1 212 1 125 2 7 2 106 2 66 2 257 1 286 1 238 1 326 2 34 2 11 3 185 2 225 1 267 1 
2 1 295 1 45 1 229 2 59 1 26 1 149 1 127 1 106 1 7 1 66 1 257 1 237 2 326 1 34 1 11 1 109 1 306 2 136 2 112 1 185 1 20 1 252 1 44 2 
36 1 159 1 264 1 
159 1 264 1 258 1 
36 2 5 1 221 1 264 3 283 1 258 1 
36 1 5 1 221 1 264 2 58 1 258 1 
36 1 221 1 5 2 264 2 258 1 
2 1 81 3 120 1 123 4 212 2 47 1 127 1 84 1 176 2 131 1 50 2 216 1 266 1 185 5 143 1 99 1 145 1 101 1 102 2 60 1 106 5 107 1 108 1 153 3 200 1 239 1 109 1 331 1 209 1 248 2 251 1 79 1 
81 8 120 3 123 7 212 5 47 2 84 3 176 6 131 1 216 3 185 9 224 1 57 1 143 6 99 1 144 1 145 2 101 2 194 1 102 6 196 1 105 5 106 9 28 5 107 3 108 1 236 1 153 9 325 1 200 1 109 4 239 2 331 3 209 2 248 6 79 3 
81 3 120 2 212 3 123 2 47 1 84 1 176 2 50 1 216 1 266 1 185 3 145 1 101 1 194 1 102 2 60 1 106 3 107 1 153 4 200 1 239 1 109 1 331 1 209 1 248 2 79 1 
81 5 120 3 212 4 123 3 47 1 84 2 176 4 50 2 216 2 185 4 266 1 144 1 145 1 101 1 102 4 194 1 60 1 196 1 106 4 107 2 153 7 236 1 200 1 239 1 109 2 331 2 209 1 248 4 79 2 
173 1 74 1 253 1 
163 1 74 1 
268 1 
110 1 74 1 
188 1 110 1 73 1 74 3 313 1 253 2 
188 1 110 1 74 1 
231 1 74 1 
189 1 318 1 278 3 103 1 174 2 299 1 322 2 199 7 9 1 216 1 202 1 157 3 54 1 249 1 79 1 314 4 274 1 
189 1 318 1 278 3 103 1 174 2 299 1 322 2 199 7 9 1 216 1 202 1 157 3 54 1 249 1 79 1 314 4 274 1 
189 1 318 1 278 3 103 1 174 2 299 1 322 2 198 1 199 7 9 1 216 1 202 1 157 3 54 1 249 1 79 1 314 4 274 1 
1 1 121 1 299 2 84 3 174 5 302 1 9 1 216 4 304 1 54 2 139 1 140 1 274 1 273 1 314 16 315 1 189 1 318 2 103 1 278 15 279 1 322 3 235 2 107 3 284 1 154 3 199 31 202 2 158 4 157 10 331 3 245 1 249 5 79 4 
121 2 174 3 299 1 302 2 216 1 304 2 94 1 54 1 140 1 314 5 274 1 189 1 318 1 278 4 103 1 322 2 235 4 199 9 202 1 157 4 205 1 245 2 249 1 79 1 
210 1 72 1 137 1 67 1 133 1 
210 1 72 1 137 1 256 1 67 1 
118 1 137 1 323 1 67 1 
210 1 72 1 137 1 256 1 67 1 
210 1 72 1 137 1 67 1 133 1 
243 1 
0 1 81 2 3 4 12 2 262 1 185 5 186 1 99 3 187 2 101 1 106 5 281 1 282 1 108 1 30 1 200 1 110 1 38 1 207 2 114 1 41 1 209 1 290 1 296 2 120 2 119 1 212 2 124 1 47 1 130 2 213 1 217 1 218 2 306 1 136 1 311 1 222 1 56 1 223 2 312 2 143 6 229 1 234 1 324 1 153 2 328 2 239 1 156 2 162 1 248 2 74 1 75 1 166 1 167 2 169 1 
99 1 143 2 229 1 3 2 124 1 281 1 106 3 234 1 282 1 30 1 32 1 12 1 217 1 306 1 38 1 262 1 136 1 114 1 311 1 185 3 75 1 186 1 
124 1 3 3 212 1 217 1 306 1 262 1 136 1 185 3 311 1 186 1 143 1 99 1 229 1 106 3 281 1 234 1 282 1 30 1 32 1 200 1 328 1 38 1 114 1 75 1 
124 1 3 3 212 1 12 1 217 1 306 1 262 1 136 1 185 3 311 1 186 1 99 1 143 2 187 1 229 1 106 3 281 1 234 1 282 1 30 1 32 1 200 1 328 1 38 1 114 1 75 1 
0 1 81 1 3 6 255 1 12 4 262 1 185 5 265 1 186 1 99 3 187 4 281 1 106 5 282 1 30 1 108 1 32 1 200 5 38 1 114 1 209 1 41 1 120 2 124 1 212 5 47 1 130 2 217 1 305 1 306 1 218 2 136 1 311 1 312 2 141 1 143 7 229 1 234 1 328 4 239 1 71 1 75 1 248 1 167 2 
0 1 81 1 3 4 12 2 262 1 185 4 186 1 99 2 187 2 281 1 106 4 282 1 108 1 30 1 200 1 38 1 114 1 209 1 41 1 120 2 124 1 212 2 47 1 130 2 217 1 306 1 218 2 136 1 311 1 312 2 143 4 229 1 234 1 153 2 239 1 328 2 75 1 248 1 167 2 169 1 
0 1 81 1 120 2 212 1 124 1 3 4 47 1 255 1 130 2 12 2 217 1 218 2 306 1 262 1 136 1 265 1 185 4 311 1 312 2 186 1 143 4 99 2 187 2 229 1 106 4 281 1 234 1 282 1 30 1 108 1 200 1 328 2 239 1 71 1 38 1 114 1 41 1 209 1 248 1 75 1 167 2 
0 1 81 1 120 2 212 1 124 1 3 4 47 1 255 1 130 2 12 2 217 1 218 2 306 1 262 1 136 1 265 1 185 4 311 1 312 2 186 1 143 4 99 2 187 2 229 1 106 4 281 1 234 1 282 1 30 1 108 1 200 1 328 2 239 1 71 1 38 1 114 1 41 1 209 1 248 1 75 1 167 2 
81 1 212 1 124 1 3 4 47 1 6 2 12 2 217 1 218 2 306 1 262 1 136 1 265 1 185 4 311 1 186 1 21 1 22 1 143 4 99 2 187 2 228 2 229 1 106 4 281 1 234 1 282 1 30 1 108 1 153 2 200 1 328 2 239 1 38 1 114 1 41 1 209 1 115 1 248 1 75 1 167 2 
0 1 81 1 120 2 212 1 124 1 3 5 47 1 255 1 130 2 12 3 217 1 218 2 306 1 262 1 136 1 265 1 185 4 311 1 312 2 186 1 141 1 99 2 143 5 187 3 229 1 106 4 281 1 234 1 282 1 108 1 30 1 200 1 239 1 328 3 71 1 38 1 114 1 41 1 209 1 248 1 75 1 167 2 
0 1 81 1 120 2 212 1 124 1 3 5 47 1 255 1 130 2 12 3 217 1 218 2 306 1 262 1 136 1 265 1 185 4 311 1 312 2 186 1 141 1 99 2 143 5 187 3 229 1 106 4 281 1 234 1 282 1 108 1 30 1 200 1 239 1 328 3 71 1 38 1 114 1 41 1 209 1 248 1 75 1 167 2 
81 1 3 4 6 2 12 2 262 1 185 4 186 1 21 1 99 2 187 2 281 1 106 4 282 1 108 1 30 1 200 1 38 1 114 1 209 1 41 1 124 1 212 1 47 1 217 1 306 1 218 2 136 1 311 1 143 4 229 1 228 2 234 1 153 2 239 1 328 2 75 1 248 1 167 2 169 1 
82 1 173 1 121 1 299 1 174 2 132 1 302 1 216 1 304 1 261 1 274 1 314 3 189 1 318 1 320 1 103 1 278 3 148 1 322 1 235 2 65 1 199 6 157 2 112 2 245 1 79 1 
82 4 121 2 4 1 174 1 84 1 132 11 302 2 216 1 304 2 15 1 307 1 182 1 95 1 97 1 314 8 273 1 279 1 278 6 320 11 148 2 235 4 65 1 107 2 199 14 154 3 155 1 157 2 158 3 112 1 331 2 245 2 249 1 79 2 
296 1 82 1 121 1 302 1 304 1 15 1 306 1 136 2 95 1 17 1 19 1 223 1 314 1 142 1 188 1 190 1 229 2 278 1 148 1 65 1 235 2 324 1 199 2 155 1 237 1 35 1 327 1 156 1 110 1 203 1 242 1 112 1 207 1 245 1 289 1 74 1 166 1 44 1 
82 7 174 4 84 2 177 1 178 2 15 1 95 1 17 2 19 2 274 1 188 2 189 1 103 1 278 10 24 2 107 2 199 20 203 2 110 2 112 2 207 3 289 1 44 1 296 3 121 3 299 1 129 1 132 7 302 3 216 3 304 3 53 2 306 1 136 3 310 1 223 1 314 10 316 1 318 1 229 3 320 7 148 3 322 1 235 6 65 3 324 2 155 1 237 1 327 1 156 3 157 8 331 2 245 3 332 2 74 2 166 2 249 4 78 2 79 3 
296 8 121 2 49 1 87 1 213 1 302 2 304 2 261 1 15 1 181 1 306 1 219 1 136 1 310 1 95 1 223 2 56 1 314 1 100 1 277 1 229 1 278 1 148 2 235 4 65 2 324 2 199 2 33 1 237 1 156 7 110 2 208 1 289 1 207 8 245 2 74 3 166 2 292 2 44 1 
82 1 121 1 174 1 84 1 132 1 302 1 216 1 304 1 306 1 136 1 263 1 314 1 320 1 229 1 278 2 146 1 148 1 235 2 65 1 107 1 199 3 155 1 237 1 157 1 331 1 245 1 79 1 44 1 170 1 
82 1 320 1 121 1 195 1 148 1 65 1 235 2 132 1 199 2 302 1 157 1 304 1 261 1 331 1 245 1 249 1 79 1 314 2 
82 1 320 1 121 1 278 2 174 1 148 1 84 1 65 1 235 2 132 1 199 2 302 1 216 1 157 1 304 1 261 1 329 1 245 1 
82 2 121 1 84 1 174 1 132 2 302 1 216 1 304 1 261 1 314 2 320 2 278 2 148 1 107 1 235 2 65 1 199 4 157 2 331 1 245 1 249 1 79 1 
100 1 82 1 320 1 121 1 195 1 148 1 65 1 235 2 132 1 199 2 302 1 157 1 304 1 331 1 245 1 249 1 79 1 314 2 
100 1 82 1 320 1 121 1 278 2 174 1 148 1 84 1 65 1 235 2 132 1 199 2 302 1 216 1 157 1 304 1 329 1 245 1 
82 2 121 1 84 1 174 1 132 2 302 1 216 1 304 1 314 2 100 1 320 2 278 2 148 1 107 1 235 2 65 1 199 4 157 2 331 1 245 1 249 1 79 1 
82 2 121 1 84 1 174 1 132 2 302 1 216 1 304 1 314 2 320 2 278 2 148 1 107 1 235 2 65 1 199 4 157 2 331 1 245 1 249 1 79 1 
296 1 121 1 302 1 304 1 15 1 136 1 95 1 17 1 19 1 223 1 314 1 188 1 24 1 229 1 278 1 148 1 65 1 235 2 324 1 199 2 156 1 110 1 203 1 112 1 207 1 245 1 74 1 166 1 
296 1 121 1 90 1 302 1 304 1 15 1 136 1 95 1 19 1 223 1 314 1 188 1 229 1 278 1 148 1 65 1 235 2 324 1 199 2 287 1 37 1 156 1 110 1 112 1 207 1 245 1 74 1 166 1 
82 2 121 1 84 1 174 1 132 2 302 1 216 1 304 1 314 2 320 2 278 2 148 1 107 1 235 2 65 1 199 4 155 1 157 2 331 1 245 1 249 1 79 1 
82 2 296 1 121 1 174 1 84 1 132 2 178 1 302 1 216 1 304 1 219 1 136 1 17 1 19 1 314 2 188 1 278 2 320 2 24 1 229 1 148 1 65 1 235 2 107 1 324 1 199 4 157 2 156 1 203 1 110 1 331 1 207 1 245 1 74 1 249 1 166 1 79 1 
82 1 121 1 84 1 132 1 302 1 216 1 304 1 135 1 306 1 136 1 263 1 314 2 278 1 229 1 320 1 148 1 235 2 65 1 107 1 199 3 155 1 237 1 157 1 331 1 245 1 249 1 79 1 44 1 170 1 
121 3 254 1 48 1 299 1 174 4 84 4 8 1 302 3 303 1 216 5 304 3 94 1 138 1 140 1 274 1 272 1 314 20 273 1 189 1 191 1 318 1 319 1 103 1 279 3 278 21 280 1 230 1 321 4 322 1 63 1 64 1 235 6 107 4 199 41 154 3 158 4 157 8 331 4 245 3 165 2 249 4 43 1 79 5 
121 4 254 1 48 1 299 1 174 4 84 3 8 1 302 4 303 1 216 4 304 4 94 1 138 1 140 2 274 1 272 1 314 20 273 1 189 1 191 1 318 1 319 1 103 1 279 3 278 18 280 1 230 1 321 4 322 1 63 1 64 1 235 8 107 4 199 38 154 3 158 4 157 7 331 4 245 4 165 2 249 3 43 1 79 5 
121 2 4 2 254 1 48 1 299 1 174 7 84 7 8 1 302 2 303 1 216 8 304 2 94 1 140 1 274 1 272 1 314 27 273 2 189 1 191 1 318 1 319 1 103 1 279 2 278 25 230 1 321 4 322 1 63 1 64 1 235 4 107 7 199 52 154 4 158 4 157 14 331 7 245 2 165 1 249 7 43 1 79 8 
121 2 254 1 174 3 84 3 91 1 302 2 216 3 304 2 94 1 138 1 272 1 314 9 273 1 191 1 279 1 278 10 321 2 64 1 235 4 107 3 199 19 154 1 158 2 157 6 331 3 245 2 165 1 249 3 43 2 79 3 
121 3 254 1 48 1 174 2 84 2 8 1 302 3 303 1 216 2 304 3 94 1 140 2 272 2 314 14 191 1 319 1 278 12 279 2 321 4 230 1 63 1 64 1 235 6 107 3 199 26 154 2 157 4 158 2 331 3 245 3 165 2 249 2 43 1 79 3 
171 1 45 1 46 1 59 1 122 1 206 1 7 1 66 1 34 1 326 1 
149 1 20 1 
45 1 59 1 161 1 55 1 7 1 66 1 214 1 34 1 326 1 
171 1 45 1 46 1 59 1 122 1 212 1 125 1 106 1 7 1 66 1 257 1 286 1 238 1 326 1 34 1 11 2 185 1 267 1 
171 1 45 1 46 1 59 1 122 1 212 1 125 1 106 1 7 1 66 1 257 1 286 1 238 1 326 1 34 1 11 2 185 1 267 1 
171 1 45 1 46 1 59 1 122 1 212 1 125 1 106 1 7 1 66 1 257 1 286 1 238 1 326 1 34 1 11 2 185 1 267 1 
193 1 226 1 52 1 
193 1 226 1 52 1 
192 1 168 1 
193 1 192 1 168 1 
295 1 26 1 
2 1 295 1 45 1 123 1 125 1 127 1 7 1 11 1 306 2 136 2 185 1 267 1 20 1 229 2 59 1 26 1 149 1 106 1 66 1 237 2 34 1 326 1 109 1 112 1 113 1 252 1 44 2 
226 1 52 1 
193 1 192 1 168 1 
296 2 297 1 121 1 87 1 302 1 304 1 15 1 306 2 136 2 95 1 314 1 227 1 229 2 278 1 148 1 61 1 65 1 235 2 324 1 199 2 33 1 155 1 156 2 110 1 207 2 245 1 74 1 247 1 166 1 292 2 116 1 
296 2 175 1 85 1 283 1 324 1 258 1 36 1 156 2 70 1 13 1 159 1 219 1 310 1 264 2 207 2 166 1 76 1 271 1 333 1 
296 1 283 1 324 1 258 1 36 1 156 1 134 1 70 1 13 1 159 1 310 1 264 2 207 1 76 1 166 1 271 1 333 1 
296 1 298 1 85 1 324 1 213 1 156 1 70 1 68 1 110 1 207 1 223 1 56 1 74 1 166 1 
296 1 175 1 85 1 283 1 324 1 258 1 36 1 156 1 70 1 13 1 159 1 310 1 264 2 207 1 76 1 166 1 271 1 333 1 
330 1 
81 1 173 1 212 1 248 1 88 1 270 1 200 1 
0 1 81 1 120 1 212 2 47 1 130 1 185 1 312 1 99 1 143 1 106 1 108 1 153 1 200 1 239 1 209 1 248 1 
172 2 81 9 83 2 84 2 176 6 88 1 179 1 259 1 14 1 18 2 185 5 270 1 23 2 99 3 188 3 101 2 102 6 106 5 282 2 107 2 108 4 285 2 200 2 110 3 207 3 40 1 209 4 290 1 294 1 296 3 120 6 212 8 47 4 216 2 219 1 223 1 143 5 231 2 62 2 324 4 151 2 153 12 239 4 156 3 160 2 331 2 163 3 73 1 74 10 248 8 166 3 78 2 79 2 253 2 
81 8 83 1 120 3 211 1 212 5 48 1 47 2 84 2 176 5 303 1 216 2 185 1 18 2 143 1 99 1 101 1 319 1 102 5 279 1 230 1 106 1 63 1 107 2 108 2 153 6 154 1 200 2 158 1 239 2 241 1 331 2 209 2 290 1 248 5 79 2 
81 2 83 1 47 1 299 1 216 1 217 1 306 1 183 1 136 1 18 2 185 1 275 1 318 1 229 1 103 1 106 1 108 1 31 1 237 1 239 1 71 1 209 1 246 1 248 2 79 2 293 1 44 1 170 1 
81 1 212 1 47 1 88 1 108 1 200 1 239 1 209 1 248 1 270 1 
81 5 83 1 120 5 102 5 212 5 84 2 176 5 107 2 153 10 216 2 331 2 18 2 248 5 78 1 79 2 
143 1 99 1 212 1 185 1 106 1 200 1 
296 3 81 1 119 1 47 2 213 1 179 1 259 1 185 2 223 2 56 1 143 2 99 1 188 1 101 1 25 1 194 1 104 1 147 1 106 2 150 1 324 3 108 1 239 2 156 3 110 2 39 1 162 1 207 3 209 2 290 1 74 2 248 1 166 2 
296 1 121 1 302 1 304 1 15 1 306 2 183 1 136 3 17 1 223 1 19 1 188 1 278 1 229 3 24 1 148 1 235 2 65 1 324 1 199 1 237 2 156 1 203 1 110 1 112 1 207 1 245 1 74 1 250 1 166 1 44 2 170 2 
81 1 120 2 101 1 102 2 212 4 47 1 322 1 176 2 108 1 153 4 200 2 239 1 209 1 290 1 248 2 
59 1 291 1 66 1 
59 1 291 1 66 1 
46 1 59 1 26 1 126 1 66 1 
59 1 291 1 66 1 
59 1 66 1 201 1 
59 1 66 1 201 1 
59 1 66 1 201 1 
59 1 66 1 
45 1 7 1 
189 1 318 1 103 1 121 1 279 1 278 4 48 1 174 2 299 1 322 1 235 2 199 8 154 1 302 1 216 1 157 2 304 1 158 1 94 1 245 1 79 1 274 1 314 4 
121 2 48 1 174 2 299 1 302 2 216 1 10 1 304 2 94 1 274 1 314 6 273 1 189 1 318 1 103 1 278 5 279 1 322 1 235 4 107 1 199 11 154 1 158 2 157 3 331 1 245 2 249 1 79 2 
121 3 48 1 299 1 84 2 174 3 302 3 10 1 216 3 303 1 304 3 94 1 140 1 274 1 314 9 189 1 318 1 319 1 103 1 278 10 279 1 230 1 322 1 63 1 235 6 107 2 154 1 199 19 158 1 157 4 331 2 245 3 249 1 79 3 
121 3 48 1 299 1 84 1 174 3 302 3 10 1 216 2 303 1 304 3 94 1 140 1 274 1 314 10 189 1 318 1 319 1 103 1 278 7 279 1 230 1 322 1 63 1 235 6 107 2 154 1 199 17 158 1 157 5 331 2 245 3 249 2 79 3 
189 1 318 1 103 1 121 1 279 1 278 4 48 1 174 2 299 1 322 1 235 2 199 8 154 1 302 1 216 1 157 2 304 1 158 1 94 1 245 1 79 1 274 1 314 4 
121 1 48 1 84 2 174 1 302 1 216 2 303 1 304 1 94 1 314 6 319 1 278 6 279 1 230 1 63 1 235 2 107 2 154 1 199 12 158 1 157 2 331 2 245 1 249 1 79 2 
121 4 48 1 299 1 84 1 174 3 302 4 303 1 10 1 216 2 304 4 94 1 140 2 274 1 314 10 189 1 318 1 319 1 103 1 278 8 279 1 230 1 322 1 63 1 235 8 107 2 199 18 154 1 158 1 157 5 331 2 245 4 249 2 79 3 
121 4 48 1 84 2 174 3 302 4 303 1 216 2 304 4 94 1 138 1 140 2 314 9 319 1 278 7 279 1 230 1 63 1 235 8 107 3 199 16 154 1 158 1 157 6 331 3 245 4 249 3 79 3 
189 2 318 3 278 4 103 1 299 3 174 3 199 7 216 1 157 6 249 3 79 1 274 1 314 3 
121 4 48 1 299 1 84 1 174 3 302 4 303 1 216 2 304 4 94 1 138 1 140 2 274 1 314 10 189 1 318 1 319 1 103 1 278 8 279 1 230 1 322 1 63 1 235 8 107 2 199 18 154 1 158 1 157 4 331 2 245 4 249 1 79 3 
189 1 318 1 103 1 278 4 121 2 174 2 299 1 322 1 235 4 199 8 302 2 216 1 157 3 304 2 245 2 249 1 79 1 140 1 314 4 274 1 
189 1 318 1 278 3 173 1 103 1 299 1 174 2 322 1 199 6 216 1 157 2 79 1 274 1 314 3 
278 2 121 1 174 1 84 1 235 2 107 1 199 4 302 1 216 1 10 1 157 2 304 1 331 1 245 1 249 1 79 1 314 2 
279 1 278 4 174 1 84 1 107 1 199 7 154 1 216 1 158 2 157 2 331 1 249 1 79 1 314 3 273 1 
121 2 4 1 299 2 84 2 174 5 302 2 216 3 304 2 182 1 220 1 140 2 274 1 273 1 314 11 189 1 318 2 103 1 278 12 322 1 107 2 235 4 154 2 199 23 157 9 158 2 331 2 245 2 249 4 79 3 
158 1 278 1 199 1 
199 1 154 1 314 1 
121 1 278 3 84 1 174 2 235 2 107 1 199 6 302 1 10 1 216 1 304 1 157 3 331 1 245 1 249 1 78 1 79 1 314 3 
121 1 48 1 84 2 174 1 302 1 216 2 303 1 304 1 94 1 314 6 319 1 278 6 279 1 230 1 63 1 235 2 107 2 154 1 199 12 158 1 157 2 331 2 245 1 249 1 79 2 
318 1 103 1 278 3 299 1 174 1 199 6 216 1 157 2 249 1 79 1 314 3 
189 1 318 1 278 2 121 1 174 1 299 1 235 2 199 3 302 1 157 2 304 1 220 1 245 1 249 1 140 1 314 1 274 1 
318 2 121 1 278 5 103 1 299 2 174 3 235 2 199 10 302 1 216 2 304 1 157 5 94 1 245 1 246 1 249 2 79 2 314 5 
121 1 235 2 199 2 302 1 304 1 157 1 94 1 331 1 245 1 249 1 79 1 314 2 
278 2 121 1 174 1 84 1 235 2 107 1 199 4 302 1 216 1 157 2 304 1 94 1 331 1 245 1 249 1 79 1 314 2 
318 1 278 2 121 3 299 1 174 1 235 6 199 3 302 3 304 3 157 2 94 1 220 1 245 3 138 1 249 1 140 1 314 1 
1 1 121 5 299 3 84 3 174 7 302 5 10 1 216 5 304 5 94 1 220 1 138 1 139 1 140 2 274 1 314 16 273 1 189 1 318 3 103 2 278 18 279 1 322 1 235 10 107 3 284 1 199 34 154 3 158 4 157 12 331 3 245 5 249 5 79 5 
80 1 306 1 229 1 262 1 136 1 112 1 269 1 
80 1 229 1 215 1 260 1 306 1 262 1 244 1 136 1 112 1 16 1 269 1 98 1 
156 1 110 1 296 1 173 1 207 1 56 1 223 1 74 1 324 1 166 1 213 1 
188 1 296 1 229 2 324 1 237 1 156 1 110 1 203 1 306 1 136 2 112 1 289 1 207 1 19 1 223 1 74 1 166 1 44 1 
188 2 296 1 229 2 231 1 281 1 234 1 324 1 179 1 237 2 217 1 156 1 110 2 203 1 306 2 136 2 112 1 289 1 207 1 19 1 74 3 166 1 23 1 44 1 
296 2 128 1 179 1 217 1 306 2 136 2 19 1 23 1 188 2 229 2 231 1 281 1 234 1 324 1 237 2 37 1 156 2 110 2 112 1 207 2 289 1 74 3 166 1 44 1 
296 3 212 1 128 1 86 1 179 1 92 1 185 2 223 1 23 1 143 1 188 1 231 1 106 2 282 1 324 1 200 1 156 3 110 1 207 3 163 1 74 4 166 1 253 1 
143 1 188 1 296 3 212 1 231 1 128 1 106 2 282 1 324 1 151 1 179 1 200 1 156 3 110 1 207 3 185 2 163 1 223 1 74 4 166 1 23 1 253 1 
156 1 296 1 181 1 207 1 324 1 166 1 
277 1 188 1 296 7 49 1 150 1 324 3 33 1 156 6 110 2 181 1 219 1 39 1 310 1 184 1 208 1 207 7 223 2 73 1 74 3 292 1 166 2 
82 1 174 2 178 1 17 1 19 1 274 1 188 1 189 1 24 1 103 1 278 3 199 6 203 1 110 1 112 2 207 1 289 1 44 1 116 1 296 1 121 2 299 1 132 1 302 2 216 1 304 2 306 1 219 1 136 2 314 3 318 1 229 2 320 1 148 2 322 1 235 4 65 2 324 1 155 1 237 1 156 1 157 2 332 1 245 2 74 1 166 1 79 1 
172 1 81 1 296 1 212 1 123 1 47 2 88 1 259 1 185 3 223 1 270 1 143 2 99 1 106 3 62 1 282 1 108 2 151 1 200 1 156 1 239 2 160 1 207 1 209 2 163 1 248 1 74 2 253 1 
156 2 188 1 110 1 296 2 181 1 219 1 40 1 207 2 73 1 74 2 324 2 166 1 253 1 
296 4 128 1 89 1 324 1 213 1 156 4 110 1 219 1 207 4 223 1 56 1 74 1 166 1 
188 1 296 2 104 1 147 1 177 1 150 1 324 2 179 1 156 2 110 1 39 1 207 2 74 1 166 1 
156 1 296 1 159 1 264 1 207 1 223 1 324 1 166 1 76 1 258 1 
227 1 156 2 110 1 296 2 219 1 310 1 207 2 74 1 324 1 166 1 33 1 
277 1 296 5 89 1 213 1 324 2 179 1 33 1 156 4 110 2 219 1 207 5 208 1 56 1 223 1 74 3 166 2 
296 5 89 1 213 1 324 2 179 1 33 1 156 4 110 2 219 1 308 1 207 5 208 1 56 1 223 1 74 3 166 2 
188 1 296 1 229 2 324 1 237 1 156 1 37 1 110 1 306 1 136 2 112 1 289 1 207 1 19 1 223 1 74 1 166 1 44 1 
188 1 296 1 150 1 324 2 179 1 156 1 110 1 39 1 184 1 207 1 73 1 74 1 166 1 
317 1 117 1 297 1 229 1 61 1 180 1 306 1 136 1 247 1 
240 1 117 1 232 1 
69 1 317 1 117 1 112 1 180 1 
117 1 317 2 212 1 123 1 281 1 106 2 232 1 234 1 282 1 200 1 180 2 217 1 240 1 69 2 93 1 204 1 112 1 114 1 185 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 275 9 143 1 189 4 331 1 4 9 308 1 241 1 33 5 218 1 242 1 267 2 105 1 12 1 369 2 57 1 288 2 41 1 40 7 324 1 114 1 73 1 74 1 48 3 
295 1 275 9 143 1 189 4 331 1 4 9 308 1 241 1 33 5 218 1 242 1 267 2 105 1 12 1 369 2 57 1 288 2 41 1 40 7 324 1 114 1 73 1 74 1 48 3 
295 2 75 1 275 9 189 4 330 1 331 2 4 9 308 1 241 1 33 5 81 1 218 1 242 1 267 2 105 1 12 1 314 1 107 1 369 2 57 1 288 2 41 1 40 6 324 2 114 1 73 2 210 1 48 3 
295 2 75 1 275 9 189 4 330 1 331 2 4 9 308 1 241 1 33 5 81 1 218 1 242 1 267 2 105 1 12 1 314 1 107 1 369 2 57 1 288 2 41 1 40 6 324 2 114 1 73 2 210 1 48 3 
295 2 75 1 275 10 189 5 330 1 331 2 4 10 308 1 241 1 33 6 81 1 218 1 242 1 267 2 105 1 12 1 314 1 107 1 369 2 57 1 288 2 41 1 40 7 324 2 114 1 73 2 210 1 48 4 
295 2 75 1 275 7 189 3 330 1 331 2 4 7 308 1 33 4 81 1 218 1 242 1 267 1 105 1 12 1 314 1 107 1 369 2 57 1 288 2 41 1 40 4 324 2 114 1 73 2 210 1 48 2 
295 1 369 1 275 4 57 1 189 2 331 1 288 1 4 4 41 1 40 3 241 1 33 3 73 1 218 1 242 1 267 2 105 1 48 1 
314 1 369 1 275 2 288 1 331 1 4 2 41 1 324 1 337 1 33 1 91 1 379 1 73 1 242 1 105 1 210 1 
369 2 275 3 189 1 288 2 4 3 41 1 40 1 324 1 114 1 33 2 242 1 105 1 48 1 
262 1 264 1 26 1 
135 1 26 1 159 2 
196 2 211 1 67 1 169 2 120 2 355 2 88 2 20 2 
93 1 297 1 49 1 211 1 27 1 120 2 3 1 234 1 260 1 121 1 167 1 191 1 30 2 309 1 239 1 52 2 169 2 126 1 196 3 13 2 315 1 15 1 370 1 317 1 19 1 346 1 20 2 350 1 376 1 66 1 67 1 354 2 115 1 355 3 88 2 138 1 72 2 
196 1 341 1 102 1 211 1 169 1 120 1 355 1 88 1 46 1 20 1 
196 1 16 1 204 1 101 1 311 1 264 1 206 1 271 1 26 1 88 1 355 1 173 1 46 1 47 1 
196 1 16 2 120 1 20 1 204 1 101 2 311 1 169 1 264 1 271 1 26 1 88 1 355 1 46 1 47 1 
101 1 112 1 16 1 163 1 364 1 
255 1 101 2 352 1 16 2 264 1 26 1 163 1 364 1 
101 1 16 1 163 1 
196 1 341 1 16 1 211 1 120 1 20 1 101 1 102 1 169 1 88 1 355 1 46 1 54 1 364 1 
26 1 
255 1 101 2 16 2 264 1 26 1 163 1 364 1 380 1 
255 1 313 1 245 1 176 1 16 5 95 1 345 1 154 1 163 2 237 1 156 2 101 5 291 2 264 1 26 1 125 1 378 2 364 2 294 1 
262 1 67 1 
196 2 198 1 108 1 120 1 20 1 169 1 67 2 88 2 355 2 
265 1 80 1 208 1 
93 1 196 1 13 1 257 1 317 1 346 1 121 1 167 1 30 1 350 1 67 1 354 1 355 1 115 1 138 1 126 1 
93 1 196 2 13 1 120 1 317 1 346 1 121 1 167 1 30 1 350 1 44 1 169 1 354 1 115 1 88 1 355 2 138 1 137 1 80 1 126 1 
196 5 82 1 0 1 108 1 120 4 248 1 20 1 44 2 169 4 67 1 88 5 355 5 173 1 137 1 
196 2 102 1 157 1 169 2 120 2 355 2 88 2 46 1 
196 3 67 1 44 1 169 3 120 3 355 3 88 3 20 1 
196 1 102 1 169 1 120 1 355 1 88 1 46 1 
196 1 198 1 108 1 169 1 120 1 355 1 88 1 46 1 20 1 
93 1 297 1 211 1 27 1 120 3 3 1 234 1 260 1 121 1 167 1 191 1 30 1 309 1 101 1 239 1 240 1 311 1 52 1 169 3 126 1 196 4 13 1 315 1 16 1 108 1 317 1 346 1 20 2 204 1 350 1 376 1 67 1 44 1 271 1 354 1 115 1 355 4 88 3 138 1 137 1 72 2 46 1 47 1 117 1 
196 2 82 1 67 1 169 1 120 1 44 1 355 2 88 2 173 1 
196 3 16 1 108 1 120 3 50 1 20 1 204 1 101 1 311 1 44 2 169 3 271 1 26 1 88 3 355 3 137 1 46 1 47 1 117 1 
196 2 108 1 120 2 20 1 44 1 169 2 265 1 88 2 355 2 80 1 
93 1 196 1 13 1 317 1 346 1 121 1 167 1 30 1 350 1 67 1 354 1 355 1 115 1 138 1 126 1 
93 1 196 1 13 1 258 1 332 1 121 1 167 1 30 1 350 1 67 1 354 1 355 1 115 1 138 1 126 1 
297 1 27 1 232 1 234 1 3 2 277 1 29 1 306 1 309 1 239 1 335 1 52 4 265 2 363 1 80 2 340 1 342 1 17 1 223 1 376 1 86 1 66 2 72 2 208 2 
196 1 157 1 169 1 120 1 271 1 355 1 88 1 46 1 
359 1 190 1 
359 1 190 1 
97 1 371 1 
97 1 371 1 
97 1 371 1 
10 1 359 1 190 1 
10 1 359 1 190 1 
61 1 359 1 190 1 
212 1 377 1 359 2 97 1 371 1 190 2 
10 1 359 1 190 1 
215 1 359 1 190 1 
215 1 359 1 190 1 
215 1 359 1 190 1 
160 1 300 1 120 2 359 1 190 1 192 1 101 1 310 1 169 2 149 1 312 1 196 2 16 1 178 1 132 1 61 1 23 1 67 1 87 1 136 1 69 1 88 2 355 2 227 1 
130 1 142 1 160 2 16 2 300 2 200 1 344 1 212 1 178 2 359 2 190 2 261 2 101 2 224 1 87 1 26 1 69 3 227 2 243 1 
295 1 331 1 73 1 
331 1 91 1 73 1 
295 2 266 1 331 3 91 1 372 1 207 1 
295 1 325 1 266 1 331 2 91 1 372 1 
295 1 266 1 331 2 91 1 372 2 
255 1 95 2 232 1 163 1 29 1 146 2 192 1 147 1 101 5 310 1 264 1 194 2 340 1 364 4 34 1 287 1 16 5 154 1 345 3 347 1 132 1 156 1 223 1 64 1 222 2 85 1 291 1 135 1 26 2 378 1 90 1 159 3 
255 1 327 1 95 6 232 3 162 1 163 6 145 1 29 3 146 6 237 1 101 9 310 4 264 1 194 6 340 3 364 7 284 1 34 2 367 5 16 9 343 1 154 1 345 8 347 3 133 1 156 2 223 3 85 1 112 5 291 2 135 3 26 5 378 2 90 2 159 9 
95 2 232 1 29 1 146 2 237 1 147 1 101 3 310 1 264 1 194 2 340 1 364 2 34 1 16 3 345 3 347 1 156 1 64 1 222 1 223 1 291 1 135 2 26 3 378 1 90 1 159 4 
327 1 95 4 232 2 145 1 29 2 146 4 237 1 101 4 147 1 310 2 264 1 194 4 340 2 34 1 364 3 16 4 343 1 345 5 347 2 156 1 64 1 222 2 223 2 291 1 135 3 26 4 378 1 90 1 159 7 
262 1 2 1 115 1 
334 1 115 1 
25 1 
93 1 115 1 121 1 
252 1 115 1 
93 1 115 1 
93 1 2 2 9 1 18 1 115 3 121 1 
187 1 286 1 83 1 17 3 3 3 37 1 277 2 236 1 223 1 134 2 24 1 52 7 66 4 45 1 323 1 89 1 340 1 
187 1 286 1 83 1 17 3 3 3 37 1 277 2 236 1 223 1 134 2 24 1 52 7 66 4 45 1 323 1 89 1 340 1 
187 1 286 1 106 1 83 1 17 3 3 3 37 1 277 2 236 1 223 1 134 2 24 1 52 7 66 4 45 1 323 1 89 1 340 1 
187 2 297 1 27 1 77 1 328 1 232 3 3 15 236 2 277 5 29 3 309 1 7 1 168 1 239 1 52 31 172 1 340 4 127 1 195 1 286 2 83 2 17 10 35 3 37 1 347 3 134 3 223 4 24 1 43 4 66 16 323 1 45 5 89 1 72 2 
186 1 297 2 187 1 27 2 3 4 277 3 236 1 309 2 239 2 52 9 340 1 195 1 286 1 83 1 17 4 249 1 37 1 223 1 134 2 24 1 66 5 45 1 323 1 72 4 
295 1 275 2 233 1 331 2 4 2 5 1 167 1 30 1 263 1 33 1 242 1 105 1 150 1 13 1 128 1 369 1 250 1 288 1 269 1 41 1 40 1 205 1 324 1 326 1 354 1 138 1 185 1 91 1 73 1 207 1 
295 1 229 1 275 3 233 1 331 2 4 3 5 1 167 1 30 1 263 1 33 1 338 1 105 1 13 1 128 1 247 1 369 1 250 1 288 1 269 1 41 1 205 1 40 2 324 1 326 1 354 1 138 1 91 1 73 1 207 1 
295 1 275 2 233 1 331 2 4 2 167 1 30 1 33 1 338 1 105 1 13 1 128 1 247 1 250 1 269 1 41 1 205 1 40 2 324 1 326 1 354 1 138 1 91 1 73 1 207 1 
93 1 188 1 13 1 229 1 369 1 275 1 36 1 250 2 288 1 4 1 167 1 30 1 350 1 205 2 254 1 53 1 281 1 324 2 354 1 326 2 115 1 138 1 217 1 
295 1 13 1 128 1 247 1 369 1 275 1 233 1 331 2 288 1 250 1 4 1 167 1 5 1 30 1 269 1 263 1 205 1 324 1 354 1 326 1 138 1 91 1 73 1 207 1 242 1 150 1 
305 1 
230 1 95 1 144 4 333 2 101 4 102 1 54 1 104 3 196 2 151 1 341 1 16 4 58 3 154 1 345 1 20 1 62 1 156 1 204 1 110 1 291 1 206 1 26 1 355 2 118 1 255 2 211 1 120 1 259 1 163 5 31 1 311 1 169 1 79 2 264 1 173 1 174 1 366 1 319 2 321 1 271 1 135 2 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
230 1 95 1 144 4 333 2 101 4 102 1 54 1 104 3 196 2 151 1 341 1 16 4 58 3 154 1 345 1 20 1 62 1 156 1 204 1 110 1 291 1 206 1 26 1 355 2 118 1 255 2 211 1 120 1 259 1 163 5 31 1 311 1 169 1 79 2 264 1 173 1 174 1 366 1 319 2 321 1 271 1 135 2 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
230 1 94 2 95 1 329 1 144 3 333 1 101 4 102 1 54 1 55 2 104 2 196 2 246 1 341 1 16 4 154 1 345 1 58 2 20 1 156 1 204 1 110 1 291 1 206 1 26 1 355 2 159 2 118 1 255 2 211 1 120 1 259 1 163 4 31 1 311 1 169 1 264 1 173 1 271 1 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
93 1 228 1 230 1 95 2 144 4 333 2 101 5 104 2 13 2 196 1 246 1 16 5 58 2 345 2 154 1 156 1 204 1 110 1 291 1 350 2 254 1 206 1 26 1 354 2 115 1 355 1 159 2 255 3 118 1 259 1 163 6 164 1 167 1 30 2 31 1 311 1 79 2 173 1 217 1 34 1 366 1 319 2 182 1 375 1 135 2 271 1 88 1 378 1 138 1 92 2 46 1 47 1 381 2 141 1 
255 1 118 1 230 1 259 1 163 2 144 2 31 1 101 3 311 1 173 1 104 1 196 1 16 3 204 1 206 1 271 1 355 1 88 1 46 1 380 1 47 1 141 1 
118 1 255 1 230 1 259 1 163 1 144 3 333 1 31 1 101 3 311 1 264 1 173 1 196 1 16 3 204 1 206 1 271 1 26 1 355 1 88 1 46 1 47 1 380 1 141 1 
118 1 196 1 16 2 230 1 259 1 58 1 163 1 144 2 31 1 204 1 101 2 311 1 271 1 206 1 88 1 355 1 173 1 46 1 104 1 47 1 141 1 
230 1 95 1 144 4 333 2 101 5 102 1 54 1 104 4 196 2 151 1 341 1 16 5 58 4 154 1 345 1 20 1 62 1 156 1 204 1 110 1 291 1 206 1 26 1 355 2 255 3 118 1 211 1 120 1 259 1 163 7 31 1 311 1 169 1 79 2 264 1 173 1 174 1 366 1 319 2 39 1 321 1 271 1 135 2 88 2 378 1 46 2 92 2 47 1 380 1 141 1 381 2 
230 1 95 1 144 3 333 1 101 3 102 1 54 1 104 1 196 2 246 1 341 1 16 3 154 1 345 1 58 1 20 1 156 1 204 1 110 1 291 1 206 1 26 3 355 2 159 2 118 1 255 1 211 1 120 1 259 1 163 2 31 1 311 1 169 1 79 1 264 1 173 1 366 1 319 2 271 1 135 2 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
230 1 95 1 144 4 333 2 101 4 102 1 54 1 104 2 196 2 151 1 341 1 16 4 154 1 345 1 58 2 20 1 156 1 62 1 204 1 110 1 291 1 206 1 26 1 355 2 118 1 255 2 211 1 120 1 259 1 163 4 31 1 311 1 169 1 79 2 264 1 173 1 366 1 319 2 321 1 271 1 135 2 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
230 1 95 1 144 4 333 2 101 4 102 1 54 1 104 2 196 2 151 1 341 1 16 4 154 1 345 1 58 2 20 1 156 1 62 1 204 1 110 1 291 1 206 1 26 1 355 2 118 1 255 2 211 1 120 1 259 1 163 4 31 1 311 1 169 1 79 2 264 1 173 1 366 1 319 2 321 1 271 1 135 2 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
230 1 94 2 95 1 329 1 144 4 333 2 101 4 102 1 54 1 55 2 104 2 196 2 341 1 16 4 154 1 345 1 58 2 20 1 156 1 204 1 110 1 291 1 68 1 206 1 26 1 355 2 159 2 118 1 255 2 211 1 120 1 259 1 161 1 163 4 31 1 311 1 169 1 264 1 173 1 321 1 271 1 88 2 378 1 46 2 92 2 47 1 141 1 381 2 
297 1 27 1 234 1 3 3 236 1 277 2 262 1 309 1 239 1 52 6 265 1 80 1 340 1 286 1 17 2 37 1 223 1 134 1 24 1 376 1 86 1 66 3 67 2 323 1 72 2 208 1 
297 2 27 2 77 1 232 2 3 6 234 2 51 1 277 1 29 1 191 1 309 2 7 1 239 2 52 14 216 1 265 4 80 11 340 1 197 1 370 1 17 2 35 3 347 2 349 1 223 2 351 1 376 1 43 3 66 8 67 1 45 1 72 4 208 11 
93 1 297 1 257 1 120 1 27 1 234 1 3 1 121 1 167 1 30 1 191 1 309 1 239 1 52 2 169 1 361 1 265 1 126 1 13 1 197 1 196 2 370 1 317 1 346 1 22 1 350 1 322 1 376 1 66 1 67 1 44 1 354 1 115 1 355 2 88 1 138 1 137 1 72 2 
93 2 232 1 3 7 234 3 236 1 277 3 191 1 238 2 239 3 52 14 340 2 13 1 196 3 197 1 286 1 17 3 346 2 347 1 24 1 350 1 66 7 67 2 354 1 355 3 115 2 72 6 208 4 297 3 76 1 28 1 27 3 120 1 29 1 166 1 121 2 167 2 30 1 309 3 169 1 265 4 80 4 126 2 315 2 370 1 317 2 37 1 374 1 134 1 223 2 376 3 42 2 44 1 323 1 88 1 137 1 138 2 
93 2 297 2 120 1 27 2 302 1 234 2 3 1 123 1 167 2 30 8 191 1 309 2 239 2 52 2 169 1 32 1 217 1 196 1 13 8 247 1 153 1 370 1 19 2 202 1 350 2 86 1 376 2 66 1 254 1 44 1 354 7 355 1 88 1 115 3 71 1 138 2 185 1 72 4 272 1 
297 1 120 1 27 1 232 1 234 1 3 2 277 1 29 1 309 1 239 1 52 3 169 1 265 1 80 1 340 1 197 1 196 1 108 1 17 1 347 1 20 1 181 1 223 1 376 1 66 1 88 1 355 1 72 2 208 1 
297 1 342 1 17 1 27 1 232 1 234 1 223 1 309 1 86 1 376 1 239 1 52 2 66 2 45 1 265 1 80 1 72 2 208 1 
297 1 17 1 27 1 234 1 3 2 277 1 29 1 306 1 309 1 86 1 376 1 239 1 52 2 265 1 80 1 72 2 340 1 208 1 
297 1 27 1 232 1 234 1 3 2 277 1 29 1 309 1 239 1 52 4 265 2 80 2 340 1 17 2 347 1 223 1 376 1 86 1 66 2 45 1 72 2 208 2 
297 1 342 1 17 1 27 1 232 1 234 1 223 1 309 1 376 1 239 1 52 2 66 2 45 1 32 1 265 1 80 1 72 2 208 1 
297 1 17 1 27 1 234 1 3 2 277 1 29 1 306 1 309 1 376 1 239 1 52 2 32 1 265 1 80 1 72 2 340 1 208 1 
297 1 27 1 232 1 234 1 3 2 277 1 29 1 309 1 239 1 52 4 32 1 265 2 80 2 340 1 17 2 347 1 223 1 376 1 66 2 45 1 72 2 208 2 
297 1 27 1 232 1 234 1 3 2 277 1 29 1 309 1 239 1 52 4 265 2 80 2 340 1 17 2 347 1 223 1 376 1 66 2 45 1 72 2 208 2 
93 1 297 1 196 1 13 1 315 1 370 1 27 1 317 1 346 1 3 1 234 1 121 1 167 1 191 1 30 1 309 1 350 1 239 1 376 1 52 2 66 1 67 1 354 1 355 1 115 1 138 1 72 2 126 1 
93 1 297 1 196 1 13 1 258 1 370 1 27 1 3 1 234 1 332 1 121 1 167 1 191 1 30 1 309 1 350 1 239 1 376 1 52 2 66 1 67 1 354 1 355 1 115 1 138 1 72 2 158 1 126 1 
297 1 27 1 232 1 234 1 3 2 277 1 29 1 309 1 239 1 52 4 265 2 80 2 340 1 197 1 17 2 347 1 223 1 376 1 66 2 45 1 72 2 208 2 
93 1 297 1 27 1 232 1 3 2 234 1 277 1 29 1 121 1 167 1 30 1 309 1 239 1 52 4 265 2 80 2 340 1 126 1 13 1 196 1 315 1 17 2 317 1 346 1 347 1 223 1 42 1 376 1 66 2 45 1 354 1 115 1 355 1 138 1 185 1 72 2 208 2 
297 1 120 1 27 1 232 1 96 1 3 1 234 1 29 1 309 1 239 1 52 3 169 1 265 1 80 1 340 1 197 1 196 1 108 1 17 1 347 1 20 1 223 1 376 1 66 2 45 1 88 1 355 1 72 2 208 1 
297 2 274 1 276 2 27 2 77 1 232 3 3 10 277 3 214 1 29 3 309 2 7 1 239 2 52 19 360 1 340 3 11 1 316 2 17 6 35 1 249 1 220 1 347 3 320 1 223 3 253 1 43 2 66 9 45 3 72 4 
297 3 274 2 276 4 231 1 27 3 77 2 232 3 3 12 277 2 214 2 29 2 6 1 122 1 309 3 239 3 52 26 340 2 195 2 11 1 316 1 17 4 35 2 249 1 220 1 131 1 347 3 111 1 223 3 253 1 43 2 66 14 45 2 72 6 140 1 
297 3 274 2 276 4 231 1 27 3 77 3 232 4 3 21 236 1 277 4 214 1 29 4 122 1 6 1 309 3 7 1 239 3 52 41 340 5 195 1 11 1 368 1 316 1 286 1 17 8 35 3 249 1 220 1 131 1 37 1 347 4 320 1 134 1 111 1 223 5 253 1 24 1 43 4 66 20 323 1 45 4 72 6 140 1 
297 4 274 2 276 4 231 1 27 4 77 3 232 4 3 18 236 1 277 4 214 1 29 3 122 1 6 1 309 4 7 1 239 4 52 38 340 4 195 2 11 1 368 1 316 1 286 1 17 7 35 3 249 1 220 1 131 1 37 1 347 4 320 1 134 1 111 1 223 5 253 1 24 1 43 4 66 20 323 1 45 3 72 8 140 1 
297 2 274 1 276 4 231 1 27 2 77 2 232 7 3 25 236 1 51 2 277 7 214 1 29 7 122 1 6 1 309 2 7 2 239 2 52 52 340 8 195 1 11 1 316 1 286 1 17 14 35 4 249 1 220 1 131 1 37 1 347 7 134 1 111 1 223 8 253 1 24 1 43 4 66 27 323 1 45 7 72 4 140 1 
65 1 224 1 142 1 160 1 300 1 212 1 178 1 359 1 227 1 190 1 
61 1 312 1 
285 1 307 1 160 1 300 1 178 1 359 1 227 1 190 1 209 1 
10 1 304 1 
215 1 377 1 348 1 
130 1 142 1 16 1 160 1 300 1 200 1 212 1 178 1 359 1 190 1 261 1 101 1 224 1 87 1 26 1 69 2 227 1 243 1 
130 1 142 1 16 1 160 1 300 1 200 1 212 1 178 1 359 1 190 1 261 1 101 1 224 1 87 1 26 1 69 2 227 1 243 1 
130 1 142 1 16 1 160 1 300 1 200 1 212 1 178 1 359 1 190 1 261 1 101 1 224 1 87 1 26 1 69 2 227 1 243 1 
10 1 377 1 304 1 
10 1 377 1 304 1 
215 1 348 1 
215 1 377 1 348 1 
23 1 149 1 
160 1 300 1 120 2 359 1 190 1 261 1 192 1 101 1 310 1 169 2 149 1 312 1 364 1 243 1 196 2 16 1 178 1 132 1 61 1 23 1 353 1 67 1 136 1 69 1 355 2 88 2 227 1 
93 1 357 1 297 1 27 1 234 1 3 1 303 1 167 1 30 2 191 1 309 1 239 1 52 2 13 2 197 1 196 2 370 1 219 1 19 2 251 1 376 1 66 1 354 2 115 1 355 2 88 2 138 1 71 1 72 2 116 1 272 1 
295 1 13 2 128 1 247 1 331 2 250 1 167 1 30 2 124 1 269 1 263 1 354 2 336 1 138 1 91 1 185 1 73 1 207 1 244 1 
295 1 13 1 14 1 128 1 247 1 331 2 250 1 167 1 30 1 269 1 263 1 354 1 336 1 138 1 91 1 73 1 207 1 
93 1 13 1 56 1 250 1 167 1 30 1 350 1 254 1 53 1 354 1 115 1 138 1 217 1 244 1 
295 1 13 1 128 1 247 1 331 2 250 1 167 1 30 1 124 1 269 1 263 1 354 1 336 1 138 1 91 1 73 1 207 1 244 1 
296 1 
93 1 297 1 211 1 27 1 120 2 3 1 234 1 260 1 121 1 167 1 191 1 30 1 309 1 239 1 52 1 169 2 126 1 13 1 196 3 315 1 317 1 346 1 20 2 350 1 376 1 67 1 354 1 355 3 88 2 115 1 138 1 72 2 
95 2 154 1 345 1 146 2 156 1 134 1 375 1 291 1 135 2 264 2 194 2 26 4 378 1 159 4 34 1 
245 1 262 1 176 1 95 1 264 1 345 1 26 1 
255 1 95 1 163 1 101 1 79 1 264 1 366 1 16 1 345 1 154 1 319 1 156 1 291 1 135 1 26 2 378 1 159 1 
93 3 273 1 2 2 95 8 232 2 146 6 193 2 101 5 334 3 8 2 9 1 194 6 340 2 245 1 13 3 16 5 345 9 154 4 59 2 347 2 290 1 109 2 156 4 252 2 291 4 350 1 354 3 26 8 115 10 293 1 159 12 255 3 76 2 163 5 165 2 29 2 121 3 167 3 30 3 264 2 34 2 365 1 176 1 129 2 180 1 375 1 223 2 183 2 135 6 138 4 378 4 185 1 226 2 47 2 
255 1 95 5 77 1 232 2 163 1 165 2 146 5 29 2 6 1 122 1 101 1 264 2 194 5 34 1 340 2 16 1 35 1 345 8 154 2 131 1 347 2 109 1 84 1 156 2 375 1 111 1 223 2 291 2 43 1 135 3 26 5 139 1 378 2 159 6 140 1 
211 1 95 2 120 1 165 2 236 1 101 1 102 1 169 1 54 1 340 1 196 1 151 1 286 1 341 1 16 1 154 1 345 2 37 1 20 1 109 1 155 1 156 1 223 2 291 1 355 1 88 1 378 1 46 1 
245 1 176 1 95 1 154 1 345 1 156 1 291 1 264 1 26 1 378 1 
76 1 95 5 232 2 345 5 165 2 347 2 146 5 29 2 109 1 223 2 135 5 194 5 26 5 159 10 340 2 
255 1 101 1 16 1 264 1 26 1 163 1 
93 1 255 2 228 1 95 2 163 4 237 1 167 1 30 4 101 3 283 1 217 1 34 2 13 4 16 3 154 1 345 2 180 1 182 1 156 2 375 2 291 2 350 2 254 1 70 1 354 4 115 1 138 1 378 2 293 2 
1 1 300 1 227 1 
1 1 300 1 227 1 
224 1 300 1 149 1 339 1 227 1 
1 1 300 1 227 1 
300 1 199 1 227 1 
300 1 199 1 227 1 
300 1 199 1 227 1 
300 1 227 1 
359 1 190 1 
195 1 297 2 286 1 17 3 27 2 3 4 37 1 277 2 236 1 134 1 223 1 309 2 24 1 239 2 52 8 66 4 45 1 323 1 72 4 340 1 
286 1 17 2 3 3 236 1 277 2 37 1 134 1 262 1 223 1 24 1 52 6 66 3 323 1 340 1 
297 1 17 2 27 1 232 1 3 2 277 1 347 1 29 1 373 1 223 1 309 1 239 1 52 4 66 2 45 1 72 2 340 1 
17 2 77 1 35 1 232 1 3 4 277 1 347 1 29 1 223 1 7 1 43 2 52 7 66 3 45 1 340 1 
297 2 27 2 232 2 3 12 236 2 277 5 51 1 29 2 309 2 7 1 239 2 52 23 340 3 195 2 286 2 17 9 35 2 37 1 347 2 21 1 349 1 134 1 223 3 24 1 43 2 66 11 323 1 45 4 72 4 
52 1 43 1 3 1 
52 1 66 1 35 1 
297 1 76 1 27 1 17 3 232 1 3 3 347 1 277 2 29 1 373 1 223 1 309 1 239 1 52 6 66 3 45 1 72 2 340 1 
297 1 27 1 77 1 232 2 3 6 277 1 29 2 6 1 122 1 309 1 239 1 52 12 340 2 17 2 35 1 249 1 131 1 347 2 223 2 111 1 43 1 66 6 45 1 72 2 140 1 
286 1 17 2 3 3 37 1 236 1 277 1 223 1 52 6 66 3 45 1 340 1 
195 1 297 1 286 1 17 2 27 1 3 2 277 1 236 1 21 1 309 1 24 1 239 1 52 3 66 1 45 1 323 1 72 2 
297 1 286 2 27 1 17 5 249 1 3 5 236 2 277 3 37 1 155 1 223 2 309 1 239 1 52 10 66 5 45 2 72 2 340 2 
297 1 27 1 17 1 232 1 249 1 223 1 309 1 239 1 52 2 66 2 45 1 72 2 
297 1 17 2 27 1 232 1 249 1 3 2 277 1 347 1 29 1 223 1 309 1 239 1 52 4 66 2 45 1 72 2 340 1 
195 1 297 3 286 1 27 3 17 2 249 1 3 2 236 1 277 1 21 1 320 1 309 3 239 3 52 3 66 1 45 1 72 6 
297 5 27 5 77 1 328 1 232 3 3 18 236 3 277 7 29 3 309 5 7 1 239 5 52 34 172 1 340 5 127 1 195 2 286 3 17 12 35 3 249 1 37 2 347 3 21 1 373 1 320 1 134 1 223 5 24 1 43 4 66 16 323 1 45 5 72 10 
297 1 27 1 77 1 3 4 236 1 277 2 6 1 309 1 239 1 52 8 340 1 286 1 17 2 35 1 249 1 37 1 134 1 223 1 24 1 43 1 66 4 323 1 72 2 
297 2 27 2 77 1 232 1 3 5 277 2 236 1 6 1 309 2 7 1 239 2 52 11 340 1 286 1 17 3 35 1 249 1 37 1 347 1 373 1 134 1 223 2 24 1 43 2 66 6 323 1 45 1 72 4 
297 3 27 3 77 1 232 2 3 10 236 1 277 3 29 2 6 1 122 1 309 3 239 3 52 19 340 3 195 1 286 1 17 4 35 1 249 1 131 1 37 1 347 2 373 1 134 1 223 3 111 1 24 1 43 1 66 9 323 1 45 1 72 6 140 1 
297 3 27 3 77 1 232 2 3 7 236 1 277 3 29 1 6 1 122 1 309 3 239 3 52 17 340 2 195 1 286 1 17 5 35 1 249 1 131 1 37 1 347 2 373 1 134 1 223 3 111 1 24 1 43 1 66 10 323 1 45 2 72 6 140 1 
297 1 27 1 77 1 3 4 236 1 277 2 6 1 309 1 239 1 52 8 340 1 286 1 17 2 35 1 249 1 37 1 134 1 223 1 24 1 43 1 66 4 323 1 72 2 
297 1 27 1 77 1 232 2 3 6 277 1 29 2 6 1 122 1 309 1 239 1 52 12 340 2 17 2 35 1 249 1 131 1 347 2 223 2 111 1 43 1 66 6 45 1 72 2 140 1 
297 4 27 4 77 1 232 2 3 8 236 1 277 3 29 1 6 1 122 1 309 4 239 4 52 18 340 2 195 2 286 1 17 5 35 1 249 1 131 1 37 1 347 2 373 1 134 1 111 1 223 3 24 1 43 1 66 10 323 1 45 2 72 8 140 1 
297 4 27 4 77 1 232 3 3 7 277 3 29 2 6 1 122 1 309 4 239 4 52 16 340 2 195 2 17 6 35 1 249 1 131 1 347 3 320 1 111 1 223 3 43 1 66 9 45 3 72 8 140 1 
286 3 17 6 3 4 236 3 277 3 37 1 223 1 24 2 52 7 66 3 323 1 45 3 340 1 
297 4 27 4 77 1 232 2 3 8 236 1 277 3 29 1 6 1 122 1 309 4 239 4 52 18 340 2 195 2 286 1 17 4 35 1 249 1 131 1 37 1 347 2 320 1 134 1 111 1 223 3 24 1 43 1 66 10 323 1 45 1 72 8 140 1 
196 1 82 1 270 1 67 1 355 1 88 1 173 1 
196 1 82 1 177 1 235 1 38 1 279 1 270 1 67 1 282 1 88 1 355 1 173 1 
93 1 30 1 262 1 13 1 350 1 254 1 354 1 115 1 138 1 217 1 167 1 
93 1 196 2 13 1 120 1 346 1 121 1 167 1 30 1 350 1 67 1 44 1 169 1 354 1 115 1 88 1 355 2 138 1 126 1 
93 2 120 1 121 2 167 1 30 1 311 1 169 2 126 1 13 1 196 2 346 1 59 1 252 1 67 1 44 1 271 1 354 1 355 2 88 2 115 3 138 1 293 1 46 1 
93 2 256 1 120 1 332 1 121 2 167 1 30 2 311 1 169 2 126 1 13 2 196 2 59 1 252 1 67 1 44 1 271 1 354 2 355 2 88 2 115 3 138 1 293 1 46 1 
93 1 13 3 298 1 256 1 16 2 2 1 163 1 59 1 121 1 167 1 30 3 203 1 252 1 101 2 350 1 334 1 264 1 26 1 354 3 115 4 138 1 293 1 47 1 
93 1 13 3 256 1 16 2 2 1 163 1 59 1 121 1 167 1 30 3 252 1 101 2 193 1 350 1 334 1 264 1 26 1 354 3 115 4 138 1 293 1 47 1 
30 1 13 1 153 1 354 1 138 1 167 1 
93 2 13 7 247 1 358 1 153 1 302 1 19 1 213 1 98 1 202 1 121 1 123 1 167 2 30 7 350 2 9 1 354 6 115 3 71 1 138 3 185 1 
93 1 297 2 120 1 27 2 3 3 234 2 277 2 236 1 121 1 167 1 30 1 238 1 309 2 239 2 52 6 169 1 265 1 80 1 340 1 126 1 197 1 196 2 13 1 315 1 286 1 17 2 219 1 317 1 346 1 37 1 134 1 223 1 24 1 376 2 42 1 66 3 67 2 44 1 323 1 354 1 115 1 355 2 88 1 138 1 72 4 185 1 208 1 
255 1 2 1 95 1 163 2 30 1 101 3 193 1 334 1 8 1 264 1 364 1 245 1 13 1 176 1 129 1 16 3 345 1 154 2 180 1 156 2 350 1 291 2 183 1 26 1 354 1 115 2 378 2 47 1 
93 1 13 2 2 1 153 1 290 1 121 1 167 1 30 2 9 1 354 2 115 2 138 2 185 1 
93 1 13 4 256 1 167 1 30 4 99 1 350 1 254 1 354 4 115 1 138 1 185 1 217 1 
93 1 13 2 152 1 358 1 213 1 121 1 167 1 30 2 63 1 100 1 354 2 115 1 138 2 293 1 
30 1 13 1 128 1 350 1 354 1 138 1 331 1 91 1 73 1 167 1 
93 1 13 2 247 1 167 1 30 2 251 1 354 2 115 1 71 1 138 1 185 1 
93 2 13 5 202 1 167 2 123 1 30 5 99 1 350 1 254 1 354 4 115 3 71 1 138 2 293 1 217 1 185 1 
93 2 13 5 167 2 123 1 30 5 99 1 350 1 254 1 354 4 115 3 71 1 138 2 293 1 217 1 185 1 184 1 
93 1 196 2 13 1 120 1 332 1 121 1 167 1 30 1 350 1 67 1 44 1 169 1 354 1 115 1 88 1 355 2 138 1 126 1 
93 1 13 1 358 1 213 1 98 1 121 1 167 1 30 1 9 1 354 1 115 1 138 2 293 1 
280 1 67 1 225 1 60 1 268 1 
16 2 299 1 201 1 60 2 268 2 280 2 204 1 101 2 311 1 67 1 264 1 271 1 225 1 113 1 26 1 46 1 364 1 47 1 117 1 
357 1 196 1 60 1 303 1 268 1 225 1 88 1 355 1 116 1 
299 1 225 1 201 1 
12 1 314 1 369 1 275 3 288 1 4 3 40 1 41 1 33 1 242 1 105 1 
189 1 33 1 179 1 48 1 
41 1 33 1 
262 1 41 1 33 1 105 1 
41 1 275 1 369 1 33 1 288 1 4 1 105 1 
205 1 324 1 4 1 
314 2 41 1 275 3 369 1 119 1 103 1 33 1 288 1 221 1 4 3 242 1 105 1 
41 1 40 1 275 2 369 1 33 1 288 1 267 1 4 2 105 1 
295 1 275 1 369 1 57 1 189 1 33 1 331 1 288 1 73 1 4 1 242 1 
41 1 275 1 369 1 33 1 288 1 4 1 242 1 
41 2 275 1 369 1 288 1 4 1 242 1 105 1 
175 1 41 1 275 2 369 2 301 1 292 1 33 1 288 2 4 2 242 1 
12 1 369 1 275 3 189 1 288 1 4 3 308 1 41 1 40 2 33 2 242 1 105 1 48 1 
295 1 369 1 275 2 331 2 288 1 4 2 41 1 40 1 170 1 33 1 91 1 73 1 242 1 207 1 105 1 
369 2 275 4 189 1 288 2 4 4 41 1 40 2 241 1 33 2 242 1 267 1 105 1 48 1 
41 1 275 1 369 1 33 1 288 1 4 1 242 1 105 1 
314 1 275 4 369 1 119 1 189 1 179 1 288 1 4 4 41 2 40 2 103 1 33 3 105 2 48 1 
369 1 275 2 288 1 78 1 4 2 41 1 40 1 171 1 33 1 242 1 74 1 105 1 
314 2 41 1 275 3 369 1 119 2 103 1 33 1 288 1 4 3 242 1 105 1 278 1 
33 2 318 1 356 2 289 1 
275 1 369 1 362 1 288 1 4 1 242 1 
12 1 41 1 40 1 275 2 369 1 33 1 288 1 4 2 242 1 105 1 
148 1 
41 1 275 1 369 1 33 1 288 1 4 1 242 1 105 1 

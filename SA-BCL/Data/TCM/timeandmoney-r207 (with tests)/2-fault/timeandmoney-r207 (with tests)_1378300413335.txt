#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 167 (206,314) (206,314) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 7 67 3 167 1 206 1 25 2 188 1 174 1 215 1 259 1 314 1 195 2 263 2 266 3 265 4 128 1 131 1 197 1 349 2 158 1 42 2 112 2 253 2 45 1 90 7 358 1 
23 9 67 5 167 1 206 1 25 2 188 1 172 1 174 1 215 1 314 1 259 2 195 2 153 1 263 2 266 4 265 6 128 1 129 1 131 1 197 1 349 2 158 1 42 2 112 3 253 2 45 1 90 9 358 1 
23 10 67 6 167 1 206 1 25 2 188 1 172 1 174 1 215 1 314 1 259 2 195 2 153 1 263 2 266 5 265 7 128 1 129 1 131 1 197 1 349 2 158 1 42 2 112 4 253 2 45 1 90 10 358 1 
23 7 67 4 167 1 206 1 25 2 188 1 172 1 174 1 215 1 314 1 259 1 195 2 263 2 266 3 265 4 128 1 129 1 131 1 197 1 349 2 158 1 42 2 112 2 253 2 45 1 90 7 358 1 
129 1 23 4 167 1 67 3 25 1 197 1 349 1 172 1 174 1 42 1 259 2 112 1 253 1 153 1 263 1 90 4 265 3 266 2 
129 1 279 1 131 1 67 1 23 2 280 1 25 1 272 1 172 1 174 1 42 1 253 1 195 1 263 1 90 2 358 1 
129 1 67 2 23 3 42 2 112 1 195 1 45 1 263 2 172 1 265 1 266 1 90 3 174 1 
129 1 167 1 67 5 23 9 25 1 197 1 349 1 172 1 174 1 212 1 158 1 42 2 259 2 112 3 253 1 195 1 45 1 153 1 263 2 128 1 90 9 265 7 266 4 256 1 
129 1 167 1 67 5 23 9 25 1 197 1 349 1 172 1 174 1 212 1 158 1 42 2 259 2 112 3 253 1 195 1 45 1 153 1 263 2 128 1 90 9 265 7 266 4 256 1 
106 1 101 1 62 1 
68 2 62 1 187 1 
204 1 267 2 325 1 78 2 125 2 227 2 254 2 52 2 
204 1 207 1 69 1 189 1 209 2 119 1 190 1 52 3 338 1 72 1 98 1 125 2 7 1 35 1 177 1 321 2 267 2 372 1 325 1 346 1 78 2 374 2 132 1 79 1 156 1 348 1 376 1 85 1 379 1 249 1 354 1 161 1 227 3 89 2 254 2 65 2 142 1 
130 1 204 1 267 1 78 1 125 1 227 1 211 1 254 1 304 1 52 1 
130 1 228 1 267 1 101 1 359 1 268 1 62 1 52 1 53 1 14 1 16 1 227 1 100 1 46 1 
130 1 267 1 101 1 78 1 359 1 268 1 62 1 52 1 53 1 14 2 125 1 227 1 254 1 100 1 46 2 
257 1 76 1 14 1 86 1 46 1 
76 1 14 2 86 1 101 1 6 1 62 1 21 1 46 2 
76 1 14 1 46 1 
130 1 204 1 267 1 78 1 211 1 52 1 86 1 14 1 224 1 125 1 227 1 254 1 46 1 304 1 
62 1 
76 1 14 2 86 1 101 1 6 1 50 1 62 1 46 2 
22 1 59 1 144 2 76 2 77 1 101 1 62 1 29 1 214 1 86 2 14 5 237 1 6 1 57 1 356 2 262 1 342 1 46 5 11 2 
267 1 207 1 346 1 78 1 374 1 156 1 348 1 376 1 52 2 365 1 72 1 249 1 340 1 125 1 161 1 227 2 89 1 114 1 142 1 321 1 
106 1 325 1 
267 2 325 2 78 1 52 2 183 1 17 1 125 1 227 2 254 1 
5 1 114 1 
207 1 325 1 346 1 374 1 156 1 348 1 376 1 52 1 72 1 249 1 227 1 161 1 303 1 89 1 142 1 321 1 
267 3 325 1 78 3 340 1 125 3 227 3 254 1 52 3 
130 1 267 1 78 1 125 1 227 1 211 1 52 1 
130 1 267 1 183 1 78 1 17 1 125 1 227 1 254 1 52 1 
204 1 207 1 69 1 359 1 209 1 119 1 190 1 52 4 365 1 53 1 72 1 340 1 98 1 125 3 7 1 35 1 100 1 321 1 130 1 267 3 325 1 346 1 78 3 374 1 79 1 268 1 156 1 348 1 82 1 376 1 85 1 14 1 249 1 379 1 354 1 17 1 43 1 161 1 227 4 89 1 254 2 65 2 142 1 46 1 
228 1 267 2 216 1 325 1 78 1 340 1 125 1 227 2 52 2 
130 1 267 3 78 3 359 1 268 1 327 1 62 1 82 1 52 3 53 1 365 1 14 1 17 1 340 2 125 3 227 3 254 1 100 1 46 1 
267 2 78 2 282 1 52 2 17 1 340 1 125 2 227 2 254 1 114 1 
207 1 325 1 346 1 374 1 156 1 348 1 376 1 52 1 72 1 249 1 227 1 161 1 89 1 142 1 321 1 
207 1 325 1 346 1 374 1 348 1 52 1 72 1 249 1 227 1 161 1 288 1 89 1 37 1 142 1 321 1 
69 1 232 1 209 4 282 2 190 1 5 2 315 1 98 1 126 1 7 1 35 1 36 1 12 1 324 1 293 1 132 2 79 2 138 1 108 1 184 1 354 1 202 1 65 2 114 2 
130 1 267 1 78 1 125 1 227 1 368 1 100 1 52 1 
228 1 267 5 325 1 78 4 52 5 216 1 365 1 31 1 17 1 340 2 125 4 227 5 277 1 254 1 
130 1 267 2 78 2 125 2 227 2 368 1 211 1 52 2 
299 1 225 1 
299 1 225 1 
60 1 235 1 
60 1 235 1 
60 1 235 1 
66 1 299 1 225 1 
66 1 299 1 225 1 
299 1 225 1 305 1 
60 1 330 1 299 2 225 2 180 1 235 1 
66 1 299 1 225 1 
298 1 299 1 225 1 
298 1 299 1 225 1 
298 1 299 1 225 1 
306 2 229 1 309 2 180 1 62 1 39 2 246 2 362 1 148 1 14 2 299 2 140 1 110 2 285 3 380 1 225 2 127 1 255 1 46 2 
306 1 48 1 335 1 169 1 28 1 52 2 148 1 285 1 125 2 267 2 325 1 61 1 78 2 102 1 326 1 39 1 246 1 14 1 299 1 110 1 225 1 227 2 46 1 305 1 
25 1 253 1 349 1 
25 1 253 1 272 1 
176 1 347 1 253 3 272 1 349 2 273 1 
347 1 253 2 272 1 349 1 273 1 136 1 
347 1 253 2 272 1 349 1 273 2 
144 1 68 3 48 1 336 2 28 1 233 1 29 1 213 2 214 3 236 2 315 1 6 1 126 1 370 1 11 1 59 2 76 1 293 1 240 1 102 1 101 1 81 1 62 2 14 5 86 4 41 1 108 1 274 1 111 1 356 1 46 5 187 1 
116 1 144 2 68 9 257 5 28 4 233 3 173 5 29 1 213 6 214 8 236 6 315 3 6 1 126 3 370 2 371 1 10 1 11 2 59 6 154 1 76 6 293 3 240 1 77 1 101 1 243 1 62 5 377 1 14 9 86 7 41 2 108 3 356 2 46 9 187 3 
144 1 68 4 336 1 28 1 233 1 213 2 214 3 236 2 315 1 126 1 370 1 11 1 59 2 293 1 77 1 101 1 62 3 86 2 14 3 41 1 108 1 274 1 111 1 356 1 46 3 187 2 
144 1 68 7 336 2 28 2 233 2 213 4 214 5 236 4 315 2 126 2 370 1 371 1 10 1 11 1 59 4 154 1 293 2 77 1 101 1 62 4 14 4 41 1 86 3 108 2 274 1 111 1 356 1 46 4 187 3 
106 1 161 1 135 1 
56 1 161 1 
217 1 
72 1 161 1 
72 1 207 1 55 1 124 1 161 3 135 2 
72 1 207 1 161 1 
161 1 245 1 
94 1 208 1 79 3 132 4 209 7 210 1 181 1 234 1 147 1 175 2 30 1 108 1 184 2 315 1 381 1 300 1 12 3 
94 1 208 1 79 3 132 4 209 7 210 1 181 1 234 1 147 1 175 2 30 1 108 1 184 2 315 1 381 1 300 1 12 3 
94 1 208 1 79 3 132 4 209 7 210 1 181 1 234 1 147 1 175 2 30 1 108 1 184 2 315 1 381 1 300 1 264 1 12 3 
307 3 94 1 69 1 208 5 209 31 210 1 360 4 190 1 233 3 234 2 147 2 175 3 71 1 30 1 315 4 316 1 126 3 7 1 74 1 12 10 293 3 79 15 132 16 181 2 134 1 201 1 108 4 160 1 184 5 354 1 300 1 381 2 333 1 65 2 
143 1 69 2 208 1 209 9 210 1 190 2 147 1 234 1 175 2 30 1 315 1 316 1 7 2 12 4 132 5 79 4 181 1 108 1 184 3 354 2 300 1 381 1 276 1 65 4 
67 1 23 2 25 1 172 1 174 1 54 1 176 1 195 1 318 1 263 1 265 1 321 1 75 1 129 1 344 1 374 1 269 1 133 1 348 1 272 1 349 1 244 1 84 1 42 1 253 2 332 1 89 1 20 1 142 1 90 2 
67 1 23 3 25 1 172 1 176 1 54 1 286 1 195 1 318 1 73 1 263 1 265 2 321 1 75 1 129 1 344 1 374 1 133 1 348 1 272 1 349 1 244 1 13 1 42 1 253 2 332 1 89 1 20 1 142 1 90 3 
67 1 23 2 25 1 172 1 54 1 176 1 286 1 195 1 318 1 73 1 265 2 321 1 129 1 344 1 374 1 348 1 272 1 244 1 349 1 253 2 332 1 89 1 20 1 142 1 90 2 
344 2 23 1 346 1 374 1 271 1 348 1 13 1 363 1 72 1 54 2 32 1 42 1 97 1 355 1 382 1 161 1 195 2 318 2 89 1 263 1 142 1 90 1 321 1 
23 1 25 1 174 1 54 1 176 1 286 1 195 1 318 1 263 1 321 1 75 1 344 1 374 1 269 1 133 1 348 1 272 1 349 1 244 1 42 1 253 2 332 1 89 1 20 1 142 1 90 1 
19 1 
144 1 228 1 93 2 49 2 281 2 337 1 2 2 51 1 52 1 149 1 53 1 6 3 341 1 100 1 11 1 59 2 346 2 101 1 241 2 348 1 62 2 350 1 14 5 353 2 248 1 16 1 355 1 161 1 356 1 115 1 68 2 166 1 359 1 29 1 214 2 72 1 367 4 321 2 130 1 267 1 76 6 374 2 375 1 268 1 271 1 80 1 222 1 182 2 41 1 87 1 227 1 89 2 46 5 142 1 187 2 
228 1 166 1 359 1 49 1 50 1 52 1 149 1 53 1 6 1 367 2 341 1 100 1 130 1 267 1 76 2 375 1 268 1 350 1 14 3 16 1 227 1 46 3 
228 1 166 1 359 1 50 1 2 1 52 1 149 1 53 1 6 1 367 3 341 1 100 1 130 1 267 1 76 1 375 1 101 1 268 1 62 1 350 1 14 3 16 1 227 1 46 3 
228 1 166 1 359 1 49 1 50 1 2 1 52 1 149 1 53 1 6 1 367 3 341 1 100 1 130 1 267 1 76 2 375 1 101 1 268 1 62 1 350 1 14 3 353 1 16 1 227 1 46 3 
144 1 228 1 166 1 93 2 281 2 359 1 49 4 50 1 337 1 2 4 29 1 52 1 214 1 149 1 53 1 6 3 367 6 341 1 218 1 290 1 100 1 11 1 130 1 59 1 267 1 76 7 101 5 375 1 241 2 268 1 62 5 222 1 105 1 182 2 350 1 14 5 139 1 353 4 16 1 141 1 227 1 356 1 46 5 187 2 
228 1 144 1 93 2 281 2 49 2 337 1 2 2 52 1 53 1 149 1 6 2 341 1 100 1 11 1 59 1 101 1 241 2 62 2 350 1 14 4 353 2 16 1 356 1 115 1 166 1 68 2 359 1 29 1 214 1 367 4 130 1 267 1 76 4 375 1 268 1 222 1 182 2 227 1 46 4 187 2 
228 1 144 1 166 1 93 2 49 2 281 2 359 1 337 1 2 2 29 1 52 1 214 1 149 1 53 1 6 2 367 4 341 1 290 1 218 1 100 1 11 1 130 1 59 1 267 1 76 4 101 1 375 1 241 2 268 1 62 1 222 1 182 2 350 1 14 4 353 2 16 1 141 1 227 1 356 1 46 4 187 2 
228 1 144 1 166 1 93 2 49 2 281 2 359 1 337 1 2 2 29 1 52 1 214 1 149 1 53 1 6 2 367 4 341 1 290 1 218 1 100 1 11 1 130 1 59 1 267 1 76 4 101 1 375 1 241 2 268 1 62 1 222 1 182 2 350 1 14 4 353 2 16 1 141 1 227 1 356 1 46 4 187 2 
228 1 144 1 68 2 166 1 93 2 49 2 231 2 359 1 337 1 2 2 29 1 52 1 214 1 149 1 53 1 6 2 367 4 341 1 369 2 100 1 11 1 130 1 59 1 267 1 76 4 101 1 375 1 241 2 268 1 38 1 62 1 247 1 296 1 350 1 14 4 353 2 16 1 141 1 227 1 356 1 46 4 
144 1 228 1 166 1 93 2 281 2 359 1 49 3 337 1 2 3 29 1 52 1 214 1 149 1 53 1 6 2 367 5 341 1 218 1 290 1 100 1 11 1 130 1 59 1 267 1 76 5 101 1 375 1 241 2 268 1 62 1 222 1 182 2 350 1 14 4 139 1 353 3 16 1 141 1 227 1 356 1 46 4 187 2 
144 1 228 1 166 1 93 2 281 2 359 1 49 3 337 1 2 3 29 1 52 1 214 1 149 1 53 1 6 2 367 5 341 1 218 1 290 1 100 1 11 1 130 1 59 1 267 1 76 5 101 1 375 1 241 2 268 1 62 1 222 1 182 2 350 1 14 4 139 1 353 3 16 1 141 1 227 1 356 1 46 4 187 2 
228 1 144 1 93 2 231 2 49 2 337 1 2 2 52 1 53 1 149 1 6 2 341 1 100 1 11 1 59 1 101 1 241 2 62 1 296 1 350 1 14 4 353 2 16 1 356 1 115 1 166 1 68 2 359 1 29 1 214 1 367 4 369 2 130 1 267 1 76 4 375 1 268 1 227 1 46 4 
69 1 282 1 209 6 210 1 190 1 234 1 175 1 30 1 5 1 315 1 98 1 7 1 35 1 12 2 325 2 132 3 79 3 106 1 138 1 108 1 184 2 354 1 300 1 381 1 114 1 65 2 
91 1 307 2 208 1 69 2 209 11 282 3 360 2 190 2 233 2 3 1 5 8 194 1 315 2 98 1 126 2 7 2 35 2 12 2 130 1 293 1 325 1 196 1 79 5 132 6 85 1 201 1 108 1 184 1 354 2 88 1 65 4 114 8 203 1 
207 1 69 1 282 1 209 2 189 1 190 1 120 1 52 2 365 1 72 1 151 1 340 1 98 1 125 1 7 1 35 1 321 1 267 1 325 1 346 1 374 1 78 1 79 1 132 1 156 1 295 1 348 1 376 1 85 1 249 1 354 1 161 1 88 1 227 2 89 1 303 1 142 1 65 2 
47 2 189 1 282 7 96 1 190 3 233 2 234 1 52 3 5 7 340 1 98 3 7 3 152 2 291 2 12 6 293 2 346 1 156 2 348 2 108 3 249 2 252 2 354 3 300 1 161 2 65 6 114 7 207 2 69 3 208 2 209 20 210 1 119 2 175 1 30 1 365 1 72 2 315 3 125 1 126 2 35 3 321 1 267 1 325 2 374 1 78 1 79 10 132 10 376 2 85 1 184 4 381 1 227 3 88 1 89 1 186 1 142 2 
258 1 69 2 189 1 209 2 190 2 52 1 338 2 339 1 364 1 4 1 123 1 72 2 286 1 340 1 125 1 98 2 7 2 35 2 238 1 321 8 267 1 346 2 78 1 374 7 132 1 79 1 271 1 348 2 84 1 85 1 107 1 138 1 354 2 355 1 227 1 161 3 89 8 142 2 65 4 
69 1 282 1 209 3 190 1 233 1 52 1 5 1 315 1 125 1 98 1 126 1 7 1 35 1 12 1 267 1 293 1 78 1 132 1 79 2 108 1 184 1 17 1 354 1 226 1 88 1 227 1 254 1 114 1 65 2 
208 1 69 1 132 2 282 1 209 2 190 1 138 1 5 1 354 1 315 1 98 1 202 1 126 1 35 1 7 1 114 1 65 2 12 1 
293 1 69 1 79 2 282 1 209 2 190 1 138 1 5 1 108 1 184 1 354 1 98 1 35 1 7 1 36 1 114 1 65 2 12 1 
69 1 208 1 209 4 282 2 190 1 233 1 5 2 315 1 126 1 98 1 7 1 35 1 12 2 293 1 132 2 79 2 138 1 108 1 184 1 354 1 65 2 114 2 
258 1 208 1 69 1 132 2 282 1 209 2 190 1 5 1 354 1 315 1 98 1 202 1 126 1 35 1 7 1 114 1 65 2 12 1 
258 1 293 1 69 1 79 2 282 1 209 2 190 1 5 1 108 1 184 1 354 1 98 1 35 1 7 1 36 1 114 1 65 2 12 1 
258 1 69 1 209 4 282 2 190 1 233 1 5 2 315 1 126 1 98 1 7 1 35 1 12 1 293 1 132 2 79 2 108 1 184 1 354 1 65 2 114 2 
293 1 208 1 69 1 79 2 132 2 282 2 209 4 190 1 233 1 108 1 5 2 184 1 354 1 315 1 98 1 126 1 35 1 7 1 114 2 65 2 12 2 
207 1 69 1 189 1 209 2 119 1 190 1 52 1 72 1 98 1 35 1 7 1 321 1 325 1 346 1 374 1 132 1 79 1 156 1 348 1 376 1 85 1 249 1 354 1 161 1 227 1 89 1 142 1 65 2 
207 1 146 1 69 1 189 1 209 2 190 1 52 1 72 1 98 1 35 1 7 1 288 1 37 1 321 1 325 1 346 1 374 1 132 1 79 1 348 1 85 1 249 1 354 1 161 1 227 1 89 1 142 1 65 2 
293 1 208 1 69 1 79 2 132 2 282 2 209 4 190 1 233 1 108 1 5 2 184 1 354 1 315 1 98 1 126 1 88 1 35 1 7 1 114 2 65 2 12 2 
207 1 208 1 69 1 282 2 209 4 119 1 190 1 233 1 52 1 72 1 5 2 315 1 126 1 98 1 35 1 7 1 291 1 12 2 321 1 293 1 374 1 79 2 132 2 156 1 348 1 376 1 84 1 108 1 249 1 184 1 354 1 161 1 227 1 89 1 114 2 142 1 65 2 
208 1 69 1 209 3 282 1 190 1 233 1 52 1 5 1 315 1 125 1 98 1 126 1 7 1 35 1 12 1 267 1 293 1 78 1 79 1 132 2 352 1 108 1 17 1 354 1 88 1 227 1 254 1 65 2 114 1 
307 1 308 1 69 2 208 3 209 19 118 2 26 2 360 2 190 2 233 3 366 1 315 3 126 3 261 1 7 2 239 1 12 6 293 3 373 1 79 10 132 9 200 1 201 1 108 3 184 3 160 1 354 2 301 1 276 1 65 4 
307 2 308 1 230 1 208 2 69 3 209 26 118 1 26 4 360 2 190 3 191 1 233 3 316 2 150 1 315 3 126 3 261 1 7 3 319 1 239 1 12 4 293 2 373 2 79 12 132 14 40 1 200 2 15 1 108 2 184 2 160 2 354 3 276 1 65 6 
307 3 308 1 230 1 69 3 208 4 209 41 118 1 210 1 26 4 360 4 190 3 191 1 233 4 234 1 175 1 30 1 316 1 150 1 315 5 126 4 261 1 7 3 319 1 239 1 12 8 293 4 373 1 79 21 132 20 40 1 200 2 329 1 15 1 201 1 108 5 184 4 160 3 354 3 301 1 381 1 300 1 276 1 65 6 
307 3 308 1 230 1 69 4 208 3 209 38 118 1 210 1 26 4 360 4 190 4 191 1 233 4 234 1 175 1 30 1 316 2 150 1 315 5 126 4 261 1 7 4 319 1 239 1 12 7 293 3 373 1 79 18 132 20 40 1 200 2 329 1 15 1 201 1 108 4 184 4 160 3 354 4 301 1 381 1 300 1 276 1 65 8 
307 4 308 1 230 1 69 2 208 7 209 52 118 1 210 1 26 4 360 4 190 2 191 1 233 7 234 1 175 1 30 1 316 1 150 1 194 2 315 8 126 7 261 1 7 2 319 1 239 1 12 14 293 7 373 1 79 25 132 27 40 1 200 1 15 1 201 2 108 8 184 7 160 2 354 2 381 1 300 1 276 1 65 4 
306 1 299 1 110 1 225 1 180 1 127 1 39 1 246 1 362 1 297 1 
61 1 305 1 
292 1 137 1 306 1 299 1 110 1 70 1 225 1 39 1 246 1 
306 1 229 1 309 1 180 1 62 1 39 1 246 1 362 1 148 1 14 1 299 1 140 1 110 1 285 2 225 1 127 1 255 1 46 1 
306 1 229 1 309 1 180 1 62 1 39 1 246 1 362 1 148 1 14 1 299 1 140 1 110 1 285 2 225 1 127 1 255 1 46 1 
306 1 229 1 309 1 180 1 62 1 39 1 246 1 362 1 148 1 14 1 299 1 140 1 110 1 285 2 225 1 127 1 255 1 46 1 
66 1 330 1 34 1 
66 1 330 1 34 1 
298 1 193 1 
330 1 298 1 193 1 
335 1 326 1 
229 1 306 1 309 1 48 1 335 1 169 1 28 1 52 2 285 1 125 2 267 2 325 1 61 1 102 1 78 2 326 1 39 1 246 1 14 1 86 1 299 1 110 1 302 1 225 1 227 2 46 1 305 1 
66 1 34 1 
330 1 298 1 193 1 
205 1 69 1 189 1 209 2 190 1 52 2 338 2 339 1 72 1 33 1 98 1 35 1 7 1 238 1 321 2 322 1 267 2 374 2 132 1 79 1 348 1 328 1 85 1 354 1 161 1 88 1 227 2 89 2 113 1 142 1 65 2 
323 1 25 1 374 2 117 1 133 1 348 1 272 1 349 1 244 1 84 1 176 1 54 1 286 1 18 1 253 2 332 1 89 2 142 1 321 2 
25 1 374 1 117 1 133 1 348 1 272 1 349 1 244 1 176 1 54 1 286 1 253 2 332 1 89 1 142 1 58 1 321 1 
323 1 346 1 374 1 168 1 271 1 348 1 363 1 72 1 54 1 355 1 161 1 89 1 142 1 321 1 
323 1 25 1 374 1 117 1 133 1 348 1 272 1 349 1 244 1 176 1 54 1 286 1 18 1 253 2 332 1 89 1 142 1 321 1 
24 1 
214 1 59 1 106 1 101 1 237 1 57 1 62 1 
144 1 68 1 281 1 29 1 214 1 6 1 11 1 59 1 76 1 101 1 62 2 222 1 182 1 14 1 356 1 46 1 187 1 
144 4 47 2 233 2 53 2 55 1 236 6 237 1 6 3 56 3 57 1 287 1 11 4 59 8 155 2 293 2 346 1 101 2 242 2 348 3 62 8 245 2 159 2 14 5 248 1 108 2 63 1 161 10 356 4 163 2 68 12 207 3 312 1 29 4 361 1 213 6 214 9 72 3 313 1 315 2 126 2 321 3 219 2 76 5 179 2 374 3 83 2 135 2 84 1 41 2 223 2 89 3 142 4 46 5 187 6 
144 2 68 6 307 1 230 1 360 1 191 1 233 2 192 1 29 2 121 1 213 5 214 8 236 5 6 1 150 1 315 2 126 2 319 1 11 2 59 5 76 1 293 2 179 1 101 2 62 5 40 1 41 1 14 1 248 1 223 2 108 2 160 1 356 2 46 1 187 3 
204 1 144 1 211 1 234 1 29 1 52 1 214 2 30 1 315 2 125 1 218 1 11 1 130 1 59 2 267 1 179 1 78 1 199 1 14 1 223 2 108 1 381 1 224 1 227 1 356 1 254 1 46 1 304 1 
144 1 59 1 101 1 62 1 29 1 214 1 237 1 57 1 356 1 11 1 
47 1 59 5 68 10 293 2 179 1 62 5 233 2 213 5 214 5 223 2 108 2 236 5 315 2 126 2 187 5 
14 1 76 1 101 1 6 1 62 1 46 1 
144 2 283 1 27 1 51 1 29 1 214 2 72 1 6 2 287 1 11 2 321 4 59 2 76 4 77 1 346 2 374 4 271 1 348 1 41 2 14 3 87 1 248 2 63 2 355 1 161 1 356 2 89 4 142 1 46 3 
204 1 207 1 69 1 209 1 119 1 190 1 52 3 72 1 125 2 98 1 7 1 35 1 321 1 267 2 325 1 346 1 374 1 78 2 79 1 156 1 348 1 376 1 85 1 379 1 249 1 354 1 227 3 161 1 89 1 254 2 65 2 142 1 
59 2 144 1 68 4 101 2 62 4 29 1 175 1 213 2 214 1 41 1 248 1 236 2 356 1 187 2 11 1 
306 1 110 1 44 1 
306 1 110 1 44 1 
306 1 335 1 110 1 127 1 343 1 
306 1 110 1 44 1 
306 1 110 1 185 1 
306 1 110 1 185 1 
306 1 110 1 185 1 
306 1 110 1 
299 1 225 1 
208 1 69 2 79 4 132 4 209 8 210 1 190 2 234 1 175 1 30 1 108 1 184 2 315 1 354 2 316 1 300 1 381 1 7 2 65 4 12 3 
79 3 132 3 209 6 210 1 234 1 175 1 106 1 30 1 108 1 184 2 315 1 300 1 381 1 12 2 
293 1 69 1 208 1 79 2 132 2 209 4 270 1 190 1 233 1 108 1 184 1 354 1 315 1 126 1 7 1 65 2 12 2 
307 1 293 1 208 1 79 4 132 3 209 7 360 2 233 1 108 1 201 1 184 1 160 1 315 1 126 1 12 2 
307 2 208 4 69 2 209 23 210 1 360 2 190 2 233 2 234 2 175 1 30 1 315 3 194 1 316 2 126 2 7 2 12 9 293 2 196 1 132 11 79 12 103 1 201 1 108 3 184 5 354 2 381 2 300 1 65 4 
79 1 209 1 360 1 
307 1 132 1 209 1 
47 1 293 1 69 1 208 1 79 3 132 3 209 6 270 1 190 1 233 1 108 1 184 2 354 1 315 1 126 1 7 1 65 2 12 3 
307 1 230 1 208 1 69 1 209 12 360 1 190 1 191 1 233 2 150 1 315 2 126 2 7 1 319 1 12 2 293 2 79 6 132 6 40 1 108 2 160 1 184 1 354 1 276 1 65 2 
208 1 132 3 79 3 209 6 234 1 30 1 108 1 184 1 315 1 381 1 12 2 
208 1 69 1 132 1 79 2 103 1 209 3 210 1 190 1 234 1 184 1 316 1 354 1 381 1 300 1 7 1 65 2 12 2 
69 1 208 2 132 5 79 5 209 10 190 1 199 1 234 2 30 1 108 2 184 3 354 1 315 2 381 2 7 1 276 1 65 2 12 5 
208 1 315 1 69 1 354 1 132 2 209 2 126 1 7 1 190 1 276 1 65 2 12 1 
293 1 69 1 208 1 79 2 132 2 209 4 190 1 233 1 108 1 184 1 354 1 315 1 126 1 7 1 276 1 65 2 12 2 
69 3 208 1 79 2 132 1 103 1 209 3 190 3 234 1 184 1 316 1 354 3 301 1 381 1 7 3 276 1 65 6 12 2 
307 3 69 5 208 5 209 34 210 1 360 4 190 5 233 3 234 3 175 1 30 2 316 2 315 5 126 3 7 5 74 1 12 12 293 3 79 18 132 16 103 1 270 1 134 1 201 1 108 5 160 1 184 7 354 5 381 3 300 1 301 1 276 1 333 1 65 10 
307 1 69 1 209 8 360 1 210 1 190 1 191 1 234 1 175 1 30 1 315 1 7 1 12 2 79 4 132 4 108 1 160 1 184 2 354 1 300 1 381 1 276 1 65 2 
307 1 69 2 208 1 209 11 210 1 360 2 190 2 191 1 233 1 234 1 175 1 30 1 315 2 126 1 7 2 12 3 79 5 132 6 270 1 108 1 201 1 184 2 160 1 354 2 381 1 300 1 276 1 65 4 
307 1 230 1 208 1 69 3 209 19 210 1 360 1 190 3 191 1 233 2 234 1 175 1 30 1 150 1 315 3 316 1 126 2 7 3 319 1 12 4 293 2 79 10 132 9 270 1 40 1 108 3 160 1 184 3 354 3 381 1 300 1 276 1 65 6 
307 1 230 1 208 2 69 3 209 17 210 1 360 1 190 3 191 1 233 2 234 1 175 1 30 1 316 1 150 1 315 3 126 2 7 3 319 1 12 5 293 1 79 7 132 10 270 1 40 1 108 2 160 1 184 3 354 3 381 1 300 1 276 1 65 6 
307 1 69 1 209 8 360 1 210 1 190 1 191 1 234 1 175 1 30 1 315 1 7 1 12 2 79 4 132 4 108 1 160 1 184 2 354 1 300 1 381 1 276 1 65 2 
307 1 230 1 208 1 69 1 209 12 360 1 190 1 191 1 233 2 150 1 315 2 126 2 7 1 319 1 12 2 293 2 79 6 132 6 40 1 108 2 160 1 184 1 354 1 276 1 65 2 
307 1 230 1 208 2 69 4 209 18 210 1 360 1 190 4 191 1 233 2 234 1 175 1 30 1 150 1 315 3 316 2 126 2 7 4 319 1 12 5 293 1 79 8 132 10 270 1 40 1 108 2 160 1 184 3 354 4 381 1 300 1 276 1 65 8 
307 1 230 1 208 3 69 4 209 16 360 1 190 4 191 1 233 3 150 1 315 3 316 2 126 3 7 4 319 1 12 6 293 2 79 7 132 9 40 1 108 2 160 1 184 3 354 4 301 1 276 1 65 8 
208 3 79 4 132 3 209 7 210 2 234 3 30 1 108 1 184 3 315 1 300 1 381 3 12 6 
307 1 230 1 208 1 69 4 209 18 210 1 360 1 190 4 191 1 233 2 234 1 175 1 30 1 150 1 315 3 316 2 126 2 7 4 319 1 12 4 293 1 79 8 132 10 40 1 108 2 160 1 184 3 354 4 381 1 300 1 301 1 276 1 65 8 
267 1 228 1 216 1 325 1 294 1 227 1 52 1 
228 1 267 1 325 1 310 1 294 1 52 1 216 1 109 1 250 1 227 1 99 1 9 1 
106 1 72 1 346 1 374 1 355 1 161 1 271 1 348 1 89 1 142 1 321 1 
267 1 207 1 325 1 346 1 78 1 374 1 348 1 376 1 52 2 72 1 249 1 340 1 125 1 161 1 227 2 89 1 142 1 321 1 
130 1 267 2 207 2 325 1 359 1 78 2 374 1 348 1 376 1 245 1 52 2 159 1 72 2 249 1 63 1 340 1 125 1 161 3 227 2 89 1 100 1 142 1 321 1 
207 2 359 1 52 2 72 2 340 1 125 1 288 1 100 1 320 1 321 2 130 1 267 2 325 1 374 2 78 2 348 1 245 1 159 1 249 1 63 1 227 2 161 3 89 2 142 1 
207 1 170 1 53 1 72 1 56 1 320 1 321 3 76 1 346 1 374 3 101 1 348 1 62 1 135 1 245 1 159 1 14 2 63 1 161 4 89 3 46 2 142 1 278 1 
76 1 207 1 346 1 101 1 374 3 348 1 62 1 83 1 245 1 135 1 53 1 159 1 72 1 14 2 63 1 56 1 161 4 89 3 320 1 142 1 46 2 321 3 
4 1 374 1 348 1 89 1 142 1 321 1 
345 1 334 1 207 1 346 2 374 6 348 2 104 1 84 1 338 1 339 1 107 1 364 1 4 1 123 1 72 2 55 1 286 1 161 3 89 7 142 3 321 7 
282 1 190 2 234 1 52 2 5 1 340 1 98 2 7 2 291 1 12 2 156 1 348 1 249 1 108 1 252 1 354 2 300 1 161 1 65 4 114 1 207 1 69 2 209 6 119 1 210 1 175 1 30 1 72 1 315 1 33 1 125 1 35 2 321 1 267 1 325 2 374 1 78 1 132 3 79 3 376 1 84 1 184 2 381 1 227 2 88 1 89 1 142 1 
163 1 144 2 29 2 214 1 53 1 237 1 6 1 56 1 57 1 287 1 11 2 321 1 59 1 76 2 155 1 346 1 101 1 374 1 242 1 62 1 83 1 135 1 14 3 86 1 161 2 356 2 89 1 46 3 
207 1 374 2 348 1 135 1 361 1 84 1 4 1 72 1 55 1 161 2 89 2 142 2 321 2 
92 1 346 1 374 4 271 1 348 1 84 1 72 1 355 1 161 1 89 4 320 1 142 1 321 4 
334 1 207 1 374 2 348 1 104 1 171 1 122 1 351 1 72 1 63 1 161 1 89 2 142 2 321 2 
346 1 25 1 374 1 253 1 348 1 332 1 272 1 89 1 142 1 321 1 
322 1 339 1 72 1 286 1 374 2 161 1 348 1 89 2 142 1 321 2 84 1 
92 1 346 1 374 4 271 1 348 2 84 1 107 1 339 1 72 2 123 1 63 1 355 1 161 3 89 5 142 2 321 5 
92 1 346 1 374 4 271 1 348 2 84 1 339 1 72 2 123 1 251 1 63 1 355 1 161 3 89 5 142 2 321 5 
267 1 207 1 325 1 346 1 78 1 374 1 348 1 52 2 72 1 249 1 340 1 125 1 161 1 227 2 288 1 89 1 142 1 321 1 
345 1 334 1 207 1 374 1 348 1 104 1 72 1 55 1 63 1 161 1 89 1 142 2 321 1 
325 1 260 1 275 1 157 1 331 1 
130 1 325 1 101 1 359 1 268 1 311 1 157 2 62 1 1 1 82 1 53 1 86 1 14 2 260 2 275 1 331 2 100 1 357 1 46 2 
267 1 205 1 260 1 227 1 275 1 331 1 113 1 328 1 52 1 
275 1 1 1 357 1 
129 1 106 1 67 1 172 1 
129 1 67 1 23 1 42 1 263 1 172 1 90 1 
344 1 195 1 90 1 
129 1 164 1 131 2 67 1 23 3 165 1 172 1 174 1 378 1 42 1 263 1 90 3 
129 1 67 1 23 2 42 1 259 1 263 1 172 1 265 1 90 2 
67 1 23 1 42 1 25 1 253 1 197 1 349 1 263 1 266 1 90 1 174 1 
67 1 23 1 42 1 263 1 172 1 90 1 174 1 
129 1 23 1 42 1 263 1 172 2 90 1 174 1 
0 1 67 1 23 2 220 1 172 1 174 1 42 2 289 1 263 2 90 2 
129 1 158 1 67 2 23 3 42 1 112 1 263 1 172 1 266 1 265 2 128 1 90 3 174 1 
129 1 67 1 23 2 25 1 272 1 349 1 172 1 174 1 176 1 42 1 317 1 253 2 263 1 90 2 265 1 
129 1 67 2 23 4 42 2 259 1 112 1 153 1 263 2 172 1 266 1 265 2 90 4 174 1 
129 1 67 1 23 1 42 1 263 1 172 1 90 1 174 1 
129 2 131 1 165 1 23 4 67 3 95 1 172 2 378 1 42 1 112 1 263 1 265 2 90 4 266 1 
129 1 67 1 23 2 221 1 172 1 174 1 212 1 42 1 64 1 263 1 90 2 265 1 
129 1 131 2 67 1 23 3 165 2 172 1 174 1 378 1 42 1 162 1 263 1 90 3 
67 2 178 1 198 1 8 2 
23 1 42 1 145 1 263 1 90 1 174 1 
129 1 67 1 23 2 42 1 263 1 172 1 265 1 128 1 90 2 174 1 
284 1 
129 1 67 1 23 1 42 1 263 1 172 1 90 1 174 1 
129 1 131 1 23 3 67 1 172 1 174 1 42 1 263 1 265 1 90 3 128 1 
67 1 95 1 112 1 266 1 
67 1 172 1 

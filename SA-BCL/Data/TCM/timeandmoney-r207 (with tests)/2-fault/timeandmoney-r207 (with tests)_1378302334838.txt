#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (218,254) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (218,254) 179 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (218,254) 179 341 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 1 183 5 227 1 228 9 22 1 230 2 185 1 276 2 24 1 115 1 256 2 169 2 235 1 122 2 328 1 262 4 329 1 265 1 242 2 311 6 102 1 64 1 178 3 224 9 289 1 359 1 340 1 249 2 
206 1 183 5 227 1 228 9 22 1 230 2 185 1 276 2 24 1 115 1 256 2 169 2 235 1 122 2 328 1 262 4 329 1 265 1 242 2 311 6 102 1 64 1 178 3 224 9 289 1 359 1 340 1 249 2 
206 1 183 6 227 1 228 10 22 1 230 2 185 1 276 2 24 1 115 1 256 2 169 2 235 1 122 2 328 1 262 5 329 1 265 1 242 2 311 7 102 1 64 1 178 4 224 10 289 1 359 1 340 1 249 2 
206 1 183 4 227 1 228 7 22 1 230 2 185 1 276 2 24 1 115 1 256 2 169 2 235 1 122 2 328 1 262 3 329 1 265 1 242 2 311 4 102 1 64 1 178 2 224 7 289 1 340 1 249 1 
122 1 328 1 262 2 183 3 227 1 228 4 230 1 276 1 24 1 115 1 242 1 311 3 178 1 169 1 224 4 289 1 359 1 249 2 
122 1 328 1 183 1 11 1 228 2 22 1 276 1 115 1 242 1 32 1 256 1 169 1 224 2 303 1 235 1 289 1 
328 1 262 1 183 2 228 3 185 1 115 1 242 2 311 1 256 1 169 2 178 1 224 3 289 1 
122 1 328 1 183 5 262 4 227 1 228 9 152 1 230 1 185 1 276 1 24 1 115 1 242 2 311 7 102 1 256 1 6 1 169 2 178 3 224 9 289 1 359 1 340 1 249 2 
122 1 328 1 183 5 262 4 227 1 228 9 152 1 230 1 185 1 276 1 24 1 115 1 242 2 311 7 102 1 256 1 6 1 169 2 178 3 224 9 289 1 359 1 340 1 249 2 
241 1 40 1 333 1 
177 1 197 2 40 1 
252 2 315 2 145 2 201 2 270 2 274 2 162 1 225 1 
108 1 296 1 88 1 252 3 0 1 298 1 111 1 274 2 113 1 162 1 208 1 346 1 210 1 187 2 144 1 145 3 350 2 212 1 214 2 54 1 191 1 172 1 63 2 246 1 128 1 315 2 66 1 201 2 131 1 358 1 270 2 317 1 339 1 18 1 225 1 87 1 272 2 
252 1 315 1 145 1 201 1 270 1 274 1 266 1 162 1 39 1 281 1 
252 1 151 1 352 1 321 1 333 1 49 1 268 1 145 1 304 1 288 1 270 1 134 1 281 1 40 1 
252 1 151 1 352 1 274 1 321 2 333 1 49 1 268 2 315 1 145 1 201 1 288 1 270 1 281 1 40 1 
268 1 279 1 321 1 4 1 141 1 
294 1 268 2 279 1 307 1 321 2 4 1 40 1 333 1 
268 1 279 1 321 1 
252 1 274 1 266 1 321 1 162 1 4 1 268 1 315 1 145 1 201 1 270 1 261 1 39 1 281 1 
40 1 
294 1 268 2 279 1 326 1 321 2 4 1 40 1 333 1 
42 1 295 1 294 1 299 1 354 1 321 5 4 2 333 1 166 1 243 2 245 1 79 2 268 5 279 2 52 2 68 1 148 1 40 1 19 1 
241 1 225 1 
252 2 274 1 76 1 315 1 119 1 145 2 201 1 270 2 225 2 
123 1 320 1 310 1 
88 1 252 1 0 1 184 1 298 1 208 1 210 1 187 1 144 1 145 1 358 1 212 1 339 1 214 1 225 1 272 1 
88 1 0 1 252 2 298 1 174 1 274 1 310 1 208 1 210 1 14 1 187 1 144 1 315 1 145 2 358 1 270 1 212 1 339 1 214 1 272 1 
14 1 252 3 315 3 145 3 201 1 270 3 274 3 225 1 
252 1 315 1 145 1 270 1 274 1 266 1 281 1 
252 1 315 1 119 1 145 1 201 1 270 1 274 1 76 1 281 1 
108 1 296 1 88 1 0 1 252 4 298 1 111 1 274 3 321 1 162 1 208 1 346 1 76 1 210 1 187 1 144 1 49 1 145 4 350 2 121 1 212 1 214 1 54 1 281 1 98 1 151 1 352 1 174 1 63 1 14 1 246 1 128 1 268 1 315 3 66 1 288 1 201 2 358 1 270 3 317 1 339 1 225 1 87 1 272 1 
14 1 252 2 315 1 145 2 120 1 270 2 274 1 134 1 225 1 
252 3 151 1 352 1 174 1 274 3 321 1 76 1 14 2 105 1 49 1 268 1 315 3 145 3 201 1 288 1 270 3 281 1 40 1 98 1 
252 2 320 1 274 2 310 1 76 1 14 1 315 2 145 2 201 1 270 2 
88 1 252 1 0 1 298 1 208 1 210 1 187 1 144 1 145 1 358 1 212 1 339 1 214 1 225 1 272 1 
252 1 298 1 232 1 208 1 5 1 210 1 187 1 144 1 145 1 358 1 212 1 339 1 214 1 225 1 272 1 
108 1 296 2 111 1 320 2 143 1 94 1 257 1 350 2 54 1 280 1 237 1 123 2 284 1 59 1 310 2 63 4 246 1 128 1 65 1 314 1 17 1 317 1 18 2 271 1 
83 1 252 1 352 1 315 1 145 1 270 1 274 1 281 1 
99 1 252 5 174 1 274 4 76 1 14 2 315 4 145 5 120 1 201 1 270 5 8 1 134 1 225 1 
83 1 252 2 315 2 145 2 270 2 274 2 266 1 281 1 
21 1 218 1 
21 1 218 1 
254 1 163 1 
254 1 163 1 
21 1 254 1 218 1 163 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
21 1 218 1 
20 1 21 1 179 1 218 1 
20 1 21 1 268 1 179 1 321 1 218 1 341 1 
122 1 230 1 276 1 
122 1 303 1 276 1 
160 1 122 3 303 1 2 1 230 2 351 1 
160 1 122 2 303 1 2 1 230 1 355 1 
160 1 122 2 303 1 230 1 2 2 
207 1 250 1 295 1 294 1 321 5 4 4 277 1 257 1 94 1 79 1 170 1 279 1 349 1 52 1 148 3 192 2 100 2 284 1 354 2 124 1 197 3 285 1 176 1 198 1 333 1 243 1 177 1 314 1 269 2 268 5 129 1 40 2 
136 1 207 3 294 1 295 1 321 9 4 7 141 5 78 1 277 2 257 3 94 3 79 2 301 5 279 6 349 2 146 1 52 2 148 8 283 1 100 6 284 3 354 6 197 9 176 4 285 1 13 1 333 1 243 2 245 1 177 3 314 3 269 6 268 9 133 1 40 5 
250 1 207 1 321 3 4 2 277 1 257 1 94 1 79 1 349 1 52 1 148 3 192 1 100 2 284 1 354 2 197 4 176 1 333 1 243 1 245 1 177 2 314 1 268 3 269 2 129 1 40 3 
136 1 250 1 207 2 321 4 4 3 277 1 257 2 94 2 79 1 349 1 52 1 148 5 192 2 283 1 100 4 284 2 354 4 197 7 176 2 333 1 13 1 243 1 245 1 177 3 314 2 269 4 268 4 129 1 40 4 
334 1 212 1 241 1 
135 1 212 1 
342 1 
358 1 212 1 
334 2 93 1 358 1 58 1 212 3 208 1 
358 1 212 1 208 1 
89 1 212 1 
296 3 150 1 229 1 112 1 59 3 63 7 257 1 94 1 336 1 324 1 15 1 80 1 17 2 55 1 182 1 158 2 18 4 
296 3 150 1 229 1 112 1 59 3 63 7 257 1 94 1 336 1 324 1 15 1 80 1 17 2 55 1 182 1 158 2 18 4 
296 3 150 1 229 1 112 1 59 3 322 1 63 7 257 1 94 1 336 1 324 1 15 1 80 1 17 2 55 1 182 1 158 2 18 4 
108 1 207 3 296 15 229 1 112 1 138 1 164 1 209 1 94 4 257 4 324 2 80 5 350 2 55 2 54 1 150 2 264 1 284 3 59 10 154 4 240 1 63 31 103 1 126 3 336 2 35 1 128 1 15 1 314 3 17 5 317 1 182 1 158 3 18 16 
108 2 296 4 112 1 138 1 257 1 94 1 324 1 80 1 350 4 54 2 55 1 150 1 59 4 63 9 336 1 128 2 155 1 15 1 157 1 17 3 317 2 158 2 182 1 18 5 
183 1 228 2 297 1 230 1 276 1 3 1 115 1 256 1 210 1 187 1 169 1 144 1 303 1 305 1 214 1 351 1 122 2 328 1 238 1 196 1 311 1 242 1 85 1 335 1 200 1 224 2 289 1 204 1 107 1 272 1 
183 1 228 3 297 1 72 1 230 1 276 1 3 1 115 1 256 1 210 1 187 1 169 1 144 1 303 1 305 1 214 1 351 1 122 2 263 1 238 1 242 1 311 2 85 1 356 1 200 1 224 3 289 1 204 1 107 1 272 1 
183 1 228 2 297 1 230 1 3 1 276 1 115 1 256 1 210 1 187 1 144 1 303 1 305 1 214 1 351 1 122 2 263 1 311 2 85 1 356 1 200 1 224 2 289 1 204 1 272 1 
228 1 72 1 45 1 345 1 255 1 256 2 210 1 187 1 144 1 169 1 305 2 212 1 214 1 7 1 29 1 242 1 85 2 244 1 224 1 358 1 204 2 339 1 272 1 
228 1 297 1 230 1 276 1 3 1 256 1 210 1 187 1 169 1 144 1 303 1 305 1 214 1 351 1 122 2 328 1 263 1 238 1 196 1 242 1 85 1 200 1 224 1 204 1 107 1 272 1 
236 1 
1 1 186 1 231 2 139 2 321 5 46 2 277 1 187 2 144 1 49 1 279 6 145 1 52 1 148 2 281 1 9 1 151 1 197 2 333 1 243 1 244 1 248 1 288 1 338 1 339 2 69 2 290 2 159 1 343 1 294 3 295 1 252 1 73 1 74 1 345 1 26 1 210 1 79 1 258 1 304 1 212 1 214 2 352 1 353 2 354 2 125 1 177 2 268 5 358 1 270 1 180 4 181 2 134 1 40 2 272 2 
294 1 252 1 73 1 1 1 74 1 321 3 49 1 279 2 145 1 304 1 326 1 281 1 151 1 352 1 353 1 125 1 268 3 248 1 288 1 270 1 180 2 134 1 
294 1 252 1 73 1 1 1 74 1 231 1 321 3 49 1 279 1 145 1 304 1 326 1 281 1 151 1 352 1 333 1 125 1 268 3 248 1 288 1 270 1 180 3 134 1 40 1 
294 1 252 1 73 1 1 1 74 1 231 1 321 3 49 1 279 2 145 1 326 1 304 1 281 1 151 1 352 1 353 1 333 1 125 1 268 3 248 1 288 1 270 1 180 3 181 1 134 1 40 1 
1 1 231 4 321 5 139 2 46 2 142 1 49 1 279 7 145 1 326 1 52 1 147 1 281 1 148 1 149 1 151 1 333 5 243 1 248 1 288 1 338 1 69 2 159 1 290 2 292 1 294 3 295 1 252 1 73 1 74 1 79 1 304 1 31 1 352 1 353 4 354 1 125 1 177 2 268 5 270 1 180 6 181 4 134 1 40 5 
1 1 231 2 321 4 139 2 46 2 49 1 279 4 145 1 52 1 281 1 148 1 151 1 197 2 333 1 243 1 248 1 288 1 338 1 69 2 159 1 290 2 295 1 294 2 252 1 73 1 74 1 26 1 79 1 304 1 352 1 353 2 354 1 125 1 177 2 268 4 270 1 180 4 181 2 134 1 40 2 
292 1 294 2 295 1 252 1 73 1 1 1 74 1 231 2 139 2 321 4 46 2 79 1 49 1 279 4 145 1 304 1 52 1 147 1 148 1 281 1 149 1 151 1 352 1 353 2 354 1 333 1 243 1 125 1 177 2 268 4 248 1 288 1 270 1 338 1 180 4 181 2 69 2 134 1 40 1 290 2 159 1 
292 1 294 2 295 1 252 1 73 1 1 1 74 1 231 2 139 2 321 4 46 2 79 1 49 1 279 4 145 1 304 1 52 1 147 1 148 1 281 1 149 1 151 1 352 1 353 2 354 1 333 1 243 1 125 1 177 2 268 4 248 1 288 1 270 1 338 1 180 4 181 2 69 2 134 1 40 1 290 2 159 1 
205 1 292 1 294 2 295 1 252 1 73 1 1 1 74 1 231 2 139 2 321 4 75 2 46 2 79 1 49 1 279 4 145 1 118 1 304 1 52 1 95 2 148 1 281 1 151 1 352 1 353 2 354 1 197 2 333 1 243 1 125 1 337 1 268 4 248 1 288 1 270 1 338 1 180 4 181 2 134 1 40 1 
292 1 294 2 295 1 252 1 73 1 1 1 74 1 231 3 139 2 321 4 46 2 142 1 79 1 49 1 279 5 145 1 52 1 304 1 147 1 148 1 281 1 149 1 151 1 352 1 353 3 354 1 333 1 243 1 125 1 177 2 268 4 248 1 288 1 270 1 338 1 180 5 181 3 69 2 134 1 40 1 290 2 159 1 
292 1 294 2 295 1 252 1 73 1 1 1 74 1 231 3 139 2 321 4 46 2 142 1 79 1 49 1 279 5 145 1 52 1 304 1 147 1 148 1 281 1 149 1 151 1 352 1 353 3 354 1 333 1 243 1 125 1 177 2 268 4 248 1 288 1 270 1 338 1 180 5 181 3 69 2 134 1 40 1 290 2 159 1 
1 1 231 2 321 4 139 2 46 2 49 1 279 4 145 1 52 1 95 2 281 1 148 1 151 1 197 2 333 1 243 1 248 1 288 1 338 1 205 1 295 1 294 2 252 1 73 1 74 1 26 1 75 2 79 1 304 1 352 1 353 2 354 1 125 1 268 4 270 1 180 4 181 2 134 1 40 1 
108 1 296 3 112 1 111 1 320 1 143 1 94 1 257 1 350 2 55 1 54 1 150 1 123 1 59 2 310 1 241 1 63 6 246 1 128 1 15 1 17 2 317 1 182 1 158 1 18 3 225 2 
70 1 108 2 207 2 296 6 319 1 111 1 320 4 209 1 94 2 257 1 80 1 350 4 190 1 54 2 308 1 173 1 123 11 284 2 59 2 154 3 240 1 310 11 63 14 126 3 246 2 128 2 314 1 131 1 17 1 317 2 225 1 87 1 18 8 
291 1 108 1 88 1 296 1 0 1 252 2 184 1 298 1 319 1 111 1 320 1 274 1 208 1 210 1 187 1 144 1 347 1 145 2 350 2 212 1 214 1 54 1 174 1 220 1 63 2 14 1 246 1 128 1 315 1 358 1 270 1 131 1 339 1 317 1 225 1 272 1 87 1 18 1 
88 2 0 2 137 1 319 1 274 1 320 7 187 3 94 3 144 2 50 2 145 3 55 1 54 3 150 1 101 2 284 2 59 8 63 20 14 1 246 3 15 1 16 1 203 2 17 4 339 1 158 1 18 10 108 3 207 2 296 10 252 3 298 2 112 1 111 3 346 2 208 2 210 2 257 3 80 4 350 6 212 2 214 3 263 1 174 1 123 7 310 7 127 1 128 3 223 2 314 2 315 1 131 1 270 1 358 2 317 3 182 1 225 2 87 1 272 3 
108 2 293 1 296 1 252 1 44 1 111 2 274 1 113 2 345 1 300 1 210 2 143 1 167 1 187 8 144 2 145 1 350 4 212 3 214 7 54 2 263 1 175 1 312 1 63 2 14 1 335 1 244 1 246 2 128 2 315 1 156 1 270 1 131 1 358 2 339 2 317 2 272 8 18 1 87 1 
108 1 207 1 296 2 252 1 319 1 111 1 320 1 274 1 76 1 94 1 257 1 348 1 145 1 350 2 54 1 123 1 284 1 59 1 310 1 63 3 246 1 128 1 314 1 315 1 201 1 270 1 17 1 317 1 18 1 
108 1 123 1 111 1 284 1 59 1 320 1 310 1 63 2 143 1 94 1 246 1 128 1 80 1 350 2 317 1 54 1 280 1 18 2 
108 1 296 2 123 1 111 1 59 1 320 1 310 1 63 2 143 1 257 1 246 1 128 1 314 1 350 2 17 1 317 1 54 1 271 1 
108 1 207 1 296 2 123 2 111 1 284 1 59 2 320 2 310 2 63 4 143 1 257 1 94 1 246 1 128 1 314 1 80 1 350 2 17 1 317 1 54 1 18 2 
108 1 123 1 111 1 284 1 59 1 320 1 310 1 63 2 94 1 246 1 128 1 80 1 156 1 350 2 317 1 54 1 280 1 18 2 
108 1 296 2 123 1 111 1 59 1 320 1 310 1 63 2 257 1 246 1 128 1 314 1 156 1 350 2 17 1 317 1 54 1 271 1 
108 1 207 1 296 2 123 2 111 1 284 1 59 2 320 2 310 2 63 4 257 1 94 1 246 1 128 1 314 1 80 1 156 1 350 2 17 1 317 1 54 1 18 2 
108 1 207 1 296 2 123 2 111 1 284 1 59 2 320 2 310 2 63 4 257 1 94 1 246 1 128 1 314 1 80 1 350 2 17 1 317 1 54 1 18 2 
108 1 88 1 296 1 0 1 252 1 298 1 111 1 208 1 346 1 210 1 187 1 144 1 145 1 350 2 212 1 214 1 54 1 63 2 246 1 128 1 131 1 358 1 339 1 317 1 18 1 225 1 272 1 87 1 
108 1 296 1 252 1 298 1 111 1 232 1 208 1 210 1 5 1 187 1 144 1 145 1 350 2 213 1 212 1 214 1 54 1 63 2 246 1 128 1 131 1 358 1 339 1 317 1 18 1 225 1 272 1 87 1 
108 1 207 1 296 2 319 1 111 1 320 2 94 1 257 1 80 1 350 2 54 1 284 1 123 2 59 2 310 2 63 4 246 1 128 1 314 1 17 1 317 1 18 2 
108 1 207 1 296 2 88 1 0 1 252 1 298 1 111 1 320 2 208 1 346 1 210 1 257 1 94 1 187 1 144 1 80 1 145 1 350 2 212 1 214 1 54 1 123 2 284 1 59 2 310 2 63 4 335 1 246 1 223 1 128 1 314 1 358 1 17 1 317 1 18 2 272 1 
108 1 207 1 296 1 252 1 319 1 111 1 274 1 320 1 76 1 257 1 94 1 80 1 145 1 350 2 54 1 284 1 123 1 59 1 310 1 61 1 63 3 246 1 128 1 314 1 315 1 201 1 270 1 317 1 18 2 
108 2 207 3 296 10 109 1 27 2 323 1 209 1 233 1 94 3 257 3 80 3 350 4 28 1 96 1 54 2 330 2 194 1 284 3 59 6 154 2 240 1 63 19 126 1 222 1 128 2 314 3 157 1 17 3 317 2 18 9 
318 1 108 3 207 3 296 12 138 2 48 1 27 1 323 1 233 2 257 2 94 3 80 2 350 6 28 2 96 1 54 3 282 1 330 4 194 1 153 1 284 3 59 4 154 2 240 2 63 26 126 2 128 3 314 2 157 1 86 1 132 1 17 2 317 3 18 14 
318 1 108 3 207 4 296 21 109 1 112 1 138 1 48 1 27 1 323 1 209 1 233 2 94 5 257 5 80 4 350 6 28 1 96 1 55 1 54 3 193 1 282 1 150 1 330 4 194 1 153 1 284 4 59 8 154 4 240 3 63 41 126 3 128 3 15 1 314 4 86 1 157 1 132 1 17 4 317 3 158 1 182 1 18 20 
318 1 108 4 207 4 296 18 109 1 112 1 138 2 48 1 27 1 323 1 209 1 233 2 94 5 257 4 80 3 350 8 28 1 96 1 55 1 54 4 193 1 282 1 150 1 330 4 194 1 153 1 284 4 59 7 154 4 240 3 63 38 126 3 128 4 15 1 314 3 86 1 157 1 132 1 17 4 317 4 158 1 182 1 18 20 
318 1 70 2 108 2 207 7 296 25 112 1 138 1 48 1 27 1 323 1 209 2 233 1 94 8 257 8 80 7 350 4 28 1 96 1 55 1 54 2 282 1 150 1 330 4 194 1 153 1 284 7 59 14 154 4 240 2 63 52 126 4 128 2 15 1 314 7 86 1 157 1 132 1 17 7 317 2 158 1 182 1 18 27 
108 1 296 1 252 2 319 1 111 1 113 2 300 1 210 1 187 2 144 1 259 1 145 2 350 2 306 1 212 1 214 2 54 1 312 1 63 2 246 1 199 1 313 1 128 1 38 1 358 1 270 2 131 1 317 1 272 2 18 1 87 1 
122 2 251 1 263 1 43 1 238 1 297 1 230 1 276 1 219 1 210 1 187 2 335 1 144 1 200 1 303 1 305 1 214 2 351 1 272 2 
122 2 263 1 43 1 238 1 30 1 297 1 230 1 276 1 210 1 187 1 144 1 200 1 303 1 305 1 214 1 351 1 272 1 
273 1 45 1 345 1 219 1 210 1 187 1 244 1 144 1 305 1 358 1 212 1 339 1 214 1 272 1 
122 2 251 1 263 1 43 1 238 1 297 1 230 1 276 1 219 1 210 1 187 1 144 1 200 1 303 1 305 1 214 1 351 1 272 1 
287 1 
166 1 354 1 241 1 148 1 40 1 333 1 19 1 
294 1 295 1 354 1 197 1 321 1 333 1 243 1 79 1 177 1 268 1 279 1 52 1 69 1 148 1 40 2 159 1 290 1 
135 3 89 2 321 5 277 2 187 3 93 1 92 2 94 2 144 4 279 5 52 4 53 1 148 9 56 2 9 1 100 6 151 2 284 2 197 12 333 2 243 4 334 2 335 1 247 2 67 1 203 2 339 1 19 1 207 2 71 2 295 4 294 3 161 1 114 2 25 2 208 3 210 3 166 1 257 2 79 4 168 1 212 10 214 3 215 2 217 2 354 8 177 6 268 5 269 6 314 2 358 3 41 1 272 3 40 8 
318 1 207 2 294 1 295 2 25 1 321 1 48 1 277 1 94 2 257 2 79 2 279 1 52 2 148 8 215 2 9 1 100 5 153 1 284 2 354 5 197 6 154 1 240 1 267 1 333 2 243 2 126 1 177 3 268 1 357 1 269 5 314 2 86 1 132 1 40 5 
295 1 252 1 274 1 25 1 321 1 162 1 94 2 257 1 79 1 188 1 145 1 52 1 147 1 261 1 55 1 281 1 148 2 215 2 150 1 354 2 266 1 243 1 268 1 315 1 201 1 270 1 39 1 182 1 
295 1 354 1 333 1 243 1 166 1 79 1 52 1 148 1 19 1 40 1 
215 2 207 2 100 5 284 2 354 5 197 10 25 1 94 2 257 2 177 5 269 5 314 2 203 1 148 5 40 5 
294 1 268 1 279 1 321 1 40 1 333 1 
343 1 295 1 294 2 253 1 344 1 345 1 321 3 210 1 277 2 187 4 79 2 144 1 258 1 279 4 52 2 212 1 53 2 214 4 148 2 9 2 354 2 243 2 244 1 245 1 268 3 358 1 339 2 41 1 272 4 
108 1 296 1 88 1 252 3 0 1 298 1 111 1 274 2 162 1 346 1 208 1 210 1 187 1 144 1 145 3 350 2 212 1 214 1 54 1 63 1 246 1 128 1 315 2 66 1 201 2 270 2 358 1 339 1 317 1 225 1 87 1 272 1 
295 1 9 1 100 2 354 2 197 4 333 2 243 1 277 1 79 1 177 2 269 2 52 1 158 1 148 1 40 4 
239 1 84 1 62 1 
216 1 117 1 57 1 239 1 84 1 
239 1 84 1 62 1 
239 1 84 1 62 1 
239 1 202 1 84 1 
239 1 202 1 84 1 
239 1 202 1 84 1 
239 1 84 1 
21 1 218 1 
108 2 296 4 150 1 112 1 59 3 138 1 63 8 257 1 94 1 128 2 15 1 80 1 350 4 17 2 317 2 54 2 55 1 158 1 182 1 18 4 
296 3 150 1 112 1 59 2 241 1 63 6 94 1 257 1 15 1 17 2 55 1 158 1 182 1 18 3 
108 1 207 1 296 2 284 1 59 2 63 4 257 1 94 1 128 1 314 1 189 1 80 1 350 2 17 1 317 1 54 1 18 2 
207 1 296 4 284 1 59 2 154 2 240 1 63 7 209 1 257 1 126 1 94 1 314 1 80 1 17 1 18 3 
70 1 108 2 207 2 296 12 112 1 138 2 209 1 94 3 257 3 80 4 350 4 55 2 54 2 150 2 173 1 284 2 59 9 154 2 63 23 126 2 286 1 128 2 15 1 314 2 17 5 317 2 158 1 182 1 18 11 
296 1 154 1 63 1 
126 1 63 1 18 1 
108 1 207 1 296 3 284 1 59 3 63 6 94 1 257 1 128 1 314 1 189 1 80 1 350 2 203 1 17 2 317 1 54 1 18 3 
318 1 108 1 207 2 296 6 48 1 94 2 257 2 80 1 350 2 54 1 153 1 284 2 59 2 154 1 240 1 63 12 126 1 128 1 314 2 86 1 157 1 132 1 17 1 317 1 18 6 
296 3 150 1 59 2 63 6 94 1 257 1 80 1 17 1 55 1 182 1 18 3 
108 1 296 2 150 1 112 1 59 2 138 1 63 3 286 1 128 1 15 1 80 1 350 2 17 1 317 1 55 1 54 1 18 1 
108 1 296 5 150 2 59 5 63 10 94 2 257 2 128 1 188 1 80 2 350 2 157 1 17 3 317 1 54 1 55 2 182 1 18 5 
108 1 284 1 59 1 63 2 94 1 128 1 80 1 157 1 350 2 317 1 54 1 18 2 
108 1 207 1 296 2 284 1 59 2 63 4 257 1 94 1 128 1 314 1 80 1 157 1 350 2 17 1 317 1 54 1 18 2 
108 3 296 2 109 1 150 1 59 2 138 1 63 3 286 1 128 3 80 1 157 1 350 6 17 1 317 3 54 3 55 1 18 1 
108 5 207 3 296 18 109 1 112 1 138 2 164 1 209 1 94 5 257 5 189 1 80 5 350 10 55 3 54 5 150 3 264 1 284 3 59 12 154 4 240 1 103 1 63 34 126 3 286 1 128 5 15 1 314 3 157 1 17 7 317 5 158 1 182 2 18 16 
108 1 296 4 112 1 257 1 94 1 350 2 54 1 55 1 150 1 59 2 154 1 240 1 63 8 126 1 128 1 15 1 86 1 157 1 17 2 317 1 158 1 182 1 18 4 
108 2 207 1 296 5 112 1 209 1 257 1 94 2 189 1 80 1 350 4 55 1 54 2 150 1 284 1 59 3 154 2 240 1 63 11 126 1 128 2 15 1 86 1 157 1 17 2 317 2 158 1 182 1 18 6 
318 1 108 3 207 2 296 10 112 1 138 1 48 1 94 3 257 3 189 1 80 1 350 6 55 1 54 3 150 1 153 1 284 2 59 4 154 1 240 1 63 19 126 1 128 3 15 1 314 2 86 1 157 1 132 1 17 3 317 3 158 1 182 1 18 9 
318 1 108 3 207 2 296 7 112 1 138 1 48 1 94 3 257 2 189 1 80 2 350 6 55 1 54 3 150 1 153 1 284 2 59 5 154 1 240 1 63 17 126 1 128 3 15 1 314 1 86 1 157 1 132 1 17 3 317 3 158 1 182 1 18 10 
108 1 296 4 112 1 257 1 94 1 350 2 54 1 55 1 150 1 59 2 154 1 240 1 63 8 126 1 128 1 15 1 86 1 157 1 17 2 317 1 158 1 182 1 18 4 
318 1 108 1 207 2 296 6 48 1 94 2 257 2 80 1 350 2 54 1 153 1 284 2 59 2 154 1 240 1 63 12 126 1 128 1 314 2 86 1 157 1 132 1 17 1 317 1 18 6 
318 1 108 4 207 2 296 8 112 1 138 2 48 1 94 3 257 2 80 2 189 1 350 8 55 1 54 4 150 1 153 1 284 2 59 5 154 1 240 1 63 18 126 1 128 4 15 1 314 1 86 1 157 1 132 1 17 3 317 4 158 1 182 1 18 10 
318 1 108 4 207 3 296 7 109 1 138 2 48 1 94 3 257 2 80 3 350 8 54 4 153 1 284 3 59 6 154 1 240 1 63 16 126 1 128 4 314 2 86 1 157 1 132 1 17 3 317 4 18 9 
296 4 150 3 112 1 59 6 63 7 257 1 94 1 15 2 80 3 17 3 55 3 182 1 18 3 
318 1 108 4 207 2 296 8 109 1 112 1 138 2 48 1 94 3 257 2 80 1 350 8 55 1 54 4 150 1 153 1 284 2 59 4 154 1 240 1 63 18 126 1 128 4 15 1 314 1 86 1 157 1 132 1 17 3 317 4 158 1 182 1 18 10 
252 1 145 1 120 1 270 1 60 1 134 1 225 1 
171 1 252 1 309 1 60 1 104 1 145 1 316 1 51 1 120 1 270 1 134 1 225 1 
244 1 187 1 144 1 358 1 212 1 345 1 241 1 339 1 214 1 210 1 272 1 
252 2 0 1 298 1 274 1 208 1 210 1 14 1 187 1 144 1 315 1 145 2 358 1 270 1 212 1 339 1 214 1 225 1 272 1 
0 1 252 2 89 1 298 1 274 2 208 2 210 1 187 1 144 1 49 1 145 2 212 3 53 1 214 1 281 1 352 1 217 1 14 1 315 1 270 2 358 2 225 1 272 1 
252 2 89 1 298 1 274 2 232 1 208 2 210 1 187 2 144 1 49 1 145 2 212 3 53 1 214 2 281 1 10 1 352 1 217 1 14 1 315 1 270 2 358 2 225 1 272 2 
135 1 89 1 321 2 208 1 210 1 187 3 144 1 279 1 325 1 212 4 53 1 214 3 10 1 151 1 217 1 333 1 334 1 36 1 268 2 358 1 339 1 272 3 40 1 
135 1 10 1 89 1 151 1 217 1 321 2 208 1 333 1 210 1 334 1 187 3 92 1 144 1 268 2 279 1 358 1 212 4 339 1 53 1 214 3 40 1 272 3 
187 1 167 1 144 1 214 1 210 1 272 1 
293 1 263 1 44 1 195 1 113 1 175 1 208 1 300 1 140 1 210 2 167 1 335 1 187 7 93 1 144 3 260 1 358 2 212 3 339 2 214 6 272 7 
88 1 0 1 319 1 320 1 274 1 187 1 94 1 144 1 50 1 145 2 54 2 55 1 150 1 59 2 63 6 14 1 335 1 246 2 199 1 15 1 17 2 158 1 18 3 108 2 296 3 252 2 298 1 111 2 112 1 346 1 208 1 210 1 257 1 350 4 212 1 214 1 123 1 310 1 223 1 128 2 315 1 270 1 358 1 317 2 182 1 272 1 225 2 
135 1 295 2 71 1 294 1 114 1 321 3 4 1 166 1 187 1 92 1 79 2 279 2 52 2 212 2 214 1 148 1 56 1 151 1 354 1 333 1 243 2 334 1 268 3 339 1 40 1 19 1 41 1 272 1 
208 1 210 1 334 1 335 1 167 1 187 2 93 1 168 1 144 2 358 1 212 2 214 2 272 2 
10 1 345 1 210 1 187 4 335 1 244 1 278 1 144 1 358 1 212 1 339 1 214 4 272 4 
91 1 208 1 140 1 210 1 127 1 187 2 144 2 260 1 358 1 212 1 53 1 214 2 106 1 272 2 
122 1 187 1 144 1 297 1 303 1 276 1 339 1 214 1 210 1 272 1 
187 2 335 1 144 1 263 1 358 1 306 1 212 1 214 2 300 1 210 1 272 2 
293 1 44 1 345 1 300 1 210 2 244 1 187 5 335 1 278 1 144 2 358 2 212 3 53 1 339 1 214 4 272 5 
293 1 345 1 300 1 210 2 244 1 187 5 335 1 278 1 144 2 37 1 358 2 212 3 53 1 339 1 214 4 272 5 
252 2 298 1 274 1 232 1 208 1 210 1 14 1 187 1 144 1 315 1 145 2 358 1 270 1 212 1 339 1 214 1 225 1 272 1 
195 1 208 1 140 1 210 1 187 1 93 1 144 2 260 1 358 1 212 1 53 1 214 1 272 1 
130 1 275 1 23 1 225 1 34 1 
151 1 352 1 275 1 23 2 321 2 4 1 333 1 34 2 234 1 49 1 268 2 116 1 288 1 130 2 81 1 281 1 225 1 40 1 98 1 
252 1 275 1 34 1 313 1 259 1 145 1 38 1 130 1 270 1 
116 1 275 1 81 1 
183 1 289 1 241 1 115 1 
183 1 169 1 228 1 224 1 289 1 115 1 242 1 
224 1 204 1 256 1 
327 1 328 1 183 1 228 3 110 1 22 2 115 1 242 1 165 1 169 1 224 3 289 1 
183 1 169 1 228 2 224 2 289 1 115 1 311 1 242 1 249 1 
122 1 328 1 262 1 183 1 227 1 228 1 230 1 276 1 242 1 169 1 224 1 
328 1 183 1 169 1 228 1 224 1 289 1 242 1 
328 1 169 1 228 1 224 1 289 2 115 1 242 1 
211 1 328 1 183 1 169 2 228 2 224 2 289 1 12 1 242 2 77 1 
328 1 262 1 183 2 228 3 115 1 242 1 311 2 102 1 169 1 178 1 224 3 289 1 340 1 
122 2 328 1 183 1 228 2 230 1 276 1 115 1 242 1 311 1 169 1 303 1 224 2 289 1 82 1 351 1 
328 1 262 1 183 2 228 4 115 1 242 2 311 2 169 2 178 1 224 4 289 1 359 1 249 1 
328 1 183 1 169 1 228 1 224 1 289 1 115 1 242 1 
327 1 262 1 183 3 110 1 228 4 22 1 115 2 311 2 242 1 33 1 169 1 178 1 224 4 289 2 
328 1 183 1 228 2 152 1 332 1 115 1 242 1 311 1 47 1 169 1 224 2 289 1 
327 2 328 1 183 1 110 1 228 3 22 2 115 1 242 1 169 1 224 3 289 1 97 1 
226 2 183 2 302 1 331 1 
328 1 169 1 228 1 224 1 242 1 221 1 
328 1 183 1 169 1 228 2 224 2 289 1 115 1 311 1 242 1 102 1 
90 1 
328 1 183 1 169 1 228 1 224 1 289 1 115 1 242 1 
328 1 183 1 228 3 22 1 115 1 311 1 242 1 102 1 169 1 224 3 289 1 
183 1 262 1 178 1 33 1 
183 1 289 1 

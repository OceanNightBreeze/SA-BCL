#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
184 1 250 1 3 2 63 3 125 1 307 1 357 9 126 1 127 2 213 1 85 4 89 9 172 1 105 1 290 1 130 5 72 2 372 1 343 1 155 2 91 1 374 2 269 1 158 1 27 2 28 1 183 6 136 2 
184 1 250 1 3 2 63 3 125 1 307 1 357 9 126 1 127 2 213 1 85 4 89 9 172 1 105 1 290 1 130 5 72 2 372 1 343 1 155 2 91 1 374 2 269 1 158 1 27 2 28 1 183 6 136 2 
184 1 250 1 3 2 63 4 125 1 307 1 357 10 126 1 127 2 213 1 85 5 89 10 172 1 105 1 290 1 130 6 72 2 372 1 343 1 155 2 91 1 374 2 269 1 158 1 27 2 28 1 183 7 136 2 
184 1 250 1 3 2 63 2 125 1 307 1 357 7 126 1 127 2 213 1 85 3 89 7 172 1 105 1 290 1 130 4 72 2 372 1 155 2 91 1 374 2 269 1 158 1 27 1 28 1 183 4 136 2 
89 4 172 1 3 1 130 3 72 1 63 1 372 1 343 1 91 1 125 1 374 1 357 4 158 1 127 1 85 2 27 2 183 3 136 1 
89 2 184 1 331 1 33 1 130 1 3 1 72 1 372 1 155 1 125 1 307 1 374 1 357 2 194 1 158 1 127 1 
89 3 130 2 372 1 63 1 155 1 125 1 374 2 357 3 126 1 158 1 127 2 85 1 183 1 
206 1 3 1 63 3 125 1 126 1 357 9 127 2 213 1 85 4 89 9 172 1 371 1 130 5 72 1 372 1 155 1 343 1 91 1 374 2 269 1 158 1 27 2 183 7 136 1 
206 1 3 1 63 3 125 1 126 1 357 9 127 2 213 1 85 4 89 9 172 1 371 1 130 5 72 1 372 1 155 1 343 1 91 1 374 2 269 1 158 1 27 2 183 7 136 1 
117 1 315 1 29 1 
315 1 275 2 381 1 
24 1 358 2 151 2 274 1 348 2 100 2 176 2 229 2 
352 1 298 1 142 1 274 1 273 2 356 2 100 2 65 1 122 1 123 1 281 1 42 1 358 2 360 1 12 1 312 1 363 1 286 1 47 1 263 1 107 1 151 3 175 1 341 1 321 1 176 2 323 1 24 1 75 2 346 2 227 1 181 2 79 1 327 1 348 2 270 1 229 3 
32 1 73 1 24 1 34 1 358 1 151 1 348 1 100 1 176 1 229 1 
315 1 151 1 320 1 152 1 221 1 100 1 73 1 324 1 335 1 77 1 80 1 29 1 147 1 229 1 
315 1 151 1 320 1 152 1 221 2 100 1 176 1 73 1 335 2 77 1 358 1 348 1 29 1 147 1 229 1 
335 1 369 1 375 1 71 1 221 1 
315 1 335 2 369 1 375 1 214 1 221 2 29 1 247 1 
335 1 369 1 221 1 
32 1 34 1 151 1 221 1 100 1 176 1 322 1 73 1 24 1 335 1 375 1 358 1 348 1 229 1 
315 1 
315 1 296 1 335 2 369 1 375 1 214 1 221 2 29 1 
31 1 315 1 287 1 369 2 106 1 35 1 355 1 221 5 132 1 303 2 178 1 226 2 335 5 210 1 375 2 214 1 284 2 196 1 29 1 
352 1 151 2 175 1 209 1 356 1 100 1 176 1 191 1 123 1 75 1 227 1 346 1 42 1 12 1 348 1 270 1 363 1 286 1 30 1 229 2 
117 1 274 1 
151 2 274 2 265 1 100 2 176 1 358 1 348 1 229 2 314 1 
230 1 260 1 30 1 
352 1 151 1 144 1 175 1 274 1 356 1 123 1 75 1 227 1 346 1 42 1 12 1 270 1 363 1 286 1 229 1 
358 1 151 3 209 1 274 1 348 3 100 3 176 3 229 3 
32 1 73 1 151 1 348 1 100 1 176 1 229 1 
73 1 358 1 151 1 348 1 265 1 100 1 176 1 229 1 314 1 
352 1 207 1 298 1 209 1 274 1 273 1 356 1 100 3 65 1 191 1 122 1 123 1 335 1 281 1 42 1 358 2 360 1 12 1 312 1 363 1 286 1 147 1 47 1 314 1 367 1 107 1 151 4 175 1 320 1 152 1 221 1 176 3 323 1 73 1 24 1 75 1 227 1 346 1 77 1 181 2 327 1 270 1 348 3 229 4 
151 2 80 1 209 1 274 1 348 1 100 2 171 1 176 1 229 2 
315 1 207 1 151 3 209 2 320 1 221 1 152 1 100 3 176 3 191 1 73 1 335 1 77 1 358 1 348 3 57 1 147 1 314 1 229 3 
151 2 209 1 100 2 176 2 358 1 260 1 348 2 314 1 229 2 30 1 
352 1 151 1 175 1 274 1 356 1 123 1 75 1 227 1 346 1 42 1 12 1 270 1 363 1 286 1 229 1 
352 1 353 1 151 1 175 1 274 1 356 1 123 1 75 1 227 1 346 1 42 1 114 1 363 1 286 1 229 1 
230 2 332 1 164 1 273 4 62 1 36 1 65 1 122 1 281 1 260 2 47 2 69 1 198 1 107 1 21 1 321 2 200 1 323 1 25 1 181 2 327 1 379 1 329 1 30 2 
135 1 73 1 151 1 348 1 100 1 147 1 176 1 229 1 
299 1 151 5 209 2 274 1 100 5 176 4 191 1 358 1 80 1 311 1 348 4 171 1 229 5 314 1 
135 1 32 1 73 1 151 2 348 2 100 2 176 2 229 2 
170 1 291 1 
170 1 291 1 
168 1 262 1 
168 1 262 1 
168 1 262 1 
170 1 291 1 349 1 
170 1 291 1 349 1 
170 1 359 1 291 1 
168 1 170 2 11 1 90 1 262 1 291 2 
170 1 291 1 349 1 
170 1 368 1 291 1 
170 1 368 1 291 1 
170 1 368 1 291 1 
18 1 315 1 231 2 174 1 61 2 370 1 221 2 166 1 291 2 170 2 335 2 11 1 26 3 182 1 377 1 347 2 56 2 146 1 115 2 
231 1 161 1 61 1 274 1 100 2 169 1 7 1 170 1 335 1 278 1 359 1 146 1 218 1 151 2 129 1 221 1 291 1 176 2 345 1 26 1 348 2 56 1 115 1 229 2 
3 1 72 1 136 1 
194 1 3 1 72 1 
351 1 124 1 194 1 84 1 3 3 136 2 
351 1 179 1 194 1 84 1 3 2 136 1 
351 1 194 1 84 2 3 2 136 1 
185 1 119 1 355 2 303 1 275 3 62 1 99 1 36 1 37 1 169 1 335 5 66 2 308 2 284 1 214 1 315 2 287 3 198 1 369 1 106 1 340 1 218 1 264 1 221 5 292 2 345 1 226 1 375 4 92 1 379 1 29 1 381 1 
119 3 300 1 97 1 355 6 303 2 275 9 62 3 99 2 36 3 256 1 335 9 308 6 214 1 284 2 315 5 287 8 198 3 369 6 340 1 106 1 319 1 71 5 132 1 221 9 344 1 292 6 267 1 345 4 226 2 78 5 375 7 92 2 379 3 29 1 381 3 
185 1 119 1 355 2 303 1 99 1 62 1 275 4 36 1 335 3 66 1 308 2 284 1 315 3 287 3 198 1 264 1 221 3 132 1 292 2 345 1 226 1 375 2 92 1 379 1 29 1 381 2 
185 1 119 2 97 1 355 4 303 1 275 7 99 1 62 2 36 2 335 4 66 2 308 4 284 1 315 4 287 5 198 2 264 1 319 1 221 4 132 1 344 1 292 4 345 2 226 1 375 3 92 1 379 2 29 1 381 3 
117 1 76 1 42 1 
294 1 42 1 
5 1 
352 1 42 1 
352 1 76 2 339 1 42 3 175 1 261 1 
352 1 42 1 175 1 
128 1 42 1 
148 1 197 1 21 3 354 1 302 1 273 7 111 2 321 4 36 1 225 1 379 1 283 1 215 1 86 1 195 1 329 2 47 3 
148 1 197 1 21 3 354 1 302 1 273 7 111 2 321 4 36 1 225 1 379 1 283 1 215 1 86 1 195 1 329 2 47 3 
148 1 197 1 21 3 354 1 302 1 273 7 111 2 321 4 36 1 225 1 379 1 283 1 215 1 86 1 195 1 271 1 329 2 47 3 
160 1 119 3 251 4 354 2 189 1 273 31 302 2 62 3 36 4 122 1 281 1 45 1 283 5 67 1 86 1 215 2 195 1 313 1 47 15 148 1 197 2 19 3 198 3 21 10 219 1 342 1 321 16 111 3 323 1 225 1 181 2 327 1 379 4 329 5 
139 1 354 1 273 9 302 1 36 1 122 2 281 2 283 1 67 1 86 1 215 1 47 4 148 1 197 1 21 4 321 5 111 2 323 2 74 1 225 1 181 4 327 2 379 1 329 3 
272 1 120 1 301 1 3 2 356 1 145 1 305 1 257 1 124 1 125 1 357 2 194 1 237 1 127 1 212 1 363 1 286 1 89 2 316 1 51 1 130 1 72 1 372 1 155 1 75 1 374 1 346 1 158 1 183 1 136 1 
272 1 95 1 301 1 2 1 3 2 356 1 305 1 257 1 124 1 125 1 357 3 194 1 237 1 127 1 212 1 363 1 286 1 89 3 316 1 20 1 51 1 130 1 72 1 155 1 75 1 374 1 346 1 158 1 183 2 136 1 
272 1 301 1 2 1 3 2 356 1 305 1 257 1 124 1 125 1 357 2 194 1 363 1 286 1 89 2 316 1 20 1 51 1 130 1 72 1 155 1 75 1 346 1 158 1 183 2 136 1 
94 1 89 1 352 1 366 1 95 1 316 2 51 2 356 1 53 1 155 2 133 1 305 2 54 1 75 1 374 1 39 1 357 1 227 1 346 1 42 1 127 1 363 1 286 1 
272 1 120 1 301 1 3 2 356 1 305 1 257 1 124 1 357 1 194 1 237 1 127 1 212 1 363 1 286 1 89 1 316 1 20 1 51 1 72 1 372 1 155 1 75 1 374 1 346 1 136 1 
101 1 
94 1 60 1 96 2 0 2 188 2 99 1 275 2 276 1 192 1 335 4 336 1 10 1 282 1 284 1 286 1 338 2 287 2 289 2 106 1 242 1 156 1 75 2 346 2 350 2 352 1 252 2 355 2 303 1 356 2 255 1 43 1 42 1 214 3 363 1 315 1 369 6 50 1 52 2 221 4 53 1 177 1 226 1 227 2 381 2 
350 1 296 1 60 1 369 2 242 1 221 2 177 1 335 2 336 1 10 1 214 1 
177 1 336 1 335 1 289 1 60 1 10 1 0 1 242 1 221 1 
350 1 296 1 60 1 369 2 289 1 0 1 188 1 242 1 221 2 177 1 335 2 336 1 10 1 214 1 
330 1 60 1 96 2 0 3 188 4 100 1 335 4 336 1 10 1 282 1 284 1 338 2 104 1 287 1 289 3 106 1 151 1 242 1 73 1 24 1 348 1 116 1 29 2 32 1 350 4 296 1 34 1 252 2 355 1 303 1 258 1 358 1 214 3 315 2 369 7 50 1 52 2 221 4 223 1 176 1 322 1 177 1 226 1 229 1 381 2 
350 2 60 1 96 2 0 2 252 2 188 2 355 1 303 1 275 2 192 1 336 1 335 3 10 1 282 1 214 2 284 1 338 2 315 2 287 1 289 2 369 4 106 1 50 1 52 2 242 1 221 3 177 1 226 1 29 1 381 2 
350 2 60 1 96 2 0 2 252 2 188 2 355 1 303 1 336 1 335 3 258 1 10 1 282 1 214 2 284 1 338 2 104 1 315 1 287 1 289 2 369 4 106 1 50 1 52 2 242 1 221 3 223 1 177 1 226 1 29 1 381 2 
350 2 60 1 96 2 0 2 252 2 188 2 355 1 303 1 336 1 335 3 258 1 10 1 282 1 214 2 284 1 338 2 104 1 315 1 287 1 289 2 369 4 106 1 50 1 52 2 242 1 221 3 223 1 177 1 226 1 29 1 381 2 
350 2 60 1 96 2 0 2 188 2 355 1 303 1 275 2 336 1 335 3 10 1 282 1 214 2 284 1 338 2 315 1 287 1 289 2 369 4 106 1 70 1 242 1 221 3 223 1 224 2 373 1 177 1 226 1 378 1 29 1 205 2 
350 3 330 1 96 2 60 1 252 2 0 3 188 3 355 1 303 1 336 1 335 3 10 1 258 1 282 1 214 2 284 1 338 2 104 1 315 1 287 1 289 3 369 5 106 1 50 1 52 2 242 1 221 3 223 1 177 1 226 1 29 1 381 2 
350 3 330 1 96 2 60 1 252 2 0 3 188 3 355 1 303 1 336 1 335 3 10 1 258 1 282 1 214 2 284 1 338 2 104 1 315 1 287 1 289 3 369 5 106 1 50 1 52 2 242 1 221 3 223 1 177 1 226 1 29 1 381 2 
350 2 60 1 96 2 0 2 188 2 355 1 303 1 275 2 192 1 336 1 335 3 10 1 282 1 214 2 284 1 338 2 315 1 287 1 289 2 369 4 106 1 242 1 221 3 224 2 177 1 226 1 378 1 29 1 205 2 
117 1 230 1 273 6 274 2 36 1 65 1 122 1 281 1 260 1 215 1 86 1 47 3 148 1 197 1 107 1 21 2 321 3 111 1 323 1 225 1 25 1 181 2 327 1 379 1 329 2 30 1 
230 11 119 2 251 3 165 1 274 1 273 14 62 2 36 1 65 2 4 1 122 2 309 1 279 1 281 2 283 1 260 4 312 1 313 1 47 6 19 3 198 1 21 2 107 1 342 1 321 8 323 2 181 4 246 1 79 1 327 2 379 2 329 1 30 11 
352 1 234 1 144 1 209 1 274 1 273 2 356 1 100 1 65 1 191 1 4 1 122 1 123 1 42 1 281 1 12 1 260 1 363 1 312 1 286 1 47 1 107 1 151 2 175 1 321 1 176 1 323 1 75 1 22 1 346 1 227 1 181 2 327 1 79 1 270 1 348 1 204 1 229 2 
230 7 274 2 273 20 100 1 62 2 191 1 65 3 4 1 281 3 12 2 283 4 13 2 16 2 286 2 148 1 197 1 198 2 20 1 107 3 21 8 151 3 153 1 111 1 154 2 295 1 75 3 346 3 79 1 348 1 30 7 352 2 119 2 209 1 356 3 36 3 122 3 123 2 42 2 360 2 260 7 215 1 86 1 312 1 363 2 217 1 47 10 317 2 175 2 321 10 176 1 323 3 225 1 227 1 181 6 327 3 379 3 270 2 329 4 229 3 
94 1 352 2 209 1 273 2 356 7 145 1 100 1 304 1 65 2 122 2 42 3 281 2 337 1 363 2 312 1 286 2 47 1 48 1 20 1 107 2 151 1 341 2 131 1 222 1 321 1 53 1 176 1 323 2 75 8 346 8 227 2 113 1 25 1 181 4 327 2 79 1 348 1 159 1 229 1 
230 1 119 1 273 3 100 1 62 1 36 1 65 1 4 1 122 1 281 1 358 1 260 1 46 1 314 1 47 2 198 1 21 1 107 1 151 1 321 1 176 1 323 1 181 2 327 1 379 1 348 1 329 1 30 1 229 1 
230 1 21 1 107 1 273 2 62 1 321 2 65 1 323 1 122 1 25 1 281 1 181 2 327 1 283 1 260 1 379 1 30 1 69 1 
230 1 198 1 21 1 107 1 332 1 273 2 36 1 65 1 323 1 122 1 25 1 281 1 181 2 327 1 260 1 329 1 30 1 47 2 
230 2 119 1 273 4 62 1 36 1 65 1 122 1 281 1 260 2 283 1 47 2 198 1 107 1 21 2 321 2 323 1 25 1 181 2 327 1 379 1 329 1 30 2 
230 1 21 1 107 1 273 2 62 1 321 2 65 1 323 1 122 1 113 1 281 1 181 2 327 1 283 1 260 1 379 1 30 1 69 1 
230 1 198 1 21 1 107 1 332 1 273 2 36 1 65 1 323 1 122 1 113 1 281 1 181 2 327 1 260 1 329 1 30 1 47 2 
230 2 119 1 273 4 62 1 36 1 65 1 122 1 281 1 260 2 283 1 47 2 198 1 107 1 21 2 321 2 323 1 113 1 181 2 327 1 379 1 329 1 30 2 
230 2 119 1 273 4 62 1 36 1 65 1 122 1 281 1 260 2 283 1 47 2 198 1 107 1 21 2 321 2 323 1 181 2 327 1 379 1 329 1 30 2 
352 1 274 1 273 2 356 1 65 1 122 1 123 1 42 1 281 1 360 1 12 1 363 1 312 1 286 1 47 1 107 1 151 1 175 1 321 1 323 1 75 1 346 1 227 1 181 2 79 1 327 1 270 1 229 1 
352 1 353 1 274 1 273 2 356 1 65 1 122 1 123 1 42 1 281 1 363 1 312 1 286 1 17 1 47 1 107 1 151 1 175 1 321 1 323 1 75 1 346 1 227 1 181 2 114 1 79 1 327 1 229 1 
230 2 119 1 273 4 62 1 36 1 65 1 4 1 122 1 281 1 260 2 283 1 47 2 198 1 107 1 21 2 321 2 323 1 181 2 327 1 379 1 329 1 30 2 
230 2 352 1 119 1 273 4 356 1 62 1 145 1 36 1 65 1 122 1 123 1 42 1 281 1 360 1 12 1 283 1 260 2 363 1 286 1 16 1 47 2 198 1 21 2 107 1 151 1 175 1 321 2 323 1 75 1 346 1 181 2 327 1 379 1 270 1 329 1 30 2 229 1 
230 1 119 1 233 1 273 3 100 1 62 1 36 1 65 1 4 1 122 1 281 1 358 1 283 1 260 1 47 1 314 1 198 1 21 1 107 1 151 1 321 2 176 1 323 1 181 2 327 1 379 1 348 1 229 1 30 1 
139 1 143 1 273 41 62 4 6 1 281 3 238 1 283 4 67 1 14 1 285 1 148 1 197 1 19 3 288 1 198 4 21 8 342 3 111 1 201 2 23 1 203 1 208 1 119 4 251 4 36 5 82 1 122 3 86 1 215 1 313 1 216 1 47 21 364 4 321 20 323 3 225 1 180 1 181 6 376 1 327 3 379 5 329 4 
139 1 208 1 119 4 251 4 143 1 273 38 62 4 36 4 82 1 6 1 122 4 281 4 238 1 67 2 283 3 215 1 86 1 285 1 14 1 216 1 313 1 364 4 47 18 148 1 197 1 288 1 19 3 198 3 21 7 342 3 111 1 321 20 201 2 323 4 225 1 23 1 180 1 376 1 181 8 203 1 327 4 379 5 329 4 
139 1 208 1 119 7 251 4 165 2 143 1 273 52 62 7 36 8 82 1 6 1 122 2 281 2 238 1 67 1 283 7 215 1 86 1 14 1 216 1 313 2 364 4 47 25 148 1 197 1 288 1 19 4 198 7 21 14 342 2 111 1 321 27 201 1 323 2 225 1 23 1 376 1 181 4 203 1 327 2 379 8 329 7 
139 1 208 1 119 3 251 2 273 19 62 3 36 3 122 2 8 1 281 2 283 3 285 1 216 1 313 1 364 2 47 10 288 1 19 1 198 3 21 6 342 1 321 9 201 1 323 2 23 1 376 2 181 4 327 2 379 3 329 3 
139 1 208 1 119 3 251 2 143 1 273 26 62 3 36 2 82 1 6 1 122 3 281 3 238 1 283 2 67 2 14 1 216 1 47 12 364 4 288 1 19 2 198 2 21 4 342 2 321 14 201 2 323 3 23 2 376 1 181 6 203 1 327 3 379 3 329 2 
231 1 174 1 170 1 61 1 163 1 11 1 377 1 56 1 115 1 291 1 
278 1 359 1 
231 1 170 1 61 1 259 1 56 1 115 1 137 1 291 1 38 1 
18 1 315 1 231 1 174 1 61 1 221 1 166 1 291 1 335 1 170 1 11 1 26 2 182 1 377 1 347 1 146 1 56 1 115 1 
18 1 315 1 231 1 174 1 61 1 221 1 166 1 291 1 335 1 170 1 11 1 26 2 182 1 377 1 347 1 146 1 56 1 115 1 
18 1 315 1 231 1 174 1 61 1 221 1 166 1 291 1 335 1 170 1 11 1 26 2 182 1 377 1 347 1 146 1 56 1 115 1 
108 1 90 1 349 1 
108 1 90 1 349 1 
244 1 368 1 
244 1 368 1 90 1 
7 1 129 1 
231 1 161 1 61 1 274 1 100 2 169 1 7 1 335 1 170 1 278 1 359 1 87 1 218 1 151 2 129 1 221 1 291 1 176 2 345 1 375 1 182 1 26 1 347 1 56 1 348 2 115 1 229 2 
108 1 349 1 
244 1 368 1 90 1 
352 1 187 1 1 1 273 2 356 2 100 2 304 1 65 1 4 1 122 1 280 1 42 1 281 1 362 1 363 1 312 1 286 1 47 1 107 1 151 2 341 2 222 1 321 1 323 1 75 2 346 2 181 2 327 1 79 1 58 1 229 2 
162 1 20 1 301 1 3 2 72 1 356 2 110 1 145 1 305 1 257 1 124 1 75 2 334 1 194 1 346 2 212 1 363 1 136 1 286 1 
162 1 20 1 301 1 3 2 72 1 356 1 305 1 333 1 257 1 124 1 75 1 194 1 346 1 212 1 363 1 136 1 286 1 
94 1 352 1 356 1 53 1 305 1 75 1 334 1 54 1 227 1 346 1 42 1 245 1 363 1 286 1 
162 1 20 1 301 1 3 2 72 1 356 1 110 1 305 1 257 1 124 1 75 1 334 1 194 1 346 1 212 1 363 1 136 1 286 1 
15 1 
117 1 315 1 178 1 287 1 355 1 196 1 29 1 
315 2 287 1 369 1 106 1 252 1 50 1 52 1 355 1 221 1 303 1 275 1 226 1 335 1 214 1 284 1 29 1 381 1 
235 2 145 1 99 2 275 12 62 2 276 1 335 5 284 4 196 1 240 2 286 4 68 2 287 9 149 2 198 2 339 1 106 4 154 2 292 6 202 1 294 3 75 3 346 3 76 2 77 2 29 2 352 3 248 1 119 2 355 8 303 4 356 3 36 2 40 2 308 6 42 10 214 3 363 3 365 2 315 8 128 2 369 5 175 3 221 5 178 1 268 2 226 4 326 2 227 1 379 2 328 1 228 1 138 1 381 6 
141 1 119 2 251 1 143 1 355 5 303 2 99 1 275 6 62 2 276 1 36 2 82 1 6 1 335 1 308 5 310 1 238 1 214 1 284 2 240 1 365 2 315 5 287 8 19 1 198 2 369 1 106 2 221 1 342 1 292 5 226 2 203 1 379 2 29 2 381 3 
32 1 34 1 355 2 303 1 100 1 36 1 335 1 358 1 215 1 284 1 240 1 365 2 104 1 148 1 197 1 287 2 106 1 151 1 221 1 176 1 322 1 73 1 226 1 24 1 379 2 81 1 348 1 229 1 
315 1 287 1 106 1 355 1 303 1 178 1 226 1 284 1 196 1 29 1 
365 2 315 5 287 5 198 2 119 2 355 5 154 1 62 2 275 10 36 2 292 5 308 5 379 2 240 1 381 5 
315 1 335 1 369 1 214 1 221 1 29 1 
94 1 352 1 355 2 303 2 356 4 99 2 276 2 335 3 42 1 43 1 44 1 284 2 214 2 363 1 286 1 287 2 173 1 369 4 106 1 132 1 221 3 53 1 156 1 202 1 226 2 75 4 346 4 227 2 138 2 
352 1 298 1 274 1 273 1 356 1 100 2 65 1 122 1 123 1 281 1 42 1 358 2 360 1 12 1 312 1 363 1 286 1 47 1 107 1 151 3 175 1 176 2 323 1 75 1 24 1 346 1 227 1 181 2 327 1 348 2 270 1 229 3 
315 4 287 1 106 1 355 2 303 1 111 1 275 4 99 1 276 1 292 2 226 1 308 2 284 1 29 2 381 2 
61 1 220 1 56 1 
61 1 220 1 56 1 
61 1 377 1 129 1 56 1 199 1 
61 1 220 1 56 1 
61 1 49 1 56 1 
61 1 49 1 56 1 
61 1 49 1 56 1 
61 1 56 1 
170 1 291 1 
139 1 251 1 273 8 36 1 122 1 281 1 86 1 215 1 47 4 148 1 197 1 19 1 21 2 342 1 111 1 321 4 323 1 225 1 181 2 203 1 327 1 379 1 329 2 
139 1 119 1 251 2 273 11 62 1 36 1 122 2 306 1 281 2 283 1 215 1 86 1 313 1 47 5 148 1 197 1 19 1 21 3 342 1 111 1 321 6 323 2 225 1 181 4 203 1 327 2 379 2 329 2 
139 1 119 2 251 1 143 1 273 19 62 2 36 3 82 1 6 1 122 3 306 1 281 3 238 1 283 1 67 1 215 1 86 1 47 10 148 1 197 1 19 1 198 2 21 4 342 1 111 1 321 9 323 3 225 1 181 6 203 1 327 3 379 3 329 3 
139 1 119 2 251 1 143 1 273 17 62 2 36 2 82 1 6 1 122 3 306 1 281 3 238 1 67 1 283 2 215 1 86 1 47 7 148 1 197 1 19 1 198 1 21 5 342 1 111 1 321 10 323 3 225 1 181 6 203 1 327 3 379 3 329 3 
139 1 251 1 273 8 36 1 122 1 281 1 86 1 215 1 47 4 148 1 197 1 19 1 21 2 342 1 111 1 321 4 323 1 225 1 181 2 203 1 327 1 379 1 329 2 
139 1 119 2 251 1 143 1 273 12 62 2 36 2 82 1 6 1 122 1 281 1 238 1 283 1 47 6 19 1 198 2 21 2 342 1 321 6 323 1 181 2 203 1 327 1 379 2 329 1 
139 1 119 2 251 1 143 1 273 18 62 2 36 2 82 1 6 1 122 4 306 1 281 4 238 1 283 2 67 2 215 1 86 1 47 8 148 1 197 1 19 1 198 1 21 5 342 1 111 1 321 10 323 4 225 1 181 8 203 1 327 4 379 3 329 3 
139 1 119 3 251 1 143 1 273 16 62 3 36 2 82 1 6 1 122 4 281 4 238 1 283 3 67 2 285 1 47 7 19 1 198 2 21 6 342 1 321 9 323 4 181 8 203 1 327 4 379 3 329 3 
148 1 197 3 21 6 273 7 321 3 36 1 225 2 283 3 379 1 86 1 215 3 329 3 47 4 
139 1 119 2 251 1 143 1 273 18 62 2 36 2 82 1 6 1 122 4 281 4 238 1 283 1 67 2 215 1 86 1 285 1 47 8 148 1 197 1 19 1 198 1 21 4 342 1 111 1 321 10 323 4 225 1 181 8 203 1 327 4 379 3 329 3 
148 1 197 1 21 3 273 8 111 1 321 4 36 1 323 2 122 2 225 1 281 2 181 4 327 2 379 1 283 1 67 1 86 1 215 1 329 2 47 4 
117 1 148 1 197 1 21 2 273 6 111 1 321 3 36 1 225 1 379 1 86 1 215 1 329 2 47 3 
198 1 119 1 21 2 273 4 62 1 321 2 36 1 323 1 122 1 306 1 281 1 181 2 327 1 379 1 283 1 329 1 47 2 
19 1 198 1 119 1 251 2 21 2 273 7 342 1 321 3 62 1 36 1 379 1 283 1 313 1 329 1 47 4 
140 1 119 2 251 2 165 1 273 23 62 2 36 3 122 2 281 2 283 4 67 2 215 2 86 1 313 1 47 12 148 1 197 2 19 2 198 2 21 9 111 1 321 11 323 2 225 1 181 4 246 1 327 2 379 3 329 5 
251 1 273 1 47 1 
19 1 273 1 321 1 
198 1 119 1 21 3 273 6 154 1 62 1 321 3 36 1 323 1 122 1 306 1 281 1 181 2 327 1 379 1 283 1 329 2 47 3 
139 1 119 2 251 1 143 1 273 12 62 2 36 2 82 1 6 1 122 1 281 1 238 1 283 1 47 6 19 1 198 2 21 2 342 1 321 6 323 1 181 2 203 1 327 1 379 2 329 1 
148 1 197 1 21 2 273 6 321 3 36 1 379 1 283 1 215 1 329 1 47 3 
140 1 197 1 21 2 273 3 321 1 323 1 122 1 225 1 281 1 181 2 327 1 283 1 67 1 215 1 86 1 329 1 47 2 
139 1 148 1 197 2 21 5 273 10 321 5 36 2 323 1 122 1 281 1 181 2 327 1 283 2 379 2 81 1 215 2 329 3 47 5 
139 1 21 1 273 2 62 1 321 2 323 1 122 1 281 1 181 2 327 1 379 1 283 1 
139 1 198 1 119 1 21 2 273 4 62 1 321 2 36 1 323 1 122 1 281 1 181 2 327 1 379 1 283 1 329 1 47 2 
139 1 140 1 197 1 21 2 273 3 321 1 323 3 122 3 281 3 181 6 327 3 67 1 283 1 215 1 285 1 329 1 47 2 
160 1 139 1 140 1 119 3 251 4 189 1 273 34 62 3 36 5 122 5 306 1 281 5 67 2 45 1 283 5 215 3 86 1 285 1 313 1 47 18 148 2 197 3 19 3 198 3 21 12 342 1 111 1 321 16 323 5 225 1 181 10 327 5 379 5 329 7 
186 1 151 1 80 1 274 1 100 1 171 1 229 1 
297 1 241 1 186 1 109 1 151 1 274 1 100 1 134 1 193 1 80 1 171 1 229 1 
117 1 94 1 352 1 75 1 346 1 227 1 42 1 363 1 356 1 53 1 286 1 
352 1 151 2 175 1 209 1 274 1 356 1 100 1 176 1 123 1 75 1 227 1 346 1 42 1 12 1 348 1 363 1 286 1 229 2 
352 2 209 1 235 1 274 1 356 1 100 2 123 1 42 3 12 1 363 1 286 1 147 1 128 1 151 2 175 2 320 1 176 2 73 1 75 1 346 1 348 1 138 1 229 2 
352 2 353 1 209 1 235 1 274 1 356 2 100 2 123 1 9 1 42 3 363 1 286 1 147 1 128 1 151 2 175 2 320 1 176 2 73 1 75 2 346 2 348 1 138 1 229 2 
352 1 235 1 356 3 254 1 9 1 335 2 236 1 42 4 363 1 286 1 315 1 128 1 369 1 175 1 221 2 294 1 75 3 76 1 346 3 227 1 77 1 29 1 138 1 
315 1 128 1 352 1 149 1 369 1 175 1 235 1 221 2 356 3 294 1 75 3 9 1 335 2 227 1 346 3 76 1 77 1 42 4 363 1 29 1 286 1 138 1 
75 1 346 1 337 1 363 1 356 1 286 1 
352 2 48 1 339 1 20 1 232 1 175 1 341 1 131 1 356 6 222 1 145 1 75 7 83 1 227 2 346 7 42 3 337 1 361 1 159 1 363 2 286 3 
230 1 273 6 274 2 145 1 100 1 65 2 4 1 281 2 12 1 13 1 16 1 286 1 148 1 197 1 107 2 21 2 151 2 111 1 75 1 346 1 348 1 30 1 352 1 209 1 356 1 36 1 122 2 123 1 42 1 360 1 260 1 362 1 86 1 215 1 363 1 47 3 175 1 321 3 176 1 323 2 225 1 181 4 327 2 379 1 270 1 329 2 229 2 
355 1 356 1 303 2 335 3 40 1 42 2 284 2 214 1 196 1 68 1 315 1 287 1 149 1 369 2 106 2 221 3 202 1 178 1 294 1 226 2 75 1 268 1 346 1 227 1 76 1 375 1 77 1 29 1 
352 1 339 1 175 1 356 2 145 1 75 2 76 1 346 2 42 2 337 1 328 1 363 1 286 2 
94 1 352 1 356 4 145 1 53 1 102 1 75 4 9 1 227 1 346 4 42 1 363 1 286 1 
352 1 232 1 175 1 153 1 356 2 75 2 346 2 157 1 55 1 42 1 361 1 363 1 286 2 138 1 
75 1 194 1 346 1 227 1 301 1 3 1 72 1 363 1 356 1 286 1 
352 1 75 2 346 2 42 1 20 1 187 1 363 1 356 2 222 1 145 1 286 1 
94 1 352 2 356 4 131 1 53 1 145 1 222 1 102 1 75 5 227 1 346 5 42 3 363 2 159 1 286 2 138 1 
94 1 352 2 356 4 53 1 145 1 222 1 102 1 75 5 227 1 346 5 42 3 239 1 363 2 159 1 286 2 138 1 
352 1 353 1 151 2 175 1 209 1 274 1 356 1 100 1 176 1 123 1 75 1 227 1 346 1 42 1 348 1 363 1 286 1 229 2 
352 1 339 1 232 1 175 1 356 1 75 1 83 1 346 1 42 1 361 1 363 1 286 2 138 1 
59 1 1 1 151 1 100 1 41 1 280 1 211 1 58 1 229 1 
243 1 59 1 118 1 
59 1 249 1 41 1 211 1 274 1 
315 1 59 1 118 1 249 2 207 1 274 1 320 1 221 2 152 1 243 1 73 1 325 1 335 2 41 2 77 1 375 1 211 2 29 1 147 1 
117 1 125 1 158 1 130 1 
89 1 125 1 374 1 357 1 158 1 127 1 130 1 
89 1 316 1 155 1 
89 3 130 1 372 1 167 1 293 1 374 1 307 2 125 1 357 3 127 1 158 1 93 1 
89 2 125 1 374 1 357 2 158 1 127 1 27 1 130 1 183 1 
91 1 89 1 374 1 357 1 127 1 85 1 3 1 130 1 72 1 136 1 372 1 
89 1 125 1 374 1 357 1 127 1 130 1 372 1 
89 1 125 2 374 1 357 1 158 1 127 1 372 1 
89 2 130 1 98 1 372 1 64 1 266 1 125 1 374 2 357 2 127 2 
89 3 130 2 372 1 63 1 125 1 374 1 269 1 357 3 158 1 127 1 213 1 85 1 183 2 
89 2 130 1 3 2 72 1 372 1 277 1 124 1 125 1 374 1 194 1 357 2 158 1 127 1 183 1 136 1 
89 4 130 2 372 1 63 1 343 1 125 1 374 2 357 4 158 1 127 2 85 1 27 1 183 2 
89 1 125 1 374 1 357 1 158 1 127 1 130 1 372 1 
89 4 130 3 167 1 63 1 190 1 293 1 307 1 125 2 374 1 357 4 158 2 127 1 85 1 183 2 
206 1 89 2 318 1 130 1 372 1 112 1 125 1 374 1 357 2 127 1 158 1 183 1 
89 3 130 1 167 1 372 1 293 2 374 1 307 2 125 1 357 3 127 1 158 1 103 1 
121 1 130 2 380 2 88 1 
89 1 374 1 357 1 150 1 127 1 372 1 
89 2 125 1 269 1 374 1 357 2 158 1 127 1 130 1 183 1 372 1 
253 1 
89 1 125 1 374 1 357 1 158 1 127 1 130 1 372 1 
89 3 269 1 125 1 307 1 374 1 357 3 158 1 127 1 130 1 183 1 372 1 
85 1 130 1 63 1 190 1 
125 1 130 1 

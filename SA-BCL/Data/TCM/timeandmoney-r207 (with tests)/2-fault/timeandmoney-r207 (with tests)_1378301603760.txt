#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (168,297) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 9 145 1 63 1 199 1 223 2 36 1 10 9 365 1 12 3 349 2 210 1 15 5 71 1 268 2 184 2 139 2 352 2 250 1 373 1 273 1 126 6 194 1 376 2 309 1 255 4 334 1 143 1 110 1 
29 9 145 1 63 1 199 1 223 2 36 1 10 9 365 1 12 3 349 2 210 1 15 5 71 1 268 2 184 2 139 2 352 2 250 1 373 1 273 1 126 6 194 1 376 2 309 1 255 4 334 1 143 1 110 1 
29 10 145 1 63 1 199 1 223 2 36 1 10 10 365 1 12 4 349 2 210 1 15 6 71 1 268 2 184 2 139 2 352 2 250 1 373 1 273 1 126 7 194 1 376 2 309 1 255 5 334 1 143 1 110 1 
29 7 145 1 63 1 199 1 223 2 10 7 365 1 12 2 349 2 210 1 15 4 71 1 268 2 184 1 139 2 352 2 250 1 373 1 273 1 126 4 194 1 376 2 309 1 255 3 334 1 143 1 110 1 
71 1 268 1 29 4 184 2 352 1 373 1 223 1 36 1 10 4 126 3 365 1 376 1 194 1 12 1 349 1 255 2 15 3 110 1 
71 1 29 2 145 1 139 1 352 1 373 1 223 1 240 1 303 1 10 2 273 1 365 1 376 1 40 1 349 1 15 1 
71 1 29 3 139 1 373 1 223 2 10 3 126 1 365 1 376 2 309 1 12 1 255 1 15 2 
29 9 223 2 36 1 10 9 365 1 12 3 349 1 15 5 71 1 268 1 184 2 139 1 352 1 250 1 373 1 191 1 232 1 126 7 309 1 376 2 194 1 255 4 334 1 110 1 
29 9 223 2 36 1 10 9 365 1 12 3 349 1 15 5 71 1 268 1 184 2 139 1 352 1 250 1 373 1 191 1 232 1 126 7 309 1 376 2 194 1 255 4 334 1 110 1 
291 1 55 1 266 1 
291 1 177 2 312 1 
81 1 338 2 80 2 169 2 317 2 186 1 94 2 58 2 
81 1 111 1 237 1 338 3 317 2 200 1 341 1 6 1 319 1 320 1 178 1 151 1 115 2 205 1 244 1 94 2 19 2 121 1 44 1 156 1 47 1 75 1 186 1 305 1 164 1 331 1 125 1 50 2 252 2 78 1 80 3 169 2 196 1 378 2 216 1 144 1 58 2 
81 1 338 1 101 1 351 1 80 1 146 1 169 1 317 1 94 1 58 1 
217 1 137 1 338 1 351 1 4 1 284 1 190 1 34 1 291 1 80 1 346 1 266 1 128 1 58 1 
137 2 338 1 351 1 4 1 317 1 284 1 190 1 34 2 291 1 80 1 169 1 266 1 128 1 94 1 58 1 
137 1 333 1 286 1 34 1 380 1 
137 2 291 1 180 1 266 1 286 1 34 2 132 1 380 1 
137 1 286 1 34 1 
137 1 81 1 338 1 351 1 146 1 317 1 34 1 38 1 101 1 80 1 169 1 94 1 380 1 58 1 
291 1 
137 2 291 1 180 1 64 1 266 1 286 1 34 2 380 1 
137 5 337 1 158 1 175 1 49 1 359 2 33 1 286 2 34 5 116 1 291 1 375 1 295 2 180 1 266 1 109 1 245 1 246 2 380 2 
55 1 186 1 
338 2 317 1 186 2 80 2 204 1 233 1 169 1 94 1 58 2 
82 1 185 1 168 1 
338 1 156 1 47 1 186 1 341 1 200 1 319 1 164 1 178 1 115 1 50 1 252 1 78 1 80 1 275 1 196 1 
338 2 156 1 47 1 113 1 200 1 341 1 319 1 362 1 164 1 178 1 115 1 50 1 252 1 78 1 80 2 168 1 169 1 196 1 94 1 58 1 
217 1 338 5 317 1 113 1 5 1 186 1 342 1 362 2 80 5 293 1 233 1 169 4 94 4 58 5 
97 1 338 2 351 1 80 2 146 1 169 2 94 2 58 2 
338 3 80 3 317 1 169 3 186 1 362 1 94 3 58 3 
338 1 351 1 80 1 146 1 169 1 94 1 58 1 
338 1 351 1 80 1 204 1 233 1 169 1 317 1 94 1 58 1 
111 1 81 1 237 1 338 4 4 1 317 2 284 1 113 1 200 1 341 1 6 1 319 1 362 1 34 1 178 1 151 1 115 1 205 1 206 1 94 3 19 2 137 1 121 1 156 1 44 1 372 1 351 1 47 1 186 1 190 1 164 1 331 1 125 1 50 1 252 1 78 1 80 4 233 1 169 3 196 1 128 1 378 1 216 1 58 3 
217 1 338 2 80 2 169 1 186 1 342 1 94 1 362 1 58 2 
137 1 338 3 351 1 372 1 4 1 302 1 317 1 284 1 113 1 190 1 34 1 362 2 291 1 80 3 233 1 169 3 128 1 94 3 58 3 
338 2 185 1 317 1 362 1 80 2 168 1 233 1 169 2 94 2 58 2 
338 1 156 1 47 1 186 1 341 1 200 1 319 1 164 1 178 1 115 1 50 1 252 1 78 1 80 1 196 1 
338 1 314 1 157 1 47 1 186 1 341 1 200 1 319 1 164 1 178 1 115 1 50 1 252 1 78 1 80 1 
297 1 306 1 
338 1 97 1 351 1 80 1 169 1 128 1 94 1 58 1 
165 1 129 1 
165 1 129 1 
339 1 321 1 
339 1 321 1 
339 1 321 1 
165 1 129 1 14 1 
165 1 129 1 336 1 
165 2 129 2 339 1 321 1 311 1 131 1 
165 1 129 1 14 1 
165 1 129 1 14 1 
165 1 129 1 251 1 
165 1 129 1 251 1 
165 1 129 1 251 1 
338 2 129 1 281 1 30 1 34 1 201 1 288 1 136 1 94 2 137 1 298 1 299 1 161 1 186 1 329 1 165 1 270 1 51 1 80 2 254 1 169 2 279 1 58 2 336 1 
137 2 129 2 298 3 281 2 222 1 315 2 99 1 329 2 34 2 23 1 270 2 165 2 291 1 51 1 310 1 104 1 254 2 311 1 18 1 
268 1 352 1 349 1 
352 1 349 1 303 1 
268 2 349 3 303 1 16 1 87 1 344 1 
268 1 332 1 349 2 303 1 16 1 344 1 
268 1 349 2 303 1 16 2 344 1 
30 1 85 2 175 3 359 1 177 3 286 1 241 1 34 5 288 1 289 2 116 2 202 1 291 2 295 1 180 1 136 1 266 1 246 1 209 1 137 5 248 1 73 1 158 1 123 1 304 1 141 2 357 1 100 1 26 1 215 1 312 1 380 4 
30 4 85 6 175 8 359 2 177 9 286 6 241 3 34 9 88 1 262 1 134 1 289 6 116 6 202 3 263 1 291 5 295 2 180 1 296 1 266 1 70 1 181 5 209 1 246 2 137 9 158 1 49 1 123 2 304 2 357 3 26 3 215 3 333 5 312 3 380 7 
30 1 175 3 85 2 359 1 177 4 34 3 241 1 202 1 116 2 289 2 291 3 295 1 266 1 246 1 137 3 73 1 49 1 123 1 304 1 141 1 357 1 100 1 26 1 215 1 312 2 380 2 
30 2 85 4 175 5 359 1 177 7 34 4 241 2 262 1 289 4 134 1 202 2 116 4 291 4 295 1 266 1 70 1 246 1 137 4 73 1 49 1 123 1 304 1 141 2 357 2 100 1 26 2 215 2 312 3 380 3 
198 1 55 1 319 1 
197 1 319 1 
326 1 
200 1 319 1 164 1 
149 1 319 1 
319 1 164 1 
21 1 198 2 200 1 57 1 319 3 164 1 
174 1 20 2 221 1 301 1 148 1 74 1 75 4 374 1 331 3 357 1 271 2 290 3 179 1 215 1 277 1 378 7 120 1 
174 1 20 2 221 1 301 1 148 1 74 1 75 4 374 1 331 3 357 1 271 2 290 3 179 1 215 1 277 1 378 7 120 1 
174 1 20 2 221 1 301 1 148 1 74 1 75 4 374 1 331 3 357 1 271 2 230 1 290 3 179 1 215 1 277 1 378 7 120 1 
0 1 237 1 174 1 221 1 148 2 360 4 6 1 241 3 151 1 202 3 290 10 179 1 350 1 120 1 182 1 19 2 138 1 371 1 20 5 353 1 301 2 75 16 74 2 374 2 331 15 357 4 271 3 125 1 26 3 215 4 56 1 335 3 378 31 277 5 
237 2 221 1 148 1 6 2 151 2 290 4 179 1 120 1 19 4 20 3 353 1 301 1 75 5 74 1 162 1 374 1 357 1 331 4 271 2 125 2 25 1 215 1 378 9 277 1 
29 2 341 1 223 1 87 1 10 2 115 1 365 1 152 1 349 2 155 1 42 1 15 1 71 1 268 1 352 1 139 1 47 1 355 1 328 1 373 1 303 1 214 1 231 1 252 1 50 1 126 1 376 1 103 1 106 1 108 1 
29 3 341 1 223 1 87 1 114 1 10 3 115 1 11 1 365 1 349 2 155 1 42 1 15 1 268 1 352 1 139 1 47 1 355 1 373 1 189 1 303 1 214 1 231 1 252 1 50 1 126 2 376 1 103 1 106 1 108 1 
29 2 341 1 87 1 10 2 115 1 11 1 365 1 349 2 155 1 15 1 268 1 139 1 352 1 47 1 355 1 373 1 189 1 303 1 214 1 252 1 50 1 126 2 103 1 106 1 108 1 
219 1 29 1 139 2 47 1 355 2 341 1 223 1 319 1 164 1 363 1 114 1 178 1 10 1 214 2 142 1 115 1 50 1 252 1 376 1 135 1 68 1 155 2 369 1 
29 1 341 1 223 1 87 1 10 1 115 1 152 1 349 2 155 1 42 1 71 1 268 1 352 1 139 1 47 1 355 1 189 1 303 1 214 1 231 1 252 1 50 1 376 1 103 1 106 1 108 1 
274 1 
338 1 239 1 4 1 284 1 285 1 286 6 341 1 116 2 115 2 291 2 295 1 345 1 154 2 346 1 246 1 351 1 158 1 160 1 123 1 164 1 124 1 252 2 80 1 307 4 170 1 312 2 128 1 217 1 175 2 359 1 177 2 361 1 34 5 319 1 178 2 89 1 135 1 264 2 180 3 266 1 226 1 267 2 369 1 137 5 47 1 187 1 190 1 192 2 229 2 193 2 50 2 272 1 52 1 379 2 58 1 
217 1 338 1 4 1 284 1 285 1 64 1 286 2 34 3 89 1 264 1 180 1 346 1 137 3 351 1 190 1 124 1 272 1 80 1 307 2 170 1 128 1 58 1 
217 1 338 1 4 1 284 1 285 1 64 1 286 1 34 3 89 1 291 1 180 1 346 1 266 1 137 3 351 1 190 1 124 1 193 1 272 1 80 1 307 3 170 1 128 1 58 1 
217 1 338 1 4 1 284 1 64 1 285 1 286 2 34 3 89 1 291 1 264 1 180 1 346 1 266 1 137 3 351 1 190 1 124 1 192 1 193 1 272 1 80 1 307 3 170 1 128 1 58 1 
338 1 4 1 284 1 64 1 285 1 286 7 116 1 291 5 242 1 295 1 154 2 347 1 346 1 246 1 351 1 158 1 124 1 80 1 307 6 170 1 128 1 312 2 217 1 175 1 316 1 359 1 34 5 89 1 90 1 264 4 180 3 266 5 267 2 137 5 45 1 187 1 190 1 192 4 229 2 193 4 272 1 52 1 58 1 379 2 
338 1 4 1 284 1 285 1 286 4 116 1 291 2 295 1 154 2 346 1 246 1 351 1 158 1 124 1 80 1 307 4 170 1 128 1 312 2 217 1 175 1 359 1 177 2 34 4 89 1 264 2 180 2 266 1 267 2 226 1 137 4 187 1 190 1 229 2 192 2 193 2 272 1 52 1 58 1 379 2 
217 1 338 1 4 1 175 1 284 1 359 1 285 1 286 4 34 4 89 1 116 1 291 1 90 1 242 1 295 1 264 2 180 2 154 2 346 1 266 1 267 2 246 1 137 4 45 1 351 1 158 1 187 1 190 1 192 2 229 2 124 1 193 2 272 1 80 1 52 1 307 4 170 1 312 2 128 1 379 2 58 1 
217 1 338 1 4 1 175 1 284 1 359 1 285 1 286 4 34 4 89 1 116 1 291 1 90 1 242 1 295 1 264 2 180 2 154 2 346 1 266 1 267 2 246 1 137 4 45 1 351 1 158 1 187 1 190 1 192 2 229 2 124 1 193 2 272 1 80 1 52 1 307 4 170 1 312 2 128 1 379 2 58 1 
217 1 338 1 4 1 32 2 175 1 284 1 259 1 359 1 177 2 285 1 286 4 34 4 89 1 116 1 291 1 295 1 264 2 180 2 154 2 366 2 346 1 266 1 267 2 246 1 211 1 137 4 45 1 351 1 46 1 158 1 187 1 190 1 192 2 124 1 193 2 272 1 80 1 307 4 170 1 128 1 58 1 
217 1 338 1 4 1 175 1 359 1 284 1 316 1 285 1 286 5 34 4 89 1 116 1 291 1 90 1 242 1 295 1 264 3 180 2 154 2 346 1 266 1 267 2 246 1 137 4 45 1 351 1 158 1 187 1 190 1 229 2 124 1 192 3 193 3 272 1 80 1 52 1 307 5 170 1 312 2 128 1 379 2 58 1 
217 1 338 1 4 1 175 1 359 1 284 1 316 1 285 1 286 5 34 4 89 1 116 1 291 1 90 1 242 1 295 1 264 3 180 2 154 2 346 1 266 1 267 2 246 1 137 4 45 1 351 1 158 1 187 1 190 1 229 2 124 1 192 3 193 3 272 1 80 1 52 1 307 5 170 1 312 2 128 1 379 2 58 1 
338 1 4 1 284 1 285 1 286 4 116 1 291 1 295 1 154 2 346 1 246 1 211 1 351 1 158 1 124 1 80 1 307 4 170 1 128 1 217 1 175 1 32 2 359 1 177 2 34 4 89 1 264 2 180 2 366 2 266 1 267 2 226 1 137 4 187 1 190 1 192 2 193 2 272 1 58 1 
306 1 55 1 
237 2 82 11 283 1 360 3 287 1 6 2 241 2 151 2 290 2 202 2 117 1 205 1 19 4 121 1 138 1 20 1 185 4 48 1 75 8 186 1 331 6 357 2 125 2 168 11 26 1 215 1 56 1 195 1 335 3 277 1 216 2 378 14 144 1 
257 1 237 1 338 2 283 1 130 1 113 1 200 1 341 1 319 1 362 1 6 1 178 1 151 1 115 1 205 1 322 1 94 1 19 2 156 1 121 1 185 1 47 1 75 1 186 1 164 1 331 1 125 1 252 1 50 1 78 1 80 2 275 1 169 1 196 1 216 1 378 2 144 1 58 1 
111 2 338 3 237 3 283 1 148 1 113 1 341 2 200 2 6 3 241 2 151 3 115 3 202 2 290 8 205 1 153 1 208 2 120 1 19 6 247 2 300 1 121 3 156 2 20 4 301 1 75 10 164 2 357 3 125 3 252 3 78 2 80 3 168 7 26 2 215 3 169 1 216 3 82 7 221 1 362 1 319 2 178 1 179 1 94 1 95 2 43 1 185 7 47 2 186 2 189 1 331 10 271 1 50 3 107 2 196 2 378 20 277 4 144 1 58 1 
1 1 218 1 338 1 237 1 341 2 86 1 362 1 319 3 6 1 35 1 178 2 151 1 115 7 205 1 135 1 225 1 94 1 369 1 19 2 183 1 121 1 47 2 75 1 328 1 189 1 305 2 356 1 164 2 331 1 125 1 252 8 50 8 80 1 306 1 169 1 216 1 378 2 144 1 58 1 
237 1 338 1 82 1 283 1 317 1 6 1 241 1 151 1 290 1 202 1 94 1 19 2 121 1 20 1 185 1 75 1 188 1 357 1 331 2 125 1 80 1 168 1 26 1 233 1 215 1 169 1 216 1 378 3 58 1 
306 1 
306 1 
306 1 
19 2 237 1 82 1 121 1 238 1 185 1 75 2 6 1 241 1 357 1 151 1 125 1 290 1 168 1 225 1 277 1 378 2 216 1 
19 2 280 1 237 1 82 1 121 1 20 1 185 1 6 1 331 2 151 1 125 1 290 1 168 1 26 1 215 1 225 1 378 2 216 1 
237 1 82 2 241 1 6 1 151 1 202 1 290 2 225 1 19 2 121 1 185 2 20 1 75 2 357 1 331 2 125 1 168 2 26 1 215 1 216 1 378 4 277 1 
19 2 237 1 82 2 121 1 20 1 185 2 75 2 6 1 241 1 331 2 357 1 151 1 125 1 290 2 202 1 168 2 26 1 215 1 277 1 216 1 378 4 
111 1 338 1 237 1 200 1 341 1 319 1 6 1 178 1 151 1 115 1 205 1 19 2 156 1 121 1 47 1 75 1 186 1 164 1 331 1 125 1 252 1 50 1 78 1 80 1 196 1 378 2 216 1 144 1 
338 1 237 1 314 1 200 1 341 1 319 1 6 1 178 1 151 1 115 1 205 1 19 2 121 1 157 1 47 1 75 1 186 1 164 1 331 1 125 1 252 1 50 1 78 1 80 1 377 1 378 2 216 1 144 1 
237 1 82 2 283 1 241 1 6 1 151 1 202 1 290 2 19 2 121 1 185 2 20 1 75 2 357 1 331 2 125 1 168 2 26 1 215 1 216 1 378 4 277 1 
111 1 338 1 237 1 82 2 200 1 341 1 241 1 319 1 6 1 151 1 290 2 115 1 202 1 19 2 247 1 156 1 121 1 20 1 185 2 47 1 75 2 328 1 164 1 331 2 357 1 125 1 252 1 50 1 78 1 80 1 168 2 26 1 215 1 196 1 277 1 378 4 216 1 
237 1 338 1 82 1 3 1 283 1 317 1 6 1 241 1 151 1 290 1 202 1 94 1 19 2 121 1 185 1 75 2 331 1 357 1 125 1 80 1 168 1 26 1 215 1 233 1 169 1 277 1 216 1 378 3 58 1 
61 1 237 2 62 2 258 1 360 2 6 2 241 3 151 2 202 3 290 6 243 1 66 1 65 1 368 2 19 4 138 1 327 1 20 3 75 9 269 1 331 10 357 3 125 2 25 1 26 3 215 3 56 1 335 1 378 19 277 3 
237 3 62 1 358 1 258 2 360 2 6 3 241 3 151 3 290 4 202 3 243 1 65 2 13 1 368 4 19 6 96 1 98 1 327 1 20 2 353 2 22 1 75 14 269 1 331 12 357 3 125 3 253 1 25 1 26 2 215 2 56 2 335 2 277 2 378 26 
61 1 237 3 62 1 358 1 221 1 258 1 148 1 360 4 6 3 241 4 151 3 202 4 290 8 179 1 243 1 294 1 65 2 13 1 120 1 368 4 96 1 19 6 98 1 138 1 327 1 20 4 353 1 22 1 301 1 75 20 269 1 331 21 357 5 271 1 125 3 253 1 25 1 26 4 215 5 56 3 335 3 378 41 277 4 
61 1 237 4 62 1 358 1 221 1 258 1 148 1 360 4 6 4 241 4 151 4 202 4 290 7 179 1 243 1 294 1 65 2 13 1 120 1 368 4 96 1 19 8 98 1 138 1 327 1 20 4 353 2 22 1 301 1 75 20 269 1 331 18 357 5 271 1 125 4 253 1 25 1 26 3 215 4 56 3 335 3 378 38 277 3 
237 2 62 1 358 1 221 1 258 1 148 1 360 4 6 2 241 7 151 2 202 7 290 14 117 2 179 1 243 1 65 1 13 1 120 1 368 4 96 1 19 4 98 1 138 2 327 1 20 7 353 1 22 1 301 1 75 27 269 1 331 25 357 8 271 1 125 2 253 1 25 1 26 7 215 8 56 2 335 4 378 52 277 7 
165 1 270 1 129 1 281 1 99 1 104 1 254 1 311 1 329 1 76 1 
279 1 336 1 
165 1 270 1 129 1 281 1 234 1 254 1 329 1 236 1 278 1 
14 1 140 1 
251 1 131 1 323 1 
137 1 129 1 298 2 281 1 315 1 99 1 329 1 34 1 23 1 270 1 165 1 291 1 51 1 310 1 104 1 254 1 311 1 18 1 
137 1 129 1 298 2 281 1 315 1 99 1 329 1 34 1 23 1 270 1 165 1 291 1 51 1 310 1 104 1 254 1 311 1 18 1 
137 1 129 1 298 2 281 1 315 1 99 1 329 1 34 1 23 1 270 1 165 1 291 1 51 1 310 1 104 1 254 1 311 1 18 1 
14 1 140 1 131 1 
14 1 140 1 131 1 
251 1 323 1 
251 1 131 1 323 1 
299 1 161 1 
338 2 129 1 281 1 30 1 315 1 34 1 201 1 288 1 367 1 136 1 94 2 137 1 298 1 299 1 161 1 186 1 329 1 23 1 165 1 270 1 80 2 254 1 169 2 279 1 380 1 336 1 58 2 
218 1 338 2 237 1 283 1 341 1 319 1 6 1 151 1 9 1 115 2 205 1 207 1 93 1 19 2 183 1 121 1 47 1 75 1 228 1 305 2 164 1 331 1 166 1 125 1 252 2 50 2 80 2 216 1 378 2 144 1 58 2 
212 1 268 1 352 1 47 1 355 1 328 1 341 1 303 1 189 1 87 1 115 2 50 2 252 2 39 1 103 1 349 2 108 1 42 1 324 1 
268 1 352 1 47 1 355 1 341 1 303 1 189 1 87 1 343 1 115 1 50 1 252 1 103 1 349 2 108 1 42 1 324 1 
219 1 47 1 355 1 341 1 319 1 164 1 8 1 178 1 115 1 50 1 252 1 39 1 135 1 369 1 
212 1 268 1 352 1 47 1 355 1 341 1 303 1 189 1 87 1 115 1 50 1 252 1 39 1 103 1 349 2 108 1 42 1 324 1 
261 1 
337 1 116 1 291 1 175 1 55 1 266 1 109 1 
175 1 359 1 177 1 286 1 34 1 116 1 291 2 295 1 180 1 266 1 246 1 137 1 158 1 229 1 52 1 312 1 379 1 
337 1 340 1 197 3 198 2 341 1 200 1 286 5 241 2 150 2 115 2 289 6 202 2 116 8 291 8 295 4 69 2 348 1 246 4 158 4 21 1 123 2 164 1 357 2 252 2 24 2 26 2 215 2 312 6 173 2 175 9 85 6 359 4 177 12 361 1 319 6 34 5 178 1 133 1 364 2 224 2 180 3 266 2 137 5 95 2 47 2 328 1 190 2 50 2 276 1 109 1 60 2 
358 1 85 5 175 8 359 2 177 6 286 1 360 1 361 1 34 1 150 2 241 2 364 1 289 5 116 5 202 2 291 5 91 1 295 2 13 1 180 1 266 2 246 2 325 1 137 1 96 1 158 2 22 1 123 1 357 2 253 1 26 2 215 2 56 1 312 3 335 1 
81 1 338 1 2 1 146 1 175 2 148 1 359 1 317 1 150 2 34 1 364 1 116 2 38 1 242 1 179 1 295 1 246 1 94 1 137 1 351 1 158 1 301 1 357 2 101 1 80 1 215 1 169 1 58 1 
337 1 158 1 175 1 359 1 116 1 291 1 295 1 266 1 109 1 246 1 
95 1 85 5 175 5 177 10 150 2 241 2 357 2 364 1 202 2 116 5 289 5 291 5 26 2 215 2 312 5 
137 1 291 1 180 1 266 1 286 1 34 1 
239 1 175 2 359 2 341 1 286 4 361 2 319 1 34 3 178 2 115 4 116 2 345 1 295 2 135 1 265 2 180 2 246 2 369 1 227 1 137 3 158 1 49 1 47 1 123 2 164 1 252 4 50 4 167 1 276 1 
81 1 111 1 237 1 338 3 317 2 341 1 200 1 6 1 319 1 178 1 151 1 115 1 205 1 94 2 19 2 44 1 156 1 121 1 47 1 186 1 164 1 331 1 125 1 252 1 50 1 78 1 80 3 169 2 196 1 378 1 216 1 58 2 
158 1 85 2 175 1 359 1 177 4 123 1 361 1 271 1 289 2 116 2 291 4 295 1 266 2 312 2 246 1 
254 1 329 1 235 1 
299 1 99 1 254 1 176 1 329 1 
254 1 329 1 235 1 
254 1 329 1 235 1 
79 1 254 1 329 1 
79 1 254 1 329 1 
79 1 254 1 329 1 
254 1 329 1 
165 1 129 1 
19 4 237 2 20 2 353 1 221 1 301 1 75 4 148 1 6 2 357 1 331 4 271 1 151 2 125 2 290 3 179 1 215 1 378 8 277 1 120 1 
20 2 221 1 301 1 148 1 75 3 331 3 357 1 271 1 290 2 179 1 55 1 215 1 378 6 120 1 
19 2 237 1 249 1 20 1 75 2 6 1 241 1 331 2 357 1 151 1 125 1 290 2 202 1 26 1 215 1 378 4 277 1 
138 1 20 1 75 3 360 2 241 1 331 4 357 1 202 1 290 2 26 1 215 1 56 1 335 1 378 7 277 1 
237 2 221 1 148 2 360 2 318 1 241 2 6 2 151 2 290 9 202 2 117 1 179 1 120 1 19 4 138 1 20 5 353 2 301 2 48 1 75 11 357 3 331 12 271 1 125 2 26 2 215 3 335 2 277 4 378 23 
360 1 378 1 331 1 
75 1 335 1 378 1 
19 2 95 1 237 1 249 1 20 2 75 3 6 1 241 1 331 3 357 1 151 1 125 1 202 1 290 3 26 1 215 1 378 6 277 1 
237 1 358 1 360 1 6 1 241 2 151 1 202 2 290 2 13 1 19 2 96 1 20 1 22 1 75 6 331 6 357 2 125 1 253 1 25 1 26 2 215 2 56 1 335 1 277 1 378 12 
290 2 179 1 20 1 301 1 215 1 148 1 75 3 277 1 378 6 331 3 357 1 
19 2 237 1 20 1 353 1 221 1 301 1 75 1 148 1 318 1 6 1 331 2 151 1 125 1 290 2 277 1 378 3 120 1 
19 2 237 1 2 1 20 3 301 2 148 2 75 5 6 1 331 5 357 2 151 1 125 1 290 5 179 1 25 1 215 2 277 2 378 10 
19 2 237 1 75 2 6 1 241 1 357 1 151 1 125 1 290 1 25 1 378 2 277 1 
19 2 237 1 20 1 75 2 6 1 241 1 331 2 357 1 151 1 125 1 290 2 202 1 25 1 26 1 215 1 378 4 277 1 
19 6 61 1 237 3 20 1 353 1 301 1 148 1 75 1 318 1 6 3 331 2 151 3 125 3 290 2 25 1 378 3 277 1 
0 1 61 1 237 5 221 1 148 3 360 4 318 1 6 5 241 3 151 5 202 3 290 12 179 2 120 1 182 1 19 10 371 1 249 1 138 1 20 7 353 2 301 3 75 16 331 18 357 5 271 1 125 5 25 1 26 3 215 5 56 1 335 3 378 34 277 5 
237 1 221 1 148 1 360 1 6 1 151 1 290 2 179 1 120 1 19 2 20 2 22 1 301 1 75 4 357 1 331 4 271 1 125 1 25 1 215 1 56 1 335 1 378 8 
237 2 221 1 148 1 360 2 6 2 241 1 151 2 202 1 290 3 179 1 120 1 19 4 249 1 138 1 20 2 22 1 301 1 75 6 331 5 357 2 271 1 125 2 25 1 215 1 56 1 335 1 378 11 277 1 
237 3 358 1 221 1 148 1 360 1 6 3 241 2 151 3 202 2 290 4 179 1 13 1 120 1 19 6 96 1 249 1 20 3 22 1 353 1 301 1 75 9 331 10 357 3 271 1 125 3 253 1 25 1 26 2 215 3 56 1 335 1 277 1 378 19 
237 3 358 1 221 1 148 1 360 1 6 3 241 2 151 3 202 2 290 5 179 1 13 1 120 1 19 6 96 1 249 1 20 3 353 1 22 1 301 1 75 10 331 7 357 3 271 1 125 3 253 1 25 1 26 1 215 2 56 1 335 1 277 2 378 17 
237 1 221 1 148 1 360 1 6 1 151 1 290 2 179 1 120 1 19 2 20 2 22 1 301 1 75 4 357 1 331 4 271 1 125 1 25 1 215 1 56 1 335 1 378 8 
237 1 358 1 360 1 6 1 241 2 151 1 202 2 290 2 13 1 19 2 96 1 20 1 22 1 75 6 331 6 357 2 125 1 253 1 25 1 26 2 215 2 56 1 335 1 277 1 378 12 
237 4 358 1 221 1 148 1 360 1 6 4 241 2 151 4 202 2 290 5 179 1 13 1 120 1 19 8 96 1 249 1 20 3 22 1 353 2 301 1 75 10 331 8 357 3 271 1 125 4 253 1 25 1 26 1 215 2 56 1 335 1 277 2 378 18 
237 4 61 1 358 1 360 1 6 4 241 3 151 4 202 3 290 6 13 1 19 8 96 1 20 3 22 1 353 2 75 9 331 7 357 3 125 4 253 1 25 1 26 2 215 2 56 1 335 1 277 3 378 16 
20 3 221 1 301 3 148 3 75 3 331 4 357 1 290 6 179 1 215 1 378 7 277 3 120 2 
237 4 61 1 358 1 221 1 148 1 360 1 6 4 241 2 151 4 202 2 290 4 179 1 13 1 120 1 19 8 96 1 20 3 22 1 353 2 301 1 75 10 331 8 357 3 271 1 125 4 253 1 25 1 26 1 215 2 56 1 335 1 277 1 378 18 
217 1 338 1 80 1 186 1 342 1 58 1 28 1 
217 1 338 1 186 1 342 1 7 1 37 1 80 1 127 1 171 1 370 1 28 1 58 1 
252 1 50 1 115 1 135 1 47 1 55 1 341 1 319 1 164 1 369 1 178 1 
338 2 47 1 186 1 200 1 341 1 319 1 362 1 164 1 178 1 115 1 50 1 252 1 78 1 80 2 169 1 196 1 94 1 58 1 
338 2 284 1 149 1 341 1 200 2 362 1 319 3 115 1 265 1 94 1 351 1 47 1 186 1 164 2 252 1 50 1 78 1 80 2 169 2 196 1 128 1 256 1 58 2 
338 2 284 1 149 1 341 1 200 2 362 1 319 3 115 2 265 1 41 1 94 1 157 1 351 1 47 1 186 1 164 2 252 2 50 2 78 1 80 2 169 2 128 1 256 1 58 2 
197 1 198 1 149 1 341 1 286 1 200 1 319 4 34 2 178 1 115 3 291 1 265 1 41 1 92 1 266 1 137 2 354 1 47 1 190 1 164 1 252 3 50 3 256 1 
137 2 173 1 197 1 47 1 198 1 149 1 200 1 286 1 341 1 190 1 34 2 319 4 164 1 178 1 115 3 50 3 252 3 291 1 265 1 41 1 266 1 256 1 
1 1 252 1 50 1 115 1 47 1 341 1 
1 1 218 1 112 1 72 1 21 1 47 3 328 1 200 1 341 2 189 1 305 1 86 1 319 3 356 1 164 2 35 1 178 2 115 6 50 7 252 7 172 1 
111 1 338 2 237 2 283 1 148 1 341 1 200 1 6 2 151 2 115 1 290 2 208 1 120 1 19 4 247 1 156 1 121 2 20 2 301 1 75 3 164 1 357 1 166 1 125 2 252 1 78 1 80 2 168 1 215 1 169 1 216 2 82 1 221 1 362 1 319 1 179 1 94 1 185 1 47 1 328 1 186 2 331 3 271 1 50 1 196 1 378 6 58 1 
173 1 337 1 197 1 175 1 198 1 359 2 286 2 34 3 319 2 178 1 116 1 115 1 291 1 295 2 224 1 180 1 266 1 69 1 246 2 137 3 158 2 190 1 50 1 252 1 276 1 109 1 380 1 60 1 
1 1 326 1 21 1 198 1 47 2 200 1 341 1 319 2 164 1 133 1 115 1 50 1 252 1 
47 1 328 1 341 1 319 1 164 1 178 1 115 4 50 4 252 4 53 1 135 1 41 1 369 1 
43 1 72 1 47 2 200 1 341 1 319 1 164 1 115 2 50 2 252 2 265 1 172 1 313 1 59 1 
252 1 50 1 115 1 352 1 103 1 47 1 349 1 341 1 303 1 178 1 
218 1 47 1 328 1 228 1 341 1 189 1 319 1 164 1 115 2 50 2 252 2 
218 1 47 2 328 1 341 2 319 3 86 1 356 1 164 2 178 1 115 4 50 5 252 5 53 1 135 1 265 1 369 1 
218 1 31 1 47 2 328 1 341 2 319 3 86 1 164 2 178 1 115 4 50 5 252 5 53 1 135 1 265 1 369 1 
338 2 157 1 47 1 186 1 200 1 341 1 319 1 362 1 164 1 178 1 115 1 50 1 252 1 78 1 80 2 169 1 94 1 58 1 
112 1 72 1 21 1 47 2 200 1 341 1 319 1 164 1 115 1 50 1 252 1 265 1 172 1 
77 1 203 1 147 1 27 1 186 1 
137 2 351 1 372 1 4 1 147 2 284 1 186 1 190 1 330 1 34 2 163 1 77 2 291 1 203 1 105 1 27 2 266 1 128 1 380 1 
338 1 9 1 77 1 203 1 80 1 27 1 207 1 93 1 58 1 
203 1 105 1 163 1 
365 1 55 1 373 1 15 1 
10 1 29 1 365 1 376 1 373 1 223 1 15 1 
214 1 29 1 139 1 
71 1 29 3 122 1 159 1 260 1 373 1 223 1 10 3 273 2 376 1 365 1 15 1 
10 2 29 2 126 1 184 1 365 1 376 1 373 1 223 1 15 1 
71 1 268 1 29 1 352 1 223 1 10 1 376 1 194 1 349 1 255 1 15 1 
10 1 71 1 29 1 365 1 376 1 223 1 15 1 
10 1 71 1 29 1 365 2 376 1 373 1 223 1 
71 1 29 2 223 2 10 2 365 1 376 2 67 1 119 1 15 1 17 1 
71 1 29 3 250 1 373 1 223 1 10 3 126 2 365 1 376 1 12 1 334 1 255 1 15 2 
71 1 268 1 29 2 352 1 373 1 303 1 223 1 87 1 10 2 102 1 126 1 365 1 376 1 349 2 15 1 
71 1 29 4 184 1 373 1 223 2 36 1 10 4 126 2 365 1 376 2 12 1 255 1 15 2 
10 1 71 1 29 1 365 1 376 1 373 1 223 1 15 1 
29 4 122 1 260 1 373 2 223 1 10 4 273 1 126 2 365 2 308 1 376 1 12 1 255 1 15 3 
71 1 29 2 83 1 282 1 373 1 223 1 10 2 232 1 126 1 365 1 376 1 15 1 
71 1 29 3 122 1 260 2 373 1 223 1 213 1 10 3 273 2 376 1 365 1 15 1 
292 1 84 1 118 2 15 2 
10 1 71 1 29 1 220 1 376 1 223 1 
10 2 71 1 29 2 126 1 365 1 376 1 373 1 334 1 223 1 15 1 
54 1 
10 1 71 1 29 1 365 1 376 1 373 1 223 1 15 1 
10 3 71 1 273 1 29 3 126 1 365 1 376 1 373 1 334 1 223 1 15 1 
308 1 12 1 255 1 15 1 
365 1 15 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
201 3 89 1 130 2 120 1 302 1 307 1 86 1 365 2 366 3 100 1 224 1 157 2 214 1 
201 9 49 1 120 1 302 4 231 1 328 1 81 1 307 1 86 1 150 2 365 2 366 9 31 1 214 6 172 1 35 1 89 3 130 5 265 2 220 2 154 1 270 1 179 1 299 2 100 1 224 2 157 2 140 1 
201 9 49 1 120 1 302 4 231 1 328 1 81 1 307 1 86 1 150 2 365 2 366 9 31 1 214 6 172 1 35 1 89 3 130 5 265 2 220 2 154 1 270 1 179 1 299 2 100 1 224 2 157 2 140 1 
201 10 49 1 120 1 302 5 231 1 328 1 81 1 307 1 86 1 150 2 365 2 366 10 31 1 214 7 172 1 35 1 89 4 130 6 265 2 220 2 154 1 270 1 179 1 299 2 100 1 224 2 157 2 140 1 
201 7 49 1 120 1 302 3 231 1 328 1 81 1 307 1 86 1 150 2 365 2 366 7 31 1 214 4 172 1 35 1 89 2 130 4 265 2 220 1 154 1 270 1 179 1 299 2 100 1 224 2 157 2 
201 4 89 1 130 3 120 1 302 2 265 1 220 2 307 1 81 1 86 1 150 1 365 1 270 1 366 4 299 1 157 1 140 1 214 3 
201 2 130 1 35 1 120 1 292 1 307 1 83 1 84 1 86 1 150 1 365 1 366 2 179 1 299 1 224 1 157 1 
201 9 120 1 302 4 161 1 231 1 307 1 81 1 86 1 150 1 365 2 366 9 214 7 110 1 89 3 130 5 265 1 220 2 154 1 270 1 100 1 299 1 224 1 157 2 140 1 
201 9 120 1 302 4 161 1 231 1 307 1 81 1 86 1 150 1 365 2 366 9 214 7 110 1 89 3 130 5 265 1 220 2 154 1 270 1 100 1 299 1 224 1 157 2 140 1 
111 1 312 1 91 1 207 1 282 1 59 1 51 1 184 1 148 1 284 1 64 1 65 1 380 1 288 1 
197 1 
111 1 210 1 69 1 197 1 312 2 136 1 41 1 207 2 
111 2 252 1 312 5 264 1 132 1 159 1 41 1 241 1 122 1 207 5 208 2 360 1 210 2 197 1 283 1 136 1 8 2 66 2 227 1 
197 1 41 1 348 1 
197 1 303 1 226 2 
148 1 284 2 65 2 64 2 333 1 91 2 282 2 184 2 
275 1 158 1 23 1 254 1 357 2 282 3 184 3 359 2 79 1 125 1 148 1 284 2 258 1 6 1 333 1 286 1 52 1 337 1 152 1 263 2 215 1 339 1 12 1 290 1 190 1 134 1 91 2 40 2 193 1 297 1 248 1 65 2 64 2 320 1 67 2 271 1 251 1 
148 1 284 1 65 1 64 1 380 1 91 1 282 1 59 1 184 1 288 1 
55 1 237 1 48 1 312 1 94 1 41 1 207 1 358 1 282 1 184 1 59 1 197 1 65 1 233 1 
48 1 312 2 91 1 94 1 41 1 207 2 358 1 282 1 184 1 59 1 197 1 284 1 64 1 65 1 233 1 
111 1 210 1 312 1 207 1 10 1 
111 1 210 1 197 1 312 2 136 1 326 1 41 1 207 2 
210 1 312 1 207 1 
289 1 91 1 191 1 282 2 184 2 284 1 65 2 64 1 333 2 
166 1 45 1 316 1 
12 1 290 1 190 1 23 1 357 1 282 1 193 1 184 1 79 1 155 1 320 1 333 1 52 1 67 1 263 1 251 1 
333 1 348 1 
12 1 290 1 121 1 190 1 23 1 91 1 357 1 193 1 282 2 184 2 79 1 45 1 149 1 64 1 65 1 320 1 52 1 67 1 263 1 251 1 
289 1 121 2 91 4 346 1 114 1 282 4 59 1 184 4 284 1 308 1 149 1 64 4 65 4 333 1 
298 1 65 2 64 2 380 1 91 2 282 2 59 1 184 2 
284 1 121 1 65 3 64 3 333 1 91 3 282 3 184 3 
65 1 64 1 380 1 91 1 282 1 59 1 184 1 
289 1 284 1 65 1 64 1 91 1 191 1 282 1 59 1 184 1 
48 1 121 1 23 1 254 1 357 1 207 1 358 1 282 4 184 4 359 2 79 1 125 1 148 1 284 2 258 1 149 1 333 1 233 1 286 1 52 1 152 1 263 1 339 1 12 1 289 1 290 1 312 1 190 1 134 1 91 3 94 1 40 1 193 1 243 1 195 1 59 1 297 1 248 1 65 3 64 3 320 1 271 1 67 1 251 1 
55 1 121 1 65 2 64 1 333 1 91 1 3 1 282 2 184 2 
289 1 21 1 48 1 312 1 121 2 91 3 94 1 207 1 358 1 282 3 59 1 184 3 195 1 284 1 197 1 149 1 64 3 65 3 233 1 
289 1 121 1 91 2 282 2 184 2 166 1 284 1 45 1 64 2 65 2 
12 1 290 1 190 1 23 1 357 1 282 1 193 1 184 1 79 1 320 1 333 1 52 1 67 1 263 1 251 1 
12 1 290 1 291 1 23 1 357 1 282 1 193 1 184 1 79 1 320 1 333 1 67 1 263 1 20 1 251 1 
254 1 25 1 359 2 166 2 125 1 258 1 6 2 336 1 286 2 171 1 339 1 238 1 313 1 134 1 133 1 113 1 40 4 316 2 221 1 297 1 45 2 249 1 225 1 301 1 
48 1 65 1 64 1 298 1 91 1 282 1 59 1 184 1 
318 1 245 1 345 1 
351 1 43 1 311 1 245 2 353 1 345 2 
245 1 345 1 
245 1 345 1 
351 1 43 1 
351 1 43 1 
351 1 43 1 
245 1 309 1 345 1 
245 1 309 1 345 1 
245 1 309 1 345 1 
245 1 37 1 345 1 
245 1 37 1 345 1 
245 1 37 1 345 1 
68 1 74 1 207 1 77 1 282 2 184 2 209 1 85 1 333 1 334 1 338 1 368 1 312 1 91 2 345 1 175 1 318 1 245 1 44 1 16 1 64 2 65 2 379 1 18 1 
311 1 312 2 345 2 230 2 74 2 207 2 76 1 77 1 4 1 194 1 147 1 197 1 245 2 16 2 167 1 379 3 334 2 273 1 368 2 
83 1 265 1 9 2 299 2 180 1 
265 1 150 1 299 1 
83 1 150 1 299 1 
83 1 265 2 9 1 299 3 180 1 181 1 
83 1 265 1 354 1 9 1 299 2 180 1 
183 1 281 2 25 1 24 1 162 1 303 1 207 5 208 1 210 1 85 1 8 1 232 1 336 1 171 1 111 4 312 5 189 2 132 3 113 1 241 1 41 1 58 1 96 1 44 1 197 2 136 1 116 2 66 1 18 1 226 3 199 1 227 2 
183 2 281 6 25 3 24 3 303 3 207 9 208 2 256 1 210 6 283 1 259 1 8 2 232 1 336 3 10 5 171 3 111 7 371 1 312 9 189 6 314 5 132 8 240 1 39 1 113 3 41 1 241 1 58 2 60 1 197 5 136 1 66 2 18 4 226 9 227 6 
183 1 162 1 24 1 25 1 281 2 303 2 207 3 208 1 283 1 8 1 336 1 111 2 171 1 312 3 189 2 132 3 113 1 41 1 58 1 96 1 197 3 116 1 66 1 18 1 226 4 227 2 
183 1 281 4 162 1 24 2 25 2 303 3 207 4 208 1 283 1 8 1 336 2 111 3 171 2 312 4 189 4 132 5 240 1 39 1 113 2 41 1 58 1 96 1 60 1 197 4 116 2 66 1 18 2 226 7 227 4 
188 1 
5 1 23 1 348 1 
23 1 287 1 
79 1 23 1 193 1 
23 1 87 1 
23 1 193 1 
79 1 5 2 23 3 118 1 28 1 193 1 
171 1 170 1 33 2 236 1 217 1 133 3 204 1 40 7 221 2 75 1 6 4 349 1 286 3 336 1 137 1 101 1 367 1 11 1 
277 1 280 1 24 3 25 3 254 1 75 1 359 2 125 1 261 1 6 16 286 15 336 4 367 2 11 1 369 3 170 2 171 4 236 1 33 3 217 2 90 1 38 4 134 1 133 10 266 1 113 3 293 1 40 31 221 5 297 1 349 1 137 5 101 2 323 1 
276 1 277 1 254 2 359 4 125 2 6 5 336 1 286 4 367 1 11 1 171 1 170 1 33 2 236 1 217 1 134 2 133 4 40 9 373 1 221 3 297 2 349 1 137 1 101 1 
171 1 170 1 33 2 236 1 217 1 133 3 40 7 221 2 75 1 6 4 349 1 286 3 336 1 137 1 101 1 367 1 11 1 
171 1 170 1 33 2 236 1 217 1 133 3 40 7 221 2 75 1 6 4 349 1 286 3 336 1 137 1 101 1 367 1 11 1 
12 1 202 1 201 1 23 1 357 1 42 2 193 1 29 1 78 2 196 1 257 1 285 1 320 1 365 1 250 1 366 1 224 2 157 1 67 1 263 1 32 2 235 1 251 1 
201 1 22 1 357 1 206 1 78 1 307 1 83 1 150 1 365 1 366 1 128 1 32 1 263 1 88 1 12 1 265 1 95 1 42 1 268 1 62 1 299 2 224 1 67 1 157 1 181 1 251 1 
201 2 120 1 22 1 357 1 206 1 78 1 307 1 83 1 86 1 150 1 365 1 366 2 128 1 32 1 263 1 214 1 88 1 12 1 130 1 265 1 42 1 177 1 268 1 62 1 299 2 224 1 67 1 157 1 181 1 251 1 
201 3 202 1 120 1 278 1 22 1 357 1 78 1 83 1 86 1 150 1 365 1 366 3 128 1 32 1 263 1 214 2 88 1 12 1 130 1 265 1 95 1 42 1 268 1 62 1 299 2 224 1 181 1 67 1 157 1 251 1 
201 2 120 1 278 1 357 1 78 1 83 1 86 1 150 1 366 2 128 1 32 1 263 1 214 2 12 1 130 1 265 1 95 1 42 1 268 1 62 1 299 2 224 1 67 1 181 1 251 1 
192 1 
228 1 48 1 145 1 282 1 184 1 285 1 8 1 233 1 235 1 12 1 55 1 237 1 241 1 58 1 193 1 59 1 197 2 63 1 65 1 156 2 66 1 300 1 67 2 251 1 350 1 23 1 303 2 357 2 27 2 207 5 208 1 358 1 165 1 210 6 306 1 362 1 127 2 212 2 263 2 34 2 312 5 219 1 132 2 372 2 94 1 41 1 375 1 317 4 136 3 320 2 381 1 382 1 138 2 226 2 227 2 
55 1 69 1 48 1 228 1 237 1 312 3 145 1 94 1 27 1 207 3 358 1 282 1 59 1 184 1 317 2 210 2 306 1 136 1 63 1 65 1 233 1 350 1 
228 1 48 1 69 1 145 1 207 3 358 1 282 1 184 1 210 1 306 1 233 1 55 1 237 1 312 3 94 1 41 1 59 1 317 3 197 1 136 1 65 1 63 1 138 1 350 1 
69 1 228 1 48 1 145 1 27 1 207 3 358 1 282 1 184 1 306 1 210 2 127 1 233 1 55 1 237 1 312 3 94 1 41 1 59 1 317 3 197 1 136 1 65 1 63 1 138 1 350 1 
48 1 228 1 145 1 282 1 184 1 8 1 233 1 55 1 237 1 241 1 59 1 14 1 244 1 61 1 197 5 63 1 65 1 66 1 156 2 350 1 69 1 303 2 27 4 207 5 358 1 208 1 123 1 210 7 306 1 127 4 212 2 168 1 34 2 312 5 132 1 94 1 372 2 41 5 375 1 317 6 136 3 382 1 138 4 227 1 
228 1 48 1 145 1 303 2 27 2 207 4 208 1 358 1 282 1 184 1 210 4 306 1 127 2 212 2 8 1 233 1 55 1 34 2 237 1 312 4 132 1 372 2 94 1 41 1 241 1 375 1 59 1 317 4 197 2 136 2 63 1 65 1 381 1 156 2 66 1 382 1 138 2 226 2 227 1 350 1 
228 1 48 1 145 1 303 2 27 2 207 4 123 1 208 1 358 1 282 1 184 1 210 4 306 1 127 2 212 2 8 1 233 1 55 1 34 2 237 1 312 4 132 1 372 2 94 1 41 1 241 1 375 1 59 1 14 1 317 4 61 1 197 1 136 2 65 1 63 1 156 2 382 1 66 1 138 2 227 1 350 1 
228 1 48 1 145 1 303 2 27 2 207 4 123 1 208 1 358 1 282 1 184 1 210 4 306 1 127 2 212 2 8 1 233 1 55 1 34 2 237 1 312 4 132 1 372 2 94 1 41 1 241 1 375 1 59 1 14 1 317 4 61 1 197 1 136 2 65 1 63 1 156 2 382 1 66 1 138 2 227 1 350 1 
228 1 48 1 145 1 27 2 207 4 123 1 208 1 358 1 282 1 184 1 210 4 306 1 30 1 127 2 212 2 8 1 233 1 109 2 55 1 237 1 312 4 343 1 132 1 372 2 94 1 41 1 241 1 135 2 375 1 59 1 296 1 317 4 197 1 136 2 65 1 63 1 66 1 138 2 226 2 227 1 350 1 
228 1 48 1 145 1 303 2 27 3 207 4 123 1 208 1 358 1 282 1 184 1 306 1 210 5 212 2 127 3 8 1 233 1 168 1 55 1 34 2 237 1 312 4 132 1 372 2 94 1 41 1 241 1 375 1 14 1 59 1 317 5 61 1 197 1 136 2 65 1 63 1 156 2 382 1 66 1 138 3 227 1 350 1 
228 1 48 1 145 1 303 2 27 3 207 4 123 1 208 1 358 1 282 1 184 1 306 1 210 5 212 2 127 3 8 1 233 1 168 1 55 1 34 2 237 1 312 4 132 1 372 2 94 1 41 1 241 1 375 1 14 1 59 1 317 5 61 1 197 1 136 2 65 1 63 1 156 2 382 1 66 1 138 3 227 1 350 1 
228 1 48 1 145 1 27 2 207 4 208 1 358 1 282 1 184 1 210 4 306 1 30 1 127 2 212 2 8 1 233 1 109 2 55 1 237 1 312 4 132 1 372 2 94 1 41 1 241 1 135 2 375 1 59 1 317 4 197 1 136 2 63 1 65 1 381 1 66 1 138 2 226 2 227 1 350 1 
70 1 121 1 158 1 23 3 254 2 357 7 327 1 305 1 282 1 184 1 359 4 125 2 285 1 258 2 332 1 6 1 286 1 263 8 337 2 234 1 235 1 12 2 339 2 216 1 91 1 134 2 95 1 40 2 193 2 177 1 297 2 65 1 64 1 320 2 248 1 249 1 322 1 67 8 251 2 
254 1 24 1 25 1 282 1 184 1 166 1 359 2 125 1 284 1 258 1 6 1 336 1 286 2 289 1 339 1 171 1 133 1 91 1 134 1 113 1 40 3 221 1 316 1 242 1 267 1 45 1 297 1 64 1 65 1 
254 1 166 1 359 2 125 1 258 1 6 3 333 2 336 1 286 3 11 1 339 1 170 1 171 1 236 1 33 1 134 1 133 2 40 6 221 2 316 1 348 1 45 1 297 1 249 1 349 1 101 1 
158 1 280 1 254 2 24 2 25 2 359 4 166 4 125 2 330 1 258 1 6 8 333 1 286 6 336 1 369 3 339 2 171 2 370 1 340 1 38 3 133 2 134 2 113 1 40 14 293 1 221 1 242 1 316 8 223 1 297 2 45 8 248 1 137 1 
121 1 158 1 23 1 254 1 357 1 282 2 184 2 79 1 166 1 359 2 125 1 258 1 149 1 262 1 6 1 333 1 52 1 286 1 263 1 187 1 12 1 339 1 290 1 190 1 134 1 91 1 40 2 242 1 193 1 297 1 155 1 320 1 65 1 64 1 248 1 17 1 67 1 251 1 
141 2 142 2 102 2 282 3 184 3 149 1 6 10 333 2 336 3 286 10 52 2 11 1 108 2 339 3 12 2 290 2 236 1 190 2 113 2 242 1 193 2 297 3 248 1 64 1 65 1 349 1 67 3 251 2 121 1 158 1 23 2 254 3 24 2 25 2 357 3 359 6 79 2 166 7 125 3 258 3 363 1 263 3 169 1 170 1 171 3 33 1 91 1 134 3 133 8 95 1 40 20 221 4 316 7 45 7 320 1 321 1 137 4 101 1 271 2 
339 1 171 1 238 1 133 1 134 1 254 1 25 1 40 2 316 1 166 1 359 2 125 1 45 1 297 1 258 1 6 2 249 1 137 1 
339 1 313 1 133 1 134 1 254 1 113 1 40 2 221 1 316 1 166 1 359 2 125 1 45 1 297 1 258 1 249 1 336 1 286 2 
25 1 24 1 254 1 359 2 166 2 125 1 258 1 6 2 336 1 286 2 171 1 339 1 134 1 133 2 113 1 40 4 316 2 221 1 297 1 45 2 249 1 137 1 
339 1 171 1 238 1 70 1 133 1 134 1 254 1 25 1 40 2 316 1 166 1 359 2 125 1 45 1 297 1 258 1 6 2 137 1 
339 1 70 1 313 1 133 1 134 1 254 1 113 1 40 2 221 1 316 1 166 1 359 2 125 1 45 1 297 1 258 1 336 1 286 2 
339 1 171 1 70 1 133 2 134 1 113 1 254 1 24 1 25 1 40 4 221 1 316 2 166 2 359 2 125 1 45 2 297 1 258 1 6 2 286 2 336 1 137 1 
339 1 171 1 133 2 134 1 113 1 254 1 24 1 25 1 40 4 221 1 316 2 166 2 359 2 125 1 45 2 297 1 258 1 6 2 286 2 336 1 137 1 
158 1 23 1 254 1 357 1 282 1 184 1 79 1 359 2 125 1 258 1 6 1 333 1 52 1 286 1 263 1 12 1 339 1 290 1 190 1 134 1 40 2 193 1 297 1 320 1 248 1 271 1 67 1 251 1 
158 1 23 1 254 1 357 1 304 1 282 1 184 1 79 1 359 2 125 1 258 1 6 1 333 1 286 1 263 1 12 1 339 1 290 1 291 1 134 1 40 2 193 1 297 1 320 1 248 1 67 1 251 1 20 1 
339 1 171 1 133 2 134 1 113 1 254 1 24 1 25 1 40 4 221 1 316 2 242 1 166 2 359 2 125 1 45 2 297 1 258 1 6 2 286 2 336 1 137 1 
23 1 25 1 254 1 24 1 357 1 282 1 184 1 166 2 79 1 359 2 125 1 258 1 6 2 286 2 336 1 52 1 263 1 108 1 171 1 12 1 339 1 290 1 190 1 133 2 134 1 113 1 40 4 221 1 316 2 193 1 177 1 45 2 297 1 137 1 271 1 67 1 251 1 
50 1 254 1 24 1 25 1 282 1 184 1 359 2 166 1 125 1 284 1 258 1 6 2 286 1 336 1 289 1 339 1 171 1 133 1 91 1 134 1 113 1 40 3 242 1 316 1 297 1 45 1 64 1 65 1 137 1 
276 1 103 1 71 2 280 1 356 2 254 2 24 3 25 3 2 1 164 1 359 4 125 2 6 9 286 10 336 3 369 1 171 3 341 1 174 1 38 2 344 1 134 2 133 6 113 3 40 19 293 1 221 3 378 1 297 2 137 3 
276 1 277 2 103 2 71 1 280 2 356 4 254 3 24 3 25 3 2 1 164 1 104 1 359 6 125 3 185 1 6 14 336 2 286 12 369 2 171 3 341 2 173 1 38 2 133 4 134 3 57 1 113 2 40 26 221 2 378 1 297 3 269 1 246 1 137 2 
276 1 277 1 103 1 280 3 2 1 104 1 6 20 185 1 336 5 286 21 11 1 236 1 341 2 113 4 57 1 293 1 297 3 246 1 349 1 71 1 25 4 24 4 254 3 356 4 26 1 164 1 359 6 125 3 369 3 171 5 170 1 33 1 173 1 174 1 38 4 133 8 134 3 40 41 221 4 378 1 269 1 137 4 101 1 
276 1 277 2 103 1 71 1 280 3 356 4 254 4 24 4 25 4 26 1 2 1 164 1 104 1 359 8 125 4 185 1 6 20 286 18 336 4 11 1 369 3 170 1 171 5 33 1 236 1 173 1 341 2 174 1 38 4 134 4 133 7 57 1 113 3 40 38 293 1 221 4 378 1 269 1 297 4 246 1 349 1 137 3 101 1 
276 1 277 1 103 1 71 1 280 2 254 2 356 4 24 5 25 5 2 1 164 1 104 1 359 4 125 2 185 1 6 22 336 6 286 20 11 1 369 3 170 1 171 6 33 1 236 1 370 1 173 1 341 1 38 3 134 2 133 10 57 1 113 5 40 42 293 1 221 5 378 1 297 2 269 1 246 1 349 1 137 5 101 1 
311 1 245 1 16 1 167 1 7 1 345 1 334 1 74 1 273 1 368 1 
318 1 68 1 
245 1 16 1 260 1 1 1 46 1 345 1 334 1 74 1 368 1 
186 1 309 1 
353 1 329 1 37 1 
311 1 312 1 345 1 230 1 207 1 74 1 76 1 77 1 4 1 194 1 197 1 245 1 16 1 167 1 379 2 334 1 273 1 368 1 
311 1 312 1 345 1 230 1 207 1 74 1 76 1 77 1 4 1 194 1 197 1 245 1 16 1 167 1 379 2 334 1 273 1 368 1 
311 1 312 1 345 1 230 1 207 1 74 1 76 1 77 1 4 1 194 1 197 1 245 1 16 1 167 1 379 2 334 1 273 1 368 1 
353 1 186 1 309 1 
353 1 186 1 309 1 
329 1 37 1 
353 1 329 1 37 1 
209 1 175 1 
68 1 230 1 207 1 74 1 282 2 184 2 209 1 85 1 333 1 334 1 338 1 368 1 112 1 111 1 312 1 91 2 345 1 175 1 194 1 318 1 245 1 44 1 16 1 64 2 65 2 379 1 18 1 
253 1 229 1 158 1 23 1 254 1 357 2 327 1 282 2 184 2 359 2 105 1 125 1 258 1 332 1 6 1 286 1 263 2 337 2 12 1 339 1 134 1 40 2 242 1 193 1 297 1 65 2 248 1 99 1 98 1 67 2 251 1 
12 1 23 1 160 1 357 1 193 1 78 1 211 1 285 1 320 1 250 1 67 1 263 1 235 1 251 1 
88 1 12 1 265 1 95 1 357 1 78 1 268 1 83 1 211 1 331 1 150 1 364 1 128 1 299 2 181 1 67 1 263 1 251 1 
12 1 88 1 265 1 95 1 357 2 78 1 177 1 268 1 83 1 211 1 331 1 150 1 364 1 128 1 299 2 181 1 67 2 263 2 251 1 
88 1 12 1 265 1 95 1 357 1 78 1 268 1 83 1 150 1 117 1 364 1 128 1 299 2 181 1 67 1 263 1 251 1 
82 1 
264 1 132 1 241 1 41 1 122 1 208 1 197 1 8 1 66 1 227 1 
171 2 102 1 279 2 189 5 132 5 24 2 25 2 281 5 113 2 303 5 197 5 97 1 336 2 226 10 227 5 
210 1 197 1 312 1 136 1 41 1 207 1 
23 1 357 4 207 3 208 2 210 4 283 1 362 1 285 1 8 2 263 4 107 2 235 1 12 1 312 3 219 2 132 2 92 1 241 1 347 1 58 2 193 1 136 2 320 2 300 1 66 2 67 4 227 2 324 1 251 1 
197 1 264 1 132 1 41 1 122 1 227 1 348 1 
303 1 207 1 208 1 210 1 8 1 34 1 312 1 132 1 241 1 41 1 197 2 136 1 382 1 66 1 156 1 226 1 227 1 
102 2 279 2 281 6 146 1 5 2 8 4 336 2 106 2 107 1 287 3 12 3 239 2 189 6 113 2 347 1 241 4 58 2 193 3 197 8 118 1 66 4 67 3 251 4 352 2 23 10 205 1 24 2 25 2 357 3 303 6 122 1 207 5 208 4 79 3 210 5 87 2 263 3 171 2 312 5 264 1 219 1 132 9 94 2 176 2 41 2 374 1 177 1 136 3 97 2 320 1 47 2 226 12 272 2 227 8 
325 1 279 2 280 1 281 4 24 2 25 2 303 2 207 1 208 2 104 1 210 1 8 2 151 1 336 2 369 1 171 2 312 1 173 1 219 1 189 4 38 1 132 8 57 1 113 2 241 2 41 2 58 1 197 4 269 1 97 1 136 1 246 1 66 2 226 4 227 5 
279 2 207 1 208 1 282 1 184 1 51 1 148 1 284 1 8 1 336 1 288 1 170 1 171 2 312 1 36 1 132 2 91 1 241 1 59 1 14 1 97 1 64 1 65 1 380 1 66 1 349 1 101 1 227 2 
23 1 254 1 357 1 282 3 184 3 359 2 79 1 125 1 148 1 284 2 258 1 333 1 286 1 52 1 263 1 152 1 12 1 339 1 290 1 190 1 134 1 91 2 40 1 193 1 297 1 248 1 320 1 65 2 64 2 67 1 271 1 251 1 
33 1 189 2 219 1 132 1 281 2 303 2 241 1 41 2 58 1 208 1 197 4 8 1 66 1 226 4 227 2 
213 1 175 1 74 1 273 1 368 1 
13 1 74 1 368 1 
13 1 74 1 368 1 
13 1 74 1 368 1 
74 1 115 1 368 1 
74 1 115 1 368 1 
74 1 115 1 368 1 
74 1 368 1 
245 1 345 1 
276 1 170 2 171 2 36 1 134 1 133 5 254 1 40 10 221 3 359 2 125 1 297 1 6 5 349 1 137 2 286 5 336 2 101 2 
276 1 171 1 134 1 133 1 254 1 25 1 40 2 359 2 125 1 297 1 6 2 137 1 
276 1 171 1 133 2 134 1 113 1 254 1 24 1 25 1 40 4 221 1 359 2 125 1 297 1 6 2 286 2 336 1 137 1 
276 1 170 1 277 1 174 1 134 3 133 2 254 3 40 3 221 1 295 1 359 6 125 3 297 3 6 1 286 2 137 1 101 1 
276 1 277 2 280 1 254 5 24 3 25 3 359 10 125 5 261 1 6 16 286 18 336 5 11 1 369 3 170 3 171 5 33 1 236 1 90 1 174 1 38 4 93 1 134 5 133 12 113 3 40 34 293 1 221 7 295 1 297 5 349 2 137 5 101 3 323 1 
276 1 280 1 254 1 359 2 125 1 6 4 336 1 286 4 369 1 11 1 171 1 170 1 33 1 236 1 38 1 134 1 133 2 40 8 221 2 269 1 297 1 349 1 101 1 
276 1 280 1 254 2 24 1 25 1 359 4 125 2 6 6 336 1 286 5 11 1 369 1 170 1 171 2 33 1 236 1 38 2 134 2 93 1 133 3 40 11 293 1 221 2 269 1 297 2 349 1 137 1 101 1 
276 1 277 1 280 1 254 3 24 2 25 2 104 1 359 6 125 3 6 9 286 10 336 3 11 1 369 1 170 1 171 3 33 1 236 1 173 1 38 1 93 1 134 3 133 4 57 1 113 2 40 19 221 3 269 1 297 3 246 1 349 1 137 1 101 1 
276 1 277 1 280 1 254 3 24 2 25 2 104 1 359 6 125 3 6 10 286 7 336 2 11 1 369 1 170 1 171 3 33 1 236 1 173 1 38 1 93 1 134 3 133 5 113 1 57 1 40 17 221 3 269 1 297 3 246 1 349 1 137 2 101 1 
276 1 280 1 254 1 359 2 125 1 6 4 336 1 286 4 369 1 11 1 171 1 170 1 33 1 236 1 38 1 134 1 133 2 40 8 221 2 269 1 297 1 349 1 101 1 
276 1 280 1 254 1 24 2 25 2 104 1 359 2 125 1 6 6 286 6 336 2 369 1 171 2 173 1 38 1 134 1 133 2 113 2 57 1 40 12 221 1 269 1 297 1 246 1 137 1 
276 1 277 2 280 1 254 4 24 2 25 2 104 1 359 8 125 4 6 10 286 8 336 2 11 1 369 1 170 1 171 3 33 1 236 1 173 1 38 1 93 1 134 4 133 5 57 1 113 1 40 18 221 3 269 1 297 4 246 1 349 1 137 2 101 1 
276 1 277 2 280 1 254 4 24 3 25 3 104 1 359 8 125 4 6 9 286 7 336 2 369 1 171 3 173 1 174 1 38 1 134 4 133 6 57 1 113 2 40 16 221 3 269 1 297 4 246 1 137 3 
170 3 171 1 236 1 133 6 40 7 221 3 6 3 349 1 286 4 336 1 137 3 101 3 11 2 
276 1 277 2 280 1 254 4 24 2 25 2 104 1 359 8 125 4 6 10 286 8 336 2 11 1 369 1 170 1 171 3 33 1 236 1 173 1 174 1 38 1 134 4 133 4 57 1 113 1 40 18 221 3 269 1 297 4 246 1 349 1 137 1 101 1 
171 1 170 1 277 1 33 1 236 1 133 3 134 2 254 2 40 8 221 2 359 4 125 2 297 2 6 4 349 1 336 1 286 4 137 1 101 1 11 1 
170 1 171 1 33 1 236 1 133 2 40 6 221 2 348 1 6 3 349 1 286 3 336 1 101 1 11 1 
171 1 133 2 93 1 134 1 113 1 254 1 24 1 25 1 40 4 221 1 359 2 125 1 297 1 6 2 286 2 336 1 137 1 
38 1 6 1 280 1 40 2 286 1 369 1 
277 1 25 2 24 2 254 1 359 2 125 1 330 1 6 13 336 5 286 12 11 1 369 2 170 2 171 5 33 1 370 1 236 1 36 1 38 2 133 8 134 1 113 2 293 1 40 25 221 4 297 1 349 2 137 4 101 2 
38 1 40 1 286 1 
6 1 40 1 369 1 
171 1 102 1 134 1 93 1 133 3 254 1 24 1 25 1 113 1 40 6 221 2 359 2 125 1 297 1 6 3 286 3 137 1 336 1 
276 1 280 1 254 1 24 2 25 2 104 1 359 2 125 1 6 6 286 6 336 2 369 1 171 2 173 1 38 1 134 1 133 2 113 2 57 1 40 12 221 1 269 1 297 1 246 1 137 1 
171 1 170 1 133 2 40 6 221 1 6 3 349 1 336 1 286 3 137 1 101 1 
170 1 277 1 236 1 133 2 134 1 254 1 40 3 221 1 295 1 359 2 125 1 297 1 6 1 137 1 286 2 101 1 11 1 
55 1 65 1 333 1 335 1 3 1 282 1 184 1 
182 1 55 1 294 1 222 1 3 1 282 1 184 1 361 1 198 1 65 1 333 1 335 1 
12 1 203 1 23 1 357 4 193 1 177 1 285 1 320 1 67 4 263 4 235 1 119 1 251 1 
54 1 12 1 143 1 355 1 23 1 73 1 357 2 193 1 79 1 67 2 263 2 107 1 169 1 251 2 
12 1 83 1 150 1 320 1 128 1 299 1 357 1 263 1 67 1 251 1 
12 1 229 1 23 1 95 1 357 2 327 1 263 2 67 2 193 1 251 1 177 1 
12 2 23 3 357 4 327 1 193 2 177 1 285 1 320 1 67 5 263 5 322 1 107 1 235 1 234 1 119 1 251 2 
12 2 23 3 357 4 327 1 193 2 177 1 285 1 320 1 67 5 263 5 107 1 235 1 234 1 200 1 119 1 251 2 
12 1 285 1 320 1 23 1 357 1 263 1 67 1 235 1 193 1 251 1 348 1 
12 1 290 1 121 1 190 1 23 1 91 1 357 1 193 1 282 2 184 2 79 1 64 1 65 1 320 1 333 1 67 1 263 1 251 1 
12 1 290 1 48 1 121 1 190 1 23 3 91 1 357 1 193 2 282 2 59 1 184 2 79 2 64 2 65 2 333 1 87 1 233 1 106 1 67 1 263 1 107 1 251 1 
12 1 290 1 48 1 203 1 121 1 291 1 23 3 91 1 357 2 193 2 282 2 59 1 184 2 79 2 64 2 65 2 333 1 87 1 233 1 106 1 67 2 263 2 107 1 251 1 
12 1 203 1 312 2 23 4 94 1 357 3 41 1 207 2 193 1 124 1 79 1 210 1 197 1 5 1 320 1 87 1 106 1 67 3 263 3 107 1 287 1 274 1 251 1 
12 1 203 1 312 2 239 1 23 4 94 1 357 3 41 1 207 2 193 1 79 1 210 1 197 1 5 1 320 1 87 1 106 1 67 3 263 3 107 1 287 1 251 1 
12 1 216 1 357 1 263 1 67 1 251 1 
54 1 12 2 216 1 23 3 73 1 95 1 357 6 327 1 305 1 193 2 177 1 79 1 319 1 320 2 118 1 337 1 322 1 67 7 263 7 234 1 251 3 
141 1 282 2 184 2 6 3 333 2 52 1 336 1 286 3 108 1 11 1 339 2 12 1 290 1 236 1 190 1 242 1 193 1 297 2 64 1 65 1 349 1 67 1 251 1 253 1 121 1 23 1 254 2 357 1 166 1 359 4 79 1 125 2 258 2 263 1 170 1 171 1 33 1 91 1 134 2 133 2 40 6 221 2 316 1 177 1 45 1 271 1 101 1 
352 1 23 2 357 1 122 1 207 3 208 2 210 2 5 1 8 2 263 1 287 1 111 1 312 3 239 1 264 1 132 1 94 1 176 1 41 1 241 2 347 1 197 1 136 1 320 1 66 2 47 1 67 1 227 1 
12 1 216 1 23 2 357 2 374 1 193 1 177 1 79 1 5 1 118 1 67 2 263 2 251 2 
12 1 290 1 121 1 291 1 23 1 91 1 357 1 193 1 282 2 184 2 79 1 64 1 65 1 320 1 333 1 67 1 263 1 251 1 
54 1 12 1 23 1 73 1 357 1 193 1 79 1 319 1 118 1 67 1 263 1 107 1 251 2 
218 1 178 1 247 1 333 1 139 1 
111 1 48 1 218 1 312 2 342 1 0 1 94 1 41 1 207 2 358 1 59 1 195 1 197 1 126 1 247 2 178 2 333 1 233 1 139 2 
105 1 218 1 65 1 178 1 247 1 99 1 98 1 282 1 184 1 
218 1 126 1 0 1 
201 1 130 1 120 1 307 1 86 1 365 1 366 1 157 1 
201 4 35 1 129 1 89 1 130 3 120 2 56 1 302 1 163 1 86 2 365 1 366 4 157 1 214 2 
53 1 201 2 130 1 120 1 72 1 307 1 86 1 365 1 366 2 157 1 110 1 214 1 
201 3 130 1 35 2 120 1 56 1 163 2 307 1 86 1 365 1 366 3 157 1 153 1 
376 2 131 1 130 2 315 1 
201 1 307 1 365 1 366 1 157 1 19 1 
154 1 201 2 130 1 120 1 307 1 86 1 365 1 366 2 157 1 214 1 
144 1 
201 1 130 1 120 1 307 1 86 1 365 1 366 1 157 1 
130 1 120 1 86 1 348 1 
201 1 130 1 120 1 86 1 365 1 366 1 157 1 
366 1 224 1 42 1 
201 3 130 1 35 2 120 1 56 1 163 1 80 1 307 1 86 1 365 1 366 3 157 1 
201 2 130 1 120 1 86 1 365 1 366 2 220 1 157 1 214 1 
201 1 130 1 302 1 265 1 307 1 81 1 150 1 365 1 366 1 299 1 157 1 
201 1 130 1 307 1 86 1 365 1 366 1 157 1 
201 1 120 1 307 1 86 2 365 1 366 1 157 1 
201 2 130 1 255 1 377 1 307 1 86 1 365 2 366 2 310 1 157 2 
201 3 89 1 130 2 120 1 302 1 231 1 154 1 307 1 86 1 365 1 366 3 157 1 214 2 
201 2 130 1 120 1 265 1 307 1 83 1 15 1 86 1 150 1 365 1 366 2 299 2 157 1 181 1 214 1 
201 4 89 1 130 2 120 1 302 1 220 1 307 1 86 1 365 2 366 4 157 2 140 1 214 2 
154 1 201 3 130 1 35 1 120 1 307 1 86 1 365 1 366 3 157 1 214 1 
129 1 130 1 89 1 302 1 
130 1 86 1 

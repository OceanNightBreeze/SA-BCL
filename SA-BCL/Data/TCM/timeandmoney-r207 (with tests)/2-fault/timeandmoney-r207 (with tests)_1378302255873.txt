#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 4 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
13 2 254 1 44 2 117 1 37 1 144 1 242 1 39 1 99 3 243 1 308 3 28 2 150 1 
44 2 234 1 209 1 212 2 247 1 117 2 235 1 214 1 144 3 9 1 99 9 308 9 28 2 51 1 150 1 220 2 13 5 254 6 365 1 319 2 37 4 242 1 39 1 243 1 110 1 41 1 187 1 206 2 
44 2 234 1 209 1 212 2 247 1 117 2 235 1 214 1 144 3 9 1 99 9 308 9 28 2 51 1 150 1 220 2 13 5 254 6 365 1 319 2 37 4 242 1 39 1 243 1 110 1 41 1 187 1 206 2 
44 2 234 1 209 1 212 2 247 1 117 2 235 1 214 1 144 4 9 1 99 10 308 10 28 2 51 1 150 1 220 2 13 6 254 7 365 1 319 2 37 5 242 1 39 1 243 1 110 1 41 1 187 1 206 2 
44 2 234 1 209 1 212 2 247 1 117 2 235 1 214 1 144 2 99 7 308 7 28 2 51 1 150 1 220 2 13 4 254 4 365 1 319 2 37 3 242 1 39 1 243 1 110 1 41 1 187 1 206 1 
13 3 254 3 44 1 365 1 212 1 319 1 37 2 144 1 9 1 39 1 99 4 243 1 308 4 28 1 51 1 150 1 220 1 206 2 
13 1 44 1 212 1 273 1 235 1 117 1 319 1 191 1 39 1 99 2 243 1 308 2 110 1 28 1 150 1 237 1 
44 2 209 1 212 1 117 1 144 3 9 1 99 9 308 9 28 2 51 1 150 1 220 1 13 5 254 7 365 1 339 1 319 1 201 1 37 4 242 1 39 1 243 1 187 1 206 2 
44 2 209 1 212 1 117 1 144 3 9 1 99 9 308 9 28 2 51 1 150 1 220 1 13 5 254 7 365 1 339 1 319 1 201 1 37 4 242 1 39 1 243 1 187 1 206 2 
347 1 363 1 225 1 300 1 65 1 16 1 128 1 202 1 303 1 180 1 181 1 185 1 297 1 135 1 
285 1 
180 1 225 2 199 1 100 1 297 2 285 1 368 1 238 1 
315 1 351 1 245 2 225 5 91 1 368 1 143 1 73 1 179 1 180 2 169 1 307 2 100 1 297 5 285 1 149 1 310 1 377 2 238 2 
285 1 368 1 4 1 
198 2 335 1 285 1 
347 2 303 2 363 2 156 1 300 1 65 2 16 2 202 2 
348 1 347 3 136 1 300 1 2 1 189 1 211 2 65 2 164 1 213 2 70 1 276 1 303 2 71 1 168 2 330 2 280 1 24 1 172 2 78 1 79 1 104 1 363 2 151 1 317 1 126 1 16 3 55 1 341 1 202 2 262 1 229 1 156 1 87 1 132 1 133 1 134 1 
347 1 303 1 363 1 181 1 300 1 65 1 16 1 128 1 135 1 202 1 
347 1 123 1 269 1 225 1 141 1 368 1 16 1 202 1 128 1 182 1 263 1 297 1 285 1 29 1 
347 1 123 1 363 1 225 2 65 1 141 1 368 1 16 1 202 1 128 1 303 1 182 1 263 1 297 2 285 1 
180 1 225 1 354 1 297 1 238 1 
61 1 180 1 225 2 100 1 297 2 285 1 368 1 238 1 
225 1 297 1 238 1 
347 2 316 1 363 1 65 1 16 2 202 2 303 1 217 1 156 2 
167 1 158 1 88 1 
347 1 136 1 317 1 189 1 16 1 213 1 55 1 276 1 46 1 168 1 229 1 156 1 24 1 87 1 172 1 133 1 
156 1 4 1 
347 2 136 1 317 1 14 1 189 1 65 1 16 2 213 1 55 1 202 1 276 1 303 1 167 1 168 1 229 1 24 1 87 1 172 1 133 1 325 1 
42 1 347 5 363 1 14 2 222 1 65 4 16 5 202 5 303 4 217 1 156 1 77 1 325 1 29 1 
347 2 303 2 258 1 65 2 16 2 128 1 135 1 202 2 
347 3 303 3 363 1 14 1 156 1 65 3 16 3 202 3 
347 1 303 1 65 1 16 1 128 1 135 1 202 1 
347 1 303 1 316 1 363 1 217 1 65 1 16 1 128 1 202 1 
348 1 347 4 136 1 2 1 300 1 189 1 211 1 65 3 164 1 141 1 213 1 70 1 276 1 303 3 168 1 217 1 330 2 280 1 24 1 172 1 78 1 312 1 123 1 104 1 363 2 317 1 14 1 151 1 126 1 225 1 259 1 16 4 55 1 202 3 128 1 229 1 156 1 87 1 182 1 263 1 133 1 297 1 325 1 134 1 
347 2 303 1 14 1 156 1 77 1 65 1 16 2 29 1 202 2 
347 3 123 1 114 1 363 1 14 2 225 1 65 3 259 1 141 1 16 3 128 1 202 3 303 3 217 1 182 1 263 1 297 1 285 1 325 1 
347 2 363 1 14 1 65 2 16 2 202 2 303 2 167 1 217 1 158 1 
347 1 136 1 317 1 189 1 16 1 213 1 55 1 276 1 168 1 229 1 156 1 87 1 24 1 172 1 133 1 
347 1 136 1 317 1 16 1 289 1 213 1 55 1 276 1 86 1 168 1 156 1 87 1 24 1 172 1 133 1 
348 1 211 4 164 1 165 1 70 2 167 2 23 1 330 2 280 1 148 1 78 1 174 1 124 1 104 1 126 1 15 1 287 1 366 1 341 2 230 1 88 2 158 2 376 1 378 1 
347 1 303 1 263 1 258 1 65 1 16 1 128 1 202 1 
253 1 306 1 67 1 
113 1 253 2 299 1 372 1 306 2 93 1 
253 1 306 1 
253 1 306 1 
372 1 93 1 
372 1 93 1 
372 1 93 1 
253 1 306 1 92 1 
253 1 306 1 92 1 
253 1 306 1 92 1 
253 1 357 1 306 1 
253 1 357 1 306 1 
253 1 357 1 306 1 
347 2 253 1 364 1 233 1 225 1 65 2 67 1 16 2 340 1 290 1 56 1 202 2 303 2 250 1 320 1 156 1 282 1 306 1 121 1 284 1 297 1 27 1 361 1 244 1 
113 1 253 2 90 1 364 2 225 2 84 1 290 2 56 2 342 1 72 1 320 2 279 1 281 1 306 2 284 3 186 2 297 2 285 1 27 1 
371 1 359 2 212 2 237 1 220 1 
212 1 319 1 220 1 
212 1 319 1 237 1 
371 1 359 1 309 1 212 3 237 1 220 2 
371 1 223 1 359 1 212 2 237 1 220 1 
207 2 245 1 138 1 73 3 147 2 282 1 307 1 10 2 100 1 148 1 335 1 310 1 285 2 81 1 238 1 124 1 198 3 15 1 225 5 368 1 340 1 228 1 179 2 180 4 184 1 40 1 157 1 230 1 297 5 377 1 267 1 244 1 
351 1 207 6 245 2 138 2 354 5 68 1 215 1 73 8 332 1 307 2 10 6 100 1 148 3 335 3 285 5 310 1 81 3 238 6 175 1 124 3 198 9 338 1 15 3 225 9 368 1 291 1 179 6 296 5 180 7 184 2 157 1 230 3 297 9 377 2 244 4 
351 1 207 2 245 1 138 1 73 3 147 1 307 1 10 2 148 1 335 2 285 3 81 1 124 1 198 4 225 3 15 1 368 1 228 1 180 2 179 2 184 1 297 3 230 1 377 1 267 1 244 1 
207 4 351 1 245 1 138 1 68 1 215 1 73 5 147 2 307 1 10 4 148 2 335 3 285 4 81 2 175 1 124 2 198 7 225 4 15 2 368 1 228 1 180 3 179 4 184 1 297 4 230 2 377 1 267 1 244 2 
130 1 
362 1 24 1 4 1 
350 1 24 1 
276 1 24 1 133 1 
24 1 127 1 
24 1 133 1 
276 1 178 1 362 2 24 3 133 1 45 1 
221 1 33 1 366 2 211 7 163 2 177 1 35 1 70 3 341 4 23 3 305 1 171 1 148 1 230 1 334 1 18 1 112 1 205 1 
352 1 211 31 164 1 163 3 70 15 23 10 305 1 330 2 192 1 171 2 334 1 148 4 78 1 81 3 30 1 221 2 124 3 104 1 83 3 126 1 32 1 15 3 33 5 366 5 177 1 288 1 105 1 341 16 203 4 230 4 18 2 89 1 112 2 205 1 
116 1 211 9 164 2 163 2 70 4 23 4 330 4 305 1 171 1 148 1 78 2 221 1 104 2 126 2 366 3 33 1 177 1 293 1 341 5 230 1 89 1 18 1 112 1 205 1 
221 1 33 1 366 2 211 7 163 2 177 1 70 3 341 4 23 3 305 1 171 1 148 1 230 1 334 1 18 1 112 1 205 1 
221 1 33 1 366 2 211 7 163 2 177 1 70 3 341 4 23 3 305 1 171 1 148 1 230 1 334 1 18 1 112 1 205 1 
232 2 136 1 62 2 44 1 117 2 213 1 276 1 355 2 168 1 24 1 99 1 308 1 172 1 101 1 360 1 102 1 28 1 286 1 239 1 317 1 257 1 318 1 260 1 57 1 87 2 133 1 345 1 346 1 159 1 
197 1 12 1 232 1 62 1 44 1 317 1 212 2 117 1 213 1 319 1 355 1 168 1 76 1 98 1 87 1 39 1 99 1 308 1 309 1 172 1 193 1 264 1 28 1 237 1 266 1 220 1 
232 1 62 1 44 1 212 2 117 1 213 1 96 1 355 1 168 1 76 1 99 2 308 2 172 1 309 1 193 1 28 1 150 1 237 1 220 1 12 1 197 1 13 1 254 1 317 1 319 1 87 1 39 1 243 1 264 1 266 1 
232 1 62 1 44 1 212 2 117 1 213 1 355 1 168 1 98 1 76 1 99 3 308 3 309 1 172 1 193 1 28 1 150 1 311 1 237 1 220 1 197 1 13 1 254 2 317 1 319 1 87 1 243 1 264 1 266 1 346 1 
232 1 62 1 212 2 117 1 213 1 355 1 168 1 98 1 76 1 99 2 308 2 172 1 309 1 150 1 311 1 237 1 220 1 197 1 13 1 254 2 317 1 319 1 87 1 243 1 264 1 
137 1 
136 2 245 1 213 2 275 1 276 1 168 2 73 1 24 1 307 1 100 1 172 2 49 1 360 1 236 1 310 1 238 2 239 1 317 1 225 2 318 1 260 1 179 1 87 2 184 1 133 1 297 2 345 1 377 1 
347 1 269 1 270 2 141 1 119 1 304 1 120 1 100 1 29 1 238 2 123 1 153 1 225 3 199 1 16 1 106 1 202 1 128 1 182 1 263 1 297 3 374 1 
347 1 20 1 269 1 270 3 141 1 119 1 304 1 120 1 100 1 285 1 29 1 238 1 123 1 153 1 225 3 199 1 16 1 368 1 202 1 128 1 182 1 263 1 297 3 374 1 
347 1 20 1 269 1 270 3 141 1 119 1 304 1 120 1 100 1 285 1 29 1 238 2 123 1 153 1 225 3 199 1 16 1 34 1 368 1 106 1 202 1 128 1 182 1 263 1 297 3 374 1 
268 1 0 1 269 1 270 6 141 1 100 3 335 2 285 5 336 2 238 7 53 2 153 1 199 1 16 1 106 4 202 1 107 2 297 5 347 1 20 4 245 1 21 1 22 1 73 1 119 1 304 1 120 1 307 1 219 1 310 1 29 1 123 1 225 5 34 4 368 5 128 1 36 1 179 1 261 2 182 1 131 1 263 1 374 1 377 1 
268 1 269 1 270 4 141 1 328 1 100 2 335 2 336 2 285 2 238 4 53 2 198 2 153 1 16 1 106 2 202 1 107 2 297 4 347 1 20 2 245 1 73 1 119 1 304 1 307 1 120 1 219 1 310 1 29 1 123 1 225 4 34 2 368 1 128 1 179 1 261 2 182 1 263 1 374 1 377 1 
268 1 347 1 20 2 269 1 245 1 21 1 270 4 141 1 73 1 22 1 119 1 304 1 120 1 307 1 100 2 335 2 219 1 285 1 336 2 310 1 29 1 238 4 53 2 123 1 153 1 225 4 368 1 34 2 16 1 106 2 202 1 128 1 36 1 107 2 261 2 179 1 182 1 263 1 297 4 374 1 377 1 
268 1 347 1 20 2 269 1 245 1 21 1 270 4 141 1 73 1 22 1 119 1 304 1 120 1 307 1 100 2 335 2 219 1 285 1 336 2 310 1 29 1 238 4 53 2 123 1 153 1 225 4 368 1 34 2 16 1 106 2 202 1 128 1 36 1 107 2 261 2 179 1 182 1 263 1 297 4 374 1 377 1 
347 1 20 2 269 1 245 1 21 1 161 1 270 4 141 1 73 1 74 2 119 1 304 1 170 1 120 1 307 1 100 2 219 1 285 1 310 1 29 1 252 1 238 4 123 1 198 2 153 1 225 4 85 2 368 1 34 2 16 1 106 2 202 1 128 1 107 2 261 2 179 1 182 1 263 1 297 4 374 1 377 1 
268 1 347 1 0 1 20 3 269 1 245 1 21 1 270 5 141 1 73 1 22 1 119 1 304 1 307 1 120 1 100 2 335 2 219 1 285 1 336 2 310 1 29 1 238 5 53 2 123 1 153 1 225 4 368 1 16 1 34 3 106 3 202 1 128 1 36 1 107 2 261 2 179 1 182 1 263 1 297 4 374 1 377 1 
268 1 347 1 0 1 20 3 269 1 245 1 21 1 270 5 141 1 73 1 22 1 119 1 304 1 307 1 120 1 100 2 335 2 219 1 285 1 336 2 310 1 29 1 238 5 53 2 123 1 153 1 225 4 368 1 16 1 34 3 106 3 202 1 128 1 36 1 107 2 261 2 179 1 182 1 263 1 297 4 374 1 377 1 
269 1 270 4 141 1 328 1 100 2 285 1 238 4 198 2 153 1 16 1 106 2 202 1 107 2 297 4 347 1 20 2 245 1 161 1 73 1 74 2 119 1 304 1 307 1 120 1 219 1 310 1 29 1 123 1 225 4 85 2 34 2 368 1 128 1 179 1 261 2 182 1 263 1 374 1 377 1 
348 1 136 1 211 2 164 1 213 2 190 1 70 1 276 1 168 2 24 1 330 2 280 1 172 2 360 1 78 1 79 1 314 1 239 1 104 1 317 1 126 1 318 1 341 1 260 1 87 2 132 1 133 1 345 1 134 1 
348 1 347 1 353 1 65 1 211 3 164 1 70 2 303 1 167 1 23 1 217 1 330 2 280 1 148 1 78 1 81 1 124 1 363 1 104 1 126 1 15 1 366 1 16 1 202 1 341 1 230 1 158 1 88 1 19 1 
348 1 211 6 164 1 163 1 4 1 70 3 167 1 23 2 330 2 280 1 305 1 148 1 78 1 174 1 104 1 126 1 366 2 177 1 341 3 156 2 230 1 158 1 18 1 88 1 112 1 205 1 
348 2 352 1 211 14 164 2 70 6 277 1 167 11 23 2 330 4 280 1 148 1 78 2 79 1 81 2 124 1 104 2 83 3 32 1 126 2 15 2 33 1 366 1 341 8 343 1 203 3 156 1 322 1 230 2 111 1 88 11 158 4 134 1 19 1 
348 1 347 2 136 1 189 1 65 1 211 2 164 1 213 1 70 1 276 1 303 1 46 1 168 1 7 1 24 1 280 1 330 2 172 1 78 1 79 1 104 1 317 1 14 1 125 1 126 1 16 2 55 1 202 1 370 1 341 1 229 1 156 1 87 1 133 1 158 1 325 1 134 1 19 1 
43 1 136 1 2 2 189 2 276 2 6 2 98 1 330 6 280 3 148 3 104 3 14 1 15 2 200 1 16 3 55 2 202 1 341 10 156 2 17 2 18 1 158 7 112 1 205 1 19 1 347 3 348 3 60 2 65 1 211 20 163 1 66 1 164 3 213 3 70 10 303 1 168 3 167 7 23 8 305 1 24 2 172 3 78 3 79 1 81 2 124 2 317 2 126 3 366 4 33 4 176 2 177 1 229 2 87 2 133 2 230 3 88 7 325 1 134 1 
348 1 104 1 126 1 15 1 33 1 211 2 164 1 165 1 341 2 167 1 23 1 280 1 330 2 230 1 158 1 88 1 78 1 174 1 
348 1 124 1 104 1 126 1 366 1 211 2 164 1 70 2 167 1 23 1 280 1 330 2 148 1 158 1 88 1 78 1 174 1 376 1 
348 1 211 4 164 1 70 2 167 2 23 2 330 2 280 1 148 1 78 1 174 1 81 1 124 1 104 1 15 1 126 1 33 1 366 1 341 2 230 1 88 2 158 2 
348 1 104 1 126 1 15 1 33 1 211 2 164 1 165 1 190 1 341 2 167 1 23 1 280 1 330 2 230 1 158 1 88 1 78 1 
348 1 124 1 104 1 126 1 366 1 211 2 164 1 190 1 70 2 167 1 23 1 280 1 330 2 148 1 158 1 88 1 78 1 376 1 
348 1 124 1 104 1 126 1 15 1 366 1 33 1 211 4 164 1 190 1 70 2 341 2 167 2 23 2 280 1 330 2 148 1 230 1 158 2 88 2 78 1 81 1 
348 1 124 1 104 1 126 1 15 1 366 1 33 1 211 4 164 1 70 2 341 2 167 2 23 2 280 1 330 2 148 1 230 1 158 2 88 2 78 1 81 1 
347 1 348 1 136 1 2 1 189 1 211 2 164 1 213 1 70 1 276 1 168 1 24 1 280 1 330 2 172 1 78 1 79 1 104 1 317 1 126 1 16 1 55 1 341 1 229 1 156 1 87 1 133 1 134 1 
347 1 348 1 136 1 211 2 164 1 213 1 70 1 276 1 168 1 24 1 280 1 330 2 283 1 172 1 78 1 79 1 104 1 317 1 126 1 289 1 16 1 55 1 341 1 86 1 156 1 87 1 133 1 134 1 
348 1 124 1 104 1 126 1 15 1 366 1 33 1 211 4 164 1 70 2 341 2 167 2 23 2 280 1 330 2 148 1 230 1 158 2 88 2 78 1 81 1 19 1 
347 1 348 1 2 1 189 1 211 4 164 1 213 1 70 2 276 1 96 1 167 2 168 1 23 2 24 1 280 1 330 2 172 1 148 1 78 1 81 1 124 1 104 1 317 1 15 1 126 1 366 1 33 1 16 1 55 1 341 2 229 1 87 1 17 1 230 1 133 1 158 2 88 2 
348 1 347 1 65 1 211 3 164 1 70 1 303 1 167 1 23 1 217 1 330 2 280 1 25 1 148 1 78 1 81 1 124 1 363 1 104 1 126 1 15 1 33 1 16 1 202 1 341 2 230 1 88 1 158 1 19 1 
188 1 352 1 211 19 272 1 164 2 70 10 166 1 23 6 48 1 330 4 148 3 50 1 78 2 81 3 31 1 124 3 104 2 83 1 32 1 126 2 15 3 366 3 33 3 154 2 227 1 293 1 341 9 203 2 323 2 230 3 
188 1 64 1 211 26 164 3 70 12 166 2 23 4 216 1 330 6 218 1 148 2 50 1 78 3 251 1 81 3 31 1 124 2 104 3 83 2 126 3 32 2 15 3 33 2 366 2 154 1 292 1 227 2 293 1 341 14 203 2 323 4 373 1 230 3 89 2 
188 1 352 1 246 1 64 1 211 41 272 1 163 1 164 3 70 21 166 2 216 1 23 8 305 1 330 6 218 1 148 5 50 1 78 3 251 1 81 4 31 1 124 4 104 3 83 3 32 3 126 3 15 4 366 4 33 4 177 1 154 1 292 1 227 1 293 1 341 20 203 4 323 4 373 1 230 5 18 1 89 1 112 1 205 1 
188 1 352 1 246 1 64 1 211 38 272 1 163 1 164 4 70 18 166 2 216 1 23 7 305 1 330 8 218 1 148 4 50 1 78 4 251 1 81 4 31 1 124 3 104 4 83 3 32 3 126 4 15 4 366 4 33 3 177 1 154 1 292 1 227 1 293 1 341 20 203 4 323 4 373 1 230 5 18 1 89 2 112 1 205 1 
188 1 352 2 64 1 211 52 163 1 164 2 70 25 166 1 216 1 23 14 305 1 330 4 218 1 148 8 50 1 78 2 251 1 81 7 31 1 124 7 104 2 83 4 32 2 126 2 15 7 366 7 33 7 177 1 154 1 292 1 227 1 293 1 341 27 343 2 203 4 323 4 373 1 230 8 18 1 89 1 112 1 205 1 
342 1 113 1 253 1 364 1 320 1 279 1 306 1 26 1 56 1 290 1 
233 1 67 1 
253 1 115 1 298 1 364 1 320 1 306 1 52 1 56 1 290 1 
274 1 92 1 
299 1 152 1 357 1 
113 1 253 1 90 1 364 1 225 1 84 1 290 1 56 1 342 1 72 1 320 1 279 1 306 1 284 2 186 1 297 1 285 1 27 1 
113 1 253 1 90 1 364 1 225 1 84 1 290 1 56 1 342 1 72 1 320 1 279 1 306 1 284 2 186 1 297 1 285 1 27 1 
113 1 253 1 90 1 364 1 225 1 84 1 290 1 56 1 342 1 72 1 320 1 279 1 306 1 284 2 186 1 297 1 285 1 27 1 
299 1 274 1 92 1 
299 1 274 1 92 1 
152 1 357 1 
299 1 152 1 357 1 
250 1 361 1 
347 2 90 1 233 1 65 2 67 1 303 2 250 1 306 1 282 1 284 1 121 1 361 1 253 1 364 1 225 1 16 2 56 1 290 1 340 1 202 2 320 1 180 1 156 1 186 1 297 1 344 1 244 1 
348 1 347 2 140 1 211 2 164 1 213 2 70 1 94 1 145 1 168 2 24 1 280 1 330 2 172 2 11 1 78 1 79 1 314 1 104 1 317 1 126 1 226 1 16 2 369 1 202 2 341 1 87 1 132 2 133 1 134 1 19 1 
232 1 136 1 213 1 276 1 168 1 75 1 24 1 172 1 360 1 102 1 80 1 239 1 317 1 318 1 260 1 87 2 133 1 345 1 159 1 
232 1 197 1 317 1 212 2 213 1 319 1 168 1 98 1 118 1 87 1 59 1 309 1 172 1 264 1 237 1 80 1 266 1 220 1 
232 1 197 1 317 1 212 2 213 2 319 1 96 1 168 2 98 1 118 1 87 1 59 1 309 1 172 2 264 1 237 1 80 1 266 1 220 1 
232 1 197 1 317 1 212 2 213 1 319 1 129 1 168 1 98 1 118 1 87 1 309 1 172 1 264 1 237 1 266 1 220 1 
208 1 
315 1 245 1 368 1 73 1 179 1 307 1 149 1 310 1 285 1 377 1 
207 5 124 2 198 10 1 1 15 2 6 1 73 5 179 5 10 5 230 2 335 5 148 2 194 2 285 5 81 2 
225 1 100 1 297 1 285 1 368 1 238 1 
136 2 245 1 275 1 213 2 276 1 168 2 73 1 24 1 307 1 100 1 172 2 49 1 360 1 236 1 310 1 238 2 239 1 317 1 224 1 225 1 318 1 260 1 179 1 87 2 184 1 133 1 297 1 345 1 377 1 
315 1 73 1 179 1 285 1 368 1 149 1 4 1 
268 1 245 1 73 1 307 1 100 1 335 1 310 1 285 2 336 1 238 1 53 1 198 1 225 1 368 1 179 1 297 1 377 1 
136 1 1 2 271 1 45 1 276 3 6 2 96 1 8 1 100 3 10 6 49 1 335 6 148 2 149 1 194 2 285 8 238 5 103 2 337 1 198 12 15 2 294 2 155 2 58 1 297 5 350 3 207 6 245 4 210 2 213 3 73 9 168 3 24 10 307 4 172 3 310 4 81 2 313 2 315 1 123 2 362 2 124 2 317 3 256 2 224 1 225 5 368 2 127 2 179 8 87 4 184 2 133 3 230 2 377 4 
207 5 245 2 1 1 73 8 216 1 307 2 358 1 100 1 10 5 49 1 218 1 335 3 148 2 194 2 310 2 285 5 251 1 81 2 238 1 124 2 198 6 83 1 225 1 32 1 15 2 368 2 292 1 203 1 179 5 184 1 297 1 373 1 230 2 231 1 377 2 
347 1 245 1 1 1 300 1 65 1 303 1 22 1 73 2 305 1 307 1 333 1 148 1 194 2 310 1 363 1 225 1 16 1 128 1 202 1 179 2 181 1 185 1 297 1 230 2 18 1 112 1 377 1 135 1 
347 3 348 1 136 1 300 1 2 1 189 1 211 1 65 2 164 1 213 1 70 1 303 2 276 1 168 1 330 2 24 1 280 1 172 1 78 1 104 1 363 2 151 1 317 1 126 1 16 3 55 1 202 2 229 1 156 1 87 1 133 1 134 1 
207 2 198 4 245 1 163 1 368 2 73 1 179 2 307 1 184 1 10 2 49 1 335 2 310 1 285 4 377 1 
342 1 250 1 183 1 56 1 290 1 
122 1 56 1 290 1 
122 1 56 1 290 1 
122 1 56 1 290 1 
204 1 56 1 290 1 
204 1 56 1 290 1 
204 1 56 1 290 1 
56 1 290 1 
253 1 306 1 
104 1 126 1 366 3 33 2 211 10 164 1 293 1 341 5 70 5 23 5 330 2 305 1 333 1 230 2 148 2 78 1 18 2 112 2 
104 1 126 1 15 1 33 1 211 2 164 1 293 1 341 2 23 1 330 2 230 1 78 1 
124 1 104 1 126 1 15 1 366 1 33 1 211 4 164 1 70 2 293 1 341 2 23 2 330 2 148 1 230 1 78 1 81 1 
104 3 126 3 366 1 33 1 211 3 272 1 164 3 54 1 70 2 293 1 341 1 23 2 330 6 89 1 78 3 18 1 112 1 
352 1 211 34 163 1 272 1 164 5 70 18 97 1 23 12 305 2 330 10 192 1 148 5 78 5 81 3 30 1 124 3 104 5 83 3 32 1 126 5 15 3 33 5 366 7 177 1 288 1 54 1 293 1 341 16 203 4 230 5 18 3 89 2 112 3 205 1 
104 2 126 2 33 1 366 2 211 8 163 1 164 2 177 1 70 4 341 4 23 3 305 1 330 4 148 1 230 1 78 2 89 1 18 1 112 1 205 1 
366 2 211 6 163 1 177 1 4 1 70 3 341 3 23 2 305 1 230 1 148 1 18 1 112 1 205 1 
124 1 104 1 126 1 15 1 366 1 33 1 211 4 164 1 70 2 341 2 97 1 23 2 330 2 148 1 230 1 78 1 81 1 
124 1 83 1 352 1 32 1 15 1 366 1 33 1 211 7 70 4 341 3 203 2 23 2 148 1 230 1 81 1 
352 1 211 23 163 1 164 2 70 12 23 9 305 1 330 4 148 3 78 2 81 2 124 2 83 2 104 2 15 2 126 2 33 4 366 5 177 1 54 1 341 11 203 2 343 1 230 3 18 2 111 1 89 2 112 2 205 1 
203 1 211 1 70 1 
83 1 211 1 341 1 
124 1 104 1 126 1 15 1 33 1 366 2 211 6 164 1 70 3 341 3 6 1 97 1 23 3 330 2 230 1 148 1 78 1 81 1 
211 12 164 1 70 6 216 1 23 2 330 2 218 1 148 2 78 1 251 1 81 2 124 2 83 1 104 1 32 1 126 1 15 2 33 1 366 1 293 1 341 6 292 1 203 1 373 1 230 2 
366 1 33 1 211 6 341 3 70 3 23 2 305 1 230 1 148 1 18 1 112 1 
104 1 126 1 33 1 366 1 211 3 164 1 177 1 54 1 341 1 70 2 23 2 330 2 18 1 89 1 78 1 112 1 205 1 
211 8 163 1 164 1 70 4 23 2 330 2 305 1 148 1 78 1 83 1 104 1 32 1 126 1 366 2 177 1 293 1 341 4 203 1 230 1 373 1 18 1 112 1 205 1 
352 1 211 11 163 1 164 2 70 5 97 1 23 3 305 1 330 4 148 1 78 2 81 1 104 2 83 1 32 1 126 2 15 1 366 2 33 1 177 1 293 1 341 6 203 2 373 1 230 2 18 1 112 1 205 1 
211 19 163 1 164 3 70 10 97 1 216 1 23 4 305 1 330 6 218 1 148 3 78 3 251 1 81 2 124 2 83 1 104 3 32 1 126 3 15 2 33 1 366 3 177 1 293 1 341 9 292 1 203 1 373 1 230 3 18 1 89 1 112 1 205 1 
211 17 163 1 164 3 70 7 97 1 216 1 23 5 305 1 330 6 218 1 148 2 78 3 251 1 81 2 124 1 83 1 104 3 32 1 126 3 15 2 33 2 366 3 177 1 293 1 341 10 292 1 203 1 373 1 230 3 18 1 89 1 112 1 205 1 
211 8 163 1 164 1 70 4 23 2 330 2 305 1 148 1 78 1 83 1 104 1 32 1 126 1 366 2 177 1 293 1 341 4 203 1 230 1 373 1 18 1 112 1 205 1 
211 12 164 1 70 6 216 1 23 2 330 2 218 1 148 2 78 1 251 1 81 2 124 2 83 1 104 1 32 1 126 1 15 2 33 1 366 1 293 1 341 6 292 1 203 1 373 1 230 2 
211 18 163 1 164 4 70 8 97 1 216 1 23 5 305 1 330 8 218 1 148 2 78 4 251 1 81 2 124 1 104 4 83 1 32 1 126 4 15 2 33 2 366 3 177 1 292 1 293 1 341 10 203 1 373 1 230 3 18 1 89 2 112 1 205 1 
211 16 164 4 272 1 70 7 216 1 23 6 330 8 218 1 148 2 78 4 251 1 81 3 124 2 104 4 83 1 32 1 126 4 15 3 33 3 366 3 292 1 293 1 341 9 203 1 373 1 230 3 89 2 
366 3 33 3 211 7 177 1 70 4 341 3 23 6 305 1 148 1 230 1 18 3 112 3 205 2 
211 18 163 1 164 4 272 1 70 8 216 1 23 4 305 1 330 8 218 1 148 2 78 4 251 1 81 2 124 1 104 4 83 1 32 1 126 4 15 2 33 1 366 3 177 1 292 1 293 1 341 10 203 1 373 1 230 3 18 1 89 2 112 1 205 1 
347 1 156 1 77 1 324 1 16 1 29 1 202 1 
347 1 162 1 16 1 3 1 302 1 202 1 47 1 295 1 156 1 324 1 77 1 29 1 
136 1 239 1 317 1 318 1 213 2 276 1 96 1 260 1 168 2 87 2 24 1 172 2 133 1 360 1 345 1 
239 1 317 1 200 1 318 1 213 2 276 1 168 2 58 1 24 1 87 2 172 2 360 1 133 1 345 1 
136 1 168 1 317 1 87 1 212 1 172 1 264 1 213 1 319 1 237 1 
317 1 213 2 94 1 96 1 168 2 145 1 98 1 24 1 87 1 172 2 133 1 
136 1 239 1 317 2 255 1 318 1 213 3 276 1 260 1 96 1 168 2 145 1 356 1 24 3 87 3 172 3 360 1 133 2 345 1 
136 1 239 1 317 2 255 1 318 1 213 3 276 1 260 1 96 1 168 2 145 1 321 1 24 3 87 3 172 3 360 1 133 2 345 1 
260 1 136 1 168 1 172 1 213 1 4 1 
347 2 136 1 14 1 317 1 189 1 65 1 16 2 213 1 55 1 202 1 276 1 303 1 168 1 156 1 24 1 87 1 172 1 133 1 
347 2 189 1 65 2 213 1 303 1 276 2 168 1 24 3 172 1 313 1 317 1 14 1 16 2 55 1 127 1 202 2 128 1 156 1 58 1 87 1 182 1 263 1 133 2 
347 2 65 2 213 2 303 1 276 2 168 2 24 3 172 2 313 1 317 1 14 1 16 2 55 1 127 1 202 2 128 1 86 1 108 1 156 1 58 1 87 1 182 1 263 1 133 2 
136 1 123 1 350 1 362 1 317 1 225 2 368 1 142 1 213 3 127 1 276 1 168 3 108 1 87 1 58 1 24 4 172 3 133 1 297 2 285 1 265 1 313 1 238 1 
136 1 123 1 350 1 362 1 317 1 225 2 368 1 213 3 127 1 276 1 155 1 168 3 108 1 87 1 58 1 24 4 172 3 133 1 297 2 285 1 313 1 238 1 
168 1 317 1 87 1 172 1 213 1 375 1 
136 2 239 1 317 2 255 1 318 1 45 1 213 7 69 1 248 1 276 1 96 1 145 1 168 6 356 1 98 1 24 3 87 3 132 1 172 7 133 2 375 1 
2 1 189 1 276 1 96 1 330 4 280 2 148 1 104 2 14 1 16 2 55 1 202 1 341 3 156 2 17 1 158 1 18 1 112 1 19 1 205 1 347 2 348 2 60 1 65 1 211 6 164 2 163 1 213 1 70 3 303 1 168 1 167 1 23 2 24 1 305 1 172 1 78 2 317 1 126 2 226 1 366 2 177 1 229 1 87 1 133 1 230 1 88 1 
136 1 350 1 245 2 210 1 213 1 73 1 168 1 24 2 307 2 100 1 172 1 285 1 149 1 310 2 238 2 315 1 123 1 103 1 362 1 224 1 225 3 368 1 294 1 155 1 179 1 180 1 297 3 377 2 
362 1 337 1 317 1 45 1 213 2 276 1 96 1 168 2 24 2 87 2 172 2 133 1 375 1 
347 2 136 1 14 1 317 1 65 1 16 2 213 1 55 1 202 1 276 1 303 1 86 1 168 1 156 1 24 1 87 1 172 1 133 1 
239 1 317 1 318 1 45 1 213 1 248 1 276 1 168 1 58 1 24 1 87 2 172 1 133 1 
38 1 160 1 146 1 156 1 249 1 
123 1 326 1 160 2 225 2 259 1 367 1 141 1 368 1 128 1 249 2 38 2 180 1 146 1 329 1 156 1 182 1 263 1 297 2 285 1 
347 1 160 1 146 1 140 1 11 1 16 1 369 1 202 1 249 1 
326 1 329 1 146 1 
13 1 44 1 99 1 39 1 243 1 308 1 28 1 150 1 
349 1 13 3 254 2 44 1 139 1 235 1 37 1 241 1 144 1 99 4 243 2 308 4 28 1 150 2 
13 1 254 1 44 1 63 1 99 2 39 1 243 1 308 2 339 1 28 1 150 1 5 1 
241 1 13 1 44 1 327 1 99 3 39 1 243 1 139 2 308 3 235 2 28 1 150 1 
13 2 95 2 109 1 331 1 
82 1 44 1 99 1 39 1 308 1 28 1 
13 1 254 1 44 1 209 1 99 2 39 1 243 1 308 2 28 1 150 1 
240 1 
13 1 44 1 99 1 39 1 243 1 308 1 28 1 150 1 
13 1 243 1 150 1 4 1 
13 1 44 1 99 1 243 1 308 1 28 1 150 1 
355 1 308 1 117 1 
13 1 44 1 139 1 235 2 241 1 39 1 99 3 308 3 243 1 173 1 28 1 150 1 
13 1 254 1 44 1 99 2 243 1 308 2 28 1 150 1 206 1 
13 1 44 1 99 1 39 1 365 1 308 1 212 1 28 1 319 1 220 1 37 1 
13 1 44 1 99 1 39 1 308 1 28 1 150 1 
44 1 99 1 39 1 243 1 308 1 28 1 150 2 
196 1 13 1 44 2 301 1 39 1 99 2 308 2 28 2 150 1 195 1 
13 2 254 2 44 1 209 1 37 1 144 1 39 1 99 3 243 1 308 3 28 1 187 1 150 1 
13 1 254 1 44 1 212 2 319 1 278 1 39 1 99 2 243 1 308 2 309 1 28 1 150 1 237 1 220 1 
13 2 254 2 44 2 37 1 144 1 9 1 39 1 99 4 243 1 308 4 28 2 150 1 206 1 
13 1 254 1 44 1 209 1 99 3 39 1 243 1 308 3 235 1 28 1 150 1 
349 1 13 1 144 1 37 1 
13 1 150 1 

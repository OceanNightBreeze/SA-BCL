#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 256 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 374 (37,184) (37,184) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 76 9 353 6 194 2 310 1 58 1 360 1 362 1 134 3 28 9 136 1 155 1 34 2 336 2 36 1 37 1 90 1 115 1 39 2 286 2 227 1 243 1 160 4 17 1 374 4 245 2 184 1 148 1 348 2 
119 1 76 9 353 6 194 2 310 1 58 1 360 1 362 1 134 3 28 9 136 1 155 1 336 2 34 2 36 1 37 1 90 1 115 1 39 2 286 2 227 1 243 1 160 4 17 1 374 4 245 2 184 1 148 1 348 2 
119 1 76 9 353 6 194 2 310 1 58 1 360 1 362 1 134 3 28 9 136 1 155 1 336 2 34 2 36 1 37 1 90 1 115 1 39 2 286 2 227 1 243 1 160 4 17 1 374 4 245 2 184 1 148 1 348 2 
119 1 76 7 353 4 194 2 310 1 58 1 360 1 362 1 134 2 28 7 136 1 155 1 336 2 34 1 37 1 90 1 115 1 39 2 286 2 227 1 243 1 160 3 17 1 374 3 245 2 184 1 148 1 348 2 
119 1 76 4 353 3 310 1 360 1 134 1 28 4 155 1 336 1 34 2 36 1 37 1 39 1 286 1 160 2 374 2 245 1 184 1 348 1 
76 2 113 1 37 1 39 1 286 1 194 1 310 1 58 1 267 1 360 1 245 1 184 1 28 2 176 1 348 1 148 1 
76 3 37 1 39 2 353 1 160 1 17 1 194 1 374 1 310 1 360 1 184 1 134 1 28 3 348 2 
119 1 76 9 353 7 194 1 310 1 360 1 362 1 134 3 28 9 155 1 34 2 336 1 366 1 36 1 37 1 39 2 286 1 227 1 160 4 17 1 374 4 245 1 184 1 118 1 348 2 
119 1 76 9 353 7 194 1 310 1 360 1 362 1 134 3 28 9 155 1 34 2 336 1 366 1 36 1 37 1 39 2 286 1 227 1 160 4 17 1 374 4 245 1 184 1 118 1 348 2 
256 1 130 1 18 1 
174 2 130 1 101 1 
0 2 186 1 272 2 231 1 251 2 132 2 380 2 370 2 
0 2 186 1 205 1 235 1 270 2 167 2 272 3 251 2 302 1 210 1 121 2 255 1 54 1 153 1 327 1 82 1 26 1 56 1 128 1 132 3 237 1 259 1 5 2 177 2 178 1 65 1 261 1 158 1 284 1 143 1 370 2 319 1 375 1 231 1 380 2 44 1 249 1 
0 1 186 1 228 1 272 1 251 1 132 1 380 1 215 1 74 1 370 1 
30 1 31 1 272 1 351 1 79 1 339 1 146 1 126 1 130 1 18 1 268 1 132 1 380 1 74 1 
0 1 30 1 31 2 272 1 351 1 251 1 79 2 339 1 370 1 126 1 130 1 18 1 132 1 380 1 74 1 
31 1 141 1 289 1 195 1 79 1 
309 1 31 2 57 1 141 1 130 1 18 1 195 1 79 2 
31 1 195 1 79 1 
186 1 0 1 31 1 141 1 272 1 171 1 251 1 79 1 370 1 228 1 132 1 215 1 380 1 74 1 
130 1 
40 1 309 1 31 2 141 1 130 1 18 1 195 1 79 2 
156 1 31 5 141 2 120 1 151 1 38 1 337 1 23 1 79 5 369 2 124 1 309 1 130 1 18 1 347 1 195 2 43 1 154 2 281 2 
178 1 205 1 167 1 158 1 261 1 272 2 251 1 302 1 211 1 121 1 54 1 370 1 153 1 319 1 128 1 312 1 132 2 61 1 380 1 177 1 
0 1 272 3 231 1 251 3 132 3 211 1 380 3 370 3 
228 1 272 1 251 1 132 1 380 1 74 1 370 1 
0 1 55 1 272 1 251 1 132 1 380 1 74 1 110 1 370 1 
0 2 186 1 235 1 205 1 270 1 167 1 272 4 351 1 251 3 302 1 79 1 210 1 211 1 121 1 255 1 54 1 153 1 55 1 26 1 126 1 128 1 132 4 237 1 61 1 5 2 177 1 30 1 178 1 65 1 31 1 158 1 261 1 33 1 284 1 339 1 370 3 344 1 319 1 375 1 231 1 380 3 74 1 44 1 249 1 
146 1 272 2 231 1 251 1 132 2 211 1 380 2 370 1 139 1 
0 1 30 1 31 1 272 3 351 1 251 3 79 1 211 2 339 1 370 3 55 1 344 1 126 1 130 1 132 3 61 1 380 3 74 1 4 1 
0 1 55 1 272 2 73 1 251 2 312 1 132 2 211 1 380 2 370 2 
205 1 178 1 167 1 272 1 261 1 158 1 302 1 121 1 54 1 153 1 128 1 319 1 231 1 132 1 177 1 
205 1 178 1 167 1 272 1 261 1 158 1 367 1 121 1 153 1 128 1 319 1 231 1 183 1 132 1 177 1 
270 4 169 1 78 1 207 2 210 1 255 1 356 1 82 2 26 1 84 1 312 2 237 1 5 2 65 1 112 1 284 1 68 1 287 1 320 1 73 2 290 1 269 1 323 1 44 2 
345 1 272 1 251 1 132 1 339 1 380 1 74 1 370 1 
256 1 231 1 
0 1 272 2 251 1 370 1 55 1 231 2 132 2 380 2 110 1 
73 1 207 1 312 1 
205 1 178 1 167 1 272 1 261 1 158 1 144 1 302 1 121 1 54 1 153 1 128 1 319 1 231 1 132 1 177 1 
0 1 272 5 252 1 251 4 211 2 370 4 55 1 146 1 266 1 231 1 132 5 61 1 380 5 139 1 
345 1 228 1 272 2 251 2 132 2 380 2 74 1 370 2 
131 1 102 1 341 1 
111 1 102 1 341 1 
111 1 102 1 341 1 
111 1 102 1 341 1 
102 1 341 1 
102 1 341 1 
193 1 109 1 
193 1 109 1 
193 1 109 1 
131 1 102 1 341 1 
131 1 102 1 341 1 
108 1 102 1 341 1 
193 1 308 1 173 1 109 1 102 2 341 2 
217 2 168 1 299 1 31 2 189 2 79 2 173 1 102 2 192 2 341 2 50 1 317 2 125 1 130 1 311 2 233 1 164 1 234 3 29 1 
217 1 31 1 272 2 251 2 79 1 13 1 102 1 201 1 50 1 192 1 341 1 91 1 370 2 357 1 317 1 230 1 311 1 231 1 108 1 132 2 380 2 332 1 234 1 247 1 
336 1 245 1 286 1 
267 1 245 1 286 1 
250 1 267 1 336 2 245 3 241 1 352 1 
250 1 267 1 336 1 245 2 352 1 12 1 
250 2 267 1 336 1 245 2 352 1 
169 1 78 1 101 1 79 5 174 3 309 1 257 1 130 2 84 1 195 1 364 2 154 1 214 1 281 1 332 1 64 1 239 1 156 2 334 1 112 1 66 2 31 5 141 4 337 1 38 3 11 1 369 1 201 1 203 2 91 1 117 1 18 1 
0 1 186 1 272 1 100 1 101 1 195 4 154 1 281 1 239 1 156 2 112 1 66 2 337 1 11 1 203 2 117 1 18 1 289 3 74 1 169 1 78 1 251 1 171 1 79 6 174 3 309 1 175 1 130 3 84 1 132 1 215 1 214 1 31 6 141 5 38 3 369 1 370 1 91 2 228 1 229 1 182 3 380 1 
169 1 78 1 101 2 151 1 79 3 174 4 130 3 84 1 364 1 154 1 281 1 64 1 239 1 334 1 156 2 112 1 31 3 66 2 141 2 38 3 11 1 369 1 91 1 203 2 117 1 18 1 
98 1 169 2 78 2 101 3 151 1 79 4 174 7 130 4 84 2 364 2 154 1 281 1 64 1 239 1 314 1 334 1 156 4 112 2 66 4 31 4 141 3 38 5 11 2 369 1 226 1 203 4 91 2 117 1 18 1 
319 1 153 1 
373 2 319 1 128 1 106 1 355 1 153 3 
373 1 256 1 153 1 
153 1 87 1 
248 1 
319 1 128 1 153 1 
197 1 153 1 
325 1 270 7 112 1 169 1 179 1 240 1 338 1 123 1 82 4 107 1 60 1 363 1 290 2 293 1 323 3 295 2 44 3 
325 1 270 7 112 1 169 1 179 1 240 1 338 1 123 1 82 4 107 1 60 1 363 1 290 2 293 1 323 3 295 2 44 3 
325 1 270 7 112 1 169 1 179 1 240 1 338 1 123 1 307 1 82 4 107 1 60 1 363 1 290 2 293 1 323 3 295 2 44 3 
325 2 270 31 169 4 78 3 255 1 123 2 82 16 107 2 84 3 60 5 363 1 237 1 5 2 6 3 65 1 179 1 112 4 142 4 222 1 284 1 240 1 69 1 338 2 11 3 15 1 16 1 288 1 232 1 290 5 293 1 323 10 204 1 295 3 44 15 
325 1 270 9 169 1 255 2 236 1 123 1 82 5 107 1 60 1 237 2 5 4 65 2 112 1 179 1 284 2 240 1 338 1 242 1 16 1 290 3 293 1 323 4 295 2 44 4 
167 1 76 2 275 1 353 1 24 1 121 1 354 1 194 1 310 1 360 1 28 2 238 1 177 1 88 1 218 1 89 1 261 1 158 1 336 1 37 1 241 1 39 1 286 1 340 1 372 1 267 1 245 2 184 1 348 1 291 1 
167 1 76 3 275 1 353 2 121 1 194 1 360 1 28 3 238 1 198 1 177 1 7 1 88 1 218 1 89 1 261 1 158 1 336 1 37 1 241 1 39 1 286 1 340 1 70 1 372 1 267 1 245 2 184 1 348 1 291 1 
167 1 76 2 275 1 353 2 121 1 194 1 360 1 28 2 198 1 177 1 7 1 218 1 89 1 261 1 158 1 336 1 37 1 241 1 286 1 340 1 372 1 267 1 245 2 184 1 291 1 
205 1 167 1 76 1 275 2 206 1 121 1 103 1 153 1 194 2 28 1 177 1 219 1 89 2 158 1 261 1 39 1 340 2 70 1 181 1 41 1 319 1 161 1 348 1 
167 1 76 1 275 1 121 1 354 1 194 1 310 1 28 1 238 1 198 1 177 1 88 1 218 1 89 1 261 1 158 1 336 1 241 1 39 1 286 1 340 1 372 1 267 1 245 2 348 1 291 1 
318 1 
99 1 187 2 272 1 101 2 278 1 153 1 59 1 280 4 195 6 154 1 281 1 239 1 156 2 158 1 337 1 10 2 339 1 116 2 71 1 18 1 74 1 294 2 205 2 167 2 351 1 300 2 206 1 79 5 121 2 122 1 25 1 174 2 306 1 126 1 309 3 130 2 132 1 177 2 30 1 31 5 261 1 38 2 369 1 145 1 316 1 180 1 371 1 146 1 181 1 93 1 319 1 94 2 377 2 268 1 380 1 
99 1 272 1 351 1 79 3 25 1 126 1 309 1 280 2 132 1 195 2 30 1 31 3 339 1 145 1 316 1 40 1 146 1 93 1 268 1 380 1 74 1 294 1 
99 1 272 1 351 1 79 3 25 1 126 1 309 1 130 1 280 3 195 1 132 1 30 1 31 3 10 1 339 1 145 1 316 1 40 1 146 1 93 1 18 1 268 1 380 1 74 1 
99 1 272 1 351 1 79 3 25 1 126 1 309 1 130 1 280 3 132 1 195 2 30 1 31 3 10 1 339 1 145 1 316 1 40 1 146 1 93 1 94 1 18 1 268 1 380 1 74 1 294 1 
99 1 187 2 272 1 101 2 280 6 195 7 196 1 154 1 281 1 156 1 285 1 337 1 10 4 339 1 14 1 116 2 18 5 74 1 294 4 351 1 22 1 300 2 254 1 79 5 25 1 122 1 306 1 126 1 309 3 130 5 132 1 30 1 31 5 38 1 369 1 145 1 316 1 40 1 146 1 93 1 94 4 377 2 268 1 380 1 
99 1 187 2 272 1 101 2 280 4 195 4 154 1 281 1 156 1 337 1 10 2 339 1 116 2 18 1 74 1 294 2 351 1 300 2 79 4 25 1 122 1 174 2 306 1 126 1 309 2 130 2 132 1 30 1 31 4 38 1 369 1 145 1 316 1 180 1 146 1 93 1 94 2 377 2 268 1 380 1 
99 1 187 2 272 1 351 1 300 2 22 1 101 2 79 4 122 1 25 1 306 1 126 1 309 2 130 1 280 4 195 4 132 1 154 1 281 1 30 1 156 1 31 4 285 1 38 1 337 1 10 2 339 1 369 1 145 1 116 2 316 1 14 1 146 1 93 1 94 2 18 1 377 2 268 1 380 1 74 1 294 2 
99 1 187 2 272 1 351 1 300 2 22 1 101 2 79 4 122 1 25 1 306 1 126 1 309 2 130 1 280 4 195 4 132 1 154 1 281 1 30 1 156 1 31 4 285 1 38 1 337 1 10 2 339 1 369 1 145 1 116 2 316 1 14 1 146 1 93 1 94 2 18 1 377 2 268 1 380 1 74 1 294 2 
99 1 46 2 272 1 351 1 300 2 79 4 104 1 122 1 25 1 174 2 126 1 309 2 130 1 280 4 195 4 313 1 132 1 154 1 137 2 281 1 282 1 30 1 156 1 31 4 285 1 38 1 337 1 10 2 339 1 369 1 145 1 316 1 146 1 93 1 94 2 18 1 377 2 268 1 380 1 74 1 294 2 
99 1 187 2 272 1 351 1 300 2 22 1 101 2 79 4 122 1 25 1 306 1 126 1 309 2 130 1 280 5 132 1 195 5 196 1 154 1 281 1 30 1 156 1 31 4 285 1 38 1 337 1 10 3 369 1 339 1 145 1 116 2 316 1 14 1 146 1 93 1 94 3 18 1 377 2 268 1 380 1 74 1 294 3 
99 1 187 2 272 1 351 1 300 2 22 1 101 2 79 4 122 1 25 1 306 1 126 1 309 2 130 1 280 5 132 1 195 5 196 1 154 1 281 1 30 1 156 1 31 4 285 1 38 1 337 1 10 3 369 1 339 1 145 1 116 2 316 1 14 1 146 1 93 1 94 3 18 1 377 2 268 1 380 1 74 1 294 3 
99 1 46 2 272 1 280 4 195 4 154 1 281 1 156 1 337 1 10 2 339 1 18 1 74 1 294 2 351 1 300 2 79 4 25 1 122 1 174 2 126 1 309 2 130 1 313 1 132 1 137 2 30 1 31 4 38 1 369 1 145 1 316 1 180 1 146 1 93 1 94 2 377 2 268 1 380 1 
270 2 65 1 169 1 284 1 207 1 210 1 255 1 287 1 356 1 26 1 82 2 73 1 60 1 84 1 312 1 237 1 323 1 5 2 
270 2 65 1 112 1 78 1 284 1 207 1 210 1 255 1 356 1 26 1 73 1 312 1 290 1 237 1 269 1 323 1 5 2 44 2 
270 4 169 1 78 1 207 2 210 1 255 1 356 1 82 2 26 1 84 1 60 1 312 2 237 1 5 2 65 1 112 1 284 1 11 1 73 2 290 1 323 2 44 2 
270 2 65 1 169 1 284 1 207 1 262 1 210 1 255 1 287 1 26 1 82 2 73 1 60 1 84 1 312 1 237 1 323 1 5 2 
270 2 65 1 112 1 78 1 284 1 207 1 262 1 210 1 255 1 26 1 73 1 312 1 290 1 237 1 269 1 323 1 5 2 44 2 
270 4 169 1 78 1 207 2 210 1 255 1 82 2 26 1 84 1 60 1 312 2 237 1 5 2 65 1 112 1 284 1 262 1 11 1 73 2 290 1 323 2 44 2 
270 4 169 1 78 1 207 2 210 1 255 1 82 2 26 1 84 1 60 1 312 2 237 1 5 2 65 1 112 1 284 1 11 1 73 2 290 1 323 2 44 2 
235 1 205 1 270 2 167 1 272 1 302 1 210 1 121 1 255 1 54 1 153 1 82 1 26 1 56 1 128 1 132 1 237 1 177 1 5 2 178 1 65 1 158 1 261 1 284 1 319 1 375 1 231 1 44 1 
205 1 270 2 167 1 272 1 210 1 121 1 255 1 153 1 328 1 82 1 26 1 56 1 128 1 132 1 237 1 177 1 5 2 178 1 65 1 158 1 261 1 284 1 367 1 319 1 375 1 231 1 183 1 44 1 
270 4 169 1 78 1 207 2 210 1 255 1 82 2 26 1 84 1 60 1 312 2 237 1 138 1 5 2 65 1 112 1 284 1 11 1 73 2 290 1 323 2 44 2 
235 1 270 4 167 1 169 1 78 1 272 1 207 2 302 1 24 1 210 1 121 1 105 1 255 1 54 1 153 1 82 2 26 1 128 1 60 1 84 1 312 2 132 1 237 1 177 1 5 2 178 1 65 1 112 1 158 1 261 1 284 1 11 1 319 1 73 2 290 1 323 2 44 2 
0 1 270 3 169 1 78 1 272 1 251 1 207 1 210 1 80 1 255 1 55 1 26 1 82 2 60 1 84 1 132 1 312 1 237 1 138 1 5 2 65 1 112 1 284 1 11 1 370 1 73 1 323 1 380 1 44 1 
325 1 270 6 169 1 207 1 210 1 255 1 356 1 26 1 82 3 256 1 107 1 312 1 237 1 5 2 65 1 179 1 112 1 284 1 240 1 73 1 231 2 290 2 293 1 323 2 295 1 44 3 
270 14 169 2 78 1 207 11 191 1 210 1 255 2 26 2 82 8 56 1 330 1 60 1 84 2 312 11 237 2 138 1 5 4 6 3 65 2 112 1 222 1 142 3 284 2 263 1 11 2 343 1 375 1 73 4 231 1 290 1 232 1 323 2 44 6 
205 1 167 1 270 2 272 2 251 1 302 1 210 1 211 1 121 1 255 1 54 1 153 1 213 1 26 1 82 1 128 1 56 1 132 2 237 1 61 1 62 1 138 1 177 1 5 2 178 1 65 1 158 1 261 1 284 1 144 1 370 1 319 1 375 1 73 1 231 1 20 1 380 1 44 1 
325 1 235 2 270 20 272 3 105 2 54 2 153 2 56 1 107 1 60 4 237 3 61 1 198 1 5 6 333 1 65 3 112 3 158 2 284 3 200 2 240 1 9 2 11 2 73 7 162 1 290 4 293 1 295 1 350 1 205 1 167 3 169 3 78 2 251 1 302 2 207 7 211 1 210 3 121 3 255 3 26 3 82 10 128 2 361 2 84 2 132 3 312 7 138 1 177 3 178 2 179 1 261 2 370 1 319 2 375 1 231 2 380 1 323 8 44 10 
205 2 167 8 270 2 149 1 272 1 251 1 206 1 24 1 211 1 210 2 121 8 255 2 356 1 153 3 26 2 82 1 56 1 132 1 237 2 198 1 259 2 177 7 5 4 260 1 65 2 158 2 261 2 284 2 262 1 342 1 370 1 181 1 319 2 375 1 346 1 322 1 380 1 21 1 44 1 
0 1 45 1 270 3 169 1 272 1 78 1 251 1 207 1 210 1 255 1 55 1 26 1 82 1 84 1 312 1 132 1 237 1 138 1 5 2 65 1 112 1 284 1 11 1 370 1 73 1 290 1 323 1 380 1 44 2 
325 1 270 41 188 1 271 1 274 1 190 1 49 1 236 1 107 1 279 1 60 4 237 3 5 6 6 3 65 3 112 5 157 1 284 3 240 1 11 4 16 1 290 4 293 1 165 1 295 1 298 1 169 5 78 4 255 3 82 20 84 4 85 1 365 2 179 1 222 3 142 4 32 1 315 4 265 1 232 1 323 8 324 1 44 21 
325 1 298 1 270 38 271 1 188 1 169 5 78 3 274 1 49 1 190 1 255 4 236 1 82 20 107 1 279 1 84 4 60 3 237 4 85 1 5 8 6 3 65 4 179 1 365 2 112 4 157 1 32 1 142 4 222 3 284 4 240 1 11 4 315 4 16 2 265 1 290 4 232 1 293 1 323 7 165 1 295 1 324 1 44 18 
325 1 298 1 270 52 271 1 188 1 169 8 78 7 274 1 49 1 190 1 255 2 236 1 82 27 107 1 279 1 84 7 60 7 237 2 85 1 5 4 6 4 65 2 179 1 365 1 112 8 32 1 142 4 222 2 284 2 240 1 11 7 315 4 343 2 16 1 290 7 232 2 293 1 323 14 165 1 295 1 324 1 44 25 
270 19 188 1 169 3 78 3 209 1 49 1 255 2 236 1 82 9 84 3 60 3 237 2 85 1 5 4 6 1 65 2 365 1 112 3 157 1 142 2 222 1 284 2 11 3 315 2 290 3 232 1 323 6 165 2 324 1 44 10 
298 1 270 26 188 1 271 1 169 3 78 2 274 1 49 1 190 1 255 3 236 1 82 14 279 1 60 2 84 3 237 3 85 1 5 6 6 2 65 3 112 2 365 2 222 2 142 2 32 1 284 3 11 3 315 4 16 2 290 2 323 4 165 1 324 2 44 12 
217 1 168 1 299 1 31 1 189 1 79 1 173 1 102 1 50 1 192 1 341 1 317 1 130 1 311 1 233 1 164 1 234 2 29 1 
217 1 168 1 299 1 31 1 189 1 79 1 173 1 102 1 50 1 192 1 341 1 317 1 130 1 311 1 233 1 164 1 234 2 29 1 
217 1 168 1 299 1 31 1 189 1 79 1 173 1 102 1 50 1 192 1 341 1 317 1 130 1 311 1 233 1 164 1 234 2 29 1 
308 1 131 1 224 1 
308 1 131 1 224 1 
111 1 75 1 
111 1 308 1 75 1 
230 1 247 1 
272 2 189 1 251 2 79 1 102 1 192 1 357 1 311 1 132 2 108 1 332 1 29 1 217 1 221 1 31 1 141 1 13 1 341 1 201 1 91 1 370 2 317 1 230 1 231 1 380 2 234 1 247 1 
217 1 168 1 273 1 311 1 173 1 102 1 341 1 192 1 164 1 317 1 
108 1 13 1 
217 1 311 1 3 1 208 1 292 1 102 1 341 1 192 1 317 1 
131 1 224 1 
111 1 308 1 75 1 
167 2 270 2 272 2 48 1 210 1 121 2 303 1 53 1 255 1 153 1 26 1 82 1 56 1 132 2 237 1 138 1 259 2 5 2 177 2 65 1 158 1 261 1 335 1 284 1 114 1 319 1 375 1 322 1 380 2 21 1 44 1 
88 1 218 1 167 2 158 1 261 1 336 1 275 1 241 1 172 1 286 1 24 1 121 2 304 1 267 1 95 1 245 2 291 1 198 1 177 2 
88 1 218 1 167 1 261 1 158 1 336 1 275 1 241 1 172 1 286 1 121 1 267 1 245 2 291 1 198 1 86 1 177 1 
205 1 167 1 158 1 261 1 275 1 206 1 277 1 121 1 304 1 153 1 181 1 41 1 319 1 177 1 
88 1 218 1 167 1 158 1 261 1 336 1 275 1 241 1 172 1 286 1 121 1 304 1 267 1 95 1 245 2 291 1 198 1 177 1 
258 1 
156 1 256 1 130 1 120 1 18 1 38 1 43 1 
187 1 101 1 79 1 174 1 306 1 309 1 130 2 195 1 154 1 281 1 156 1 31 1 38 1 337 1 369 1 116 1 18 1 
101 6 152 2 106 1 153 10 59 1 195 5 154 4 197 2 281 4 239 2 156 8 66 6 112 2 199 1 158 4 200 2 337 4 11 2 203 6 244 2 72 2 18 2 19 2 349 1 297 1 205 1 167 3 169 2 78 2 120 1 253 1 79 5 24 1 121 3 212 1 174 12 126 2 128 3 309 3 359 2 130 8 84 2 27 2 87 3 177 3 31 5 261 3 38 9 369 4 147 2 373 2 319 3 43 1 379 2 
298 1 271 1 169 2 170 1 78 2 101 3 190 1 79 1 174 6 309 1 130 5 59 1 279 1 84 2 27 1 195 1 154 2 281 2 6 1 239 1 156 5 31 1 66 5 112 2 142 1 222 1 32 1 38 8 337 2 11 2 369 2 203 5 72 2 18 2 42 1 
186 1 0 1 325 1 169 2 272 1 22 1 171 1 251 1 79 1 83 1 107 1 27 1 132 1 154 1 215 1 281 1 156 2 31 1 112 1 337 1 38 2 369 1 370 1 72 2 228 1 293 1 380 1 74 1 
156 1 120 1 337 1 38 1 369 1 130 1 18 1 43 1 154 1 281 1 
156 5 169 2 66 5 112 2 78 2 200 1 101 5 38 5 11 2 203 5 174 10 72 2 130 5 84 2 27 1 
31 1 309 1 130 1 18 1 195 1 79 1 
205 2 167 4 326 1 151 1 206 1 79 3 121 4 153 1 278 1 309 2 59 2 195 4 154 2 281 2 177 4 239 2 156 2 31 3 199 2 158 1 261 1 337 1 38 2 369 2 371 1 181 1 319 1 246 1 349 1 
0 2 186 1 205 1 235 1 270 1 167 1 272 3 251 2 302 1 210 1 121 1 255 1 54 1 153 1 26 1 128 1 132 3 237 1 5 2 177 1 178 1 65 1 261 1 158 1 284 1 370 2 319 1 375 1 231 1 380 2 44 1 249 1 
239 1 156 2 66 2 101 2 337 1 38 1 369 1 203 2 174 4 130 4 59 1 18 2 154 1 281 1 295 1 
311 1 63 1 317 1 
223 1 311 1 317 1 
223 1 311 1 317 1 
223 1 311 1 317 1 
311 1 317 1 
102 1 341 1 
311 1 63 1 317 1 
311 1 63 1 317 1 
230 1 376 1 311 1 164 1 317 1 
325 1 270 8 169 1 255 1 236 1 82 4 107 1 237 1 5 2 6 1 65 1 112 1 179 1 142 1 222 1 32 1 284 1 240 1 290 2 293 1 323 2 295 1 44 4 
325 1 270 11 169 2 236 1 255 2 82 6 107 1 84 1 60 1 237 2 5 4 6 1 65 2 112 1 179 1 142 2 222 1 32 1 284 2 240 1 11 1 378 1 290 2 232 1 293 1 323 3 295 1 44 5 
325 1 298 1 270 19 271 1 169 3 78 2 190 1 255 3 236 1 82 9 107 1 279 1 60 1 84 2 237 3 5 6 6 1 65 3 179 1 112 3 142 1 222 1 32 1 284 3 240 1 11 2 16 1 378 1 290 3 293 1 323 4 295 1 44 10 
325 1 270 17 298 1 271 1 169 3 78 1 190 1 255 3 236 1 82 10 107 1 279 1 60 2 84 2 237 3 5 6 6 1 65 3 179 1 112 2 142 1 222 1 32 1 284 3 240 1 11 2 16 1 378 1 290 3 293 1 323 5 295 1 44 7 
325 1 270 8 169 1 255 1 236 1 82 4 107 1 237 1 5 2 6 1 65 1 112 1 179 1 142 1 222 1 32 1 284 1 240 1 290 2 293 1 323 2 295 1 44 4 
270 12 298 1 271 1 169 2 78 2 190 1 255 1 236 1 82 6 279 1 60 1 84 2 237 1 5 2 6 1 65 1 112 2 142 1 222 1 32 1 284 1 11 2 290 1 323 2 44 6 
325 1 298 1 270 18 271 1 169 3 78 1 190 1 255 4 236 1 82 10 107 1 279 1 60 2 84 2 237 4 5 8 6 1 65 4 179 1 112 2 142 1 222 1 32 1 284 4 240 1 11 2 16 2 378 1 290 3 293 1 323 5 295 1 44 8 
298 1 270 16 271 1 169 3 78 2 190 1 236 1 255 4 82 9 279 1 60 3 84 3 237 4 5 8 6 1 65 4 112 2 142 1 222 1 32 1 157 1 284 4 11 3 16 2 290 3 323 6 44 7 
325 3 270 7 112 1 179 2 169 1 240 1 82 3 107 3 60 3 290 3 293 1 323 6 44 4 
325 1 298 1 270 18 271 1 169 3 78 1 190 1 236 1 255 4 82 10 107 1 279 1 60 1 84 2 237 4 5 8 6 1 65 4 179 1 112 2 142 1 222 1 32 1 157 1 284 4 240 1 11 2 16 2 290 3 293 1 323 4 295 1 44 8 
325 1 270 8 65 2 112 1 169 1 179 1 284 2 240 1 255 2 82 4 16 1 107 1 60 1 290 2 237 2 293 1 323 3 295 1 44 4 5 4 
325 1 270 6 82 3 112 1 169 1 179 1 256 1 107 1 240 1 290 2 293 1 323 2 295 1 44 3 
65 1 270 4 112 1 169 1 78 1 284 1 11 1 255 1 82 2 84 1 60 1 378 1 290 1 237 1 323 2 44 2 5 2 
6 1 270 7 112 1 169 1 78 1 222 1 142 2 11 1 82 3 84 1 60 1 290 1 232 1 323 2 44 4 
325 2 270 23 169 3 47 1 78 2 255 2 82 11 107 2 60 4 84 2 237 2 5 4 6 2 65 2 179 1 112 3 142 2 284 2 263 1 240 1 11 2 343 1 16 2 232 1 290 5 293 1 323 9 295 1 44 12 
270 1 142 1 44 1 
6 1 270 1 82 1 
65 1 270 6 169 1 112 1 78 1 284 1 200 1 11 1 255 1 82 3 84 1 60 1 378 1 237 1 290 2 323 3 5 2 44 3 
270 12 298 1 271 1 169 2 78 2 190 1 255 1 236 1 82 6 279 1 60 1 84 2 237 1 5 2 6 1 65 1 112 2 142 1 222 1 32 1 284 1 11 2 290 1 323 2 44 6 
325 1 270 6 169 1 112 1 82 3 107 1 60 1 290 1 293 1 323 2 44 3 
325 1 270 3 65 1 179 1 47 1 284 1 240 1 255 1 82 1 16 1 107 1 60 1 290 1 237 1 323 2 44 2 5 2 
325 2 65 1 270 10 169 2 112 2 284 1 255 1 236 1 83 1 82 5 107 2 60 2 237 1 290 3 293 1 323 5 5 2 44 5 
65 1 270 2 169 1 284 1 236 1 255 1 82 2 84 1 60 1 237 1 323 1 5 2 
65 1 270 4 112 1 169 1 78 1 284 1 11 1 236 1 255 1 82 2 84 1 60 1 290 1 237 1 323 2 44 2 5 2 
325 1 270 3 65 3 47 1 157 1 284 3 236 1 255 3 16 1 82 1 107 1 60 1 237 3 290 1 323 2 44 2 5 6 
325 3 270 34 47 1 169 5 78 3 255 5 236 1 82 16 107 3 84 3 60 5 237 5 5 10 6 3 65 5 179 1 112 5 142 4 222 1 157 1 284 5 240 1 11 3 16 2 15 1 288 1 378 1 232 1 290 7 293 2 204 1 323 12 295 1 44 18 
146 1 272 1 231 1 132 1 380 1 159 1 139 1 
272 1 150 1 276 1 52 1 225 1 159 1 146 1 231 1 132 1 380 1 283 1 139 1 
181 1 205 1 167 1 319 1 256 1 158 1 261 1 206 1 121 1 153 1 177 1 
178 1 205 1 167 1 158 1 272 2 261 1 251 1 211 1 121 1 370 1 54 1 153 1 319 1 128 1 231 1 132 2 380 1 177 1 
178 1 167 1 351 1 158 1 272 2 199 1 261 1 251 1 339 1 211 1 121 1 370 2 54 1 153 3 319 2 128 2 231 1 132 2 379 1 197 1 380 2 74 1 177 1 
167 2 272 2 351 1 251 1 211 1 121 2 153 3 128 2 132 2 197 1 177 2 178 1 220 1 261 1 199 1 158 1 367 1 339 1 370 2 319 2 231 1 379 1 380 2 74 1 
205 1 167 3 79 2 121 3 153 4 126 1 128 1 130 1 195 1 197 1 216 1 87 1 177 3 220 1 31 2 261 1 199 1 158 1 35 1 373 1 319 1 18 1 379 1 
205 1 220 1 167 3 31 2 158 1 199 1 261 1 79 2 121 3 153 4 147 1 126 1 373 1 319 1 128 1 130 1 18 1 195 1 379 1 197 1 177 3 87 1 
167 1 158 1 261 1 121 1 342 1 177 1 
260 1 205 2 167 7 149 1 261 2 158 3 24 1 342 1 121 7 81 1 106 1 153 3 127 1 358 1 128 1 319 2 346 1 198 1 259 1 21 1 177 6 
325 1 235 1 270 6 167 1 169 1 272 2 251 1 207 1 302 1 210 2 211 1 24 1 121 1 53 1 255 2 105 1 54 1 153 1 82 3 26 2 128 1 107 1 361 1 312 1 132 2 237 2 138 1 5 4 177 1 178 1 65 2 112 1 179 1 158 1 261 1 284 2 240 1 370 1 319 1 73 1 231 2 290 2 293 1 323 2 380 1 295 1 44 3 
205 1 167 1 120 1 79 3 121 1 152 1 153 2 126 1 309 1 130 1 195 2 154 2 281 2 177 1 87 1 156 1 31 3 141 1 38 1 337 2 369 2 244 1 147 1 373 1 18 1 19 1 43 1 349 1 
297 1 167 2 261 1 158 2 24 1 342 1 121 2 106 1 153 2 373 1 128 1 319 1 177 2 
205 1 220 1 167 4 158 1 261 1 206 1 24 1 121 4 153 1 181 1 319 1 133 1 177 4 
350 1 167 2 77 1 199 1 261 1 158 2 121 2 81 1 153 1 127 1 128 1 319 1 185 1 177 2 
205 1 167 1 158 1 261 1 267 1 245 1 286 1 291 1 121 1 177 1 
167 2 319 1 158 1 261 1 48 1 24 1 121 2 198 1 153 1 21 1 177 2 
260 1 205 1 167 5 199 1 261 2 158 2 206 1 24 1 121 5 153 3 181 1 319 2 346 1 133 1 177 4 21 1 
260 1 205 1 167 5 199 1 261 2 158 2 206 1 24 1 121 5 153 3 181 1 319 2 96 1 133 1 177 4 21 1 
178 1 205 1 167 1 158 1 272 2 261 1 251 1 211 1 367 1 121 1 370 1 153 1 319 1 128 1 231 1 132 2 380 1 177 1 
167 1 199 1 261 1 158 2 121 1 81 1 106 1 153 1 127 1 358 1 128 1 319 1 177 1 
1 1 335 1 272 1 114 1 303 1 51 1 129 1 132 1 380 1 
1 1 166 1 296 1 
1 1 129 1 321 1 231 1 51 1 
1 1 30 1 166 1 31 2 351 1 141 1 79 2 339 1 51 2 344 1 126 1 129 2 130 1 321 2 231 1 18 1 331 1 74 1 296 1 
256 1 37 1 184 1 
76 1 37 1 39 1 360 1 184 1 28 1 348 1 
194 1 89 1 76 1 
76 2 37 1 39 1 2 1 310 1 58 1 360 1 184 1 28 2 348 1 163 1 
76 2 34 1 37 1 39 1 353 1 360 1 184 1 28 2 348 1 
160 1 119 1 76 1 374 1 310 1 336 1 245 1 28 1 39 1 286 1 348 1 
76 1 310 1 37 1 28 1 39 1 348 1 
76 1 374 1 310 1 37 1 184 1 28 1 39 1 348 1 
76 2 8 1 301 1 37 1 39 2 264 1 310 1 28 2 348 2 
76 3 37 1 39 1 353 2 227 1 160 1 374 1 310 1 360 1 362 1 184 1 134 1 28 3 348 1 
76 2 336 1 37 1 241 1 39 1 286 1 353 1 310 1 267 1 360 1 245 2 184 1 28 2 348 1 135 1 
76 3 34 1 36 1 37 1 39 1 353 2 160 1 374 1 310 1 360 1 184 1 134 1 28 3 348 1 
76 1 37 1 39 1 310 1 360 1 184 1 28 1 348 1 
76 3 37 1 39 1 353 2 160 1 374 1 360 2 184 1 134 1 28 3 348 1 
76 2 67 1 37 1 39 1 353 1 92 1 310 1 360 1 118 1 184 1 28 2 348 1 
76 2 37 1 39 1 2 1 310 1 58 1 360 1 97 1 184 1 28 2 348 1 
374 2 329 2 368 1 202 1 
140 1 76 1 310 1 28 1 39 1 348 1 
76 2 37 1 39 1 353 1 310 1 360 1 362 1 184 1 28 2 348 1 
305 1 
76 1 37 1 39 1 310 1 360 1 184 1 28 1 348 1 
76 2 37 1 39 1 310 1 58 1 360 1 184 1 28 2 348 1 
160 1 374 1 360 1 134 1 
37 1 

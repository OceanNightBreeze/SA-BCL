#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 360 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
290 1 21 1 157 3 291 6 259 4 189 1 93 1 163 1 265 2 29 1 74 9 191 1 10 1 273 2 245 2 80 2 81 1 169 5 170 1 248 1 304 1 321 2 150 9 283 2 179 2 233 1 105 1 130 1 
290 1 21 1 157 3 291 6 259 4 189 1 93 1 163 1 265 2 29 1 74 9 191 1 10 1 273 2 245 2 80 2 81 1 169 5 170 1 248 1 304 1 321 2 150 9 283 2 179 2 233 1 105 1 130 1 
290 1 21 1 157 4 291 7 259 5 189 1 93 1 163 1 265 2 29 1 74 10 191 1 10 1 273 2 245 2 80 2 81 1 169 6 170 1 248 1 304 1 321 2 150 10 283 2 179 2 233 1 105 1 130 1 
290 1 21 1 157 2 291 4 259 3 189 1 93 1 163 1 265 2 29 1 74 7 191 1 10 1 273 2 245 2 80 1 81 1 169 4 170 1 248 1 304 1 321 2 150 7 283 2 179 2 233 1 105 1 
273 1 290 1 245 1 21 1 80 2 169 3 157 1 291 3 259 2 304 1 150 4 283 1 163 1 265 1 29 1 74 4 179 1 130 1 
273 1 290 1 21 1 81 1 169 1 321 1 150 2 283 1 173 1 265 1 29 1 74 2 76 1 179 1 233 1 288 1 
290 1 21 1 169 2 157 1 291 1 259 1 321 1 189 1 150 3 283 2 29 1 74 3 179 2 
290 1 21 1 157 3 291 7 259 4 189 1 47 1 163 1 238 1 265 1 29 1 74 9 191 1 273 1 245 1 80 2 169 5 321 1 304 1 150 9 283 2 179 2 105 1 130 1 
290 1 21 1 157 3 291 7 259 4 189 1 47 1 163 1 238 1 265 1 29 1 74 9 191 1 273 1 245 1 80 2 169 5 321 1 304 1 150 9 283 2 179 2 105 1 130 1 
360 1 
32 1 342 1 343 2 
224 2 64 2 339 1 48 2 292 2 57 2 180 1 122 2 
106 1 0 1 1 1 309 1 64 2 258 1 330 1 292 2 214 2 45 1 333 2 261 2 161 1 48 3 218 1 117 1 79 1 224 2 15 1 244 2 339 1 197 1 226 1 57 2 344 1 122 3 201 1 149 1 125 1 231 1 61 1 88 2 349 1 180 1 234 1 207 1 39 1 
224 1 64 1 339 1 48 1 292 1 57 1 181 1 122 1 131 1 84 1 
2 1 342 1 278 1 111 1 292 1 122 1 59 1 25 1 48 1 126 1 240 1 351 1 193 1 131 1 
224 1 64 1 2 1 342 1 278 1 111 1 57 1 292 1 122 1 59 1 25 2 48 1 126 1 351 2 131 1 
25 1 327 1 351 1 243 1 281 1 
315 1 182 1 25 2 2 1 327 1 342 1 351 2 281 1 
25 1 327 1 351 1 
224 1 339 1 64 1 57 1 292 1 122 1 84 1 294 1 281 1 25 1 48 1 351 1 181 1 131 1 
342 1 
182 1 25 2 2 1 327 1 342 1 351 2 89 1 281 1 
182 1 274 2 2 1 327 2 318 1 311 1 359 1 342 1 281 2 25 5 285 1 27 1 95 1 174 1 317 1 351 5 115 2 299 1 30 2 
15 1 64 1 197 1 226 1 330 1 57 1 292 1 214 1 333 1 122 2 149 1 161 1 231 1 48 2 88 1 117 1 79 1 307 1 300 1 96 1 
360 1 
224 1 64 1 292 2 44 1 57 1 332 1 122 2 48 2 180 2 
246 1 67 1 300 1 
15 1 197 1 226 1 330 1 213 1 214 1 333 1 122 1 149 1 161 1 231 1 48 1 88 1 180 1 117 1 79 1 
224 1 64 3 48 3 292 3 57 3 180 1 307 1 122 3 
64 1 48 1 292 1 57 1 122 1 131 1 84 1 
224 1 64 1 48 1 292 1 57 1 44 1 332 1 122 1 131 1 
0 1 64 3 258 1 111 1 330 1 44 1 292 3 214 1 45 1 92 1 333 1 261 1 25 1 161 1 48 4 218 1 117 1 79 1 96 1 15 1 195 1 224 2 244 2 339 1 197 1 226 1 278 1 57 3 344 1 122 4 59 1 149 1 125 1 231 1 126 1 61 1 88 1 349 1 351 1 180 1 307 1 234 1 131 1 39 1 
64 1 48 2 209 1 292 2 57 1 180 1 307 1 122 2 193 1 
224 1 195 1 64 3 342 1 111 1 278 1 44 1 57 3 292 3 122 3 59 1 25 1 48 3 126 1 351 1 62 1 307 2 96 1 131 1 
224 1 64 2 246 1 44 1 57 2 292 2 122 2 48 2 307 1 300 1 
149 1 15 1 161 1 197 1 231 1 48 1 88 1 226 1 330 1 214 1 180 1 117 1 79 1 333 1 122 1 
196 1 197 1 82 1 226 1 330 1 214 1 333 1 122 1 149 1 231 1 48 1 88 1 180 1 79 1 117 1 
106 2 156 1 67 2 91 1 45 1 261 4 218 1 300 2 272 1 244 2 275 1 168 1 198 1 246 2 344 1 17 1 230 1 348 1 61 1 349 1 352 1 104 1 234 2 39 1 
64 1 316 1 126 1 48 1 292 1 57 1 122 1 131 1 
224 1 64 4 48 5 209 1 16 1 153 1 44 1 292 5 57 4 180 1 307 2 96 1 122 5 193 1 
64 2 316 1 48 2 292 2 57 2 122 2 131 1 84 1 
3 1 247 1 
3 1 247 1 
121 1 337 1 
121 1 337 1 
121 1 337 1 
3 1 28 1 247 1 
3 1 28 1 247 1 
3 1 108 1 247 1 
328 1 3 2 247 2 11 1 121 1 337 1 
3 1 28 1 247 1 
3 1 247 1 313 1 
3 1 247 1 313 1 
3 1 247 1 313 1 
223 3 3 2 247 2 66 2 187 1 342 1 68 1 112 2 293 1 228 2 229 1 25 2 368 2 369 1 205 2 351 2 11 1 269 1 270 1 
64 2 3 1 41 1 108 1 66 1 292 2 362 1 25 1 368 1 48 2 73 1 223 1 247 1 200 1 57 2 227 1 228 1 122 2 146 1 229 1 36 1 205 1 351 1 180 1 
273 1 245 1 265 1 
273 1 173 1 265 1 
273 3 245 2 22 1 173 1 331 1 12 1 
273 2 245 1 22 1 173 1 371 1 331 1 
273 2 245 1 22 2 173 1 331 1 
182 1 327 1 2 1 5 1 311 3 91 1 42 2 362 1 25 5 95 1 317 2 115 1 142 2 30 1 272 1 274 1 32 1 120 1 99 1 342 2 376 1 343 3 123 2 146 1 36 1 281 4 377 1 230 1 348 1 177 1 351 5 254 1 
289 1 182 1 327 6 2 1 311 8 91 3 134 5 25 9 8 1 162 1 95 1 317 6 115 2 142 6 30 2 220 1 272 3 243 5 274 2 32 3 120 2 342 5 99 1 343 9 145 1 123 6 146 4 281 7 377 3 230 3 348 3 174 1 177 2 380 1 351 9 
2 1 5 1 311 3 91 1 42 1 25 3 317 2 115 1 30 1 142 2 272 1 274 1 32 2 120 1 342 3 376 1 343 4 123 2 146 1 281 2 377 1 230 1 348 1 174 1 177 1 351 3 
2 1 5 1 311 5 91 2 42 2 25 4 8 1 162 1 317 4 115 1 142 4 30 1 272 2 274 1 32 3 120 1 342 4 376 1 343 7 145 1 123 4 146 2 281 3 377 2 230 2 348 2 174 1 177 1 351 4 
360 1 
236 1 117 1 
378 1 
330 1 117 1 
326 2 167 1 378 1 231 1 330 1 117 3 136 1 
231 1 330 1 117 1 
117 1 97 1 
106 4 183 1 198 2 341 1 199 1 186 1 305 1 124 1 261 7 230 1 263 1 77 1 372 1 352 3 53 2 234 3 272 1 
106 4 183 1 198 2 341 1 199 1 186 1 305 1 124 1 261 7 230 1 263 1 77 1 372 1 352 3 53 2 234 3 272 1 
106 4 183 1 198 2 341 1 199 1 186 1 279 1 305 1 124 1 261 7 230 1 263 1 77 1 372 1 352 3 53 2 234 3 272 1 
106 16 183 2 186 1 91 3 45 1 7 1 261 31 263 1 237 1 77 2 372 5 298 3 53 3 218 1 336 1 272 4 194 1 244 2 375 4 198 5 341 1 199 2 344 1 305 1 280 1 346 1 124 2 377 3 230 4 348 3 349 1 352 10 234 15 235 1 
106 5 244 4 183 1 198 3 341 1 199 1 344 2 45 2 305 1 124 1 261 9 230 1 263 1 237 1 251 1 77 1 52 1 349 2 372 1 352 4 53 2 218 2 234 4 272 1 
290 1 21 1 291 1 214 1 333 1 366 1 262 1 265 1 29 1 74 2 297 1 268 1 12 1 79 1 221 1 273 2 245 1 169 1 321 1 35 1 149 1 150 2 282 1 283 1 173 1 88 1 127 1 179 1 37 1 255 1 
290 1 291 2 214 1 333 1 366 1 262 1 265 1 29 1 74 3 297 1 268 1 12 1 79 1 221 1 273 2 245 1 169 1 321 1 35 1 85 1 149 1 250 1 150 3 282 1 283 1 173 1 88 1 179 1 37 1 129 1 
290 1 291 2 214 1 333 1 366 1 262 1 265 1 29 1 74 2 12 1 79 1 221 1 273 2 245 1 169 1 321 1 35 1 149 1 250 1 150 2 282 1 173 1 88 1 37 1 129 1 
330 1 214 1 333 1 158 1 160 1 366 2 364 1 72 1 74 1 117 1 79 1 197 1 321 2 85 1 35 2 306 1 149 1 150 1 283 1 88 1 324 1 179 1 37 2 
273 2 245 1 21 1 214 1 321 1 333 1 35 1 149 1 366 1 262 1 282 1 150 1 173 1 283 1 265 1 74 1 297 1 88 1 268 1 179 1 12 1 37 1 79 1 129 1 255 1 221 1 
276 1 
182 3 2 1 327 6 329 2 330 1 292 1 333 2 46 1 94 2 95 1 48 1 240 1 193 1 338 1 302 1 197 2 342 2 343 2 59 1 149 1 102 2 202 4 203 1 151 1 206 2 351 5 20 1 23 1 311 2 109 1 111 1 214 2 158 1 25 5 72 1 217 1 317 2 374 2 115 1 219 1 30 1 117 1 79 1 274 1 32 2 277 2 319 1 33 1 278 1 122 1 126 1 177 1 88 2 286 2 131 1 
182 1 327 2 319 1 109 1 111 1 278 1 292 1 59 1 122 1 46 1 25 3 94 1 202 2 126 1 48 1 203 1 240 1 351 3 89 1 131 1 193 1 20 1 
182 1 327 1 2 1 109 1 111 1 292 1 46 1 25 3 48 1 240 1 193 1 319 1 278 1 342 1 122 1 59 1 102 1 126 1 202 3 203 1 351 3 89 1 131 1 20 1 
182 1 327 2 2 1 109 1 111 1 329 1 292 1 46 1 25 3 48 1 94 1 240 1 193 1 319 1 278 1 342 1 122 1 59 1 102 1 126 1 202 3 203 1 351 3 89 1 131 1 20 1 
182 3 327 7 2 5 6 1 329 4 292 1 46 1 94 4 48 1 95 1 240 1 51 1 193 1 55 1 342 5 59 1 147 1 102 4 202 6 203 1 351 5 206 2 20 1 310 1 109 1 311 1 111 1 25 5 317 1 115 1 374 2 219 1 30 1 274 1 32 2 319 1 33 1 277 2 278 1 122 1 126 1 89 1 286 2 131 1 
182 2 327 4 2 1 329 2 292 1 46 1 48 1 95 1 94 2 240 1 193 1 342 2 343 2 59 1 102 2 202 4 203 1 151 1 351 4 206 2 20 1 109 1 311 1 111 1 25 4 317 1 115 1 374 2 219 1 30 1 274 1 32 2 33 1 319 1 277 2 278 1 122 1 126 1 286 2 131 1 
182 2 310 1 2 1 327 4 311 1 109 1 111 1 329 2 292 1 46 1 25 4 94 2 48 1 95 1 317 1 240 1 51 1 374 2 115 1 219 1 30 1 193 1 55 1 274 1 32 2 277 2 33 1 319 1 342 1 278 1 122 1 59 1 102 2 126 1 202 4 203 1 206 2 351 4 286 2 131 1 20 1 
182 2 310 1 2 1 327 4 311 1 109 1 111 1 329 2 292 1 46 1 25 4 94 2 48 1 95 1 317 1 240 1 51 1 374 2 115 1 219 1 30 1 193 1 55 1 274 1 32 2 277 2 33 1 319 1 342 1 278 1 122 1 59 1 102 2 126 1 202 4 203 1 206 2 351 4 286 2 131 1 20 1 
182 2 357 2 310 1 2 1 327 4 311 1 109 1 111 1 329 2 292 1 46 1 295 1 25 4 94 2 48 1 95 1 317 1 240 1 370 1 138 2 374 2 115 1 219 1 30 1 14 1 193 1 274 1 319 1 342 1 278 1 343 2 122 1 59 1 102 2 126 1 202 4 203 1 206 2 351 4 131 1 20 1 
182 2 310 1 2 1 327 5 311 1 109 1 111 1 329 3 292 1 46 1 25 4 95 1 48 1 94 3 317 1 240 1 51 1 374 2 115 1 219 1 30 1 193 1 55 1 274 1 32 2 277 2 33 1 319 1 342 1 278 1 122 1 59 1 147 1 102 3 126 1 202 5 203 1 206 2 351 4 286 2 131 1 20 1 
182 2 310 1 2 1 327 5 311 1 109 1 111 1 329 3 292 1 46 1 25 4 95 1 48 1 94 3 317 1 240 1 51 1 374 2 115 1 219 1 30 1 193 1 55 1 274 1 32 2 277 2 33 1 319 1 342 1 278 1 122 1 59 1 147 1 102 3 126 1 202 5 203 1 206 2 351 4 286 2 131 1 20 1 
182 2 327 4 2 1 329 2 292 1 46 1 48 1 95 1 94 2 240 1 138 2 14 1 193 1 342 1 343 2 59 1 102 2 202 4 203 1 151 1 351 4 206 2 20 1 357 2 109 1 311 1 111 1 25 4 317 1 115 1 374 2 219 1 30 1 274 1 319 1 278 1 122 1 126 1 131 1 
244 2 168 1 61 1 360 1 349 1 218 1 45 1 344 1 39 1 
106 8 1 1 356 1 67 11 91 1 45 2 113 1 261 14 372 1 218 2 298 3 192 1 300 11 272 1 166 1 244 4 375 3 98 1 198 1 246 4 344 2 280 1 377 2 230 2 348 2 125 1 61 1 349 2 352 2 180 1 234 6 39 2 235 1 
106 1 1 1 64 1 330 1 214 1 213 1 292 1 45 1 333 1 261 2 161 1 48 2 296 1 218 1 13 1 117 1 79 1 54 1 192 1 96 1 15 1 244 2 197 1 246 1 226 1 57 1 344 1 122 2 149 1 231 1 125 1 88 1 61 1 349 1 180 1 307 1 234 1 39 1 
0 2 1 1 91 2 330 2 292 1 45 3 333 3 190 1 48 3 53 1 96 1 192 1 300 7 15 2 244 6 197 1 198 4 341 1 246 7 199 1 57 1 344 3 305 1 149 2 348 2 61 3 349 3 352 8 307 1 106 10 64 1 256 2 65 2 67 7 214 3 260 1 261 20 263 1 161 2 77 1 372 4 218 3 79 2 117 2 165 1 272 3 226 2 122 3 377 2 230 3 125 1 231 2 87 2 88 3 180 2 129 1 234 10 38 2 39 3 
106 1 355 1 1 1 309 2 64 1 4 1 330 2 292 1 214 7 45 2 333 8 158 1 70 1 159 1 261 2 48 1 72 1 218 2 79 2 117 3 244 4 168 1 197 2 57 1 344 2 322 1 122 1 101 1 149 2 125 1 127 1 88 8 61 2 349 2 129 1 307 1 325 1 234 1 39 2 
106 1 64 1 67 1 91 1 44 1 292 1 45 1 261 3 48 1 218 1 300 1 192 1 272 1 224 1 244 2 198 1 246 1 57 1 83 1 344 1 122 1 377 1 230 1 348 1 61 1 349 1 352 1 234 2 39 1 
106 2 244 2 275 1 168 1 246 1 67 1 344 1 45 1 261 2 230 1 348 1 61 1 349 1 352 1 372 1 218 1 300 1 39 1 
244 2 168 1 198 1 156 1 246 1 67 1 91 1 344 1 45 1 261 2 61 1 349 1 352 1 218 1 300 1 234 2 39 1 272 1 
106 2 67 2 91 1 45 1 261 4 372 1 218 1 300 2 272 1 244 2 168 1 198 1 246 2 344 1 377 1 230 1 348 1 61 1 349 1 352 2 234 2 39 1 
106 2 244 2 275 1 246 1 67 1 344 1 45 1 101 1 261 2 230 1 348 1 61 1 349 1 352 1 372 1 218 1 300 1 39 1 
244 2 198 1 156 1 246 1 67 1 91 1 344 1 45 1 101 1 261 2 61 1 349 1 352 1 218 1 300 1 234 2 39 1 272 1 
106 2 67 2 91 1 45 1 261 4 372 1 218 1 300 2 272 1 244 2 198 1 246 2 344 1 101 1 377 1 230 1 348 1 61 1 349 1 352 2 234 2 39 1 
106 2 244 2 198 1 246 2 67 2 91 1 344 1 45 1 377 1 261 4 230 1 348 1 61 1 349 1 352 2 372 1 218 1 234 2 300 2 272 1 39 1 
106 1 0 1 1 1 330 1 214 1 45 1 333 1 261 2 161 1 48 1 218 1 79 1 117 1 15 1 244 2 197 1 226 1 344 1 122 1 149 1 231 1 125 1 88 1 61 1 349 1 180 1 234 1 39 1 
106 1 1 1 330 1 214 1 45 1 333 1 261 2 48 1 218 1 79 1 117 1 244 2 196 1 197 1 82 1 226 1 344 1 122 1 149 1 231 1 125 1 88 1 61 1 232 1 349 1 180 1 234 1 39 1 
106 2 67 2 91 1 45 1 261 4 372 1 218 1 192 1 300 2 272 1 244 2 198 1 246 2 344 1 377 1 230 1 348 1 61 1 349 1 352 2 234 2 39 1 
106 2 0 1 67 2 91 1 330 1 214 1 45 1 333 1 261 4 161 1 48 1 372 1 218 1 79 1 117 1 300 2 272 1 15 1 244 2 198 1 246 2 226 1 344 1 122 1 149 1 377 1 230 1 348 1 231 1 87 1 88 1 127 1 61 1 349 1 352 2 234 2 39 1 
106 2 64 1 67 1 91 1 44 1 292 1 45 1 261 3 48 1 372 1 218 1 192 1 300 1 272 1 224 1 244 2 246 1 57 1 344 1 58 1 122 1 377 1 230 1 348 1 61 1 349 1 352 1 234 1 39 1 
106 20 185 1 110 2 91 4 188 1 45 3 261 41 263 1 237 1 26 1 239 1 266 1 241 1 50 1 77 1 52 1 373 1 372 4 53 1 218 3 298 3 118 1 272 5 244 6 375 4 198 4 341 1 199 1 100 1 344 3 305 1 280 3 377 4 230 5 60 1 348 4 204 1 252 1 349 3 352 8 234 21 90 4 235 1 
106 20 185 1 110 2 91 3 188 1 45 4 261 38 263 1 237 2 26 1 239 1 266 1 241 1 50 1 77 1 52 1 373 1 372 3 53 1 218 4 298 3 118 1 272 4 244 8 375 4 198 4 341 1 199 1 100 1 344 4 305 1 280 3 377 4 230 5 60 1 348 4 204 1 252 1 349 4 352 7 234 18 90 4 235 1 
106 27 356 2 185 1 110 1 91 7 188 1 45 2 261 52 263 1 237 1 26 1 266 1 241 1 50 1 77 1 52 1 372 7 53 1 218 2 298 4 118 1 272 8 244 4 375 4 198 7 341 1 199 1 100 1 344 2 305 1 280 2 377 7 230 8 60 1 348 7 204 1 252 1 349 2 352 14 234 25 90 4 235 2 
106 9 110 1 91 3 45 2 261 19 367 1 26 1 266 1 50 1 52 1 373 1 372 3 218 2 298 1 272 3 244 4 375 2 198 3 100 1 344 2 280 1 377 3 230 3 60 2 348 3 349 2 352 6 234 10 90 2 235 1 
106 14 185 1 110 2 91 2 188 1 45 3 261 26 237 2 26 1 266 1 241 1 50 1 52 1 372 2 218 3 298 2 272 2 118 1 244 6 375 2 198 2 100 2 344 3 280 2 377 3 230 3 60 1 348 3 204 1 349 3 252 1 352 4 234 12 90 4 
368 1 3 1 247 1 211 1 66 1 205 1 293 1 11 1 228 1 270 1 
41 1 108 1 
368 1 284 1 3 1 164 1 247 1 66 1 205 1 228 1 363 1 
223 2 3 1 247 1 66 1 342 1 68 1 112 1 293 1 228 1 229 1 25 1 368 1 369 1 205 1 351 1 11 1 269 1 270 1 
223 2 3 1 247 1 66 1 342 1 68 1 112 1 293 1 228 1 229 1 25 1 368 1 369 1 205 1 351 1 11 1 269 1 270 1 
223 2 3 1 247 1 66 1 342 1 68 1 112 1 293 1 228 1 229 1 25 1 368 1 369 1 205 1 351 1 11 1 269 1 270 1 
328 1 28 1 257 1 
328 1 28 1 257 1 
313 1 335 1 
328 1 313 1 335 1 
73 1 200 1 
64 2 3 1 41 1 108 1 66 1 68 1 112 1 292 2 362 1 25 1 368 1 48 2 73 1 223 1 247 1 200 1 57 2 227 1 228 1 122 2 146 1 281 1 36 1 205 1 152 1 351 1 180 1 
28 1 257 1 
328 1 313 1 335 1 
106 1 1 1 309 2 107 1 4 1 361 1 330 1 292 2 214 2 45 1 333 2 159 1 261 2 48 2 218 1 79 1 117 1 192 1 244 2 320 1 344 1 122 2 149 1 125 1 88 2 61 1 253 1 349 1 287 1 234 1 39 1 
273 2 245 1 210 1 214 2 333 2 35 1 149 1 262 1 173 1 265 1 88 2 127 1 268 1 12 1 79 1 129 1 78 1 221 1 154 1 
273 2 245 1 210 1 214 1 333 1 35 1 365 1 149 1 262 1 173 1 265 1 88 1 268 1 12 1 129 1 79 1 221 1 
197 1 330 1 214 1 333 1 158 1 35 1 306 1 149 1 72 1 9 1 88 1 79 1 117 1 78 1 
273 2 245 1 210 1 214 1 333 1 35 1 149 1 262 1 173 1 265 1 88 1 268 1 12 1 129 1 78 1 79 1 221 1 154 1 
345 1 
360 1 
182 1 327 1 2 1 311 1 25 1 95 1 317 1 115 1 30 1 274 1 32 1 277 1 33 1 342 2 343 1 351 1 286 1 
326 2 182 3 2 2 327 5 91 2 330 3 333 3 334 2 136 1 236 3 137 2 95 4 49 2 142 6 97 2 197 1 342 8 343 12 149 4 348 2 350 1 351 5 353 1 354 1 23 1 358 2 65 2 312 1 311 9 359 1 111 2 214 3 114 2 25 5 264 2 317 8 115 4 79 3 117 10 30 4 272 2 274 4 32 6 318 1 34 1 123 6 172 2 377 2 323 2 230 2 231 3 177 2 127 1 88 3 
182 1 23 1 327 1 2 2 185 1 311 8 91 2 188 1 334 1 71 1 25 1 95 2 49 2 317 5 115 2 298 1 142 5 30 2 301 1 118 1 272 2 274 2 32 3 375 1 342 5 343 6 123 5 280 1 377 2 230 2 348 2 177 1 204 1 351 1 252 1 
64 1 311 2 292 1 334 1 294 1 25 1 263 1 48 1 95 1 49 2 317 2 77 1 115 1 30 1 55 1 272 1 224 1 274 1 339 1 199 1 57 1 122 1 84 1 230 2 351 1 178 1 181 1 131 1 
274 1 2 1 318 1 311 1 359 1 342 1 95 1 317 1 115 1 30 1 
32 5 65 1 311 5 342 5 91 2 343 10 334 1 123 5 377 2 230 2 348 2 49 2 317 5 142 5 272 2 
182 1 25 1 2 1 327 1 342 1 351 1 
354 2 182 2 327 4 23 2 311 2 330 1 214 4 333 4 158 1 25 3 95 1 72 1 317 2 115 2 242 1 79 1 117 1 30 2 338 1 274 2 302 1 197 2 143 1 149 1 174 1 177 2 88 4 350 1 351 3 
0 1 64 2 258 1 330 1 214 1 292 2 45 1 333 1 261 1 161 1 48 3 218 1 79 1 117 1 224 2 15 1 244 2 339 1 197 1 226 1 57 2 344 1 122 3 149 1 125 1 231 1 88 1 61 1 349 1 180 1 234 1 39 1 
274 1 32 2 2 2 23 1 311 1 342 4 343 4 123 2 95 1 317 2 177 1 115 1 53 1 142 2 30 1 
66 1 205 1 135 1 
66 1 205 1 135 1 
73 1 66 1 205 1 293 1 222 1 
66 1 205 1 135 1 
340 1 66 1 205 1 
340 1 66 1 205 1 
340 1 66 1 205 1 
66 1 205 1 
3 1 247 1 
106 4 185 1 45 1 261 8 263 1 52 1 77 1 53 1 298 1 218 1 272 1 244 2 375 1 198 2 341 1 199 1 344 1 305 1 280 1 230 1 349 1 352 2 234 4 
106 6 185 1 45 2 261 11 263 1 77 1 52 1 372 1 53 1 218 2 298 1 272 1 244 4 31 1 375 2 198 2 341 1 199 1 344 2 305 1 280 1 377 1 230 2 348 1 349 2 352 3 234 5 235 1 
106 9 185 1 91 2 188 1 45 3 261 19 263 1 237 1 77 1 52 1 372 1 53 1 298 1 218 3 118 1 272 3 31 1 244 6 375 1 198 3 341 1 199 1 344 3 305 1 280 1 377 2 230 3 348 2 204 1 349 3 252 1 352 4 234 10 
106 10 185 1 91 1 188 1 45 3 261 17 263 1 237 1 77 1 52 1 372 2 53 1 298 1 218 3 118 1 272 2 31 1 244 6 375 1 198 3 341 1 199 1 344 3 305 1 280 1 377 2 230 3 348 2 204 1 349 3 252 1 352 5 234 7 
106 4 185 1 45 1 261 8 263 1 52 1 77 1 53 1 298 1 218 1 272 1 244 2 375 1 198 2 341 1 199 1 344 1 305 1 280 1 230 1 349 1 352 2 234 4 
106 6 185 1 91 2 188 1 45 1 261 12 52 1 372 1 298 1 218 1 118 1 272 2 244 2 375 1 198 1 344 1 280 1 377 2 230 2 348 2 204 1 349 1 252 1 352 2 234 6 
106 10 185 1 91 1 188 1 45 4 261 18 263 1 237 2 77 1 52 1 372 2 53 1 218 4 298 1 118 1 272 2 31 1 244 8 375 1 198 3 341 1 199 1 344 4 305 1 280 1 377 2 230 3 348 2 204 1 349 4 252 1 352 5 234 8 
106 9 185 1 91 2 188 1 45 4 261 16 237 2 52 1 372 3 373 1 218 4 298 1 118 1 272 2 244 8 375 1 198 3 344 4 280 1 377 3 230 3 348 3 204 1 349 4 252 1 352 6 234 7 
106 3 198 3 341 2 199 3 305 1 261 7 230 1 263 1 77 3 352 6 372 3 234 4 272 1 
106 10 185 1 91 1 188 1 45 4 261 18 263 1 237 2 77 1 52 1 372 1 373 1 53 1 218 4 298 1 118 1 272 2 244 8 375 1 198 3 341 1 199 1 344 4 305 1 280 1 377 2 230 3 348 2 204 1 349 4 252 1 352 4 234 8 
106 4 244 4 198 2 341 1 199 1 344 2 45 2 305 1 261 8 230 1 263 1 237 1 349 2 77 1 372 1 352 3 53 1 218 2 234 4 272 1 
360 1 
106 2 31 1 244 2 198 1 91 1 344 1 45 1 377 1 261 4 230 1 348 1 349 1 352 2 372 1 218 1 234 2 272 1 
106 3 375 2 198 1 91 1 280 1 261 7 377 1 230 1 348 1 372 1 352 2 298 1 234 4 272 1 235 1 
106 11 356 1 91 2 45 2 261 23 113 1 263 1 237 2 77 2 267 1 372 4 53 1 298 2 218 2 272 3 244 4 375 2 198 5 341 1 199 2 344 2 305 1 377 2 230 3 348 2 349 2 352 9 234 12 235 1 
261 1 375 1 234 1 
261 1 106 1 298 1 
106 3 244 2 31 1 198 2 65 1 91 1 45 1 344 1 261 6 377 1 230 1 348 1 349 1 372 1 352 3 218 1 234 3 272 1 
106 6 185 1 91 2 188 1 45 1 261 12 52 1 372 1 298 1 218 1 118 1 272 2 244 2 375 1 198 1 344 1 280 1 377 2 230 2 348 2 204 1 349 1 252 1 352 2 234 6 
106 3 198 1 199 1 261 6 230 1 263 1 77 1 352 2 372 1 234 3 272 1 
106 1 244 2 198 1 341 1 199 1 344 1 45 1 305 1 261 3 237 1 77 1 267 1 349 1 372 1 352 2 218 1 234 2 
106 5 244 2 198 3 199 2 45 1 344 1 261 10 230 2 263 1 349 1 52 1 77 2 352 5 372 2 218 1 178 1 234 5 272 2 
106 2 244 2 344 1 45 1 261 2 230 1 348 1 52 1 349 1 372 1 352 1 218 1 
106 2 244 2 198 1 91 1 344 1 45 1 377 1 261 4 230 1 348 1 52 1 349 1 352 2 372 1 218 1 234 2 272 1 
106 1 244 6 198 1 199 1 344 3 45 3 261 3 237 1 267 1 52 1 349 3 77 1 373 1 352 2 372 1 218 3 234 2 
106 16 91 3 45 5 261 34 263 2 237 2 77 3 267 1 52 1 373 1 372 5 53 1 218 5 298 3 336 1 272 5 194 1 31 1 244 10 375 4 198 7 341 1 199 3 344 5 305 1 346 1 280 1 377 3 230 5 348 3 349 5 352 12 234 18 235 1 
208 1 48 1 209 1 292 1 180 1 122 1 193 1 
208 1 132 1 184 1 209 1 292 1 215 1 24 1 122 1 347 1 48 1 180 1 193 1 
197 1 88 1 360 1 214 1 333 1 
15 1 64 1 197 1 226 1 330 1 57 1 292 1 214 1 333 1 122 2 149 1 231 1 48 2 88 1 180 1 117 1 307 1 79 1 
354 1 15 1 64 2 226 1 330 2 57 1 292 2 214 1 333 1 59 1 122 2 149 1 137 1 231 2 126 1 48 2 88 1 180 1 117 3 307 1 79 1 131 1 97 1 
354 1 64 2 330 2 214 2 292 2 333 2 137 1 48 2 79 1 117 3 97 1 196 1 226 1 57 1 122 2 59 1 149 1 103 1 231 2 126 1 88 2 180 1 307 1 131 1 
354 1 326 1 327 1 2 1 111 1 330 1 214 3 333 3 236 1 137 1 25 2 79 1 117 4 97 1 197 1 144 1 342 1 149 1 249 1 103 1 231 1 88 3 351 2 
354 1 326 1 197 1 2 1 327 1 358 1 342 1 111 1 330 1 214 3 333 3 149 1 137 1 236 1 25 2 103 1 231 1 88 3 351 2 117 4 79 1 97 1 
149 1 88 1 214 1 79 1 333 1 70 1 
309 1 355 1 225 1 197 2 4 1 330 2 214 6 333 7 322 1 70 1 136 1 149 3 231 1 127 1 88 7 140 1 129 1 141 1 117 3 79 2 325 1 
0 1 330 1 292 1 45 2 333 1 48 2 53 1 192 1 300 1 15 1 244 4 198 2 246 1 341 1 199 1 57 1 344 2 305 1 149 1 61 2 349 2 352 2 307 1 106 3 64 1 67 1 214 1 261 6 263 1 161 1 77 1 218 2 79 1 117 1 272 1 320 1 226 1 122 2 230 1 231 1 87 1 88 1 127 1 180 2 38 1 234 3 39 2 
326 1 182 1 2 1 327 2 358 1 311 1 359 1 111 1 214 1 333 1 114 1 236 1 25 3 264 1 95 2 317 1 115 2 30 2 117 2 274 2 197 1 318 1 342 1 281 1 323 1 88 1 350 1 351 3 
326 1 330 1 214 2 333 2 70 1 136 1 149 2 231 1 127 1 88 2 353 1 117 2 79 1 
149 1 197 1 103 1 72 1 127 1 88 4 212 1 330 1 214 4 79 1 117 1 333 4 158 1 
354 1 225 1 330 1 214 2 333 2 260 1 148 1 149 2 86 1 231 1 88 2 140 1 117 1 79 1 
273 1 149 1 262 1 173 1 197 1 265 1 88 1 214 1 79 1 333 1 
4 1 330 1 214 2 333 2 149 1 127 1 88 2 129 1 117 1 79 1 287 1 
354 1 355 1 197 1 4 1 212 1 330 2 214 4 333 5 158 1 322 1 149 2 72 1 88 5 127 1 117 3 79 2 
354 1 197 1 4 1 212 1 330 2 214 4 333 5 158 1 322 1 149 2 72 1 88 5 127 1 117 3 79 2 308 1 
64 1 196 1 197 1 226 1 330 1 57 1 292 1 214 1 333 1 122 2 149 1 231 1 48 2 88 1 180 1 117 1 307 1 79 1 
354 1 225 1 330 1 214 1 333 1 136 1 149 2 231 1 88 1 140 1 141 1 117 1 79 1 
176 1 379 1 75 1 180 1 18 1 
195 1 2 1 342 1 111 1 278 1 59 1 18 1 281 1 25 2 216 1 126 1 379 2 176 2 75 2 351 2 63 1 180 1 116 1 131 1 
107 1 48 1 176 1 379 1 253 1 361 1 292 1 122 1 18 1 
216 1 116 1 18 1 
360 1 
290 1 150 1 283 1 169 1 29 1 74 1 179 1 
74 1 321 1 37 1 
290 1 150 3 283 1 21 1 169 1 29 1 74 3 171 1 43 1 179 1 233 2 155 1 
290 1 150 2 80 1 283 1 169 1 29 1 74 2 291 1 179 1 
273 1 245 1 150 1 283 1 21 1 265 1 169 1 74 1 259 1 179 1 304 1 
290 1 150 1 283 1 21 1 169 1 74 1 179 1 
290 2 150 1 283 1 21 1 29 1 74 1 179 1 
290 1 119 1 21 1 169 1 303 1 150 2 283 2 175 1 74 2 179 2 
290 1 21 1 169 2 157 1 291 2 259 1 150 3 283 1 29 1 74 3 191 1 179 1 105 1 
273 2 290 1 245 1 21 1 169 1 291 1 150 2 173 1 283 1 265 1 29 1 74 2 381 1 179 1 12 1 
290 1 21 1 80 1 169 2 157 1 291 2 259 1 150 4 283 2 29 1 74 4 179 2 130 1 
290 1 150 1 283 1 21 1 169 1 29 1 74 1 179 1 
290 2 56 1 169 3 157 1 171 1 291 2 259 1 150 4 283 1 29 2 74 4 179 1 233 1 155 1 
290 1 21 1 169 1 291 1 47 1 150 2 283 1 74 2 29 1 139 1 179 1 128 1 
290 1 150 3 283 1 21 1 169 1 29 1 74 3 171 1 179 1 69 1 233 2 155 2 
169 2 133 1 19 2 271 1 
40 1 150 1 283 1 21 1 74 1 179 1 
290 1 150 2 283 1 21 1 169 1 29 1 74 2 291 1 191 1 179 1 
314 1 
290 1 150 1 283 1 21 1 169 1 29 1 74 1 179 1 
290 1 21 1 169 1 291 1 150 3 283 1 74 3 29 1 191 1 179 1 233 1 
56 1 169 1 157 1 259 1 
290 1 169 1 

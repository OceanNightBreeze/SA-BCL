#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 9 243 1 23 1 166 1 245 1 246 1 167 3 26 1 139 2 138 4 27 5 117 1 6 1 119 6 297 1 229 1 177 2 301 9 324 1 305 2 125 2 153 1 377 2 240 2 103 1 65 2 360 1 40 1 
189 9 243 1 23 1 166 1 245 1 246 1 167 3 26 1 139 2 138 4 27 5 117 1 6 1 119 6 297 1 229 1 177 2 301 9 324 1 305 2 125 2 153 1 377 2 240 2 103 1 65 2 360 1 40 1 
189 10 243 1 23 1 166 1 245 1 246 1 167 4 26 1 139 2 138 5 27 6 117 1 6 1 119 7 297 1 229 1 177 2 301 10 324 1 305 2 125 2 153 1 377 2 240 2 103 1 65 2 360 1 40 1 
189 7 243 1 166 1 245 1 246 1 167 2 26 1 139 2 138 3 27 4 117 1 6 1 119 4 297 1 229 1 177 2 301 7 324 1 305 2 125 2 153 1 377 1 240 2 103 1 65 2 360 1 40 1 
229 1 177 1 301 4 324 1 189 4 243 1 305 1 23 1 125 1 245 1 167 1 138 2 377 2 240 1 27 3 65 1 119 3 40 1 
301 2 324 1 364 1 189 2 243 1 305 1 125 1 166 1 139 1 27 1 103 1 240 1 28 1 65 1 40 1 76 1 
301 3 324 1 189 3 243 1 125 2 153 1 167 1 139 1 138 1 27 2 65 2 119 1 40 1 
42 1 189 9 243 1 23 1 245 1 167 3 138 4 139 1 27 5 117 1 119 7 297 1 229 1 177 1 301 9 324 1 327 1 305 1 125 2 153 1 377 2 240 1 65 2 40 1 
42 1 189 9 243 1 23 1 245 1 167 3 138 4 139 1 27 5 117 1 119 7 297 1 229 1 177 1 301 9 324 1 327 1 305 1 125 2 153 1 377 2 240 1 65 2 40 1 
7 1 171 1 44 1 
71 2 350 1 44 1 
45 1 35 1 363 2 312 2 47 2 316 2 127 2 172 2 
108 1 363 2 312 3 134 1 89 1 72 1 73 2 221 1 92 1 45 1 95 1 222 1 367 2 248 1 47 3 316 2 197 1 170 1 172 2 318 1 299 1 278 1 371 1 304 2 326 1 148 2 282 1 124 1 35 1 154 1 206 2 180 1 333 1 104 1 127 2 66 1 39 1 
35 1 363 1 312 1 62 1 47 1 316 1 127 1 172 1 236 1 135 1 
213 1 123 1 312 1 44 1 249 1 47 1 62 1 63 1 171 1 17 1 172 1 107 1 262 1 200 1 
213 2 363 1 123 2 312 1 44 1 127 1 316 1 47 1 62 1 63 1 171 1 17 1 172 1 107 1 200 1 
213 1 123 1 161 1 285 1 64 1 
213 2 207 1 123 2 161 1 171 1 192 1 64 1 44 1 
213 1 123 1 161 1 
213 1 363 1 123 1 312 1 236 1 135 1 35 1 15 1 62 1 127 1 316 1 47 1 64 1 172 1 
44 1 
213 2 115 1 207 1 123 2 161 1 171 1 64 1 44 1 
213 5 370 2 123 5 161 2 90 1 74 1 44 1 344 1 114 1 56 1 332 1 207 1 247 2 126 1 368 1 210 2 171 1 64 2 105 1 
45 1 7 1 
363 1 312 2 160 1 342 1 45 2 47 2 127 1 316 1 172 2 
357 1 348 1 67 1 
108 1 278 1 312 1 254 1 326 1 134 1 72 1 92 1 148 1 221 1 45 1 367 1 206 1 333 1 248 1 47 1 
108 1 363 1 278 1 158 1 134 1 326 1 312 2 72 1 221 1 92 1 148 1 367 1 357 1 206 1 333 1 248 1 316 1 47 2 181 1 172 1 
45 1 363 3 158 1 312 3 127 1 47 3 316 3 172 3 
363 1 312 1 62 1 47 1 316 1 172 1 135 1 
363 1 312 1 160 1 62 1 47 1 316 1 127 1 172 1 342 1 
213 1 108 1 363 3 158 1 134 1 160 1 312 4 89 1 72 1 73 2 221 1 92 1 45 1 367 1 248 1 47 4 316 3 197 1 170 1 296 1 172 3 318 1 200 1 299 1 278 1 304 1 123 1 326 1 148 1 282 1 124 1 35 1 206 1 180 1 333 1 104 1 127 2 62 1 259 1 63 1 181 1 17 1 66 1 107 1 
45 1 363 1 100 1 158 1 249 1 312 2 47 2 316 1 172 2 
213 1 363 3 123 1 158 2 160 1 312 3 44 1 55 1 127 1 62 1 316 3 47 3 63 1 259 1 181 1 17 1 172 3 107 1 200 1 
363 2 158 1 160 1 312 2 357 1 127 1 316 2 47 2 172 2 67 1 
108 1 278 1 312 1 326 1 134 1 72 1 92 1 148 1 221 1 45 1 367 1 206 1 248 1 333 1 47 1 
312 1 326 1 134 1 233 1 72 1 92 1 148 1 221 1 22 1 45 1 367 1 206 1 248 1 333 1 47 1 
89 1 21 1 220 1 73 2 314 1 195 1 348 2 142 1 318 1 299 1 32 1 304 4 80 1 33 1 101 1 282 2 34 1 357 2 180 1 104 1 182 1 66 1 39 2 67 2 
363 1 60 1 312 1 62 1 47 1 316 1 17 1 172 1 
86 1 363 4 100 1 158 2 312 5 160 1 45 1 375 1 249 1 316 4 47 5 127 1 181 1 172 5 
363 2 60 1 312 2 62 1 47 2 316 2 172 2 135 1 
290 1 317 1 
290 1 317 1 
253 1 353 1 
253 1 353 1 
253 1 353 1 
25 1 290 1 317 1 
131 1 290 1 317 1 
94 1 253 1 290 2 317 2 353 1 294 1 
25 1 290 1 317 1 
25 1 290 1 317 1 
204 1 290 1 317 1 
204 1 290 1 317 1 
204 1 290 1 317 1 
213 2 186 2 185 1 122 2 303 1 352 1 123 2 290 2 281 1 366 1 163 2 44 1 274 2 356 1 94 1 345 2 208 1 99 3 317 2 
213 1 186 1 184 1 363 2 131 1 133 1 290 1 312 2 188 1 366 1 274 1 45 1 345 1 316 2 47 2 99 1 317 1 172 2 228 1 322 1 122 1 123 1 178 1 53 1 
177 1 240 1 305 1 
364 1 240 1 305 1 
323 1 177 2 364 1 305 3 143 1 30 1 
177 1 362 1 364 1 305 2 143 1 30 1 
177 1 364 1 305 2 30 1 143 2 
132 2 90 2 44 2 135 1 247 1 47 1 350 1 308 1 207 1 15 1 210 1 62 1 64 4 213 5 363 1 265 1 217 1 312 1 71 3 161 1 21 1 220 1 74 3 316 1 168 2 171 1 29 1 172 1 77 1 228 1 370 1 123 5 33 1 236 1 179 2 238 1 35 1 332 1 127 1 182 1 
132 2 90 2 44 2 135 1 247 1 47 1 350 1 207 1 15 1 210 1 62 1 64 4 213 5 157 2 363 1 265 1 217 1 312 1 71 3 161 3 21 1 220 1 74 3 316 1 168 2 171 1 172 1 77 1 228 1 370 1 123 5 372 1 33 1 235 1 236 1 238 1 35 1 332 1 127 1 285 2 182 1 
213 3 363 1 132 2 265 1 312 1 71 3 21 1 90 2 220 1 44 2 74 3 135 1 247 1 47 1 316 1 350 1 168 2 171 1 172 1 29 1 77 1 228 1 370 1 123 3 33 1 236 1 179 1 238 1 35 1 308 1 15 1 210 1 62 1 127 1 182 1 64 2 105 1 
132 4 339 1 90 4 44 4 135 1 247 1 47 1 350 3 149 1 150 1 308 1 210 1 15 1 62 1 64 3 105 1 213 4 363 1 265 1 71 7 312 1 21 2 220 2 74 5 168 4 316 1 171 1 29 1 172 1 77 1 228 2 370 1 123 4 33 2 236 1 179 2 238 2 35 1 127 1 182 2 
7 1 333 1 174 1 
79 1 333 1 
257 1 
333 1 221 1 
4 1 333 3 248 1 221 1 225 1 174 2 
333 1 248 1 221 1 
369 1 333 1 
2 1 32 3 110 1 304 7 70 1 80 2 268 1 82 2 8 1 33 1 282 3 10 1 152 1 182 1 227 1 361 1 39 4 
2 1 32 3 110 1 304 7 70 1 80 2 268 1 82 2 8 1 33 1 282 3 10 1 152 1 182 1 227 1 361 1 39 4 
1 1 2 1 32 3 110 1 304 7 70 1 80 2 268 1 82 2 8 1 33 1 282 3 10 1 152 1 182 1 227 1 361 1 39 4 
18 1 2 2 110 1 70 1 268 2 21 3 73 2 341 1 220 3 273 1 223 1 346 1 318 1 227 5 299 1 300 1 32 10 304 31 80 5 82 3 8 1 33 4 282 15 234 4 10 2 331 1 238 3 152 1 374 3 180 1 104 1 182 4 39 16 361 2 
2 1 70 1 110 1 268 1 73 4 273 1 97 1 318 2 227 1 299 2 32 4 304 9 80 3 82 2 8 1 33 1 256 1 282 4 10 1 180 2 104 2 182 1 39 5 361 1 
264 1 364 1 337 1 189 2 191 1 72 1 243 1 164 1 367 1 96 1 139 1 275 1 27 1 119 1 323 1 277 1 177 1 31 1 301 2 324 1 326 1 373 1 148 1 305 2 125 1 205 1 206 1 240 1 65 1 40 1 
264 1 364 1 337 1 189 3 191 1 340 1 72 1 243 1 367 1 96 1 139 1 27 1 119 2 323 1 277 1 177 1 31 1 301 3 324 1 326 1 373 1 147 1 148 1 305 2 125 1 205 1 206 1 57 1 240 1 65 1 
264 1 364 1 337 1 189 2 191 1 72 1 243 1 367 1 96 1 139 1 27 1 119 2 323 1 277 1 177 1 301 2 324 1 326 1 373 1 147 1 148 1 305 2 206 1 57 1 240 1 
242 1 19 1 365 1 189 1 340 1 191 2 72 1 92 1 221 1 367 1 139 2 48 1 277 2 301 1 326 1 373 2 148 1 125 1 206 1 14 1 333 1 65 1 241 1 
264 1 364 1 337 1 189 1 191 1 72 1 164 1 367 1 96 1 139 1 323 1 277 1 177 1 31 1 301 1 326 1 373 1 148 1 305 2 125 1 205 1 206 1 57 1 240 1 65 1 40 1 
329 1 
0 1 338 1 90 2 92 2 44 2 136 1 46 2 194 1 247 1 249 1 350 2 47 1 48 1 200 1 145 2 146 1 148 2 54 1 206 2 207 3 12 1 59 1 210 1 309 2 62 1 63 1 17 1 310 1 107 1 262 1 213 5 214 2 19 1 311 1 265 1 266 2 71 2 312 1 161 6 72 1 221 1 74 2 367 2 315 1 171 1 172 1 370 1 123 5 326 1 81 4 332 1 283 1 376 2 333 1 286 2 
0 1 213 3 311 1 312 1 338 1 161 2 46 1 115 1 249 1 47 1 172 1 200 1 123 3 81 2 283 1 207 1 59 1 62 1 63 1 17 1 107 1 262 1 
0 1 213 3 311 1 312 1 338 1 161 1 44 1 115 1 249 1 47 1 171 1 172 1 200 1 123 3 145 1 81 3 283 1 207 1 59 1 62 1 63 1 17 1 107 1 262 1 
0 1 213 3 311 1 312 1 338 1 161 2 44 1 46 1 115 1 249 1 47 1 171 1 172 1 200 1 123 3 145 1 81 3 283 1 207 1 59 1 62 1 63 1 17 1 107 1 286 1 262 1 
0 1 338 1 90 1 44 5 46 4 247 1 249 1 47 1 350 2 250 1 200 1 145 4 306 1 54 1 207 3 59 1 210 1 62 1 309 2 63 1 17 1 107 1 212 1 262 1 213 5 214 2 311 1 266 2 312 1 161 7 74 1 115 1 315 1 171 5 172 1 120 1 370 1 123 5 81 6 283 1 332 1 376 2 334 1 286 4 
0 1 338 1 90 1 44 2 46 2 136 1 247 1 249 1 47 1 350 2 200 1 145 2 54 1 207 2 59 1 210 1 62 1 309 2 63 1 17 1 107 1 262 1 213 4 214 2 311 1 266 2 312 1 71 2 161 4 74 1 315 1 171 1 172 1 370 1 123 4 81 4 332 1 283 1 376 2 286 2 
0 1 213 4 214 2 311 1 266 2 312 1 338 1 161 4 90 1 44 1 74 1 46 2 315 1 247 1 249 1 350 2 47 1 171 1 172 1 250 1 200 1 370 1 145 2 123 4 81 4 54 1 283 1 332 1 207 2 376 2 59 1 334 1 210 1 309 2 62 1 63 1 17 1 286 2 107 1 212 1 262 1 
0 1 213 4 214 2 311 1 266 2 312 1 338 1 161 4 90 1 44 1 74 1 46 2 315 1 247 1 249 1 350 2 47 1 171 1 172 1 250 1 200 1 370 1 145 2 123 4 81 4 54 1 283 1 332 1 207 2 376 2 59 1 334 1 210 1 309 2 62 1 63 1 17 1 286 2 107 1 212 1 262 1 
0 1 213 4 214 2 287 1 311 1 71 2 312 1 338 1 159 1 161 4 90 1 44 1 74 1 193 2 46 2 315 1 247 1 249 1 47 1 171 1 118 1 172 1 200 1 78 2 370 1 145 2 123 4 81 4 283 1 332 1 207 2 376 2 59 1 334 1 210 1 62 1 63 1 17 1 286 2 107 1 262 1 
0 1 213 4 214 2 311 1 266 2 312 1 338 1 161 5 90 1 44 1 74 1 46 3 315 1 247 1 249 1 350 2 47 1 171 1 172 1 250 1 120 1 200 1 370 1 123 4 145 3 81 5 54 1 332 1 283 1 207 2 376 2 59 1 334 1 210 1 309 2 62 1 63 1 17 1 107 1 286 3 212 1 262 1 
0 1 213 4 214 2 311 1 266 2 312 1 338 1 161 5 90 1 44 1 74 1 46 3 315 1 247 1 249 1 350 2 47 1 171 1 172 1 250 1 120 1 200 1 370 1 123 4 145 3 81 5 54 1 332 1 283 1 207 2 376 2 59 1 334 1 210 1 309 2 62 1 63 1 17 1 107 1 286 3 212 1 262 1 
0 1 287 1 338 1 90 1 44 1 193 2 46 2 136 1 247 1 249 1 47 1 200 1 145 2 207 2 59 1 210 1 62 1 63 1 17 1 107 1 262 1 213 4 214 2 311 1 312 1 71 2 161 4 74 1 315 1 171 1 172 1 78 2 370 1 123 4 81 4 332 1 283 1 376 2 286 2 
2 1 70 1 110 1 89 1 73 2 45 2 348 1 318 1 299 1 7 1 32 2 304 6 80 2 82 1 8 1 33 1 282 3 10 1 34 1 357 1 180 1 104 1 182 1 66 1 67 1 39 3 
129 1 18 1 89 1 21 2 73 4 220 1 45 1 348 11 349 1 170 1 227 1 318 2 299 2 252 1 276 1 32 2 371 1 304 14 280 1 80 1 33 2 282 6 234 3 331 1 238 2 374 3 357 11 180 2 104 2 182 1 66 2 39 8 67 4 
108 1 363 1 158 1 216 1 134 1 312 2 89 1 72 1 221 1 92 1 73 2 112 1 45 1 367 1 248 1 47 2 316 1 170 1 172 1 318 1 252 1 299 1 278 1 304 2 371 1 326 1 254 1 328 1 148 1 282 1 206 1 333 1 180 1 104 1 181 1 66 1 67 1 39 1 
2 1 134 2 89 3 92 1 45 2 348 7 248 2 47 3 299 3 252 1 304 20 8 1 148 3 307 2 10 1 11 1 57 1 206 3 357 7 104 3 66 3 67 7 108 2 363 1 215 2 110 1 70 1 158 1 312 3 72 2 21 2 73 6 221 2 220 2 165 1 367 3 316 1 170 1 172 1 226 2 318 3 227 4 321 2 32 8 278 2 371 1 326 2 80 4 82 1 33 3 282 10 124 2 237 1 238 2 180 3 333 2 182 3 181 1 39 10 
289 1 89 2 292 1 92 2 93 1 248 1 47 1 48 1 299 2 304 2 202 1 148 7 154 2 102 1 206 6 57 1 209 1 104 2 66 2 19 1 363 1 158 1 312 1 72 3 219 1 269 1 221 3 73 4 111 1 24 1 367 7 316 1 170 1 172 1 318 2 371 1 326 4 282 1 34 1 180 2 333 4 336 1 39 1 
85 1 363 1 160 1 312 1 89 1 21 1 73 2 220 1 348 1 316 1 47 1 172 1 318 1 299 1 252 1 32 1 304 3 80 1 33 1 282 2 238 1 357 1 180 1 127 1 104 1 182 1 66 1 67 1 39 1 
299 1 32 1 304 2 89 1 21 1 73 2 33 1 34 1 357 1 348 1 180 1 104 1 142 1 227 1 66 1 318 1 67 1 39 2 
299 1 32 1 304 2 80 1 89 1 73 2 220 1 282 2 34 1 357 1 348 1 195 1 180 1 104 1 182 1 66 1 318 1 67 1 
89 1 21 1 73 2 220 1 348 2 318 1 227 1 299 1 32 2 304 4 80 1 33 1 282 2 34 1 238 1 357 2 180 1 104 1 182 1 66 1 39 2 67 2 
299 1 32 1 304 2 89 1 21 1 292 1 73 2 33 1 357 1 348 1 180 1 104 1 142 1 227 1 66 1 318 1 67 1 39 2 
299 1 32 1 304 2 80 1 89 1 292 1 73 2 220 1 282 2 357 1 348 1 195 1 180 1 104 1 182 1 66 1 318 1 67 1 
89 1 21 1 73 2 292 1 220 1 348 2 318 1 227 1 299 1 32 2 304 4 80 1 33 1 282 2 238 1 357 2 180 1 104 1 182 1 66 1 39 2 67 2 
89 1 21 1 73 2 220 1 348 2 318 1 227 1 299 1 32 2 304 4 80 1 33 1 282 2 238 1 357 2 180 1 104 1 182 1 66 1 39 2 67 2 
108 1 134 1 312 1 89 1 72 1 221 1 92 1 73 2 45 1 367 1 248 1 47 1 170 1 318 1 299 1 278 1 371 1 304 2 326 1 148 1 282 1 124 1 206 1 333 1 180 1 104 1 66 1 39 1 
134 1 312 1 89 1 72 1 221 1 92 1 73 2 22 1 45 1 367 1 248 1 140 1 47 1 170 1 318 1 299 1 371 1 304 2 326 1 233 1 148 1 282 1 206 1 333 1 180 1 104 1 66 1 39 1 
89 1 21 1 73 2 220 1 348 2 318 1 227 1 299 1 252 1 32 2 304 4 80 1 33 1 282 2 238 1 357 2 180 1 104 1 182 1 66 1 39 2 67 2 
108 1 134 1 312 1 89 1 21 1 72 1 220 1 221 1 73 2 367 1 348 2 275 1 248 1 47 1 227 1 318 1 299 1 32 2 278 1 304 4 326 1 80 1 33 1 148 1 282 2 124 1 307 1 238 1 357 2 206 1 333 1 180 1 104 1 182 1 66 1 67 2 39 2 
363 1 160 1 312 1 89 1 21 1 220 1 73 2 348 1 316 1 47 1 172 1 227 1 318 1 299 1 252 1 32 1 304 3 33 1 282 1 238 1 284 1 357 1 180 1 127 1 104 1 182 1 66 1 39 2 67 1 
18 1 21 3 73 4 220 3 318 2 227 3 173 1 320 1 299 2 32 6 279 2 232 1 304 19 51 1 80 3 52 2 33 3 203 1 234 2 256 1 282 10 331 1 238 3 374 1 180 2 104 2 182 3 358 1 39 9 156 1 
21 3 73 6 220 2 273 2 196 1 227 2 318 3 49 1 173 1 320 2 299 3 176 1 32 4 279 4 232 1 304 26 80 2 52 1 33 3 282 12 256 1 234 2 331 2 238 3 374 2 180 3 104 3 182 2 155 1 261 1 358 2 183 1 39 14 156 1 
18 1 2 1 110 1 70 1 21 4 73 6 220 4 273 1 347 1 196 1 49 1 318 3 227 4 173 1 320 2 299 3 176 1 32 8 279 4 232 1 304 41 51 1 80 4 82 1 52 1 8 1 33 5 234 4 256 1 282 21 10 1 331 3 238 4 374 3 180 3 104 3 261 1 155 1 182 5 358 1 183 1 39 20 156 1 
18 1 2 1 110 1 70 1 21 4 73 8 220 3 273 2 347 1 196 1 49 1 318 4 227 3 173 1 320 2 299 4 176 1 32 7 279 4 232 1 304 38 51 1 80 4 82 1 52 1 8 1 33 5 234 4 256 1 282 18 10 1 331 3 238 4 374 3 180 4 104 4 261 1 155 1 182 4 358 1 183 1 39 20 156 1 
18 2 2 1 110 1 70 1 21 7 73 4 220 7 273 1 349 2 196 1 49 1 318 2 227 7 173 1 320 1 299 2 176 1 32 14 279 4 232 1 304 52 80 7 82 1 52 1 8 1 33 8 234 4 256 1 282 25 10 1 331 2 238 7 374 4 180 2 104 2 261 1 155 1 182 8 358 1 183 1 39 27 156 1 
144 1 94 1 186 1 345 1 122 1 208 1 303 1 290 1 317 1 274 1 
53 1 131 1 
186 1 345 1 122 1 325 1 290 1 317 1 3 1 298 1 274 1 
213 1 186 1 185 1 122 1 303 1 352 1 123 1 290 1 281 1 366 1 163 1 44 1 274 1 94 1 345 1 208 1 99 2 317 1 
213 1 186 1 185 1 122 1 303 1 352 1 123 1 290 1 281 1 366 1 163 1 44 1 274 1 94 1 345 1 208 1 99 2 317 1 
213 1 186 1 185 1 122 1 303 1 352 1 123 1 290 1 281 1 366 1 163 1 44 1 274 1 94 1 345 1 208 1 99 2 317 1 
25 1 36 1 294 1 
25 1 36 1 294 1 
204 1 20 1 
204 1 20 1 294 1 
322 1 184 1 
213 1 185 1 186 1 184 1 131 1 363 2 133 1 312 2 290 1 188 1 163 1 274 1 45 1 345 1 47 2 316 2 99 1 317 1 172 2 228 1 322 1 122 1 123 1 178 1 9 1 53 1 64 1 
25 1 36 1 
204 1 20 1 294 1 
289 1 312 2 218 1 89 1 72 1 162 1 221 1 73 2 24 1 367 2 47 2 170 1 172 2 318 1 252 1 299 1 230 1 302 1 371 1 304 2 326 1 148 2 282 1 154 2 206 2 333 1 37 1 180 1 104 1 66 1 39 1 
323 1 177 1 31 1 364 1 326 1 337 1 72 1 191 1 305 2 148 2 271 1 367 2 96 1 57 1 206 2 275 1 240 1 263 1 351 1 
323 1 177 1 31 1 231 1 364 1 337 1 326 1 191 1 72 1 305 2 148 1 367 1 96 1 57 1 206 1 240 1 351 1 
251 1 19 1 326 1 365 1 72 1 191 1 221 1 92 1 148 1 367 1 206 1 333 1 48 1 263 1 
323 1 177 1 31 1 364 1 326 1 337 1 191 1 72 1 305 2 148 1 271 1 367 1 96 1 57 1 206 1 240 1 263 1 351 1 
75 1 
344 1 7 1 56 1 90 1 171 1 74 1 44 1 
213 1 266 1 71 1 161 1 90 1 74 1 44 2 247 1 350 1 171 1 370 1 123 1 54 1 332 1 207 1 210 1 309 1 
132 6 291 2 90 8 92 1 91 2 44 8 344 1 247 4 98 1 248 3 350 6 198 1 146 1 148 3 355 2 151 1 56 1 206 3 207 3 210 4 63 2 213 5 69 2 265 2 71 12 161 5 72 3 21 2 313 1 272 2 221 3 220 2 74 9 367 3 275 1 224 2 168 6 171 2 225 1 226 2 174 2 369 2 370 4 79 3 123 5 326 4 33 2 330 2 238 2 332 4 333 10 182 2 378 1 379 2 
213 1 132 5 265 1 187 1 71 6 161 1 90 5 21 2 220 2 74 8 44 5 247 2 168 5 350 3 171 2 49 1 176 1 370 2 123 1 146 1 33 2 234 1 355 1 330 2 331 1 238 2 374 1 332 2 207 1 210 2 155 1 261 1 182 2 183 1 128 1 
213 1 84 1 2 1 363 1 110 1 312 1 90 2 74 2 135 1 247 1 47 1 316 1 172 1 250 1 370 1 123 1 33 2 355 1 330 2 236 1 10 1 35 1 332 1 210 1 15 1 62 1 127 1 182 1 
370 1 90 1 44 1 74 1 344 1 332 1 56 1 247 1 210 1 171 1 
132 5 71 10 21 2 90 5 33 2 220 2 355 1 330 2 44 5 74 5 238 2 168 5 350 5 182 2 226 1 
213 1 207 1 123 1 161 1 171 1 44 1 
213 3 88 1 19 1 265 2 161 4 72 1 90 2 313 1 221 1 92 2 74 2 194 1 367 4 247 2 169 1 48 1 370 2 123 3 326 1 146 2 148 4 151 2 332 1 206 4 207 2 333 1 210 2 105 1 310 1 
108 1 363 2 312 3 134 1 89 1 72 1 73 2 92 1 221 1 45 1 367 1 248 1 47 3 316 2 197 1 170 1 172 2 318 1 299 1 278 1 304 1 326 1 148 1 282 1 124 1 35 1 206 1 180 1 333 1 127 2 104 1 66 1 
370 1 132 2 265 1 71 4 146 1 82 1 90 2 74 1 44 4 332 1 247 1 210 1 350 2 168 2 171 2 
201 1 186 1 274 1 
322 1 130 1 186 1 208 1 274 1 
201 1 186 1 274 1 
201 1 186 1 274 1 
186 1 267 1 274 1 
186 1 267 1 274 1 
186 1 267 1 274 1 
186 1 274 1 
290 1 317 1 
299 2 2 1 32 3 110 1 304 8 70 1 80 2 82 1 8 1 33 1 73 4 282 4 273 1 10 1 180 2 104 2 182 1 227 1 318 2 39 4 
7 1 2 1 32 2 304 6 110 1 70 1 80 2 82 1 182 1 8 1 33 1 282 3 39 3 10 1 
299 1 32 2 304 4 80 1 21 1 220 1 73 2 33 1 282 2 238 1 180 1 104 1 182 1 318 1 227 1 39 2 68 1 
18 1 32 2 304 7 80 1 21 1 220 1 33 1 234 2 282 4 331 1 238 1 374 1 182 1 227 1 39 3 
18 1 129 1 2 2 110 1 70 1 21 2 220 2 73 4 273 2 349 1 227 4 318 2 299 2 32 9 304 23 80 5 82 1 8 1 33 3 255 1 282 12 234 2 10 2 238 2 374 2 180 2 104 2 182 3 39 11 
304 1 282 1 234 1 
374 1 304 1 39 1 
299 1 32 3 304 6 80 2 21 1 73 2 33 1 220 1 282 3 238 1 180 1 104 1 182 1 226 1 318 1 227 1 39 3 68 1 
21 2 73 2 220 2 227 1 318 1 49 1 299 1 176 1 32 2 304 12 80 1 33 2 282 6 234 1 256 1 331 1 238 2 374 1 180 1 104 1 155 1 261 1 182 2 183 1 39 6 
2 1 32 2 110 1 304 6 80 1 33 1 282 3 10 1 182 1 227 1 39 3 
299 1 2 1 32 2 304 3 70 1 80 1 8 1 255 1 73 2 282 2 273 1 10 1 180 1 104 1 227 1 318 1 39 1 
299 1 84 1 2 2 32 5 304 10 110 1 80 3 73 2 33 2 256 1 282 5 10 2 180 1 104 1 182 2 318 1 227 2 39 5 
299 1 32 1 304 2 21 1 73 2 33 1 256 1 180 1 104 1 318 1 227 1 39 2 
299 1 32 2 304 4 80 1 21 1 220 1 73 2 33 1 282 2 256 1 238 1 180 1 104 1 182 1 318 1 227 1 39 2 
299 3 2 1 32 2 304 3 51 1 80 1 255 1 73 6 282 2 256 1 273 1 10 1 180 3 104 3 318 3 227 1 39 1 
18 1 2 3 110 2 70 1 21 3 73 10 220 3 273 2 223 1 346 1 318 5 227 5 299 5 300 1 32 12 304 34 51 1 80 7 82 1 8 1 255 1 33 5 282 18 234 4 256 1 10 3 331 1 238 3 374 3 180 5 104 5 182 5 39 16 68 1 
2 1 70 1 110 1 73 2 318 1 299 1 32 2 304 8 80 2 82 1 8 1 33 1 282 4 234 1 256 1 10 1 331 1 374 1 180 1 104 1 182 1 155 1 39 4 
18 1 2 1 110 1 70 1 21 1 73 4 318 2 227 1 299 2 32 3 304 11 80 2 82 1 8 1 33 2 282 5 234 2 256 1 10 1 331 1 238 1 374 1 180 2 104 2 182 1 155 1 39 6 68 1 
2 1 110 1 70 1 21 2 73 6 220 2 273 1 227 1 318 3 49 1 299 3 176 1 32 4 304 19 80 3 82 1 8 1 33 3 282 10 234 1 256 1 10 1 331 1 238 2 374 1 180 3 104 3 155 1 261 1 182 3 183 1 39 9 68 1 
2 1 110 1 70 1 21 2 73 6 220 1 273 1 227 2 318 3 49 1 299 3 176 1 32 5 304 17 80 3 82 1 8 1 33 3 282 7 234 1 256 1 10 1 331 1 238 2 374 1 180 3 104 3 155 1 261 1 182 2 183 1 39 10 68 1 
2 1 70 1 110 1 73 2 318 1 299 1 32 2 304 8 80 2 82 1 8 1 33 1 282 4 234 1 256 1 10 1 331 1 374 1 180 1 104 1 182 1 155 1 39 4 
21 2 73 2 220 2 227 1 318 1 49 1 299 1 176 1 32 2 304 12 80 1 33 2 282 6 234 1 256 1 331 1 238 2 374 1 180 1 104 1 155 1 261 1 182 2 183 1 39 6 
2 1 110 1 70 1 21 2 73 8 220 1 273 2 227 2 318 4 49 1 299 4 176 1 32 5 304 18 80 3 82 1 8 1 33 3 282 8 234 1 256 1 10 1 331 1 238 2 374 1 180 4 104 4 155 1 261 1 182 2 183 1 39 10 68 1 
21 3 73 8 220 2 273 2 227 3 318 4 49 1 299 4 176 1 32 6 304 16 51 1 80 3 33 3 282 7 234 1 256 1 331 1 238 3 374 1 180 4 104 4 155 1 261 1 182 2 183 1 39 9 
2 3 32 6 304 7 70 1 110 1 80 3 8 2 33 1 282 4 10 3 182 1 227 3 39 3 
2 1 110 1 70 1 21 2 73 8 220 1 273 2 227 1 318 4 49 1 299 4 176 1 32 4 304 18 51 1 80 3 82 1 8 1 33 3 282 8 234 1 256 1 10 1 331 1 238 2 374 1 180 4 104 4 155 1 261 1 182 2 183 1 39 10 
45 1 100 1 13 1 312 1 249 1 47 1 172 1 
100 1 312 1 244 1 45 1 258 1 13 1 249 1 47 1 83 1 359 1 172 1 199 1 
7 1 19 1 367 1 206 1 326 1 333 1 72 1 48 1 221 1 148 1 92 1 
108 1 363 1 158 1 134 1 326 1 312 2 72 1 221 1 92 1 148 1 45 1 367 1 206 1 333 1 248 1 316 1 47 2 172 1 
369 1 108 1 363 1 158 1 134 1 326 1 312 2 291 1 72 1 221 2 148 1 45 1 151 1 367 1 206 1 333 3 248 2 62 1 316 2 47 2 17 1 172 2 200 1 
369 1 363 1 158 1 134 1 326 1 312 2 291 1 72 1 221 2 148 2 22 1 45 1 151 1 367 2 206 2 58 1 333 3 248 2 62 1 316 2 47 2 17 1 172 2 200 1 
213 2 121 1 369 1 288 1 79 1 123 2 326 1 161 1 291 1 72 1 92 1 221 1 148 3 44 1 151 1 367 3 206 3 58 1 248 1 333 4 63 1 171 1 174 1 
213 2 369 1 69 1 79 1 123 2 326 1 161 1 291 1 72 1 92 1 221 1 148 3 44 1 151 1 367 3 206 3 58 1 248 1 333 4 63 1 171 1 174 1 
367 1 206 1 326 1 72 1 148 1 336 1 
289 1 72 2 221 2 92 2 111 1 93 1 367 6 248 1 5 1 225 1 326 3 202 1 148 6 154 1 102 1 206 5 57 1 209 1 333 3 336 1 
2 1 134 1 89 2 45 2 348 1 248 1 47 2 299 2 252 1 304 6 8 1 148 1 307 1 10 1 206 1 357 1 104 2 66 2 67 1 108 1 363 1 158 1 70 1 110 1 312 2 72 1 73 4 221 1 367 1 275 1 316 1 172 1 318 2 321 1 230 1 32 2 278 1 326 1 80 2 82 1 33 1 282 3 124 1 180 2 333 1 182 1 39 3 
213 3 69 1 161 2 90 1 313 1 92 1 272 1 74 1 44 1 344 1 367 1 247 2 224 1 171 1 174 1 370 2 79 1 123 3 148 1 56 1 332 2 206 1 207 1 210 2 333 2 63 1 64 1 379 1 
367 2 206 2 275 1 326 2 333 2 248 1 72 1 221 1 225 1 378 1 148 2 336 1 174 1 
19 1 326 1 72 1 92 1 148 4 221 1 367 4 206 4 58 1 275 1 333 1 48 1 106 1 
326 2 202 1 72 1 219 1 269 1 148 2 221 1 151 1 11 1 367 2 206 2 209 1 248 1 333 1 
367 1 206 1 364 1 326 1 337 1 240 1 72 1 305 1 148 1 92 1 
367 2 57 1 206 2 275 1 326 1 333 1 289 1 218 1 72 1 221 1 148 2 
19 1 289 1 326 2 72 2 92 1 148 5 221 2 93 1 151 1 367 5 102 1 206 4 275 1 333 3 48 1 106 1 
19 1 289 1 326 2 72 2 92 1 148 5 221 2 293 1 93 1 151 1 367 5 206 4 275 1 333 3 48 1 106 1 
363 1 158 1 134 1 326 1 312 2 72 1 221 1 92 1 148 1 22 1 45 1 367 1 206 1 333 1 248 1 316 1 47 2 172 1 
326 2 202 1 72 1 148 1 221 1 151 1 367 1 206 1 209 1 248 1 333 1 5 1 225 1 
302 1 312 1 37 1 47 1 116 1 141 1 43 1 162 1 172 1 
87 1 61 1 116 1 
45 1 109 1 141 1 43 1 116 1 
213 2 87 1 109 2 123 2 43 2 44 1 45 1 239 1 61 1 62 1 116 1 141 2 63 1 259 1 171 1 17 1 64 1 107 1 200 1 
7 1 324 1 27 1 243 1 
301 1 324 1 27 1 189 1 243 1 65 1 125 1 
277 1 301 1 139 1 
301 3 324 1 189 3 243 1 125 1 27 1 103 2 65 1 211 1 335 1 40 1 319 1 
301 2 324 1 377 1 27 1 189 2 243 1 65 1 119 1 125 1 
229 1 177 1 301 1 189 1 305 1 125 1 138 1 27 1 240 1 65 1 40 1 
301 1 27 1 189 1 243 1 65 1 125 1 40 1 
301 1 324 1 189 1 243 2 65 1 125 1 40 1 
50 1 301 2 190 1 189 2 243 1 125 2 354 1 27 1 65 2 40 1 
301 3 324 1 189 3 243 1 125 1 167 1 138 1 27 2 117 1 65 1 297 1 119 2 40 1 
323 1 177 1 301 2 324 1 364 1 189 2 243 1 305 2 270 1 125 1 27 1 240 1 65 1 119 1 40 1 
301 4 324 1 189 4 243 1 125 2 23 1 167 1 138 1 377 1 27 2 65 2 119 2 40 1 
301 1 324 1 27 1 189 1 243 1 65 1 125 1 40 1 
301 4 324 2 189 4 243 2 125 1 167 1 137 1 138 1 103 1 27 3 211 1 65 1 119 2 319 1 
301 2 324 1 189 2 327 1 243 1 125 1 113 1 27 1 65 1 119 1 40 1 175 1 
301 3 324 1 189 3 243 1 125 1 343 1 27 1 103 2 211 1 65 1 40 1 319 2 
41 2 27 2 38 1 260 1 
301 1 295 1 189 1 65 1 125 1 40 1 
301 2 324 1 27 1 189 2 243 1 65 1 119 1 297 1 125 1 40 1 
16 1 
301 1 324 1 27 1 189 1 243 1 65 1 125 1 40 1 
301 3 324 1 189 3 243 1 125 1 103 1 27 1 65 1 119 1 297 1 40 1 
167 1 137 1 138 1 27 1 
27 1 243 1 

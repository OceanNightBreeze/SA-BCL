#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 66 29 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 2 326 1 199 1 202 1 327 1 73 1 277 1 144 1 99 2 48 3 123 1 170 6 210 1 106 1 336 2 295 2 213 2 60 4 158 1 180 1 265 9 90 5 63 2 163 2 222 1 67 9 323 1 248 1 
198 2 326 1 199 1 202 1 327 1 73 1 277 1 144 1 99 2 48 3 123 1 170 6 210 1 106 1 336 2 295 2 213 2 60 4 158 1 180 1 265 9 90 5 63 2 163 2 222 1 67 9 323 1 248 1 
198 2 326 1 199 1 202 1 327 1 73 1 277 1 144 1 99 2 48 4 123 1 170 7 210 1 106 1 336 2 295 2 213 2 60 5 158 1 180 1 265 10 90 6 63 2 163 2 222 1 67 10 323 1 248 1 
198 2 326 1 199 1 202 1 327 1 73 1 277 1 144 1 99 1 48 2 123 1 170 4 210 1 106 1 336 2 295 2 213 2 60 3 158 1 265 7 90 4 63 2 163 2 222 1 67 7 323 1 248 1 
198 1 326 1 199 1 106 1 295 1 213 1 60 2 99 2 180 1 265 4 90 3 48 1 63 1 163 1 222 1 67 4 170 3 248 1 
198 1 326 1 105 1 199 1 295 1 336 1 213 1 231 1 144 1 309 1 90 1 265 2 163 1 67 2 248 1 210 1 
326 1 199 1 73 1 295 2 336 1 213 2 60 1 265 3 90 2 48 1 67 3 170 1 248 1 
198 1 326 1 199 1 73 1 99 2 48 3 170 7 106 1 55 1 336 1 295 2 213 2 60 4 158 1 265 9 90 5 180 1 63 1 358 1 163 1 222 1 67 9 323 1 248 1 
198 1 326 1 199 1 73 1 99 2 48 3 170 7 106 1 55 1 336 1 295 2 213 2 60 4 158 1 265 9 90 5 180 1 63 1 358 1 163 1 222 1 67 9 323 1 248 1 
334 1 159 1 185 1 
334 1 220 1 269 2 
179 2 147 2 348 2 257 2 74 1 176 1 181 2 288 2 
250 1 21 1 45 1 307 1 229 1 74 1 344 1 278 2 119 1 147 3 283 1 103 2 348 2 257 2 168 1 188 1 8 2 288 2 81 1 258 1 9 1 83 1 239 1 155 1 260 1 176 1 241 1 132 1 12 1 89 1 179 3 93 1 219 1 244 2 95 1 181 2 246 2 
211 1 179 1 147 1 348 1 257 1 74 1 181 1 288 1 291 1 182 1 
152 1 172 1 211 1 334 1 173 1 330 1 34 1 147 1 179 1 159 1 348 1 285 1 298 1 223 1 
152 2 172 1 211 1 334 1 173 1 34 2 147 1 179 1 159 1 257 1 348 1 285 1 181 1 288 1 223 1 
152 1 117 1 290 1 259 1 34 1 
152 2 334 1 159 1 122 1 343 1 117 1 290 1 34 2 
152 1 117 1 34 1 
152 1 211 1 74 1 34 1 147 1 179 1 257 1 348 1 268 1 181 1 288 1 290 1 291 1 182 1 
334 1 
152 2 334 1 266 1 159 1 122 1 117 1 290 1 34 2 
152 5 334 1 113 1 140 2 341 1 54 1 130 1 354 1 214 2 329 1 117 2 34 5 157 2 14 1 121 1 159 1 122 1 221 1 290 2 
176 1 185 1 
227 1 11 1 176 2 147 2 179 2 348 2 257 1 181 1 288 1 
146 1 230 1 24 1 
21 1 306 1 239 1 307 1 155 1 260 1 176 1 278 1 179 1 147 1 103 1 219 1 188 1 95 1 8 1 81 1 
21 1 307 1 239 1 155 1 260 1 278 1 146 1 147 2 179 2 103 1 219 1 243 1 257 1 348 1 188 1 95 1 8 1 288 1 81 1 324 1 
227 1 43 1 153 1 176 1 330 1 87 1 147 5 179 5 257 4 348 5 243 1 181 1 288 4 324 2 
62 1 211 1 179 2 147 2 348 2 257 2 288 2 291 1 
179 3 147 3 348 3 257 3 181 1 176 1 288 3 324 1 
211 1 179 1 147 1 348 1 257 1 288 1 291 1 
211 1 227 1 179 1 147 1 11 1 348 1 257 1 181 1 288 1 
227 1 21 1 45 1 307 1 229 1 74 1 344 1 278 1 147 4 283 1 103 1 348 3 257 3 168 1 188 1 285 1 8 1 288 3 258 1 81 1 152 1 83 1 172 1 211 1 239 1 240 1 155 1 173 1 260 1 176 1 241 1 12 1 34 1 179 4 93 1 219 1 243 1 244 2 95 1 300 1 181 2 246 1 223 1 324 1 
179 2 147 2 153 1 348 2 257 1 176 1 330 1 288 1 324 1 
152 1 227 1 211 1 172 1 334 1 173 1 26 1 34 1 147 3 179 3 243 1 257 3 348 3 285 1 181 1 300 1 288 3 223 1 324 2 
146 1 227 1 179 2 147 2 348 2 257 2 230 1 181 1 288 2 324 1 
21 1 239 1 307 1 155 1 260 1 176 1 278 1 179 1 147 1 103 1 219 1 188 1 95 1 8 1 81 1 
21 1 115 1 307 1 155 1 176 1 278 1 179 1 147 1 107 1 103 1 219 1 188 1 95 1 8 1 81 1 
229 1 2 1 24 2 230 2 344 1 119 2 118 1 310 1 206 1 146 2 283 1 235 1 168 2 83 1 337 1 12 1 35 1 242 1 36 1 160 1 93 1 244 2 246 4 138 1 
211 1 172 1 62 1 179 1 147 1 348 1 257 1 288 1 
342 1 92 1 
342 1 92 1 
61 1 137 1 
61 1 137 1 
61 1 137 1 
217 1 342 1 92 1 
217 1 342 1 92 1 
342 1 92 1 237 1 
61 1 342 2 92 2 319 1 97 1 137 1 
217 1 342 1 92 1 
342 1 92 1 131 1 
342 1 92 1 131 1 
342 1 92 1 131 1 
71 1 342 1 44 1 143 1 186 1 167 1 25 1 279 1 47 1 147 2 257 2 348 2 288 2 237 1 152 1 31 1 176 1 215 1 34 1 322 1 179 2 92 1 96 1 360 1 
152 2 71 2 334 1 342 2 154 1 319 1 252 1 167 2 186 3 215 2 34 2 13 1 322 2 267 1 37 1 92 2 136 2 68 1 360 1 
198 1 63 1 163 1 
198 1 105 1 163 1 
105 1 63 2 163 3 193 1 190 1 165 1 
105 1 63 1 294 1 163 2 190 1 165 1 
105 1 63 1 163 2 165 1 190 2 
304 1 140 1 113 1 44 1 3 2 143 1 117 1 25 1 232 2 206 1 121 2 313 1 122 1 235 1 290 4 292 1 152 5 84 1 334 2 128 1 214 1 354 3 156 1 157 1 34 5 36 1 91 2 159 1 220 1 39 1 269 3 138 1 
113 1 140 2 3 2 143 2 117 4 232 2 256 1 206 1 121 2 313 1 122 1 347 1 235 1 290 5 259 3 316 3 152 7 84 1 334 3 128 1 214 2 354 3 156 1 34 7 157 2 14 1 36 1 133 1 159 1 220 1 197 1 269 3 138 1 
140 1 143 1 3 2 232 2 206 1 121 2 313 1 235 1 290 2 292 1 152 3 84 1 334 3 214 1 354 3 156 1 157 1 34 3 14 1 36 1 91 1 159 1 220 2 39 1 269 4 138 1 
152 1 14 1 140 1 214 1 39 1 197 1 157 1 34 1 292 1 
95 1 185 1 359 1 
88 1 95 1 
346 1 
155 1 188 1 95 1 
104 1 95 1 
155 1 95 1 
155 1 51 1 188 1 95 3 359 2 82 1 
212 1 2 3 203 1 119 4 310 2 206 1 218 1 297 1 207 1 6 1 80 1 168 3 162 1 40 2 246 7 138 1 19 1 
212 1 2 3 203 1 119 4 310 2 206 1 218 1 297 1 207 1 6 1 80 1 168 3 162 1 40 2 246 7 138 1 19 1 
212 1 2 3 203 1 119 4 310 2 206 1 218 1 297 1 207 1 6 1 80 1 168 3 162 1 40 2 246 7 209 1 138 1 19 1 
274 1 2 10 229 1 203 1 280 4 78 1 119 16 310 5 254 1 187 1 120 3 282 1 206 4 207 2 80 2 6 5 235 3 168 15 83 1 212 1 129 1 156 3 12 1 218 1 297 2 36 3 93 1 162 1 244 2 245 1 40 3 246 31 138 4 19 2 
229 2 2 4 203 1 119 5 311 1 310 3 206 1 207 1 80 1 6 1 168 4 189 1 83 2 212 1 129 1 12 2 297 1 93 2 244 4 162 1 40 2 246 9 138 1 19 1 
111 1 198 1 326 1 21 1 199 1 273 1 22 1 307 1 141 1 23 1 308 1 278 1 103 1 8 1 170 1 349 1 350 1 105 1 295 1 336 1 213 1 57 1 193 1 90 1 265 2 63 1 94 1 163 2 67 2 248 1 
111 1 198 1 326 1 72 1 21 1 199 1 273 1 22 1 307 1 23 1 308 1 278 1 100 1 103 1 8 1 349 1 170 2 350 1 105 1 56 1 295 1 336 1 213 1 57 1 193 1 90 1 265 3 63 1 163 2 67 3 
198 1 326 1 72 1 21 1 199 1 273 1 307 1 23 1 308 1 278 1 103 1 8 1 349 1 170 2 350 1 105 1 336 1 56 1 57 1 193 1 90 1 265 2 63 1 163 2 67 2 
184 1 21 1 273 2 307 1 114 1 155 1 336 2 295 1 213 1 76 1 308 2 278 1 338 1 265 1 149 1 100 1 103 1 95 1 8 1 67 1 81 1 349 2 125 1 
111 1 198 1 105 1 21 1 22 1 273 1 307 1 23 1 141 1 336 1 295 1 56 1 213 1 57 1 308 1 193 1 278 1 265 1 63 1 103 1 163 2 8 1 67 1 349 1 350 1 248 1 
271 1 
249 1 21 1 140 1 113 1 307 1 117 2 330 1 278 2 29 1 147 1 121 1 313 1 149 1 103 2 122 1 348 1 285 1 7 1 8 2 81 2 152 3 211 1 172 1 173 1 155 1 214 1 354 1 338 1 157 1 34 3 179 1 298 1 95 1 16 1 223 1 66 1 41 1 17 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 3 249 1 211 1 172 1 173 1 117 1 330 1 34 3 29 1 179 1 147 1 266 1 122 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 113 1 140 1 173 1 214 1 330 1 34 2 157 1 29 1 179 1 147 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 173 1 330 1 34 2 29 1 147 1 179 1 348 1 285 1 298 1 223 1 66 1 41 1 
152 2 249 1 211 1 172 1 113 1 140 1 173 1 214 1 330 1 34 2 157 1 29 1 179 1 147 1 348 1 285 1 298 1 223 1 66 1 41 1 
229 1 2 2 230 1 24 1 185 1 344 1 203 1 119 3 310 2 146 1 206 1 207 1 283 1 168 3 83 1 212 1 176 2 12 1 35 1 297 1 93 1 162 1 244 2 40 1 246 6 138 1 
274 1 45 1 2 2 229 2 24 11 230 4 344 2 280 3 119 8 310 1 187 1 120 3 146 11 206 1 6 1 283 1 235 2 168 6 9 1 83 2 293 1 176 1 58 1 156 2 356 1 12 2 36 1 38 1 93 2 244 4 195 1 246 14 138 2 
21 1 306 1 307 1 45 1 229 1 75 1 230 1 344 1 278 1 119 1 233 1 147 2 148 1 103 1 283 1 348 1 257 1 188 1 168 1 8 1 288 1 81 1 9 1 83 1 239 1 155 1 260 1 176 1 12 1 179 2 219 1 93 1 243 1 195 1 244 2 95 1 246 2 324 1 
1 2 228 1 45 1 229 3 2 8 230 7 278 3 146 7 147 3 103 3 283 3 6 4 234 2 235 2 188 2 8 3 288 1 9 1 335 2 239 2 56 1 155 2 156 2 12 3 297 1 243 1 162 1 244 6 195 1 246 20 303 2 305 1 21 2 307 2 24 7 203 1 344 3 119 10 310 4 206 3 207 1 257 1 348 1 168 10 314 1 81 1 258 2 83 3 212 1 260 2 176 2 179 3 36 2 93 3 219 2 40 1 95 2 324 1 138 3 
226 1 250 2 21 2 201 1 307 2 45 1 229 2 344 2 278 7 119 1 147 1 149 1 103 8 283 2 348 1 257 1 168 1 8 8 288 1 150 1 332 1 81 2 9 1 83 2 238 1 56 1 155 2 216 1 338 1 12 2 35 1 179 1 108 1 93 2 244 4 94 1 95 3 246 2 324 1 
227 1 2 1 229 1 230 1 24 1 344 1 119 1 310 1 146 1 206 1 147 1 283 1 257 1 348 1 235 1 168 2 288 1 83 1 32 1 156 1 12 1 179 1 36 1 93 1 244 2 195 1 181 1 246 3 138 1 
83 1 2 1 229 1 230 1 24 1 344 1 119 2 12 1 35 1 242 1 146 1 6 1 283 1 93 1 235 1 244 2 246 2 138 1 
83 1 2 1 229 1 230 1 24 1 337 1 344 1 310 1 12 1 35 1 146 1 206 1 36 1 283 1 93 1 244 2 168 2 246 2 
229 1 2 2 24 2 230 2 344 1 119 2 310 1 146 2 206 1 283 1 6 1 235 1 168 2 83 1 156 1 12 1 35 1 36 1 93 1 244 2 246 4 138 1 
83 1 201 1 2 1 229 1 230 1 24 1 344 1 119 2 12 1 242 1 146 1 6 1 283 1 93 1 235 1 244 2 246 2 138 1 
83 1 201 1 2 1 229 1 230 1 24 1 337 1 344 1 310 1 12 1 146 1 206 1 36 1 283 1 93 1 244 2 168 2 246 2 
201 1 229 1 2 2 24 2 230 2 344 1 119 2 310 1 146 2 206 1 283 1 6 1 235 1 168 2 83 1 156 1 12 1 36 1 93 1 244 2 246 4 138 1 
229 1 2 2 24 2 230 2 344 1 119 2 310 1 146 2 206 1 283 1 6 1 235 1 168 2 83 1 156 1 12 1 36 1 93 1 244 2 246 4 138 1 
21 1 307 1 45 1 229 1 344 1 278 1 119 1 147 1 103 1 283 1 188 1 168 1 8 1 258 1 81 1 9 1 83 1 239 1 155 1 260 1 176 1 12 1 179 1 219 1 93 1 244 2 95 1 246 2 
112 1 21 1 307 1 115 1 45 1 229 1 344 1 278 1 119 1 147 1 103 1 283 1 188 1 168 1 8 1 81 1 9 1 83 1 155 1 176 1 12 1 107 1 179 1 219 1 93 1 244 2 95 1 246 2 
229 1 2 2 24 2 230 2 344 1 119 2 310 1 146 2 206 1 283 1 6 1 235 1 168 2 83 1 156 1 12 1 36 1 93 1 244 2 195 1 246 4 138 1 
1 1 21 1 307 1 2 2 229 1 230 2 24 2 344 1 278 1 119 2 310 1 206 1 146 2 147 1 6 1 103 1 283 1 235 1 168 2 188 1 8 1 258 1 83 1 239 1 155 1 260 1 156 1 12 1 36 1 179 1 219 1 93 1 244 2 94 1 95 1 246 4 138 1 
227 1 2 1 229 1 24 1 230 1 344 1 119 2 206 1 146 1 147 1 6 1 283 1 257 1 348 1 235 1 168 1 236 1 288 1 83 1 156 1 12 1 36 1 179 1 93 1 244 2 195 1 181 1 246 3 138 1 
166 2 274 1 46 1 229 2 2 6 280 2 119 9 331 1 310 3 28 1 187 1 120 1 206 3 101 1 6 3 235 3 168 10 189 1 83 2 156 3 262 1 12 2 36 3 93 2 244 4 65 1 135 1 246 19 109 2 138 3 
166 1 274 2 2 4 229 3 119 14 280 2 331 1 310 2 28 1 120 2 145 1 206 2 30 1 101 2 6 2 235 3 124 1 168 12 189 1 83 3 129 2 156 3 262 2 12 3 36 2 64 1 93 3 244 6 299 1 135 1 246 26 109 4 138 3 42 1 
166 1 274 3 229 3 2 8 203 1 4 1 280 4 119 20 331 1 310 4 28 1 187 1 145 1 120 3 206 5 207 1 30 1 101 1 6 4 235 4 124 1 168 21 189 1 83 3 212 1 129 1 156 4 262 2 12 3 297 1 36 4 64 1 93 3 162 1 244 6 65 1 40 1 299 1 135 1 246 41 109 4 138 5 42 1 
166 1 274 3 229 4 2 7 203 1 4 1 280 4 119 20 331 1 310 4 28 1 187 1 145 1 120 3 206 4 207 1 30 1 101 1 6 3 235 4 124 1 168 18 189 1 83 4 212 1 129 2 156 4 262 2 12 4 297 1 36 3 64 1 93 4 162 1 244 8 65 1 40 1 299 1 135 1 246 38 109 4 138 5 42 1 
166 1 274 2 229 2 2 14 203 1 280 4 119 27 331 1 310 7 28 1 187 2 145 1 120 4 206 8 207 1 30 1 101 1 6 7 235 7 124 1 168 25 189 1 83 2 212 1 129 1 58 2 156 7 262 1 12 2 297 1 36 7 64 1 93 2 162 1 244 4 40 1 299 1 135 1 246 52 109 4 138 8 42 1 
322 1 71 1 267 1 342 1 92 1 319 1 167 1 68 1 27 1 215 1 
31 1 237 1 
322 1 71 1 342 1 92 1 50 1 167 1 301 1 215 1 79 1 
217 1 174 1 
318 1 131 1 97 1 
152 1 71 1 334 1 342 1 319 1 252 1 167 1 186 2 215 1 34 1 13 1 322 1 267 1 37 1 92 1 136 1 68 1 360 1 
152 1 71 1 334 1 342 1 319 1 252 1 167 1 186 2 215 1 34 1 13 1 322 1 267 1 37 1 92 1 136 1 68 1 360 1 
152 1 71 1 334 1 342 1 319 1 252 1 167 1 186 2 215 1 34 1 13 1 322 1 267 1 37 1 92 1 136 1 68 1 360 1 
217 1 174 1 97 1 
217 1 174 1 97 1 
318 1 131 1 
318 1 131 1 97 1 
96 1 47 1 
71 1 342 1 44 1 143 1 167 1 186 1 25 1 279 1 47 1 147 2 257 2 348 2 237 1 288 2 290 1 152 1 31 1 127 1 176 1 215 1 34 1 13 1 322 1 179 2 92 1 96 1 136 1 
226 1 250 2 21 1 307 1 45 1 229 1 344 1 278 2 119 1 147 2 103 2 283 1 348 2 168 1 8 2 150 1 9 1 83 1 353 1 155 1 178 1 12 1 15 1 179 2 161 1 93 1 195 1 244 2 95 1 246 2 18 1 
111 1 198 1 351 1 105 1 21 1 273 1 307 1 56 1 23 1 193 1 278 2 63 1 5 1 103 2 194 1 163 2 94 1 8 2 350 1 
111 1 198 1 105 1 21 1 273 1 307 1 56 1 23 1 193 1 278 1 63 1 5 1 103 1 163 2 196 1 8 1 350 1 
351 1 21 1 273 1 307 1 155 1 76 1 278 1 338 1 281 1 149 1 103 1 95 1 8 1 81 1 
111 1 198 1 351 1 105 1 21 1 273 1 307 1 56 1 23 1 193 1 278 1 63 1 5 1 103 1 194 1 163 2 8 1 350 1 
275 1 
334 1 121 1 159 1 130 1 354 1 329 1 185 1 
152 1 171 1 191 1 334 2 113 1 140 1 214 1 354 1 117 1 34 1 157 1 121 1 159 1 122 1 49 1 220 1 269 1 
183 2 140 4 276 2 328 2 329 1 3 6 278 3 232 6 98 2 103 3 234 2 51 1 235 2 188 3 7 1 8 3 286 1 10 1 151 1 152 5 192 1 104 2 334 8 155 3 156 2 157 4 159 2 21 4 113 4 307 3 117 5 77 2 255 1 206 2 121 8 313 2 122 3 81 1 130 1 261 2 354 9 214 4 86 2 34 5 321 2 88 3 36 2 220 6 94 1 95 10 359 2 223 2 269 12 138 2 
183 2 140 2 113 2 274 1 328 1 3 5 117 1 232 5 280 1 120 1 145 1 206 2 121 5 313 1 122 1 235 2 124 1 7 1 315 1 152 1 334 5 354 8 214 2 156 2 34 1 59 1 157 2 36 2 159 2 64 1 220 3 299 1 269 6 138 2 42 1 
183 2 140 1 113 1 251 1 328 1 74 1 203 1 206 1 147 1 207 1 121 2 257 1 348 1 288 1 291 1 152 1 211 1 214 1 354 2 355 1 157 1 34 1 179 1 297 1 268 1 181 1 182 1 138 2 
334 1 121 1 140 1 113 1 159 1 130 1 354 1 214 1 329 1 157 1 
183 2 334 5 328 1 354 5 3 5 156 2 232 5 206 2 121 5 36 2 234 1 235 2 220 5 269 10 138 2 
152 1 334 1 159 1 122 1 117 1 34 1 
21 1 140 2 113 1 307 1 117 4 278 4 121 2 313 2 149 1 103 4 122 2 7 2 8 4 81 2 10 1 152 3 192 2 155 1 214 2 354 2 320 1 338 1 157 2 34 3 14 1 95 1 16 1 17 1 270 1 
21 1 45 1 307 1 229 1 74 1 344 1 278 1 147 3 103 1 283 1 348 2 257 2 168 1 188 1 8 1 288 2 81 1 258 1 83 1 239 1 155 1 260 1 176 1 241 1 12 1 179 3 93 1 219 1 244 2 181 2 95 1 246 1 
113 1 140 1 334 4 214 1 354 1 3 2 232 2 157 1 121 2 313 1 159 2 220 2 40 1 7 1 269 4 
322 1 247 1 167 1 
322 1 247 1 167 1 
325 1 322 1 267 1 96 1 167 1 
322 1 247 1 167 1 
322 1 167 1 110 1 
322 1 167 1 110 1 
322 1 167 1 110 1 
322 1 167 1 
342 1 92 1 
83 2 212 1 129 1 2 3 229 2 203 1 119 4 310 2 12 2 206 1 207 1 297 1 6 1 93 2 168 4 244 4 162 1 40 1 246 8 138 1 
212 1 2 2 185 1 203 1 119 3 310 2 206 1 207 1 297 1 168 3 162 1 40 1 246 6 138 1 
20 1 83 1 2 2 229 1 156 1 119 2 310 1 12 1 206 1 36 1 6 1 93 1 235 1 168 2 244 2 246 4 138 1 
274 1 2 2 156 1 280 2 119 3 310 1 187 1 120 1 206 1 36 1 6 1 235 1 168 4 246 7 138 1 
70 1 2 9 229 2 203 1 119 11 280 2 310 5 187 1 120 2 206 3 207 2 6 4 235 2 168 12 83 2 212 1 129 2 58 1 156 2 356 1 12 2 297 2 36 2 93 2 162 1 244 4 40 1 246 23 138 3 
168 1 246 1 280 1 
120 1 246 1 119 1 
83 1 20 1 229 1 2 3 156 1 119 3 310 2 12 1 206 1 36 1 6 1 93 1 234 1 235 1 244 2 168 3 246 6 138 1 
274 1 229 1 2 2 280 1 119 6 310 1 120 1 145 1 206 2 6 1 235 2 168 6 124 1 189 1 83 1 156 2 12 1 36 2 93 1 64 1 244 2 299 1 246 12 138 2 42 1 
2 2 203 1 119 3 310 1 206 1 207 1 297 1 6 1 168 3 246 6 138 1 
70 1 83 1 212 1 129 1 2 2 229 1 119 1 310 1 12 1 297 1 207 1 6 1 93 1 162 1 168 2 244 2 246 3 
83 1 229 1 2 5 203 1 355 1 119 5 310 3 12 1 206 2 207 2 297 2 6 2 93 1 244 2 168 5 246 10 189 1 138 2 
83 1 229 1 2 1 119 2 12 1 6 1 93 1 235 1 244 2 246 2 189 1 138 1 
83 1 2 2 229 1 156 1 119 2 310 1 12 1 206 1 36 1 6 1 93 1 235 1 168 2 244 2 246 4 189 1 138 1 
70 1 83 3 129 1 229 3 2 2 119 1 310 1 12 3 207 1 297 1 6 1 93 3 168 2 244 6 65 1 246 3 189 1 
70 1 20 1 274 1 229 5 2 12 203 2 280 4 78 1 119 16 310 7 254 1 187 1 120 3 206 5 207 3 6 5 235 3 168 18 189 1 83 5 212 1 129 2 156 3 12 5 297 3 36 3 93 5 162 1 245 1 244 10 40 1 65 1 246 34 138 5 
274 1 229 1 2 2 203 1 280 1 119 4 310 2 120 1 206 1 207 1 168 4 189 1 83 1 212 1 12 1 297 1 93 1 244 2 162 1 40 1 246 8 138 1 42 1 
20 1 274 1 229 2 2 3 203 1 280 2 119 6 310 2 187 1 120 1 206 1 207 1 6 1 235 1 168 5 189 1 83 2 212 1 156 1 12 2 297 1 93 2 162 1 244 4 40 1 246 11 138 2 42 1 
20 1 274 1 229 3 2 4 203 1 280 1 119 9 310 3 120 1 145 1 206 3 207 1 6 1 235 2 168 10 124 1 189 1 83 3 212 1 129 1 156 2 12 3 297 1 36 2 64 1 93 3 162 1 244 6 40 1 299 1 246 19 138 3 42 1 
20 1 274 1 229 3 2 5 203 1 280 1 119 10 310 3 120 1 145 1 206 2 207 1 6 2 235 2 168 7 124 1 189 1 83 3 212 1 129 1 156 2 12 3 297 1 36 1 93 3 64 1 162 1 244 6 40 1 299 1 246 17 138 3 42 1 
274 1 229 1 2 2 203 1 280 1 119 4 310 2 120 1 206 1 207 1 168 4 189 1 83 1 212 1 12 1 297 1 93 1 244 2 162 1 40 1 246 8 138 1 42 1 
274 1 229 1 2 2 280 1 119 6 310 1 120 1 145 1 206 2 6 1 235 2 168 6 124 1 189 1 83 1 156 2 12 1 36 2 93 1 64 1 244 2 299 1 246 12 138 2 42 1 
20 1 274 1 229 4 2 5 203 1 280 1 119 10 310 3 120 1 145 1 206 2 207 1 6 2 235 2 124 1 168 8 189 1 83 4 212 1 129 2 156 2 12 4 297 1 36 1 64 1 93 4 162 1 244 8 40 1 299 1 246 18 138 3 42 1 
274 1 229 4 2 6 280 1 119 9 310 3 120 1 145 1 206 2 6 3 235 3 124 1 168 7 189 1 83 4 129 2 156 3 12 4 36 2 64 1 93 4 244 8 65 1 299 1 246 16 138 3 42 1 
212 1 2 6 203 1 119 3 310 3 206 1 207 3 297 3 6 3 168 4 162 2 246 7 138 1 
274 1 229 4 2 4 203 1 280 1 119 10 310 3 120 1 145 1 206 2 207 1 6 1 235 2 124 1 168 8 189 1 83 4 212 1 129 2 156 2 12 4 297 1 36 1 64 1 93 4 162 1 244 8 40 1 65 1 299 1 246 18 138 3 42 1 
179 1 147 1 153 1 357 1 348 1 176 1 330 1 
153 1 176 1 116 1 330 1 204 1 345 1 263 1 147 1 179 1 357 1 348 1 340 1 
21 1 149 1 103 1 307 1 155 1 95 1 185 1 8 1 278 1 81 1 338 1 
21 1 307 1 155 1 260 1 176 1 278 1 147 2 179 2 103 1 219 1 257 1 348 1 188 1 95 1 8 1 288 1 81 1 324 1 
104 1 211 1 172 1 192 1 21 1 307 1 155 2 260 1 176 1 278 1 98 1 147 2 179 2 103 1 219 1 257 2 348 2 285 1 188 2 95 3 8 1 288 1 324 1 
21 1 307 1 278 2 98 1 147 2 102 1 103 2 348 2 257 2 188 2 285 1 8 2 288 1 192 1 172 1 211 1 104 1 155 2 176 1 107 1 179 2 219 1 95 3 324 1 
21 1 307 1 117 1 278 3 98 1 102 1 103 3 188 1 8 3 81 1 152 2 126 1 192 1 104 1 317 1 334 1 155 1 34 2 88 1 159 1 95 4 359 1 223 1 
152 2 104 1 192 1 334 1 21 1 276 1 307 1 155 1 117 1 278 3 98 1 34 2 88 1 102 1 159 1 103 3 188 1 95 4 8 3 359 1 81 1 223 1 
21 1 103 1 307 1 8 1 278 1 332 1 
226 1 250 1 21 3 238 1 307 2 56 1 155 2 278 6 216 1 108 1 339 1 103 7 51 1 188 1 94 1 95 3 8 7 134 1 169 1 332 1 81 2 
1 1 229 2 2 2 230 1 278 1 146 1 147 2 103 1 283 2 188 1 8 1 288 1 335 1 239 1 155 1 12 2 15 1 297 1 244 4 195 1 162 1 246 6 21 1 307 1 24 1 344 2 203 1 119 3 310 2 206 1 207 1 257 1 348 1 168 3 258 1 83 2 212 1 260 1 176 2 179 2 93 2 219 1 94 1 95 1 40 1 324 1 138 1 
140 2 113 2 276 1 329 1 117 2 278 1 77 1 121 1 103 1 122 1 8 1 81 1 290 1 10 1 152 3 334 1 130 1 354 1 214 2 261 1 86 1 157 2 34 3 88 1 159 1 95 2 359 1 223 1 
21 2 307 1 155 1 278 2 103 2 51 1 188 1 94 1 95 2 8 2 359 1 332 1 151 1 
139 1 21 1 307 1 155 1 278 4 338 1 102 1 149 1 103 4 94 1 95 1 8 4 81 1 
192 1 21 2 228 1 307 1 155 1 278 2 339 1 103 2 208 1 188 1 95 1 8 2 287 1 169 1 
198 1 105 1 21 1 103 1 307 1 163 1 8 1 278 1 81 1 350 1 
226 1 21 1 307 1 56 1 155 1 278 2 178 1 103 2 94 1 95 1 8 2 
139 1 226 1 192 1 21 2 238 1 307 2 155 2 278 4 338 1 149 1 108 1 103 5 94 1 95 3 8 5 81 1 
139 1 226 1 192 1 21 2 238 1 307 2 155 2 278 4 338 1 264 1 149 1 103 5 94 1 95 3 8 5 81 1 
21 1 307 1 155 1 176 1 278 1 147 2 179 2 107 1 103 1 219 1 257 1 348 1 188 1 95 1 8 1 288 1 81 1 324 1 
192 1 21 2 307 1 155 1 278 1 339 1 103 1 51 1 188 1 95 1 8 1 134 1 169 1 
333 1 352 1 284 1 176 1 85 1 
152 2 333 2 211 1 172 1 334 1 352 1 173 1 176 1 142 1 85 2 34 2 296 1 159 1 284 2 285 1 300 1 223 1 290 1 52 1 
333 1 352 1 353 1 85 1 147 1 179 1 161 1 348 1 18 1 
296 1 352 1 142 1 
90 1 326 1 199 1 185 1 
90 1 326 1 265 1 199 1 295 1 213 1 67 1 
336 1 308 1 67 1 
326 1 199 1 295 1 213 1 205 1 90 1 265 3 67 3 302 1 224 1 248 1 210 2 
99 1 90 1 326 1 265 2 199 1 295 1 213 1 67 2 170 1 
198 1 90 1 265 1 63 1 106 1 295 1 213 1 163 1 67 1 248 1 60 1 
90 1 326 1 265 1 295 1 213 1 67 1 248 1 
326 2 265 1 199 1 295 1 213 1 67 1 248 1 
272 1 326 1 53 1 200 1 295 2 213 2 90 1 265 2 67 2 248 1 
326 1 199 1 295 1 213 1 60 1 158 1 265 3 90 2 48 1 67 3 323 1 170 2 248 1 
198 1 326 1 105 1 199 1 295 1 175 1 213 1 193 1 90 1 265 2 63 1 163 2 67 2 170 1 248 1 
326 1 199 1 295 2 213 2 60 1 99 1 265 4 180 1 90 2 48 1 67 4 170 2 248 1 
90 1 326 1 265 1 199 1 295 1 213 1 67 1 248 1 
326 2 199 2 295 1 213 1 60 1 265 4 90 3 48 1 67 4 224 1 302 1 170 2 225 1 210 1 
326 1 199 1 55 1 295 1 213 1 90 1 265 2 312 1 67 2 170 1 248 1 69 1 
326 1 199 1 295 1 213 1 33 1 90 1 265 3 67 3 302 1 224 2 248 1 210 2 
0 1 90 2 289 2 253 1 
265 1 295 1 213 1 67 1 248 1 164 1 
158 1 90 1 326 1 265 2 199 1 295 1 213 1 67 2 170 1 248 1 
177 1 
90 1 326 1 265 1 199 1 295 1 213 1 67 1 248 1 
158 1 90 1 326 1 265 3 199 1 295 1 213 1 67 3 170 1 248 1 210 1 
90 1 48 1 225 1 60 1 
90 1 326 1 

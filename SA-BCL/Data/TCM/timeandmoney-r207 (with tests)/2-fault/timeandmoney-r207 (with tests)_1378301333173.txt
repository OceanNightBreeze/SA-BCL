#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
15 2 97 1 365 1 226 2 22 2 78 2 176 2 41 9 228 2 79 1 200 3 80 1 107 1 54 6 321 1 235 1 287 5 160 2 89 4 308 9 260 1 292 1 293 1 326 1 241 1 120 1 332 1 268 1 
15 2 97 1 365 1 226 2 22 2 176 2 78 2 41 9 228 2 79 1 200 3 80 1 107 1 54 6 321 1 235 1 287 5 160 2 89 4 308 9 260 1 292 1 293 1 326 1 241 1 120 1 332 1 268 1 
15 2 97 1 365 1 226 2 22 2 176 2 78 2 41 10 228 2 79 1 200 4 80 1 107 1 54 7 321 1 235 1 287 6 160 2 89 5 308 10 260 1 292 1 293 1 326 1 241 1 120 1 332 1 268 1 
15 2 97 1 365 1 226 2 22 2 176 2 78 1 41 7 228 2 79 1 200 2 80 1 107 1 54 4 321 1 287 4 160 2 89 3 308 7 260 1 292 1 293 1 326 1 241 1 120 1 332 1 268 1 
107 1 15 1 54 3 321 1 97 1 235 1 287 3 226 1 160 1 89 2 176 1 308 4 292 1 78 2 41 4 228 1 200 1 241 1 
15 1 363 1 321 1 97 1 287 1 160 1 226 1 22 1 114 1 176 1 308 2 41 2 293 1 326 1 231 1 241 1 
15 2 54 1 321 1 97 1 287 2 89 1 22 1 176 2 308 3 41 3 79 1 200 1 241 1 
107 1 15 2 270 1 54 7 321 1 97 1 235 1 287 5 226 1 160 1 89 4 75 1 22 1 78 2 292 1 260 1 176 2 308 9 41 9 228 1 79 1 200 3 241 1 268 1 
107 1 15 2 270 1 54 7 321 1 97 1 235 1 287 5 226 1 160 1 89 4 75 1 22 1 78 2 292 1 260 1 176 2 308 9 41 9 228 1 79 1 200 3 241 1 268 1 
165 1 322 1 311 1 
164 2 311 1 60 1 
319 2 64 1 220 2 336 2 146 2 338 2 329 2 49 1 
220 3 168 1 16 1 271 1 222 1 336 3 146 2 224 1 170 1 339 1 338 2 40 1 247 1 175 1 103 1 152 1 3 1 251 1 253 1 49 1 50 2 372 2 319 2 204 1 320 1 26 2 288 2 378 1 262 1 64 1 380 1 266 1 216 2 329 2 166 1 144 1 217 1 
319 1 220 1 336 1 146 1 338 1 246 1 329 1 59 1 299 1 49 1 
52 1 93 1 220 1 181 1 336 1 223 1 146 1 246 1 315 1 19 1 209 1 343 1 165 1 311 1 
319 1 52 1 220 1 181 1 336 1 223 1 146 1 338 1 246 1 315 2 209 2 343 1 165 1 311 1 329 1 
14 1 154 1 315 1 209 1 132 1 
165 1 154 1 311 1 315 2 126 1 61 1 209 2 132 1 
154 1 315 1 209 1 
319 1 220 1 336 1 146 1 277 1 338 1 246 1 315 1 59 1 299 1 209 1 329 1 49 1 132 1 
311 1 
165 1 73 1 154 1 311 1 315 2 126 1 209 2 132 1 
203 1 81 1 182 2 335 1 124 2 315 5 126 1 20 1 300 1 209 5 213 1 23 1 187 1 139 1 165 1 154 2 311 1 282 2 132 2 
204 1 220 2 222 1 336 2 146 1 224 1 353 1 338 1 378 1 262 1 91 1 380 1 266 1 216 1 251 1 166 1 329 1 50 1 372 1 254 1 
64 1 322 1 
319 1 220 2 336 2 146 2 364 1 338 1 64 2 329 1 47 1 
255 1 353 1 173 1 
204 1 220 1 222 1 336 1 123 1 224 1 378 1 262 1 64 1 266 1 380 1 216 1 251 1 166 1 50 1 372 1 
319 1 91 1 64 1 220 3 336 3 146 3 338 3 329 3 
220 1 336 1 146 1 338 1 246 1 329 1 59 1 
319 1 220 1 336 1 146 1 364 1 338 1 246 1 329 1 47 1 
220 4 16 1 271 1 222 1 223 1 336 4 146 3 224 1 74 1 338 3 246 1 315 1 40 1 247 1 343 1 103 1 152 1 3 1 251 1 253 1 47 1 49 1 50 1 372 1 254 1 204 1 319 2 52 1 181 1 320 1 26 1 288 2 209 1 378 1 262 1 91 1 64 1 380 1 266 1 216 1 166 1 329 3 144 1 267 1 
91 1 64 1 220 2 336 2 146 2 338 1 329 1 19 1 87 1 
319 1 52 1 220 3 181 1 336 3 223 1 146 3 338 3 74 1 315 1 246 1 209 1 343 1 91 2 151 1 311 1 329 3 47 1 254 1 
319 1 220 2 336 2 146 2 338 2 353 1 173 1 91 1 329 2 47 1 
204 1 220 1 222 1 336 1 224 1 378 1 262 1 64 1 266 1 380 1 216 1 251 1 166 1 50 1 372 1 
220 1 222 1 336 1 273 1 224 1 378 1 262 1 64 1 266 1 380 1 216 1 166 1 50 1 372 1 234 1 
269 1 16 1 271 1 274 1 170 2 341 1 173 2 247 1 103 1 302 1 130 1 152 1 255 2 320 1 26 4 353 2 288 2 29 1 115 1 66 1 142 1 143 1 144 2 361 1 
52 1 220 1 250 1 336 1 146 1 338 1 246 1 329 1 
319 1 219 1 220 5 336 5 146 5 338 4 19 1 87 1 91 2 64 1 329 4 349 1 47 1 254 1 
220 2 250 1 336 2 146 2 338 2 246 1 329 2 59 1 
138 1 354 1 
138 1 354 1 
150 1 330 1 
150 1 330 1 
150 1 330 1 
138 1 354 1 289 1 
138 1 157 1 354 1 
138 2 205 1 150 1 225 1 354 2 330 1 
138 1 354 1 289 1 
138 1 354 1 289 1 
138 1 134 1 354 1 
138 1 134 1 354 1 
138 1 134 1 354 1 
305 2 133 1 298 1 225 1 354 2 315 2 18 3 278 2 290 1 113 1 209 2 138 2 263 2 227 1 309 1 188 1 311 1 230 2 167 2 
220 2 336 2 146 2 38 1 338 2 18 1 315 1 230 1 370 1 24 1 305 1 53 1 374 1 157 1 354 1 208 1 113 1 209 1 138 1 263 1 211 1 64 1 329 2 167 1 
228 1 226 1 160 1 
363 1 226 1 160 1 
228 2 363 1 119 1 160 3 100 1 35 1 
228 1 363 1 119 1 160 2 100 1 101 1 
228 1 363 1 119 2 160 2 100 1 
335 3 38 1 124 1 315 5 126 1 195 1 300 2 341 1 301 2 130 1 149 1 280 2 154 1 282 1 132 4 182 1 184 1 208 1 60 1 57 2 185 1 209 5 377 1 63 1 211 1 139 1 32 1 66 1 164 3 165 1 311 2 361 1 
122 1 14 5 335 8 124 2 315 9 126 1 195 2 300 6 341 3 23 1 229 1 130 3 43 1 280 6 154 6 282 2 132 7 182 2 60 3 57 6 291 1 161 1 209 9 377 1 63 3 211 4 139 1 32 2 66 3 164 9 165 1 311 5 381 1 331 5 361 3 
220 1 336 1 335 3 146 1 277 1 124 1 338 1 246 1 315 3 299 1 195 1 301 1 341 1 300 2 23 1 149 1 130 1 280 2 282 1 49 1 132 2 319 1 182 1 184 1 59 1 60 2 57 2 209 3 211 1 63 1 32 1 66 1 164 4 165 1 329 1 311 3 361 1 
335 3 336 1 146 1 338 1 246 1 299 1 195 1 300 4 341 2 301 2 149 1 49 1 59 1 57 3 60 2 161 1 209 4 63 2 211 2 164 5 66 1 165 1 311 3 361 1 122 1 220 1 124 1 277 1 315 4 23 1 130 2 280 3 282 1 132 3 319 1 182 1 184 1 32 1 329 1 381 1 
262 1 322 1 174 1 
262 1 27 1 
158 1 
262 1 224 1 
262 3 163 1 351 1 380 1 224 1 174 2 
262 1 380 1 224 1 
262 1 242 1 
269 2 297 1 108 1 72 1 170 4 26 7 341 1 366 1 21 1 210 2 7 1 214 1 328 1 142 3 144 3 48 1 361 1 
269 2 297 1 108 1 72 1 170 4 26 7 341 1 366 1 21 1 210 2 7 1 214 1 328 1 142 3 144 3 48 1 361 1 
269 2 297 1 108 1 72 1 170 4 26 7 341 1 21 1 366 1 210 2 7 1 214 1 328 1 142 3 144 3 48 1 361 1 106 1 
269 5 297 1 16 1 271 1 72 2 17 1 170 16 125 1 127 1 21 1 366 1 341 4 247 1 103 1 317 3 130 3 48 1 108 2 284 1 84 4 110 1 26 31 288 2 210 3 7 2 63 3 214 5 66 3 328 2 118 1 142 10 144 15 360 1 361 4 
269 3 297 1 16 2 271 2 72 1 170 5 341 1 21 1 247 2 103 2 48 1 350 1 108 1 110 1 26 9 288 4 210 2 7 1 238 1 214 1 328 1 142 4 144 4 361 1 
192 1 15 1 94 1 363 1 37 1 97 1 226 1 22 1 176 1 41 2 228 1 129 1 252 1 369 1 372 1 50 1 54 1 321 1 287 1 112 1 160 2 307 1 308 2 325 1 266 1 216 1 166 1 241 1 296 1 35 1 
218 1 192 1 15 1 363 1 37 1 97 1 226 1 22 1 176 1 41 3 228 1 129 1 252 1 372 1 50 1 54 2 321 1 285 1 287 1 112 1 160 2 307 1 308 3 325 1 266 1 216 1 166 1 92 1 35 1 296 1 
192 1 363 1 54 2 321 1 285 1 97 1 287 1 226 1 160 2 22 1 307 1 308 2 325 1 41 2 228 1 129 1 266 1 216 1 252 1 166 1 92 1 50 1 372 1 35 1 296 1 
218 1 192 2 15 1 224 1 337 1 99 1 22 2 76 1 176 1 308 1 378 1 262 1 41 1 179 1 266 1 199 1 216 1 252 2 166 1 12 1 50 1 372 1 296 2 
192 1 15 1 94 1 363 1 37 1 226 1 22 1 176 1 41 1 228 1 129 1 252 1 372 1 50 1 285 1 112 1 160 2 307 1 308 1 325 1 266 1 216 1 166 1 241 1 296 1 35 1 
359 1 
333 2 93 1 335 2 336 1 146 1 246 1 98 2 99 1 195 1 300 2 343 1 154 6 50 2 52 1 109 2 5 2 60 2 58 1 209 5 262 1 164 2 9 1 266 1 165 1 67 1 216 2 311 2 12 1 166 1 220 1 223 1 275 1 314 2 224 1 124 1 315 5 316 2 171 1 126 3 19 1 172 1 77 1 178 1 282 1 372 2 181 1 182 1 135 2 85 1 136 4 137 1 378 2 379 1 139 1 34 1 
220 1 93 1 223 1 336 1 146 1 275 1 73 1 315 3 246 1 19 1 126 1 172 1 178 1 343 1 154 2 52 1 181 1 135 1 136 2 209 3 9 1 34 1 
220 1 93 1 223 1 336 1 146 1 275 1 73 1 315 3 246 1 19 1 316 1 126 1 172 1 178 1 343 1 154 1 52 1 181 1 136 3 209 3 9 1 34 1 165 1 311 1 
333 1 220 1 93 1 223 1 336 1 146 1 275 1 73 1 315 3 246 1 126 1 19 1 316 1 172 1 178 1 343 1 154 2 52 1 181 1 135 1 136 3 209 3 9 1 34 1 165 1 311 1 
333 4 36 1 93 1 336 1 335 1 146 1 246 1 98 2 300 1 343 1 154 7 52 1 109 2 5 2 60 2 209 5 9 1 165 5 311 5 312 1 313 1 220 1 223 1 275 1 73 1 124 1 314 2 315 5 126 3 19 1 316 4 171 1 172 1 77 1 178 1 282 1 181 1 182 1 135 4 136 6 139 1 34 1 190 1 295 1 
333 2 93 1 336 1 335 1 146 1 246 1 98 2 300 1 343 1 154 4 52 1 109 2 5 2 60 2 209 4 9 1 164 2 165 1 311 2 220 1 223 1 275 1 124 1 314 2 315 4 19 1 171 1 126 2 316 2 172 1 77 1 178 1 282 1 181 1 182 1 135 2 136 4 137 1 139 1 34 1 
333 2 220 1 93 1 335 1 223 1 336 1 146 1 275 1 314 2 124 1 315 4 246 1 316 2 126 2 98 2 171 1 19 1 300 1 172 1 77 1 178 1 343 1 154 4 282 1 52 1 181 1 109 2 182 1 135 2 5 2 136 4 60 2 209 4 139 1 9 1 165 1 34 1 311 1 190 1 313 1 295 1 
333 2 220 1 93 1 335 1 223 1 336 1 146 1 275 1 314 2 124 1 315 4 246 1 316 2 126 2 98 2 171 1 19 1 300 1 172 1 77 1 178 1 343 1 154 4 282 1 52 1 181 1 109 2 182 1 135 2 5 2 136 4 60 2 209 4 139 1 9 1 165 1 34 1 311 1 190 1 313 1 295 1 
333 2 220 1 93 1 335 1 223 1 336 1 146 1 275 1 314 2 124 1 315 4 246 1 316 2 126 2 171 1 19 1 300 1 172 1 248 1 1 1 178 1 343 1 154 4 282 1 155 2 52 1 181 1 109 2 182 1 135 2 206 1 136 4 55 2 209 4 139 1 164 2 9 1 165 1 34 1 311 1 295 1 
333 3 220 1 93 1 335 1 223 1 336 1 146 1 275 1 314 2 124 1 315 4 246 1 126 2 98 2 171 1 19 1 316 3 300 1 172 1 77 1 178 1 343 1 154 5 282 1 52 1 181 1 109 2 182 1 5 2 135 3 136 5 60 2 209 4 139 1 9 1 165 1 34 1 311 1 190 1 313 1 312 1 295 1 
333 3 220 1 93 1 335 1 223 1 336 1 146 1 275 1 314 2 124 1 315 4 246 1 126 2 98 2 171 1 19 1 316 3 300 1 172 1 77 1 178 1 343 1 154 5 282 1 52 1 181 1 109 2 182 1 5 2 135 3 136 5 60 2 209 4 139 1 9 1 165 1 34 1 311 1 190 1 313 1 312 1 295 1 
333 2 93 1 336 1 335 1 146 1 246 1 300 1 343 1 154 4 155 2 52 1 109 2 206 1 55 2 209 4 9 1 164 2 165 1 311 1 220 1 223 1 275 1 124 1 314 2 315 4 19 1 171 1 126 2 316 2 172 1 178 1 282 1 181 1 182 1 135 2 136 4 137 1 139 1 34 1 
269 2 297 1 16 1 271 1 72 1 170 3 173 1 21 1 341 1 247 1 103 1 152 1 48 1 255 1 320 1 108 1 322 1 353 1 26 6 288 2 29 1 210 1 64 2 142 2 144 3 361 1 
269 1 168 1 16 2 271 2 17 1 170 8 40 1 341 2 173 4 247 2 103 2 317 3 130 2 152 2 255 11 320 1 183 1 84 3 26 14 353 11 86 1 288 4 236 1 162 1 63 2 64 1 214 1 239 1 66 1 142 2 144 6 360 1 361 1 
220 2 168 1 222 1 271 1 16 1 123 1 336 2 146 1 224 1 338 1 170 1 39 1 40 1 173 1 247 1 42 1 103 1 152 1 251 1 368 1 372 1 50 1 254 1 204 1 320 1 26 2 288 2 378 1 262 1 91 1 64 1 239 1 380 1 266 1 216 1 166 1 329 1 144 1 
297 1 336 3 146 1 338 1 40 1 148 2 341 3 247 3 103 3 2 1 152 3 251 2 253 2 48 1 50 3 254 1 204 2 255 7 306 2 108 1 353 7 210 1 262 2 63 2 64 2 214 4 65 1 66 2 266 2 216 3 166 2 361 3 269 4 220 3 168 1 16 3 271 3 222 2 272 2 72 1 224 2 170 10 21 1 173 7 130 2 372 3 233 2 320 3 285 1 26 20 288 6 378 1 91 1 239 1 294 1 380 2 329 1 142 8 144 10 
145 1 220 1 168 1 16 2 271 2 336 1 96 1 146 1 224 2 338 1 170 1 339 2 99 1 40 1 247 2 103 2 249 1 367 1 152 2 369 1 372 8 50 7 201 1 318 1 320 2 285 1 26 2 323 1 288 4 29 1 378 2 262 3 91 1 266 2 216 8 329 1 166 2 12 1 144 1 
269 1 220 1 16 1 271 1 169 1 336 1 146 1 338 1 170 1 173 1 341 1 247 1 103 1 130 1 152 1 47 1 319 1 255 1 320 1 353 1 26 3 288 2 63 1 239 1 66 1 142 1 329 1 144 2 361 1 
255 1 320 1 271 1 16 1 353 1 26 2 170 2 288 2 29 1 173 1 341 1 247 1 115 1 214 1 103 1 130 1 152 1 142 1 
269 1 255 1 320 1 271 1 16 1 353 1 26 2 288 2 29 1 173 1 247 1 103 1 302 1 66 1 152 1 142 1 144 2 361 1 
269 1 16 1 271 1 170 2 341 1 173 2 247 1 103 1 130 1 152 1 255 2 320 1 26 4 353 2 288 2 29 1 63 1 214 1 66 1 142 2 144 2 361 1 
255 1 320 1 271 1 16 1 353 1 26 2 170 2 288 2 173 1 341 1 247 1 115 1 214 1 103 1 130 1 152 1 142 1 201 1 
269 1 255 1 320 1 271 1 16 1 353 1 26 2 288 2 173 1 247 1 103 1 302 1 66 1 152 1 142 1 144 2 201 1 361 1 
269 1 16 1 271 1 170 2 341 1 173 2 247 1 103 1 130 1 152 1 201 1 255 2 320 1 26 4 353 2 288 2 63 1 214 1 66 1 142 2 144 2 361 1 
269 1 16 1 271 1 170 2 341 1 173 2 247 1 103 1 130 1 152 1 255 2 320 1 26 4 353 2 288 2 63 1 214 1 66 1 142 2 144 2 361 1 
220 1 168 1 222 1 271 1 16 1 336 1 224 1 170 1 40 1 247 1 103 1 152 1 251 1 253 1 372 1 50 1 204 1 320 1 26 2 288 2 378 1 262 1 64 1 380 1 266 1 216 1 166 1 144 1 
220 1 168 1 222 1 271 1 16 1 273 1 336 1 224 1 170 1 40 1 247 1 103 1 152 1 372 1 50 1 234 1 320 1 26 2 288 2 378 1 262 1 64 1 265 1 380 1 266 1 216 1 166 1 144 1 
269 1 16 1 271 1 170 2 341 1 173 2 247 1 103 1 130 1 152 1 255 2 320 1 26 4 353 2 288 2 63 1 239 1 214 1 66 1 142 2 144 2 361 1 
269 1 220 1 222 1 271 1 16 1 336 1 224 1 170 2 173 2 341 1 247 1 103 1 130 1 152 1 251 1 369 1 253 1 372 1 50 1 233 1 204 1 255 2 320 1 353 2 26 4 288 2 262 1 63 1 214 1 66 1 380 1 266 1 216 1 142 2 166 1 144 2 361 1 
220 1 16 1 271 1 336 1 146 1 338 1 170 2 341 1 173 1 247 1 103 1 130 1 152 1 47 1 319 1 180 1 255 1 320 1 26 3 353 1 288 2 63 1 214 1 239 1 66 1 142 1 329 1 144 1 361 1 
269 4 16 2 271 2 334 2 276 1 17 2 170 14 0 1 341 4 247 2 103 2 317 2 130 4 281 4 4 1 350 1 83 1 352 1 84 4 26 30 288 4 30 1 63 4 214 3 66 4 327 1 11 1 142 7 144 16 360 2 13 1 361 4 
16 1 271 1 334 1 276 1 170 5 341 1 247 1 103 1 317 1 130 1 281 2 350 1 352 2 83 1 84 1 26 10 288 2 30 1 63 1 66 1 327 2 144 5 360 1 361 1 
269 2 16 2 271 2 334 1 276 1 17 2 170 13 341 3 247 2 103 2 317 3 130 3 281 4 4 1 350 1 83 1 352 2 84 5 257 1 26 28 288 4 30 1 63 3 214 2 66 3 327 1 11 1 142 4 144 15 360 3 13 1 361 3 
269 3 16 2 271 2 334 1 276 1 17 2 170 13 341 3 247 2 103 2 317 3 130 3 281 4 4 1 350 1 83 1 352 2 84 5 257 1 26 28 288 4 30 1 63 3 214 2 66 3 327 1 11 1 142 5 144 15 360 3 13 1 361 3 
269 6 297 3 16 1 271 1 334 1 72 3 276 1 17 1 170 22 21 3 341 6 247 1 103 1 317 3 130 3 281 4 48 3 4 1 350 1 108 3 183 1 83 1 352 1 84 3 26 41 288 2 210 3 30 1 63 3 214 3 66 3 327 1 142 9 144 19 360 2 13 1 361 6 
138 1 305 1 133 1 263 1 227 1 153 1 225 1 354 1 230 1 167 1 
157 1 24 1 
6 1 138 1 305 1 263 1 354 1 230 1 131 1 167 1 69 1 
305 1 133 1 225 1 315 1 354 1 18 2 278 1 290 1 113 1 209 1 138 1 263 1 227 1 309 1 188 1 311 1 230 1 167 1 
305 1 133 1 225 1 315 1 354 1 18 2 278 1 290 1 113 1 209 1 138 1 263 1 227 1 309 1 188 1 311 1 230 1 167 1 
305 1 133 1 225 1 315 1 354 1 18 2 278 1 290 1 113 1 209 1 138 1 263 1 227 1 309 1 188 1 311 1 230 1 167 1 
205 1 289 1 259 1 
205 1 289 1 259 1 
134 1 25 1 
134 1 25 1 205 1 
53 1 374 1 
220 2 95 1 336 2 38 1 146 2 338 2 315 1 18 1 278 1 230 1 370 1 132 1 24 1 305 1 53 1 374 1 157 1 354 1 208 1 290 1 209 1 138 1 263 1 211 1 64 1 329 2 167 1 
289 1 259 1 
134 1 25 1 205 1 
220 2 168 1 271 1 16 1 336 2 96 1 146 2 224 1 170 1 339 2 40 1 247 1 103 1 367 1 152 1 105 1 372 2 50 2 320 1 111 1 26 2 324 1 56 1 288 2 237 1 262 1 239 1 266 1 216 2 166 1 144 1 
192 1 363 1 285 1 375 1 226 1 160 2 112 1 307 1 228 1 129 1 198 1 266 1 216 2 166 1 369 1 232 1 50 2 372 2 35 1 
192 1 363 1 285 1 226 1 160 2 112 1 307 1 228 1 129 1 266 1 216 1 68 1 166 1 232 1 50 1 372 1 35 1 
192 1 224 1 99 1 76 1 378 1 262 1 31 1 198 1 266 1 216 1 166 1 12 1 50 1 372 1 
192 1 363 1 285 1 375 1 226 1 160 2 112 1 307 1 228 1 129 1 198 1 266 1 216 1 166 1 232 1 50 1 372 1 35 1 
245 1 
203 1 213 1 335 1 165 1 322 1 311 1 300 1 
335 1 124 1 315 1 98 1 126 1 300 1 77 1 154 1 282 1 182 1 5 1 60 1 209 1 139 1 164 1 165 1 311 2 
242 2 335 9 340 1 195 2 148 2 341 2 300 8 196 2 342 2 343 2 347 1 154 5 50 3 203 1 156 1 57 6 60 6 62 1 209 5 262 10 163 1 264 2 63 2 213 1 215 2 164 12 66 2 266 4 117 2 165 2 216 3 166 3 311 8 358 2 361 2 224 3 124 4 315 5 126 3 174 2 279 2 130 2 280 6 369 1 282 4 372 3 182 4 27 3 28 1 376 2 378 1 379 1 139 4 380 3 
221 1 335 8 124 2 315 1 126 1 195 1 300 5 341 2 317 1 130 2 303 1 280 5 154 1 282 2 104 1 4 1 182 2 84 1 258 1 57 5 60 3 376 1 209 1 186 1 63 2 379 1 215 2 139 2 164 6 66 2 165 2 311 5 360 1 70 1 361 2 
220 1 297 1 336 1 335 2 72 1 146 1 124 1 277 1 338 1 246 1 315 1 299 1 341 2 300 2 102 1 282 1 49 1 319 1 108 1 182 1 59 1 376 1 209 1 215 2 139 1 329 1 313 1 361 1 
203 1 213 1 139 1 182 1 335 1 165 1 124 1 311 1 282 1 300 1 
335 5 57 5 60 5 148 1 341 2 300 5 376 1 63 2 215 2 130 2 164 10 66 2 280 5 311 5 361 2 
165 1 154 1 311 1 315 1 126 1 209 1 
335 2 224 1 124 2 340 2 315 3 126 2 99 1 195 2 300 2 23 1 154 4 282 2 372 4 50 4 182 2 85 1 62 1 209 3 378 2 262 1 139 1 379 2 266 1 67 1 216 4 166 1 12 1 240 1 362 1 
220 3 16 1 271 1 222 1 336 3 146 2 224 1 338 2 40 1 247 1 103 1 152 1 3 1 251 1 253 1 372 1 50 1 49 1 319 2 204 1 320 1 26 1 288 2 378 1 262 1 64 1 266 1 380 1 216 1 329 2 166 1 144 1 
182 1 335 1 124 1 57 2 60 2 195 1 300 2 210 1 139 1 379 1 164 4 280 2 165 2 282 1 311 4 
263 1 197 1 230 1 
133 1 263 1 53 1 346 1 230 1 
263 1 197 1 230 1 
263 1 197 1 230 1 
263 1 230 1 371 1 
263 1 230 1 371 1 
263 1 230 1 371 1 
263 1 230 1 
138 1 354 1 
269 2 297 1 271 2 16 2 108 1 110 1 72 1 26 8 170 4 288 4 341 1 21 1 210 1 247 2 214 1 103 2 142 3 144 4 48 1 361 1 
269 2 297 1 108 1 72 1 322 1 170 3 26 6 21 1 341 1 210 1 142 2 144 3 48 1 361 1 
269 1 271 1 16 1 244 1 170 2 26 4 288 2 341 1 247 1 63 1 103 1 214 1 130 1 66 1 142 2 144 2 361 1 
269 1 84 2 17 1 26 7 170 3 341 1 63 1 214 1 317 1 130 1 66 1 142 2 144 4 360 1 361 1 
269 5 297 1 271 2 16 2 72 2 17 1 170 11 21 1 341 3 247 2 103 2 317 2 130 2 48 1 108 2 183 1 84 2 110 2 26 23 288 4 236 1 210 1 63 2 214 4 66 2 8 1 142 9 144 12 361 3 
84 1 26 1 144 1 
317 1 26 1 170 1 
269 2 16 1 271 1 244 1 26 6 170 3 288 2 148 1 341 1 247 1 63 1 103 1 214 1 130 1 66 1 142 3 144 3 361 1 
269 1 16 1 271 1 170 6 341 2 247 1 103 1 317 1 130 2 303 1 104 1 4 1 350 1 84 1 26 12 288 2 63 2 186 1 214 1 66 2 142 2 144 6 360 1 361 2 70 1 
269 1 297 1 108 1 72 1 170 3 26 6 341 1 214 1 142 2 144 3 361 1 
269 1 108 1 271 1 16 1 72 1 110 1 170 1 26 3 288 2 21 1 247 1 214 1 103 1 8 1 142 2 144 2 48 1 
350 1 269 3 297 1 16 1 271 1 108 2 72 2 170 5 26 10 288 2 341 2 247 1 103 1 102 1 214 2 142 5 144 5 361 2 
350 1 271 1 16 1 170 2 26 2 288 2 341 1 247 1 103 1 214 1 130 1 142 1 
269 1 350 1 271 1 16 1 170 2 26 4 288 2 341 1 247 1 63 1 103 1 214 1 130 1 66 1 142 2 144 2 361 1 
350 1 269 1 271 3 16 3 108 1 110 1 72 1 26 3 170 1 288 6 247 3 103 3 214 1 8 1 11 1 142 2 144 2 
269 7 297 2 16 5 271 5 72 3 17 1 244 1 125 1 170 16 127 1 21 1 341 5 247 5 103 5 317 3 130 3 48 1 350 1 108 3 284 1 110 2 84 4 26 34 288 10 210 1 63 3 214 5 8 1 66 3 11 1 142 12 144 18 360 1 361 5 
269 2 297 1 16 1 271 1 72 1 170 4 341 1 21 1 247 1 103 1 317 1 48 1 4 1 350 1 108 1 84 1 26 8 288 2 210 1 142 2 144 4 360 1 361 1 
269 2 297 1 16 2 271 2 72 1 17 1 244 1 170 6 21 1 341 2 247 2 103 2 317 1 130 1 48 1 4 1 350 1 108 1 84 2 26 11 288 4 210 1 63 1 214 1 142 3 144 5 360 1 361 1 
269 3 297 1 16 3 271 3 72 1 244 1 170 9 21 1 341 3 247 3 103 3 317 1 130 2 303 1 104 1 48 1 4 1 350 1 108 1 84 1 110 1 26 19 288 6 210 1 63 2 186 1 214 1 66 2 142 4 144 10 360 1 70 1 361 3 
269 3 297 1 16 3 271 3 72 1 244 1 170 10 21 1 341 3 247 3 103 3 317 1 130 2 303 1 104 1 48 1 4 1 350 1 108 1 110 1 84 1 26 17 288 6 210 1 63 2 186 1 214 2 66 1 142 5 144 7 360 1 361 2 70 1 
269 2 297 1 16 1 271 1 72 1 170 4 341 1 21 1 247 1 103 1 317 1 48 1 4 1 350 1 108 1 84 1 26 8 288 2 210 1 142 2 144 4 360 1 361 1 
269 1 16 1 271 1 170 6 341 2 247 1 103 1 317 1 130 2 303 1 104 1 4 1 350 1 84 1 26 12 288 2 63 2 186 1 214 1 66 2 142 2 144 6 360 1 361 2 70 1 
269 3 297 1 16 4 271 4 72 1 244 1 170 10 21 1 341 3 247 4 103 4 317 1 130 2 303 1 104 1 48 1 4 1 350 1 108 1 84 1 110 2 26 18 288 8 210 1 186 1 63 2 214 2 66 1 142 5 144 8 360 1 70 1 361 2 
269 3 16 4 271 4 170 9 341 3 247 4 103 4 317 1 130 3 303 1 104 1 4 1 350 1 84 1 110 2 26 16 288 8 186 1 63 3 214 3 66 2 11 1 142 6 144 7 360 1 70 1 361 2 
269 3 297 1 108 3 72 3 26 7 170 3 21 2 341 1 214 3 142 6 144 4 48 1 361 1 
269 3 297 1 16 4 271 4 72 1 170 10 21 1 341 3 247 4 103 4 317 1 130 2 303 1 104 1 48 1 4 1 350 1 108 1 84 1 110 2 26 18 288 8 210 1 186 1 63 2 214 1 66 1 11 1 142 4 144 8 360 1 70 1 361 2 
64 1 220 1 336 1 146 1 19 1 87 1 90 1 
220 1 336 1 146 1 87 1 19 1 159 1 356 1 90 1 177 1 64 1 345 1 33 1 
378 1 262 1 266 1 224 1 322 1 216 1 166 1 12 1 99 1 372 1 50 1 
220 2 222 1 336 2 146 1 224 1 338 1 378 1 262 1 91 1 64 1 380 1 266 1 216 1 251 1 329 1 166 1 50 1 372 1 
52 1 181 1 220 2 242 1 222 1 336 2 146 2 224 2 338 2 246 1 340 1 262 3 264 1 91 1 64 1 380 2 266 1 216 1 251 1 329 1 166 1 50 1 372 1 
220 2 222 1 242 1 336 2 146 2 224 2 338 2 340 1 246 1 372 2 50 2 234 1 52 1 181 1 373 1 262 3 91 1 264 1 64 1 266 1 380 2 216 2 166 1 329 1 
242 1 224 1 340 1 315 2 174 1 343 1 154 1 348 1 372 3 50 3 51 1 373 1 27 1 209 2 378 1 262 4 264 1 266 1 380 1 216 3 165 1 166 1 311 1 
373 1 242 1 224 1 27 1 315 2 340 1 209 2 174 1 378 1 262 4 343 1 264 1 380 1 266 1 165 1 216 3 154 1 311 1 166 1 50 3 372 3 358 1 
318 1 266 1 216 1 166 1 372 1 50 1 
318 1 145 1 285 1 224 2 339 1 323 1 378 2 262 3 212 1 163 1 249 1 116 1 367 1 380 1 266 3 216 7 369 1 141 1 166 2 50 6 372 7 
297 1 336 2 146 1 338 1 341 1 247 2 103 2 152 2 251 1 253 1 50 1 48 1 204 1 255 1 108 1 353 1 56 1 210 1 262 1 64 2 266 1 216 1 166 1 361 1 269 2 220 2 16 2 271 2 222 1 272 1 72 1 224 1 170 3 173 1 21 1 369 1 372 1 233 1 320 2 26 6 288 4 91 1 239 1 380 1 329 1 142 2 144 3 
335 1 124 2 315 3 126 1 300 1 174 1 196 1 342 1 343 1 279 1 154 2 282 2 372 1 50 1 132 1 203 1 182 2 27 1 62 1 209 3 378 1 262 2 213 1 139 2 165 1 216 1 311 1 358 1 
318 1 224 1 28 1 174 1 262 2 163 1 380 1 266 2 216 2 369 1 166 1 50 2 372 2 
373 1 243 1 224 1 99 1 378 1 262 1 266 1 216 4 369 1 12 1 166 1 50 4 372 4 
82 1 224 1 340 1 262 1 116 1 294 1 380 1 266 2 216 2 141 1 166 1 46 1 50 2 372 2 
378 1 363 1 129 1 266 1 216 1 166 1 226 1 160 1 372 1 50 1 
285 1 224 1 324 1 262 1 367 1 266 1 216 2 369 1 166 1 50 2 372 2 
145 1 243 1 224 2 340 1 323 1 99 1 378 1 262 3 367 1 266 2 216 5 12 1 369 1 166 2 50 4 372 5 
243 1 224 2 340 1 323 1 99 1 378 1 262 3 367 1 266 2 216 5 12 1 369 1 189 1 166 2 50 4 372 5 
220 2 222 1 336 2 146 1 224 1 338 1 378 1 262 1 91 1 64 1 380 1 266 1 216 1 329 1 166 1 50 1 372 1 234 1 
224 1 340 1 262 1 212 1 163 1 116 1 380 1 266 2 216 1 141 1 166 1 50 1 372 1 
261 1 64 1 193 1 71 1 286 1 
52 1 181 1 193 1 223 1 71 2 286 2 74 1 246 1 355 1 315 2 209 2 261 2 343 1 64 1 357 1 310 1 165 1 311 1 132 1 
261 1 220 1 193 1 336 1 146 1 71 1 111 1 105 1 237 1 
310 1 357 1 193 1 
321 1 322 1 97 1 287 1 
308 1 176 1 41 1 15 1 321 1 97 1 287 1 
308 1 252 1 22 1 
15 1 321 1 147 1 97 1 287 1 176 1 308 3 41 3 326 2 44 1 140 1 241 1 
78 1 308 2 176 1 41 2 54 1 15 1 321 1 97 1 287 1 
107 1 15 1 287 1 89 1 160 1 226 1 176 1 308 1 41 1 228 1 241 1 
308 1 176 1 41 1 15 1 97 1 287 1 241 1 
308 1 176 1 41 1 15 1 321 1 97 2 241 1 
308 2 176 2 41 2 15 2 194 1 45 1 10 1 97 1 287 1 241 1 
15 1 54 2 321 1 97 1 287 2 89 1 176 1 308 3 260 1 41 3 200 1 241 1 268 1 
363 1 15 1 54 1 321 1 97 1 287 1 160 2 226 1 128 1 176 1 308 2 41 2 228 1 241 1 35 1 
15 2 54 2 321 1 97 1 235 1 287 2 89 1 176 2 308 4 78 1 41 4 200 1 241 1 
308 1 176 1 41 1 15 1 321 1 97 1 287 1 241 1 
202 1 54 2 15 1 321 2 97 2 287 3 89 1 308 4 176 1 41 4 326 1 44 1 140 1 200 1 
308 2 176 1 41 2 283 1 54 1 15 1 321 1 304 1 97 1 287 1 241 1 75 1 
15 1 321 1 207 1 97 1 287 1 176 1 308 3 41 3 326 2 44 2 140 1 241 1 
344 2 256 1 287 2 88 1 
308 1 176 1 41 1 15 1 241 1 121 1 
308 2 176 1 41 2 54 1 15 1 321 1 97 1 287 1 241 1 268 1 
191 1 
308 1 176 1 41 1 15 1 321 1 97 1 287 1 241 1 
54 1 15 1 321 1 97 1 287 1 176 1 308 3 41 3 326 1 241 1 268 1 
202 1 200 1 287 1 89 1 
97 1 287 1 

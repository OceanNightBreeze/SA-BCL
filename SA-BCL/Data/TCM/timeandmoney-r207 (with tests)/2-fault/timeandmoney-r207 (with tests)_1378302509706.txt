#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
302 1 353 1 83 1 328 9 231 1 162 3 273 2 138 2 252 1 113 7 37 1 368 5 340 1 317 2 92 1 343 9 170 4 72 1 73 1 124 1 278 1 47 1 223 1 263 1 
302 1 353 1 83 1 328 9 231 1 162 3 273 2 138 2 252 1 113 7 37 1 368 5 340 1 317 2 92 1 343 9 170 4 72 1 73 1 124 1 278 1 47 1 223 1 263 1 
302 1 353 1 228 1 83 1 328 9 231 1 86 1 162 3 273 2 138 2 252 1 113 6 37 1 368 5 340 2 317 2 92 1 119 1 343 9 69 1 170 4 345 1 72 1 173 1 73 2 124 1 47 2 263 2 
302 1 353 1 228 1 83 1 328 9 231 1 86 1 162 3 273 2 138 2 252 1 113 6 37 1 368 5 340 2 317 2 92 1 119 1 343 9 69 1 170 4 345 1 72 1 173 1 73 2 124 1 47 2 263 2 
302 1 353 1 228 1 83 1 328 10 231 1 86 1 162 4 273 2 138 2 252 1 113 7 37 1 368 6 340 2 317 2 92 1 119 1 343 10 69 1 170 5 345 1 72 1 173 1 73 2 124 1 47 2 263 2 
302 1 353 1 228 1 83 1 328 7 231 1 86 1 162 2 273 2 138 1 252 1 113 4 37 1 368 4 340 2 317 2 92 1 119 1 343 7 69 1 170 3 345 1 173 1 73 2 124 1 47 2 263 2 
252 1 113 3 37 1 368 3 302 1 340 1 317 1 353 1 343 4 170 2 72 1 328 4 73 1 231 1 162 1 263 1 273 1 138 2 
252 1 265 1 368 1 302 1 317 1 93 1 343 2 228 1 345 1 328 2 148 1 231 1 73 1 47 1 263 1 273 1 
252 1 113 1 368 2 302 1 317 2 343 3 170 1 328 3 231 1 162 1 124 1 47 1 273 2 
63 1 253 1 99 1 
296 1 99 1 289 2 
268 2 140 2 64 1 366 2 320 2 74 1 150 2 112 2 
101 1 2 1 81 1 325 1 360 2 207 1 229 1 327 1 6 1 268 2 308 1 331 1 366 2 367 1 288 1 112 3 290 1 140 2 64 1 11 2 236 1 68 1 70 2 122 1 320 2 97 1 46 1 298 2 74 1 261 1 150 3 195 1 239 1 77 2 196 1 19 1 21 1 
251 1 268 1 147 1 140 1 64 1 366 1 320 1 150 1 112 1 270 1 
63 1 251 1 294 1 58 1 372 1 160 1 329 1 95 1 366 1 99 1 150 1 210 1 112 1 187 1 
63 1 251 1 140 1 294 1 372 1 160 1 268 1 95 2 329 1 320 1 366 1 99 1 150 1 112 1 187 2 
95 1 163 1 187 1 12 1 313 1 
63 1 95 2 163 1 238 1 99 1 187 2 205 1 313 1 
95 1 163 1 187 1 
251 1 64 1 140 1 217 1 147 1 268 1 95 1 320 1 366 1 150 1 112 1 187 1 270 1 313 1 
99 1 
63 1 95 2 163 1 99 1 187 2 205 1 313 1 334 1 
63 1 282 1 118 1 341 2 247 1 256 1 306 1 142 1 205 1 267 1 95 5 161 1 365 2 163 2 99 1 152 1 187 5 35 2 313 2 
101 1 140 1 2 1 11 1 325 1 132 1 360 1 227 1 207 1 122 1 320 1 366 1 46 1 298 1 150 2 112 2 239 1 195 1 196 1 128 1 
253 1 74 1 
156 1 140 1 356 1 268 1 366 2 320 1 74 2 150 2 112 2 
115 1 145 1 128 1 
101 1 2 1 11 1 325 1 360 1 207 1 122 1 174 1 298 1 46 1 74 1 150 1 112 1 195 1 239 1 196 1 
268 1 140 3 366 3 320 3 74 1 150 3 112 3 227 1 
251 1 140 1 366 1 320 1 150 1 112 1 270 1 
251 1 268 1 156 1 140 1 366 1 320 1 356 1 150 1 112 1 
101 1 156 1 2 1 81 1 325 1 132 1 360 1 227 1 207 1 160 1 6 1 268 2 308 1 329 1 108 1 331 1 366 3 288 1 112 4 187 1 290 1 251 1 140 3 64 1 11 1 294 1 372 1 70 1 95 1 122 1 320 3 97 1 46 1 298 1 74 1 261 1 150 4 239 1 195 1 77 2 196 1 19 1 264 1 21 1 
140 1 366 2 320 1 220 1 74 1 150 2 210 1 112 2 227 1 
251 1 156 1 140 3 132 1 227 2 294 1 372 1 160 1 268 1 95 1 329 1 320 3 366 3 99 1 150 3 112 3 187 1 264 1 20 1 
268 1 156 1 140 2 366 2 320 2 115 1 150 2 112 2 227 1 128 1 
101 1 2 1 11 1 325 1 360 1 207 1 122 1 298 1 46 1 74 1 150 1 112 1 195 1 239 1 196 1 
101 1 2 1 11 1 358 1 360 1 207 1 377 1 122 1 298 1 46 1 74 1 150 1 112 1 195 1 239 1 
1 1 359 1 6 1 308 1 331 1 87 1 367 2 310 1 290 1 274 1 167 1 10 1 115 2 145 2 171 1 70 4 146 1 261 1 77 2 242 1 19 1 21 2 128 2 154 1 
251 1 140 1 366 1 320 1 150 1 9 1 112 1 294 1 
156 1 140 4 132 1 227 2 268 1 320 4 366 5 220 1 322 1 74 1 150 5 125 1 210 1 112 5 
251 1 140 2 366 2 320 2 9 1 150 2 112 2 270 1 
301 1 17 1 
301 1 17 1 
75 1 349 1 
75 1 349 1 
75 1 349 1 
301 1 211 1 17 1 
301 1 17 1 91 1 
301 2 201 1 75 1 52 1 349 1 17 2 
301 1 211 1 17 1 
301 1 211 1 17 1 
301 1 371 1 17 1 
301 1 371 1 17 1 
301 1 371 1 17 1 
301 2 55 1 202 1 304 2 120 2 266 2 193 3 374 2 95 2 99 1 280 1 52 1 323 2 187 2 18 1 17 2 34 1 129 1 336 1 
301 1 55 1 304 1 266 1 29 1 366 2 183 1 112 2 187 1 91 1 291 1 140 2 257 1 120 1 193 1 94 1 95 1 320 2 74 1 175 1 150 2 126 1 323 1 17 1 
73 1 340 1 263 1 
148 1 73 1 263 1 
148 1 61 1 73 3 340 2 299 1 248 1 
148 1 61 1 73 2 340 1 177 1 299 1 
148 1 61 1 73 2 340 1 299 2 
243 1 158 1 303 1 3 1 247 3 359 1 361 2 205 1 365 1 183 1 85 1 8 2 163 1 310 1 187 5 289 3 35 1 313 4 274 1 63 1 338 2 118 2 341 1 256 1 257 1 344 1 146 1 296 1 95 5 99 2 126 1 381 1 
282 1 243 2 22 1 180 1 303 2 3 3 247 8 359 3 361 6 205 1 307 1 365 2 286 1 110 1 8 6 163 6 309 1 310 3 187 9 289 9 35 2 313 7 274 3 63 1 118 6 341 2 256 1 257 4 344 1 12 5 71 5 146 3 296 3 95 9 99 5 
282 1 243 1 158 1 303 1 3 1 247 3 359 1 361 2 365 1 8 2 310 1 187 3 289 4 35 1 313 2 63 1 274 1 338 1 341 1 118 2 257 1 146 1 296 2 95 3 99 3 381 1 
282 1 243 1 22 1 158 1 303 1 3 2 247 5 359 2 361 4 365 1 286 1 110 1 8 4 310 2 187 4 289 7 35 1 313 3 63 1 274 2 338 2 341 1 118 4 257 2 146 2 296 3 95 4 99 4 381 1 
253 1 122 1 281 1 
122 1 293 1 
326 1 
122 1 46 1 
122 3 2 1 149 1 46 1 281 2 90 1 
122 1 2 1 46 1 
122 1 131 1 
351 1 1 3 305 1 26 1 27 1 59 1 70 7 146 1 330 1 87 2 332 1 367 4 310 1 16 1 234 1 33 2 21 3 
351 1 1 3 305 1 26 1 27 1 59 1 70 7 146 1 330 1 87 2 332 1 367 4 310 1 16 1 234 1 33 2 21 3 
351 1 1 3 305 1 26 1 27 1 59 1 70 7 146 1 330 1 87 2 332 1 367 4 310 1 16 1 234 1 33 2 21 3 225 1 
351 2 1 10 305 2 3 3 359 3 26 1 27 2 59 1 6 1 330 1 331 1 7 1 87 5 332 1 367 16 310 4 31 1 233 1 33 3 234 2 214 3 274 3 40 1 70 31 14 4 146 4 43 1 347 1 261 1 16 5 77 2 78 1 19 1 21 15 
351 1 1 4 305 1 26 1 27 1 59 1 6 2 285 1 331 2 7 1 87 3 332 1 367 5 310 1 33 2 234 1 70 9 146 1 376 1 261 2 16 1 77 4 19 2 21 4 
244 1 101 1 302 1 360 1 82 1 248 1 328 2 231 1 137 1 335 1 273 1 252 1 113 1 189 1 368 1 114 1 340 1 317 1 11 1 369 1 343 2 373 1 148 1 73 2 298 1 47 1 195 1 263 1 178 1 197 1 
244 1 101 1 302 1 102 1 360 1 28 1 248 1 328 3 209 1 137 1 335 1 273 1 252 1 113 2 189 1 368 1 114 1 340 1 317 1 11 1 369 1 343 3 373 1 148 1 73 2 298 1 47 1 195 1 263 1 197 1 
101 1 302 1 360 1 28 1 248 1 328 2 209 1 137 1 335 1 252 1 113 2 189 1 368 1 114 1 340 1 11 1 369 1 343 2 148 1 73 2 298 1 47 1 195 1 263 1 197 1 
101 1 114 2 168 1 102 1 317 1 11 1 343 1 143 1 360 1 57 1 207 1 346 1 328 1 122 1 46 1 298 1 47 2 137 2 195 1 212 1 197 2 350 1 273 1 
101 1 189 1 244 1 114 1 340 1 317 1 369 1 11 1 343 1 82 1 360 1 373 1 248 1 148 1 328 1 73 2 231 1 209 1 298 1 47 1 137 1 195 1 263 1 197 1 335 1 273 1 
41 1 
247 1 105 1 58 1 205 2 159 2 160 1 60 3 106 5 329 1 163 5 287 1 210 1 112 1 166 1 251 1 63 1 341 1 118 1 342 2 256 1 294 1 296 2 297 1 262 1 222 3 79 3 355 1 357 1 365 1 366 1 269 2 30 1 187 4 35 1 372 1 42 1 95 4 44 1 99 1 150 1 49 1 54 2 
79 3 355 1 357 1 247 1 105 1 205 2 58 1 159 2 160 1 60 3 329 1 106 5 365 1 366 1 269 2 287 1 163 5 30 1 112 1 210 1 187 4 166 1 35 1 63 1 251 1 342 2 118 1 341 1 256 1 294 1 372 1 42 1 296 2 95 4 44 1 297 1 99 1 150 1 262 1 49 1 222 3 54 2 
247 1 56 1 105 1 58 1 205 2 159 2 160 1 60 2 106 4 329 1 287 1 163 4 112 1 210 1 289 2 251 1 63 1 216 2 341 1 118 1 256 1 294 1 262 1 222 2 79 2 355 1 365 1 366 1 269 2 30 1 312 1 187 4 35 1 316 2 372 1 42 1 95 4 150 1 99 1 
101 1 56 1 247 2 105 1 205 3 58 1 159 2 207 2 160 1 60 2 329 1 106 4 163 6 287 1 210 1 112 1 212 1 289 2 166 1 63 1 251 1 339 1 342 2 118 2 341 1 11 2 256 1 294 1 296 2 346 1 122 1 219 1 298 2 262 1 222 2 224 1 79 2 303 1 355 1 360 2 365 1 366 1 269 2 30 1 187 5 35 1 36 1 372 1 42 1 95 5 46 1 99 2 150 1 195 1 54 2 
355 1 105 1 58 1 205 1 160 1 60 1 329 1 106 2 366 1 287 1 163 2 112 1 210 1 187 3 334 1 251 1 294 1 372 1 42 1 95 3 150 1 262 1 
79 1 355 1 105 1 58 1 205 1 160 1 329 1 106 3 366 1 163 1 287 1 112 1 210 1 187 3 334 1 251 1 63 1 294 1 372 1 42 1 95 3 150 1 262 1 99 1 
79 1 355 1 105 1 205 1 58 1 160 1 60 1 329 1 106 3 366 1 287 1 163 2 112 1 210 1 187 3 334 1 251 1 63 1 294 1 372 1 42 1 95 3 150 1 262 1 99 1 222 1 
79 4 355 1 357 1 247 1 105 1 58 1 205 3 159 2 160 1 60 4 329 1 106 6 365 1 366 1 269 2 287 1 163 7 30 1 210 1 112 1 187 5 166 1 35 1 334 1 63 5 251 1 342 2 118 1 341 1 256 1 294 1 372 1 42 1 296 2 95 5 44 1 297 1 98 1 99 5 262 1 150 1 49 1 222 4 54 2 
247 1 56 1 105 1 58 1 205 2 159 2 160 1 60 2 106 4 329 1 287 1 163 4 112 1 210 1 289 2 166 1 251 1 63 1 341 1 118 1 342 2 256 1 294 1 296 2 262 1 222 2 79 2 355 1 365 1 366 1 269 2 30 1 187 4 35 1 372 1 42 1 95 4 150 1 99 2 54 2 
79 2 355 1 357 1 247 1 105 1 205 2 58 1 159 2 160 1 60 2 329 1 106 4 365 1 366 1 269 2 163 4 287 1 30 1 112 1 210 1 187 4 166 1 35 1 63 1 251 1 342 2 118 1 341 1 256 1 294 1 372 1 42 1 296 2 95 4 44 1 297 1 99 1 150 1 262 1 222 2 54 2 
79 2 355 1 357 1 247 1 105 1 205 2 58 1 159 2 160 1 60 2 329 1 106 4 365 1 366 1 269 2 163 4 287 1 30 1 112 1 210 1 187 4 166 1 35 1 63 1 251 1 342 2 118 1 341 1 256 1 294 1 372 1 42 1 296 2 95 4 44 1 297 1 99 1 150 1 262 1 222 2 54 2 
179 1 79 2 355 1 247 1 105 1 205 2 58 1 159 2 160 1 60 2 329 1 106 4 365 1 366 1 269 2 163 4 287 1 30 1 112 1 210 1 312 1 187 4 289 2 35 1 63 1 251 1 216 2 316 2 118 1 341 1 318 1 256 1 294 1 372 1 42 1 95 4 297 1 99 1 150 1 262 1 222 2 
253 1 1 2 10 1 115 1 305 1 26 1 27 1 145 1 70 6 59 1 146 1 6 1 308 1 331 1 87 2 332 1 74 2 367 3 261 1 310 1 77 2 33 1 19 1 21 3 128 1 290 1 
23 1 1 2 103 1 3 2 181 1 359 1 6 2 308 2 331 2 87 1 367 8 310 1 233 1 139 1 290 1 214 3 274 2 115 4 236 1 40 1 145 11 70 14 14 3 146 2 97 1 321 1 74 1 261 2 16 1 77 4 19 2 21 6 128 11 
101 1 2 1 181 1 325 1 132 1 360 1 227 1 207 1 84 1 6 1 308 1 331 1 366 1 367 1 112 2 290 1 140 1 115 1 11 1 236 1 70 2 122 1 174 1 320 1 46 1 298 1 97 1 74 1 261 1 150 2 76 1 239 1 195 1 51 1 196 1 77 2 19 1 21 1 
101 2 1 8 2 2 3 2 325 2 59 1 207 1 6 3 331 3 209 1 332 1 112 3 290 3 115 7 292 2 117 1 11 3 70 20 123 2 122 2 298 3 74 2 261 3 16 4 77 6 19 3 21 10 128 7 305 1 81 2 181 1 132 1 359 2 26 1 360 3 27 1 227 1 364 1 308 3 87 4 366 1 367 10 310 3 33 1 274 2 140 1 236 1 276 1 141 2 145 7 146 3 320 1 97 1 46 2 150 3 195 2 239 2 196 2 153 2 
101 4 2 1 207 2 6 2 331 2 208 1 209 1 250 1 111 1 112 1 212 1 290 2 10 1 169 1 11 7 68 2 258 1 70 2 346 1 122 4 298 6 261 2 77 4 19 2 21 1 360 7 227 1 362 1 308 2 366 1 367 1 186 1 272 1 315 1 140 1 236 1 45 1 378 1 320 1 46 3 97 1 150 1 195 3 
1 1 156 1 80 1 3 1 181 1 359 1 6 1 268 1 308 1 331 1 87 1 366 1 367 1 310 1 112 1 290 1 274 1 140 1 115 1 145 1 70 3 146 1 320 1 261 1 150 1 77 2 19 1 21 2 128 1 
274 1 1 1 10 1 115 1 145 1 70 2 146 1 6 1 308 1 331 1 261 1 367 2 16 1 77 2 19 1 128 1 290 1 154 1 
1 1 167 1 10 1 115 1 359 1 145 1 70 2 6 1 308 1 331 1 87 1 261 1 310 1 77 2 19 1 21 2 128 1 290 1 
1 2 3 1 359 1 6 1 308 1 331 1 87 1 367 2 310 1 290 1 274 1 10 1 115 2 145 2 70 4 146 1 261 1 16 1 77 2 19 1 21 2 128 2 
274 1 1 1 115 1 145 1 362 1 70 2 146 1 6 1 308 1 331 1 261 1 367 2 16 1 77 2 19 1 128 1 290 1 154 1 
1 1 167 1 115 1 359 1 145 1 362 1 70 2 6 1 308 1 331 1 87 1 261 1 310 1 77 2 19 1 21 2 128 1 290 1 
1 2 3 1 359 1 362 1 6 1 308 1 331 1 87 1 367 2 310 1 290 1 274 1 115 2 145 2 70 4 146 1 261 1 16 1 77 2 19 1 21 2 128 2 
1 2 3 1 359 1 6 1 308 1 331 1 87 1 367 2 310 1 290 1 274 1 115 2 145 2 70 4 146 1 261 1 16 1 77 2 19 1 21 2 128 2 
101 1 2 1 81 1 325 1 360 1 207 1 6 1 308 1 331 1 367 1 112 1 290 1 11 1 236 1 70 2 122 1 46 1 298 1 97 1 74 1 261 1 150 1 239 1 195 1 196 1 77 2 19 1 21 1 
101 1 2 1 358 1 360 1 207 1 6 1 308 1 331 1 184 1 367 1 112 1 290 1 11 1 236 1 70 2 377 1 122 1 46 1 298 1 97 1 74 1 261 1 150 1 239 1 195 1 77 2 19 1 21 1 
1 2 3 1 181 1 359 1 6 1 308 1 331 1 87 1 367 2 310 1 290 1 274 1 115 2 145 2 70 4 146 1 261 1 16 1 77 2 19 1 21 2 128 2 
101 1 1 2 2 1 3 1 81 1 359 1 325 1 360 1 6 1 308 1 331 1 87 1 367 2 310 1 112 1 290 1 274 1 115 2 11 1 145 2 70 4 146 1 123 1 122 1 298 1 46 1 261 1 16 1 150 1 239 1 195 1 196 1 178 1 77 2 19 1 21 2 128 2 
1 1 156 1 3 1 181 1 359 1 6 1 268 1 308 1 331 1 88 1 366 1 367 2 310 1 112 1 290 1 274 1 140 1 115 1 145 1 70 3 146 1 320 1 261 1 16 1 150 1 77 2 19 1 21 1 128 1 
157 1 1 8 354 1 305 1 3 4 359 4 5 1 26 1 27 1 59 1 6 3 285 1 107 1 7 1 135 1 331 3 87 4 332 1 333 1 367 20 310 5 311 1 233 3 33 1 214 3 274 4 215 2 65 1 255 4 40 1 66 1 319 1 70 41 14 4 146 5 261 3 16 4 221 1 77 6 19 3 100 1 21 21 53 1 
157 1 1 7 354 1 305 1 3 4 359 3 5 1 26 1 27 1 59 1 6 4 285 1 107 1 7 2 135 1 331 4 87 4 332 1 333 1 367 20 310 4 311 1 233 3 33 1 214 3 274 4 215 2 65 1 255 4 40 1 66 1 319 1 70 38 14 4 146 5 261 4 16 3 221 1 77 8 19 4 100 1 21 18 53 1 
157 1 23 2 1 14 305 1 3 7 359 7 5 1 26 1 27 1 59 1 6 2 285 1 107 1 7 1 135 1 331 2 87 7 332 1 333 1 367 27 310 8 311 1 233 2 33 1 214 4 274 7 215 1 65 1 255 4 40 2 66 1 70 52 14 4 146 8 261 2 16 7 221 1 77 4 19 2 100 1 21 25 53 1 
157 2 1 6 3 3 359 3 5 1 363 1 6 2 285 1 107 1 331 2 87 3 367 9 310 3 233 1 214 1 274 3 215 1 65 1 255 2 40 1 319 1 70 19 14 2 146 3 261 2 16 3 77 4 19 2 100 1 21 10 
157 1 1 4 3 3 359 2 5 1 6 3 285 1 107 1 7 2 331 3 135 1 87 2 333 1 367 14 310 2 311 1 233 2 214 2 274 3 215 2 65 2 255 4 66 1 70 26 14 2 146 3 261 3 16 2 221 1 77 6 19 3 21 12 100 1 53 1 
301 1 202 1 304 1 52 1 323 1 17 1 120 1 266 1 336 1 259 1 
94 1 91 1 
235 1 226 1 301 1 304 1 323 1 17 1 120 1 206 1 266 1 
301 1 55 1 202 1 304 1 120 1 266 1 193 2 374 1 95 1 99 1 52 1 323 1 187 1 18 1 17 1 34 1 129 1 336 1 
301 1 55 1 202 1 304 1 120 1 266 1 193 2 374 1 95 1 99 1 52 1 323 1 187 1 18 1 17 1 34 1 129 1 336 1 
301 1 55 1 202 1 304 1 120 1 266 1 193 2 374 1 95 1 99 1 52 1 323 1 187 1 18 1 17 1 34 1 129 1 336 1 
300 1 201 1 211 1 
300 1 201 1 211 1 
371 1 144 1 
201 1 371 1 144 1 
175 1 291 1 
301 1 304 1 266 1 29 1 183 1 366 2 112 2 187 1 34 1 313 1 91 1 291 1 140 2 370 1 257 1 120 1 193 1 94 1 374 1 95 1 320 2 74 1 175 1 150 2 126 1 323 1 17 1 
300 1 211 1 
201 1 371 1 144 1 
101 1 245 1 203 1 181 1 360 2 6 1 308 1 331 1 366 2 367 1 112 2 290 1 169 1 11 2 38 1 236 1 68 2 70 2 45 1 122 1 46 1 97 1 298 2 261 1 150 2 195 1 77 2 19 1 21 1 380 1 199 1 
101 1 283 1 340 1 11 2 369 1 130 1 360 2 373 1 248 1 148 1 73 2 209 1 298 2 195 1 263 1 178 1 197 1 335 1 188 1 
101 1 352 1 340 1 11 1 369 1 360 1 373 1 248 1 148 1 73 2 209 1 298 1 195 1 263 1 197 1 335 1 188 1 
101 1 11 1 130 1 182 1 360 1 207 1 346 1 122 1 46 1 298 1 195 1 212 1 197 1 350 1 
101 1 283 1 340 1 11 1 369 1 130 1 360 1 373 1 248 1 148 1 73 2 209 1 298 1 195 1 263 1 197 1 335 1 188 1 
324 1 
101 1 2 1 81 1 325 1 360 1 207 1 6 1 268 2 308 1 331 1 366 2 288 1 112 3 290 1 140 2 64 1 11 1 70 1 320 2 122 1 97 1 298 1 46 1 74 1 261 1 150 3 195 1 239 1 77 2 196 1 19 1 21 1 
63 2 303 1 118 2 341 1 247 1 256 1 361 2 296 2 365 1 8 2 99 4 33 1 289 4 35 1 36 1 
63 1 253 1 118 1 247 1 99 1 152 1 267 1 
247 1 205 1 365 1 163 1 187 1 289 1 166 1 35 1 63 1 342 1 118 1 341 1 256 1 296 1 95 1 99 2 54 1 
101 4 200 2 2 3 3 2 247 9 205 3 207 1 109 2 249 1 163 5 8 6 289 12 337 2 63 2 341 4 11 3 118 8 256 4 293 3 296 6 122 10 298 3 178 1 25 2 303 2 131 2 359 2 360 3 361 6 134 1 267 1 365 4 89 2 310 2 32 2 187 5 35 4 36 1 274 2 275 2 141 2 190 1 372 2 146 2 95 5 149 1 46 3 237 1 99 8 195 3 240 1 152 1 241 2 281 2 
303 1 3 2 247 8 359 2 361 5 205 1 109 2 365 2 135 1 333 1 89 1 163 1 8 5 310 2 311 1 187 1 233 1 289 6 35 2 36 1 214 1 274 2 63 2 341 2 118 5 256 2 14 1 146 2 296 3 95 1 48 1 99 5 221 1 198 1 53 1 
305 1 357 1 247 2 27 1 59 1 268 1 109 2 365 1 366 1 89 1 310 1 112 1 187 1 35 1 270 1 251 1 64 1 140 1 341 1 118 2 256 1 217 1 146 2 147 1 95 1 320 1 150 1 194 1 
63 1 341 1 118 1 247 1 256 1 267 1 365 1 99 1 152 1 35 1 
274 2 3 2 118 5 247 5 141 1 359 2 361 5 146 2 296 5 109 2 89 1 8 5 99 5 310 2 289 10 
63 1 95 1 163 1 99 1 187 1 205 1 
282 1 101 1 155 1 303 2 247 2 360 4 205 2 207 2 134 1 365 2 163 4 212 1 187 3 35 2 36 2 339 1 341 2 11 4 118 2 256 1 67 1 346 1 95 3 122 1 46 1 298 4 237 2 195 1 224 1 
15 1 323 1 266 1 
202 1 175 1 323 1 266 1 133 1 
15 1 323 1 266 1 
15 1 323 1 266 1 
254 1 323 1 266 1 
254 1 323 1 266 1 
254 1 323 1 266 1 
323 1 266 1 
301 1 17 1 
1 2 305 1 26 1 27 1 59 1 6 1 285 1 331 1 87 2 333 1 332 1 367 4 310 1 233 1 33 1 214 1 70 8 146 1 14 1 261 1 77 2 19 1 21 4 
1 3 305 1 3 1 26 1 27 1 59 1 6 2 285 1 331 2 87 2 332 1 333 1 367 6 310 1 233 1 33 1 214 1 274 1 40 1 70 11 14 2 146 2 172 1 261 2 16 1 77 4 19 2 21 5 
1 4 305 1 3 2 359 2 26 1 27 1 59 1 6 3 285 1 331 3 135 1 7 1 87 3 332 1 333 1 367 9 310 3 311 1 233 1 33 1 214 1 274 2 70 19 14 1 146 3 172 1 261 3 16 1 221 1 77 6 19 3 21 10 53 1 
1 5 305 1 3 2 359 1 26 1 27 1 59 1 6 3 285 1 7 1 331 3 135 1 87 3 332 1 333 1 367 10 310 2 311 1 233 1 33 1 214 1 274 2 70 17 14 1 146 3 172 1 261 3 16 2 221 1 77 6 19 3 21 7 53 1 
1 2 305 1 26 1 27 1 59 1 6 1 285 1 331 1 87 2 333 1 332 1 367 4 310 1 233 1 33 1 214 1 70 8 146 1 14 1 261 1 77 2 19 1 21 4 
1 2 3 2 359 2 6 1 285 1 331 1 135 1 87 1 333 1 367 6 310 2 311 1 233 1 214 1 274 2 70 12 14 1 146 2 261 1 16 1 221 1 77 2 19 1 21 6 53 1 
1 5 305 1 3 2 359 1 26 1 27 1 59 1 6 4 285 1 331 4 135 1 7 2 87 3 332 1 333 1 367 10 310 2 311 1 233 1 33 1 214 1 274 2 70 18 14 1 146 3 172 1 261 4 16 2 221 1 77 8 19 4 21 8 53 1 
1 6 3 3 359 2 6 4 285 1 331 4 135 1 7 2 87 3 333 1 367 9 310 2 311 1 233 1 214 1 274 3 319 1 70 16 14 1 146 3 261 4 16 3 221 1 77 8 19 4 21 7 53 1 
1 6 305 3 26 2 27 3 70 7 59 1 146 1 87 3 332 1 367 3 310 1 16 3 21 4 
1 4 305 1 3 2 359 1 26 1 27 1 59 1 6 4 285 1 331 4 135 1 7 2 87 3 332 1 333 1 367 10 310 2 311 1 233 1 33 1 214 1 274 2 319 1 70 18 14 1 146 3 261 4 16 1 221 1 77 8 19 4 21 8 53 1 
1 3 305 1 26 1 27 1 59 1 70 8 146 1 6 2 331 2 7 1 87 2 332 1 367 4 261 2 310 1 16 1 77 4 33 1 19 2 21 4 
253 1 1 2 305 1 26 1 27 1 59 1 70 6 146 1 87 2 332 1 367 3 310 1 33 1 21 3 
274 1 1 2 3 1 359 1 70 4 146 1 172 1 6 1 331 1 87 1 261 1 367 2 310 1 16 1 77 2 19 1 21 2 
274 1 1 2 3 1 40 1 359 1 70 7 14 2 146 1 87 1 367 3 310 1 16 1 233 1 21 4 214 1 
1 9 23 1 305 2 3 2 359 2 26 1 27 2 59 1 6 2 7 2 331 2 87 5 332 1 367 11 310 3 33 1 214 2 274 2 40 1 70 23 146 3 14 2 321 1 261 2 16 4 50 1 77 4 19 2 21 12 
70 1 21 1 14 1 
367 1 70 1 214 1 
274 1 1 3 3 1 141 1 359 1 70 6 146 1 6 1 172 1 331 1 87 2 261 1 367 3 16 1 310 1 77 2 19 1 21 3 
1 2 3 2 359 2 6 1 285 1 331 1 135 1 87 1 333 1 367 6 310 2 311 1 233 1 214 1 274 2 70 12 14 1 146 2 261 1 16 1 221 1 77 2 19 1 21 6 53 1 
1 2 305 1 27 1 59 1 70 6 146 1 87 1 367 3 310 1 16 1 21 3 
1 2 305 1 26 1 27 1 70 3 6 1 7 1 331 1 87 1 332 1 367 1 261 1 16 1 50 1 77 2 19 1 21 2 
1 5 305 2 27 2 70 10 59 1 146 2 6 1 285 1 331 1 87 3 261 1 367 5 194 1 16 2 310 2 77 2 19 1 21 5 
274 1 1 1 70 2 146 1 6 1 285 1 331 1 261 1 367 2 16 1 77 2 19 1 
274 1 1 2 3 1 359 1 70 4 146 1 6 1 285 1 331 1 87 1 261 1 367 2 310 1 16 1 77 2 19 1 21 2 
1 2 305 1 27 1 319 1 70 3 6 3 285 1 7 1 331 3 87 1 261 3 367 1 16 1 50 1 77 6 19 3 21 2 
1 12 305 3 3 3 359 3 26 1 27 3 59 2 6 5 285 1 7 2 331 5 87 7 332 1 367 16 310 5 233 1 33 1 214 3 274 3 40 1 319 1 70 34 14 4 146 5 172 1 43 1 347 1 261 5 16 5 50 1 77 10 78 1 19 5 21 18 
366 1 220 1 74 1 379 1 150 1 112 1 210 1 
24 1 366 1 260 1 220 1 74 1 379 1 279 1 150 1 210 1 112 1 213 1 127 1 
101 1 346 1 253 1 122 1 46 1 298 1 11 1 195 1 212 1 360 1 207 1 
101 1 140 1 2 1 11 1 325 1 360 1 227 1 207 1 122 1 320 1 366 1 46 1 298 1 74 1 150 2 112 2 239 1 195 1 
101 1 2 2 131 1 325 1 360 1 227 1 160 1 366 2 112 2 251 1 140 2 275 1 11 1 294 1 320 1 122 3 298 1 46 2 74 1 237 1 150 2 195 1 239 1 
101 1 2 2 131 1 360 2 227 1 160 1 366 2 112 2 251 1 140 2 275 1 11 2 294 1 377 1 320 1 122 3 298 2 46 2 74 1 237 1 150 2 151 1 195 1 239 1 
101 1 2 1 204 1 131 1 360 3 207 1 163 1 187 2 63 1 275 1 11 3 293 1 372 1 121 1 95 2 122 4 298 3 46 1 237 1 99 1 151 1 195 1 281 1 
63 1 101 1 2 1 275 1 11 3 131 1 360 3 293 1 372 1 207 1 95 2 122 4 46 1 298 3 237 1 163 1 99 1 151 1 195 1 187 2 32 1 281 1 
101 1 208 1 298 1 11 1 195 1 360 1 
101 3 2 1 360 6 207 2 208 1 209 1 111 1 250 1 186 1 315 1 169 1 11 6 68 1 258 1 191 1 122 3 149 1 46 2 298 5 195 2 
101 1 1 2 2 1 305 1 81 1 181 1 325 1 26 1 360 1 27 1 227 1 59 1 6 2 308 2 331 2 87 2 366 1 332 1 367 3 310 1 112 2 33 1 290 2 140 1 115 1 292 1 11 1 145 1 70 6 146 1 122 1 320 1 123 1 46 1 298 1 74 2 261 2 150 2 239 1 195 1 77 4 178 1 196 1 19 2 21 3 128 1 380 1 
200 1 25 1 247 1 360 1 205 1 207 1 267 1 134 1 365 2 163 2 187 3 32 1 35 2 313 1 337 1 63 1 118 1 341 2 11 1 256 2 293 1 372 1 95 3 122 2 298 1 99 1 152 1 281 1 
101 2 2 1 11 2 360 2 208 1 122 2 149 1 298 2 46 1 240 1 195 1 178 1 281 1 
101 1 104 1 11 4 360 4 207 1 346 1 122 1 298 4 46 1 151 1 212 1 195 1 178 1 
315 1 101 2 2 1 11 2 276 1 360 2 378 1 122 1 298 2 46 1 237 1 186 1 195 1 272 1 
101 1 148 1 73 1 298 1 11 1 195 1 263 1 360 1 207 1 335 1 
101 1 169 1 11 2 203 1 360 2 122 1 209 1 298 2 46 1 195 1 178 1 
101 2 169 1 104 1 11 5 360 5 207 1 346 1 122 3 298 4 46 2 237 1 111 1 250 1 212 1 195 2 178 1 
0 1 101 2 169 1 104 1 11 5 360 5 207 1 346 1 122 3 298 4 46 2 237 1 250 1 212 1 195 2 178 1 
101 1 140 1 2 1 11 1 360 1 227 1 207 1 377 1 122 1 320 1 366 1 46 1 298 1 74 1 150 2 112 2 239 1 195 1 
315 1 101 2 2 1 11 1 360 1 191 1 122 1 149 1 298 1 46 1 237 1 186 1 195 1 
96 1 230 1 74 1 314 1 271 1 
63 1 251 1 277 1 294 1 372 1 192 1 160 1 95 2 96 2 329 1 230 2 74 1 99 1 348 1 187 2 264 1 313 1 271 1 314 2 
245 1 96 1 230 1 366 1 38 1 150 1 112 1 271 1 199 1 
277 1 192 1 271 1 
113 1 252 1 368 1 302 1 317 1 92 1 343 3 345 1 328 3 231 1 273 1 
375 1 368 1 162 1 170 1 
368 1 302 1 
252 1 253 1 368 1 302 1 
252 1 328 1 368 1 302 1 317 1 343 1 273 1 
47 1 137 1 343 1 
252 1 328 3 231 1 368 1 302 1 317 1 4 1 343 3 165 1 13 1 345 2 273 1 
252 1 113 1 328 2 368 1 302 1 317 1 343 2 138 1 273 1 
368 1 340 1 317 1 353 1 343 1 170 1 328 1 231 1 73 1 263 1 273 1 
328 1 231 1 368 1 302 1 317 1 343 1 273 1 
252 1 328 1 231 1 302 2 317 1 343 1 273 1 
368 1 302 1 317 2 343 2 218 1 328 2 231 1 62 1 185 1 273 2 
252 1 113 2 368 2 302 1 317 1 92 1 343 3 83 1 170 1 328 3 231 1 162 1 273 1 
252 1 113 1 368 1 302 1 340 1 317 1 343 2 248 1 148 1 328 2 73 2 231 1 176 1 263 1 273 1 
252 1 113 2 368 2 302 1 317 2 343 4 170 1 72 1 328 4 231 1 162 1 273 2 138 1 
252 1 328 1 231 1 368 1 302 1 317 1 343 1 273 1 
252 2 113 2 368 3 302 2 317 1 343 4 13 1 170 1 345 1 375 1 328 4 162 1 165 1 273 1 
113 1 252 1 368 1 302 1 317 1 246 1 343 2 328 2 231 1 164 1 223 1 273 1 
252 1 368 1 302 1 317 1 343 3 13 2 345 2 328 3 231 1 136 1 165 1 273 1 
368 2 116 2 39 1 295 1 
328 1 231 1 317 1 232 1 343 1 273 1 
252 1 113 1 328 2 231 1 368 1 302 1 317 1 92 1 343 2 273 1 
284 1 
252 1 328 1 231 1 368 1 302 1 317 1 343 1 273 1 

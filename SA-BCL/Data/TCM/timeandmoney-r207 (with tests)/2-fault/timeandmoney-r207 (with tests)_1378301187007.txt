#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 332 (72,94) (72,94) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 332 (72,94) (72,94) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 332 (72,94) (72,94) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 332 (72,94) (72,94) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 332 (49,257) (49,257) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (34,312,337,342) 53 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (34,312,337,342) 53 62 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (34,312,337,342) 53 62 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (48,194,379) (48,194,379) (48,194,379) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (48,194,379) (48,194,379) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (34,312,337,342) (34,312,337,342) (48,194,379) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (102,250) (102,250) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
369 1 337 1 332 1 72 1 34 1 65 1 94 1 139 1 342 1 
369 1 337 1 332 1 72 1 34 1 65 1 94 1 139 1 342 1 
369 1 337 1 332 1 72 1 34 1 65 1 94 1 139 1 342 1 
369 1 337 1 332 1 72 1 34 1 65 1 94 1 139 1 342 1 
17 1 291 1 337 1 23 2 34 1 65 4 150 1 38 1 139 1 312 3 342 4 50 3 126 1 157 2 331 1 278 1 163 1 15 1 
369 1 126 1 257 1 337 1 332 1 34 1 65 1 44 1 49 1 139 1 342 1 
369 1 337 2 34 2 53 1 65 1 139 1 342 2 
369 1 337 2 62 1 34 2 53 1 47 1 65 2 139 1 312 1 342 3 
369 1 337 2 62 1 34 2 53 1 47 1 65 2 139 1 312 1 342 3 
370 1 361 1 204 1 
370 1 159 2 1 1 
274 1 218 2 0 2 127 2 276 2 202 1 106 2 134 2 
0 2 202 1 151 1 226 1 158 1 127 2 184 1 346 1 185 1 347 2 82 1 134 3 59 1 212 1 7 1 8 2 233 1 103 1 136 1 271 2 272 1 376 1 138 2 327 1 106 2 240 2 330 1 274 1 218 3 276 2 173 1 114 1 42 1 221 1 176 1 200 1 261 1 
218 1 0 1 127 1 276 1 202 1 255 1 297 1 106 1 211 1 134 1 
370 1 293 1 356 1 224 1 204 1 106 1 205 1 152 1 218 1 175 1 134 1 211 1 32 1 222 1 
0 1 370 1 293 1 224 2 204 1 106 1 205 1 218 1 276 1 127 1 175 1 134 1 211 1 32 1 222 2 
224 1 348 1 60 1 222 1 228 1 
18 1 370 1 246 1 224 2 204 1 60 1 222 2 228 1 
224 1 60 1 222 1 
0 1 202 1 255 1 224 1 297 1 106 1 228 1 218 1 276 1 127 1 92 1 211 1 134 1 222 1 
370 1 
370 1 76 1 246 1 224 2 204 1 60 1 222 2 228 1 
370 1 148 1 372 1 223 1 149 2 246 1 224 5 204 1 120 2 228 2 229 1 69 1 363 1 52 1 317 2 260 1 306 1 222 5 60 2 
274 1 361 1 
0 1 273 1 298 1 106 2 218 2 274 2 276 1 127 1 134 2 
333 1 377 1 203 1 
103 1 136 1 63 1 271 1 138 1 240 1 274 1 218 1 173 1 42 1 185 1 221 1 82 1 134 1 261 1 7 1 
0 1 146 1 103 1 136 1 271 1 203 1 138 1 106 1 240 1 218 2 127 1 173 1 42 1 185 1 221 1 82 1 199 1 134 2 7 1 261 1 
274 1 218 3 0 3 276 1 127 3 199 1 106 3 134 3 
218 1 0 1 127 1 297 1 106 1 211 1 134 1 
218 1 0 1 127 1 276 1 273 1 298 1 106 1 211 1 134 1 
0 3 146 1 202 1 224 1 151 1 226 1 205 1 127 3 184 1 346 1 185 1 347 1 82 1 134 4 211 1 59 1 32 1 7 1 8 2 293 1 103 1 136 1 271 1 376 1 273 1 138 1 327 1 106 3 240 1 330 1 274 1 218 4 276 2 173 1 42 1 221 1 115 1 116 1 176 1 199 1 175 1 222 1 200 1 261 1 
274 1 218 2 0 1 356 1 127 1 180 1 106 2 199 1 134 2 
0 3 370 1 146 1 293 1 224 1 273 1 106 3 205 1 218 3 276 1 127 3 129 1 116 1 175 1 199 2 211 1 134 3 222 1 32 1 
0 2 203 1 273 1 106 2 218 2 276 1 127 2 333 1 199 1 134 2 
103 1 136 1 271 1 138 1 240 1 274 1 218 1 173 1 42 1 185 1 221 1 82 1 134 1 261 1 7 1 
103 1 136 1 271 1 138 1 240 1 300 1 2 1 274 1 218 1 173 1 185 1 221 1 82 1 134 1 7 1 
265 1 281 1 203 2 308 1 151 1 226 1 153 1 184 1 80 1 160 1 347 4 164 1 84 1 59 1 8 2 327 2 328 1 330 1 333 2 114 2 377 2 198 1 176 1 355 1 
218 1 0 1 127 1 22 1 106 1 211 1 134 1 32 1 
0 4 146 1 356 1 180 1 97 1 273 1 106 5 218 5 274 1 193 1 127 4 276 1 199 2 134 5 
218 2 0 2 22 1 127 2 297 1 106 2 211 1 134 2 
307 1 187 1 
307 1 187 1 
209 1 105 1 
209 1 105 1 
209 1 105 1 
307 1 46 1 187 1 
307 1 46 1 187 1 
307 1 121 1 187 1 
288 1 209 1 307 2 105 1 187 2 95 1 
307 1 46 1 187 1 
307 1 70 1 187 1 
307 1 70 1 187 1 
307 1 70 1 187 1 
370 1 264 1 179 1 307 2 224 2 284 2 287 2 288 1 182 1 206 1 195 3 112 2 315 1 117 1 187 2 83 2 85 1 31 2 222 2 
0 2 307 1 245 1 224 1 225 1 284 1 98 1 121 1 75 1 344 1 206 1 127 2 83 1 187 1 134 2 31 1 88 1 106 2 110 1 274 1 218 2 195 1 112 1 222 1 
291 1 126 1 15 1 
126 1 44 1 15 1 
145 1 291 2 126 3 339 1 44 1 217 1 
145 1 291 1 126 2 350 1 339 1 44 1 
291 1 145 1 126 2 339 2 44 1 
19 1 201 2 148 3 281 1 149 1 225 1 246 1 224 5 1 1 204 1 120 1 98 1 153 1 228 4 344 1 3 1 159 3 4 2 52 2 80 1 317 1 186 1 60 1 370 2 320 1 321 1 137 2 328 1 301 1 69 1 303 1 222 5 
19 3 201 6 148 8 281 3 149 2 224 9 246 1 1 3 204 1 120 2 98 4 153 3 228 7 77 1 3 1 159 9 52 6 80 3 252 1 317 2 186 2 348 5 60 6 370 5 371 1 137 6 104 5 328 3 67 1 301 2 41 1 69 1 14 1 306 1 222 9 
19 1 148 3 201 2 281 1 149 1 224 3 204 1 1 2 120 1 98 1 153 1 228 2 159 4 4 1 80 1 52 2 317 1 186 1 370 3 321 1 320 1 137 2 328 1 301 1 306 1 222 3 
19 2 201 4 148 5 281 2 149 1 224 4 204 1 1 3 120 1 98 2 153 2 228 3 77 1 159 7 4 2 80 2 52 4 317 1 186 1 370 4 321 1 320 1 137 4 328 2 301 1 41 1 14 1 306 1 222 4 
361 1 136 1 10 1 
136 1 188 1 
171 1 
136 1 221 1 
118 1 136 3 185 1 221 1 10 2 335 1 
136 1 185 1 221 1 
136 1 319 1 
336 2 265 3 281 1 308 2 327 3 90 1 239 1 153 1 39 1 360 1 230 1 114 4 352 1 347 7 289 1 268 1 368 1 
336 2 265 3 281 1 308 2 327 3 90 1 239 1 153 1 39 1 360 1 230 1 114 4 352 1 347 7 289 1 268 1 368 1 
336 2 265 3 281 1 308 2 327 3 90 1 239 1 153 1 39 1 360 1 100 1 230 1 114 4 352 1 347 7 289 1 368 1 268 1 
336 3 19 3 265 10 281 4 308 5 151 1 153 4 360 5 249 1 266 1 230 1 184 1 364 1 80 3 347 31 56 1 368 1 289 2 268 2 8 2 322 3 375 1 327 15 90 2 239 2 140 4 39 1 330 1 328 3 168 1 114 16 352 1 378 1 176 1 
336 2 8 4 265 4 281 1 308 3 327 4 90 1 151 2 239 1 153 1 330 2 360 1 230 1 184 2 302 1 114 5 352 1 378 1 347 9 176 2 289 1 368 1 268 1 6 1 
337 1 357 1 48 1 285 1 312 1 342 2 126 2 131 1 7 1 291 1 369 1 34 1 271 1 238 1 65 1 138 1 37 1 11 1 139 1 217 1 240 1 329 1 194 1 173 1 44 1 379 1 15 1 
337 1 48 1 285 1 286 1 312 2 342 3 126 2 131 1 7 1 291 1 369 1 295 1 34 1 271 1 238 1 65 2 138 1 37 1 11 1 217 1 240 1 329 1 219 1 173 1 44 1 379 1 15 1 
291 1 369 1 295 1 271 1 48 1 65 1 238 1 37 1 138 1 11 1 217 1 312 2 342 2 240 1 329 1 126 2 219 1 173 1 131 1 44 1 15 1 7 1 
369 2 337 1 270 1 103 1 136 1 234 1 34 1 271 1 65 1 238 2 74 1 138 1 286 1 342 1 240 1 329 2 275 1 250 1 102 1 173 1 131 2 221 1 7 1 
337 1 48 1 285 1 342 1 126 2 131 1 7 1 291 1 369 1 34 1 271 1 238 1 65 1 138 1 37 1 11 1 139 1 217 1 240 1 329 1 219 1 194 1 173 1 44 1 379 1 15 1 
343 1 
148 2 149 1 246 3 204 1 1 2 205 1 152 1 159 2 52 2 54 1 211 1 253 1 60 6 290 1 7 1 9 1 293 1 103 2 254 1 216 1 106 1 12 2 218 1 220 2 68 2 301 1 173 1 69 1 174 2 221 1 304 4 175 1 222 5 178 2 356 1 224 5 120 1 311 1 358 2 29 1 317 1 134 1 32 1 370 2 135 1 270 1 373 1 136 1 236 2 271 2 138 2 240 2 275 1 196 1 143 1 
356 1 224 3 246 1 205 1 152 1 76 1 54 1 134 1 211 1 32 1 60 2 9 1 293 1 135 1 216 1 106 1 218 1 220 1 143 1 304 2 175 1 222 3 
178 1 356 1 224 3 246 1 204 1 205 1 152 1 76 1 54 1 134 1 211 1 60 1 32 1 9 1 370 1 293 1 135 1 216 1 106 1 218 1 143 1 304 3 175 1 222 3 
178 1 356 1 246 1 224 3 204 1 205 1 152 1 76 1 54 1 134 1 211 1 32 1 60 2 9 1 370 1 293 1 135 1 216 1 106 1 218 1 68 1 220 1 143 1 304 3 175 1 222 3 
148 1 149 1 246 3 204 5 1 2 205 1 152 1 52 1 54 1 211 1 60 7 290 1 9 1 292 1 293 1 216 1 106 1 12 2 218 1 220 4 68 4 69 1 174 2 304 6 175 1 222 5 178 4 356 1 24 1 224 5 120 1 359 1 358 2 76 1 78 1 317 1 366 1 134 1 32 1 370 5 135 1 236 2 196 1 143 1 
148 1 149 1 246 2 1 2 204 1 205 1 152 1 159 2 52 1 54 1 211 1 60 4 290 1 9 1 293 1 254 1 216 1 106 1 12 2 218 1 68 2 220 2 69 1 174 2 304 4 175 1 222 4 178 2 356 1 224 4 120 1 358 2 317 1 134 1 32 1 370 2 135 1 236 2 196 1 143 1 
178 2 148 1 356 1 149 1 24 1 246 2 224 4 204 1 1 2 120 1 205 1 152 1 358 2 78 1 52 1 54 1 317 1 134 1 211 1 60 4 32 1 290 1 9 1 370 1 292 1 293 1 135 1 236 2 216 1 106 1 12 2 218 1 220 2 68 2 196 1 69 1 174 2 143 1 304 4 175 1 222 4 
178 2 148 1 356 1 149 1 24 1 246 2 224 4 204 1 1 2 120 1 205 1 152 1 358 2 78 1 52 1 54 1 317 1 134 1 211 1 60 4 32 1 290 1 9 1 370 1 292 1 293 1 135 1 236 2 216 1 106 1 12 2 218 1 220 2 68 2 196 1 69 1 174 2 143 1 304 4 175 1 222 4 
178 2 263 1 148 1 356 1 149 1 246 2 224 4 204 1 120 1 205 1 152 1 25 2 159 2 52 1 231 2 54 1 30 1 317 1 134 1 211 1 60 4 32 1 165 1 290 1 9 1 370 1 292 1 293 1 135 1 216 1 106 1 12 2 218 1 220 2 68 2 69 1 174 2 143 1 304 4 175 1 222 4 
178 3 148 1 356 1 149 1 24 1 246 2 224 4 204 1 1 2 120 1 205 1 152 1 358 2 359 1 78 1 52 1 54 1 317 1 134 1 211 1 32 1 60 5 290 1 9 1 370 1 292 1 293 1 135 1 236 2 216 1 106 1 12 2 218 1 68 3 220 3 196 1 69 1 174 2 143 1 304 5 175 1 222 4 
178 3 148 1 356 1 149 1 24 1 246 2 224 4 204 1 1 2 120 1 205 1 152 1 358 2 359 1 78 1 52 1 54 1 317 1 134 1 211 1 32 1 60 5 290 1 9 1 370 1 292 1 293 1 135 1 236 2 216 1 106 1 12 2 218 1 68 3 220 3 196 1 69 1 174 2 143 1 304 5 175 1 222 4 
178 2 263 1 148 1 356 1 149 1 246 2 224 4 204 1 120 1 205 1 152 1 25 2 159 2 52 1 231 2 54 1 317 1 134 1 211 1 60 4 32 1 290 1 9 1 370 1 135 1 293 1 254 1 216 1 106 1 12 2 218 1 220 2 68 2 69 1 174 2 143 1 304 4 175 1 222 4 
336 1 265 2 281 1 203 1 308 2 151 1 226 1 153 1 361 1 230 1 184 1 347 6 368 1 289 1 59 1 8 2 327 3 239 1 330 1 274 2 333 1 114 3 377 1 352 1 176 1 355 1 
19 2 265 2 281 2 308 1 203 11 151 2 226 1 153 1 360 1 249 1 101 1 184 2 364 1 80 2 251 1 316 1 347 14 59 2 8 4 322 3 272 1 36 1 376 1 327 6 140 3 330 2 328 1 274 1 333 4 377 11 114 8 354 1 176 2 
0 1 146 1 151 1 226 1 156 1 127 1 184 1 185 1 347 2 82 1 134 2 59 1 7 1 8 2 103 1 136 1 63 1 271 1 36 1 272 1 376 1 138 1 325 1 327 1 106 1 240 1 330 1 274 1 218 2 173 1 333 1 42 1 114 1 221 1 241 1 199 1 176 1 261 1 
336 1 0 1 146 1 96 1 281 3 203 7 151 3 153 3 99 2 346 2 162 1 347 20 289 1 59 3 7 2 8 6 103 1 214 2 64 2 106 1 218 3 219 1 173 2 114 10 352 1 221 2 176 3 261 2 19 2 265 8 308 4 226 3 314 1 360 4 230 1 127 1 184 3 80 2 185 2 82 2 368 1 134 3 235 2 136 2 271 3 272 1 36 1 376 1 138 3 327 10 239 1 240 3 330 3 328 2 274 2 333 7 42 2 377 7 199 1 
0 1 357 1 309 1 151 2 226 2 248 1 183 1 127 1 158 2 184 2 347 2 134 1 59 2 7 2 8 4 103 2 270 1 136 3 271 8 272 1 376 1 138 8 189 1 256 1 327 1 190 1 106 1 240 7 330 2 218 1 219 1 275 1 173 2 114 1 221 2 279 1 199 1 176 2 355 1 
0 1 19 1 265 1 281 1 308 1 203 1 151 1 226 1 153 1 127 1 184 1 80 1 347 3 134 1 59 1 8 2 36 1 273 1 327 2 106 1 330 1 328 1 218 1 258 1 276 1 333 1 377 1 114 1 176 1 
8 2 265 1 281 1 203 1 151 1 226 1 330 1 360 1 333 1 184 1 377 1 114 2 80 1 347 2 198 1 176 1 355 1 59 1 
8 2 265 1 308 1 203 1 327 2 151 1 226 1 153 1 330 1 328 1 333 1 184 1 377 1 347 2 176 1 355 1 59 1 84 1 
19 1 265 2 281 1 203 2 308 1 151 1 226 1 153 1 360 1 184 1 80 1 347 4 59 1 8 2 327 2 330 1 328 1 333 2 114 2 377 2 176 1 355 1 
8 2 265 1 281 1 203 1 151 1 226 1 330 1 360 1 333 1 184 1 377 1 114 2 80 1 347 2 279 1 198 1 176 1 59 1 
8 2 265 1 308 1 203 1 327 2 151 1 226 1 153 1 330 1 328 1 333 1 184 1 377 1 347 2 279 1 176 1 59 1 84 1 
19 1 265 2 281 1 203 2 308 1 151 1 226 1 153 1 360 1 184 1 80 1 347 4 59 1 8 2 327 2 330 1 328 1 333 2 114 2 377 2 279 1 176 1 
19 1 265 2 281 1 203 2 308 1 151 1 226 1 153 1 360 1 184 1 80 1 347 4 59 1 8 2 327 2 330 1 328 1 333 2 114 2 377 2 176 1 
151 1 226 1 184 1 346 1 185 1 347 2 82 1 134 1 59 1 7 1 8 2 103 1 136 1 271 1 272 1 376 1 138 1 327 1 240 1 330 1 274 1 218 1 173 1 114 1 42 1 221 1 176 1 261 1 
151 1 226 1 2 1 184 1 185 1 81 1 347 2 82 1 134 1 59 1 7 1 8 2 103 1 136 1 271 1 272 1 376 1 138 1 327 1 300 1 240 1 330 1 274 1 218 1 173 1 114 1 221 1 176 1 
19 1 265 2 281 1 203 2 308 1 151 1 226 1 153 1 360 1 184 1 80 1 347 4 59 1 8 2 36 1 327 2 330 1 328 1 333 2 114 2 377 2 176 1 
19 1 265 2 281 1 357 1 308 1 203 2 151 1 226 1 153 1 99 1 360 1 184 1 346 1 80 1 185 1 347 4 82 1 134 1 59 1 7 1 8 2 136 1 271 1 138 1 327 2 240 1 328 1 330 1 218 1 333 2 173 1 377 2 114 2 42 1 221 1 176 1 261 1 
0 1 19 1 265 1 281 1 203 1 151 1 226 1 153 1 360 1 127 1 184 1 27 1 80 1 347 3 134 1 59 1 8 2 36 1 273 1 327 1 106 1 328 1 330 1 218 1 276 1 333 1 114 2 377 1 176 1 
336 1 19 4 20 4 265 8 73 1 281 5 340 1 308 4 310 1 151 3 153 5 124 1 123 1 360 4 249 3 230 1 210 1 184 3 364 1 80 4 55 1 130 1 347 41 57 1 367 1 289 1 368 1 213 1 6 1 33 1 8 6 322 3 237 2 327 21 239 1 140 4 330 3 328 4 114 20 353 1 352 1 378 1 176 3 
336 1 19 4 20 4 265 7 73 1 281 5 340 1 308 4 310 1 151 4 153 4 124 1 123 1 360 3 249 3 230 1 210 1 184 4 364 1 80 4 55 1 130 1 347 38 57 1 367 1 289 1 368 1 213 1 6 1 33 1 8 8 322 3 237 2 327 18 239 1 140 4 330 4 328 3 114 20 353 1 352 1 378 2 176 4 
336 1 19 7 20 4 265 14 73 1 281 8 340 1 308 7 310 1 151 2 153 8 124 1 123 1 360 7 249 2 230 1 184 2 364 2 80 7 251 2 55 1 130 1 347 52 57 1 289 1 368 1 213 1 6 1 33 1 8 4 322 4 237 1 327 25 239 1 140 4 330 2 328 7 114 27 353 1 352 1 378 1 176 2 
19 3 20 2 265 6 281 3 340 1 308 3 151 2 153 3 360 3 249 1 184 2 364 1 80 3 55 1 347 19 57 1 367 1 6 1 33 1 8 4 322 1 324 1 237 1 327 10 140 2 330 2 328 3 114 9 353 2 176 2 
19 3 20 4 265 4 73 1 281 3 340 1 308 2 310 1 151 3 153 2 123 1 124 1 360 2 249 2 184 3 80 3 55 1 130 1 347 26 57 1 213 1 6 1 33 2 8 6 322 2 237 2 327 12 140 2 330 3 328 2 114 14 353 1 378 2 176 3 
288 1 112 1 307 1 284 1 117 1 83 1 187 1 85 1 31 1 111 1 
121 1 110 1 
112 1 323 1 307 1 284 1 83 1 187 1 31 1 71 1 247 1 
370 1 264 1 179 1 307 1 224 1 284 1 287 1 288 1 206 1 195 2 112 1 315 1 117 1 187 1 83 1 85 1 222 1 31 1 
370 1 264 1 179 1 307 1 224 1 284 1 287 1 288 1 206 1 195 2 112 1 315 1 117 1 187 1 83 1 85 1 222 1 31 1 
370 1 264 1 179 1 307 1 224 1 284 1 287 1 288 1 206 1 195 2 112 1 315 1 117 1 187 1 83 1 85 1 222 1 31 1 
283 1 46 1 95 1 
283 1 46 1 95 1 
172 1 70 1 95 1 
172 1 70 1 
88 1 75 1 
0 2 179 1 307 1 245 1 224 1 225 1 284 1 98 1 121 1 287 1 228 1 75 1 344 1 127 2 134 2 83 1 187 1 31 1 88 1 107 1 106 2 110 1 274 1 218 2 195 1 112 1 222 1 
283 1 46 1 
172 1 70 1 
21 1 309 1 151 1 226 1 313 1 183 1 362 1 158 2 184 1 347 2 134 2 59 1 7 1 8 2 136 1 271 2 36 1 272 1 376 1 138 2 327 1 106 2 299 1 240 2 330 1 218 2 173 1 114 1 221 1 305 1 176 1 
291 1 271 2 357 1 138 2 37 1 11 1 285 1 217 1 240 2 329 1 126 2 219 1 26 1 173 1 113 1 161 1 44 1 15 1 7 1 
291 1 271 1 138 1 37 1 11 1 285 1 217 1 341 1 240 1 329 1 126 2 219 1 173 1 161 1 44 1 15 1 7 1 
103 1 270 1 136 1 271 1 138 1 74 1 240 1 329 1 26 1 275 1 173 1 267 1 221 1 7 1 
291 1 271 1 138 1 37 1 11 1 285 1 217 1 240 1 329 1 126 2 219 1 26 1 173 1 113 1 161 1 44 1 15 1 7 1 
58 1 
370 1 361 1 148 1 372 1 52 1 204 1 260 1 
148 1 149 1 246 1 224 1 1 1 204 1 120 1 358 1 159 1 52 1 317 1 60 1 370 2 236 1 196 1 69 1 222 1 
148 9 201 6 281 2 149 4 246 3 204 2 1 6 153 2 207 1 159 12 52 8 60 5 7 4 103 1 214 2 10 2 351 2 301 2 173 3 69 4 221 3 259 1 260 1 175 2 222 5 16 1 118 1 19 2 357 1 224 5 120 4 122 2 80 2 185 3 317 4 318 1 319 2 133 2 86 2 370 8 87 2 372 1 373 1 136 10 137 6 89 2 271 3 138 3 188 3 326 2 240 3 328 2 141 1 277 2 
19 2 201 5 148 8 73 1 281 2 149 2 224 1 246 1 1 3 204 2 310 1 120 2 153 2 123 1 124 1 249 1 159 6 52 5 80 2 130 1 317 2 60 1 370 5 373 1 137 5 322 1 89 2 326 1 167 1 140 1 328 2 301 1 13 1 69 2 222 1 
0 1 148 2 202 1 281 2 149 1 24 1 224 1 120 1 153 1 127 1 52 2 317 1 211 1 134 1 289 1 255 1 89 2 297 1 326 1 106 1 239 1 192 1 218 1 276 1 92 1 69 1 352 1 222 1 
370 1 148 1 372 1 149 1 204 1 120 1 69 1 52 1 317 1 260 1 
19 2 370 5 201 5 148 5 214 1 137 5 89 2 281 2 1 5 326 1 153 2 328 2 159 10 80 2 52 5 
370 1 224 1 246 1 204 1 222 1 60 1 
148 2 149 2 246 2 224 3 311 1 120 2 52 2 29 1 317 2 318 1 60 4 7 1 294 1 103 2 270 1 136 1 373 2 271 4 138 4 191 1 240 4 275 1 301 2 173 1 69 1 221 1 259 2 306 1 222 3 
0 2 202 1 151 1 226 1 127 2 184 1 346 1 185 1 347 1 82 1 134 3 59 1 7 1 8 2 103 1 136 1 271 1 376 1 138 1 327 1 106 2 240 1 330 1 274 1 218 3 276 2 173 1 42 1 221 1 176 1 200 1 261 1 
336 1 370 4 201 2 148 1 137 2 373 1 149 1 1 2 204 2 120 1 159 4 301 1 69 1 52 2 317 1 
112 1 28 1 83 1 
112 1 28 1 83 1 
88 1 112 1 128 1 83 1 85 1 
112 1 28 1 83 1 
112 1 132 1 83 1 
112 1 132 1 83 1 
112 1 132 1 83 1 
112 1 83 1 
307 1 187 1 
336 1 265 2 281 1 308 2 151 1 153 1 123 1 249 1 230 1 184 1 347 8 368 1 289 1 6 1 8 2 322 1 327 4 140 1 239 1 330 1 114 4 352 1 176 1 
336 1 19 1 265 3 281 2 308 2 151 2 153 1 123 1 360 1 249 1 230 1 184 2 364 1 80 1 347 11 289 1 368 1 6 1 8 4 322 1 327 5 239 1 140 2 330 2 114 6 352 1 45 1 176 2 
336 1 19 2 265 4 73 1 281 3 308 3 310 1 151 3 153 3 123 1 124 1 360 1 249 1 230 1 184 3 80 2 130 1 347 19 289 1 368 1 6 1 8 6 322 1 327 10 239 1 140 1 330 3 328 2 114 9 352 1 378 1 45 1 176 3 
336 1 19 2 265 5 73 1 281 3 308 3 151 3 310 1 153 2 123 1 124 1 360 2 249 1 230 1 184 3 80 2 130 1 347 17 289 1 368 1 6 1 8 6 322 1 327 7 239 1 140 1 330 3 328 1 114 10 352 1 378 1 45 1 176 3 
336 1 265 2 281 1 308 2 151 1 153 1 123 1 249 1 230 1 184 1 347 8 368 1 289 1 6 1 8 2 322 1 327 4 140 1 239 1 330 1 114 4 352 1 176 1 
19 2 265 2 73 1 281 2 308 1 151 1 310 1 153 2 123 1 124 1 360 1 249 1 184 1 80 2 130 1 347 12 6 1 8 2 322 1 327 6 140 1 330 1 328 2 114 6 176 1 
336 1 19 2 265 5 73 1 281 3 308 3 310 1 151 4 153 2 123 1 124 1 360 2 249 1 230 1 184 4 80 2 130 1 347 18 289 1 368 1 6 1 8 8 322 1 327 8 239 1 140 1 330 4 328 1 114 10 352 1 378 2 45 1 176 4 
19 3 265 6 73 1 281 3 308 3 310 1 151 4 153 2 123 1 124 1 360 3 249 1 184 4 80 3 130 1 347 16 367 1 6 1 8 8 322 1 327 7 140 1 330 4 328 2 114 9 378 2 176 4 
265 6 281 1 308 3 327 4 239 3 153 1 360 3 230 1 114 3 352 1 347 7 368 2 289 3 
336 1 19 2 265 4 73 1 281 3 308 3 310 1 151 4 153 2 123 1 124 1 360 1 249 1 230 1 184 4 80 2 130 1 347 18 289 1 368 1 367 1 6 1 8 8 322 1 327 8 239 1 140 1 330 4 328 1 114 10 352 1 378 2 176 4 
336 1 8 4 265 3 281 1 308 2 327 4 151 2 239 1 153 1 330 2 360 1 230 1 184 2 114 4 352 1 347 8 378 1 176 2 368 1 289 1 
336 1 361 1 265 2 230 1 114 3 281 1 352 1 308 2 347 6 327 3 289 1 239 1 368 1 153 1 
8 2 19 1 265 2 281 1 308 1 327 2 151 1 153 1 328 1 330 1 360 1 184 1 114 2 80 1 347 4 45 1 176 1 
19 1 265 2 322 1 281 1 308 1 327 4 140 2 153 1 328 1 360 1 249 1 114 3 364 1 80 1 347 7 
336 1 19 2 265 9 244 1 281 3 308 5 151 2 153 3 360 4 230 1 184 2 80 2 364 1 316 1 251 1 347 23 289 2 368 1 8 4 322 2 327 12 239 2 140 2 328 2 330 2 114 11 352 1 378 2 176 2 
347 1 327 1 140 1 
322 1 114 1 347 1 
8 2 19 1 265 3 214 1 281 1 308 2 327 3 151 1 153 1 330 1 328 1 360 1 184 1 114 3 80 1 347 6 45 1 176 1 
19 2 265 2 73 1 281 2 308 1 151 1 310 1 153 2 123 1 124 1 360 1 249 1 184 1 80 2 130 1 347 12 6 1 8 2 322 1 327 6 140 1 330 1 328 2 114 6 176 1 
265 2 281 1 308 1 327 3 239 1 153 1 360 1 114 3 352 1 347 6 289 1 
8 2 265 2 244 1 308 1 327 2 151 1 239 1 330 1 360 1 230 1 184 1 114 1 347 3 378 1 176 1 289 1 368 1 
8 2 265 5 281 2 308 3 327 5 151 1 239 2 192 1 153 2 330 1 360 2 184 1 114 5 352 1 347 10 176 1 289 2 6 1 
8 2 265 1 281 1 151 1 330 1 360 1 184 1 114 2 80 1 347 2 176 1 6 1 
8 2 19 1 265 2 281 1 308 1 327 2 151 1 153 1 328 1 330 1 360 1 184 1 114 2 80 1 347 4 176 1 6 1 
8 6 265 2 244 1 308 1 327 2 151 3 239 1 330 3 360 1 184 3 114 1 378 1 347 3 176 3 367 1 289 1 6 1 
336 1 19 3 265 12 244 1 281 5 308 7 151 5 153 5 360 5 266 1 249 1 230 1 184 5 364 1 80 3 347 34 56 1 289 3 368 1 367 1 6 1 8 10 322 3 375 1 327 18 239 3 140 4 330 5 328 3 114 16 352 2 378 2 45 1 176 5 
274 1 218 1 356 1 180 1 334 1 106 1 134 1 
356 1 180 1 119 1 106 1 227 1 274 1 218 1 155 1 197 1 5 1 334 1 134 1 
361 1 275 1 270 1 103 1 173 1 136 1 271 1 221 1 138 1 240 1 7 1 
0 1 103 1 136 1 271 1 138 1 106 1 240 1 274 1 218 2 127 1 173 1 42 1 185 1 221 1 82 1 199 1 134 2 7 1 
0 2 205 1 127 1 185 2 82 1 319 1 134 2 211 1 32 1 7 1 136 3 271 1 138 1 106 2 240 1 274 1 218 2 351 1 173 1 42 1 221 2 259 1 199 1 
0 2 205 1 2 1 127 1 185 2 82 1 319 1 134 2 211 1 32 1 7 1 136 3 271 2 215 1 138 2 106 2 240 2 274 1 218 2 351 1 173 1 221 2 259 1 199 1 
370 1 147 1 103 1 136 4 271 3 215 1 224 2 204 1 138 3 188 1 10 1 240 3 351 1 173 1 185 1 221 1 259 1 144 1 175 1 319 1 222 2 60 1 7 1 
370 1 86 1 103 1 136 4 271 3 215 1 224 2 204 1 138 3 188 1 10 1 240 3 351 1 173 1 185 1 221 1 259 1 175 1 319 1 222 2 60 1 7 1 
173 1 271 1 138 1 189 1 240 1 7 1 
118 1 103 2 136 3 357 1 271 7 309 1 138 7 189 1 256 1 190 1 108 1 240 6 248 1 219 1 158 1 51 1 173 2 185 1 221 2 177 1 7 3 
0 1 336 1 281 1 203 1 151 2 153 1 99 1 346 1 347 6 289 1 59 2 7 1 8 4 106 1 218 2 173 1 114 3 352 1 221 1 305 1 176 2 261 1 265 2 357 1 308 2 226 2 127 1 230 1 184 2 185 1 82 1 134 2 368 1 235 1 136 1 271 1 36 1 138 1 327 3 239 1 240 1 330 2 274 2 333 1 42 1 377 1 199 1 
148 1 149 2 224 3 246 1 204 1 120 2 228 1 122 1 52 1 317 2 318 1 133 1 60 2 370 1 86 1 372 1 103 1 136 2 271 1 138 1 188 1 10 1 240 1 277 1 69 2 260 1 175 1 222 3 
118 1 136 2 357 1 271 2 138 2 189 1 10 1 240 2 207 1 173 1 185 1 221 1 7 2 
103 1 270 1 136 1 271 4 357 1 215 1 138 4 240 4 275 1 173 1 43 1 221 1 7 1 
136 1 374 1 271 2 138 2 108 1 240 2 40 1 173 1 185 1 162 1 221 1 259 1 177 1 7 2 
126 1 103 1 173 1 271 1 44 1 138 1 11 1 240 1 15 1 7 1 
219 1 362 1 173 1 136 1 271 2 357 1 309 1 221 1 138 2 240 2 7 1 
270 1 103 1 136 3 271 5 357 1 309 1 138 5 256 1 190 1 240 4 275 1 173 2 43 1 221 2 259 1 7 2 
61 1 270 1 103 1 136 3 271 5 357 1 309 1 138 5 256 1 240 4 275 1 173 2 43 1 221 2 259 1 7 2 
0 1 103 1 136 1 271 1 138 1 106 1 240 1 2 1 274 1 218 2 127 1 173 1 185 1 221 1 82 1 199 1 134 2 7 1 
118 1 136 1 271 1 138 1 108 1 240 1 51 1 173 1 185 1 221 1 259 1 177 1 7 2 
274 1 169 1 91 1 181 1 109 1 
370 1 243 1 293 1 181 2 224 2 204 1 205 1 109 1 228 1 154 1 274 1 169 2 91 2 365 1 116 1 175 1 211 1 32 1 222 2 
21 1 181 1 106 1 109 1 299 1 313 1 169 1 218 1 134 1 
365 1 109 1 154 1 
361 1 331 1 278 1 50 1 
337 1 331 1 34 1 278 1 65 1 342 1 50 1 
369 1 238 1 65 1 
337 1 338 1 34 1 65 3 282 2 139 1 342 3 50 1 79 1 331 1 278 1 93 1 
337 1 331 1 23 1 34 1 278 1 65 2 312 1 342 2 50 1 
17 1 291 1 337 1 34 1 65 1 139 1 342 1 50 1 157 1 126 1 15 1 
337 1 34 1 278 1 65 1 139 1 342 1 50 1 
337 1 331 1 34 1 278 2 65 1 139 1 342 1 
337 2 232 1 34 2 65 2 139 1 342 2 50 1 208 1 278 1 262 1 
337 1 34 1 65 3 296 1 139 1 312 2 342 3 50 2 157 1 331 1 278 1 163 1 242 1 
291 1 337 1 34 1 65 2 139 1 217 1 312 1 342 2 50 1 126 2 331 1 345 1 278 1 44 1 15 1 
337 2 23 1 34 2 65 4 139 1 38 1 312 2 342 4 50 2 157 1 331 1 278 1 163 1 
337 1 331 1 34 1 278 1 65 1 139 1 342 1 50 1 
337 1 34 1 65 4 282 1 312 2 342 4 50 3 157 1 79 1 331 2 142 1 278 2 93 1 163 1 
337 1 280 1 269 1 34 1 47 1 65 2 139 1 312 1 342 2 50 1 331 1 278 1 
337 1 79 2 170 1 331 1 34 1 278 1 65 3 282 2 93 1 139 1 342 3 50 1 
166 1 35 1 66 2 50 2 
337 1 34 1 65 1 139 1 349 1 342 1 
337 1 331 1 34 1 278 1 65 2 139 1 312 1 242 1 342 2 50 1 
125 1 
337 1 331 1 34 1 278 1 65 1 139 1 342 1 50 1 
337 1 331 1 34 1 278 1 65 3 282 1 139 1 312 1 242 1 342 3 50 1 
157 1 142 1 163 1 50 1 
278 1 50 1 

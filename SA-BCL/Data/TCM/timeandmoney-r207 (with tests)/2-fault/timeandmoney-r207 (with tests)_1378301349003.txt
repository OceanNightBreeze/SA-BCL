#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 348 (80,130,146) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 2 274 1 260 1 46 2 25 1 2 4 322 5 135 1 26 9 261 2 227 1 144 1 147 1 34 3 346 2 313 1 267 1 119 1 120 1 315 2 201 2 255 6 238 2 335 1 154 1 157 1 352 1 311 9 
132 2 274 1 260 1 46 2 25 1 2 4 322 5 135 1 26 9 261 2 227 1 144 1 147 1 34 3 313 1 346 2 267 1 315 2 119 1 120 1 201 2 255 6 238 2 335 1 154 1 157 1 352 1 311 9 
132 2 274 1 260 1 46 2 25 1 2 5 322 6 135 1 26 10 261 2 227 1 144 1 147 1 34 4 313 1 346 2 267 1 315 2 119 1 120 1 201 2 255 7 238 2 335 1 154 1 157 1 352 1 311 10 
132 2 274 1 260 1 46 2 25 1 2 3 322 4 135 1 26 7 261 2 227 1 144 1 34 2 313 1 346 1 267 1 315 2 119 1 120 1 201 2 255 4 238 2 335 1 154 1 157 1 352 1 311 7 
346 2 267 1 274 1 120 1 46 1 315 1 2 2 322 3 135 1 201 1 26 4 255 3 238 1 261 1 227 1 147 1 34 1 311 4 
243 1 132 1 120 1 46 1 322 1 135 1 201 1 26 2 238 1 154 1 261 1 28 1 227 1 144 1 85 1 311 2 
132 1 120 1 46 2 2 1 322 2 135 1 26 3 255 1 261 2 227 1 352 1 34 1 311 3 
132 1 274 1 46 2 25 1 2 4 322 5 135 1 26 9 106 1 261 2 227 1 112 1 147 1 34 3 313 1 346 2 267 1 120 1 315 1 201 1 255 7 238 1 352 1 311 9 
132 1 274 1 46 2 25 1 2 4 322 5 135 1 26 9 106 1 261 2 227 1 112 1 147 1 34 3 313 1 346 2 267 1 120 1 315 1 201 1 255 7 238 1 352 1 311 9 
149 1 210 1 43 1 
210 1 340 2 331 1 
328 2 118 2 314 2 177 2 102 2 98 1 380 2 11 1 
161 1 337 1 273 1 167 2 102 2 312 1 138 1 194 1 328 2 198 2 84 1 229 1 364 1 11 1 116 1 88 1 334 1 118 3 171 1 314 3 253 1 237 1 177 2 256 2 206 1 15 1 208 1 376 1 70 1 126 1 20 1 308 1 378 2 98 1 21 2 381 1 380 2 
328 1 118 1 45 1 314 1 231 1 232 1 177 1 102 1 98 1 380 1 
44 1 118 1 131 1 314 1 203 1 104 1 372 1 281 1 139 1 328 1 210 1 83 1 231 1 43 1 
44 1 118 1 131 2 314 1 372 2 102 1 177 1 104 1 281 1 328 1 210 1 83 1 231 1 43 1 380 1 
27 1 131 1 302 1 160 1 372 1 
27 1 210 1 275 1 131 2 302 1 372 2 43 1 13 1 
131 1 302 1 372 1 
131 1 118 1 45 1 314 1 372 1 102 1 177 1 27 1 328 1 307 1 231 1 232 1 98 1 380 1 
210 1 
27 1 210 1 131 2 302 1 372 2 190 1 43 1 13 1 
251 1 131 5 176 2 202 1 372 5 282 1 91 1 13 1 122 2 27 2 210 1 123 1 143 1 158 1 212 2 302 2 72 1 57 1 43 1 
149 1 11 1 
61 1 118 2 314 2 278 1 102 1 177 1 328 2 380 1 11 2 
347 1 341 1 359 1 
337 1 273 1 118 1 314 1 237 1 138 1 208 1 376 1 198 1 17 1 126 1 308 1 378 1 21 1 381 1 11 1 
337 1 273 1 118 2 37 1 314 2 359 1 237 1 177 1 138 1 208 1 328 1 376 1 198 1 126 1 308 1 378 1 21 1 381 1 343 1 380 1 
118 5 291 1 314 5 37 1 203 1 177 4 278 1 102 1 204 1 328 5 169 1 343 2 380 4 11 1 
259 1 328 2 118 2 314 2 231 1 232 1 177 2 380 2 
328 3 118 3 314 3 102 1 177 3 343 1 380 3 11 1 
328 1 118 1 314 1 231 1 232 1 177 1 380 1 
328 1 61 1 118 1 314 1 231 1 177 1 102 1 278 1 380 1 
337 1 44 1 273 1 131 1 167 2 102 2 278 1 104 1 312 1 138 1 281 1 328 3 198 1 83 1 84 1 229 1 231 1 200 1 343 1 11 1 116 1 334 1 118 4 171 1 314 4 37 1 253 1 237 1 177 3 372 1 256 1 206 1 15 1 208 1 376 1 70 1 126 1 308 1 73 1 378 1 98 1 21 1 381 1 380 3 
328 2 118 2 291 1 314 2 203 1 177 1 380 1 343 1 11 1 
44 1 131 1 118 3 37 1 314 3 24 1 102 1 278 1 372 1 104 1 177 3 281 1 328 3 210 1 83 1 231 1 200 1 343 2 380 3 
118 2 314 2 341 1 359 1 278 1 102 1 177 2 328 2 343 1 380 2 
337 1 273 1 118 1 314 1 237 1 138 1 208 1 376 1 198 1 126 1 308 1 378 1 21 1 381 1 11 1 
337 1 273 1 118 1 314 1 3 1 237 1 138 1 208 1 376 1 198 1 214 1 378 1 21 1 381 1 11 1 
244 1 167 2 359 2 341 2 325 1 312 1 49 1 84 1 364 2 116 2 59 1 347 2 334 1 253 1 65 1 256 4 92 1 15 1 70 1 95 1 185 1 96 1 129 1 75 1 
328 1 259 1 118 1 314 1 231 1 177 1 281 1 380 1 
130 1 292 1 
130 1 292 1 
348 1 80 1 
348 1 80 1 
130 1 292 1 348 1 80 1 
130 1 163 1 292 1 
130 1 348 1 292 1 80 1 
130 1 146 1 292 1 
130 1 163 1 292 1 
130 1 163 1 292 1 
130 1 292 1 277 1 
130 1 292 1 277 1 
130 1 292 1 277 1 
130 1 338 1 131 1 262 1 50 1 328 2 110 1 363 1 146 1 114 1 11 1 118 2 292 1 314 2 177 2 372 1 67 1 318 1 298 1 69 1 271 1 216 1 380 2 356 1 
130 2 131 2 292 2 81 2 372 2 136 1 327 1 262 2 50 3 8 1 298 2 110 2 210 1 183 1 211 1 42 1 271 2 356 1 99 1 
315 1 201 1 238 1 
28 1 201 1 238 1 
28 1 339 1 111 1 315 2 238 3 22 1 
28 1 339 1 164 1 315 1 238 2 22 1 
28 1 339 1 315 1 238 2 22 2 
188 1 131 5 340 3 325 1 284 2 27 4 329 1 114 1 331 1 57 1 86 2 176 1 372 5 202 3 179 1 13 1 92 1 122 1 155 1 318 1 123 2 210 2 303 2 304 1 212 1 302 1 354 1 185 1 216 1 43 1 129 1 310 1 
188 1 131 9 340 9 325 3 284 6 196 1 27 7 264 1 114 4 331 3 57 1 176 2 372 9 202 8 179 2 13 1 92 3 207 1 122 2 155 2 209 1 123 6 210 5 182 1 158 1 320 1 303 6 302 6 212 2 185 3 160 5 43 1 129 3 310 3 187 5 
131 3 340 4 325 1 284 2 27 2 329 1 114 1 331 2 86 1 176 1 372 3 202 3 179 1 92 1 122 1 155 1 210 3 123 2 158 1 304 1 212 1 303 2 185 1 43 1 129 1 310 1 
131 4 340 7 325 2 284 4 329 1 27 3 114 2 331 3 86 2 176 1 372 4 202 5 179 1 92 2 122 1 155 1 209 1 210 4 123 4 182 1 158 1 320 1 303 4 212 1 304 1 185 2 43 1 129 2 310 2 
149 1 237 1 205 1 
125 1 237 1 
344 1 
337 1 237 1 381 1 
286 1 237 1 
237 1 381 1 
337 1 16 1 237 3 205 2 381 1 100 1 
116 3 59 3 117 1 62 2 246 1 174 1 280 1 276 1 256 7 38 1 353 1 185 1 364 4 96 2 87 1 129 1 77 1 
116 3 59 3 117 1 62 2 246 1 174 1 280 1 276 1 256 7 38 1 353 1 185 1 364 4 96 2 87 1 129 1 77 1 
116 3 59 3 117 1 62 2 246 1 174 1 280 1 276 1 256 7 38 1 248 1 353 1 185 1 364 4 96 2 87 1 129 1 77 1 
246 1 167 2 276 1 280 2 325 3 195 4 145 1 30 1 84 1 364 16 33 1 87 1 116 15 59 10 117 2 334 1 172 1 62 3 90 1 174 1 253 1 256 31 38 5 351 1 92 3 15 1 124 1 41 3 353 2 185 4 96 5 310 3 129 4 77 2 
78 1 167 4 246 1 276 1 280 1 145 1 84 2 364 5 116 4 59 4 117 1 334 2 62 2 253 2 174 1 256 9 38 1 15 2 181 1 353 1 185 1 96 3 129 1 77 1 
273 1 132 1 46 1 322 1 135 1 26 2 138 1 47 1 326 1 192 1 5 1 225 1 261 1 109 1 53 1 28 1 227 1 198 1 111 1 315 1 120 1 201 1 255 1 152 1 238 2 14 1 374 1 378 1 21 1 311 2 
273 1 0 1 132 1 46 1 322 1 135 1 26 3 191 1 138 1 47 1 326 1 5 1 225 1 261 1 109 1 53 1 28 1 227 1 111 1 198 1 315 1 201 1 255 2 238 2 14 1 374 1 317 1 378 1 21 1 311 3 
273 1 132 1 0 1 322 1 135 1 26 2 138 1 47 1 326 1 5 1 225 1 53 1 28 1 227 1 198 1 111 1 315 1 201 1 255 2 238 2 374 1 317 1 378 1 21 1 311 2 
273 1 132 2 36 1 46 1 89 1 237 1 26 1 138 1 105 1 191 1 326 2 47 2 373 1 225 2 261 1 376 1 198 1 288 1 378 1 266 1 21 1 381 1 311 1 
273 1 0 1 132 1 46 1 26 1 138 1 47 1 326 1 192 1 5 1 225 1 261 1 109 1 53 1 28 1 198 1 111 1 315 1 120 1 201 1 238 2 14 1 374 1 378 1 21 1 311 1 
134 1 
44 1 340 2 222 1 104 1 107 1 48 2 226 1 231 1 57 1 266 1 233 2 234 1 58 1 118 1 314 1 268 2 236 2 176 1 237 1 179 1 13 3 122 1 123 2 240 1 242 1 21 2 355 1 357 4 272 2 273 1 131 5 138 1 281 1 139 1 328 1 197 1 198 2 83 1 330 2 331 2 289 1 89 1 202 2 372 5 203 1 156 2 210 2 376 2 302 6 212 1 305 1 378 2 43 1 381 1 217 1 
272 1 44 1 131 3 104 1 281 1 190 1 107 1 139 1 328 1 83 1 231 1 58 1 234 1 118 1 314 1 203 1 372 3 13 1 240 1 302 2 355 1 357 2 
44 1 131 3 104 1 281 1 190 1 107 1 139 1 328 1 83 1 231 1 58 1 234 1 118 1 314 1 203 1 372 3 13 1 156 1 210 1 240 1 302 1 43 1 355 1 357 3 
272 1 44 1 131 3 104 1 190 1 281 1 107 1 139 1 328 1 83 1 330 1 231 1 58 1 234 1 118 1 314 1 203 1 372 3 13 1 156 1 210 1 240 1 302 2 43 1 355 1 357 3 
44 1 222 1 104 1 107 1 48 2 231 1 57 1 233 2 234 1 58 1 118 1 314 1 268 2 176 1 236 2 13 3 122 1 180 1 123 1 240 1 18 1 355 1 357 6 272 4 131 5 281 1 190 1 139 1 328 1 83 1 330 4 331 2 332 1 368 1 372 5 203 1 202 1 156 4 210 5 302 7 213 1 212 1 43 5 217 1 
44 1 340 2 222 1 104 1 107 1 48 2 231 1 57 1 233 2 234 1 58 1 118 1 314 1 268 2 176 1 236 2 13 2 122 1 123 1 240 1 242 1 355 1 357 4 272 2 131 4 281 1 139 1 328 1 83 1 330 2 331 2 203 1 372 4 202 1 156 2 210 2 212 1 302 4 43 1 217 1 
272 2 44 1 131 4 222 1 104 1 281 1 107 1 48 2 139 1 328 1 83 1 330 2 231 1 331 2 57 1 233 2 58 1 234 1 118 1 314 1 268 2 236 2 176 1 202 1 203 1 372 4 13 2 180 1 122 1 156 2 210 1 123 1 240 1 302 4 212 1 213 1 18 1 43 1 355 1 217 1 357 4 
272 2 44 1 131 4 222 1 104 1 281 1 107 1 48 2 139 1 328 1 83 1 330 2 231 1 331 2 57 1 233 2 58 1 234 1 118 1 314 1 268 2 236 2 176 1 202 1 203 1 372 4 13 2 180 1 122 1 156 2 210 1 123 1 240 1 302 4 212 1 213 1 18 1 43 1 355 1 217 1 357 4 
272 2 44 1 131 4 340 2 222 1 104 1 281 1 107 1 48 2 139 1 328 1 83 1 330 2 199 2 231 1 57 1 366 1 58 1 234 1 118 1 370 2 314 1 236 2 176 1 202 1 203 1 372 4 13 2 180 1 122 1 156 2 210 1 123 1 240 1 302 4 212 1 186 1 97 1 43 1 355 1 357 4 
272 3 44 1 131 4 222 1 104 1 281 1 107 1 48 2 139 1 328 1 83 1 330 3 231 1 331 2 57 1 332 1 233 2 58 1 234 1 118 1 314 1 268 2 236 2 176 1 202 1 203 1 372 4 13 2 180 1 122 1 156 3 210 1 123 1 240 1 212 1 213 1 302 5 18 1 43 1 355 1 217 1 357 5 
272 3 44 1 131 4 222 1 104 1 281 1 107 1 48 2 139 1 328 1 83 1 330 3 231 1 331 2 57 1 332 1 233 2 58 1 234 1 118 1 314 1 268 2 236 2 176 1 202 1 203 1 372 4 13 2 180 1 122 1 156 3 210 1 123 1 240 1 212 1 213 1 302 5 18 1 43 1 355 1 217 1 357 5 
44 1 340 2 222 1 104 1 107 1 48 2 231 1 57 1 234 1 58 1 118 1 314 1 176 1 236 2 13 2 122 1 123 1 240 1 242 1 355 1 357 4 272 2 131 4 281 1 139 1 328 1 83 1 199 2 330 2 370 2 203 1 372 4 202 1 156 2 210 1 212 1 302 4 97 1 43 1 
341 1 359 1 246 1 167 2 280 1 276 1 312 1 84 1 364 3 11 2 59 2 116 3 149 1 347 1 334 1 62 1 253 1 174 1 65 1 256 6 15 1 70 1 185 1 96 2 129 1 77 1 
23 1 167 4 359 11 341 4 312 2 325 1 193 1 195 3 361 1 84 2 364 8 11 1 59 2 116 6 347 11 88 1 334 2 90 1 253 2 178 1 206 1 256 14 38 1 351 1 92 2 15 2 70 1 41 3 185 2 96 1 309 1 310 2 129 1 
337 1 23 1 273 1 341 1 167 2 138 1 312 1 224 1 328 1 198 1 84 1 364 1 343 1 11 1 116 1 88 1 334 1 118 2 314 2 37 1 253 1 350 1 237 1 177 1 206 1 256 2 316 1 208 1 15 1 376 1 17 1 70 1 126 1 308 1 378 1 21 1 381 1 380 1 
337 2 162 1 0 1 165 2 167 6 341 7 312 3 113 1 56 1 229 2 343 1 11 2 116 10 59 8 347 7 118 3 62 1 314 3 174 1 237 2 177 1 15 3 70 3 126 2 185 3 127 2 21 3 129 3 76 2 77 1 23 1 273 2 246 1 359 7 280 1 276 1 138 2 325 2 328 1 198 3 84 3 364 10 88 1 334 3 37 1 253 3 206 1 256 20 38 4 92 2 208 2 376 1 258 2 308 2 96 4 378 3 380 1 381 2 310 2 
273 2 0 1 167 4 138 2 312 2 285 1 141 1 328 1 198 7 84 2 364 1 365 1 266 1 343 1 116 1 60 1 88 1 118 1 334 2 314 1 89 1 253 2 237 3 65 1 177 1 66 1 152 1 256 2 206 1 15 2 336 1 376 2 70 2 184 1 20 2 378 8 21 8 380 1 381 2 
23 1 341 1 359 1 167 2 102 1 278 1 312 1 325 1 328 1 84 1 265 1 364 1 59 1 116 2 347 1 334 1 118 1 314 1 253 1 177 1 256 3 92 1 15 1 70 1 185 1 96 1 380 1 310 1 129 1 
59 1 347 1 334 1 341 1 359 1 167 2 253 1 65 1 312 1 256 2 38 1 92 1 15 1 70 1 84 1 95 1 185 1 364 2 
59 1 116 2 347 1 334 1 341 1 359 1 167 2 253 1 65 1 312 1 325 1 256 2 49 1 15 1 70 1 84 1 96 1 129 1 
116 2 59 2 347 2 334 1 341 2 359 2 167 2 253 1 65 1 325 1 312 1 256 4 38 1 92 1 15 1 70 1 84 1 185 1 364 2 96 1 129 1 310 1 
59 1 347 1 334 1 341 1 359 1 167 2 253 1 312 1 256 2 38 1 92 1 336 1 15 1 70 1 84 1 95 1 185 1 364 2 
59 1 116 2 347 1 334 1 341 1 359 1 167 2 253 1 312 1 325 1 256 2 49 1 336 1 15 1 70 1 84 1 96 1 129 1 
116 2 59 2 347 2 334 1 341 2 359 2 167 2 253 1 325 1 312 1 256 4 38 1 92 1 336 1 15 1 70 1 84 1 185 1 364 2 96 1 129 1 310 1 
116 2 59 2 347 2 334 1 341 2 359 2 167 2 253 1 325 1 312 1 256 4 38 1 92 1 15 1 70 1 84 1 185 1 364 2 96 1 129 1 310 1 
337 1 273 1 167 2 138 1 312 1 198 1 229 1 84 1 364 1 11 1 116 1 88 1 118 1 334 1 314 1 253 1 237 1 256 2 206 1 208 1 15 1 376 1 70 1 126 1 308 1 378 1 21 1 381 1 
337 1 273 1 167 2 3 1 138 1 312 1 198 1 84 1 364 1 11 1 116 1 88 1 118 1 334 1 314 1 253 1 237 1 256 2 269 1 206 1 208 1 15 1 376 1 70 1 214 1 378 1 21 1 381 1 
116 2 59 2 347 2 23 1 334 1 341 2 359 2 167 2 253 1 325 1 312 1 256 4 38 1 92 1 15 1 70 1 84 1 185 1 364 2 96 1 129 1 310 1 
337 1 273 1 341 2 359 2 167 2 325 1 138 1 312 1 198 1 229 1 84 1 364 2 116 2 59 2 347 2 118 1 334 1 314 1 253 1 237 1 152 1 256 4 38 1 92 1 208 1 15 1 258 1 70 1 126 1 185 1 308 1 96 1 378 1 21 1 129 1 381 1 310 1 
23 1 167 2 359 1 341 1 102 1 278 1 325 1 312 1 328 1 9 1 84 1 364 2 116 1 59 1 347 1 334 1 118 1 314 1 253 1 177 1 256 3 38 1 92 1 15 1 70 1 185 1 129 1 380 1 310 1 
78 1 358 2 167 4 4 1 325 3 195 2 7 1 84 2 364 9 116 10 59 6 290 1 150 1 334 2 371 2 90 1 235 1 253 2 256 19 38 3 351 1 153 1 92 3 15 2 41 1 185 3 96 3 379 1 310 3 129 3 
78 1 358 1 220 1 167 6 324 1 4 1 325 2 195 2 51 1 145 2 84 3 364 14 59 4 116 12 290 2 150 1 334 3 369 1 371 4 235 2 253 3 256 26 38 2 153 1 351 2 39 1 92 3 15 3 41 2 185 3 241 1 96 2 129 2 310 3 
78 1 358 1 246 1 220 1 167 6 223 1 280 1 276 1 324 1 4 1 325 4 195 4 7 1 51 1 145 1 84 3 364 20 116 21 59 8 290 1 150 1 369 1 334 3 62 1 371 4 90 1 174 1 235 2 253 3 256 41 38 4 39 1 351 3 153 1 92 4 15 3 41 3 185 5 241 1 96 4 310 4 129 5 77 1 
78 1 358 1 246 1 220 1 167 8 223 1 280 1 276 1 324 1 4 1 325 3 195 4 7 1 51 1 145 2 84 4 364 20 116 18 59 7 290 1 150 1 369 1 334 4 62 1 371 4 90 1 174 1 235 2 253 4 256 38 38 3 39 1 351 3 153 1 92 4 15 4 41 3 185 5 241 1 96 4 310 4 129 4 77 1 
78 1 358 1 246 1 220 1 167 4 280 1 276 1 324 1 4 1 325 7 193 2 195 4 51 1 145 1 84 2 364 27 116 25 59 14 290 1 150 1 369 1 334 2 62 1 371 4 90 2 174 1 235 1 253 2 256 52 38 7 39 1 351 2 153 1 92 7 15 2 41 4 185 8 241 1 96 7 310 7 129 8 77 1 
130 1 8 1 110 1 298 1 183 1 211 1 292 1 297 1 271 1 262 1 
69 1 146 1 
82 1 130 1 170 1 110 1 298 1 292 1 271 1 270 1 262 1 
93 1 163 1 
151 1 133 1 277 1 
130 1 131 1 292 1 81 1 372 1 136 1 327 1 262 1 50 2 8 1 298 1 110 1 210 1 183 1 211 1 42 1 271 1 356 1 
130 1 131 1 292 1 81 1 372 1 136 1 327 1 262 1 50 2 8 1 298 1 110 1 210 1 183 1 211 1 42 1 271 1 356 1 
130 1 131 1 292 1 81 1 372 1 136 1 327 1 262 1 50 2 8 1 298 1 110 1 210 1 183 1 211 1 42 1 271 1 356 1 
93 1 163 1 151 1 
93 1 163 1 151 1 
133 1 277 1 
151 1 133 1 277 1 
338 1 67 1 
130 1 338 1 219 1 131 1 81 1 262 1 50 1 27 1 328 2 110 1 363 1 146 1 114 1 11 1 118 2 314 2 292 1 372 1 177 2 67 1 318 1 298 1 69 1 42 1 271 1 216 1 380 2 
218 1 23 1 273 1 79 1 167 2 138 1 312 1 285 1 328 2 250 1 198 2 84 1 364 1 365 1 116 1 88 1 118 2 334 1 314 2 253 1 237 1 256 2 206 1 15 1 377 1 70 1 19 1 20 2 378 2 21 2 381 1 
273 1 0 1 315 1 254 1 201 1 138 1 152 1 238 2 5 1 374 1 225 1 28 1 54 1 109 1 142 1 111 1 198 2 378 2 21 2 
245 1 273 1 0 1 315 1 254 1 201 1 138 1 238 2 5 1 374 1 225 1 28 1 109 1 111 1 198 1 378 1 21 1 
273 1 36 1 89 1 237 1 138 1 225 1 142 1 376 1 198 1 321 1 378 1 21 1 266 1 381 1 
273 1 0 1 315 1 254 1 201 1 138 1 238 2 5 1 374 1 225 1 28 1 54 1 109 1 142 1 111 1 198 1 378 1 21 1 
10 1 
149 1 210 1 123 1 72 1 202 1 91 1 43 1 
131 1 340 1 331 1 57 1 233 1 268 1 176 1 202 1 372 1 13 1 122 1 123 1 210 2 212 1 302 1 43 1 217 1 
337 3 165 2 1 2 340 12 104 2 230 2 57 4 237 10 176 4 121 1 179 2 239 2 13 3 122 4 16 1 123 8 125 3 72 1 185 2 74 1 21 3 129 2 189 2 273 4 131 5 279 2 138 3 325 2 140 2 284 6 286 2 197 1 198 3 331 6 333 1 202 9 372 5 152 1 91 1 205 2 375 2 92 2 210 8 94 1 376 1 212 4 302 5 303 6 159 2 378 3 215 1 43 2 381 3 310 2 
131 1 340 6 324 1 325 2 140 1 284 5 195 1 51 1 197 1 32 1 331 3 57 2 345 1 369 1 176 2 372 1 202 8 179 1 13 1 239 2 351 1 39 1 92 2 122 2 210 5 123 5 302 1 303 5 212 2 41 1 185 2 241 1 43 2 310 2 129 2 
131 1 45 1 166 1 280 1 102 1 140 1 328 1 231 1 232 1 57 1 118 1 314 1 174 1 176 1 372 1 202 2 177 1 239 2 122 1 123 2 212 1 213 1 185 2 307 1 98 1 129 1 380 1 77 1 
176 1 202 1 91 1 122 1 123 1 210 1 212 1 72 1 57 1 43 1 
165 1 340 10 202 5 325 2 239 2 140 1 92 2 284 5 123 5 210 5 303 5 185 2 331 5 310 2 129 2 
210 1 131 1 302 1 372 1 43 1 13 1 
273 1 131 3 138 1 108 1 263 1 226 1 197 2 198 4 57 1 266 1 89 1 237 1 176 2 202 2 372 3 179 2 13 2 122 2 123 2 158 1 94 1 376 2 305 1 212 2 302 4 378 4 74 2 21 4 381 1 
337 1 273 1 167 2 102 2 138 1 312 1 328 2 198 1 229 1 84 1 11 1 116 1 334 1 118 3 171 1 314 3 253 1 237 1 177 2 256 1 206 1 15 1 208 1 376 1 70 1 126 1 308 1 378 1 98 1 21 1 380 2 381 1 
62 1 340 4 176 1 202 1 179 1 284 2 122 1 123 2 210 4 197 1 303 2 212 1 331 2 57 1 43 2 
110 1 247 1 262 1 
8 1 110 1 349 1 67 1 262 1 
110 1 247 1 262 1 
110 1 247 1 262 1 
110 1 300 1 262 1 
110 1 300 1 262 1 
110 1 300 1 262 1 
110 1 262 1 
130 1 292 1 
116 4 59 3 334 2 62 1 167 4 246 1 174 1 253 2 276 1 280 1 256 8 38 1 15 2 145 1 84 2 185 1 364 4 96 2 129 1 77 1 
116 3 59 2 149 1 62 1 246 1 174 1 276 1 280 1 256 6 185 1 364 3 96 2 129 1 77 1 
116 2 59 2 334 1 167 2 253 1 325 1 256 4 38 1 92 1 15 1 148 1 84 1 185 1 364 2 96 1 129 1 310 1 
116 4 59 2 90 1 325 1 256 7 38 1 351 1 92 1 195 2 41 1 364 3 185 1 96 1 129 1 310 1 
246 1 167 4 280 2 276 1 103 1 325 2 193 1 195 2 361 1 145 2 84 2 364 11 59 9 116 12 334 2 62 1 90 1 174 1 253 2 256 23 38 4 92 2 15 2 41 2 185 3 96 5 310 2 129 3 77 2 
116 1 256 1 195 1 
41 1 364 1 256 1 
116 3 59 3 334 1 165 1 167 2 253 1 325 1 256 6 38 1 92 1 15 1 84 1 148 1 185 1 364 3 96 2 310 1 129 1 
78 1 167 2 324 1 325 2 195 1 51 1 84 1 364 6 116 6 59 2 334 1 369 1 253 1 256 12 38 1 351 1 39 1 92 2 15 1 41 1 185 2 241 1 96 1 310 2 129 2 
59 2 116 3 174 1 364 3 185 1 280 1 96 1 256 6 38 1 129 1 77 1 
59 2 116 2 334 1 246 1 167 2 253 1 280 1 103 1 276 1 256 3 38 1 15 1 145 1 84 1 364 1 96 1 77 1 
59 5 116 5 78 1 334 1 167 2 166 1 253 1 174 1 280 2 256 10 38 2 15 1 84 1 364 5 185 2 96 3 129 2 77 2 
59 1 78 1 334 1 167 2 253 1 256 2 38 1 92 1 15 1 84 1 185 1 364 2 
116 2 59 2 78 1 334 1 167 2 253 1 325 1 256 4 38 1 92 1 15 1 84 1 185 1 364 2 96 1 129 1 310 1 
116 2 59 2 78 1 334 3 167 6 253 3 103 1 280 1 256 3 38 1 7 1 15 3 145 1 84 3 364 1 96 1 77 1 
78 1 246 1 167 10 280 3 276 1 103 1 325 3 195 4 7 1 145 2 30 1 148 1 84 5 364 16 33 1 116 18 59 12 334 5 62 1 90 1 174 2 253 5 256 34 38 5 351 1 92 3 15 5 124 1 41 3 185 5 96 7 310 3 129 5 77 3 
78 1 167 2 246 1 276 1 280 1 195 1 84 1 364 4 116 4 59 2 334 1 62 1 253 1 174 1 256 8 351 1 39 1 15 1 41 1 185 1 96 2 129 1 77 1 
78 1 246 1 167 4 280 1 276 1 195 2 84 2 148 1 364 6 116 5 59 3 334 2 62 1 90 1 174 1 253 2 256 11 38 1 351 1 39 1 92 1 15 2 41 1 185 2 96 2 129 1 310 1 77 1 
78 1 246 1 167 6 280 1 276 1 324 1 325 2 195 1 51 1 145 1 148 1 84 3 364 9 116 10 59 4 334 3 369 1 62 1 174 1 253 3 256 19 38 1 351 1 39 1 92 2 15 3 41 1 185 3 241 1 96 3 310 2 129 3 77 1 
78 1 246 1 167 6 280 1 276 1 324 1 325 1 195 1 51 1 145 1 148 1 84 3 364 10 116 7 59 5 334 3 369 1 62 1 174 1 253 3 256 17 38 2 351 1 39 1 92 2 15 3 41 1 185 3 241 1 96 3 310 2 129 2 77 1 
78 1 167 2 246 1 276 1 280 1 195 1 84 1 364 4 116 4 59 2 334 1 62 1 253 1 174 1 256 8 351 1 39 1 15 1 41 1 185 1 96 2 129 1 77 1 
78 1 167 2 324 1 325 2 195 1 51 1 84 1 364 6 116 6 59 2 334 1 369 1 253 1 256 12 38 1 351 1 39 1 92 2 15 1 41 1 185 2 241 1 96 1 310 2 129 2 
78 1 246 1 167 8 280 1 276 1 324 1 325 1 195 1 51 1 145 2 148 1 84 4 364 10 116 8 59 5 334 4 369 1 62 1 174 1 253 4 256 18 38 2 351 1 39 1 92 2 15 4 41 1 185 3 241 1 96 3 310 2 129 2 77 1 
78 1 167 8 324 1 325 2 195 1 7 1 51 1 145 2 84 4 364 9 116 7 59 6 334 4 369 1 253 4 256 16 38 3 351 1 39 1 92 3 15 4 41 1 185 3 241 1 96 3 310 3 129 2 
116 4 59 6 246 2 174 1 276 1 280 3 256 7 38 3 185 1 364 3 96 3 129 1 77 3 
78 1 246 1 167 8 280 1 276 1 324 1 325 1 195 1 7 1 51 1 145 2 84 4 364 10 116 8 59 4 334 4 369 1 62 1 174 1 253 4 256 18 38 1 351 1 39 1 92 2 15 4 41 1 185 3 241 1 96 3 310 2 129 2 77 1 
328 1 118 1 291 1 314 1 71 1 203 1 11 1 
118 1 291 1 314 1 323 1 296 1 203 1 328 1 40 1 301 1 257 1 71 1 11 1 
149 1 273 1 198 1 376 1 89 1 237 1 138 1 378 1 266 1 21 1 381 1 
337 1 273 1 118 2 314 2 237 1 177 1 138 1 208 1 328 1 376 1 198 1 126 1 378 1 21 1 381 1 343 1 380 1 11 1 
44 1 337 2 273 1 118 2 314 2 237 3 177 2 281 1 138 1 208 1 286 1 328 2 198 1 159 1 126 1 231 1 378 1 74 1 21 1 381 2 343 1 380 1 11 1 
44 1 337 2 273 1 118 2 314 2 3 1 237 3 177 2 281 1 138 1 208 1 286 1 328 2 287 1 198 2 159 1 231 1 378 2 74 1 21 2 381 2 343 1 380 1 11 1 
367 1 337 1 273 1 131 2 237 4 104 1 372 2 137 1 138 1 205 1 286 1 287 1 210 1 376 1 198 3 302 1 159 1 125 1 378 3 43 1 74 1 21 3 381 1 
337 1 273 1 131 2 237 4 104 1 372 2 138 1 205 1 375 1 286 1 287 1 210 1 376 1 198 3 302 1 159 1 125 1 378 3 43 1 74 1 21 3 381 1 
273 1 198 1 184 1 138 1 378 1 21 1 
60 1 337 1 273 3 0 1 294 1 237 3 66 1 152 1 342 1 138 2 283 1 285 1 141 1 16 1 376 2 198 6 184 1 20 1 378 7 21 7 381 2 
337 1 341 1 167 4 312 2 229 1 343 1 11 2 59 2 116 3 347 1 118 2 62 1 314 2 174 1 237 1 177 1 15 2 70 2 126 1 19 1 185 1 21 1 76 1 129 1 77 1 23 1 273 1 246 1 359 1 276 1 280 1 138 1 328 1 198 1 84 2 364 3 334 2 253 2 152 1 256 6 208 1 258 1 308 1 378 1 96 2 380 1 381 1 
189 1 131 3 279 1 104 1 27 1 198 1 230 1 57 2 176 2 237 2 202 1 372 3 91 1 205 1 13 1 375 1 122 2 210 1 123 1 376 1 94 1 212 2 302 2 125 1 72 1 378 1 43 1 21 1 
337 1 273 2 237 2 152 1 138 1 205 1 16 1 198 2 184 1 378 2 215 1 21 2 381 1 
273 1 89 1 237 1 152 1 138 1 6 1 287 1 376 1 198 4 378 4 21 4 266 1 381 1 
337 1 162 1 273 2 295 1 237 1 342 1 138 1 283 1 299 1 198 2 378 2 74 1 21 2 381 1 
28 1 273 1 198 1 376 1 201 1 138 1 378 1 238 1 374 1 21 1 
273 1 0 1 237 1 152 1 138 1 285 1 198 2 377 1 378 2 21 2 381 1 
60 1 273 2 89 1 237 3 152 1 66 1 138 2 6 1 285 1 376 1 198 4 378 5 74 1 266 1 21 5 381 2 
60 1 273 2 89 1 237 3 152 1 138 2 6 1 285 1 376 1 198 4 306 1 378 5 74 1 266 1 21 5 381 2 
337 1 273 1 118 2 314 2 3 1 237 1 177 1 138 1 208 1 328 1 376 1 198 1 378 1 21 1 381 1 343 1 380 1 11 1 
337 1 273 2 294 1 237 1 342 1 138 1 283 1 16 1 198 1 378 1 74 1 21 1 381 1 
252 1 173 1 175 1 68 1 11 1 
44 1 131 2 252 2 12 1 173 2 64 1 175 2 104 1 372 2 281 1 68 1 27 1 210 1 83 1 231 1 43 1 200 1 128 1 11 1 
218 1 118 1 79 1 314 1 173 1 175 1 68 1 328 1 250 1 
12 1 68 1 128 1 
149 1 227 1 322 1 135 1 
227 1 46 1 322 1 135 1 26 1 261 1 311 1 
132 1 26 1 47 1 
120 1 46 1 322 1 101 1 221 1 135 1 26 3 261 1 154 2 168 1 227 1 311 3 
346 1 227 1 46 1 322 1 135 1 255 1 26 2 261 1 311 2 
267 1 315 1 46 1 120 1 322 1 2 1 201 1 26 1 238 1 261 1 311 1 
46 1 120 1 322 1 135 1 26 1 261 1 311 1 
227 1 46 1 120 1 135 2 26 1 261 1 311 1 
120 1 46 2 322 1 135 1 26 2 261 2 362 1 249 1 319 1 311 2 
313 1 227 1 25 1 46 1 120 1 322 2 2 1 135 1 255 2 26 3 34 1 261 1 311 3 
120 1 46 1 315 1 322 1 135 1 201 1 26 2 255 1 238 2 261 1 28 1 52 1 227 1 111 1 311 2 
346 1 227 1 46 2 120 1 322 2 2 1 147 1 135 1 255 2 26 4 34 1 261 2 311 4 
227 1 46 1 120 1 322 1 135 1 26 1 261 1 311 1 
35 1 46 1 2 1 322 3 221 1 135 2 255 2 26 4 154 1 261 1 168 1 227 2 34 1 311 4 
227 1 29 1 46 1 120 1 322 1 31 1 135 1 255 1 26 2 106 1 261 1 311 2 
168 2 227 1 46 1 120 1 322 1 221 1 135 1 63 1 26 3 154 2 261 1 311 3 
55 1 293 1 322 2 115 2 
228 1 46 1 120 1 26 1 261 1 311 1 
313 1 227 1 46 1 120 1 322 1 135 1 255 1 26 2 261 1 311 2 
360 1 
227 1 46 1 120 1 322 1 135 1 26 1 261 1 311 1 
313 1 120 1 46 1 322 1 135 1 255 1 26 3 261 1 154 1 227 1 311 3 
35 1 322 1 2 1 34 1 
322 1 135 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
59 2 62 1 22 2 114 2 356 1 89 1 190 1 64 6 357 2 117 1 25 9 221 1 71 3 198 5 326 1 8 2 118 2 298 1 156 1 10 9 174 1 50 1 332 2 333 4 376 1 124 1 106 1 127 1 
59 2 62 1 22 2 114 2 356 1 89 1 190 1 64 6 357 2 117 1 25 9 221 1 71 3 198 5 326 1 8 2 118 2 298 1 156 1 10 9 174 1 50 1 332 2 333 4 376 1 124 1 106 1 127 1 
59 2 62 1 22 2 114 2 356 1 89 1 190 1 64 7 357 2 117 1 25 10 221 1 71 4 198 6 326 1 8 2 118 2 298 1 156 1 10 10 174 1 50 1 332 2 333 5 376 1 124 1 106 1 127 1 
59 2 22 2 114 2 356 1 89 1 190 1 64 4 357 1 117 1 25 7 221 1 71 2 198 4 326 1 8 2 118 2 298 1 156 1 10 7 174 1 50 1 332 2 333 3 376 1 124 1 106 1 127 1 
118 1 59 1 62 1 22 1 156 1 10 4 114 1 190 1 64 3 332 1 357 2 333 2 376 1 117 1 127 1 25 4 71 1 198 3 
59 1 118 1 8 1 10 2 50 1 344 1 114 1 88 1 89 1 190 1 332 1 117 1 68 1 127 1 25 2 198 1 
59 2 298 1 8 1 10 3 114 2 190 1 64 1 333 1 117 1 127 1 25 3 71 1 198 2 
118 1 59 2 298 1 8 1 99 1 62 1 22 1 156 1 10 9 11 1 356 1 114 2 190 1 64 7 332 1 357 2 333 4 376 1 117 1 127 1 221 1 25 9 198 5 71 3 
118 1 59 2 298 1 8 1 99 1 62 1 22 1 156 1 10 9 11 1 356 1 114 2 190 1 64 7 332 1 357 2 333 4 376 1 117 1 127 1 221 1 25 9 198 5 71 3 
318 1 20 1 366 1 
20 1 224 2 323 1 
374 2 244 2 161 1 42 1 187 2 82 2 263 2 101 2 
182 1 288 1 237 1 37 1 187 3 290 1 239 1 23 1 39 1 244 2 42 1 41 1 321 2 170 1 46 2 95 1 73 1 152 2 299 1 370 1 226 1 343 2 228 1 12 1 101 2 232 1 374 2 250 1 28 1 161 1 31 1 260 1 107 2 82 3 235 1 263 2 55 1 
374 1 244 1 161 1 187 1 378 1 200 1 82 1 263 1 120 1 101 1 
20 1 329 1 187 1 120 1 102 1 242 1 318 1 145 1 253 1 259 1 82 1 93 1 81 1 263 1 
20 1 329 2 187 1 120 1 101 1 242 1 318 1 374 1 253 2 244 1 259 1 82 1 93 1 81 1 263 1 
203 1 253 1 184 1 329 1 137 1 
318 1 253 2 20 1 184 1 329 2 60 1 137 1 379 1 
253 1 184 1 329 1 
329 1 187 1 137 1 200 1 120 1 101 1 374 1 253 1 244 1 161 1 78 1 378 1 82 1 263 1 
20 1 
318 1 253 2 20 1 35 1 184 1 329 2 60 1 137 1 
131 1 210 2 20 1 297 1 184 2 47 2 329 5 60 1 137 2 75 1 166 1 302 2 317 1 318 1 142 1 253 5 123 1 193 1 360 1 
73 1 37 1 187 2 152 1 165 1 226 1 343 1 12 1 228 1 101 1 250 1 256 1 244 1 321 1 260 1 235 1 82 2 263 1 363 1 95 1 
366 1 42 1 
187 2 101 1 374 1 304 1 244 1 42 2 275 1 82 2 263 2 
348 1 165 1 138 1 
73 1 37 1 187 1 152 1 226 1 343 1 228 1 12 1 250 1 42 1 321 1 260 1 171 1 82 1 235 1 95 1 
374 1 244 3 42 1 187 3 82 3 263 3 363 1 101 3 
244 1 187 1 200 1 82 1 263 1 120 1 101 1 
374 1 304 1 244 1 187 1 275 1 82 1 263 1 120 1 101 1 
237 1 37 1 187 4 290 1 239 1 23 1 39 1 242 1 244 3 42 1 41 1 321 1 116 1 275 1 170 1 93 1 46 1 363 1 95 1 73 1 27 1 329 1 152 1 299 1 370 1 226 1 343 1 12 1 228 1 120 1 101 3 250 1 374 2 253 1 256 1 161 1 259 1 260 1 107 2 235 1 82 4 81 1 263 3 55 1 
145 1 172 1 244 1 42 1 187 2 82 2 263 2 363 1 101 1 
72 1 27 1 20 1 329 1 187 3 120 1 101 3 242 1 374 1 253 1 256 1 244 3 259 1 275 1 81 1 82 3 93 1 263 3 363 2 
374 1 348 1 244 2 187 2 275 1 165 1 82 2 263 2 363 1 101 2 
73 1 37 1 187 1 152 1 226 1 343 1 228 1 12 1 250 1 42 1 321 1 260 1 82 1 235 1 95 1 
73 1 353 1 37 1 187 1 152 1 226 1 139 1 343 1 12 1 42 1 321 1 260 1 82 1 235 1 95 1 
237 1 185 1 355 1 188 1 165 2 290 1 138 2 39 1 243 1 271 1 41 1 169 1 325 1 218 1 46 4 299 2 281 1 370 1 232 2 205 1 348 2 178 1 107 2 55 1 
244 1 259 1 330 1 187 1 82 1 263 1 120 1 101 1 
340 1 172 1 187 5 101 4 374 1 145 1 244 4 256 1 42 1 275 1 53 1 82 5 263 5 363 2 
244 2 330 1 187 2 200 1 82 2 263 2 120 1 101 2 
48 1 70 1 
48 1 70 1 
328 1 223 1 
328 1 223 1 
328 1 223 1 
98 1 48 1 70 1 
98 1 48 1 70 1 
173 1 48 1 70 1 
328 1 223 1 48 2 100 1 70 2 241 1 
98 1 48 1 70 1 
48 1 70 1 361 1 
48 1 70 1 361 1 
48 1 70 1 361 1 
364 2 286 1 20 1 329 2 48 2 155 1 227 1 38 2 241 1 14 2 253 2 43 1 44 1 246 3 125 2 70 2 208 1 309 1 311 2 
364 1 327 1 135 1 173 1 329 1 187 2 48 1 38 1 14 1 101 2 251 1 143 1 253 1 284 1 358 1 244 2 42 1 43 1 246 1 125 1 70 1 82 2 263 2 380 1 
332 1 118 1 22 1 
332 1 118 1 88 1 
118 3 225 1 153 1 22 2 112 1 88 1 
118 2 153 1 22 1 54 1 112 1 88 1 
118 2 153 1 22 1 112 2 88 1 
131 2 210 1 20 2 185 1 184 1 267 2 355 1 60 1 137 4 164 2 166 1 111 1 318 1 317 3 293 1 146 1 169 1 323 1 216 1 327 1 224 3 47 1 151 1 329 5 302 1 283 2 251 1 253 5 205 1 284 1 206 1 163 1 
265 1 131 6 210 2 20 5 185 3 184 6 267 6 355 3 60 1 137 7 211 1 166 1 111 2 318 1 317 8 293 2 146 3 193 1 169 3 323 3 216 1 94 1 224 9 47 2 329 9 300 5 282 1 302 2 283 6 203 5 253 9 205 3 284 4 306 1 375 1 
131 2 210 1 20 3 185 1 355 1 267 2 137 2 164 1 111 1 318 1 317 3 293 1 146 1 169 1 323 2 193 1 47 1 224 4 329 3 302 1 283 2 253 3 205 1 284 1 206 1 163 1 
131 4 210 1 20 4 185 2 267 4 355 2 164 2 137 3 211 1 111 1 318 1 317 5 293 1 146 2 169 2 323 3 193 1 94 1 224 7 47 1 329 4 282 1 302 1 283 4 253 4 205 2 284 2 206 1 163 1 
366 1 226 1 63 1 
21 1 226 1 
307 1 
260 1 226 1 
104 1 37 1 260 1 63 2 226 3 176 1 
37 1 260 1 226 1 
226 1 229 1 
279 1 355 1 188 3 299 3 336 1 201 1 230 1 243 2 232 4 205 1 159 1 273 1 262 2 310 1 220 1 46 7 130 1 
279 1 355 1 188 3 299 3 336 1 201 1 230 1 243 2 232 4 205 1 159 1 273 1 262 2 310 1 220 1 46 7 130 1 
279 1 355 1 188 3 299 3 336 1 201 1 230 1 243 2 232 4 205 1 159 1 214 1 273 1 262 2 310 1 220 1 46 7 130 1 
237 1 36 1 185 3 355 4 188 10 290 1 336 2 39 1 243 5 146 3 294 1 192 1 169 3 273 5 220 1 46 31 279 2 9 1 299 15 370 1 372 1 201 1 202 4 230 1 232 16 159 2 205 4 107 2 180 3 262 3 310 2 264 1 83 1 130 1 
237 2 355 1 188 4 290 2 336 1 39 2 243 3 324 1 273 1 220 1 46 9 279 1 299 4 370 2 201 1 232 5 205 1 159 1 107 4 262 2 310 1 181 1 83 1 130 1 
59 1 314 1 22 1 114 1 88 1 190 1 64 1 321 1 117 1 362 1 25 2 198 1 26 1 73 1 8 1 118 2 225 1 152 1 369 1 10 2 343 1 305 1 204 1 331 1 122 1 254 1 332 1 261 1 235 1 127 1 
59 1 335 1 314 1 22 1 337 1 114 1 88 1 64 2 321 1 117 1 219 1 362 1 25 3 198 1 26 1 73 1 8 1 118 2 225 1 152 1 10 3 343 1 305 1 204 1 122 1 254 1 332 1 261 1 235 1 127 1 
314 1 22 1 337 1 88 1 64 2 321 1 117 1 219 1 362 1 25 2 198 1 26 1 73 1 8 1 118 2 225 1 152 1 10 2 343 1 305 1 254 1 332 1 261 1 235 1 127 1 
59 1 335 1 141 1 114 1 338 1 321 1 194 1 95 1 25 1 26 2 73 1 8 2 280 1 152 1 10 1 226 1 343 1 305 2 252 1 260 1 108 1 235 1 261 2 
26 1 73 1 118 2 8 1 59 1 225 1 314 1 152 1 22 1 10 1 337 1 343 1 88 1 114 1 204 1 190 1 305 1 254 1 122 1 331 1 332 1 321 1 235 1 261 1 362 1 25 1 
222 1 
131 2 287 2 184 6 187 1 140 1 40 1 242 1 144 1 145 1 90 2 194 1 6 2 93 1 95 2 47 1 152 2 302 1 343 2 102 1 253 5 160 2 259 1 260 1 263 1 56 2 210 1 20 2 60 3 166 1 111 1 318 1 317 2 270 1 321 2 323 2 359 1 274 2 217 1 24 4 73 1 365 1 74 1 367 1 224 2 280 1 329 5 226 1 120 1 29 1 234 1 126 1 235 1 82 1 81 1 129 2 
56 1 35 1 74 1 184 2 329 3 60 1 187 1 140 1 120 1 40 1 102 1 242 1 253 3 144 1 145 1 29 1 259 1 81 1 93 1 82 1 263 1 24 2 
20 1 35 1 184 1 187 1 60 1 140 1 40 1 242 1 318 1 145 1 144 1 93 1 24 3 74 1 329 3 120 1 102 1 253 3 29 1 160 1 259 1 82 1 81 1 263 1 
56 1 35 1 20 1 184 2 60 1 187 1 140 1 40 1 242 1 318 1 145 1 144 1 90 1 93 1 24 3 74 1 329 3 120 1 102 1 253 3 29 1 160 1 259 1 82 1 81 1 263 1 
131 1 35 1 287 2 184 7 187 1 140 1 40 1 242 1 144 1 145 1 90 4 93 1 6 2 149 1 47 1 302 1 102 1 253 5 160 4 257 1 259 1 207 1 263 1 56 4 210 1 20 5 58 1 60 3 166 1 318 5 317 1 319 1 323 2 274 2 24 6 365 1 74 1 329 5 120 1 29 1 234 1 81 1 82 1 129 2 
131 1 287 2 184 4 187 1 140 1 40 1 242 1 145 1 144 1 90 2 93 1 6 2 47 1 302 1 102 1 253 4 160 2 259 1 263 1 56 2 210 1 20 2 60 2 166 1 317 1 318 1 323 2 274 2 24 4 365 1 74 1 224 2 367 1 329 4 120 1 29 1 234 1 81 1 82 1 129 2 
131 1 56 2 210 1 20 1 287 2 184 4 58 1 60 2 187 1 166 1 140 1 40 1 242 1 318 1 319 1 317 1 145 1 144 1 90 2 323 2 274 2 6 2 93 1 24 4 365 1 74 1 47 1 329 4 302 1 120 1 102 1 253 4 29 1 160 2 259 1 234 1 207 1 82 1 81 1 263 1 129 2 
131 1 56 2 210 1 20 1 287 2 184 4 58 1 60 2 187 1 166 1 140 1 40 1 242 1 318 1 319 1 317 1 145 1 144 1 90 2 323 2 274 2 6 2 93 1 24 4 365 1 74 1 47 1 329 4 302 1 120 1 102 1 253 4 29 1 160 2 259 1 234 1 207 1 82 1 81 1 263 1 129 2 
131 1 56 2 210 1 20 1 287 2 184 4 60 2 187 1 315 2 166 1 2 1 140 1 40 1 242 1 318 1 319 1 317 1 145 1 144 1 90 2 168 2 274 2 295 1 93 1 24 4 74 1 224 2 47 1 329 4 342 1 302 1 120 1 102 1 253 4 29 1 160 2 259 1 234 1 82 1 81 1 263 1 
131 1 56 3 210 1 20 1 287 2 184 5 58 1 60 2 187 1 166 1 140 1 40 1 242 1 318 1 319 1 317 1 145 1 144 1 90 3 323 2 274 2 6 2 93 1 24 5 365 1 74 1 149 1 47 1 329 4 302 1 120 1 102 1 253 4 29 1 160 3 259 1 234 1 207 1 82 1 81 1 263 1 129 2 
131 1 56 3 210 1 20 1 287 2 184 5 58 1 60 2 187 1 166 1 140 1 40 1 242 1 318 1 319 1 317 1 145 1 144 1 90 3 323 2 274 2 6 2 93 1 24 5 365 1 74 1 149 1 47 1 329 4 302 1 120 1 102 1 253 4 29 1 160 3 259 1 234 1 207 1 82 1 81 1 263 1 129 2 
131 1 287 2 184 4 187 1 2 1 140 1 40 1 242 1 145 1 144 1 90 2 93 1 47 1 302 1 102 1 253 4 160 2 259 1 263 1 56 2 210 1 20 1 60 2 315 2 166 1 317 1 318 1 168 2 274 2 24 4 74 1 224 2 367 1 329 4 120 1 29 1 234 1 81 1 82 1 
237 1 355 1 188 2 165 1 290 1 138 1 39 1 243 2 41 1 42 2 325 1 220 1 46 6 366 1 299 3 370 1 201 1 232 3 348 1 159 1 205 1 107 2 262 1 310 1 55 1 130 1 
288 1 19 1 237 2 185 2 355 2 188 2 165 11 290 2 138 11 23 1 39 2 243 1 146 2 192 1 42 1 41 2 294 1 322 1 169 1 273 1 92 1 339 1 46 14 299 6 370 2 202 3 232 8 77 1 348 4 205 1 107 4 180 3 55 1 
237 1 288 1 313 1 37 1 187 2 86 1 290 1 23 1 39 1 244 1 42 1 321 1 41 1 171 1 95 1 363 1 46 2 73 1 152 1 299 1 226 1 370 1 343 1 12 1 228 1 101 1 250 1 232 1 348 1 77 1 256 1 30 1 260 1 107 2 235 1 82 2 263 1 55 1 
288 1 237 3 185 2 37 2 187 3 188 8 290 3 138 7 337 1 39 3 243 4 244 1 146 2 42 2 41 3 95 1 46 20 152 3 299 10 343 3 12 2 201 1 101 1 250 2 159 1 205 3 348 7 256 1 162 1 260 2 107 6 351 2 262 1 310 1 263 1 55 3 355 3 61 1 165 7 23 1 65 2 321 3 169 2 273 4 170 2 220 1 363 1 73 2 370 3 226 2 228 2 121 2 232 10 77 1 334 2 79 1 82 3 235 2 130 1 
66 1 321 1 152 1 343 1 95 1 
237 1 185 1 355 1 188 1 187 1 165 1 138 1 290 1 39 1 243 1 244 1 146 1 41 1 169 1 275 1 46 3 299 2 370 1 345 1 101 1 374 1 232 1 348 1 77 1 205 1 107 2 82 1 263 1 55 1 
237 1 185 1 355 1 188 1 165 1 138 1 290 1 370 1 39 1 232 2 348 1 41 1 273 1 325 1 107 2 218 1 46 2 55 1 
237 1 188 1 299 2 165 1 138 1 290 1 370 1 39 1 243 1 348 1 205 1 271 1 41 1 169 1 325 1 107 2 46 2 55 1 
237 1 185 1 355 1 188 2 165 2 290 1 138 2 39 1 243 1 146 1 41 1 169 1 273 1 325 1 46 4 299 2 370 1 232 2 348 2 205 1 107 2 55 1 
66 1 
66 1 
66 1 
237 1 185 1 355 1 188 2 299 2 165 2 138 2 290 1 370 1 39 1 243 1 232 2 205 1 348 2 146 1 41 1 169 1 273 1 107 2 55 1 46 4 
288 1 237 1 37 1 187 1 290 1 23 1 39 1 42 1 321 1 41 1 170 1 46 2 95 1 73 1 152 1 299 1 226 1 370 1 343 1 12 1 228 1 232 1 250 1 260 1 107 2 235 1 82 1 55 1 
288 1 237 1 353 1 37 1 187 1 290 1 139 1 23 1 39 1 42 1 321 1 41 1 46 2 95 1 73 1 248 1 152 1 299 1 226 1 370 1 343 1 12 1 232 1 260 1 107 2 235 1 82 1 55 1 
237 1 185 1 355 1 188 2 165 2 290 1 138 2 39 1 243 1 146 1 41 1 169 1 273 1 46 4 299 2 370 1 232 2 77 1 348 2 205 1 107 2 55 1 
237 1 185 1 355 1 37 1 188 2 187 1 165 2 138 2 290 1 39 1 243 1 146 1 321 1 41 1 169 1 273 1 170 1 46 4 73 1 152 1 299 2 369 1 226 1 370 1 343 1 12 1 228 1 232 2 250 1 121 1 205 1 348 2 260 1 107 2 235 1 82 1 55 1 
237 1 185 1 355 1 188 1 187 1 165 1 290 1 138 1 39 1 244 1 146 1 41 1 169 1 273 1 275 1 46 3 299 1 370 1 101 1 374 1 232 2 205 1 77 1 348 1 349 1 107 2 82 1 263 1 55 1 
352 1 237 3 185 4 355 5 188 8 290 3 238 1 39 3 87 1 4 1 243 4 146 4 320 1 192 3 294 1 324 1 169 4 273 4 5 1 220 1 196 1 7 2 46 41 296 1 299 21 49 1 370 3 301 1 119 1 201 1 202 4 231 1 232 20 159 1 205 5 107 6 262 1 180 3 310 1 128 4 236 1 83 1 130 1 
352 1 237 4 185 4 355 5 188 7 290 4 238 1 39 4 87 1 4 1 243 4 146 4 320 1 192 3 294 1 324 1 169 3 273 3 5 1 220 1 196 1 7 2 46 38 296 1 299 18 49 1 370 4 301 1 119 1 201 1 202 4 231 1 232 20 159 1 205 4 107 8 262 1 180 3 310 1 128 4 236 1 83 2 130 1 
237 2 185 7 355 8 188 14 290 2 238 1 39 2 87 1 4 1 243 7 146 7 192 2 294 2 322 2 324 1 169 7 273 7 5 1 220 1 196 1 7 1 46 52 296 1 299 25 49 1 370 2 301 1 119 1 201 1 202 4 231 1 232 27 159 1 205 8 107 4 262 1 180 4 310 1 128 4 236 1 83 1 130 1 
352 1 237 2 289 1 185 3 355 3 188 6 290 2 238 1 39 2 243 3 146 3 192 1 294 1 324 1 169 3 273 3 7 1 46 19 299 10 49 2 370 2 301 1 202 2 231 1 232 9 205 3 107 4 180 1 128 2 236 1 
237 3 185 3 355 3 188 4 290 3 238 1 39 3 87 1 4 1 243 2 146 3 192 2 324 1 169 2 273 2 5 1 196 1 7 2 46 26 296 1 299 12 49 1 370 3 301 1 119 1 202 2 231 2 232 14 205 2 107 6 180 2 128 4 236 1 83 2 
364 1 44 1 48 1 70 1 125 1 227 1 157 1 38 1 241 1 14 1 
135 1 173 1 
364 1 179 1 48 1 70 1 125 1 38 1 278 1 76 1 14 1 
364 1 286 1 20 1 329 1 48 1 227 1 38 1 241 1 14 1 253 1 43 1 44 1 246 2 125 1 70 1 208 1 309 1 311 1 
364 1 286 1 20 1 329 1 48 1 227 1 38 1 241 1 14 1 253 1 43 1 44 1 246 2 125 1 70 1 208 1 309 1 311 1 
364 1 286 1 20 1 329 1 48 1 227 1 38 1 241 1 14 1 253 1 43 1 44 1 246 2 125 1 70 1 208 1 309 1 311 1 
33 1 98 1 100 1 
33 1 98 1 100 1 
361 1 197 1 
100 1 361 1 197 1 
143 1 358 1 
286 1 135 1 187 2 137 1 38 1 143 1 358 1 244 2 42 1 246 1 70 1 364 1 327 1 329 1 173 1 48 1 13 1 14 1 101 2 251 1 253 1 284 1 125 1 82 2 311 1 263 2 380 1 
33 1 98 1 
100 1 361 1 197 1 
182 2 237 1 288 1 187 2 290 1 268 1 23 1 39 1 167 1 115 1 321 2 41 1 69 1 46 2 73 1 152 2 299 1 226 1 370 1 343 2 373 1 232 1 77 1 105 1 260 1 32 1 107 2 235 1 82 2 263 2 55 1 
73 1 34 1 118 2 225 1 314 1 152 2 22 1 109 1 369 1 337 1 343 2 88 1 305 1 204 1 254 1 332 1 321 2 235 1 247 1 
73 1 34 1 118 2 225 1 314 1 152 1 22 1 337 1 343 1 88 1 305 1 204 1 254 1 332 1 321 1 52 1 235 1 
73 1 280 1 152 1 226 1 343 1 305 1 321 1 260 1 194 1 233 1 108 1 235 1 95 1 247 1 
73 1 34 1 118 2 225 1 314 1 152 1 22 1 109 1 337 1 343 1 88 1 305 1 204 1 254 1 332 1 321 1 235 1 247 1 
113 1 
317 1 318 1 131 1 142 1 20 1 366 1 75 1 
131 1 210 1 20 2 184 1 60 1 166 1 317 1 318 1 323 1 6 1 365 1 47 1 224 1 329 1 302 1 253 1 129 1 
131 8 183 2 184 5 185 2 186 1 37 3 291 2 240 1 142 1 146 2 147 2 95 1 97 2 341 2 47 4 152 3 302 4 343 3 51 2 253 5 205 2 16 2 308 1 260 3 210 4 21 3 20 8 267 6 355 2 60 3 316 1 166 4 63 2 111 2 318 2 317 9 321 3 323 6 169 2 359 1 73 3 224 12 329 5 368 1 369 1 75 1 371 2 226 10 176 1 229 2 283 6 334 2 235 4 81 2 
131 5 210 2 20 5 184 1 185 2 267 5 355 2 60 1 291 1 166 2 111 1 87 1 4 1 317 8 318 2 146 2 213 1 192 1 323 3 169 2 359 1 5 1 196 1 224 6 47 2 329 1 371 2 302 2 119 1 283 5 202 1 253 1 205 2 255 1 180 1 
131 2 210 1 355 2 187 1 291 1 166 1 317 2 244 1 220 1 47 1 329 1 371 2 200 1 302 1 120 1 101 1 374 1 347 1 253 1 159 1 205 1 161 1 78 1 378 1 207 1 82 1 310 1 263 1 
317 1 318 1 131 1 142 1 210 1 20 1 47 1 75 1 166 1 302 1 
131 5 20 5 185 2 224 10 355 2 267 5 291 1 371 2 283 5 317 5 205 2 146 2 323 5 169 2 334 1 
318 1 253 1 20 1 184 1 329 1 60 1 
131 2 210 2 184 4 60 2 166 1 111 2 317 2 321 4 193 1 359 2 194 1 45 1 217 1 95 2 73 1 47 2 280 1 329 3 368 2 152 4 226 1 302 2 343 4 253 3 285 1 260 1 308 1 126 1 235 1 
237 1 37 1 187 3 290 1 239 1 23 1 39 1 244 2 42 1 321 1 41 1 170 1 46 1 95 1 73 1 152 1 299 1 370 1 226 1 343 1 228 1 12 1 101 2 374 2 250 1 161 1 260 1 107 2 82 3 235 1 263 2 55 1 
131 2 210 1 20 4 224 4 47 1 267 2 166 1 302 1 283 2 111 1 317 1 318 2 323 2 359 1 262 1 
364 1 38 1 381 1 
364 1 38 1 381 1 
364 1 143 1 245 1 44 1 38 1 
364 1 38 1 381 1 
364 1 154 1 38 1 
364 1 154 1 38 1 
364 1 154 1 38 1 
364 1 38 1 
48 1 70 1 
237 1 355 1 188 2 290 1 39 1 243 2 192 1 324 1 5 1 220 1 46 8 299 4 370 1 202 1 201 1 232 4 205 1 159 1 107 2 262 1 180 1 310 1 130 1 
237 2 185 1 355 2 188 3 290 2 39 2 243 2 146 1 192 1 294 1 324 1 273 1 91 1 5 1 220 1 46 11 299 5 370 2 201 1 202 2 232 6 205 1 159 1 107 4 262 1 180 1 310 1 130 1 
237 3 185 2 355 3 188 4 290 3 39 3 87 1 4 1 243 3 146 2 192 1 324 1 169 2 273 1 91 1 5 1 220 1 46 19 196 1 299 10 370 3 119 1 201 1 202 1 232 9 159 1 205 3 107 6 262 1 180 1 310 1 83 1 130 1 
237 3 185 2 355 3 188 5 290 3 39 3 4 1 87 1 243 3 146 2 192 1 324 1 169 1 273 2 91 1 5 1 220 1 46 17 196 1 299 7 370 3 119 1 201 1 202 1 232 10 159 1 205 2 107 6 262 1 180 1 310 1 83 1 130 1 
237 1 355 1 188 2 290 1 39 1 243 2 192 1 324 1 5 1 220 1 46 8 299 4 370 1 202 1 201 1 232 4 205 1 159 1 107 2 262 1 180 1 310 1 130 1 
237 1 185 2 355 2 188 2 290 1 39 1 4 1 87 1 243 1 146 2 192 1 324 1 169 2 273 1 5 1 46 12 196 1 299 6 370 1 119 1 202 1 232 6 205 2 107 2 180 1 
237 4 185 2 355 3 188 5 290 4 39 4 87 1 4 1 243 3 146 2 192 1 324 1 169 1 273 2 91 1 5 1 220 1 196 1 46 18 299 8 370 4 119 1 201 1 202 1 232 10 159 1 205 2 107 8 262 1 180 1 310 1 83 2 130 1 
352 1 237 4 185 3 355 3 188 6 290 4 39 4 87 1 4 1 243 3 146 3 192 1 324 1 169 2 273 3 5 1 196 1 46 16 299 7 370 4 119 1 202 1 232 9 205 2 107 8 180 1 83 2 
355 1 188 6 299 4 201 2 243 3 232 3 205 1 159 3 273 3 310 3 220 1 46 7 130 1 
352 1 237 4 185 2 355 3 188 4 290 4 39 4 87 1 4 1 243 3 146 2 192 1 324 1 169 1 273 1 5 1 220 1 196 1 46 18 299 8 370 4 119 1 201 1 202 1 232 10 159 1 205 2 107 8 262 1 180 1 310 1 83 2 130 1 
237 2 355 1 188 3 299 4 290 2 370 2 39 2 201 1 232 4 243 2 205 1 159 1 273 1 107 4 262 1 310 1 220 1 46 8 83 1 130 1 
232 3 243 2 205 1 159 1 366 1 355 1 188 2 299 3 262 1 310 1 220 1 46 6 201 1 130 1 
237 1 185 1 355 1 188 2 299 2 290 1 370 1 39 1 243 1 232 2 205 1 146 1 169 1 273 1 91 1 107 2 46 4 
185 1 355 1 188 2 299 4 202 2 243 1 232 3 205 1 146 1 192 1 294 1 169 1 273 1 180 1 46 7 
19 1 237 2 185 2 355 3 188 9 290 2 39 2 243 5 146 2 294 1 169 2 322 1 273 4 220 1 46 23 299 12 370 2 201 1 202 2 232 11 103 1 159 2 205 3 107 4 262 1 180 2 310 2 83 2 130 1 
299 1 46 1 202 1 
232 1 180 1 46 1 
237 1 185 1 355 1 188 3 299 3 370 1 290 1 39 1 232 3 243 2 205 1 146 1 169 1 334 1 273 1 91 1 107 2 46 6 
237 1 185 2 355 2 188 2 290 1 39 1 4 1 87 1 243 1 146 2 192 1 324 1 169 2 273 1 5 1 46 12 196 1 299 6 370 1 119 1 202 1 232 6 205 2 107 2 180 1 
355 1 188 2 299 3 232 3 243 1 205 1 159 1 273 1 310 1 220 1 46 6 
237 1 188 2 299 2 290 1 370 1 39 1 201 1 232 1 243 1 103 1 159 1 273 1 107 2 310 1 46 3 83 1 130 1 
237 1 355 2 188 5 299 5 370 1 290 1 39 1 243 3 232 5 347 1 159 2 205 2 324 1 273 2 107 2 310 2 220 1 46 10 
237 1 185 1 355 1 188 1 290 1 370 1 39 1 232 2 324 1 273 1 107 2 46 2 
237 1 185 1 355 1 188 2 299 2 290 1 370 1 39 1 243 1 232 2 205 1 146 1 169 1 324 1 273 1 107 2 46 4 
352 1 237 3 188 2 299 2 290 3 370 3 39 3 103 1 243 1 232 1 159 1 324 1 273 1 107 6 310 1 83 1 46 3 
352 1 237 5 185 3 355 5 188 12 290 5 39 5 243 7 146 3 192 1 294 1 324 1 169 3 273 5 91 1 220 2 46 34 9 1 299 18 370 5 372 1 201 1 202 4 103 1 232 16 159 3 205 5 107 10 262 1 180 3 310 3 264 1 83 2 130 1 
145 1 172 1 42 1 187 1 82 1 263 1 96 1 
172 1 187 1 136 1 15 1 145 1 177 1 42 1 276 1 80 1 82 1 263 1 96 1 
73 1 366 1 280 1 321 1 152 1 260 1 194 1 226 1 235 1 343 1 95 1 
73 1 37 1 187 2 152 1 226 1 343 1 12 1 228 1 101 1 244 1 42 1 321 1 260 1 235 1 82 2 263 1 363 1 95 1 
183 1 37 2 187 2 244 2 42 1 321 1 93 1 363 1 73 1 152 1 368 1 226 3 343 1 228 1 12 1 120 1 229 1 101 1 259 1 260 2 82 2 235 1 263 2 
183 1 37 2 187 2 139 1 191 1 244 2 42 1 321 2 93 1 363 1 73 1 152 2 368 1 226 3 343 2 12 1 120 1 229 1 101 1 259 1 260 2 82 2 235 1 263 2 
183 1 73 1 20 1 21 1 184 1 37 1 329 2 368 1 152 3 226 4 63 1 343 3 229 1 303 1 318 1 253 2 191 1 17 1 321 3 260 1 81 1 235 1 95 1 
183 1 73 1 20 1 21 1 341 1 184 1 37 1 329 2 368 1 152 3 226 4 63 1 343 3 229 1 318 1 253 2 191 1 321 3 260 1 81 1 235 1 95 1 
73 1 321 1 152 1 67 1 235 1 343 1 
182 1 73 2 266 1 57 1 37 1 152 6 369 1 226 3 337 1 343 7 176 1 350 1 321 7 67 1 377 1 32 1 215 1 260 2 235 3 95 2 199 1 
237 2 37 1 187 2 188 2 290 2 138 1 39 2 243 2 244 1 41 2 42 2 46 6 152 1 299 3 343 1 12 1 201 1 101 1 250 1 348 1 159 1 205 1 260 1 107 4 262 1 310 1 263 1 55 2 355 1 165 1 115 1 65 1 321 1 170 1 220 1 363 1 73 1 369 1 370 2 226 1 228 1 121 1 232 3 77 1 82 2 235 1 130 1 
131 1 210 2 20 1 21 1 184 2 60 1 137 1 166 2 63 1 317 1 318 1 142 1 321 1 95 1 97 1 341 1 47 2 329 3 152 1 75 1 226 2 302 2 343 1 51 1 253 3 16 1 308 1 81 1 
73 1 186 1 37 1 152 2 369 1 63 1 226 2 343 2 176 1 321 2 67 1 260 1 235 2 
73 1 191 1 280 1 321 4 152 4 260 1 194 1 369 1 226 1 235 1 343 4 3 1 95 1 
73 1 57 1 0 1 134 1 37 1 368 1 152 2 226 1 343 2 162 1 321 2 260 1 235 2 199 1 
73 1 254 1 332 1 118 1 321 1 152 1 235 1 343 1 95 1 88 1 
73 1 167 1 321 2 152 2 260 1 32 1 369 1 226 1 235 1 337 1 343 2 
73 2 280 1 368 1 152 4 369 1 226 3 343 5 3 1 321 5 350 1 194 1 32 1 260 2 377 1 235 2 95 1 
73 2 148 1 280 1 368 1 152 4 369 1 226 3 343 5 3 1 321 5 194 1 32 1 260 2 377 1 235 2 95 1 
73 1 37 1 187 2 152 1 226 1 139 1 343 1 12 1 101 1 244 1 42 1 321 1 260 1 235 1 82 2 263 1 363 1 95 1 
73 1 266 1 57 1 37 1 368 1 152 1 226 1 343 1 176 1 321 1 260 1 235 2 199 1 
373 1 346 1 105 1 187 1 268 1 249 1 1 1 82 1 263 1 
346 1 292 1 277 1 
346 1 42 1 18 1 249 1 1 1 
27 1 20 1 329 2 137 1 1 2 249 2 292 1 120 1 269 1 242 1 318 1 346 1 253 2 42 1 18 2 259 1 81 1 93 1 277 1 
366 1 117 1 127 1 198 1 
59 1 117 1 10 1 127 1 25 1 198 1 114 1 
26 1 8 1 25 1 
84 1 59 1 10 3 50 2 114 1 190 1 272 1 258 1 117 1 127 1 25 3 198 1 
64 1 357 1 59 1 117 1 10 2 127 1 25 2 198 1 114 1 
59 1 118 1 22 1 156 1 10 1 114 1 190 1 333 1 332 1 25 1 198 1 
190 1 59 1 10 1 127 1 25 1 198 1 114 1 
190 1 59 1 117 1 10 1 127 2 25 1 114 1 
59 2 150 1 10 2 189 1 158 1 114 2 190 1 127 1 25 2 198 1 
59 1 10 3 114 1 356 1 190 1 64 2 333 1 117 1 127 1 25 3 221 1 71 1 198 2 
118 2 59 1 225 1 22 1 10 2 88 1 114 1 190 1 212 1 64 1 332 1 117 1 127 1 25 2 198 1 
59 2 62 1 10 4 114 2 190 1 64 2 357 1 333 1 117 1 127 1 25 4 71 1 198 2 
190 1 59 1 117 1 10 1 127 1 25 1 198 1 114 1 
59 1 85 1 10 4 50 1 114 1 64 2 272 1 333 1 258 1 117 2 127 2 25 4 71 1 198 3 
132 1 59 1 110 1 10 2 11 1 114 1 190 1 64 1 117 1 127 1 25 2 198 1 
59 1 10 3 50 2 114 1 190 1 272 2 258 1 117 1 195 1 127 1 25 3 198 1 
209 1 354 1 133 2 198 2 
190 1 312 1 59 1 10 1 25 1 114 1 
190 1 64 1 59 1 117 1 10 2 127 1 25 2 198 1 356 1 114 1 
175 1 
190 1 59 1 117 1 10 1 127 1 25 1 198 1 114 1 
190 1 64 1 59 1 117 1 10 3 50 1 127 1 25 3 356 1 198 1 114 1 
333 1 85 1 198 1 71 1 
127 1 198 1 

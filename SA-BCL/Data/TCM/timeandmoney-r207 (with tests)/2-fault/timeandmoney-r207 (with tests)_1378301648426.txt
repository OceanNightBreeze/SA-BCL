#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 83 36 352 229 364 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 172 354 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 83 36 352 229 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 2 1 5 206 1 244 1 74 1 3 1 288 2 356 2 55 9 57 1 233 1 268 3 98 2 124 1 210 1 126 2 295 1 369 2 108 1 33 9 240 1 16 1 257 1 376 6 18 1 304 1 202 4 137 2 
23 2 1 5 206 1 244 1 74 1 3 1 356 2 288 2 55 9 57 1 233 1 268 3 98 2 124 1 210 1 126 2 295 1 369 2 108 1 33 9 240 1 16 1 257 1 376 6 18 1 304 1 202 4 137 2 
23 2 1 6 206 1 244 1 74 1 3 1 356 2 288 2 55 10 57 1 233 1 268 4 98 2 124 1 210 1 126 2 295 1 369 2 108 1 33 10 240 1 16 1 257 1 376 7 18 1 304 1 202 5 137 2 
23 2 1 4 206 1 244 1 74 1 3 1 356 2 288 1 55 7 57 1 233 1 268 2 98 2 124 1 210 1 126 2 295 1 369 2 108 1 33 7 240 1 16 1 257 1 376 4 304 1 202 3 137 2 
23 1 369 1 1 3 206 1 244 1 3 1 33 4 356 1 288 2 55 4 376 3 268 1 18 1 304 1 202 2 137 1 126 1 295 1 
23 1 1 1 369 1 206 1 244 1 108 1 33 2 356 1 55 2 233 1 98 1 293 1 138 1 126 1 295 1 367 1 
369 2 1 2 206 1 244 1 74 1 33 3 356 2 55 3 376 1 268 1 98 1 202 1 295 1 
23 1 1 5 369 2 206 1 244 1 74 1 3 1 33 9 288 2 356 2 240 1 55 9 7 1 57 1 376 7 173 1 18 1 268 3 304 1 98 1 202 4 137 1 126 1 295 1 
23 1 1 5 369 2 206 1 244 1 74 1 3 1 33 9 288 2 356 2 240 1 55 9 7 1 57 1 376 7 173 1 18 1 268 3 304 1 98 1 202 4 137 1 126 1 295 1 
220 1 32 1 87 1 
201 1 305 2 87 1 
28 1 234 2 148 2 308 2 216 2 183 1 327 2 283 2 
263 1 72 1 148 3 308 2 75 1 355 1 5 2 183 1 312 1 122 1 56 1 28 1 316 1 234 3 157 2 319 1 78 1 294 1 128 1 103 1 163 1 212 1 165 1 167 1 325 1 373 1 15 2 216 2 282 1 327 2 283 2 37 1 259 1 221 1 69 2 42 2 143 1 
234 1 148 1 174 1 111 1 318 1 308 1 216 1 183 1 327 1 283 1 
80 1 148 1 194 1 32 1 65 1 168 1 327 1 234 1 111 1 175 1 58 1 176 1 87 1 243 1 
80 1 148 1 194 2 308 1 32 1 168 1 216 1 283 1 327 1 234 1 111 1 175 1 58 1 176 2 87 1 
329 1 194 1 176 1 358 1 228 1 
329 1 194 2 176 2 32 1 87 1 344 1 228 1 185 1 
329 1 194 1 176 1 
149 1 148 1 194 1 308 1 183 1 216 1 228 1 283 1 327 1 174 1 234 1 111 1 318 1 176 1 
87 1 
340 1 329 1 194 2 176 2 32 1 87 1 228 1 185 1 
114 2 205 1 370 1 194 5 51 1 32 1 67 1 228 2 109 2 185 1 374 1 176 5 329 2 87 1 160 1 343 1 89 2 345 1 90 1 
28 1 220 1 
148 2 279 1 308 1 216 1 327 2 283 1 28 2 234 2 275 1 
359 1 380 1 297 1 
212 1 72 1 148 1 355 1 15 1 282 1 56 1 122 1 28 1 234 1 291 1 221 1 157 1 69 1 78 1 143 1 
212 1 353 1 72 1 148 2 308 1 355 1 15 1 282 1 132 1 283 1 327 1 122 1 56 1 234 2 221 1 157 1 69 1 78 1 297 1 143 1 
353 1 180 1 148 5 279 1 308 4 216 1 132 2 248 1 283 4 327 5 28 1 234 5 341 1 243 1 
234 2 148 2 111 1 318 1 308 2 381 1 327 2 283 2 
28 1 234 3 148 3 308 3 216 1 132 1 327 3 283 3 
234 1 148 1 111 1 318 1 308 1 327 1 283 1 
234 1 148 1 111 1 279 1 308 1 275 1 216 1 327 1 283 1 
353 1 72 1 148 4 308 3 75 1 355 1 5 2 183 1 312 1 122 1 56 1 28 1 234 4 58 1 157 1 319 1 78 1 294 1 128 1 103 1 163 1 80 1 212 1 165 1 106 1 279 1 194 1 168 1 325 1 373 1 15 1 216 2 282 1 132 1 327 3 283 3 350 1 111 1 175 1 221 1 176 1 69 1 42 1 143 1 
28 1 180 1 234 2 148 2 308 1 132 1 243 1 327 2 283 1 
80 1 353 1 148 3 279 1 194 1 308 3 168 1 216 1 132 2 283 3 327 3 234 3 350 1 175 1 111 1 176 1 39 1 58 1 87 1 
148 2 279 1 308 2 216 1 132 1 283 2 327 2 234 2 380 1 297 1 
212 1 72 1 148 1 355 1 15 1 282 1 56 1 122 1 28 1 234 1 221 1 157 1 69 1 78 1 143 1 
212 1 81 1 72 1 148 1 15 1 282 1 122 1 28 1 234 1 221 1 157 1 69 1 162 1 78 1 143 1 
73 1 75 1 5 2 267 1 188 1 359 2 315 1 316 2 153 1 8 1 319 1 294 1 103 1 128 2 297 2 63 1 165 1 64 1 347 1 373 1 83 1 303 1 380 2 42 4 
80 1 234 1 148 1 111 1 308 1 327 1 283 1 381 1 
31 1 79 1 
31 1 79 1 
161 1 335 1 
161 1 335 1 
161 1 335 1 
31 1 226 1 79 1 
31 1 226 1 79 1 
213 1 31 1 79 1 
94 1 31 2 237 1 161 1 335 1 79 2 
31 1 226 1 79 1 
31 1 246 1 79 1 
31 1 246 1 79 1 
31 1 246 1 79 1 
213 1 31 1 48 1 148 2 215 1 194 1 308 2 348 1 53 1 27 1 327 2 283 2 187 1 339 1 28 1 234 2 379 1 176 1 222 1 100 1 79 1 22 1 101 1 102 1 
62 1 31 2 194 2 254 1 348 3 265 1 27 2 53 1 336 2 361 1 135 1 176 2 342 1 87 1 237 1 79 2 22 2 101 2 102 2 
23 1 137 1 126 1 
23 1 138 1 126 1 
12 1 23 3 137 2 371 1 138 1 119 1 
375 1 12 1 23 2 137 1 138 1 119 1 
12 2 23 2 137 1 138 1 119 1 
114 1 71 1 48 1 2 1 50 1 267 1 228 4 185 1 247 1 187 1 339 1 315 1 249 1 277 2 64 1 131 2 194 5 370 3 32 1 171 1 298 2 67 2 109 1 83 1 36 1 201 1 329 1 176 5 305 3 87 2 89 1 90 1 
114 2 2 1 50 2 118 1 267 3 358 5 228 7 120 1 185 1 247 2 187 4 315 3 292 5 276 1 277 6 324 1 64 3 131 6 194 9 370 8 32 1 281 1 67 6 109 2 83 3 36 3 374 1 201 3 219 1 329 6 176 9 305 9 87 5 89 2 90 1 
71 1 114 1 50 1 267 1 228 2 247 1 187 1 315 1 277 2 64 1 131 2 194 3 370 3 32 1 171 1 298 1 67 2 109 1 83 1 36 1 201 2 374 1 176 3 305 4 87 3 89 1 
114 1 71 1 50 1 118 1 267 2 228 3 247 1 187 2 315 2 276 1 277 4 324 1 64 2 131 4 194 4 370 5 32 1 171 1 298 2 67 4 109 1 83 2 36 2 201 3 374 1 176 4 305 7 87 4 89 1 
220 1 20 1 143 1 
181 1 143 1 
378 1 
122 1 282 1 143 1 
117 1 143 1 
122 1 143 1 
122 1 203 1 20 2 282 1 143 3 152 1 
347 2 76 1 66 1 172 1 267 1 184 2 186 1 315 1 123 1 96 1 303 3 316 4 242 1 40 1 59 1 42 7 128 3 
347 2 76 1 66 1 172 1 267 1 184 2 186 1 315 1 123 1 96 1 303 3 316 4 242 1 40 1 59 1 42 7 128 3 
347 2 76 1 66 1 172 1 267 1 184 2 186 1 315 1 123 1 96 1 303 3 316 4 242 1 40 1 59 1 204 1 42 7 128 3 
352 1 45 1 64 2 347 1 76 1 267 3 184 1 199 3 83 3 229 1 337 1 36 3 360 1 315 2 96 2 303 3 316 10 242 2 364 1 321 3 42 17 128 7 
91 1 76 1 5 4 267 1 184 2 315 1 290 1 123 1 96 1 316 5 59 1 294 2 103 2 128 4 165 2 347 3 66 1 373 2 172 1 303 4 242 1 40 1 70 1 42 9 
23 2 1 1 46 1 206 1 244 1 25 1 356 1 227 1 55 2 98 1 155 1 156 1 157 1 78 1 126 1 295 1 369 1 371 1 170 1 33 2 15 1 301 1 110 1 376 1 221 1 137 1 306 1 285 1 138 1 69 1 
144 1 23 2 1 1 46 1 206 1 244 1 182 1 356 1 227 1 207 1 55 3 98 1 156 1 157 1 78 1 126 1 369 1 371 1 170 1 33 3 15 1 301 1 110 1 376 2 221 1 137 1 306 1 285 1 138 1 69 1 
23 2 1 1 46 1 206 1 244 1 182 1 227 1 207 1 55 2 98 1 157 1 78 1 126 1 371 1 170 1 33 2 15 1 301 1 110 1 376 2 221 1 137 1 285 1 138 1 69 1 
144 1 46 2 356 1 227 2 55 1 122 1 98 2 157 1 78 1 212 1 369 1 33 1 170 2 15 1 326 1 221 1 136 1 112 1 86 1 69 1 140 1 223 1 143 1 
23 2 46 1 356 1 227 1 207 1 55 1 98 1 155 1 156 1 157 1 78 1 126 1 295 1 369 1 371 1 170 1 33 1 15 1 301 1 110 1 221 1 137 1 306 1 285 1 138 1 69 1 
97 1 
49 2 50 1 148 1 245 2 151 1 95 1 58 1 9 1 10 2 157 2 296 1 252 1 212 2 166 2 169 1 65 1 168 1 15 2 67 2 109 1 68 1 302 1 111 1 175 1 112 1 176 5 221 1 305 2 69 2 178 1 223 1 114 1 116 1 185 3 122 1 362 1 234 1 317 2 78 1 125 1 80 1 370 2 194 5 32 1 280 4 327 1 201 2 241 2 329 6 87 2 41 2 89 1 90 1 143 1 243 1 
80 1 148 1 194 3 245 1 169 1 65 1 168 1 280 2 185 1 327 1 340 1 302 1 362 1 234 1 175 1 111 1 329 2 58 1 176 3 9 1 252 1 243 1 
148 1 49 1 185 1 340 1 234 1 362 1 58 1 9 1 252 1 80 1 194 3 168 1 65 1 169 1 32 1 280 3 327 1 302 1 111 1 175 1 329 1 176 3 87 1 243 1 
148 1 49 1 245 1 185 1 340 1 234 1 362 1 317 1 58 1 9 1 252 1 80 1 194 3 168 1 65 1 169 1 32 1 280 3 327 1 302 1 111 1 175 1 176 3 329 2 87 1 243 1 
148 1 49 4 245 4 340 1 58 1 9 1 10 2 252 1 166 2 168 1 169 1 65 1 67 1 109 1 68 1 302 1 175 1 111 1 176 5 262 1 114 1 225 1 116 1 185 3 234 1 362 1 317 4 274 1 80 1 194 5 370 1 32 5 280 6 327 1 201 2 85 1 329 7 241 2 87 5 41 2 89 1 43 1 90 1 243 1 
148 1 49 2 245 2 58 1 9 1 10 2 252 1 166 2 168 1 169 1 65 1 67 1 109 1 68 1 302 1 175 1 111 1 176 4 305 2 178 1 114 1 116 1 185 2 234 1 362 1 317 2 80 1 194 4 370 1 32 1 280 4 327 1 201 2 241 2 329 4 87 2 41 2 89 1 90 1 243 1 
114 1 116 1 49 2 148 1 245 2 185 2 234 1 362 1 317 2 58 1 9 1 10 2 274 1 252 1 80 1 166 2 370 1 194 4 32 1 168 1 65 1 169 1 280 4 67 1 109 1 327 1 201 2 68 1 302 1 85 1 111 1 175 1 329 4 241 2 176 4 87 1 41 2 89 1 43 1 90 1 243 1 
114 1 116 1 49 2 148 1 245 2 185 2 234 1 362 1 317 2 58 1 9 1 10 2 274 1 252 1 80 1 166 2 370 1 194 4 32 1 168 1 65 1 169 1 280 4 67 1 109 1 327 1 201 2 68 1 302 1 85 1 111 1 175 1 329 4 241 2 176 4 87 1 41 2 89 1 43 1 90 1 243 1 
114 1 116 1 49 2 148 1 245 2 334 1 185 2 234 1 362 1 317 2 58 1 9 1 209 2 274 1 252 1 80 1 166 2 370 1 194 4 32 1 168 1 65 1 169 1 280 4 67 1 109 1 327 1 302 1 111 1 175 1 329 4 176 4 305 2 87 1 41 2 88 1 179 2 89 1 21 1 90 1 243 1 
114 1 116 1 225 1 148 1 49 3 245 3 185 2 234 1 362 1 317 3 58 1 9 1 10 2 274 1 252 1 80 1 166 2 370 1 194 4 32 1 168 1 65 1 169 1 280 5 67 1 109 1 327 1 201 2 68 1 302 1 85 1 111 1 175 1 241 2 176 4 329 5 87 1 41 2 89 1 90 1 43 1 243 1 
114 1 116 1 225 1 148 1 49 3 245 3 185 2 234 1 362 1 317 3 58 1 9 1 10 2 274 1 252 1 80 1 166 2 370 1 194 4 32 1 168 1 65 1 169 1 280 5 67 1 109 1 327 1 201 2 68 1 302 1 85 1 111 1 175 1 241 2 176 4 329 5 87 1 41 2 89 1 90 1 43 1 243 1 
148 1 49 2 245 2 58 1 9 1 209 2 252 1 166 2 168 1 169 1 65 1 67 1 109 1 302 1 175 1 111 1 176 4 305 2 178 1 179 2 21 1 114 1 116 1 185 2 234 1 362 1 317 2 80 1 194 4 370 1 32 1 280 4 327 1 329 4 87 1 41 2 89 1 90 1 243 1 
75 1 5 2 267 1 184 1 359 1 315 1 123 1 28 2 316 3 319 1 59 1 294 1 297 1 103 1 128 3 63 1 165 1 347 2 66 1 373 1 172 1 220 1 303 2 40 1 380 1 42 6 
145 1 75 2 5 4 310 1 267 2 312 1 337 1 360 1 93 1 359 11 315 1 28 1 316 8 319 1 321 3 294 2 128 6 103 2 297 11 165 2 64 1 167 1 347 1 373 2 199 3 83 2 36 2 303 2 113 1 242 1 380 4 141 1 42 14 
353 1 72 1 148 2 308 1 355 1 75 1 5 2 310 1 54 1 312 1 122 1 56 1 28 1 291 1 234 2 316 1 157 1 319 1 78 1 294 1 365 1 103 1 128 1 212 1 346 1 165 1 167 1 373 1 15 1 282 1 132 1 327 1 283 1 221 1 69 1 380 1 42 2 143 1 
148 3 332 2 5 6 207 1 338 1 56 2 157 3 59 1 294 3 103 3 297 7 253 1 212 1 165 3 64 2 167 1 347 4 66 1 172 1 15 3 303 8 221 2 69 3 261 2 353 1 72 2 308 1 75 3 355 2 184 1 310 1 267 3 312 1 359 7 315 3 230 2 122 2 123 1 28 2 234 3 316 10 319 3 78 2 128 10 325 2 373 3 132 1 282 2 84 2 83 2 283 1 327 1 36 2 377 1 242 4 40 1 380 7 42 20 143 2 
263 2 148 1 25 1 308 1 75 2 92 1 5 4 150 1 207 1 312 1 122 2 234 1 316 1 157 8 319 2 99 1 78 2 294 2 103 2 128 1 63 1 212 2 164 1 165 2 167 1 373 2 15 7 132 1 327 1 283 1 133 1 134 1 221 2 112 1 260 1 69 8 42 2 143 3 223 1 
148 1 308 1 75 1 5 2 310 1 267 1 359 1 315 1 234 1 316 1 319 1 294 1 297 1 103 1 128 2 165 1 279 1 64 1 347 1 373 1 216 1 83 1 283 1 327 1 36 1 303 1 139 1 380 1 42 3 
63 1 165 1 73 1 75 1 373 1 5 2 267 1 83 1 359 1 303 1 316 2 242 1 319 1 380 1 294 1 42 2 297 1 103 1 
63 1 165 1 64 1 347 1 75 1 373 1 5 2 359 1 188 1 315 1 303 1 319 1 380 1 294 1 42 2 297 1 103 1 128 2 
75 1 5 2 267 1 359 2 315 1 316 2 319 1 294 1 103 1 297 2 128 2 63 1 165 1 64 1 347 1 373 1 83 1 36 1 303 2 242 1 380 2 42 4 
164 1 165 1 73 1 75 1 373 1 5 2 267 1 83 1 359 1 303 1 316 2 242 1 319 1 380 1 294 1 42 2 297 1 103 1 
164 1 165 1 64 1 347 1 75 1 373 1 5 2 359 1 188 1 315 1 303 1 319 1 380 1 294 1 42 2 297 1 103 1 128 2 
164 1 165 1 64 1 347 1 75 1 373 1 5 2 267 1 83 1 359 2 36 1 315 1 303 2 316 2 242 1 319 1 380 2 294 1 42 4 128 2 297 2 103 1 
165 1 64 1 347 1 75 1 373 1 5 2 267 1 83 1 359 2 36 1 315 1 303 2 316 2 242 1 319 1 380 2 294 1 42 4 128 2 297 2 103 1 
72 1 148 1 355 1 75 1 5 2 312 1 122 1 56 1 28 1 316 1 234 1 157 1 319 1 78 1 294 1 103 1 128 1 212 1 165 1 167 1 325 1 373 1 15 1 282 1 221 1 69 1 42 2 143 1 
72 1 148 1 75 1 5 2 312 1 122 1 28 1 316 1 234 1 157 1 319 1 78 1 162 1 294 1 103 1 128 1 212 1 81 1 165 1 167 1 373 1 15 1 282 1 221 1 351 1 69 1 42 2 143 1 
165 1 64 1 347 1 75 1 373 1 5 2 310 1 267 1 83 1 359 2 36 1 315 1 303 2 316 2 242 1 319 1 380 2 294 1 42 4 128 2 297 2 103 1 
72 1 148 1 25 1 355 1 75 1 332 1 5 2 267 1 359 2 315 1 56 1 122 1 316 2 234 1 157 1 319 1 78 1 294 1 128 2 297 2 103 1 165 1 64 1 347 1 325 1 373 1 15 1 83 1 282 1 36 1 303 2 221 1 242 1 69 1 380 2 42 4 143 1 
148 1 308 1 75 1 5 2 310 1 267 1 359 1 315 1 234 1 316 2 319 1 294 1 128 1 103 1 297 1 82 1 165 1 64 1 279 1 373 1 216 1 83 1 283 1 327 1 36 1 303 1 242 1 380 1 42 3 
146 1 5 6 337 1 290 1 250 1 59 1 294 3 61 1 103 3 165 3 104 1 64 4 347 4 66 1 172 1 255 1 303 8 19 4 70 1 224 1 115 1 24 1 26 1 77 1 267 5 184 1 121 1 360 3 315 5 123 1 316 20 273 1 321 4 128 21 278 2 373 3 199 3 83 4 36 4 242 4 284 1 40 1 42 41 
224 1 115 1 146 1 24 1 26 1 77 1 5 8 184 1 267 5 121 1 337 1 360 3 315 4 123 1 290 2 316 20 250 1 273 1 59 1 321 4 294 4 61 1 103 4 128 18 278 2 165 4 104 1 64 3 347 4 66 1 172 1 373 4 255 1 199 3 83 4 36 4 303 7 19 4 242 3 284 1 40 1 70 1 42 38 
224 1 115 1 146 1 24 1 26 1 5 4 184 1 267 8 337 2 360 2 315 8 123 1 290 1 316 27 250 1 273 1 59 1 321 4 294 2 61 1 103 2 128 25 278 1 165 2 104 1 64 7 347 7 66 1 172 1 373 2 255 1 199 4 83 7 36 7 303 14 19 4 242 7 284 1 40 1 70 1 141 2 42 52 
224 1 146 1 47 1 77 1 5 4 267 3 337 1 360 1 315 3 316 9 321 2 294 2 61 1 103 2 128 10 278 1 165 2 104 2 64 3 347 3 373 2 255 1 199 1 83 3 36 3 303 6 19 2 242 3 70 1 42 19 
224 1 146 2 115 1 24 1 26 1 5 6 267 3 360 2 315 2 290 2 316 14 250 1 273 1 321 2 294 3 61 1 128 12 103 3 278 2 165 3 104 1 64 2 347 2 373 3 255 1 199 2 83 3 36 3 303 4 19 4 242 2 284 1 70 1 42 26 
361 1 31 1 372 1 237 1 265 1 79 1 27 1 101 1 22 1 102 1 
213 1 222 1 
31 1 158 1 333 1 79 1 27 1 217 1 101 1 22 1 102 1 
226 1 211 1 
94 1 189 1 246 1 
62 1 31 1 194 1 348 2 265 1 53 1 27 1 336 1 361 1 135 1 176 1 342 1 87 1 237 1 79 1 22 1 101 1 102 1 
62 1 31 1 194 1 348 2 265 1 53 1 27 1 336 1 361 1 135 1 176 1 342 1 87 1 237 1 79 1 22 1 101 1 102 1 
62 1 31 1 194 1 348 2 265 1 53 1 27 1 336 1 361 1 135 1 176 1 342 1 87 1 237 1 79 1 22 1 101 1 102 1 
94 1 226 1 211 1 
94 1 226 1 211 1 
189 1 246 1 
94 1 189 1 246 1 
215 1 379 1 
148 2 48 1 308 2 336 1 311 1 228 1 27 1 187 1 339 1 28 1 234 2 342 1 79 1 100 1 101 1 102 1 213 1 31 1 194 1 215 1 348 1 283 2 327 2 176 1 379 1 222 1 22 1 
263 2 148 2 264 1 75 1 4 1 5 2 310 1 312 1 122 1 234 2 316 1 157 2 190 1 319 1 78 1 294 1 103 1 128 1 165 1 105 1 167 1 373 1 15 2 327 2 17 1 134 1 221 1 260 1 69 2 42 2 143 1 
23 2 25 1 371 1 170 1 15 2 266 1 207 1 110 1 221 1 137 1 157 2 138 1 306 1 285 1 69 2 78 1 177 1 126 1 191 1 
23 2 371 1 170 1 15 1 34 1 266 1 207 1 110 1 221 1 137 1 157 1 138 1 306 1 285 1 69 1 78 1 126 1 
212 1 170 1 15 1 122 1 221 1 136 1 112 1 157 1 69 1 78 1 11 1 191 1 143 1 223 1 
23 2 371 1 170 1 15 1 266 1 207 1 110 1 221 1 137 1 157 1 138 1 306 1 285 1 69 1 177 1 78 1 126 1 191 1 
159 1 
220 1 370 1 32 1 87 1 160 1 343 1 67 1 
114 1 185 1 10 1 370 1 194 1 32 1 67 1 109 1 201 1 68 1 241 1 329 1 176 1 305 1 87 2 89 1 90 1 
50 2 151 1 152 1 154 2 157 3 160 1 343 1 212 1 64 2 107 2 14 1 15 3 349 1 67 8 299 1 109 4 175 2 221 4 176 5 305 12 69 3 261 2 20 2 114 4 181 3 25 1 117 2 267 2 185 3 313 2 122 3 315 2 231 2 235 1 320 1 78 3 29 2 366 2 277 6 323 2 131 6 370 9 194 5 32 2 35 2 282 3 83 2 36 2 201 6 329 5 87 8 89 4 90 4 143 10 
114 2 115 1 50 1 24 1 26 1 309 1 267 2 151 1 185 1 313 1 360 1 315 2 231 2 250 1 321 1 277 5 130 1 131 5 64 2 194 1 370 8 32 2 67 5 109 2 199 1 83 2 36 2 201 3 176 1 329 1 305 6 87 5 284 1 89 2 90 2 
114 1 354 1 370 2 194 1 172 1 67 2 267 1 109 1 315 1 123 1 231 1 176 1 40 1 89 1 43 1 90 1 
114 1 370 1 32 1 67 1 109 1 343 1 160 1 87 1 89 1 90 1 
131 5 64 2 370 5 267 2 67 5 83 2 313 1 36 2 201 5 315 2 231 2 305 10 87 5 261 1 277 5 
194 1 176 1 329 1 32 1 87 1 185 1 
114 2 307 1 50 2 151 2 185 2 122 1 95 1 157 4 320 2 78 1 296 1 212 2 370 2 194 3 15 4 67 2 109 2 299 1 218 1 374 1 221 1 329 4 176 3 112 1 69 4 89 2 90 1 143 1 223 1 
72 1 148 3 308 2 355 1 75 1 5 2 183 1 312 1 56 1 122 1 28 1 234 3 157 1 319 1 78 1 294 1 128 1 163 1 103 1 212 1 165 1 325 1 373 1 15 1 216 2 282 1 327 2 283 2 221 1 69 1 42 1 143 1 
114 1 50 1 131 2 370 1 32 2 184 1 67 2 109 1 151 1 201 2 305 4 87 4 89 1 90 1 277 2 
60 1 101 1 102 1 
60 1 101 1 102 1 
361 1 192 1 215 1 101 1 102 1 
60 1 101 1 102 1 
272 1 101 1 102 1 
272 1 101 1 102 1 
272 1 101 1 102 1 
101 1 102 1 
31 1 79 1 
115 1 5 2 184 1 267 1 360 1 315 1 123 1 316 4 321 1 59 1 294 1 128 4 103 1 165 1 347 2 66 1 373 1 172 1 199 1 303 2 40 1 70 1 42 8 
115 1 5 4 184 1 267 2 337 1 360 1 315 1 123 1 316 6 59 1 321 2 294 2 128 5 103 2 165 2 347 2 66 1 172 1 373 2 199 1 83 1 36 1 303 3 242 1 40 1 287 1 70 1 42 11 
115 1 24 1 26 1 5 6 184 1 267 3 360 1 315 3 123 1 290 1 316 9 250 1 59 1 321 1 294 3 128 10 103 3 165 3 64 2 347 3 66 1 172 1 373 3 199 1 83 2 36 2 303 4 242 1 284 1 40 1 287 1 70 1 42 19 
115 1 24 1 26 1 5 6 184 1 267 3 360 1 315 2 123 1 290 1 316 10 250 1 59 1 321 1 294 3 128 7 103 3 165 3 64 1 347 3 66 1 172 1 373 3 199 1 83 2 36 2 303 5 242 2 284 1 40 1 287 1 70 1 42 17 
115 1 5 2 184 1 267 1 360 1 315 1 123 1 316 4 321 1 59 1 294 1 128 4 103 1 165 1 347 2 66 1 373 1 172 1 199 1 303 2 40 1 70 1 42 8 
115 1 24 1 26 1 5 2 267 2 360 1 315 2 316 6 250 1 321 1 294 1 128 6 103 1 165 1 64 2 347 1 373 1 199 1 83 2 36 2 303 2 242 1 284 1 70 1 42 12 
115 1 24 1 26 1 5 8 184 1 267 3 360 1 315 2 123 1 290 2 316 10 250 1 59 1 321 1 294 4 128 8 103 4 165 4 64 1 347 3 66 1 172 1 373 4 199 1 83 2 36 2 303 5 242 2 284 1 40 1 287 1 70 1 42 18 
115 1 24 1 26 1 5 8 77 1 267 3 360 1 315 2 290 2 316 9 250 1 321 1 294 4 128 7 103 4 165 4 64 2 347 3 373 4 199 1 83 3 36 3 303 6 242 3 284 1 70 1 42 16 
347 3 66 2 172 1 267 1 315 1 123 3 303 6 316 3 242 3 40 3 59 1 42 7 128 4 
115 1 24 1 26 1 5 8 77 1 184 1 267 3 360 1 315 2 123 1 290 2 316 10 250 1 59 1 321 1 294 4 128 8 103 4 165 4 64 1 347 3 66 1 172 1 373 4 199 1 83 2 36 2 303 4 242 1 284 1 40 1 70 1 42 18 
165 2 347 2 66 1 172 1 373 2 5 4 184 1 267 1 315 1 290 1 123 1 316 4 303 3 242 1 40 1 59 1 294 2 42 8 128 4 103 2 
347 2 66 1 172 1 184 1 267 1 315 1 123 1 220 1 303 2 316 3 40 1 59 1 42 6 128 3 
165 1 64 1 347 1 373 1 5 2 267 1 83 1 36 1 315 1 303 2 316 2 242 1 287 1 294 1 42 4 128 2 103 1 
64 1 347 1 267 1 199 1 83 1 337 1 360 1 36 1 315 1 316 3 303 2 242 1 321 2 42 7 128 4 
5 4 184 1 267 3 337 1 315 3 123 2 290 2 316 11 59 1 321 2 294 2 128 12 103 2 322 1 165 2 64 2 347 5 66 1 172 1 373 2 199 2 83 2 36 2 303 9 113 1 242 4 40 2 42 23 141 1 
321 1 42 1 128 1 
316 1 42 1 199 1 
165 1 64 1 347 2 373 1 5 2 267 1 83 1 36 1 315 1 316 3 303 3 242 1 287 1 261 1 294 1 42 6 103 1 128 3 
115 1 24 1 26 1 5 2 267 2 360 1 315 2 316 6 250 1 321 1 294 1 128 6 103 1 165 1 64 2 347 1 373 1 199 1 83 2 36 2 303 2 242 1 284 1 70 1 42 12 
347 1 172 1 267 1 315 1 123 1 316 3 303 2 242 1 40 1 42 6 128 3 
165 1 347 1 66 1 373 1 5 2 123 1 290 1 316 1 303 2 242 1 40 1 59 1 294 1 42 3 322 1 128 2 103 1 
165 1 354 1 347 3 373 1 172 1 5 2 267 2 315 2 123 2 303 5 316 5 242 2 40 2 294 1 70 1 42 10 103 1 128 5 
165 1 373 1 5 2 267 1 83 1 316 2 303 1 242 1 70 1 294 1 42 2 103 1 
165 1 64 1 347 1 373 1 5 2 267 1 83 1 36 1 315 1 303 2 316 2 242 1 70 1 294 1 42 4 128 2 103 1 
165 3 347 1 373 3 77 1 5 6 290 1 123 1 303 2 316 1 242 1 40 1 70 1 294 3 42 3 322 1 128 2 103 3 
352 1 45 1 165 3 64 1 373 3 5 6 77 1 267 2 199 3 83 2 229 1 36 2 360 1 315 1 303 1 316 7 242 1 287 1 321 2 70 1 294 3 42 11 103 3 128 4 
28 1 214 1 234 1 148 1 180 1 327 1 243 1 
214 1 180 1 148 1 195 1 52 1 357 1 327 1 256 1 314 1 28 1 234 1 243 1 
122 1 212 1 220 1 221 1 112 1 157 1 69 1 78 1 15 1 143 1 223 1 
212 1 72 1 148 2 308 1 355 1 15 1 282 1 132 1 283 1 327 1 122 1 28 1 234 2 221 1 157 1 69 1 78 1 143 1 
80 1 72 1 148 2 117 1 308 2 355 1 35 1 15 1 282 2 132 1 283 1 327 2 122 2 28 1 234 2 111 1 58 1 221 1 157 1 320 1 69 1 78 1 143 3 
72 1 148 2 308 2 117 1 122 2 28 1 234 2 58 1 157 2 320 1 78 1 80 1 81 1 15 2 35 1 132 1 282 2 327 2 283 1 328 1 111 1 221 1 69 2 143 3 
212 1 181 1 194 2 117 1 32 1 197 1 35 1 15 3 282 1 122 1 328 1 175 1 221 1 176 2 329 1 157 3 87 1 320 1 69 3 78 1 20 1 142 1 143 4 
212 1 181 1 194 2 117 1 32 1 35 1 15 3 282 1 122 1 328 1 175 1 154 1 221 1 176 2 329 1 157 3 87 1 320 1 69 3 78 1 20 1 143 4 
221 1 157 1 69 1 78 1 15 1 150 1 
263 1 212 2 25 1 92 1 15 6 150 1 207 1 200 1 282 1 152 1 133 1 122 2 221 3 157 7 330 1 260 1 286 1 99 1 69 7 78 2 143 3 
72 1 148 2 25 1 308 1 75 2 355 1 332 1 5 4 184 1 267 1 310 1 359 1 315 1 122 1 230 1 56 1 123 1 28 2 316 3 234 2 157 1 319 2 59 1 78 1 294 2 297 1 128 3 103 2 165 2 105 1 347 2 66 1 325 1 172 1 373 2 15 1 282 1 132 1 327 1 283 1 303 2 221 1 40 1 69 1 380 1 42 6 143 1 
114 2 181 1 228 1 185 1 154 1 157 1 160 1 343 1 366 1 212 1 323 1 370 1 194 3 107 1 32 1 15 1 67 1 109 2 299 1 175 1 176 3 329 2 87 1 69 1 89 2 20 1 90 2 143 2 
25 1 14 1 15 2 150 1 282 1 152 1 122 1 221 2 157 2 69 2 78 1 20 1 143 2 
212 1 25 1 15 4 122 1 328 1 363 1 221 1 112 1 157 4 69 4 78 1 223 1 143 1 
253 1 15 2 200 1 198 1 282 1 122 1 221 2 208 1 157 2 330 1 320 1 69 2 78 1 143 1 
110 1 212 1 23 1 221 1 157 1 138 1 69 1 78 1 15 1 126 1 
25 1 15 2 207 1 122 1 17 1 221 1 157 2 260 1 69 2 78 1 143 1 
212 1 25 1 15 4 133 1 122 2 363 1 112 1 221 2 157 5 260 1 320 1 69 5 99 1 78 2 223 1 143 3 
212 1 368 1 25 1 15 4 133 1 122 2 363 1 112 1 221 2 157 5 260 1 320 1 69 5 78 2 223 1 143 3 
212 1 81 1 72 1 148 2 308 1 15 1 282 1 132 1 283 1 327 1 122 1 28 1 234 2 221 1 157 1 69 1 78 1 143 1 
15 1 200 1 282 1 152 1 122 1 221 2 157 1 330 1 286 1 320 1 69 1 78 1 143 1 
28 1 193 1 271 1 331 1 129 1 
80 1 147 1 193 2 194 2 32 1 168 1 196 1 228 1 28 1 350 1 175 1 111 1 58 1 176 2 38 1 87 1 271 2 129 1 331 2 
148 1 264 1 4 1 327 1 234 1 190 1 271 1 331 1 129 1 
147 1 38 1 129 1 
1 1 206 1 220 1 244 1 
1 1 369 1 206 1 244 1 33 1 356 1 55 1 
46 1 98 1 33 1 
0 1 1 1 369 1 206 1 244 1 108 2 33 3 356 1 239 1 55 3 232 1 295 1 
376 1 1 1 369 1 206 1 244 1 33 2 288 1 356 1 55 2 
23 1 369 1 1 1 33 1 356 1 55 1 304 1 202 1 137 1 126 1 295 1 
1 1 369 1 206 1 33 1 356 1 295 1 55 1 
369 1 206 2 244 1 33 1 356 1 295 1 55 1 
44 1 1 1 369 2 206 1 33 2 356 2 55 2 236 1 251 1 295 1 
369 1 1 2 206 1 244 1 33 3 356 1 240 1 55 3 57 1 376 2 268 1 202 1 295 1 
30 1 23 2 1 1 369 1 206 1 244 1 371 1 33 2 356 1 55 2 376 1 137 1 138 1 126 1 295 1 
369 2 1 2 206 1 244 1 33 4 356 2 288 1 55 4 376 2 18 1 268 1 202 1 295 1 
1 1 369 1 206 1 244 1 33 1 356 1 295 1 55 1 
369 1 1 3 206 2 244 2 108 1 33 4 239 1 356 1 300 1 55 4 232 1 376 2 268 1 202 1 
1 1 369 1 206 1 244 1 33 2 356 1 55 2 6 1 258 1 376 1 173 1 295 1 
1 1 369 1 13 1 206 1 244 1 108 2 33 3 239 1 356 1 55 3 232 2 295 1 
289 2 1 2 270 1 238 1 
369 1 269 1 33 1 356 1 295 1 55 1 
57 1 376 1 1 1 369 1 206 1 244 1 33 2 356 1 295 1 55 2 
127 1 
1 1 369 1 206 1 244 1 33 1 356 1 295 1 55 1 
57 1 376 1 1 1 369 1 206 1 244 1 108 1 33 3 356 1 295 1 55 3 
1 1 268 1 202 1 300 1 
1 1 206 1 

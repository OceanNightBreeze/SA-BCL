#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 71 1 357 1 169 3 358 3 159 2 359 1 261 2 61 1 170 1 119 1 141 1 22 2 
196 1 168 6 357 1 169 9 358 9 260 1 359 4 261 5 170 1 151 1 60 2 61 2 250 2 177 1 323 1 37 1 301 2 327 1 67 2 17 1 119 1 141 1 22 2 143 1 71 3 159 2 351 1 48 1 
196 1 168 6 357 1 169 9 358 9 260 1 359 4 261 5 170 1 151 1 60 2 61 2 250 2 177 1 323 1 37 1 301 2 327 1 67 2 17 1 119 1 141 1 22 2 143 1 71 3 159 2 351 1 48 1 
196 1 168 7 357 1 169 10 358 10 260 1 359 5 261 6 170 1 151 1 60 2 61 2 250 2 177 1 323 1 37 1 301 2 327 1 67 2 17 1 119 1 141 1 22 2 143 1 71 4 159 2 351 1 48 1 
196 1 168 4 357 1 169 7 358 7 260 1 359 3 261 4 170 1 151 1 60 2 61 2 250 2 177 1 323 1 301 2 327 1 67 1 17 1 119 1 141 1 22 2 143 1 71 2 159 2 351 1 48 1 
196 1 168 3 357 1 37 1 358 4 169 4 301 1 359 2 67 2 261 3 170 1 141 1 22 1 71 1 60 1 159 1 250 1 48 1 
357 1 358 2 169 2 260 1 301 1 327 1 261 1 170 1 141 1 69 1 22 1 104 1 159 1 61 1 344 1 250 1 
196 1 323 1 168 7 357 1 37 1 358 9 169 9 301 1 82 1 359 4 67 2 17 1 261 5 170 1 119 1 141 1 22 2 71 3 60 1 159 2 61 1 137 1 250 1 48 1 
196 1 323 1 168 7 357 1 37 1 358 9 169 9 301 1 82 1 359 4 67 2 17 1 261 5 170 1 119 1 141 1 22 2 71 3 60 1 159 2 61 1 137 1 250 1 48 1 
126 1 95 1 235 1 329 1 251 1 31 1 205 1 59 1 113 1 161 1 280 1 26 1 381 1 345 1 
310 1 
126 2 42 1 81 1 2 1 310 1 278 1 280 1 31 2 
126 5 80 1 81 2 2 1 287 1 310 1 210 2 98 1 39 2 186 1 374 2 5 1 8 1 31 5 42 1 44 1 35 1 280 2 343 1 
2 1 310 1 288 1 
158 1 310 1 211 2 
150 1 205 2 59 2 251 2 329 1 26 2 345 2 381 2 
307 1 150 1 50 1 109 1 356 1 241 1 242 1 309 1 262 2 84 1 87 1 224 1 56 1 292 1 205 3 59 2 320 1 297 1 345 2 181 1 209 1 68 1 251 2 329 1 372 1 350 2 212 1 253 1 156 2 160 1 277 1 237 1 215 2 26 3 381 2 166 2 219 1 
95 1 205 1 59 1 113 1 235 1 251 1 329 1 26 1 345 1 381 1 
126 1 2 1 310 1 328 1 314 1 364 1 313 1 31 1 205 1 113 1 319 1 228 1 26 1 345 1 
126 2 2 1 310 1 251 1 314 1 364 1 313 1 31 2 205 1 59 1 113 1 319 1 26 1 381 1 345 1 
126 1 256 1 81 1 280 1 31 1 
126 2 42 1 108 1 81 1 2 1 310 1 280 1 31 2 
126 1 81 1 31 1 
50 1 49 1 181 1 209 1 251 1 262 1 372 1 84 1 202 1 253 1 224 1 292 1 205 2 156 1 277 1 265 1 26 2 381 1 345 1 166 1 
150 2 251 1 205 2 59 1 153 1 63 1 26 2 345 2 381 1 
144 1 91 1 202 1 
150 1 50 1 65 1 181 1 209 1 262 1 84 1 372 1 253 1 224 1 292 1 205 1 156 1 277 1 26 1 166 1 
150 1 288 1 
49 2 150 1 283 1 251 4 40 1 303 1 205 5 59 1 228 1 63 1 265 1 26 5 381 4 345 5 
95 1 205 2 113 1 312 1 251 2 26 2 345 2 381 2 
150 1 49 1 205 3 59 1 251 3 26 3 345 3 381 3 
95 1 205 1 113 1 251 1 26 1 345 1 381 1 
205 1 59 1 113 1 153 1 251 1 63 1 26 1 345 1 381 1 
126 1 150 1 50 1 49 1 109 1 241 1 309 1 262 1 314 1 364 1 313 1 84 1 87 1 224 1 31 1 56 1 292 1 133 1 205 4 59 2 113 1 319 1 33 1 320 1 63 1 265 1 345 3 181 1 209 1 68 1 251 3 329 1 372 1 350 1 212 1 253 1 156 1 277 1 160 1 237 1 215 2 26 4 381 3 166 1 
150 1 205 2 49 1 283 1 251 1 228 1 26 2 345 2 381 1 
126 1 49 2 310 1 251 3 313 1 314 1 364 1 31 1 205 3 59 1 113 1 319 1 33 1 63 1 265 1 26 3 381 3 345 3 78 1 
49 1 251 2 202 1 205 2 59 1 144 1 63 1 26 2 381 2 345 2 
150 1 50 1 181 1 209 1 262 1 84 1 372 1 253 1 224 1 292 1 205 1 156 1 277 1 26 1 166 1 
150 1 50 1 286 1 209 1 262 1 84 1 372 1 253 1 224 1 292 1 205 1 156 1 154 1 26 1 166 1 
307 2 306 1 109 1 308 1 309 1 4 1 291 1 202 2 131 1 87 1 56 1 171 1 91 2 173 1 320 2 342 1 14 1 68 1 350 4 187 1 103 1 144 2 237 1 215 2 
205 1 113 1 251 1 312 1 364 1 26 1 345 1 381 1 
190 1 46 1 86 1 
190 2 198 1 51 1 46 2 134 1 30 1 
190 1 46 1 
190 1 46 1 
198 1 51 1 
198 1 51 1 
198 1 51 1 
55 1 190 1 46 1 
55 1 190 1 46 1 
55 1 190 1 46 1 
94 1 190 1 46 1 
94 1 190 1 46 1 
94 1 190 1 46 1 
126 1 150 1 284 1 110 1 363 1 86 1 201 1 31 1 205 2 90 1 317 1 341 1 345 2 298 1 15 1 251 2 185 1 302 1 190 1 46 1 25 1 26 2 164 1 381 2 
126 2 15 2 36 1 29 2 310 1 363 1 185 3 21 1 302 2 31 2 189 1 190 2 341 2 46 2 116 1 380 1 134 1 25 2 248 1 
60 1 104 1 301 2 227 2 373 1 
60 1 301 1 250 1 
104 1 301 1 250 1 
60 2 104 1 301 3 227 1 373 1 195 1 
60 1 104 1 301 2 227 1 222 1 373 1 
126 5 306 1 81 1 2 1 110 1 310 2 112 2 201 1 54 1 31 5 365 1 8 3 245 1 317 1 318 1 173 1 342 1 35 1 139 1 210 1 98 2 211 3 20 1 39 1 374 1 187 1 42 1 255 2 158 1 148 1 280 4 194 2 
126 9 306 3 81 6 110 4 2 1 310 5 111 1 54 2 31 9 8 8 339 5 245 1 173 3 342 3 35 1 16 1 139 3 370 1 210 2 98 6 211 9 39 2 374 2 187 3 274 1 42 1 44 1 255 6 256 5 158 3 162 1 148 2 280 7 352 1 194 6 
126 3 306 1 2 1 110 1 310 3 112 1 54 1 365 1 31 3 8 3 318 1 173 1 342 1 139 1 210 1 98 2 211 4 39 1 374 1 187 1 44 1 255 2 158 2 148 1 280 2 194 2 
126 4 306 2 2 1 110 2 310 4 112 2 54 1 31 4 365 1 8 5 318 1 173 2 342 2 16 1 139 2 210 1 98 4 211 7 39 1 374 1 187 2 255 4 44 1 158 3 162 1 148 1 280 3 352 1 194 4 
230 1 
209 1 288 1 232 1 
209 1 19 1 
292 1 209 1 224 1 
145 1 209 1 
209 1 224 1 
292 1 209 3 124 1 174 1 232 2 224 1 
307 4 267 1 285 1 4 2 311 1 348 1 336 2 291 3 350 7 187 1 293 1 376 1 152 1 320 3 173 1 10 1 321 1 355 1 
128 1 307 16 306 3 221 1 311 1 4 5 336 3 291 10 87 1 293 1 56 1 88 1 152 2 10 2 320 15 173 4 342 3 12 1 175 1 321 5 267 1 139 3 68 1 348 2 350 31 187 4 376 1 377 4 23 1 237 1 215 2 257 1 106 3 355 2 
307 5 4 3 311 1 336 2 291 4 87 2 56 2 293 1 152 1 173 1 172 1 320 4 10 1 12 1 321 1 249 1 267 1 68 2 348 1 350 9 187 1 237 2 215 4 355 1 
307 4 267 1 4 2 311 1 348 1 336 2 291 3 350 7 187 1 293 1 376 1 152 1 320 3 173 1 10 1 321 1 355 1 
307 4 267 1 4 2 311 1 348 1 336 2 291 3 350 7 187 1 293 1 376 1 152 1 320 3 173 1 10 1 321 1 355 1 
167 1 50 1 169 1 358 1 262 1 199 1 84 1 6 1 244 1 224 1 366 2 61 2 13 1 138 1 346 2 371 1 209 1 253 1 22 1 156 1 159 1 192 2 166 1 
50 1 169 1 358 1 262 1 289 1 366 1 60 1 61 1 250 1 369 1 118 1 346 1 301 2 272 1 18 1 141 1 253 1 22 1 156 1 104 1 159 1 214 1 74 1 192 1 166 1 195 1 
50 1 168 1 357 1 169 2 358 2 261 1 262 1 289 1 170 1 366 1 60 1 61 1 207 1 250 1 369 1 118 1 346 1 301 2 18 1 141 1 253 1 22 1 156 1 104 1 159 1 214 1 74 1 192 1 166 1 195 1 
50 1 168 2 357 1 169 3 358 3 261 1 262 1 289 1 170 1 366 1 60 1 61 1 176 1 250 1 138 1 369 1 346 1 301 2 272 1 18 1 253 1 22 1 156 1 104 1 159 1 214 1 74 1 192 1 195 1 166 1 
50 1 168 2 357 1 169 2 358 2 261 1 262 1 170 1 366 1 60 1 61 1 176 1 250 1 369 1 346 1 301 2 272 1 253 1 156 1 104 1 214 1 74 1 192 1 166 1 195 1 
66 1 
50 1 335 1 1 1 2 1 3 1 6 1 8 2 205 1 113 1 117 2 13 1 345 1 210 1 209 1 211 2 253 1 156 2 120 1 158 2 258 2 26 1 166 2 126 5 28 2 81 6 310 2 262 2 84 2 314 1 364 1 313 1 223 1 224 1 31 5 319 1 368 2 35 1 228 1 136 1 93 4 234 2 140 2 98 2 97 1 328 1 100 1 39 1 101 1 374 1 42 3 146 1 147 2 148 1 332 1 240 1 
126 3 335 1 81 2 3 1 314 1 364 1 313 1 223 1 31 3 205 1 113 1 319 1 228 1 345 1 93 2 328 1 97 1 140 1 42 1 332 1 278 1 26 1 
126 3 81 1 335 1 2 1 310 1 3 1 314 1 364 1 313 1 223 1 31 3 205 1 113 1 319 1 228 1 345 1 93 3 234 1 328 1 97 1 42 1 332 1 278 1 26 1 
126 3 335 1 81 2 2 1 310 1 3 1 314 1 364 1 313 1 223 1 31 3 205 1 113 1 319 1 368 1 228 1 345 1 93 3 234 1 328 1 97 1 140 1 42 1 278 1 332 1 26 1 
335 1 1 1 2 5 3 1 8 1 57 1 205 1 113 1 117 2 345 1 210 1 158 2 258 2 125 1 26 1 126 5 28 2 81 7 361 1 310 5 313 1 364 1 314 1 223 1 31 5 319 1 368 4 35 1 228 1 93 6 234 4 140 4 97 1 328 1 98 1 39 1 374 1 42 3 275 1 146 1 331 1 147 2 278 1 332 1 
1 1 335 1 2 1 3 1 8 1 205 1 113 1 117 2 345 1 210 1 211 2 158 2 258 2 26 1 126 4 28 2 81 4 310 2 313 1 364 1 314 1 223 1 31 4 319 1 368 2 35 1 228 1 93 4 234 2 97 1 328 1 98 1 140 2 39 1 374 1 101 1 42 2 146 1 147 2 332 1 
126 4 28 2 81 4 1 1 335 1 2 1 310 1 3 1 314 1 364 1 313 1 223 1 8 1 31 4 57 1 205 1 113 1 319 1 368 2 35 1 228 1 117 2 345 1 93 4 234 2 210 1 140 2 98 1 328 1 97 1 39 1 374 1 42 2 275 1 158 2 146 1 147 2 332 1 258 2 125 1 26 1 
126 4 28 2 81 4 1 1 335 1 2 1 310 1 3 1 314 1 364 1 313 1 223 1 8 1 31 4 57 1 205 1 113 1 319 1 368 2 35 1 228 1 117 2 345 1 93 4 234 2 210 1 140 2 98 1 328 1 97 1 39 1 374 1 42 2 275 1 158 2 146 1 147 2 332 1 258 2 125 1 26 1 
126 4 81 4 335 1 2 1 310 1 3 1 314 1 364 1 313 1 223 1 53 1 8 1 31 4 57 1 205 1 113 1 319 1 368 2 35 1 228 1 117 2 345 1 93 4 234 2 210 1 140 2 98 1 328 1 97 1 211 2 39 1 273 1 374 1 42 2 122 2 146 1 238 2 332 1 258 2 75 1 26 1 
126 4 28 2 1 1 335 1 81 5 2 1 310 1 3 1 314 1 364 1 313 1 223 1 8 1 31 4 57 1 205 1 113 1 319 1 368 3 35 1 228 1 117 2 345 1 93 5 234 3 210 1 98 1 328 1 97 1 140 3 39 1 374 1 42 2 275 1 158 2 146 1 147 2 331 1 332 1 258 2 125 1 26 1 
126 4 28 2 1 1 335 1 81 5 2 1 310 1 3 1 314 1 364 1 313 1 223 1 8 1 31 4 57 1 205 1 113 1 319 1 368 3 35 1 228 1 117 2 345 1 93 5 234 3 210 1 98 1 328 1 97 1 140 3 39 1 374 1 42 2 275 1 158 2 146 1 147 2 331 1 332 1 258 2 125 1 26 1 
335 1 2 1 3 1 8 1 205 1 113 1 117 2 345 1 210 1 211 2 122 2 75 1 258 2 26 1 126 4 81 4 310 1 313 1 364 1 314 1 223 1 31 4 319 1 368 2 35 1 228 1 93 4 234 2 97 1 328 1 98 1 140 2 39 1 374 1 101 1 42 2 146 1 238 2 332 1 
307 1 49 1 50 2 109 2 309 2 262 7 84 2 6 1 87 2 224 2 56 2 205 1 115 1 320 1 297 1 13 1 207 1 345 1 179 1 209 3 236 1 251 1 68 2 272 1 350 2 212 1 253 2 188 1 103 1 156 8 123 1 237 2 215 4 193 1 26 1 381 1 166 8 77 1 219 2 
306 1 307 1 109 1 309 1 130 1 4 1 291 1 202 1 87 1 56 1 205 1 59 1 91 1 173 1 320 2 342 1 92 1 63 1 345 1 139 1 68 1 251 1 350 3 187 1 144 1 237 1 215 2 26 1 381 1 
307 3 150 2 109 1 309 1 311 1 288 1 4 2 336 1 291 2 202 1 87 1 56 1 293 1 152 1 91 1 10 1 173 1 320 3 267 1 68 1 350 6 187 1 103 1 144 1 237 1 215 2 
128 1 307 8 306 2 150 1 221 1 109 1 309 2 4 1 291 2 202 11 87 2 56 2 91 11 320 6 173 1 342 1 92 1 297 1 321 1 178 1 139 2 68 2 212 1 252 1 350 14 187 2 377 3 144 4 237 2 215 4 106 3 47 1 107 1 
307 1 150 1 50 1 49 1 109 1 309 1 262 1 84 1 224 1 87 1 292 1 56 1 205 2 320 1 92 1 297 1 265 1 345 1 65 1 324 1 181 1 209 1 251 1 68 1 372 1 212 1 350 2 253 1 156 1 144 1 277 1 378 1 215 2 237 1 26 2 166 1 381 1 282 1 
150 2 49 1 50 2 109 3 241 2 4 4 336 1 291 8 202 7 293 1 56 3 292 2 205 3 152 1 340 2 10 1 342 2 297 1 345 1 209 2 68 3 251 1 212 1 350 20 253 2 156 3 215 6 24 2 26 3 166 3 306 2 307 10 309 3 311 1 262 3 84 1 315 1 87 3 224 2 91 7 367 2 173 3 320 10 92 1 265 1 321 4 322 1 267 1 181 2 96 2 139 2 372 2 272 1 187 3 144 7 277 2 105 1 237 3 381 1 
306 1 307 2 109 1 309 1 68 1 291 1 350 2 202 1 187 1 87 1 56 1 171 1 103 1 144 1 91 1 215 2 237 1 321 1 
109 1 309 1 4 1 68 1 291 1 350 2 202 1 87 1 56 1 103 1 144 1 91 1 215 2 237 1 173 1 320 2 342 1 14 1 
307 2 306 1 109 1 309 1 4 1 291 2 202 2 87 1 56 1 91 2 173 1 320 2 342 1 321 1 139 1 68 1 350 4 187 1 103 1 144 2 237 1 215 2 
306 1 307 2 109 1 309 1 68 1 291 1 350 2 202 1 187 1 87 1 56 1 171 1 144 1 91 1 215 2 237 1 321 1 77 1 
109 1 309 1 4 1 68 1 291 1 350 2 202 1 87 1 56 1 144 1 91 1 215 2 237 1 173 1 320 2 342 1 77 1 14 1 
307 2 306 1 109 1 309 1 4 1 291 2 202 2 87 1 56 1 91 2 173 1 320 2 342 1 321 1 139 1 68 1 350 4 187 1 144 2 237 1 215 2 77 1 
307 2 306 1 109 1 309 1 4 1 291 2 202 2 87 1 56 1 91 2 173 1 320 2 342 1 321 1 139 1 68 1 350 4 187 1 144 2 237 1 215 2 
307 1 150 1 50 1 241 1 109 1 309 1 262 1 84 1 224 1 87 1 292 1 56 1 205 1 320 1 297 1 181 1 209 1 68 1 372 1 350 2 212 1 253 1 156 1 277 1 215 2 237 1 26 1 166 1 
307 1 150 1 50 1 109 1 286 1 309 1 262 1 84 1 224 1 87 1 292 1 56 1 205 1 320 1 297 1 154 1 209 1 68 1 372 1 350 2 212 1 253 1 156 1 215 2 237 1 353 1 26 1 166 1 
307 2 306 1 109 1 309 1 4 1 291 2 202 2 87 1 56 1 91 2 173 1 320 2 342 1 92 1 321 1 139 1 68 1 350 4 187 1 144 2 237 1 215 2 
307 2 306 1 50 1 241 1 109 1 309 1 4 1 262 1 291 2 202 2 224 1 87 1 292 1 56 1 205 1 91 2 320 2 173 1 342 1 321 1 207 1 181 1 139 1 209 1 68 1 372 1 350 4 187 1 253 1 156 1 144 2 277 1 215 2 237 1 24 1 26 1 166 1 
306 1 307 2 109 1 309 1 291 1 202 1 87 1 56 1 205 1 59 1 91 1 320 1 173 1 342 1 92 1 63 1 321 1 345 1 139 1 68 1 251 1 350 3 187 1 144 1 237 1 215 2 73 1 26 1 381 1 
128 1 307 6 306 2 221 1 4 1 291 2 87 2 56 2 225 1 114 1 172 1 320 7 173 2 342 2 135 1 321 1 139 2 38 1 270 1 68 2 349 1 350 13 187 2 377 2 237 2 215 4 45 1 106 1 333 1 
307 14 128 2 306 3 4 2 52 1 291 4 200 1 243 1 338 1 87 3 56 3 114 2 173 2 320 12 172 1 342 2 12 2 135 2 321 2 139 3 270 1 155 1 271 1 68 3 349 1 350 26 187 3 70 1 377 2 237 3 215 6 45 4 106 2 333 1 
4 4 52 1 336 1 291 8 200 1 243 1 338 1 56 3 293 1 152 1 114 1 10 1 342 4 12 1 62 1 68 3 155 1 349 1 350 41 70 1 215 6 306 4 307 20 128 3 221 1 311 1 87 3 225 1 173 5 320 21 172 1 135 2 321 4 267 1 139 4 270 1 271 1 187 5 377 4 237 3 45 4 106 3 333 1 
128 3 307 20 306 4 221 1 311 1 4 4 336 1 52 1 291 7 200 1 243 1 338 1 87 4 293 1 56 4 152 1 225 1 114 1 10 1 172 1 320 18 173 4 342 3 62 1 12 2 135 2 321 3 267 1 139 4 270 1 155 1 271 1 68 4 349 1 350 38 187 5 70 1 377 4 237 4 215 8 45 4 106 3 333 1 
128 2 307 27 306 7 221 2 311 1 4 7 336 1 52 1 291 14 200 1 243 1 338 1 87 2 293 1 56 2 152 1 114 1 10 1 172 1 320 25 173 8 342 7 12 1 135 1 321 7 267 1 139 7 270 1 155 1 271 1 68 2 349 1 252 2 350 52 187 8 70 1 377 4 237 2 215 4 45 4 106 4 333 1 
15 1 189 1 190 1 46 1 341 1 134 1 25 1 337 1 21 1 302 1 
284 1 86 1 
15 1 0 1 246 1 190 1 46 1 341 1 279 1 25 1 302 1 
55 1 239 1 
94 1 290 1 30 1 
126 1 15 1 36 1 29 1 310 1 363 1 185 2 21 1 302 1 31 1 189 1 190 1 341 1 46 1 116 1 134 1 25 1 248 1 
126 1 15 1 36 1 29 1 310 1 363 1 185 2 21 1 302 1 31 1 189 1 190 1 341 1 46 1 116 1 134 1 25 1 248 1 
126 1 15 1 36 1 29 1 310 1 363 1 185 2 21 1 302 1 31 1 189 1 190 1 341 1 46 1 116 1 134 1 25 1 248 1 
55 1 30 1 239 1 
55 1 30 1 239 1 
94 1 290 1 
94 1 290 1 30 1 
164 1 298 1 
126 1 150 1 284 1 29 1 110 1 86 1 201 1 31 1 205 2 90 1 317 1 341 1 345 2 298 1 15 1 36 1 251 2 185 1 302 1 190 1 46 1 280 1 304 1 25 1 26 2 164 1 381 2 
307 1 50 1 334 1 109 1 309 1 262 2 224 1 87 1 56 1 205 2 320 1 92 1 297 1 345 2 179 1 299 1 209 1 183 1 68 1 350 2 212 1 253 1 188 1 156 2 215 2 237 1 191 1 26 2 166 2 79 1 219 2 
50 1 346 1 268 1 209 1 262 1 199 1 84 1 253 1 6 1 224 1 156 1 13 1 166 1 76 1 
369 1 346 1 50 1 268 1 301 2 262 1 83 1 272 1 85 1 18 1 253 1 156 1 60 1 104 1 74 1 195 1 166 1 250 1 
369 1 50 1 346 1 268 1 301 2 262 2 83 1 272 1 85 1 18 1 253 1 156 2 60 1 104 1 74 1 207 1 195 1 166 2 250 1 
369 1 346 1 50 1 301 2 262 1 83 1 272 1 18 1 253 1 58 1 156 1 60 1 104 1 74 1 195 1 166 1 250 1 
220 1 
80 1 2 1 210 1 310 1 98 1 39 1 374 1 186 1 8 1 35 1 
306 2 96 1 139 2 310 5 98 5 211 10 187 2 8 5 255 5 158 5 247 1 173 2 342 2 216 2 194 5 
126 1 42 1 81 1 2 1 310 1 31 1 
126 3 50 1 81 4 262 4 84 2 7 2 6 1 224 1 8 2 31 3 89 1 35 1 136 2 13 1 209 1 210 2 184 1 98 2 100 1 39 2 330 1 374 2 253 1 42 2 44 1 120 1 156 4 148 2 166 4 
80 1 2 1 310 1 98 1 288 1 186 1 8 1 
126 1 28 1 1 1 81 1 2 1 310 2 8 1 31 1 35 1 210 1 98 1 211 1 39 1 374 1 42 1 158 1 147 1 
197 2 50 3 2 2 7 1 8 9 292 3 294 2 247 2 342 2 64 2 207 1 209 10 210 4 211 12 19 3 253 4 254 1 213 2 156 3 255 6 158 6 124 1 216 2 166 3 126 5 306 2 80 1 81 5 310 8 262 3 84 1 313 2 263 2 224 3 31 5 32 1 173 2 35 4 136 1 232 2 96 2 326 1 139 2 184 1 98 8 39 4 186 1 374 4 187 2 142 2 42 3 145 2 148 2 194 6 
126 1 128 1 306 2 81 1 2 2 310 5 52 1 200 1 338 1 31 1 8 8 247 1 226 1 173 2 35 2 342 2 136 1 139 2 210 2 98 5 271 1 211 6 39 2 374 2 187 2 70 1 42 1 255 5 377 1 158 3 72 1 148 1 216 2 106 1 194 5 
126 1 259 1 31 1 8 2 293 1 205 1 59 1 113 1 152 1 247 1 10 1 173 1 35 1 345 1 95 1 235 1 210 1 98 2 329 1 251 1 39 1 374 1 187 2 275 1 161 1 216 2 26 1 381 1 
150 1 50 1 241 1 109 1 309 1 262 1 84 1 224 1 87 1 56 1 292 1 205 3 59 2 320 1 345 2 181 1 209 1 68 1 251 2 329 1 372 1 350 1 212 1 253 1 156 1 160 1 277 1 237 1 215 2 26 3 166 1 381 2 
2 2 210 1 310 4 98 2 211 4 336 1 39 1 374 1 8 1 255 2 158 2 35 1 148 1 136 1 194 2 
15 1 121 1 25 1 21 1 298 1 
15 1 208 1 25 1 
15 1 208 1 25 1 
15 1 208 1 25 1 
15 1 25 1 41 1 
15 1 25 1 41 1 
15 1 25 1 41 1 
15 1 25 1 
190 1 46 1 
307 5 259 1 4 3 68 1 291 5 350 10 187 2 87 1 56 1 293 1 152 2 237 1 215 2 172 1 10 2 320 5 173 2 321 2 
306 1 307 2 68 1 291 1 350 2 187 1 87 1 56 1 215 2 237 1 172 1 321 1 
306 1 307 2 139 1 4 1 68 1 291 2 350 4 187 1 87 1 56 1 215 2 237 1 320 2 173 1 172 1 342 1 321 1 
307 1 4 1 68 3 291 2 350 3 102 1 87 3 56 3 152 1 225 1 215 6 237 3 320 2 172 1 10 1 12 1 321 1 
128 1 307 16 306 3 221 1 311 1 362 1 4 7 336 1 291 12 87 5 293 2 88 1 56 5 152 3 225 1 10 3 320 18 172 1 173 5 342 3 12 2 175 1 321 5 267 1 139 3 68 5 350 34 187 5 102 1 377 4 23 1 237 5 215 10 106 3 
128 1 307 4 311 1 4 2 336 1 291 2 87 1 56 1 293 1 152 1 173 1 320 4 172 1 10 1 267 1 68 1 350 8 187 1 70 1 377 1 237 1 215 2 106 1 
128 1 307 6 306 1 221 1 4 2 311 1 362 1 336 1 291 3 87 2 293 1 56 2 152 1 173 1 10 1 320 5 172 1 321 1 267 1 139 1 68 2 350 11 187 2 70 1 377 2 237 2 215 4 106 1 
128 1 307 9 306 2 311 1 362 1 4 3 336 1 52 1 291 4 200 1 338 1 87 3 293 1 56 3 152 1 10 1 320 10 172 1 173 3 342 2 12 1 321 1 267 1 139 2 271 1 68 3 350 19 187 3 70 1 377 1 237 3 215 6 106 1 
128 1 307 10 306 2 311 1 362 1 4 3 336 1 52 1 291 5 200 1 338 1 87 3 293 1 56 3 152 1 10 1 320 7 172 1 173 2 342 1 12 1 321 2 267 1 139 2 68 3 271 1 350 17 187 3 70 1 377 1 237 3 215 6 106 1 
128 1 307 4 311 1 4 2 336 1 291 2 87 1 56 1 293 1 152 1 173 1 320 4 172 1 10 1 267 1 68 1 350 8 187 1 70 1 377 1 237 1 215 2 106 1 
128 1 307 6 306 2 4 1 52 1 291 2 200 1 338 1 87 1 56 1 320 6 172 1 173 2 342 2 321 1 139 2 68 1 271 1 350 12 187 2 70 1 377 1 237 1 215 2 106 1 
128 1 307 10 306 2 311 1 362 1 4 3 336 1 52 1 291 5 200 1 338 1 87 4 293 1 56 4 152 1 10 1 320 8 172 1 173 2 342 1 12 2 321 2 267 1 139 2 271 1 68 4 350 18 187 3 70 1 377 1 237 4 215 8 106 1 
128 1 307 9 306 3 4 3 52 1 291 6 200 1 338 1 87 4 56 4 225 1 320 7 172 1 173 2 342 2 12 2 321 3 139 3 271 1 68 4 350 16 187 3 70 1 377 1 237 4 215 8 106 1 
307 3 267 2 311 1 4 3 291 6 350 7 187 1 293 1 152 3 320 4 173 1 10 3 321 3 
128 1 307 10 306 2 311 1 4 3 336 1 52 1 291 4 200 1 338 1 87 4 293 1 56 4 152 1 225 1 10 1 320 8 172 1 173 2 342 1 12 2 321 1 267 1 139 2 271 1 68 4 350 18 187 3 70 1 377 1 237 4 215 8 106 1 
307 4 267 1 4 2 311 1 68 2 336 1 291 3 350 8 187 1 87 2 293 1 56 2 152 1 215 4 237 2 173 1 320 4 10 1 12 1 321 1 
307 3 267 1 288 1 311 1 4 2 336 1 291 2 350 6 187 1 293 1 152 1 320 3 10 1 173 1 
306 1 307 2 139 1 4 1 362 1 68 1 291 2 350 4 187 1 87 1 56 1 215 2 237 1 320 2 173 1 342 1 321 1 
128 1 307 3 306 1 221 1 139 1 4 1 291 2 350 7 187 1 377 2 173 1 320 4 342 1 106 1 321 1 
306 2 307 11 221 1 311 1 4 5 336 1 291 9 87 2 293 1 56 2 152 2 10 2 320 12 173 3 342 2 12 2 321 4 267 1 139 2 68 2 350 23 252 1 187 3 102 1 377 2 215 4 237 2 106 2 47 1 
377 1 320 1 350 1 
307 1 106 1 350 1 
306 1 307 3 96 1 139 1 362 1 4 2 68 1 291 3 350 6 187 1 87 1 56 1 237 1 215 2 320 3 173 1 342 1 321 1 
128 1 307 6 306 2 4 1 52 1 291 2 200 1 338 1 87 1 56 1 320 6 172 1 173 2 342 2 321 1 139 2 68 1 271 1 350 12 187 2 70 1 377 1 237 1 215 2 106 1 
307 3 4 1 291 2 350 6 187 1 293 1 152 1 173 1 320 3 10 1 321 1 
307 1 267 1 4 1 311 1 68 1 291 2 350 3 102 1 87 1 56 1 152 1 215 2 237 1 10 1 320 2 12 1 321 1 
150 1 205 1 283 1 316 1 228 1 26 1 345 1 
150 1 283 1 9 1 205 1 295 1 316 1 276 1 296 1 34 1 228 1 26 1 345 1 
50 1 360 1 209 1 262 4 84 1 253 1 6 1 224 1 156 4 163 1 13 1 207 1 166 4 
322 1 50 1 180 1 209 1 262 2 7 1 253 2 224 1 292 1 156 2 264 1 281 1 166 2 233 1 
50 1 156 1 104 1 301 1 74 1 262 1 84 1 253 1 166 1 250 1 
50 1 334 1 209 1 262 2 272 1 253 1 188 1 224 1 156 2 207 1 166 2 
50 2 360 1 209 3 262 4 84 1 7 1 6 1 253 2 188 1 224 2 156 5 115 1 13 1 193 1 207 1 166 5 
50 2 360 1 209 3 262 4 84 1 7 1 6 1 253 2 188 1 224 2 204 1 156 5 115 1 13 1 207 1 166 5 
50 1 156 1 209 1 288 1 262 1 84 1 13 1 253 1 6 1 166 1 224 1 
150 1 49 1 50 1 209 1 251 1 262 1 372 1 84 1 253 1 224 1 292 1 205 2 156 1 277 1 26 2 381 1 345 1 166 1 
150 1 50 1 49 1 262 1 314 1 364 1 7 1 263 1 224 2 292 2 205 2 113 1 345 2 209 3 251 2 372 1 253 1 156 1 277 1 145 1 26 2 166 1 381 1 
150 1 50 1 49 1 286 1 262 2 314 1 364 1 7 1 263 1 224 2 292 2 205 2 113 1 345 2 209 3 251 2 372 1 253 1 156 2 145 1 163 1 26 2 166 2 381 1 
126 2 50 1 81 1 2 1 310 1 209 4 262 3 99 1 84 1 313 1 19 1 263 1 253 1 7 1 224 1 31 2 292 1 132 1 156 3 145 1 163 1 166 3 232 1 
126 2 50 1 81 1 2 1 310 1 209 4 262 3 84 1 313 1 19 1 263 1 253 1 7 1 224 1 31 2 292 1 294 1 156 3 145 1 163 1 166 3 232 1 
50 1 156 1 123 1 262 1 253 1 166 1 
127 1 50 2 180 1 209 3 236 1 262 6 84 2 272 1 253 3 188 1 224 2 292 1 156 7 123 1 115 1 124 1 193 1 207 1 166 7 219 1 233 1 
307 3 150 2 50 1 49 1 109 2 241 1 309 2 4 2 311 1 262 1 336 1 291 2 202 1 224 1 87 2 293 1 292 1 56 2 205 2 91 1 152 1 367 1 320 3 173 1 10 1 92 1 207 1 345 1 267 1 181 1 209 1 251 1 68 2 372 1 350 6 187 1 253 1 156 1 144 1 277 1 215 4 237 2 24 1 26 2 79 1 381 1 166 1 
126 3 197 1 80 1 81 2 2 1 310 1 262 1 84 1 313 1 8 1 31 3 294 1 35 2 232 1 210 2 209 2 98 1 184 1 39 2 19 1 186 1 374 2 142 1 213 1 42 1 156 1 280 1 166 1 
50 1 209 2 262 2 253 2 224 1 292 1 254 1 156 2 123 1 124 1 207 1 166 2 232 1 
150 1 49 1 50 1 286 1 209 1 251 1 262 1 372 1 84 1 253 1 224 1 292 1 205 2 156 1 26 2 381 1 345 1 166 1 
127 1 50 1 180 1 209 1 262 1 7 1 253 2 224 1 292 1 156 1 124 1 166 1 233 1 
150 1 157 1 347 1 203 1 218 1 
126 2 305 1 150 1 2 1 129 1 310 1 347 2 313 1 364 1 314 1 203 2 31 2 157 1 113 1 319 1 33 1 11 1 280 1 218 2 
299 1 183 1 203 1 157 1 205 1 191 1 26 1 218 1 345 1 
305 1 157 1 129 1 
357 1 169 1 358 1 159 1 261 1 170 1 141 1 22 1 
168 2 357 2 358 4 169 4 260 1 359 1 182 1 261 3 170 2 375 1 22 1 71 1 159 1 266 1 
168 1 357 1 325 1 169 2 358 2 159 1 82 1 261 1 170 1 206 1 141 1 22 1 
357 1 169 3 358 3 159 1 260 2 182 1 261 1 170 1 141 1 375 2 231 1 22 1 
300 2 379 1 261 2 229 1 
169 1 358 1 159 1 141 1 149 1 22 1 
168 1 323 1 357 1 169 2 358 2 159 1 261 1 170 1 141 1 22 1 
165 1 
357 1 169 1 358 1 159 1 261 1 170 1 141 1 22 1 
357 1 288 1 261 1 170 1 
357 1 169 1 358 1 159 1 261 1 170 1 22 1 
366 1 169 1 61 1 
43 1 357 1 169 3 358 3 159 1 260 2 182 1 261 1 170 1 141 1 375 1 22 1 
168 1 357 1 169 2 358 2 159 1 67 1 261 1 170 1 22 1 
60 1 169 1 358 1 159 1 301 1 359 1 261 1 141 1 250 1 48 1 22 1 
169 1 358 1 159 1 261 1 170 1 141 1 22 1 
357 1 169 1 358 1 159 1 170 2 141 1 22 1 
169 2 358 2 159 2 261 1 170 1 354 1 217 1 141 1 27 1 22 2 
71 1 168 2 323 1 357 1 169 3 358 3 159 1 359 1 261 2 17 1 170 1 141 1 22 1 
168 1 357 1 358 2 169 2 301 2 269 1 261 1 170 1 141 1 22 1 104 1 60 1 159 1 195 1 250 1 
71 1 168 2 357 1 37 1 169 4 358 4 159 2 359 1 67 1 261 2 170 1 141 1 22 2 
168 1 323 1 357 1 358 3 169 3 260 1 261 1 170 1 141 1 22 1 159 1 
71 1 359 1 261 1 266 1 
261 1 170 1 

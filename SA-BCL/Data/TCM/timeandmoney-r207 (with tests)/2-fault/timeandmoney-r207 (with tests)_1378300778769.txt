#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 274 153 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 274 153 28 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 274 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 1 75 1 103 1 60 2 319 1 81 2 5 2 171 1 7 1 285 1 13 3 327 5 14 4 262 1 242 1 68 2 18 1 113 1 183 1 353 9 270 1 21 1 143 2 228 2 314 1 337 2 192 9 194 6 
279 1 75 1 60 2 103 1 319 1 81 2 5 2 171 1 7 1 285 1 13 3 327 5 14 4 262 1 242 1 68 2 18 1 113 1 183 1 353 9 270 1 21 1 143 2 228 2 314 1 337 2 192 9 194 6 
279 1 75 1 60 2 103 1 319 1 81 2 5 2 171 1 7 1 285 1 13 4 327 6 14 5 262 1 242 1 68 2 18 1 113 1 183 1 353 10 270 1 21 1 143 2 228 2 314 1 337 2 192 10 194 7 
279 1 75 1 60 2 103 1 319 1 81 2 5 1 171 1 7 1 285 1 13 2 327 4 14 3 242 1 68 2 18 1 113 1 183 1 353 7 270 1 21 1 143 2 228 2 314 1 337 2 192 7 194 4 
279 1 75 1 68 1 103 1 60 1 18 1 113 1 353 4 81 1 5 2 228 1 143 1 13 1 327 3 14 2 262 1 192 4 194 3 
75 1 243 1 68 1 222 1 103 1 319 1 113 1 353 2 81 1 143 1 228 1 7 1 327 1 337 1 192 2 203 1 
75 1 103 1 113 1 353 3 81 2 270 1 143 2 13 1 327 2 14 1 337 1 192 3 194 1 
279 1 75 1 103 1 60 1 233 1 81 2 5 2 13 3 327 5 14 4 67 1 262 1 242 1 68 1 18 1 113 1 183 1 353 9 270 1 143 2 228 1 337 1 192 9 194 7 
279 1 75 1 103 1 60 1 233 1 81 2 5 2 13 3 327 5 14 4 67 1 262 1 242 1 68 1 18 1 113 1 183 1 353 9 270 1 143 2 228 1 337 1 192 9 194 7 
342 1 277 1 40 1 
94 1 70 2 40 1 
41 2 284 2 338 2 164 2 224 1 219 2 135 1 2 2 
27 1 338 2 123 1 317 1 340 1 32 1 61 1 2 3 298 1 284 2 35 1 325 2 219 2 260 1 85 2 329 2 237 1 176 1 41 3 349 2 224 1 160 1 47 2 135 1 136 1 161 1 333 1 50 1 208 1 117 1 164 2 356 1 51 1 357 1 358 1 212 1 148 1 
41 1 284 1 338 1 164 1 156 1 346 1 219 1 135 1 2 1 20 1 
41 1 30 1 105 1 2 1 281 1 187 1 284 1 346 1 25 1 167 1 16 1 277 1 40 1 169 1 
41 1 338 1 30 1 105 1 2 1 281 2 187 1 284 1 164 1 219 1 346 1 25 1 16 2 277 1 40 1 
131 1 69 1 16 1 256 1 281 1 
131 1 24 1 91 1 16 2 277 1 256 1 281 2 40 1 
131 1 16 1 281 1 
41 1 338 1 135 1 20 1 2 1 256 1 281 1 284 1 164 1 156 1 346 1 219 1 16 1 278 1 
40 1 
131 1 91 1 16 2 277 1 264 1 256 1 281 2 40 1 
339 1 0 1 131 2 91 1 225 1 207 2 162 1 141 2 256 2 281 5 299 1 218 1 11 1 121 2 16 5 277 1 230 1 40 1 241 1 
342 1 224 1 
41 2 338 1 224 2 2 2 284 2 164 1 97 1 219 1 238 1 
227 1 76 1 210 1 
41 1 27 1 349 1 224 1 61 1 291 1 47 1 2 1 161 1 50 1 298 1 260 1 329 1 358 1 148 1 212 1 
41 2 27 1 338 1 349 1 61 1 90 1 47 1 2 2 161 1 139 1 50 1 227 1 298 1 284 1 164 1 260 1 329 1 358 1 212 1 148 1 
41 3 284 3 338 3 164 3 224 1 219 1 2 3 139 1 
41 1 284 1 338 1 164 1 156 1 346 1 2 1 
41 1 284 1 338 1 164 1 97 1 346 1 219 1 2 1 238 1 
27 1 338 3 123 1 30 1 340 1 32 1 61 1 105 1 2 4 281 1 298 1 284 3 35 1 325 1 260 1 219 2 346 1 85 2 16 1 329 1 176 1 41 4 349 1 224 1 160 1 159 1 90 1 47 1 135 1 136 1 268 1 161 1 139 1 50 1 187 1 164 3 356 1 51 1 97 1 25 1 357 1 358 1 212 1 148 1 
41 2 284 2 338 1 164 1 305 1 224 1 167 1 2 2 139 1 
41 3 338 3 196 1 30 1 90 1 159 1 105 1 2 3 139 2 281 1 187 1 284 3 164 3 97 1 219 1 346 1 25 1 16 1 40 1 
227 1 41 2 284 2 338 2 164 2 76 1 97 1 219 1 2 2 139 1 
41 1 27 1 349 1 224 1 47 1 61 1 2 1 161 1 50 1 298 1 260 1 329 1 358 1 148 1 212 1 
41 1 27 1 349 1 224 1 47 1 61 1 48 1 2 1 50 1 298 1 275 1 260 1 329 1 358 1 212 1 
123 1 76 2 316 1 32 1 34 1 325 4 85 2 129 1 86 1 132 1 247 1 45 1 160 1 310 1 136 1 333 2 227 2 356 1 51 1 210 2 249 1 120 1 357 2 149 1 
41 1 284 1 338 1 164 1 246 1 346 1 105 1 2 1 
41 5 338 4 305 1 224 1 90 1 2 5 139 2 284 5 155 1 164 4 97 1 219 1 167 1 295 1 
41 2 284 2 338 2 164 2 246 1 156 1 346 1 2 2 
343 1 301 1 
343 1 301 1 
211 1 158 1 
211 1 158 1 
211 1 158 1 
343 1 301 1 251 1 
343 1 301 1 251 1 
343 1 179 1 301 1 
343 2 336 1 9 1 301 2 211 1 158 1 
343 1 301 1 251 1 
343 1 214 1 301 1 
343 1 214 1 301 1 
343 1 214 1 301 1 
83 1 343 1 274 1 301 1 153 1 168 1 
83 1 343 1 28 1 274 1 301 1 153 1 16 1 168 1 281 1 
228 1 68 1 60 1 
228 1 243 1 68 1 
243 1 68 3 60 2 341 1 53 1 202 1 
243 1 68 2 60 1 341 1 202 1 184 1 
243 1 68 2 60 1 341 2 202 1 
339 2 0 3 170 1 217 1 256 4 281 5 236 1 345 2 10 1 12 1 218 1 109 1 16 5 347 2 40 2 130 2 131 1 132 1 45 1 70 3 91 1 310 1 207 1 141 1 94 1 293 1 120 1 119 1 121 1 294 1 277 1 74 1 
339 6 0 8 152 1 256 7 281 9 236 3 65 1 10 2 11 1 218 1 109 1 16 9 37 1 347 6 40 5 130 6 131 6 132 3 290 5 45 3 69 5 70 9 91 1 310 3 207 2 140 1 141 2 188 1 94 3 293 4 120 3 119 2 121 2 146 1 277 1 
339 2 0 3 256 2 281 3 236 1 10 1 345 1 11 1 16 3 347 2 40 3 130 2 132 1 45 1 70 4 310 1 207 1 141 1 94 2 293 1 119 1 120 1 121 1 277 1 294 1 74 1 
339 4 0 5 152 1 256 3 281 4 236 2 10 1 345 2 11 1 16 4 347 4 40 4 130 4 132 2 45 2 70 7 310 2 207 1 140 1 141 1 188 1 94 3 293 2 119 1 120 2 121 1 277 1 294 1 74 1 
342 1 215 1 61 1 
22 1 61 1 
77 1 
298 1 61 1 
298 1 128 1 215 2 61 3 321 1 212 1 
298 1 61 1 212 1 
57 1 61 1 
132 1 44 1 316 2 29 1 45 1 138 2 333 4 273 1 249 3 325 7 326 1 144 1 261 1 357 3 250 1 287 1 359 1 
132 1 44 1 316 2 29 1 45 1 138 2 333 4 273 1 249 3 325 7 326 1 144 1 261 1 357 3 250 1 287 1 359 1 
132 1 44 1 316 2 29 1 59 1 45 1 138 2 333 4 273 1 249 3 325 7 326 1 144 1 261 1 357 3 250 1 287 1 359 1 
123 1 29 2 316 5 32 1 33 1 62 1 236 3 36 1 172 4 325 31 326 2 261 1 85 2 175 3 287 1 181 1 44 1 205 1 132 4 223 1 45 4 136 1 310 3 138 3 333 16 273 5 120 3 249 10 356 1 52 1 144 2 357 15 250 2 359 1 
213 1 123 2 316 3 29 1 32 2 325 9 326 1 85 4 287 1 132 1 223 1 44 1 45 1 267 1 136 2 138 2 333 5 273 1 356 2 249 4 144 1 357 4 250 1 359 1 
55 1 75 1 315 1 102 1 60 1 103 1 81 1 283 1 302 1 200 1 260 1 327 1 329 1 110 1 243 1 349 1 330 1 68 2 47 1 113 1 353 2 185 1 50 1 228 1 143 1 190 1 337 1 53 1 192 2 194 1 
55 1 75 1 315 1 102 1 60 1 81 1 283 1 302 1 200 1 260 1 327 1 329 1 263 1 110 1 87 1 243 1 349 1 330 1 68 2 47 1 113 1 353 3 50 1 228 1 143 1 276 1 53 1 337 1 192 3 194 2 
55 1 75 1 102 1 60 1 283 1 302 1 200 1 260 1 327 1 329 1 110 1 87 1 243 1 349 1 68 2 47 1 113 1 353 2 50 1 228 1 276 1 337 1 53 1 192 2 194 2 
27 1 55 2 102 2 349 1 104 1 61 1 47 1 226 1 353 1 81 1 269 1 50 1 298 1 283 2 142 1 143 1 260 1 221 1 337 2 329 1 263 1 192 1 100 1 
55 1 315 1 102 1 60 1 103 1 81 1 283 1 302 1 200 1 260 1 329 1 110 1 243 1 349 1 330 1 68 2 47 1 353 1 185 1 50 1 228 1 143 1 276 1 337 1 53 1 192 1 
257 1 
195 2 0 2 232 2 104 1 61 1 318 1 105 1 63 1 2 1 106 1 281 5 323 1 284 1 64 1 10 1 66 1 16 5 15 1 329 2 70 2 207 1 122 2 121 1 25 1 167 1 169 1 27 2 339 2 78 2 254 1 30 1 125 1 298 1 258 2 218 1 260 1 346 1 40 2 265 1 177 1 41 1 178 1 131 6 349 2 43 2 266 2 47 2 91 3 141 1 50 1 187 1 94 2 142 1 277 1 99 4 
41 1 178 1 131 2 30 1 266 1 91 1 105 1 318 1 2 1 281 3 187 1 284 1 64 1 346 1 66 1 25 1 16 3 167 1 99 2 264 1 265 1 169 1 
195 1 41 1 178 1 131 1 30 1 91 1 105 1 318 1 2 1 281 3 187 1 284 1 64 1 346 1 66 1 25 1 16 3 167 1 277 1 99 3 264 1 40 1 265 1 169 1 
195 1 30 1 318 1 105 1 2 1 281 3 284 1 64 1 346 1 66 1 16 3 264 1 265 1 40 1 41 1 178 1 131 2 43 1 266 1 91 1 187 1 25 1 167 1 277 1 99 3 169 1 
195 4 339 1 252 1 0 1 78 2 254 1 30 1 232 2 318 1 105 1 216 1 2 1 322 1 281 5 282 1 258 2 284 1 64 1 218 1 346 1 66 1 15 1 16 5 264 1 40 5 265 1 41 1 178 1 131 7 245 1 43 4 266 4 91 3 207 1 141 1 187 1 94 2 122 2 121 1 25 1 167 1 277 5 99 6 169 1 
195 2 0 1 232 2 105 1 318 1 2 1 281 4 284 1 64 1 66 1 15 1 16 4 70 2 207 1 121 1 122 2 25 1 167 1 169 1 339 1 254 1 78 2 30 1 258 2 346 1 218 1 265 1 40 2 41 1 177 1 178 1 131 4 43 2 266 2 91 2 141 1 187 1 94 2 277 1 99 4 
195 2 339 1 252 1 0 1 78 2 254 1 30 1 232 2 318 1 105 1 216 1 2 1 322 1 281 4 258 2 284 1 64 1 346 1 218 1 66 1 15 1 16 4 40 1 265 1 41 1 178 1 131 4 43 2 266 2 91 2 207 1 141 1 187 1 94 2 122 2 121 1 25 1 167 1 277 1 99 4 169 1 
195 2 339 1 252 1 0 1 78 2 254 1 30 1 232 2 318 1 105 1 216 1 2 1 322 1 281 4 258 2 284 1 64 1 346 1 218 1 66 1 15 1 16 4 40 1 265 1 41 1 178 1 131 4 43 2 266 2 91 2 207 1 141 1 187 1 94 2 122 2 121 1 25 1 167 1 277 1 99 4 169 1 
195 2 339 1 0 1 78 2 254 1 30 1 318 1 105 1 4 2 216 1 2 1 281 4 284 1 64 1 346 1 218 1 66 1 16 4 40 1 265 1 41 1 178 1 131 4 289 2 43 2 266 2 91 2 70 2 49 1 207 1 141 1 187 1 311 1 122 2 121 1 25 1 229 1 167 1 277 1 99 4 169 1 
195 3 339 1 252 1 0 1 78 2 254 1 30 1 232 2 318 1 105 1 216 1 2 1 322 1 281 4 258 2 284 1 64 1 218 1 346 1 66 1 15 1 16 4 40 1 265 1 41 1 178 1 131 5 245 1 43 3 266 3 91 2 207 1 141 1 187 1 94 2 122 2 121 1 25 1 167 1 277 1 99 5 169 1 
195 3 339 1 252 1 0 1 78 2 254 1 30 1 232 2 318 1 105 1 216 1 2 1 322 1 281 4 258 2 284 1 64 1 218 1 346 1 66 1 15 1 16 4 40 1 265 1 41 1 178 1 131 5 245 1 43 3 266 3 91 2 207 1 141 1 187 1 94 2 122 2 121 1 25 1 167 1 277 1 99 5 169 1 
195 2 339 1 0 1 78 2 254 1 30 1 318 1 105 1 4 2 2 1 281 4 284 1 64 1 218 1 346 1 66 1 16 4 40 1 265 1 177 1 41 1 178 1 131 4 289 2 43 2 266 2 91 2 70 2 49 1 207 1 141 1 187 1 122 2 121 1 25 1 167 1 277 1 99 4 169 1 
123 1 76 1 132 1 44 1 316 2 29 1 224 2 45 1 160 1 32 1 136 1 138 1 333 3 227 1 342 1 210 1 325 6 249 2 51 1 356 1 144 1 357 3 85 2 287 1 149 1 359 1 
123 2 76 4 316 1 33 1 32 2 124 1 62 1 35 1 236 2 6 1 172 3 325 14 85 4 175 3 237 1 132 1 224 1 307 1 45 2 160 2 136 2 310 1 333 8 227 11 273 1 118 1 248 1 249 2 356 2 51 1 210 11 120 2 357 6 
27 1 338 1 123 1 76 1 61 1 32 1 124 1 2 2 298 1 284 1 35 1 325 2 260 1 85 2 329 1 174 1 237 1 41 2 349 1 331 1 224 1 47 1 291 1 160 1 90 1 136 1 161 1 139 1 93 1 333 1 50 1 164 1 356 1 51 1 357 1 358 1 212 1 148 1 
56 1 316 4 61 2 2 3 284 1 236 2 325 20 329 3 287 1 237 1 160 3 161 2 333 10 164 1 209 2 210 7 120 2 249 8 73 2 212 2 27 1 338 1 123 3 76 7 29 1 340 2 32 3 124 1 298 2 35 1 260 2 85 6 348 1 41 3 349 3 44 1 132 3 224 2 309 1 45 3 47 3 90 1 133 2 136 3 310 2 138 1 139 1 50 2 227 7 95 2 273 4 51 3 356 3 276 1 144 1 357 10 358 2 148 2 359 1 
27 2 338 1 123 2 31 1 1 1 104 1 61 3 32 2 2 1 298 2 284 1 35 1 325 2 84 1 260 2 85 4 329 8 237 1 41 1 349 7 308 1 182 1 47 8 160 2 136 2 139 1 333 1 50 2 163 1 142 1 164 1 117 2 356 2 51 2 276 1 190 1 357 1 149 1 101 1 
338 1 123 1 76 1 316 1 32 1 124 1 2 1 284 1 236 1 325 3 219 1 85 2 41 1 132 1 45 1 160 1 136 1 310 1 333 1 227 1 164 1 249 1 210 1 97 1 356 1 51 1 120 1 145 1 357 2 
123 1 76 1 247 1 45 1 160 1 32 1 136 1 333 2 227 1 273 1 249 1 210 1 325 2 51 1 356 1 120 1 85 2 149 1 
123 1 76 1 316 1 132 1 160 1 32 1 136 1 310 1 34 1 227 1 249 1 210 1 325 2 51 1 356 1 85 2 357 2 149 1 
123 1 76 2 316 1 32 1 236 1 325 4 85 2 132 1 45 1 160 1 136 1 310 1 333 2 227 2 273 1 120 1 356 1 51 1 210 2 249 2 357 2 149 1 
123 1 76 1 247 1 31 1 45 1 160 1 32 1 136 1 333 2 227 1 273 1 249 1 210 1 325 2 51 1 356 1 120 1 85 2 
123 1 76 1 316 1 132 1 31 1 160 1 32 1 136 1 310 1 34 1 227 1 249 1 210 1 325 2 51 1 356 1 85 2 357 2 
123 1 76 2 316 1 31 1 32 1 236 1 325 4 85 2 132 1 45 1 160 1 136 1 310 1 333 2 227 2 273 1 120 1 356 1 51 1 210 2 249 2 357 2 
123 1 76 2 316 1 132 1 45 1 160 1 32 1 310 1 136 1 333 2 227 2 273 1 236 1 249 2 210 2 51 1 356 1 120 1 325 4 357 2 85 2 
27 1 123 1 340 1 61 1 32 1 2 1 298 1 35 1 325 2 260 1 85 2 329 1 237 1 41 1 349 1 224 1 47 1 160 1 136 1 161 1 333 1 50 1 51 1 356 1 357 1 358 1 212 1 148 1 
27 1 123 1 61 1 32 1 2 1 298 1 35 1 325 2 260 1 85 2 329 1 237 1 41 1 42 1 349 1 224 1 47 1 160 1 48 1 136 1 333 1 50 1 51 1 356 1 275 1 357 1 358 1 212 1 
123 1 76 2 316 1 32 1 124 1 236 1 325 4 85 2 132 1 45 1 160 1 136 1 310 1 333 2 227 2 273 1 120 1 356 1 51 1 210 2 249 2 357 2 
123 1 76 2 316 1 340 1 61 1 32 1 2 1 298 1 236 1 325 4 260 1 85 2 329 1 41 1 349 1 132 1 45 1 47 1 160 1 310 1 136 1 161 1 333 2 50 1 227 2 273 1 249 2 210 2 120 1 51 1 356 1 190 1 357 2 73 1 358 1 212 1 148 1 
338 1 123 1 76 1 32 1 124 1 2 1 284 1 236 1 325 3 219 1 85 2 41 1 132 1 45 1 160 1 310 1 136 1 333 2 227 1 115 1 273 1 164 1 249 1 97 1 356 1 51 1 120 1 210 1 357 1 
213 1 58 1 123 3 253 1 29 1 316 4 33 3 32 3 62 1 297 1 154 1 127 1 235 1 236 4 172 4 325 41 85 6 175 3 38 1 287 1 39 1 303 1 244 2 350 1 44 1 223 1 132 5 332 1 45 5 137 1 136 3 310 4 138 1 333 20 313 4 273 4 356 3 72 1 120 4 249 8 144 1 357 21 359 1 
213 1 58 1 123 4 253 1 29 1 316 4 33 3 32 4 62 1 297 1 154 1 127 1 235 1 236 4 172 4 325 38 85 8 175 3 38 1 287 1 39 1 303 1 244 2 350 1 44 1 223 2 132 4 332 1 45 5 137 1 136 4 310 3 138 1 333 20 313 4 273 3 356 4 72 1 120 4 249 7 144 1 357 18 359 1 
213 1 58 1 123 2 253 1 29 1 316 7 33 2 32 2 62 2 127 1 235 1 236 7 6 2 172 4 325 52 85 4 175 4 38 1 287 1 39 1 303 1 244 1 350 1 44 1 223 1 132 8 332 1 45 8 137 1 136 2 310 7 138 1 333 27 313 4 273 7 356 2 72 1 120 7 249 14 144 1 357 25 359 1 
213 1 150 1 123 2 316 3 33 1 32 2 62 1 297 1 235 1 236 3 172 2 325 19 85 4 175 1 38 1 39 1 244 1 350 2 132 3 45 3 136 2 310 3 333 9 313 2 273 3 356 2 72 1 120 3 249 6 357 10 
213 1 123 3 58 1 253 1 316 2 32 3 33 2 127 1 235 2 236 3 325 26 172 2 85 6 175 2 38 1 39 1 303 1 244 2 350 1 223 2 132 2 332 1 45 3 137 1 136 3 310 2 333 14 313 4 273 2 249 4 356 3 72 1 120 3 357 12 
123 1 1 1 61 1 32 1 124 1 2 2 298 1 284 2 35 1 325 2 260 1 85 2 329 2 237 1 239 1 41 2 306 1 349 2 308 1 351 1 47 2 160 1 136 1 333 1 355 1 50 1 117 2 356 1 51 1 189 1 357 1 
243 1 315 1 68 2 349 2 102 1 60 1 47 2 79 1 50 1 335 1 228 1 276 1 260 1 302 1 200 1 190 1 53 1 329 2 240 1 
243 1 315 1 68 2 349 1 102 1 60 1 47 1 320 1 79 1 50 1 228 1 276 1 302 1 200 1 260 1 53 1 329 1 
27 1 349 1 102 1 104 1 61 1 47 1 226 1 50 1 114 1 298 1 335 1 142 1 260 1 329 1 
243 1 315 1 68 2 349 1 102 1 60 1 47 1 79 1 50 1 335 1 228 1 276 1 260 1 302 1 200 1 53 1 329 1 240 1 
191 1 
339 1 342 1 0 1 277 1 162 1 40 1 241 1 
339 1 131 1 0 1 232 1 91 1 70 1 207 1 141 1 281 1 258 1 94 1 218 1 121 1 16 1 15 1 277 1 40 2 
54 2 57 2 0 9 151 1 61 10 63 1 197 1 198 2 281 5 236 2 8 2 10 2 16 5 329 3 241 1 204 1 70 12 207 4 162 1 334 2 22 3 120 2 121 4 166 1 212 3 27 1 339 8 30 2 215 2 82 2 298 3 259 1 128 1 260 4 218 4 347 6 40 8 130 6 131 5 349 3 132 2 45 2 47 3 133 2 91 3 310 2 141 4 352 2 50 3 94 6 190 1 277 2 231 2 193 2 
339 5 0 8 58 1 33 1 63 1 281 1 127 1 107 1 236 2 172 1 10 1 218 2 16 1 175 1 347 5 40 5 303 1 130 5 131 1 132 2 332 1 45 2 91 1 70 6 137 1 310 2 207 2 141 2 334 1 186 1 94 3 120 2 121 2 277 2 193 2 
339 2 338 1 0 2 29 1 2 1 322 1 281 1 284 1 156 1 346 1 218 1 219 1 16 1 328 1 41 1 44 1 132 1 45 2 135 1 20 1 207 1 141 1 334 1 164 1 121 1 144 1 193 2 278 1 
339 1 0 1 207 1 162 1 141 1 218 1 121 1 277 1 241 1 40 1 
339 5 130 5 0 5 132 2 45 2 133 1 70 10 310 2 334 1 94 5 236 2 120 2 347 5 193 2 40 5 
131 1 91 1 16 1 277 1 281 1 40 1 
27 2 339 2 0 2 104 1 61 1 63 2 255 1 106 1 323 1 281 3 298 1 259 2 10 2 11 1 260 1 218 1 173 1 16 3 329 4 131 4 349 4 204 1 47 4 91 2 207 2 141 2 50 1 142 1 121 2 
27 1 338 2 123 1 340 1 32 1 61 1 2 3 298 1 284 2 35 1 325 1 219 2 260 1 85 2 329 1 176 1 41 3 349 1 224 1 47 1 160 1 135 1 136 1 161 1 50 1 164 2 51 1 356 1 357 1 358 1 148 1 212 1 
130 2 339 2 0 1 70 4 63 1 207 1 138 1 141 1 94 2 10 1 218 1 121 1 277 2 347 2 40 4 
83 1 274 1 
83 1 274 1 
83 1 274 1 
83 1 274 1 
83 1 274 1 
83 1 274 1 
83 1 274 1 
83 1 274 1 
343 1 301 1 
213 1 58 1 123 1 29 1 316 2 33 1 32 1 325 8 172 1 85 2 175 1 287 1 132 1 44 1 45 1 136 1 138 1 333 4 356 1 249 2 144 1 357 4 359 1 
213 1 58 1 123 2 316 2 29 1 33 1 32 2 62 1 236 1 324 1 325 11 172 2 85 4 175 1 287 1 132 1 44 1 45 2 136 2 138 1 333 6 273 1 356 2 120 1 249 3 144 1 357 5 359 1 
213 1 58 1 123 3 29 1 316 3 33 1 32 3 127 1 236 2 324 1 325 19 172 1 85 6 175 1 287 1 303 1 44 1 132 3 223 1 332 1 45 3 137 1 136 3 310 2 138 1 333 9 273 1 356 3 120 2 249 4 144 1 357 10 359 1 
213 1 58 1 123 3 29 1 316 3 33 1 32 3 127 1 236 2 324 1 325 17 172 1 85 6 175 1 287 1 303 1 44 1 223 1 132 2 332 1 45 3 136 3 310 1 137 1 138 1 333 10 273 2 356 3 120 2 249 5 144 1 357 7 359 1 
213 1 58 1 123 1 29 1 316 2 33 1 32 1 325 8 172 1 85 2 175 1 287 1 132 1 44 1 45 1 136 1 138 1 333 4 356 1 249 2 144 1 357 4 359 1 
213 1 58 1 123 1 316 1 33 1 32 1 127 1 236 2 325 12 172 1 85 2 175 1 303 1 132 2 332 1 45 2 136 1 310 2 137 1 333 6 273 1 356 1 120 2 249 2 357 6 
213 1 58 1 123 4 29 1 316 3 33 1 32 4 127 1 236 2 324 1 325 18 172 1 85 8 175 1 287 1 303 1 44 1 132 2 223 2 332 1 45 3 137 1 136 4 310 1 138 1 333 10 273 2 356 4 120 2 249 5 144 1 357 8 359 1 
213 1 58 1 123 4 316 3 33 1 32 4 297 1 127 1 236 3 325 16 172 1 85 8 175 1 303 1 132 2 223 2 332 1 45 3 137 1 136 4 310 2 333 9 273 3 356 4 120 3 249 6 357 7 
132 1 29 3 316 3 44 1 45 1 333 3 273 3 325 7 249 6 144 3 357 4 287 1 359 2 
213 1 58 1 123 4 29 1 316 3 33 1 32 4 297 1 127 1 236 2 325 18 172 1 85 8 175 1 287 1 303 1 44 1 132 2 223 2 332 1 45 3 137 1 136 4 310 1 138 1 333 10 273 1 356 4 120 2 249 4 144 1 357 8 359 1 
123 2 132 1 44 1 316 2 223 1 29 1 45 1 32 2 136 2 138 1 333 4 273 1 325 8 249 3 356 2 144 1 357 4 85 4 287 1 359 1 
29 1 316 2 44 1 132 1 45 1 138 1 333 3 342 1 249 2 325 6 144 1 357 3 287 1 359 1 
123 1 316 1 132 1 45 1 32 1 310 1 136 1 333 2 236 1 273 1 324 1 249 2 356 1 120 1 325 4 357 2 85 2 
316 1 132 1 45 1 33 1 62 1 310 1 333 3 236 1 273 1 172 2 325 7 120 1 249 2 357 4 175 1 
123 2 29 2 316 5 32 2 62 1 236 2 6 1 325 23 172 2 85 4 175 2 287 1 44 1 132 3 223 2 307 1 45 3 310 2 136 2 138 1 333 11 354 1 273 4 249 9 120 2 356 2 144 2 357 12 359 1 
325 1 172 1 357 1 
325 1 175 1 333 1 
123 1 132 1 316 2 45 1 32 1 133 1 136 1 310 1 333 3 236 1 273 1 324 1 356 1 325 6 120 1 249 3 85 2 357 3 
213 1 58 1 123 1 316 1 33 1 32 1 127 1 236 2 325 12 172 1 85 2 175 1 303 1 132 2 332 1 45 2 136 1 310 2 137 1 333 6 273 1 356 1 120 2 249 2 357 6 
44 1 132 1 29 1 316 1 45 1 333 3 273 1 325 6 249 2 144 1 357 3 
123 1 316 1 29 1 223 1 32 1 136 1 333 1 354 1 273 1 249 2 325 3 356 1 144 1 357 2 85 2 287 1 359 1 
213 1 123 1 29 2 316 3 44 1 132 2 45 2 32 1 136 1 333 5 273 2 356 1 249 5 325 10 144 2 85 2 357 5 328 1 
213 1 123 1 45 1 32 1 136 1 333 2 273 1 356 1 120 1 325 2 249 1 85 2 
213 1 123 1 316 1 132 1 45 1 32 1 310 1 136 1 333 2 236 1 273 1 249 2 356 1 120 1 325 4 357 2 85 2 
213 1 123 3 223 1 29 1 316 1 32 3 136 3 297 1 333 1 354 1 273 1 325 3 356 3 249 2 144 1 357 2 85 6 
213 1 123 5 29 3 316 7 33 1 32 5 62 1 297 1 36 1 236 3 324 1 172 4 325 34 85 10 175 3 287 1 181 1 44 2 223 2 132 5 45 5 136 5 310 3 138 1 333 16 354 1 273 5 356 5 120 3 249 12 52 1 144 3 357 18 359 1 
41 1 126 1 284 1 305 1 224 1 2 1 167 1 
41 1 305 1 224 1 89 1 46 1 3 1 2 1 126 1 312 1 284 1 220 1 167 1 
298 1 27 1 142 1 342 1 349 1 260 1 104 1 61 1 47 1 329 1 50 1 
41 2 27 1 338 1 349 1 224 1 61 1 47 1 2 2 139 1 161 1 50 1 298 1 284 1 164 1 260 1 329 1 358 1 212 1 
41 2 57 1 338 1 349 1 224 1 61 3 47 1 105 1 2 2 139 1 161 1 352 1 187 1 50 1 298 2 284 2 164 2 259 1 346 1 260 1 329 1 358 1 212 2 
338 1 57 1 61 3 105 1 2 2 298 2 284 2 259 1 260 1 346 1 329 2 41 2 349 2 224 1 47 2 48 1 139 1 352 1 50 1 187 1 96 1 164 2 358 1 212 2 
27 1 57 1 17 1 131 1 349 3 30 1 215 1 47 3 61 4 134 1 352 1 281 2 50 1 298 1 96 1 22 1 259 1 260 1 16 2 277 1 329 3 212 1 40 1 
27 1 57 1 131 1 349 3 30 1 215 1 47 3 61 4 352 1 281 2 82 1 50 1 298 1 96 1 22 1 259 1 260 1 16 2 277 1 329 3 212 1 40 1 
349 1 260 1 47 1 329 1 50 1 101 1 
27 2 349 6 308 1 182 1 47 7 61 3 271 1 292 1 50 2 298 2 163 1 117 1 128 1 276 1 84 1 165 1 260 3 190 1 329 7 212 1 101 1 
338 1 123 2 76 1 316 2 29 1 340 1 61 1 32 2 124 1 2 2 298 1 284 1 325 6 260 1 85 4 329 1 287 1 41 2 349 1 132 1 44 1 224 2 45 1 160 2 47 1 136 2 138 1 139 1 161 1 333 3 50 1 227 1 95 1 164 1 210 1 249 2 356 2 51 2 189 1 190 1 144 1 357 3 73 1 358 1 212 1 148 1 359 1 
27 1 339 1 0 1 30 1 215 1 61 2 198 1 256 1 281 3 82 1 8 1 218 2 16 3 329 1 40 1 241 1 131 2 349 1 204 1 47 1 91 1 207 2 162 1 141 2 22 1 121 2 277 1 231 1 
349 2 215 1 47 2 61 2 50 1 298 1 128 1 166 1 260 2 190 1 329 2 212 1 101 1 
27 1 349 4 104 1 47 4 61 1 50 1 298 1 96 1 142 1 260 1 201 1 190 1 329 4 
349 2 88 1 309 1 47 2 61 1 271 1 50 1 298 1 259 1 165 1 260 2 329 2 26 1 212 1 
27 1 228 1 243 1 68 1 349 1 260 1 200 1 47 1 329 1 50 1 
349 2 308 1 47 2 61 1 355 1 50 1 298 1 276 1 260 1 190 1 329 2 
27 1 349 4 308 1 104 1 47 5 61 3 182 1 50 2 298 2 142 1 259 1 84 1 260 2 201 1 190 1 329 5 
27 1 349 4 308 1 104 1 47 5 61 3 182 1 50 2 298 2 142 1 259 1 260 2 201 1 190 1 329 5 147 1 
41 2 27 1 338 1 349 1 224 1 61 1 47 1 48 1 2 2 139 1 50 1 298 1 284 1 164 1 260 1 329 1 358 1 212 1 
349 1 47 1 61 1 271 1 292 1 50 1 298 1 259 1 128 1 165 1 260 2 329 1 212 1 
41 1 306 1 206 1 351 1 2 1 92 1 284 1 300 1 239 1 
304 1 116 1 206 1 
344 1 224 1 300 1 206 1 92 1 
304 1 30 1 224 1 206 1 159 1 105 1 92 2 256 1 71 1 281 2 187 1 116 1 344 2 300 2 346 1 25 1 16 2 277 1 40 1 
75 1 342 1 327 1 113 1 
75 1 143 1 327 1 113 1 353 1 192 1 81 1 
55 1 337 1 192 1 
75 1 143 1 108 1 7 2 103 1 111 1 19 1 327 1 113 1 353 3 192 3 81 1 
75 1 143 1 327 1 113 1 353 2 192 2 81 1 194 1 5 1 
279 1 68 1 103 1 60 1 353 1 81 1 143 1 228 1 327 1 14 1 192 1 
75 1 143 1 103 1 327 1 353 1 192 1 81 1 
75 2 143 1 103 1 113 1 353 1 192 1 81 1 
75 1 103 1 112 1 353 2 199 1 81 2 143 2 327 1 192 2 288 1 
75 1 242 1 103 1 113 1 183 1 353 3 81 1 143 1 13 1 327 2 14 1 192 3 194 2 
75 1 243 1 68 2 103 1 60 1 113 1 234 1 353 2 81 1 143 1 228 1 327 1 53 1 192 2 194 1 
75 1 103 1 113 1 353 4 81 2 5 1 143 2 13 1 327 2 14 1 262 1 192 4 194 2 
75 1 143 1 103 1 327 1 113 1 353 1 192 1 81 1 
75 2 111 1 19 1 113 2 353 4 81 1 143 1 7 1 286 1 13 1 327 3 14 1 192 4 194 2 
75 1 103 1 296 1 233 1 113 1 353 2 81 1 143 1 23 1 327 1 192 2 194 1 
75 1 103 1 111 1 19 2 113 1 353 3 280 1 81 1 143 1 7 2 327 1 192 3 
272 2 180 1 327 2 157 1 
143 1 103 1 98 1 353 1 192 1 81 1 
75 1 242 1 143 1 103 1 327 1 113 1 353 2 192 2 81 1 194 1 
80 1 
75 1 143 1 103 1 327 1 113 1 353 1 192 1 81 1 
242 1 75 1 143 1 7 1 103 1 327 1 113 1 353 3 192 3 81 1 194 1 
286 1 13 1 327 1 14 1 
75 1 327 1 

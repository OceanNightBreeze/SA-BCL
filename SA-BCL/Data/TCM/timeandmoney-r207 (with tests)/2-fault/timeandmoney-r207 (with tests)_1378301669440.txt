#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (137,289) (194,249) (194,249) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 10 246 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (137,289) (137,289) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 10 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (137,289) (194,249) (194,249) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (137,289) (194,249) (194,249) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (137,289) (194,249) (194,249) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 10 246 166 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 58 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 1 108 4 199 1 112 6 262 1 201 2 65 2 67 1 175 2 360 5 179 1 27 1 30 1 48 2 209 1 182 1 127 9 152 1 210 1 272 2 153 3 76 1 78 2 232 1 36 9 322 2 279 1 327 1 
106 1 108 4 199 1 112 6 262 1 201 2 65 2 67 1 175 2 360 5 179 1 27 1 30 1 48 2 209 1 182 1 127 9 152 1 210 1 272 2 153 3 76 1 78 2 232 1 36 9 322 2 279 1 327 1 
106 1 108 5 199 1 112 7 262 1 201 2 65 2 67 1 175 2 360 6 179 1 27 1 30 1 48 2 209 1 182 1 127 10 152 1 210 1 272 2 153 4 76 1 78 2 232 1 36 10 322 2 279 1 327 1 
106 1 108 3 199 1 112 4 262 1 201 2 65 2 67 1 175 2 360 4 179 1 27 1 30 1 48 2 209 1 182 1 127 7 210 1 272 2 153 2 76 1 78 2 232 1 36 7 322 1 279 1 327 1 
30 1 48 1 106 1 108 2 127 4 199 1 112 3 152 1 153 1 272 1 201 1 65 1 67 1 175 1 360 3 232 1 36 4 322 2 
30 1 48 1 96 1 106 1 127 2 199 1 262 1 272 1 143 1 65 1 78 1 175 1 360 1 214 1 27 1 36 2 
30 1 106 1 108 1 127 3 199 1 112 1 272 2 153 1 65 2 78 1 360 2 36 3 327 1 
106 1 108 4 199 1 112 7 113 1 201 1 65 2 67 1 175 1 360 5 287 1 30 1 48 1 182 1 127 9 210 1 152 1 153 3 272 2 78 1 232 1 36 9 322 2 327 1 
106 1 108 4 199 1 112 7 113 1 201 1 65 2 67 1 175 1 360 5 287 1 30 1 48 1 182 1 127 9 210 1 152 1 153 3 272 2 78 1 232 1 36 9 322 2 327 1 
94 1 315 1 192 1 
73 2 195 1 192 1 
243 2 74 2 280 2 184 2 88 2 310 2 99 1 253 1 
257 1 280 2 329 1 2 1 18 2 110 1 22 1 282 1 144 1 66 1 174 1 239 1 88 2 286 2 265 1 146 2 337 1 243 2 9 1 124 1 125 1 184 3 310 3 71 2 99 1 130 1 32 1 74 2 54 1 248 1 251 1 35 1 275 1 56 1 371 1 253 1 325 2 
243 1 74 1 280 1 184 1 364 1 88 1 310 1 292 1 253 1 47 1 
94 1 39 1 184 1 236 1 310 1 187 1 74 1 133 1 118 1 192 1 25 1 252 1 162 1 47 1 
94 1 243 1 280 1 39 1 184 1 236 2 310 1 74 1 133 1 118 1 192 1 88 1 252 2 162 1 47 1 
171 1 109 1 236 1 252 1 324 1 
94 1 109 1 236 2 192 1 252 2 218 1 305 1 324 1 
236 1 252 1 324 1 
243 1 280 1 109 1 184 1 364 1 236 1 310 1 292 1 356 1 74 1 88 1 252 1 253 1 47 1 
192 1 
94 1 328 1 109 1 236 2 192 1 252 2 218 1 324 1 
94 1 183 2 109 2 40 1 236 5 245 2 217 1 355 1 218 1 100 1 4 1 5 1 238 1 116 1 46 1 192 1 104 2 252 5 324 2 
243 1 280 1 329 1 9 1 124 1 181 1 184 2 18 1 310 2 74 1 348 1 66 1 248 1 35 1 275 1 286 1 265 1 337 1 325 1 326 1 
315 1 99 1 
243 1 280 1 184 2 310 2 99 2 74 2 161 1 88 1 68 1 
348 1 370 1 350 1 
329 1 124 1 9 1 184 1 18 1 310 1 99 1 66 1 248 1 35 1 275 1 286 1 265 1 337 1 325 1 351 1 
243 3 74 3 280 3 181 1 184 3 88 1 310 3 99 1 
243 1 74 1 280 1 184 1 364 1 310 1 47 1 
243 1 74 1 280 1 184 1 161 1 88 1 310 1 68 1 47 1 
257 1 280 3 329 1 39 1 2 1 18 1 110 1 236 1 22 1 282 1 66 1 118 1 239 1 88 2 286 1 68 1 265 1 146 2 337 1 47 1 208 1 243 3 9 1 124 1 181 1 184 4 310 4 71 1 99 1 32 1 74 3 133 1 248 1 251 1 35 1 297 1 275 1 56 1 371 1 252 1 253 1 162 1 325 1 326 1 
243 1 187 1 74 2 280 1 181 1 184 2 310 2 99 1 255 1 
243 3 280 3 181 2 39 1 184 3 236 1 310 3 74 3 133 1 118 1 88 1 192 1 68 1 252 1 215 1 47 1 162 1 326 1 208 1 
243 2 74 2 280 2 348 1 181 1 184 2 88 1 310 2 68 1 350 1 
329 1 124 1 9 1 184 1 18 1 310 1 99 1 66 1 248 1 35 1 275 1 286 1 265 1 337 1 325 1 
329 1 225 1 9 1 184 1 18 1 310 1 72 1 99 1 66 1 248 1 275 1 286 1 265 1 337 1 325 1 
257 1 136 1 110 1 301 1 282 1 115 1 239 1 87 1 146 2 97 1 125 2 49 1 227 1 71 4 52 1 348 2 53 1 251 2 370 2 56 1 371 1 135 1 350 2 82 1 
243 1 74 1 280 1 184 1 310 1 111 1 47 1 162 1 
243 4 280 4 181 2 184 5 310 5 99 1 187 1 74 5 145 1 88 1 68 1 321 1 255 1 326 1 
243 2 74 2 280 2 184 2 364 1 111 1 310 2 47 1 
234 1 
234 1 
222 1 352 1 
222 1 352 1 
222 1 352 1 
234 1 
234 1 
234 1 
222 1 352 1 234 2 
234 1 
234 1 
234 1 
234 1 
234 2 194 1 259 1 137 1 98 2 236 2 151 2 294 1 188 2 316 2 86 1 249 1 192 1 252 2 241 2 
234 1 243 1 280 1 98 1 184 1 236 1 310 1 10 1 11 1 246 1 13 1 151 1 294 1 74 1 188 1 316 1 335 1 252 1 241 1 
48 1 175 1 201 1 
48 1 175 1 143 1 
165 1 48 3 0 1 119 1 201 2 143 1 
165 1 48 2 119 1 201 1 344 1 143 1 
165 1 48 2 119 2 201 1 143 1 
195 1 136 1 109 4 236 5 217 2 218 1 43 2 237 1 116 1 283 2 87 1 335 1 8 1 94 1 97 1 183 1 363 1 245 1 227 1 11 1 12 1 100 3 13 1 212 1 73 3 349 1 160 2 104 1 192 2 252 5 164 1 324 1 
195 3 136 3 109 7 236 9 260 1 217 6 218 1 43 6 202 5 238 1 116 1 283 6 171 5 359 1 87 3 94 1 97 3 183 2 309 1 363 3 245 2 227 3 11 4 12 2 100 8 229 1 212 2 247 1 73 9 349 1 192 5 104 2 252 9 320 1 324 6 
195 2 136 1 109 2 236 3 217 2 237 1 43 2 238 1 283 2 87 1 8 1 94 1 97 1 183 1 245 1 363 1 227 1 11 1 12 1 100 3 212 1 73 4 160 1 192 3 104 1 252 3 
195 3 136 2 109 3 236 4 217 4 43 4 237 1 238 1 283 4 359 1 87 2 8 1 94 1 97 2 183 1 309 1 245 1 363 2 227 2 11 2 12 1 100 5 229 1 212 1 73 7 160 2 192 4 104 1 252 4 
315 1 197 1 337 1 
180 1 337 1 
140 1 
9 1 337 1 
242 1 244 1 329 1 9 1 197 2 337 3 
329 1 9 1 337 1 
337 1 121 1 
29 1 97 1 125 4 301 2 227 1 71 7 31 1 304 1 331 1 52 3 157 1 368 1 251 3 318 2 16 1 81 1 323 1 
29 1 97 1 125 4 301 2 227 1 71 7 31 1 304 1 331 1 52 3 157 1 368 1 251 3 318 2 16 1 81 1 323 1 
29 1 97 1 308 1 125 4 301 2 227 1 71 7 31 1 304 1 331 1 52 3 157 1 368 1 251 3 318 2 16 1 81 1 323 1 
29 1 368 2 125 1 318 1 71 1 16 1 14 1 
257 2 110 2 301 3 304 1 331 1 239 2 146 4 29 1 97 1 123 1 125 5 227 1 71 9 31 1 52 4 55 1 157 1 134 1 368 1 318 2 251 4 56 2 323 1 81 1 
0 1 106 1 18 1 198 1 60 1 199 1 112 1 20 1 332 1 201 1 114 1 143 1 45 1 65 1 170 1 66 1 175 1 360 1 286 1 265 1 338 1 93 1 30 1 48 2 122 1 127 2 272 1 78 1 36 2 325 1 
0 1 18 1 198 1 60 1 199 1 112 2 332 1 281 1 201 1 114 1 143 1 45 1 65 1 170 1 66 1 175 1 360 1 286 1 91 1 265 1 338 1 93 1 30 1 48 2 127 3 311 1 272 1 78 1 36 3 325 1 
0 1 18 1 60 1 199 1 112 2 332 1 114 1 143 1 201 1 45 1 66 1 175 1 360 1 286 1 91 1 265 1 338 1 93 1 30 1 48 2 127 2 311 1 78 1 36 2 325 1 
9 1 18 1 127 1 41 1 270 1 281 1 332 2 272 1 114 2 65 1 66 1 172 1 78 2 240 1 193 1 275 1 286 1 265 1 337 1 36 1 93 2 325 1 207 1 
0 1 106 1 18 1 198 1 60 1 20 1 332 1 201 1 114 1 143 1 45 1 65 1 170 1 66 1 175 1 286 1 91 1 265 1 338 1 93 1 48 2 127 1 272 1 78 1 36 1 325 1 
231 1 
195 2 39 1 236 5 142 1 42 1 204 1 240 1 286 2 337 1 47 1 92 4 94 1 9 1 245 1 343 2 100 2 212 1 104 1 57 1 252 5 162 1 18 2 19 1 217 2 218 3 169 2 23 2 116 1 66 1 24 1 117 1 118 1 264 2 25 1 178 1 265 1 267 2 269 1 183 1 184 1 310 1 129 2 270 1 73 2 187 1 74 1 133 1 77 1 33 1 317 2 192 2 275 2 278 1 324 6 325 2 
328 1 39 1 184 1 236 3 310 1 218 1 42 1 187 1 74 1 133 1 24 1 77 1 118 1 204 1 25 1 178 1 252 3 267 1 47 1 162 1 92 2 324 2 
328 1 39 1 236 3 218 1 42 1 24 1 118 1 204 1 25 1 178 1 47 1 92 3 94 1 184 1 310 1 74 1 187 1 133 1 77 1 317 1 192 1 252 3 162 1 324 1 
328 1 39 1 236 3 218 1 42 1 169 1 24 1 118 1 204 1 25 1 178 1 47 1 267 1 92 3 94 1 184 1 310 1 74 1 187 1 133 1 77 1 317 1 192 1 252 3 162 1 324 2 
328 1 195 2 39 1 236 5 85 1 42 1 204 1 47 1 92 6 94 5 245 1 100 1 343 2 347 1 104 1 252 5 162 1 256 1 19 1 217 1 218 3 169 4 116 1 23 2 24 1 118 1 264 2 25 1 178 1 266 1 267 4 183 1 184 1 310 1 129 2 187 1 74 1 133 1 77 1 317 4 192 5 278 1 233 1 324 7 
195 2 39 1 236 4 19 1 217 1 218 2 42 1 169 2 23 2 116 1 24 1 117 1 118 1 264 2 204 1 25 1 178 1 267 2 47 1 92 4 94 1 183 1 184 1 245 1 310 1 129 2 343 2 100 1 73 2 187 1 74 1 133 1 77 1 317 2 192 2 104 1 252 4 278 1 162 1 324 4 
195 2 39 1 236 4 19 1 217 1 85 1 218 2 42 1 169 2 23 2 116 1 24 1 118 1 264 2 204 1 25 1 178 1 266 1 267 2 47 1 92 4 94 1 183 1 184 1 245 1 310 1 129 2 343 2 100 1 347 1 74 1 187 1 133 1 77 1 317 2 192 1 104 1 252 4 278 1 162 1 324 4 
195 2 39 1 236 4 19 1 217 1 85 1 218 2 42 1 169 2 23 2 116 1 24 1 118 1 264 2 204 1 25 1 178 1 266 1 267 2 47 1 92 4 94 1 183 1 184 1 245 1 310 1 129 2 343 2 100 1 347 1 74 1 187 1 133 1 77 1 317 2 192 1 104 1 252 4 278 1 162 1 324 4 
39 1 236 4 19 1 217 1 218 2 42 1 62 1 169 2 116 1 24 1 118 1 264 2 204 1 7 2 25 1 178 1 267 2 47 1 92 4 94 1 183 1 184 1 245 1 310 1 343 2 100 1 73 2 347 1 74 1 187 1 133 1 77 1 317 2 250 2 192 1 104 1 252 4 277 1 162 1 324 4 105 1 
256 1 195 2 39 1 236 4 19 1 217 1 85 1 218 2 42 1 169 3 23 2 116 1 24 1 118 1 264 2 204 1 25 1 178 1 266 1 47 1 267 3 92 5 94 1 183 1 184 1 245 1 310 1 129 2 343 2 100 1 347 1 74 1 187 1 133 1 77 1 317 3 192 1 104 1 252 4 278 1 162 1 324 5 
256 1 195 2 39 1 236 4 19 1 217 1 85 1 218 2 42 1 169 3 23 2 116 1 24 1 118 1 264 2 204 1 25 1 178 1 266 1 47 1 267 3 92 5 94 1 183 1 184 1 245 1 310 1 129 2 343 2 100 1 347 1 74 1 187 1 133 1 77 1 317 3 192 1 104 1 252 4 278 1 162 1 324 5 
39 1 236 4 42 1 204 1 7 2 47 1 92 4 94 1 245 1 100 1 343 2 250 2 104 1 252 4 162 1 19 1 217 1 218 2 62 1 169 2 116 1 24 1 118 1 117 1 264 2 25 1 178 1 267 2 183 1 184 1 310 1 73 2 74 1 187 1 133 1 77 1 317 2 192 1 324 4 
257 1 97 1 125 3 301 2 110 1 227 1 71 6 99 2 31 1 304 1 52 2 315 1 282 1 348 1 157 1 239 1 318 1 251 3 370 1 135 1 371 1 56 1 146 2 350 1 81 1 323 1 
257 2 330 3 136 2 300 1 301 1 110 2 22 1 331 1 282 1 64 1 239 2 87 1 146 4 206 3 268 1 97 2 147 1 125 8 363 2 71 14 227 1 99 1 149 1 211 1 52 2 54 1 348 11 251 6 370 11 56 2 371 2 350 4 37 1 
280 1 257 1 329 1 18 1 110 1 22 1 282 1 66 1 239 1 286 1 265 1 146 2 337 1 243 1 9 1 124 1 181 1 184 2 125 1 148 1 310 2 71 2 99 1 230 1 154 1 74 1 54 1 248 1 35 1 251 1 275 1 56 1 371 1 350 1 37 1 325 1 351 1 326 1 
280 1 38 2 1 1 329 2 136 2 200 2 331 4 282 3 239 3 87 2 286 3 91 1 146 6 337 2 243 1 97 3 9 2 291 1 99 2 51 2 52 8 54 1 348 7 157 1 248 2 251 10 56 3 350 7 257 3 354 1 18 3 301 4 110 3 304 1 22 1 66 2 265 2 181 1 124 2 184 3 125 10 226 2 363 2 310 3 227 3 71 20 31 1 32 2 74 1 318 1 35 2 275 1 370 7 371 3 37 1 81 1 323 1 325 3 326 1 
280 1 257 2 18 8 110 2 22 1 282 2 66 2 239 2 240 1 286 8 91 1 90 1 265 2 146 4 337 3 69 1 243 1 122 1 307 1 341 1 181 1 9 2 184 1 125 1 310 1 71 2 270 1 130 2 74 1 54 1 34 1 251 1 275 2 135 1 56 2 371 2 79 1 298 1 325 7 
280 1 257 1 136 1 301 1 110 1 303 1 282 1 239 1 87 1 88 1 68 1 146 2 243 1 97 1 184 1 125 1 363 1 310 1 71 3 227 1 52 1 74 1 348 1 251 2 370 1 56 1 371 1 350 1 37 1 
257 1 97 1 136 1 125 2 110 1 71 2 331 1 52 1 282 1 348 1 239 1 370 1 135 1 371 1 56 1 146 2 350 1 82 1 
257 1 301 1 110 1 49 1 71 2 227 1 52 1 282 1 348 1 239 1 87 1 251 2 370 1 135 1 371 1 56 1 146 2 350 1 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 331 1 52 2 282 1 348 2 239 1 251 2 87 1 370 2 135 1 371 1 56 1 146 2 350 2 
257 1 97 1 136 1 125 2 110 1 71 2 331 1 52 1 282 1 348 1 239 1 370 1 371 1 56 1 90 1 146 2 350 1 82 1 
257 1 301 1 110 1 49 1 71 2 227 1 52 1 282 1 348 1 239 1 87 1 251 2 370 1 371 1 56 1 90 1 146 2 350 1 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 331 1 52 2 282 1 348 2 239 1 251 2 87 1 370 2 371 1 56 1 90 1 146 2 350 2 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 331 1 52 2 282 1 348 2 239 1 251 2 87 1 370 2 371 1 56 1 146 2 350 2 
257 1 329 1 18 1 110 1 22 1 282 1 66 1 239 1 286 1 265 1 146 2 337 1 9 1 124 1 125 1 184 1 310 1 71 2 99 1 32 1 54 1 248 1 35 1 251 1 275 1 371 1 56 1 325 1 
257 1 329 1 18 1 110 1 22 1 282 1 66 1 239 1 286 1 265 1 288 1 146 2 337 1 9 1 225 1 125 1 184 1 310 1 71 2 72 1 99 1 54 1 248 1 251 1 275 1 371 1 56 1 325 1 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 331 1 52 2 282 1 348 2 239 1 251 2 87 1 370 2 371 1 56 1 146 2 350 2 37 1 
257 1 38 1 136 1 329 1 18 1 301 1 110 1 331 1 282 1 66 1 239 1 87 1 286 1 265 1 146 2 337 1 97 1 122 1 124 1 9 1 125 2 184 1 363 1 310 1 227 1 71 4 52 2 32 1 348 2 248 1 251 2 35 1 370 2 371 1 56 1 350 2 325 1 
280 1 257 1 136 1 110 1 331 1 282 1 239 1 87 1 88 1 26 1 68 1 146 2 243 1 97 1 184 1 125 2 363 1 310 1 227 1 71 3 52 1 74 1 348 1 251 1 370 1 56 1 371 1 350 1 37 1 
257 3 330 3 136 4 300 3 138 2 235 1 301 4 110 3 304 1 61 1 331 4 357 1 63 1 44 1 64 1 220 1 239 3 87 4 146 6 206 4 97 5 123 1 125 20 363 4 185 1 50 1 186 1 71 41 227 5 31 1 366 1 102 1 101 4 52 8 213 1 157 1 134 1 318 1 296 1 251 21 56 3 81 1 323 1 
257 4 330 3 136 4 300 3 138 2 235 1 301 4 110 4 304 1 61 1 331 3 357 1 63 1 44 1 64 1 220 1 239 4 87 3 146 8 206 4 97 5 123 2 125 20 363 4 185 1 50 1 186 1 71 38 227 4 31 1 366 1 102 1 101 4 52 7 213 1 157 1 134 1 318 1 296 1 251 18 56 4 81 1 323 1 
257 2 330 4 136 7 300 2 138 1 235 1 301 7 110 2 304 1 61 1 331 7 357 1 63 1 44 1 64 2 239 2 87 7 146 4 206 4 97 8 123 1 125 27 363 7 185 1 50 1 186 1 71 52 227 8 31 1 366 1 211 2 101 4 52 14 213 1 157 1 134 1 318 1 296 1 251 25 56 2 81 1 323 1 
257 2 330 1 136 3 196 1 300 1 138 1 235 1 301 3 110 2 331 3 63 1 44 1 64 1 239 2 87 3 146 4 206 2 97 3 125 9 363 3 185 2 71 19 227 3 102 1 101 2 52 6 213 1 134 1 251 10 56 2 
257 3 330 2 136 3 138 2 235 1 300 2 301 2 110 3 331 2 61 1 357 1 63 1 44 1 239 3 87 2 146 6 206 2 97 3 123 2 125 14 363 3 185 1 50 1 227 2 71 26 186 1 366 1 52 4 101 4 213 2 134 1 251 12 296 1 56 3 
234 1 188 1 137 1 289 1 316 1 151 1 241 1 
10 1 
234 1 188 1 224 1 316 1 151 1 241 1 
234 1 194 1 259 1 137 1 98 2 236 1 151 1 294 1 188 1 316 1 86 1 249 1 192 1 252 1 241 1 
234 1 194 1 259 1 137 1 98 2 236 1 151 1 294 1 188 1 316 1 86 1 249 1 192 1 252 1 241 1 
234 1 194 1 259 1 137 1 98 2 236 1 151 1 294 1 188 1 316 1 86 1 249 1 192 1 252 1 241 1 
58 1 
58 1 
228 1 
228 1 
95 1 168 1 
234 1 166 1 259 1 98 1 109 1 236 1 10 1 11 1 246 1 13 1 151 1 188 1 316 1 86 1 335 1 252 1 241 1 
58 1 
228 1 
257 1 18 2 110 1 22 1 282 1 66 1 239 1 286 2 265 1 336 1 146 2 337 1 307 1 341 1 9 1 184 2 125 1 310 2 71 2 271 1 314 1 130 2 74 2 54 1 274 1 251 1 56 1 371 1 80 1 37 1 325 2 
48 2 0 1 122 1 18 2 198 1 60 1 201 1 143 1 132 1 45 1 66 1 6 1 175 1 191 1 286 2 91 1 265 1 325 2 93 1 
48 2 0 1 18 1 198 1 60 1 201 1 143 1 45 1 66 1 175 1 191 1 286 1 91 1 265 1 325 1 93 1 361 1 
9 1 18 1 41 1 3 1 270 1 132 1 66 1 240 1 275 1 286 1 265 1 337 1 325 1 93 1 
48 2 0 1 18 1 198 1 60 1 201 1 143 1 132 1 45 1 66 1 6 1 175 1 191 1 286 1 91 1 265 1 325 1 93 1 
120 1 
94 1 315 1 5 1 192 1 217 1 355 1 100 1 
94 1 195 1 183 1 236 1 245 1 217 1 218 1 129 1 100 1 73 1 23 1 116 1 192 2 104 1 252 1 278 1 324 1 
329 3 195 6 136 2 197 2 236 5 84 2 43 6 5 1 283 6 87 2 286 3 89 1 337 10 94 2 242 1 97 2 9 3 245 4 100 9 295 2 212 2 104 4 252 5 17 2 18 3 355 1 217 8 218 3 358 1 116 4 66 4 118 2 265 3 121 2 269 1 180 3 122 1 223 1 183 4 70 2 126 2 226 2 363 2 227 2 312 1 313 2 73 12 367 1 369 2 276 2 275 1 192 8 325 3 324 5 
195 3 330 1 136 2 300 1 236 1 217 5 218 1 61 1 43 5 116 2 283 5 87 2 206 1 269 1 94 2 97 2 183 2 365 1 245 2 363 2 50 1 186 1 227 2 293 1 366 1 100 8 313 2 212 1 73 6 296 1 104 2 192 5 252 1 17 1 324 1 
280 1 236 1 217 2 304 1 356 1 116 1 88 1 266 1 47 1 243 1 97 2 183 1 184 1 364 1 245 1 310 1 227 1 292 1 100 2 313 2 74 1 157 1 104 1 252 1 253 1 372 1 17 1 81 1 
94 1 183 1 245 1 355 1 217 1 100 1 5 1 116 1 104 1 192 1 
97 2 136 2 195 5 226 1 363 2 227 2 217 5 100 5 313 2 43 5 73 10 283 5 87 2 192 5 17 1 
94 1 236 1 192 1 252 1 218 1 324 1 
18 4 236 3 217 2 218 2 358 1 238 1 116 1 66 1 240 1 286 4 265 1 337 1 269 2 223 2 9 1 183 2 245 2 100 2 270 1 212 2 346 1 189 1 33 1 104 2 275 2 57 1 252 3 325 4 324 4 
257 1 280 2 329 1 18 1 2 1 110 1 22 1 282 1 66 1 239 1 286 1 88 2 265 1 146 2 337 1 243 2 124 1 9 1 184 3 310 3 71 1 99 1 32 1 74 2 248 1 251 1 35 1 275 1 371 1 56 1 253 1 325 1 
94 2 195 2 183 1 245 1 217 2 100 1 43 2 212 1 73 4 116 1 283 2 318 1 104 1 192 4 269 1 
216 1 151 1 241 1 
216 1 151 1 241 1 
156 1 173 1 168 1 151 1 241 1 
216 1 151 1 241 1 
319 1 151 1 241 1 
319 1 151 1 241 1 
319 1 151 1 241 1 
151 1 241 1 
234 1 
257 1 330 1 300 1 110 1 301 2 304 1 239 1 146 2 206 1 97 1 125 4 50 1 227 1 71 8 31 1 52 2 157 1 134 1 318 1 251 4 56 1 323 1 81 1 
257 2 330 1 136 1 300 1 301 2 110 2 304 1 331 1 64 1 239 2 146 4 206 2 97 2 125 6 363 1 50 1 227 1 71 11 31 1 128 1 52 3 157 1 134 1 318 1 251 5 56 2 81 1 323 1 
257 3 330 1 136 2 300 1 110 3 301 3 304 1 331 1 61 1 239 3 87 2 146 6 206 1 97 3 123 1 125 9 363 2 50 1 71 19 186 1 227 3 31 1 128 1 366 1 52 4 157 1 134 1 318 1 251 10 296 1 56 3 81 1 323 1 
257 3 330 1 136 2 300 1 110 3 301 3 304 1 331 2 61 1 239 3 87 1 146 6 206 1 97 3 123 1 125 10 363 2 50 1 71 17 186 1 227 2 31 1 128 1 366 1 52 5 157 1 134 1 318 1 251 7 296 1 56 3 81 1 323 1 
257 1 330 1 300 1 110 1 301 2 304 1 239 1 146 2 206 1 97 1 125 4 50 1 227 1 71 8 31 1 52 2 157 1 134 1 318 1 251 4 56 1 323 1 81 1 
257 1 330 1 136 2 300 1 110 1 301 1 331 1 61 1 239 1 87 2 146 2 206 1 97 2 125 6 363 2 50 1 71 12 186 1 227 2 366 1 52 2 134 1 251 6 296 1 56 1 
257 4 330 1 136 2 300 1 110 4 301 3 304 1 331 2 61 1 239 4 87 1 146 8 206 1 97 3 123 2 125 10 363 2 50 1 71 18 186 1 227 2 31 1 128 1 366 1 52 5 157 1 134 1 318 1 251 8 296 1 56 4 81 1 323 1 
257 4 330 1 136 3 300 1 110 4 301 3 331 3 61 1 239 4 87 2 146 8 206 1 97 3 123 2 125 9 363 3 50 1 71 16 186 1 227 2 366 1 102 1 52 6 134 1 251 7 296 1 56 4 
97 1 125 3 301 3 227 1 71 7 31 1 304 1 331 3 52 6 157 3 251 4 323 2 81 3 
257 4 330 1 136 2 300 1 110 4 301 3 304 1 331 1 61 1 239 4 87 1 146 8 206 1 97 3 123 2 125 10 363 2 50 1 71 18 186 1 227 2 31 1 366 1 102 1 52 4 157 1 134 1 318 1 251 8 296 1 56 4 81 1 323 1 
257 2 97 1 123 1 125 4 301 2 110 2 227 1 71 8 31 1 304 1 331 1 52 3 157 1 239 2 318 1 251 4 56 2 146 4 323 1 81 1 
97 1 125 3 301 2 71 6 227 1 31 1 304 1 315 1 52 2 157 1 318 1 251 3 323 1 81 1 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 128 1 331 1 52 2 239 1 251 2 87 1 56 1 146 2 
97 1 330 1 136 1 300 1 125 3 301 1 363 1 227 1 71 7 331 1 52 2 64 1 87 1 251 4 206 2 
257 2 136 2 330 2 301 5 110 2 304 1 331 4 64 1 239 2 87 2 334 1 146 4 206 2 97 3 123 2 147 1 125 11 363 2 71 23 227 3 31 1 211 1 52 9 157 2 318 1 251 12 56 2 81 2 323 1 
251 1 71 1 206 1 
330 1 125 1 71 1 
257 1 97 1 136 1 125 3 110 1 226 1 363 1 301 2 71 6 227 1 128 1 331 1 52 3 239 1 251 3 87 1 56 1 146 2 
257 1 330 1 136 2 300 1 110 1 301 1 331 1 61 1 239 1 87 2 146 2 206 1 97 2 125 6 363 2 50 1 71 12 186 1 227 2 366 1 52 2 134 1 251 6 296 1 56 1 
97 1 125 3 301 1 71 6 227 1 304 1 331 1 52 2 157 1 251 3 81 1 
257 1 123 1 125 1 301 1 110 1 71 3 31 1 331 1 52 2 157 1 239 1 251 2 56 1 334 1 146 2 81 1 323 1 
257 1 97 2 125 5 110 1 301 3 71 10 227 2 304 1 331 2 52 5 157 2 134 1 239 1 251 5 56 1 146 2 372 1 81 2 
257 1 97 1 136 1 125 2 110 1 71 2 331 1 52 1 134 1 239 1 56 1 146 2 
257 1 97 1 136 1 125 2 301 1 110 1 363 1 227 1 71 4 331 1 52 2 134 1 239 1 251 2 87 1 56 1 146 2 
257 3 123 1 125 1 110 3 301 1 71 3 331 1 102 1 52 2 157 1 134 1 239 3 251 2 56 3 334 1 146 6 81 1 
257 5 330 3 136 3 300 1 110 5 301 7 304 2 331 5 64 1 239 5 87 3 334 1 146 10 206 4 97 5 123 2 340 1 125 16 363 3 342 1 71 34 227 5 31 1 128 1 102 1 52 12 75 1 157 3 134 1 318 1 251 18 56 5 81 3 323 1 
74 1 187 1 184 1 59 1 310 1 99 1 255 1 
184 1 59 1 310 1 99 1 345 1 15 1 187 1 74 1 205 1 159 1 339 1 255 1 
315 1 66 1 9 1 18 1 240 1 286 1 275 1 265 1 337 1 270 1 325 1 
243 1 280 1 329 1 9 1 181 1 124 1 184 2 18 1 310 2 99 1 74 1 66 1 248 1 275 1 286 1 265 1 337 1 325 1 
243 2 280 1 329 2 223 1 9 2 181 1 124 1 184 2 18 1 126 1 310 2 99 1 74 2 133 1 66 1 248 1 286 1 265 1 47 1 162 1 337 3 121 1 325 1 
353 1 280 1 329 2 18 2 66 1 286 2 265 1 337 3 47 1 121 1 243 2 223 1 225 1 181 1 9 2 184 2 126 1 310 2 99 1 74 2 133 1 248 1 162 1 325 2 
94 1 180 1 353 1 329 1 223 1 9 1 18 3 197 1 126 1 236 2 139 1 141 1 66 1 118 1 275 1 192 1 286 3 252 2 265 1 337 4 121 1 325 3 324 1 
94 1 180 1 353 1 329 1 223 1 9 1 18 3 197 1 126 1 236 2 84 1 66 1 118 1 275 1 192 1 286 3 252 2 265 1 337 4 121 1 325 3 324 1 
66 1 18 1 286 1 265 1 298 1 325 1 
69 1 242 1 83 1 122 1 341 1 329 1 9 2 18 7 130 1 273 1 66 3 34 1 275 2 286 7 91 1 79 1 298 1 265 2 337 3 163 1 325 6 
280 1 257 2 38 1 329 1 18 1 301 2 110 2 200 1 304 1 282 2 66 1 239 2 286 1 265 1 146 4 337 1 243 1 97 1 122 1 9 1 181 1 124 1 125 3 184 2 310 2 227 1 71 6 99 2 31 1 314 1 52 2 32 1 74 1 348 1 157 1 248 1 318 1 251 3 35 1 370 1 56 2 371 2 350 1 37 1 81 1 323 1 325 1 
109 1 18 1 197 1 236 3 84 1 217 1 355 1 218 1 358 1 5 1 116 2 118 1 286 1 337 2 94 1 180 1 183 2 245 2 100 1 295 1 369 1 192 1 275 1 104 2 276 1 252 3 325 1 324 2 
242 1 122 1 329 1 9 1 197 1 18 2 312 1 66 2 286 2 298 1 265 1 337 2 325 2 
353 1 122 1 107 1 9 1 18 4 270 1 66 1 240 1 275 1 286 4 265 1 337 1 325 4 
83 1 223 1 1 1 329 1 9 1 18 2 103 1 66 2 286 2 265 1 337 1 163 1 221 1 325 2 
45 1 48 1 66 1 175 1 18 1 286 1 275 1 265 1 325 1 143 1 
122 1 341 1 9 1 18 2 66 1 286 2 91 1 265 1 336 1 337 1 325 2 
69 1 122 1 107 1 223 1 341 1 9 2 18 5 270 1 66 2 240 1 275 1 286 5 79 1 265 2 337 3 325 4 
69 1 122 1 107 1 223 1 341 1 9 2 18 5 263 1 270 1 66 2 240 1 275 1 286 5 265 2 337 3 325 4 
243 1 280 1 329 1 9 1 181 1 225 1 184 2 18 1 310 2 99 1 74 1 66 1 248 1 275 1 286 1 265 1 337 1 325 1 
242 1 83 1 223 1 329 1 9 1 18 1 273 1 66 2 286 1 265 1 337 1 163 1 325 1 
74 1 167 1 274 1 284 1 184 1 310 1 271 1 80 1 219 1 
190 1 177 1 219 1 
167 1 284 1 99 1 299 1 219 1 
94 1 167 2 39 1 109 1 236 2 99 1 219 1 155 1 133 1 118 1 284 2 190 1 192 1 177 1 252 2 47 1 162 1 299 2 208 1 
315 1 30 1 360 1 199 1 
30 1 65 1 360 1 127 1 199 1 36 1 272 1 
78 1 127 1 114 1 
30 1 106 1 127 3 199 1 272 1 65 1 203 1 360 1 36 3 254 1 27 2 28 1 
30 1 65 1 360 1 127 2 199 1 112 1 36 2 322 1 272 1 
48 1 65 1 106 1 67 1 175 1 108 1 360 1 127 1 36 1 201 1 272 1 
30 1 65 1 106 1 360 1 127 1 36 1 272 1 
30 2 65 1 106 1 127 1 199 1 36 1 272 1 
30 1 106 1 127 2 272 2 306 1 65 2 333 1 285 1 360 1 36 2 
30 1 106 1 182 1 108 1 127 3 199 1 112 2 210 1 272 1 153 1 65 1 360 2 36 3 
30 1 48 2 0 1 106 1 127 2 199 1 112 1 143 1 272 1 201 1 65 1 175 1 360 1 36 2 362 1 
30 1 106 1 108 1 127 4 199 1 112 2 152 1 272 2 153 1 65 2 360 2 36 4 322 1 
30 1 65 1 106 1 360 1 127 1 199 1 36 1 272 1 
30 2 258 1 108 1 127 4 199 2 112 2 272 1 153 1 65 1 203 1 360 3 27 1 254 1 36 4 
30 1 106 1 302 1 127 2 199 1 112 1 150 1 272 1 65 1 360 1 287 1 36 2 
30 1 106 1 127 3 199 1 272 1 65 1 203 1 158 1 360 1 36 3 254 2 27 2 
261 1 360 2 21 1 131 2 
65 1 106 1 290 1 127 1 36 1 272 1 
30 1 65 1 106 1 360 1 127 2 199 1 112 1 36 2 210 1 272 1 
176 1 
30 1 65 1 106 1 360 1 127 1 199 1 36 1 272 1 
30 1 65 1 106 1 360 1 127 3 199 1 112 1 27 1 36 3 210 1 272 1 
258 1 108 1 360 1 153 1 
30 1 360 1 

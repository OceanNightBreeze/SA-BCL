#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 340 1 361 3 313 4 195 1 77 1 176 2 96 2 154 1 295 9 97 1 100 1 60 1 246 1 201 1 248 1 231 1 187 9 330 2 207 1 112 2 42 1 120 1 260 1 169 1 289 2 23 2 151 6 
51 2 340 1 361 3 313 4 195 1 77 1 176 2 96 2 154 1 295 9 97 1 100 1 60 1 246 1 201 1 248 1 231 1 187 9 330 2 207 1 112 2 42 1 120 1 260 1 169 1 289 2 23 2 151 6 
51 2 340 1 361 4 313 5 195 1 77 1 176 2 96 2 154 1 295 10 97 1 100 1 60 1 246 1 201 1 248 1 231 1 187 10 330 2 207 1 112 2 42 1 120 1 260 1 169 1 289 2 23 2 151 7 
51 2 361 2 313 3 195 1 77 1 176 2 96 2 154 1 295 7 97 1 100 1 60 1 246 1 201 1 248 1 231 1 187 7 330 1 207 1 112 2 42 1 120 1 260 1 169 1 289 2 23 2 151 4 
361 1 340 1 313 2 96 1 176 1 187 4 330 2 154 1 295 4 112 1 97 1 120 1 260 1 169 1 289 1 248 1 23 1 151 3 
51 1 176 1 187 2 96 1 154 1 295 2 78 1 378 1 112 1 42 1 97 1 260 1 286 1 169 1 23 1 231 1 
51 1 361 1 313 1 195 1 176 2 187 3 154 1 295 3 97 1 260 1 169 1 23 2 151 1 
51 1 313 4 361 3 340 1 195 1 77 1 176 2 96 1 154 1 295 9 320 1 97 1 60 1 225 1 248 1 187 9 330 2 112 1 120 1 260 1 169 1 289 1 151 7 23 2 
51 1 313 4 361 3 340 1 195 1 77 1 176 2 96 1 154 1 295 9 320 1 97 1 60 1 225 1 248 1 187 9 330 2 112 1 120 1 260 1 169 1 289 1 151 7 23 2 
32 1 7 1 317 1 
317 1 140 2 333 1 
310 2 73 2 161 2 177 1 88 2 200 2 341 2 345 1 
292 1 55 1 265 1 177 1 127 1 341 2 4 1 131 2 99 2 371 1 271 2 9 2 134 1 272 1 10 1 200 2 345 1 204 1 161 2 13 1 233 1 303 1 309 1 113 1 351 1 86 2 115 1 310 3 73 3 145 1 213 1 354 1 88 2 215 1 285 1 48 1 171 1 
310 1 73 1 161 1 177 1 35 1 88 1 311 1 200 1 341 1 98 1 
317 1 205 1 254 1 7 1 73 1 310 1 281 1 282 1 88 1 325 1 311 1 92 1 372 1 249 1 
317 1 161 1 205 1 341 1 7 1 73 1 310 1 282 1 88 1 325 1 311 1 200 1 92 1 372 2 249 2 
138 1 228 1 302 1 372 1 249 1 
7 1 317 1 228 1 302 1 372 2 360 1 249 2 50 1 
228 1 372 1 249 1 
161 1 177 1 35 1 302 1 341 1 98 1 73 1 310 1 119 1 88 1 311 1 200 1 372 1 249 1 
317 1 
7 1 317 1 228 1 302 1 82 1 372 2 360 1 249 2 
316 1 317 1 153 1 36 1 302 2 349 2 296 2 40 1 7 1 269 1 103 1 284 2 228 2 357 1 170 1 372 5 288 1 360 1 249 5 
292 1 204 1 95 1 265 1 127 1 233 1 341 1 131 1 236 1 115 1 86 1 73 2 310 2 354 1 118 1 88 1 271 1 134 1 200 1 48 1 
32 1 345 1 
161 1 341 1 280 1 73 2 310 2 88 2 90 1 200 1 345 2 
183 1 105 1 236 1 
292 1 204 1 265 1 127 1 233 1 304 1 131 1 86 1 115 1 310 1 73 1 354 1 271 1 134 1 345 1 48 1 
161 1 95 1 163 1 341 4 254 1 280 1 198 1 73 5 310 5 118 2 88 5 200 4 345 1 104 1 
310 2 73 2 35 1 88 2 311 1 200 2 341 2 85 1 
310 3 73 3 161 1 118 1 88 3 200 3 341 3 345 1 
310 1 73 1 35 1 88 1 311 1 200 1 341 1 
280 1 310 1 73 1 161 1 88 1 311 1 90 1 200 1 341 1 
292 1 95 1 265 1 177 1 127 1 341 3 4 1 131 1 99 1 371 1 325 1 271 1 9 2 134 1 272 1 10 1 200 3 345 1 135 1 372 1 249 1 204 1 161 2 205 1 13 1 233 1 309 1 113 1 280 1 351 1 115 1 86 1 310 4 73 4 145 1 282 1 354 1 116 1 88 3 118 1 285 1 311 1 92 1 48 1 
198 1 310 2 73 2 88 2 118 1 200 1 341 1 254 1 345 1 
161 1 317 1 95 1 205 1 341 3 280 1 73 3 310 3 282 1 226 1 116 1 118 2 88 3 325 1 311 1 200 3 92 1 372 1 249 1 
161 1 341 2 236 1 280 1 73 2 310 2 118 1 88 2 200 2 183 1 
292 1 204 1 265 1 127 1 233 1 131 1 86 1 115 1 310 1 73 1 354 1 271 1 134 1 345 1 48 1 
204 1 54 1 265 1 127 1 233 1 131 1 268 1 86 1 310 1 73 1 354 1 271 1 134 1 345 1 48 1 
55 2 4 1 99 4 56 1 371 1 9 2 272 1 10 1 247 1 105 2 183 2 301 1 376 1 278 1 164 1 307 1 141 1 236 2 19 1 351 1 145 1 214 1 285 2 124 1 
310 1 73 1 88 1 311 1 200 1 341 1 92 1 85 1 
364 1 147 1 
364 1 147 1 
14 1 342 1 
14 1 342 1 
14 1 342 1 
264 1 364 1 147 1 
264 1 364 1 147 1 
264 1 364 1 147 1 
364 1 147 1 255 1 
87 1 276 1 14 1 364 2 147 2 342 1 
181 1 364 1 147 1 
181 1 364 1 147 1 
181 1 364 1 147 1 
364 1 128 1 341 2 101 1 298 1 200 2 345 1 372 1 249 1 373 1 109 1 232 1 68 1 331 1 38 1 71 1 188 1 43 1 255 1 73 2 310 2 168 1 88 2 147 1 
109 2 317 1 276 1 374 1 364 2 111 1 38 1 331 3 297 1 71 2 257 1 43 2 168 2 147 2 63 1 372 2 328 2 219 1 249 2 
96 1 289 1 112 1 
96 1 78 1 112 1 
350 1 155 1 78 1 289 2 130 1 112 3 
350 1 327 1 155 1 78 1 289 1 112 2 
350 2 155 1 78 1 289 1 112 2 
317 2 128 1 366 1 296 1 28 1 7 1 344 2 8 1 81 1 298 1 228 1 158 1 372 5 247 1 249 5 373 1 376 1 302 4 278 1 140 3 349 1 306 1 333 1 84 2 40 3 19 1 284 1 357 1 170 2 338 2 93 1 360 1 
317 5 296 2 269 1 7 1 29 1 344 6 133 1 323 5 8 1 81 2 228 6 158 2 372 9 106 1 247 3 373 4 249 9 138 5 376 3 302 7 278 3 140 9 349 2 333 3 40 8 19 3 284 2 357 1 148 1 170 6 338 6 93 3 360 1 262 1 22 1 
317 3 366 1 296 1 28 1 7 1 269 1 344 2 81 1 158 1 372 3 249 3 373 1 247 1 302 2 376 1 278 1 140 4 349 1 333 2 40 3 84 1 19 1 284 1 170 2 338 2 93 1 
317 4 366 1 296 1 28 1 7 1 269 1 29 1 344 4 81 1 158 1 372 4 106 1 249 4 373 2 247 2 302 3 376 2 278 2 140 7 349 1 333 3 40 5 84 2 19 2 284 1 148 1 170 4 338 4 93 2 
32 1 134 1 17 1 
134 1 258 1 
144 1 
204 1 265 1 134 1 
191 1 134 1 
265 1 134 1 
204 1 265 1 162 1 134 3 17 2 267 1 
1 1 250 1 55 4 278 1 242 1 99 7 224 1 61 2 334 1 214 3 146 1 285 3 356 1 124 2 247 1 182 1 172 1 
1 1 250 1 55 4 278 1 242 1 99 7 224 1 61 2 334 1 214 3 146 1 285 3 356 1 124 2 247 1 182 1 172 1 
185 1 1 1 250 1 55 4 278 1 242 1 99 7 224 1 61 2 334 1 214 3 146 1 285 3 356 1 124 2 247 1 182 1 172 1 
173 1 1 1 55 16 79 4 369 1 99 31 242 2 224 2 61 3 371 1 9 2 272 1 10 1 230 1 182 1 247 4 299 1 250 1 376 3 278 4 143 1 19 3 145 1 334 2 214 10 146 1 337 1 285 15 356 5 358 3 124 5 93 3 172 2 339 1 
55 5 99 9 242 1 197 1 224 1 61 2 371 2 9 4 272 2 10 2 247 1 182 1 250 1 347 1 278 1 145 2 334 1 214 4 146 1 285 4 356 1 124 3 339 1 172 1 
51 1 293 1 96 1 176 1 154 1 295 2 266 1 78 1 130 1 131 1 97 1 343 1 271 1 159 1 329 1 187 2 277 1 69 1 112 2 86 1 354 1 336 1 260 1 121 1 169 1 289 1 237 1 48 1 151 1 23 1 
51 1 293 1 96 1 176 1 154 1 295 3 266 1 78 1 130 1 131 1 370 1 343 1 271 1 159 1 329 1 187 3 67 1 277 1 112 2 114 1 86 1 354 1 260 1 121 1 169 1 289 1 237 1 48 1 23 1 151 2 
51 1 293 1 96 1 154 1 295 2 78 1 130 1 131 1 370 1 343 1 271 1 159 1 329 1 187 2 277 1 112 2 114 1 86 1 354 1 260 1 121 1 169 1 289 1 48 1 151 2 
51 2 176 1 265 1 127 1 295 1 131 1 5 1 343 2 30 1 271 1 134 1 159 2 136 1 187 1 67 1 86 1 354 1 121 2 122 1 217 1 48 1 23 1 381 1 
51 1 293 1 96 1 176 1 295 1 266 1 78 1 130 1 131 1 370 1 97 1 343 1 271 1 159 1 329 1 187 1 277 1 69 1 112 2 86 1 354 1 121 1 289 1 237 1 48 1 23 1 
190 1 
52 1 239 1 2 1 296 1 5 1 6 2 7 1 199 2 249 5 11 2 110 1 251 1 205 1 349 1 254 1 70 2 18 1 73 1 310 1 117 2 354 1 353 4 122 1 357 1 311 1 170 2 360 3 125 1 317 2 265 1 127 2 131 2 81 1 228 6 271 2 325 1 134 1 372 5 137 1 140 2 377 2 332 2 333 2 40 2 142 1 86 2 281 1 284 1 282 1 88 1 379 1 91 1 92 1 193 1 48 1 
239 1 325 1 228 2 372 3 82 1 249 3 137 1 110 1 205 1 254 1 332 1 310 1 73 1 281 1 282 1 353 2 88 1 379 1 311 1 91 1 92 1 360 1 
317 1 239 1 7 1 228 1 325 1 372 3 82 1 249 3 137 1 11 1 110 1 205 1 254 1 310 1 73 1 281 1 282 1 353 3 88 1 379 1 311 1 91 1 92 1 360 1 
317 1 239 1 7 1 325 1 228 2 82 1 372 3 249 3 137 1 11 1 110 1 205 1 254 1 332 1 310 1 73 1 281 1 282 1 353 3 117 1 88 1 379 1 311 1 91 1 92 1 360 1 
94 1 239 1 2 1 296 1 243 1 58 1 6 2 7 5 199 2 249 5 11 4 110 1 205 1 349 1 254 1 70 2 310 1 73 1 117 4 353 6 311 1 357 1 170 1 360 3 175 1 317 5 325 1 228 7 372 5 82 1 137 1 377 2 332 4 40 1 333 2 281 1 282 1 284 1 88 1 379 1 89 1 91 1 92 1 193 1 
239 1 2 1 296 1 6 2 7 1 199 2 249 4 11 2 110 1 205 1 251 1 349 1 254 1 70 2 310 1 73 1 353 4 117 2 311 1 357 1 170 1 360 2 317 2 325 1 228 4 372 4 137 1 140 2 377 2 332 2 40 1 333 2 281 1 282 1 284 1 88 1 379 1 91 1 193 1 92 1 
175 1 317 1 239 1 2 1 296 1 6 2 58 1 7 1 228 4 325 1 199 2 372 4 249 4 137 1 11 2 110 1 205 1 377 2 349 1 332 2 254 1 333 2 70 2 40 1 310 1 73 1 281 1 282 1 284 1 117 2 353 4 88 1 379 1 89 1 311 1 357 1 91 1 170 1 193 1 92 1 360 2 
175 1 317 1 239 1 2 1 296 1 6 2 58 1 7 1 228 4 325 1 199 2 372 4 249 4 137 1 11 2 110 1 205 1 377 2 349 1 332 2 254 1 333 2 70 2 40 1 310 1 73 1 281 1 282 1 284 1 117 2 353 4 88 1 379 1 89 1 311 1 357 1 91 1 170 1 193 1 92 1 360 2 
317 1 239 1 2 1 296 1 223 2 6 2 7 1 228 4 325 1 199 2 372 4 249 4 137 1 11 2 110 1 275 2 205 1 140 2 349 1 332 2 254 1 40 1 211 1 310 1 73 1 281 1 282 1 284 1 117 2 353 4 88 1 379 1 89 1 311 1 261 1 357 1 91 1 170 1 92 1 47 1 360 2 
94 1 175 1 317 1 239 1 2 1 296 1 6 2 58 1 7 1 325 1 228 5 199 2 372 4 249 4 137 1 11 3 110 1 205 1 377 2 349 1 254 1 332 3 333 2 70 2 40 1 310 1 73 1 281 1 284 1 282 1 353 5 117 3 88 1 379 1 89 1 357 1 311 1 91 1 170 1 193 1 92 1 360 2 
94 1 175 1 317 1 239 1 2 1 296 1 6 2 58 1 7 1 325 1 228 5 199 2 372 4 249 4 137 1 11 3 110 1 205 1 377 2 349 1 254 1 332 3 333 2 70 2 40 1 310 1 73 1 281 1 284 1 282 1 353 5 117 3 88 1 379 1 89 1 357 1 311 1 91 1 170 1 193 1 92 1 360 2 
317 1 239 1 2 1 296 1 223 2 6 2 7 1 228 4 325 1 199 2 372 4 249 4 137 1 11 2 110 1 275 2 251 1 205 1 140 2 349 1 332 2 254 1 40 1 211 1 73 1 310 1 281 1 284 1 282 1 117 2 353 4 88 1 379 1 357 1 311 1 91 1 170 1 92 1 360 2 
55 3 4 1 99 6 61 1 371 1 9 2 272 1 10 1 345 2 183 1 182 1 247 1 105 1 32 1 250 1 278 1 141 1 236 1 351 1 145 1 334 1 214 2 146 1 285 3 124 2 172 1 
362 1 222 1 55 8 4 1 79 3 99 14 371 2 31 1 9 4 272 2 10 2 230 1 345 1 105 11 247 2 183 4 299 1 376 2 278 1 309 1 236 11 259 1 351 2 19 1 145 2 213 1 214 2 285 6 356 1 358 3 123 1 124 1 93 2 
292 1 95 1 265 1 55 1 127 1 341 1 4 1 131 1 99 2 180 1 371 1 271 1 9 2 134 1 10 1 200 1 272 1 345 1 183 1 346 1 204 1 233 1 253 1 304 1 309 1 115 1 86 1 351 1 310 2 73 2 145 1 213 1 354 1 88 1 118 1 285 1 123 1 48 1 
292 2 95 1 55 10 341 1 4 3 99 20 61 1 9 6 200 1 10 3 345 2 105 7 247 3 250 1 204 2 308 2 309 1 113 2 351 3 115 2 19 2 73 3 310 3 213 1 354 2 214 8 20 1 118 1 355 2 356 4 123 1 124 4 218 2 172 1 265 2 363 1 127 1 132 1 131 3 370 1 371 3 271 3 134 2 272 3 182 1 183 7 184 2 233 2 376 2 278 3 236 7 86 3 145 3 334 1 146 1 88 1 285 10 48 2 93 2 
126 1 318 1 319 1 55 1 265 2 127 2 341 1 4 2 131 7 5 1 370 1 99 2 227 1 371 2 271 8 9 4 134 3 200 1 272 2 10 2 203 1 141 1 309 1 86 8 351 2 310 1 73 1 145 2 352 1 213 1 354 2 336 1 88 1 118 1 285 1 122 1 48 2 150 1 171 2 
314 1 55 1 341 1 4 1 99 3 371 1 9 2 272 1 10 1 200 1 183 1 105 1 247 1 161 1 376 1 278 1 236 1 280 1 351 1 19 1 73 1 310 1 145 1 214 1 88 1 285 2 123 1 124 1 93 1 
301 1 55 2 376 1 4 1 141 1 99 2 236 1 351 1 145 1 214 1 371 1 9 2 356 1 10 1 272 1 183 1 105 1 247 1 
278 1 4 1 141 1 99 2 236 1 56 1 351 1 19 1 145 1 214 1 371 1 9 2 285 2 10 1 272 1 124 1 183 1 105 1 
55 2 4 1 99 4 371 1 9 2 272 1 10 1 247 1 105 2 183 2 376 1 278 1 141 1 236 2 351 1 19 1 145 1 214 2 285 2 356 1 124 1 93 1 
301 1 55 2 376 1 4 1 99 2 236 1 351 1 145 1 352 1 214 1 371 1 9 2 356 1 10 1 272 1 183 1 105 1 247 1 
278 1 4 1 99 2 236 1 56 1 351 1 19 1 145 1 352 1 214 1 371 1 9 2 285 2 10 1 272 1 124 1 183 1 105 1 
55 2 4 1 99 4 371 1 9 2 272 1 10 1 247 1 105 2 183 2 376 1 278 1 236 2 351 1 19 1 145 1 352 1 214 2 285 2 356 1 124 1 93 1 
55 2 4 1 99 4 371 1 9 2 272 1 10 1 247 1 105 2 183 2 376 1 278 1 236 2 351 1 19 1 145 1 214 2 285 2 356 1 124 1 93 1 
292 1 55 1 265 1 127 1 4 1 131 1 99 2 371 1 271 1 9 2 134 1 10 1 272 1 345 1 204 1 233 1 113 1 309 1 115 1 86 1 351 1 73 1 310 1 145 1 213 1 354 1 285 1 48 1 
54 1 55 1 265 1 127 1 4 1 131 1 99 2 268 1 371 1 271 1 9 2 134 1 10 1 272 1 345 1 204 1 233 1 309 1 86 1 351 1 73 1 310 1 212 1 145 1 213 1 354 1 285 1 48 1 
55 2 4 1 99 4 371 1 9 2 272 1 10 1 247 1 105 2 183 2 376 1 278 1 236 2 351 1 19 1 145 1 214 2 285 2 356 1 123 1 124 1 93 1 
292 1 55 2 265 1 4 1 131 1 99 4 371 1 271 1 9 2 134 1 10 1 272 1 183 2 105 2 247 1 204 1 376 1 233 1 278 1 308 1 113 1 236 2 19 1 115 1 86 1 351 1 73 1 310 1 145 1 214 2 354 1 336 1 285 2 356 1 124 1 48 1 93 1 
221 1 55 2 341 1 4 1 99 3 371 1 9 2 272 1 10 1 200 1 247 1 105 1 183 1 161 1 376 1 278 1 236 1 280 1 19 1 351 1 73 1 310 1 145 1 214 1 88 1 285 1 356 1 123 1 93 1 
238 1 26 2 294 2 55 9 79 2 368 1 99 19 59 1 157 1 371 2 326 1 9 4 272 2 10 2 230 1 247 3 299 1 347 1 376 3 278 3 208 1 19 3 145 2 214 6 285 10 356 3 358 1 149 1 124 3 93 3 
24 1 174 1 238 1 26 1 294 4 55 14 368 2 79 2 99 26 57 1 59 1 179 1 157 2 371 3 326 1 9 6 272 3 10 3 247 3 299 2 347 1 348 1 376 3 278 2 16 1 19 2 145 3 214 4 285 12 356 2 358 2 124 2 93 3 339 2 
24 1 174 1 238 1 26 1 294 4 55 20 79 4 368 2 99 41 57 1 59 1 179 1 61 1 157 1 371 3 326 1 9 6 272 3 10 3 230 1 182 1 247 5 299 3 250 1 347 1 348 1 376 4 278 5 234 1 16 1 19 4 145 3 334 1 214 8 146 1 285 21 356 4 358 3 149 1 124 4 93 4 172 1 339 1 
24 1 174 1 238 1 26 1 294 4 55 20 79 4 368 2 99 38 57 1 59 1 179 1 61 1 157 1 371 4 326 1 9 8 272 4 10 4 230 1 182 1 247 5 299 3 250 1 347 1 348 1 376 4 278 4 234 1 16 1 19 3 145 4 334 1 214 7 146 1 285 18 356 3 358 3 149 1 124 4 93 4 172 1 339 2 
24 1 174 1 238 1 26 1 294 4 362 2 55 27 79 4 368 1 99 52 57 1 59 1 179 1 61 1 157 1 371 2 326 1 9 4 272 2 10 2 230 2 182 1 247 8 299 2 250 1 347 1 348 1 376 7 278 8 16 1 19 7 145 2 334 1 214 14 146 1 285 25 356 7 358 4 124 7 93 7 172 1 339 1 
109 1 168 1 276 1 364 1 147 1 111 1 380 1 71 1 257 1 43 1 
101 1 255 1 
109 1 44 1 315 1 25 1 168 1 364 1 147 1 71 1 43 1 
264 1 37 1 
87 1 181 1 273 1 
109 1 317 1 276 1 374 1 364 1 111 1 38 1 331 2 297 1 71 1 257 1 43 1 168 1 147 1 372 1 328 1 219 1 249 1 
109 1 317 1 276 1 374 1 364 1 111 1 38 1 331 2 297 1 71 1 257 1 43 1 168 1 147 1 372 1 328 1 219 1 249 1 
109 1 317 1 276 1 374 1 364 1 111 1 38 1 331 2 297 1 71 1 257 1 43 1 168 1 147 1 372 1 328 1 219 1 249 1 
264 1 87 1 37 1 
264 1 87 1 37 1 
181 1 273 1 
87 1 181 1 273 1 
232 1 68 1 
364 1 128 1 178 1 341 2 101 1 298 1 200 2 345 1 328 1 372 1 249 1 373 1 109 1 374 1 232 1 302 1 68 1 331 1 71 1 188 1 43 1 255 1 310 2 73 2 168 1 88 2 147 1 
265 1 319 1 55 1 4 1 131 2 99 2 227 1 371 1 271 2 9 2 134 1 229 1 10 1 272 1 83 1 305 1 309 1 86 2 351 1 310 2 73 2 145 1 335 1 213 1 354 1 88 2 285 1 123 1 48 1 194 1 171 2 
329 1 96 1 277 1 78 1 130 1 112 2 131 2 370 1 343 1 235 1 80 1 279 1 86 2 354 1 271 2 336 1 289 1 237 1 48 1 
107 1 329 1 96 1 277 1 78 1 130 1 112 2 131 1 370 1 343 1 80 1 86 1 354 1 271 1 289 1 237 1 48 1 
265 1 127 1 41 1 131 1 5 1 343 1 279 1 86 1 354 1 271 1 134 1 122 1 217 1 48 1 
329 1 96 1 277 1 78 1 130 1 112 2 131 1 370 1 343 1 235 1 80 1 279 1 86 1 354 1 271 1 289 1 237 1 48 1 
240 1 
32 1 7 1 317 1 153 1 36 1 170 1 40 1 
317 2 140 1 377 1 349 1 296 1 40 1 70 1 333 1 7 1 284 1 228 1 357 1 193 1 170 1 372 1 249 1 360 1 
0 1 52 1 153 1 296 4 196 2 7 2 344 6 65 1 249 5 247 2 204 3 162 1 349 4 17 2 258 3 209 1 19 2 354 3 74 2 357 4 170 8 359 1 360 3 317 8 265 3 127 1 365 2 367 2 131 3 321 2 81 2 271 3 228 5 134 10 372 5 184 2 34 2 36 1 376 2 140 12 278 2 40 9 333 6 191 2 86 3 284 4 282 2 336 1 45 1 290 2 338 6 48 4 93 2 49 2 
24 1 174 1 52 1 317 5 296 2 79 1 57 1 7 2 344 5 81 1 228 1 372 1 249 1 247 2 299 1 34 2 348 1 376 2 140 6 278 2 349 2 16 1 40 8 333 3 19 2 284 2 192 1 357 2 358 1 170 5 338 5 49 1 360 1 76 1 93 2 
177 1 341 1 296 1 98 1 322 1 58 1 200 1 372 1 249 1 247 2 34 2 161 1 35 1 278 1 349 1 40 2 310 1 73 1 334 1 284 1 146 1 119 1 88 1 311 1 357 1 170 2 49 1 172 1 
317 1 153 1 36 1 349 1 296 1 40 1 7 1 284 1 357 1 170 1 
184 1 34 2 317 5 376 2 140 10 278 2 333 5 40 5 19 2 344 5 170 5 338 5 49 1 93 2 247 2 
7 1 317 1 228 1 372 1 249 1 360 1 
152 1 52 2 125 1 265 1 127 2 296 2 131 4 5 1 269 1 81 2 271 4 228 4 134 1 372 3 249 3 349 2 40 2 18 1 209 1 86 4 284 2 354 1 357 1 122 1 170 2 216 1 359 2 48 1 360 2 
292 1 177 1 265 1 127 1 341 2 4 1 131 1 99 1 371 1 271 1 9 2 134 1 272 1 200 2 10 1 345 1 204 1 161 2 13 1 233 1 309 1 113 1 86 1 115 1 351 1 310 3 73 3 145 1 354 1 88 2 285 1 48 1 
52 1 317 4 140 4 349 1 296 1 333 2 40 1 7 2 61 1 344 2 284 1 81 1 357 1 170 2 338 2 
64 1 71 1 43 1 
64 1 71 1 43 1 
64 1 71 1 43 1 
53 1 68 1 71 1 257 1 43 1 
129 1 71 1 43 1 
129 1 71 1 43 1 
129 1 71 1 43 1 
71 1 43 1 
364 1 147 1 
250 1 55 4 278 1 99 8 61 1 145 2 334 1 214 3 371 2 146 1 285 4 9 4 356 1 10 2 272 2 124 2 247 1 182 1 339 1 172 1 
32 1 250 1 55 3 278 1 99 6 61 1 334 1 214 2 146 1 285 3 124 2 182 1 247 1 172 1 
375 1 55 2 376 1 278 1 99 4 19 1 145 1 214 2 371 1 285 2 9 2 356 1 10 1 272 1 124 1 93 1 247 1 
299 1 55 3 376 1 278 1 79 2 99 7 19 1 214 2 285 4 356 1 358 1 230 1 124 1 93 1 247 1 
362 1 55 11 79 2 99 23 61 1 371 2 31 1 9 4 10 2 272 2 230 1 182 1 247 3 250 1 376 2 278 3 256 1 19 2 145 2 334 2 214 9 146 1 285 12 356 4 358 2 124 5 93 2 172 2 339 2 
285 1 79 1 99 1 
55 1 358 1 99 1 
184 1 375 1 55 3 376 1 278 1 99 6 19 1 145 1 371 1 214 3 9 2 285 3 356 1 272 1 10 1 124 2 93 1 247 1 
24 1 174 1 55 6 79 1 99 12 57 1 371 1 9 2 272 1 10 1 247 2 299 1 347 1 348 1 376 2 278 2 16 1 19 2 145 1 214 2 285 6 356 1 358 1 124 1 93 2 
334 1 214 2 55 3 146 1 285 3 356 1 278 1 124 1 247 1 99 6 172 1 
250 1 55 1 256 1 99 3 145 1 334 1 214 2 371 1 285 2 9 2 356 1 10 1 272 1 124 1 182 1 172 1 339 1 
55 5 347 1 278 2 99 10 322 1 145 1 334 2 371 1 214 5 146 1 9 2 285 5 356 2 272 1 10 1 124 3 247 2 172 2 
55 2 347 1 376 1 99 2 145 1 371 1 214 1 9 2 356 1 10 1 272 1 247 1 
55 2 347 1 376 1 278 1 99 4 19 1 145 1 214 2 371 1 285 2 9 2 356 1 10 1 272 1 124 1 93 1 247 1 
55 1 347 1 256 1 99 3 145 3 334 1 371 3 214 2 285 2 9 6 356 1 10 3 272 3 149 1 124 1 339 1 172 1 
173 1 55 16 79 4 99 34 61 1 371 5 9 10 272 5 10 5 230 1 182 1 247 5 299 1 250 1 375 1 347 1 376 3 278 5 256 1 143 1 19 3 145 5 334 3 214 12 146 2 337 1 285 18 356 5 358 3 149 1 124 7 93 3 172 3 339 2 
24 1 55 4 79 1 99 8 61 1 371 1 9 2 272 1 10 1 247 1 182 1 299 1 250 1 347 1 278 1 145 1 334 1 214 2 146 1 285 4 358 1 124 2 172 1 
24 1 55 6 79 2 99 11 61 1 371 2 9 4 272 2 10 2 230 1 182 1 247 2 299 1 250 1 375 1 347 1 376 1 278 1 145 2 334 1 214 3 146 1 285 5 356 1 358 1 124 2 93 1 172 1 
24 1 174 1 55 9 79 1 99 19 57 1 61 1 371 3 9 6 272 3 10 3 182 1 247 3 299 1 250 1 375 1 347 1 348 1 376 2 278 3 16 1 19 2 145 3 334 1 214 4 146 1 285 10 356 1 358 1 124 3 93 2 172 1 339 1 
24 1 174 1 55 10 79 1 99 17 57 1 61 1 371 3 9 6 272 3 10 3 182 1 247 3 299 1 250 1 375 1 347 1 348 1 376 2 278 2 16 1 19 1 145 3 334 1 214 5 146 1 285 7 356 2 358 1 124 3 93 2 172 1 339 1 
24 1 55 4 79 1 99 8 61 1 371 1 9 2 272 1 10 1 247 1 182 1 299 1 250 1 347 1 278 1 145 1 334 1 214 2 146 1 285 4 358 1 124 2 172 1 
24 1 174 1 55 6 79 1 99 12 57 1 371 1 9 2 272 1 10 1 247 2 299 1 347 1 348 1 376 2 278 2 16 1 19 2 145 1 214 2 285 6 356 1 358 1 124 1 93 2 
24 1 174 1 55 10 79 1 99 18 57 1 61 1 371 4 9 8 272 4 10 4 182 1 247 3 299 1 250 1 375 1 347 1 348 1 376 2 278 2 16 1 19 1 145 4 334 1 214 5 146 1 285 8 356 2 358 1 124 3 93 2 172 1 339 2 
24 1 174 1 55 9 79 1 99 16 57 1 371 4 9 8 272 4 10 4 247 3 299 1 347 1 348 1 376 3 278 2 16 1 19 2 145 4 214 6 285 7 356 3 358 1 149 1 124 3 93 3 339 2 
250 1 55 3 278 1 99 7 334 3 214 6 146 1 285 4 356 3 124 3 182 2 247 1 172 3 
24 1 174 1 55 10 79 1 99 18 57 1 61 1 371 4 9 8 272 4 10 4 182 1 247 3 299 1 250 1 347 1 348 1 376 2 278 2 16 1 19 1 145 4 334 1 214 4 146 1 285 8 356 1 358 1 149 1 124 3 93 2 172 1 339 2 
198 1 310 1 73 1 88 1 206 1 254 1 345 1 
206 1 254 1 166 1 210 1 198 1 73 1 310 1 102 1 88 1 345 1 312 1 274 1 
32 1 86 1 354 1 265 1 271 1 127 1 134 1 122 1 5 1 131 1 48 1 
204 1 265 1 127 1 233 1 341 1 131 1 86 1 115 1 73 2 310 2 354 1 118 1 88 1 271 1 134 1 200 1 345 1 48 1 
204 2 205 1 265 2 233 1 341 1 131 1 191 1 86 1 115 1 73 2 310 2 354 1 118 1 88 2 271 1 74 1 311 1 134 3 200 2 92 1 345 1 48 1 359 1 
265 2 341 1 131 2 268 1 271 2 134 3 200 2 345 1 204 2 12 1 205 1 233 1 191 1 86 2 310 2 73 2 354 1 88 2 118 1 74 1 311 1 92 1 359 1 48 1 
317 1 265 1 127 1 156 1 131 3 7 1 228 1 271 3 134 4 372 2 249 2 204 1 12 1 17 1 258 1 191 1 86 3 282 1 354 1 74 1 287 1 359 1 48 1 
204 1 12 1 317 1 265 1 127 1 17 1 131 3 258 1 191 1 7 1 86 3 282 1 354 1 271 3 228 1 74 1 134 4 372 2 290 1 48 1 249 2 359 1 
86 1 203 1 354 1 271 1 131 1 48 1 
263 1 203 1 186 1 204 1 126 1 318 1 162 1 265 2 127 2 131 6 370 1 167 1 86 7 227 1 354 2 336 1 271 7 134 3 48 3 171 1 150 1 
292 1 55 3 341 1 4 2 99 6 61 1 9 4 200 1 10 2 345 2 247 1 105 1 204 1 250 1 308 1 113 1 115 1 351 2 73 2 310 2 354 1 214 2 355 1 118 1 123 1 124 2 172 1 265 1 131 1 371 2 271 1 134 1 272 2 183 1 182 1 233 1 278 1 236 1 86 1 145 2 334 1 336 1 88 1 146 1 285 3 48 1 194 1 
317 1 153 1 127 1 365 1 296 2 196 1 131 1 321 1 7 1 271 1 228 2 134 2 372 3 249 3 36 1 302 1 349 2 40 1 17 1 258 1 86 1 209 1 284 2 282 1 357 2 170 1 290 1 360 1 
203 1 204 1 162 1 265 1 17 1 131 2 86 2 354 1 336 1 271 2 45 1 134 2 48 2 
12 1 265 1 127 1 131 4 5 1 86 4 354 1 271 4 336 1 122 1 134 1 21 1 48 1 
263 1 33 1 204 1 265 1 132 1 131 2 167 1 86 2 354 1 271 2 134 1 46 1 359 1 48 2 
329 1 86 1 96 1 354 1 271 1 127 1 78 1 112 1 131 1 48 1 
83 1 86 2 354 1 265 1 227 1 271 2 336 1 134 1 131 2 48 1 370 1 
126 1 265 2 127 1 5 1 131 4 86 5 227 1 354 2 271 5 336 1 122 1 134 3 21 1 359 1 48 2 150 1 
220 1 265 2 127 1 5 1 131 4 86 5 227 1 354 2 271 5 336 1 122 1 134 3 21 1 359 1 48 2 150 1 
204 1 265 1 127 1 233 1 341 1 131 1 268 1 86 1 73 2 310 2 354 1 118 1 88 1 271 1 134 1 200 1 345 1 48 1 
263 1 186 1 204 1 162 1 265 1 131 1 167 1 86 1 354 1 271 1 134 1 359 1 48 2 
245 1 165 1 39 1 345 1 291 1 
317 1 205 1 139 1 302 1 39 2 165 2 7 1 72 1 282 1 244 1 116 1 325 1 311 1 245 2 92 1 345 1 372 2 249 2 291 1 
39 1 305 1 73 1 310 1 335 1 88 1 229 1 245 1 291 1 
72 1 244 1 291 1 
32 1 260 1 154 1 169 1 
187 1 176 1 260 1 154 1 295 1 169 1 23 1 
51 1 295 1 121 1 
160 1 176 1 187 3 295 3 154 1 15 1 97 1 42 2 27 1 260 1 169 1 23 1 
330 1 187 2 176 1 260 1 154 1 295 2 169 1 151 1 23 1 
313 1 96 1 187 1 176 1 295 1 289 1 112 1 248 1 97 1 23 1 
187 1 176 1 260 1 154 1 295 1 97 1 23 1 
187 1 176 1 154 2 295 1 169 1 97 1 23 1 
108 1 176 2 187 2 154 1 295 2 97 1 283 1 324 1 260 1 23 2 
361 1 313 1 77 1 176 1 187 3 154 1 295 3 97 1 60 1 260 1 169 1 23 1 151 2 
176 1 187 2 96 1 154 1 295 2 78 1 130 1 112 2 97 1 260 1 62 1 169 1 289 1 23 1 151 1 
340 1 361 1 313 1 176 2 187 4 330 1 154 1 295 4 97 1 260 1 169 1 23 2 151 2 
187 1 176 1 260 1 154 1 295 1 169 1 97 1 23 1 
361 1 313 1 160 1 187 4 176 1 154 2 295 4 42 1 27 1 260 2 169 2 151 2 23 1 202 1 
300 1 176 1 187 2 154 1 295 2 97 1 225 1 260 1 169 1 23 1 66 1 151 1 
160 2 176 1 187 3 295 3 154 1 97 1 42 2 27 1 270 1 260 1 169 1 23 1 
260 2 3 1 241 2 75 1 
187 1 176 1 252 1 295 1 97 1 23 1 
60 1 187 2 176 1 260 1 154 1 295 2 169 1 97 1 151 1 23 1 
189 1 
187 1 176 1 260 1 154 1 295 1 169 1 97 1 23 1 
176 1 187 3 295 3 154 1 97 1 42 1 60 1 260 1 169 1 151 1 23 1 
313 1 361 1 187 1 295 1 151 1 
260 1 154 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 2 152 9 155 1 5 1 159 1 9 1 222 9 317 1 63 1 163 1 84 1 15 1 141 4 254 2 228 3 229 6 43 1 309 2 371 1 284 1 209 1 115 2 356 5 375 2 174 1 215 2 149 2 357 1 
29 2 152 9 155 1 5 1 159 1 9 1 222 9 317 1 63 1 163 1 84 1 15 1 141 4 254 2 228 3 229 6 43 1 309 2 371 1 284 1 209 1 115 2 356 5 375 2 215 2 174 1 149 2 357 1 
29 2 152 10 155 1 5 1 159 1 9 1 222 10 317 1 63 1 163 1 84 1 15 1 141 5 254 2 228 4 229 7 43 1 309 2 371 1 284 1 209 1 115 2 356 6 375 2 215 2 174 1 149 2 357 1 
29 2 152 7 155 1 5 1 159 1 9 1 222 7 63 1 163 1 84 1 15 1 141 3 254 2 228 2 229 4 43 1 309 1 371 1 284 1 209 1 115 2 356 4 375 2 215 2 174 1 149 2 357 1 
141 2 254 1 228 1 152 4 229 3 309 2 371 1 115 1 159 1 356 3 222 4 375 1 317 1 149 1 215 1 63 1 84 1 15 1 
29 1 254 1 152 2 192 1 230 1 155 1 371 1 115 1 259 1 356 1 222 2 375 1 149 1 84 1 357 1 15 1 
29 1 141 1 152 3 228 1 229 1 371 1 115 2 356 2 222 3 375 2 163 1 84 1 15 1 
29 1 152 9 56 1 159 1 272 1 9 1 222 9 317 1 63 1 163 1 84 1 15 1 141 4 254 1 228 3 229 7 309 2 371 1 209 1 115 2 356 5 375 2 215 1 149 1 
29 1 152 9 56 1 159 1 272 1 9 1 222 9 317 1 63 1 163 1 84 1 15 1 141 4 254 1 228 3 229 7 309 2 371 1 209 1 115 2 356 5 375 2 215 1 149 1 
265 1 17 1 181 1 
17 1 12 2 221 1 
35 2 160 2 220 2 99 2 101 1 348 2 334 1 304 2 
219 1 332 1 220 2 99 2 101 1 153 1 315 1 333 1 291 1 334 1 335 1 32 1 201 2 105 1 35 2 223 1 160 3 301 1 37 1 304 2 346 1 193 1 348 3 307 1 256 1 68 2 233 1 285 1 312 1 321 1 122 1 289 1 25 1 73 2 290 1 126 2 378 2 
35 1 160 1 106 1 220 1 99 1 101 1 348 1 169 1 51 1 304 1 
54 1 17 1 181 1 200 1 348 1 142 1 169 1 57 1 20 1 337 1 260 1 35 1 160 1 248 1 
99 1 220 1 17 1 181 1 200 1 348 1 142 1 169 1 57 1 20 1 260 2 35 1 160 1 248 2 304 1 
260 1 248 1 130 1 58 1 70 1 
260 2 48 1 17 1 181 1 248 2 58 1 70 1 27 1 
260 1 248 1 70 1 
101 1 99 1 220 1 348 1 169 1 58 1 60 1 260 1 35 1 106 1 160 1 248 1 51 1 304 1 
17 1 
260 2 48 1 17 1 181 1 248 2 26 1 58 1 70 1 
190 2 280 2 55 1 17 1 181 1 128 1 144 1 44 1 58 2 158 1 46 1 70 2 47 1 260 5 119 2 48 1 148 1 248 5 262 1 
329 1 220 1 281 1 193 1 291 1 348 2 256 1 233 1 201 1 312 1 321 1 35 1 160 2 289 1 73 1 301 1 378 1 37 1 108 1 304 1 
265 1 334 1 
319 1 99 1 220 1 348 2 334 2 35 2 160 2 302 1 304 1 
329 1 292 1 354 1 
193 1 291 1 348 1 256 1 334 1 233 1 201 1 321 1 312 1 160 1 289 1 73 1 365 1 301 1 378 1 37 1 
319 1 54 1 220 4 99 1 281 2 41 1 348 5 334 1 296 1 35 5 160 5 247 1 304 4 108 1 
35 2 160 2 36 1 220 2 348 2 169 1 51 1 304 2 
35 3 160 3 99 1 220 3 281 1 348 3 334 1 304 3 
35 1 160 1 220 1 348 1 169 1 51 1 304 1 
319 1 35 1 160 1 220 1 99 1 348 1 169 1 302 1 304 1 
219 1 332 1 315 1 99 2 220 3 101 1 333 1 200 1 291 1 334 1 57 1 32 1 201 1 35 3 160 4 248 1 301 1 37 1 304 3 108 1 319 1 110 1 346 1 87 1 281 1 193 1 142 1 348 4 307 1 256 1 68 1 233 1 169 1 20 1 285 1 312 1 321 1 260 1 289 1 25 1 73 1 290 1 126 2 378 1 
35 2 54 1 160 2 220 1 281 1 41 1 348 2 334 1 304 1 
319 1 99 1 220 3 17 1 281 2 102 1 87 1 200 1 348 3 142 1 57 1 169 1 20 1 260 1 35 3 160 3 248 1 108 1 304 3 
319 1 329 1 99 1 220 2 281 1 292 1 348 2 35 2 160 2 304 2 
291 1 193 1 348 1 256 1 334 1 233 1 201 1 321 1 312 1 160 1 289 1 73 1 301 1 378 1 37 1 
154 1 291 1 193 1 348 1 256 1 113 1 334 1 233 1 201 1 312 1 160 1 73 1 301 1 378 1 37 1 
241 1 329 2 219 1 98 1 332 1 333 1 292 2 32 1 33 1 103 1 245 1 105 2 366 1 167 1 346 2 68 4 69 1 147 1 285 1 257 1 354 2 120 1 290 1 126 2 
35 1 160 1 220 1 36 1 200 1 348 1 169 1 304 1 
325 1 268 1 
325 1 268 1 
344 1 90 1 
344 1 90 1 
344 1 90 1 
325 1 13 1 268 1 
325 1 13 1 268 1 
344 1 325 2 238 1 90 1 342 1 268 2 
28 1 325 1 268 1 
325 1 13 1 268 1 
325 1 124 1 268 1 
325 1 124 1 268 1 
325 1 124 1 268 1 
28 1 359 1 220 2 362 1 334 1 268 1 132 1 59 1 203 1 35 2 160 2 248 1 14 1 304 2 66 1 348 2 92 1 235 1 260 1 261 1 325 1 326 1 125 1 377 1 
178 1 330 1 359 2 111 1 17 1 194 1 362 2 145 1 211 1 235 3 268 2 260 2 322 2 325 2 326 2 248 2 238 1 125 2 377 1 
254 1 149 1 215 1 
254 1 149 1 259 1 
196 1 133 1 215 2 149 3 308 1 259 1 
196 1 133 1 215 1 149 2 177 1 259 1 
196 1 133 2 215 1 149 2 259 1 
98 1 55 3 181 1 58 4 4 1 221 1 295 1 203 1 245 1 248 5 12 3 340 1 14 1 251 2 190 1 280 1 167 1 17 2 350 1 144 2 92 1 147 1 70 1 93 1 171 2 119 1 260 5 48 1 121 2 148 1 376 1 150 1 
98 3 55 8 181 1 130 5 58 7 4 3 79 5 221 3 245 3 188 1 248 9 12 9 340 2 251 6 190 2 280 2 167 3 17 5 320 1 144 6 168 1 92 4 147 3 70 6 93 1 355 1 260 9 119 2 48 1 121 6 148 1 376 2 50 1 262 1 379 1 
98 1 55 3 181 1 58 2 4 1 221 2 295 1 245 1 248 3 12 4 340 1 251 2 190 1 280 1 167 1 17 3 144 2 92 1 147 1 171 1 119 1 260 3 121 2 376 1 150 1 262 1 
98 2 55 5 181 1 58 3 4 2 221 3 295 1 245 2 248 4 12 7 340 1 251 4 190 1 280 1 167 2 17 4 320 1 144 4 168 1 92 2 147 2 171 2 119 1 260 4 121 4 376 1 50 1 262 1 150 1 
265 1 193 1 164 1 
370 1 193 1 
305 1 
193 1 37 1 312 1 
208 1 193 1 
193 1 312 1 
360 1 193 3 162 1 164 2 37 1 312 1 
241 3 98 1 346 3 347 1 68 7 195 1 45 1 147 1 257 2 202 1 116 1 353 2 118 1 104 1 105 4 189 1 138 1 
241 3 98 1 346 3 347 1 68 7 195 1 45 1 147 1 257 2 202 1 116 1 353 2 118 1 104 1 105 4 189 1 138 1 
241 3 98 1 346 3 347 1 68 7 195 1 91 1 45 1 147 1 257 2 202 1 116 1 353 2 118 1 104 1 105 4 189 1 138 1 
241 10 219 1 98 4 332 1 32 1 202 1 4 3 104 2 245 3 105 16 184 1 189 5 138 1 165 4 167 3 253 1 346 15 282 3 347 1 351 1 68 31 195 2 45 2 285 1 147 4 257 5 353 3 116 2 118 1 288 1 94 1 126 2 313 1 380 1 
241 4 219 2 98 1 332 2 32 2 202 1 104 1 185 1 105 5 184 1 189 1 346 4 347 1 232 1 68 9 195 1 45 1 147 1 285 2 257 3 353 2 116 1 118 1 126 4 
29 1 30 1 97 1 152 2 291 1 201 1 222 2 250 1 84 1 15 1 254 1 345 1 229 1 308 1 371 1 233 1 372 1 311 1 115 1 259 1 356 1 375 1 215 1 149 2 73 1 49 1 239 1 378 1 127 1 96 1 
29 1 30 1 152 3 291 1 201 1 222 3 250 1 15 1 39 1 254 1 345 1 229 2 308 1 371 1 114 1 233 1 372 1 311 1 115 1 259 1 286 1 356 1 375 1 215 1 149 2 73 1 49 1 239 1 378 1 127 1 
29 1 30 1 152 2 291 1 201 1 222 2 250 1 15 1 39 1 254 1 345 1 229 2 308 1 371 1 233 1 372 1 259 1 286 1 356 1 149 2 215 1 73 1 49 1 239 1 378 1 
29 2 30 2 152 1 291 1 201 1 182 1 10 1 222 1 137 1 193 1 256 1 114 1 210 1 233 1 372 2 115 1 312 1 374 1 375 1 73 1 239 2 378 1 358 1 
29 1 30 1 97 1 152 1 291 1 201 1 222 1 250 1 84 1 254 1 345 1 308 1 233 1 372 1 311 1 115 1 259 1 286 1 375 1 215 1 149 2 73 1 49 1 239 1 378 1 127 1 
373 1 
54 1 55 2 200 1 291 1 57 1 3 1 201 2 243 4 337 1 298 2 160 1 248 5 249 2 12 2 341 2 206 1 64 2 16 1 166 1 17 2 256 2 348 1 169 1 20 1 312 1 70 6 260 5 119 1 71 1 73 2 217 1 74 2 31 1 181 1 129 2 77 1 182 1 131 1 221 2 183 2 186 1 35 1 367 1 190 1 280 1 40 1 193 1 142 1 144 2 233 1 374 1 48 3 148 1 376 1 378 2 
54 1 200 1 77 1 57 1 243 2 131 1 337 1 35 1 160 1 248 3 249 1 206 1 16 1 40 1 142 1 348 1 169 1 20 1 70 2 260 3 48 1 26 1 
54 1 181 1 200 1 77 1 57 1 243 3 131 1 337 1 183 1 35 1 160 1 248 3 206 1 16 1 40 1 17 1 142 1 348 1 169 1 20 1 70 1 260 3 48 1 26 1 
54 1 181 1 200 1 77 1 57 1 243 3 131 1 337 1 183 1 35 1 160 1 248 3 249 1 206 1 16 1 40 1 17 1 142 1 348 1 169 1 20 1 70 2 260 3 48 1 26 1 74 1 
54 1 55 1 200 1 57 1 3 1 243 6 337 1 160 1 298 2 299 1 248 5 249 4 206 1 341 2 64 2 16 1 67 1 17 5 348 1 169 1 20 1 352 1 70 7 260 5 119 1 175 1 26 1 74 4 180 1 31 1 181 5 129 2 77 1 131 1 221 2 183 4 35 1 190 1 40 1 280 1 142 1 144 1 48 3 148 1 
54 1 55 1 200 1 3 1 57 1 243 4 337 1 160 1 298 2 248 4 249 2 12 2 206 1 341 2 64 2 16 1 17 2 348 1 169 1 20 1 70 4 260 4 119 1 74 2 31 1 181 1 129 2 77 1 131 1 221 2 183 2 35 1 367 1 190 1 280 1 40 1 142 1 144 1 48 2 148 1 
54 1 180 1 31 1 55 1 181 1 129 2 200 1 77 1 3 1 57 1 243 4 131 1 221 2 183 2 337 1 35 1 298 2 160 1 248 4 249 2 341 2 206 1 64 2 16 1 190 1 280 1 40 1 17 1 142 1 348 1 144 1 169 1 20 1 352 1 70 4 260 4 119 1 48 2 148 1 175 1 74 2 
54 1 180 1 31 1 55 1 181 1 129 2 200 1 77 1 3 1 57 1 243 4 131 1 221 2 183 2 337 1 35 1 298 2 160 1 248 4 249 2 341 2 206 1 64 2 16 1 190 1 280 1 40 1 17 1 142 1 348 1 144 1 169 1 20 1 352 1 70 4 260 4 119 1 48 2 148 1 175 1 74 2 
54 1 31 1 55 1 181 1 200 1 77 1 57 1 243 4 131 1 7 1 183 2 337 1 35 1 298 2 160 1 248 4 249 2 12 2 341 2 206 1 278 2 318 2 16 1 190 1 280 1 40 1 17 1 18 1 142 1 348 1 144 1 169 1 20 1 70 4 212 1 260 4 119 1 48 2 148 1 175 1 74 2 
180 1 54 1 31 1 55 1 181 1 129 2 200 1 77 1 3 1 57 1 243 5 131 1 221 2 337 1 183 3 35 1 298 2 160 1 248 4 249 3 341 2 206 1 64 2 16 1 190 1 280 1 40 1 67 1 17 1 142 1 348 1 144 1 169 1 20 1 352 1 70 5 119 1 260 4 48 2 148 1 175 1 74 3 
180 1 54 1 31 1 55 1 181 1 129 2 200 1 77 1 3 1 57 1 243 5 131 1 221 2 337 1 183 3 35 1 298 2 160 1 248 4 249 3 341 2 206 1 64 2 16 1 190 1 280 1 40 1 67 1 17 1 142 1 348 1 144 1 169 1 20 1 352 1 70 5 119 1 260 4 48 2 148 1 175 1 74 3 
54 1 55 1 200 1 57 1 243 4 337 1 160 1 298 2 248 4 249 2 12 2 206 1 341 2 16 1 17 1 18 1 348 1 169 1 20 1 70 4 260 4 119 1 74 2 31 1 181 1 77 1 131 1 183 2 35 1 278 2 318 2 367 1 190 1 280 1 40 1 142 1 144 1 48 2 148 1 
241 2 329 1 219 1 265 1 98 1 346 3 332 1 333 1 347 1 292 1 68 6 334 2 195 1 32 1 45 1 147 1 257 2 285 1 202 1 353 1 354 1 33 1 118 1 105 3 290 1 126 2 
241 2 179 1 329 11 219 2 98 1 332 2 333 1 292 4 334 1 335 1 32 2 4 2 245 2 105 8 161 1 189 1 83 1 165 3 140 1 167 1 346 6 282 3 68 14 257 1 285 2 147 2 354 11 173 1 288 1 94 1 25 1 290 2 126 4 
179 1 219 1 220 1 332 1 333 1 291 1 292 1 334 1 201 1 32 1 335 1 364 1 35 1 105 1 160 2 365 1 301 1 37 1 304 1 108 1 346 1 281 1 193 1 256 1 348 2 68 2 233 1 285 1 312 1 321 1 324 1 289 1 73 1 25 1 290 1 126 2 378 1 328 1 
241 8 329 7 98 3 332 3 333 3 291 2 292 7 334 2 335 1 201 3 202 1 4 2 245 2 105 10 160 3 301 2 108 1 304 1 65 2 167 2 346 10 347 1 256 1 348 3 68 20 257 4 353 1 312 2 354 7 118 1 25 1 73 3 126 6 179 1 219 3 220 1 315 2 266 2 76 1 32 3 271 2 35 1 189 4 37 2 281 1 88 2 193 2 195 1 233 2 45 1 285 3 147 3 321 2 286 1 323 1 289 2 237 1 290 3 378 3 
264 1 219 2 220 1 332 2 333 2 291 2 293 1 201 7 32 2 335 1 182 1 33 1 274 1 35 1 105 1 134 1 160 1 225 1 304 1 346 1 281 1 193 3 348 1 256 2 143 1 68 2 233 2 285 2 170 1 312 2 286 1 374 1 122 2 73 8 25 1 290 2 126 4 378 8 96 1 
241 1 179 1 329 1 219 1 98 1 220 1 99 1 332 1 333 1 292 1 32 1 4 1 245 1 35 1 105 1 160 1 304 1 319 1 167 1 346 2 231 1 348 1 68 3 257 1 285 1 147 1 354 1 290 1 126 2 
241 1 329 1 219 1 332 1 333 1 292 1 68 2 32 1 285 1 147 1 354 1 33 1 103 1 245 1 105 2 189 1 290 1 126 2 
241 1 329 1 219 1 167 1 98 1 332 1 346 2 333 1 292 1 68 2 32 1 257 1 285 1 354 1 33 1 120 1 290 1 126 2 
241 2 329 2 167 1 219 1 98 1 346 2 332 1 333 1 292 2 68 4 32 1 257 1 285 1 4 1 147 1 354 2 33 1 245 1 105 2 189 1 290 1 126 2 
241 1 329 1 219 1 332 1 333 1 292 1 68 2 32 1 285 1 147 1 170 1 354 1 103 1 245 1 105 2 189 1 290 1 126 2 
241 1 329 1 219 1 167 1 98 1 332 1 346 2 333 1 292 1 68 2 32 1 257 1 285 1 170 1 354 1 120 1 290 1 126 2 
241 2 329 2 167 1 219 1 98 1 346 2 332 1 333 1 292 2 68 4 32 1 257 1 285 1 4 1 147 1 170 1 354 2 245 1 105 2 189 1 290 1 126 2 
241 2 329 2 167 1 219 1 98 1 346 2 332 1 333 1 292 2 68 4 32 1 257 1 285 1 4 1 147 1 354 2 245 1 105 2 189 1 290 1 126 2 
219 1 315 1 332 1 333 1 291 1 334 1 335 1 201 1 32 1 105 1 160 1 301 1 37 1 346 1 193 1 256 1 348 1 68 2 233 1 285 1 312 1 321 1 289 1 73 1 25 1 290 1 126 2 378 1 
219 1 332 1 154 1 333 1 291 1 334 1 335 1 201 1 32 1 269 1 105 1 160 1 301 1 37 1 346 1 193 1 256 1 348 1 68 2 113 1 233 1 285 1 312 1 73 1 25 1 290 1 126 2 378 1 
241 2 179 1 329 2 167 1 219 1 98 1 346 2 332 1 333 1 292 2 68 4 32 1 257 1 285 1 4 1 147 1 354 2 245 1 105 2 189 1 290 1 126 2 
241 2 329 2 219 1 98 1 315 1 332 1 333 1 291 1 292 2 201 1 32 1 4 1 245 1 105 2 160 1 189 1 301 1 37 1 167 1 65 1 346 2 193 1 348 1 68 4 233 1 257 1 147 1 285 1 321 1 312 1 354 2 289 1 73 1 290 1 126 2 378 1 96 1 
241 1 179 1 329 1 219 1 98 1 220 1 99 1 332 1 2 1 333 1 292 1 32 1 4 1 245 1 35 1 105 2 160 1 189 1 304 1 319 1 167 1 346 1 348 1 68 3 285 1 147 1 354 1 290 1 126 2 
53 1 241 4 242 1 219 2 98 2 332 2 100 2 32 2 4 2 62 2 245 2 185 1 105 6 82 1 189 2 205 1 167 2 346 6 42 1 68 12 257 2 285 2 147 2 287 1 126 4 176 1 
53 1 219 1 98 1 332 1 100 1 32 1 4 1 62 2 245 1 185 1 105 4 82 1 167 1 346 4 42 2 68 8 285 1 147 1 287 1 126 2 176 2 
53 1 241 1 219 2 98 1 332 2 100 1 32 2 4 1 62 2 245 1 185 1 105 4 82 1 189 1 205 1 167 1 346 4 42 1 68 8 285 2 147 1 287 1 72 1 126 4 176 2 
53 1 241 2 219 2 98 1 332 2 100 1 32 2 4 1 62 2 245 1 185 1 105 4 82 1 189 1 205 1 167 1 346 4 42 1 68 8 257 1 285 2 147 1 287 1 72 1 126 4 176 2 
53 1 241 4 219 1 98 3 100 1 332 1 32 1 4 1 202 2 62 2 245 1 185 1 105 10 189 1 82 1 167 1 346 8 42 1 347 2 68 18 195 2 45 2 285 1 257 3 147 3 353 2 287 1 118 2 126 2 176 1 
218 1 359 1 111 1 325 1 326 1 362 1 238 1 125 1 211 1 268 1 
28 1 261 1 
240 1 52 1 359 1 214 1 325 1 326 1 362 1 125 1 268 1 
11 1 13 1 
191 1 124 1 342 1 
178 1 330 1 359 1 111 1 17 1 362 1 145 1 211 1 235 2 268 1 260 1 322 1 325 1 248 1 326 1 238 1 377 1 125 1 
178 1 330 1 359 1 111 1 17 1 362 1 145 1 211 1 235 2 268 1 260 1 322 1 325 1 248 1 326 1 238 1 377 1 125 1 
178 1 330 1 359 1 111 1 17 1 362 1 145 1 211 1 235 2 268 1 260 1 322 1 325 1 248 1 326 1 238 1 377 1 125 1 
11 1 13 1 342 1 
11 1 13 1 342 1 
191 1 124 1 
191 1 124 1 342 1 
66 1 132 1 
28 1 330 1 359 1 220 2 362 1 334 1 58 1 268 1 132 1 59 1 316 1 203 1 35 2 160 2 248 1 14 1 304 2 66 1 348 2 92 1 235 1 260 1 322 1 261 1 325 1 326 1 125 1 
179 1 264 1 219 1 332 1 333 1 361 1 291 1 156 1 32 1 335 1 201 2 8 1 35 2 105 1 160 2 346 1 193 1 348 2 143 1 68 2 233 1 285 1 312 1 22 1 122 2 73 2 25 1 290 1 95 1 126 2 378 2 
30 1 109 1 254 1 345 1 291 1 283 1 308 1 233 1 201 2 311 1 259 1 286 1 215 1 149 2 73 2 378 2 136 1 250 1 96 1 
30 1 109 1 254 1 345 1 291 1 308 1 233 1 201 1 311 1 259 1 286 1 215 1 149 2 216 1 73 1 378 1 250 1 
30 1 291 1 193 1 256 1 283 1 233 1 210 1 201 1 182 1 312 1 374 1 276 1 73 1 378 1 
30 1 109 1 254 1 345 1 291 1 283 1 308 1 233 1 201 1 311 1 259 1 286 1 215 1 149 2 73 1 378 1 136 1 250 1 
107 1 
265 1 55 1 17 1 181 1 144 1 44 1 158 1 
55 1 181 1 129 1 3 1 221 1 248 1 12 1 64 1 190 1 280 1 17 2 144 1 70 1 119 1 260 1 48 1 148 1 
98 2 55 9 291 4 57 2 201 3 4 2 6 1 158 1 244 2 245 2 248 5 12 12 164 2 343 2 251 6 166 1 306 1 167 2 208 2 17 8 112 1 256 1 258 1 312 3 23 2 70 5 119 4 260 5 121 6 73 3 181 2 360 1 78 2 221 6 271 2 275 1 277 2 224 2 37 3 279 2 190 4 280 4 370 3 193 10 44 1 144 8 233 3 147 2 48 3 148 4 376 2 327 2 378 3 96 1 
98 2 55 8 181 2 294 1 4 2 221 3 61 1 273 1 245 2 246 1 248 1 12 6 165 1 251 5 166 1 227 1 190 2 280 2 167 2 255 1 17 5 282 1 144 5 147 2 70 1 23 2 260 1 119 2 48 1 288 1 121 5 148 2 24 1 376 1 327 1 
180 1 98 1 55 2 101 1 99 1 220 1 363 1 60 1 35 1 160 1 106 1 248 1 304 1 190 1 280 1 348 1 144 2 169 1 195 1 45 1 147 2 23 2 119 1 260 1 118 1 148 1 327 1 51 1 
190 1 280 1 55 1 181 1 17 1 44 1 144 1 158 1 119 1 148 1 
167 2 98 2 55 5 17 5 144 5 4 2 147 2 23 2 221 5 271 1 245 2 121 5 327 1 12 10 251 5 
260 1 48 1 17 1 181 1 248 1 70 1 
55 2 291 1 201 4 182 1 336 1 6 2 186 1 248 3 226 1 190 2 166 2 280 2 112 1 193 1 256 2 144 2 233 1 312 1 70 4 374 1 119 2 260 3 48 2 148 1 73 4 376 2 262 1 217 1 378 4 
219 1 332 1 220 2 99 2 101 1 315 1 333 1 291 1 334 1 201 1 32 1 35 2 160 3 301 1 37 1 304 2 346 1 193 1 256 1 348 3 307 1 68 1 233 1 285 1 321 1 312 1 289 1 25 1 73 1 290 1 126 2 378 1 
190 1 166 1 280 1 55 1 181 2 17 4 144 2 353 1 221 2 119 1 121 2 148 1 376 1 12 4 251 2 
359 1 125 1 270 1 
359 1 125 1 270 1 
263 1 359 1 111 1 125 1 132 1 
359 1 125 1 270 1 
359 1 89 1 125 1 
359 1 89 1 125 1 
359 1 89 1 125 1 
359 1 125 1 
325 1 268 1 
241 3 219 2 98 1 346 4 332 2 347 1 68 8 195 1 32 2 45 1 147 1 257 2 285 2 202 1 353 1 118 1 105 4 184 1 189 1 126 4 
241 2 118 1 105 3 265 1 98 1 346 3 347 1 68 6 195 1 45 1 147 1 257 2 202 1 353 1 
241 2 167 1 219 1 98 1 346 2 332 1 68 4 32 1 257 1 285 1 4 1 147 1 245 1 338 1 105 2 189 1 126 2 
241 2 167 1 98 1 346 4 282 1 68 7 257 1 4 1 147 1 245 1 288 1 105 3 94 1 189 1 165 2 
241 9 219 2 98 3 332 2 32 2 202 1 4 2 245 2 105 11 184 2 189 4 339 1 165 2 140 1 167 2 346 12 282 2 347 1 68 23 195 2 45 2 147 3 257 5 285 2 353 1 173 1 118 1 94 1 126 4 
346 1 68 1 165 1 
105 1 282 1 68 1 
241 3 219 1 167 1 98 1 332 1 346 3 68 6 32 1 285 1 4 1 147 1 257 2 271 1 245 1 338 1 105 3 189 1 126 2 
241 2 219 1 98 2 332 1 32 1 294 1 4 2 245 2 273 1 185 1 105 6 246 1 189 1 165 1 167 2 255 1 346 6 282 1 68 12 285 1 147 2 257 1 288 1 24 1 126 2 
241 2 98 1 346 3 68 6 195 1 45 1 147 1 257 1 118 1 105 3 189 1 
241 2 219 1 346 2 332 1 347 1 68 3 195 1 45 1 32 1 257 1 285 1 202 1 105 1 184 1 189 1 339 1 126 2 
241 5 219 1 98 2 332 1 346 5 68 10 195 2 32 1 45 2 285 1 363 1 257 3 147 2 118 1 185 1 105 5 189 2 126 2 
241 1 219 1 332 1 68 2 32 1 285 1 147 1 245 1 185 1 105 2 189 1 126 2 
241 2 167 1 219 1 98 1 346 2 332 1 68 4 32 1 257 1 285 1 4 1 147 1 245 1 185 1 105 2 189 1 126 2 
241 2 219 3 346 2 332 3 68 3 195 1 32 3 45 1 285 3 257 1 184 1 185 1 105 1 189 1 339 1 205 1 126 6 
241 12 219 5 98 5 332 5 32 5 202 1 4 3 245 3 184 2 338 1 185 1 105 16 189 5 339 1 205 1 165 4 253 1 167 3 346 18 282 3 347 1 68 34 195 3 45 3 285 5 147 5 257 7 353 1 118 2 288 1 94 1 313 1 126 10 380 1 
241 2 219 1 98 1 332 1 32 1 202 1 185 1 105 4 165 1 346 4 282 1 347 1 68 8 195 1 45 1 147 1 285 1 257 2 353 1 118 1 288 1 24 1 126 2 
241 3 219 2 98 1 332 2 32 2 202 1 4 1 245 1 185 1 338 1 105 6 189 1 165 2 346 5 282 1 347 1 68 11 195 1 45 1 257 2 285 2 147 2 353 1 118 1 288 1 94 1 24 1 126 4 
241 4 219 3 98 3 332 3 32 3 202 1 294 1 4 2 273 1 245 2 338 1 185 1 105 9 184 1 246 1 189 1 165 1 167 2 255 1 346 10 282 1 347 1 68 19 195 1 45 1 285 3 147 3 257 3 353 1 118 1 288 1 24 1 126 6 
241 5 219 3 98 2 332 3 32 3 202 1 294 1 4 2 245 2 273 1 338 1 184 1 185 1 105 10 246 1 189 2 165 1 167 1 255 1 346 7 282 1 347 1 68 17 195 1 45 1 285 3 147 3 257 3 353 1 118 1 288 1 24 1 126 6 
241 2 219 1 98 1 332 1 32 1 202 1 185 1 105 4 165 1 346 4 282 1 347 1 68 8 195 1 45 1 147 1 285 1 257 2 353 1 118 1 288 1 24 1 126 2 
241 2 219 1 98 2 332 1 32 1 294 1 4 2 245 2 273 1 185 1 105 6 246 1 189 1 165 1 167 2 255 1 346 6 282 1 68 12 285 1 147 2 257 1 288 1 24 1 126 2 
241 5 219 4 98 2 332 4 32 4 202 1 294 1 4 2 273 1 245 2 338 1 185 1 105 10 184 2 246 1 189 2 165 1 167 1 255 1 346 8 282 1 347 1 68 18 195 1 45 1 285 4 147 3 257 3 353 1 118 1 288 1 24 1 126 8 
241 6 219 4 98 2 332 4 32 4 294 1 4 3 273 1 245 3 185 1 105 9 184 2 246 1 189 3 205 1 165 1 167 2 255 1 346 7 282 1 68 16 285 4 147 3 257 3 288 1 24 1 126 8 
241 6 98 1 346 4 347 2 68 7 195 3 45 3 202 1 257 3 147 1 118 1 105 3 189 3 
241 4 219 4 98 2 332 4 32 4 202 1 294 1 4 2 273 1 245 2 185 1 105 10 184 2 246 1 189 1 205 1 165 1 167 1 255 1 346 8 282 1 347 1 68 18 195 1 45 1 285 4 147 3 257 3 353 1 118 1 288 1 24 1 126 8 
204 1 35 1 54 1 160 1 41 1 348 1 334 1 
85 1 139 1 151 1 54 1 41 1 348 1 334 1 146 1 204 1 35 1 160 1 252 1 
374 1 265 1 291 1 193 1 73 1 256 1 233 1 378 1 182 1 201 1 312 1 
220 1 281 1 193 1 291 1 348 2 256 1 334 1 233 1 201 1 312 1 321 1 35 1 160 2 73 1 301 1 378 1 37 1 304 1 
220 1 200 1 291 1 334 1 201 1 6 1 35 2 160 2 301 1 37 2 279 1 304 2 281 1 208 1 193 3 348 2 233 1 169 1 20 1 321 1 312 2 73 1 378 1 
220 1 154 1 200 1 291 1 334 1 201 2 6 1 35 2 160 2 301 1 37 2 279 1 304 2 281 1 208 1 193 3 348 2 233 1 169 1 310 1 20 1 312 2 73 2 378 2 
181 1 291 1 57 1 201 3 6 1 187 1 248 2 135 1 164 1 37 1 279 1 370 1 208 1 17 1 193 4 256 1 233 1 310 1 312 1 70 1 260 2 73 3 378 3 
17 1 181 1 208 1 370 1 291 1 193 4 256 1 57 1 233 1 310 1 201 3 312 1 6 1 70 1 260 2 248 2 73 3 378 3 224 1 37 1 164 1 279 1 
274 1 291 1 73 1 233 1 378 1 201 1 
264 1 360 1 193 3 291 3 256 2 293 1 349 1 233 2 201 6 312 2 286 1 274 1 197 1 34 1 122 1 134 1 73 7 378 7 37 1 225 1 96 1 
241 2 179 1 329 1 219 2 98 1 220 1 332 2 315 1 333 2 291 1 292 1 334 2 32 2 201 1 202 1 105 3 35 1 160 2 301 1 37 1 304 1 65 1 346 3 281 1 347 1 193 1 88 1 348 2 68 6 195 1 233 1 45 1 147 1 257 2 285 2 353 1 312 1 321 1 354 1 118 1 289 1 73 1 290 2 95 1 126 4 378 1 96 1 
55 1 181 1 78 1 57 1 201 1 58 1 158 1 244 1 248 3 277 1 224 1 164 1 190 2 280 2 17 1 370 1 112 1 193 2 256 1 144 1 44 1 70 2 119 2 260 3 48 1 148 2 73 1 378 1 
306 1 360 1 193 2 291 2 233 1 201 2 312 1 274 1 73 2 378 2 164 1 37 1 96 1 
0 1 291 1 193 1 256 1 233 1 310 1 201 4 182 1 312 1 374 1 73 4 378 4 96 1 
193 1 291 2 349 1 233 1 201 2 234 1 6 1 312 1 117 1 197 1 237 1 73 2 378 2 37 1 
254 1 345 1 149 1 291 1 73 1 256 1 233 1 378 1 201 1 259 1 
264 1 193 1 291 1 233 1 201 2 22 1 312 1 286 1 73 2 378 2 96 1 
264 1 0 1 193 3 291 2 256 1 293 1 233 2 182 1 201 4 6 1 312 2 374 1 73 5 378 5 96 1 225 1 
264 1 0 1 193 3 291 2 256 1 293 1 233 2 182 1 201 4 6 1 312 2 374 1 73 5 378 5 314 1 96 1 
220 1 281 1 154 1 193 1 291 1 348 2 256 1 334 1 233 1 201 1 312 1 35 1 160 2 73 1 301 1 378 1 37 1 304 1 
360 1 193 1 291 2 349 1 233 1 201 1 6 1 312 1 197 1 34 1 73 1 378 1 37 1 
1 1 300 1 267 1 334 1 198 1 
1 2 17 1 181 1 87 1 200 1 142 1 267 2 334 1 57 1 169 1 20 1 58 1 260 2 80 1 248 2 300 2 198 1 303 1 38 1 
1 1 361 1 348 1 156 1 8 1 35 1 160 1 300 1 198 1 
80 1 198 1 38 1 
356 1 265 1 371 1 15 1 
356 1 222 1 152 1 375 1 371 1 115 1 15 1 
29 1 222 1 372 1 
331 1 152 3 86 1 371 1 115 1 356 1 297 1 222 3 375 1 84 1 357 2 15 1 
356 1 222 2 152 2 375 1 229 1 309 1 371 1 115 1 15 1 
356 1 141 1 254 1 222 1 152 1 375 1 149 1 215 1 84 1 115 1 159 1 
356 1 222 1 152 1 375 1 84 1 115 1 15 1 
222 1 152 1 375 1 371 1 84 1 115 1 15 2 
356 1 222 2 152 2 375 2 369 1 157 1 84 1 115 2 15 1 172 1 
141 1 152 3 228 1 229 2 371 1 209 1 115 1 356 2 9 1 222 3 375 1 84 1 15 1 
254 1 152 2 229 1 308 1 371 1 115 1 259 1 356 1 222 2 375 1 149 2 123 1 215 1 84 1 15 1 
141 1 152 4 228 1 229 2 309 1 371 1 115 2 356 2 222 4 375 2 317 1 84 1 15 1 
356 1 222 1 152 1 375 1 371 1 84 1 115 1 15 1 
141 1 331 1 152 4 228 1 86 1 229 2 371 2 115 1 356 3 222 4 375 1 207 1 357 1 15 2 
152 2 368 1 229 1 371 1 115 1 213 1 356 1 272 1 222 2 375 1 84 1 15 1 
356 1 331 1 222 3 152 3 375 1 86 2 81 1 371 1 84 1 357 2 115 1 15 1 
356 2 236 1 19 2 21 1 
75 1 222 1 152 1 375 1 84 1 115 1 
356 1 9 1 222 2 152 2 375 1 229 1 371 1 84 1 115 1 15 1 
199 1 
356 1 222 1 152 1 375 1 371 1 84 1 115 1 15 1 
356 1 9 1 222 3 152 3 375 1 229 1 371 1 84 1 357 1 115 1 15 1 
356 1 141 1 228 1 207 1 
356 1 15 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (89,102) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
189 9 162 5 30 1 49 2 166 1 147 1 53 1 79 1 340 2 278 2 202 1 62 4 131 1 174 2 86 2 112 1 178 3 206 6 208 1 287 1 238 9 20 1 158 2 157 1 215 1 25 1 292 2 217 1 
189 9 162 5 30 1 49 2 166 1 147 1 53 1 79 1 340 2 278 2 202 1 62 4 131 1 174 2 86 2 112 1 178 3 206 6 208 1 287 1 238 9 20 1 158 2 157 1 215 1 25 1 292 2 217 1 
189 10 162 6 30 1 49 2 166 1 147 1 53 1 79 1 340 2 278 2 202 1 62 5 131 1 174 2 86 2 112 1 178 4 206 7 208 1 287 1 238 10 20 1 158 2 157 1 215 1 25 1 292 2 217 1 
189 7 162 4 30 1 49 1 166 1 147 1 53 1 79 1 340 2 278 2 62 3 131 1 174 2 86 2 112 1 178 2 206 4 208 1 287 1 238 7 20 1 158 2 157 1 215 1 25 1 292 2 217 1 
202 1 131 1 62 2 174 1 189 4 162 3 49 2 86 1 112 1 178 1 206 3 166 1 208 1 147 1 238 4 158 1 292 1 278 1 
252 1 174 1 162 1 189 2 112 1 166 1 208 1 351 1 238 2 327 1 20 1 340 1 157 1 158 1 292 1 278 1 
62 1 174 2 189 3 162 2 112 1 178 1 206 1 166 1 208 1 79 1 238 3 340 1 278 2 
189 9 162 5 30 1 49 2 165 1 166 1 147 1 79 1 340 1 278 2 202 1 62 4 131 1 174 2 86 1 112 1 178 3 206 7 208 1 238 9 158 1 379 1 292 1 217 1 
189 9 162 5 30 1 49 2 165 1 166 1 147 1 79 1 340 1 278 2 202 1 62 4 131 1 174 2 86 1 112 1 178 3 206 7 208 1 238 9 158 1 379 1 292 1 217 1 
333 1 57 1 160 1 
194 2 333 1 40 1 
88 2 38 2 275 2 111 1 378 2 265 2 106 1 272 2 
354 2 119 1 328 1 311 1 357 1 75 1 51 1 334 1 3 1 272 3 249 1 337 1 99 1 103 1 275 2 36 1 106 1 343 1 232 2 175 1 368 1 38 3 176 2 111 1 177 1 286 1 88 2 239 1 70 1 378 2 22 1 265 2 116 1 24 1 159 1 140 2 268 2 
88 1 219 1 38 1 275 1 378 1 265 1 347 1 106 1 272 1 141 1 
93 1 219 1 65 1 38 1 87 1 358 1 333 1 272 1 88 1 6 1 326 1 57 1 291 1 381 1 
93 2 219 1 38 1 87 1 358 1 333 1 272 1 88 1 326 2 6 1 275 1 378 1 265 1 57 1 291 1 
93 1 326 1 170 1 250 1 185 1 
93 2 326 2 170 1 250 1 333 1 57 1 107 1 363 1 
93 1 326 1 170 1 
93 1 219 1 38 1 347 1 272 1 88 1 326 1 353 1 250 1 275 1 378 1 265 1 106 1 141 1 
333 1 
93 2 326 2 170 1 250 1 333 1 57 1 363 1 251 1 
93 5 295 1 218 1 163 2 76 2 204 1 333 1 17 1 133 1 336 1 363 1 335 2 101 1 326 5 250 2 170 2 341 1 57 1 216 1 
111 1 160 1 
329 1 38 2 111 2 272 2 88 2 275 1 378 1 265 1 108 1 
231 1 375 1 89 1 
219 1 345 1 111 1 273 1 
329 1 188 1 65 1 38 5 111 1 146 1 272 5 371 1 69 2 88 5 275 4 378 1 265 4 304 1 
88 2 219 1 38 2 275 2 276 1 265 2 347 1 272 2 
231 1 311 1 175 1 188 1 232 1 357 1 75 1 38 2 176 1 177 1 3 1 272 2 69 1 88 1 103 1 275 1 22 1 265 1 159 1 268 1 
69 1 88 3 38 3 275 3 111 1 378 1 265 3 272 3 
88 1 219 1 38 1 275 1 265 1 347 1 272 1 
88 1 329 1 219 1 38 1 275 1 378 1 265 1 272 1 108 1 
354 2 93 1 119 1 328 1 311 1 329 1 188 1 357 1 219 1 75 1 358 1 51 1 3 1 272 4 337 1 99 1 6 1 103 1 275 3 36 1 106 1 175 1 232 1 255 1 368 1 38 4 176 1 111 1 177 1 87 1 69 1 88 3 326 1 239 1 70 1 22 1 378 2 24 1 23 1 265 3 159 1 291 1 140 1 268 1 
69 1 88 2 65 1 38 2 275 1 111 1 146 1 265 1 272 2 
93 1 329 1 188 1 219 1 255 1 38 3 358 1 87 1 333 1 272 3 69 2 88 3 326 1 6 1 275 3 378 1 265 3 58 1 291 1 
69 1 88 2 231 1 329 1 89 1 38 2 275 2 378 1 265 2 272 2 
311 1 232 1 175 1 357 1 38 1 176 1 75 1 111 1 177 1 3 1 272 1 103 1 22 1 159 1 268 1 
14 1 311 1 232 1 357 1 38 1 176 1 75 1 111 1 177 1 3 1 272 1 103 1 159 1 268 1 173 1 
354 2 119 1 328 1 359 1 51 2 337 1 102 1 364 1 36 1 225 1 343 2 231 2 368 1 18 1 374 1 325 1 156 1 375 2 239 1 89 2 376 1 241 1 71 1 140 4 
88 1 219 1 38 1 275 1 87 1 265 1 276 1 272 1 
302 1 113 1 
302 1 113 1 
305 1 35 1 
305 1 35 1 
305 1 35 1 
197 1 302 1 113 1 
197 1 302 1 113 1 
302 1 240 1 113 1 
302 2 305 1 35 1 113 2 114 1 228 1 
197 1 302 1 113 1 
269 1 302 1 113 1 
269 1 302 1 113 1 
269 1 302 1 113 1 
93 1 332 1 164 1 272 2 98 1 362 1 299 1 302 1 149 1 275 2 366 1 110 1 38 2 111 1 257 1 320 1 113 1 39 1 88 2 326 1 352 1 240 1 265 2 73 1 
93 2 230 1 2 1 332 2 257 2 113 2 333 1 361 1 306 1 39 1 98 2 362 2 168 1 302 2 7 1 326 2 149 3 184 2 228 1 
86 1 158 1 292 1 
351 1 158 1 292 1 
351 1 223 1 86 2 235 1 242 1 292 3 
351 1 86 1 235 1 139 1 242 1 292 2 
351 1 86 1 235 2 242 1 292 2 
93 5 163 1 164 1 144 1 76 1 333 2 78 2 193 1 121 2 335 1 363 1 336 3 194 3 364 1 170 1 250 4 341 1 225 1 57 1 365 1 366 1 342 1 110 1 204 2 179 1 261 1 40 1 18 1 326 5 309 1 310 2 71 1 
93 9 218 1 163 2 76 2 333 5 78 6 193 3 363 1 335 2 336 8 122 1 194 9 364 3 170 6 250 7 341 1 56 5 225 3 57 1 366 4 342 1 284 1 204 6 16 1 285 1 179 2 154 1 135 1 40 3 18 3 326 9 309 2 310 6 71 3 185 5 
93 3 218 1 163 1 144 1 76 1 333 3 78 2 121 1 193 1 335 1 336 3 194 4 364 1 250 2 57 1 225 1 365 1 366 1 204 2 179 1 40 2 18 1 326 3 309 1 310 2 71 1 
93 4 218 1 163 1 76 1 144 1 333 4 78 4 121 2 193 2 335 1 336 5 122 1 194 7 364 2 250 3 57 1 225 2 365 1 366 2 204 4 285 1 179 1 154 1 40 3 18 2 326 4 309 1 310 4 71 2 
75 1 90 1 160 1 
75 1 105 1 
187 1 
311 1 75 1 159 1 
308 1 75 1 
75 1 159 1 
311 1 222 1 75 3 80 1 90 2 159 1 
28 2 29 1 132 1 343 4 359 3 205 1 192 1 51 3 18 1 376 2 199 1 45 1 225 1 11 1 91 1 290 1 140 7 
28 2 29 1 132 1 343 4 359 3 205 1 192 1 51 3 18 1 376 2 199 1 45 1 225 1 11 1 91 1 290 1 140 7 
28 2 29 1 132 1 343 4 359 3 205 1 192 1 51 3 18 1 376 2 199 1 44 1 45 1 225 1 11 1 290 1 91 1 140 7 
354 2 28 3 119 1 328 1 29 2 74 1 359 10 192 5 51 15 193 3 337 1 148 4 364 3 199 2 11 2 225 4 132 1 343 16 368 1 205 1 67 1 18 4 324 1 136 1 155 3 376 5 288 1 45 2 290 1 91 1 71 3 243 1 140 31 382 1 
354 4 28 2 119 2 328 2 29 1 359 4 192 1 51 4 337 2 199 1 225 1 11 1 128 1 343 5 132 1 368 2 205 1 18 1 372 1 376 3 45 1 290 1 140 9 382 1 
162 1 189 2 330 1 357 1 248 1 315 1 3 1 166 1 274 1 223 1 340 1 172 1 278 1 318 1 232 1 174 1 86 1 176 1 112 1 206 1 260 1 207 1 208 1 349 1 351 1 238 2 158 1 292 2 244 1 268 1 
95 1 162 1 189 3 330 1 357 1 248 1 315 1 3 1 166 1 223 1 274 1 340 1 172 1 278 1 318 1 232 1 174 1 64 1 86 1 176 1 260 1 206 2 207 1 208 1 351 1 238 3 377 1 158 1 292 2 268 1 
95 1 162 1 189 2 330 1 357 1 248 1 315 1 3 1 166 1 223 1 340 1 172 1 318 1 232 1 64 1 176 1 86 1 260 1 206 2 208 1 351 1 238 2 158 1 292 2 268 1 
245 1 357 1 189 1 75 1 248 2 3 1 4 1 338 1 103 1 340 2 172 2 278 1 153 1 232 1 174 1 176 1 258 1 260 2 238 1 377 1 159 1 268 1 27 1 
95 1 189 1 330 1 357 1 248 1 315 1 3 1 274 1 223 1 340 1 172 1 278 1 318 1 232 1 174 1 86 1 176 1 112 1 260 1 207 1 349 1 351 1 238 1 158 1 292 2 268 1 
61 1 
93 5 294 1 246 2 48 1 190 2 333 2 3 1 336 2 335 1 194 2 4 1 196 1 103 2 6 1 200 2 341 1 57 1 59 1 65 1 256 1 258 1 204 2 348 2 209 2 309 1 159 1 268 2 163 1 357 1 219 1 76 1 75 1 358 1 314 4 272 1 363 3 170 6 317 1 224 1 125 1 277 1 37 1 232 2 176 2 38 1 87 1 369 2 40 2 41 1 237 2 88 1 326 5 291 1 380 1 381 1 
294 1 93 3 219 1 358 1 314 2 272 1 363 1 6 1 170 2 59 1 251 1 38 1 65 1 256 1 87 1 348 1 41 1 88 1 326 3 291 1 381 1 380 1 
294 1 93 3 219 1 358 1 333 1 314 3 272 1 363 1 6 1 170 1 57 1 59 1 251 1 38 1 65 1 256 1 87 1 41 1 237 1 88 1 326 3 291 1 381 1 380 1 
294 1 93 3 246 1 219 1 358 1 333 1 314 3 272 1 363 1 6 1 170 2 57 1 59 1 251 1 38 1 65 1 256 1 87 1 348 1 41 1 237 1 88 1 326 3 291 1 381 1 380 1 
93 5 294 1 246 4 48 1 96 1 331 1 190 2 333 5 335 1 336 1 195 1 6 1 341 1 200 2 57 5 59 1 251 1 65 1 256 1 204 1 348 4 209 2 219 1 163 1 76 1 358 1 314 6 272 1 363 3 32 1 170 7 125 1 38 1 87 1 369 2 181 1 41 1 40 2 237 4 88 1 326 5 291 1 380 1 381 1 
294 1 93 4 246 2 48 1 163 1 219 1 190 2 76 1 358 1 333 2 314 4 272 1 363 2 336 1 335 1 194 2 6 1 170 4 224 1 125 1 200 2 341 1 57 1 59 1 65 1 38 1 256 1 87 1 369 2 204 1 348 2 40 2 41 1 209 2 237 2 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 246 2 48 1 331 1 219 1 163 1 190 2 76 1 358 1 333 1 314 4 272 1 363 2 336 1 335 1 195 1 32 1 6 1 170 4 125 1 200 2 341 1 57 1 59 1 38 1 65 1 256 1 87 1 369 2 204 1 348 2 40 2 41 1 209 2 237 2 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 246 2 48 1 331 1 219 1 163 1 190 2 76 1 358 1 333 1 314 4 272 1 363 2 336 1 335 1 195 1 32 1 6 1 170 4 125 1 200 2 341 1 57 1 59 1 38 1 65 1 256 1 87 1 369 2 204 1 348 2 40 2 41 1 209 2 237 2 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 246 2 48 1 331 1 219 1 163 1 191 2 190 2 76 1 358 1 333 1 314 4 272 1 363 2 336 1 335 1 194 2 123 1 54 1 6 1 170 4 200 2 341 1 57 1 59 1 38 1 65 1 233 1 256 1 87 1 204 1 348 2 41 1 237 2 19 2 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 48 1 246 3 331 1 163 1 219 1 190 2 76 1 358 1 333 1 314 5 272 1 363 2 336 1 335 1 32 1 195 1 6 1 170 5 125 1 200 2 341 1 57 1 59 1 38 1 65 1 256 1 87 1 369 2 204 1 181 1 348 3 40 2 41 1 209 2 237 3 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 48 1 246 3 331 1 163 1 219 1 190 2 76 1 358 1 333 1 314 5 272 1 363 2 336 1 335 1 32 1 195 1 6 1 170 5 125 1 200 2 341 1 57 1 59 1 38 1 65 1 256 1 87 1 369 2 204 1 181 1 348 3 40 2 41 1 209 2 237 3 88 1 326 4 291 1 381 1 380 1 
294 1 93 4 246 2 48 1 163 1 219 1 191 2 190 2 76 1 358 1 333 1 314 4 272 1 363 2 336 1 335 1 194 2 6 1 54 1 170 4 224 1 200 2 341 1 57 1 59 1 65 1 38 1 256 1 87 1 204 1 348 2 41 1 237 2 19 2 88 1 326 4 291 1 381 1 380 1 
354 2 28 1 119 1 328 1 359 2 51 3 337 1 36 1 11 1 225 1 231 1 132 1 343 3 368 1 111 2 205 1 18 1 375 1 89 1 239 1 376 2 241 1 45 1 290 1 160 1 140 6 
354 4 119 2 328 2 356 1 359 2 298 1 192 1 51 6 221 1 193 2 249 1 337 2 100 1 148 3 364 2 36 1 225 1 231 11 343 8 368 2 111 1 203 1 18 2 324 1 155 3 375 11 376 1 239 2 89 4 70 1 288 1 71 1 140 14 
354 2 328 1 119 1 188 1 97 1 31 1 51 1 272 1 273 1 221 1 249 1 337 1 275 1 36 1 343 1 38 1 368 1 111 1 69 1 88 1 262 1 89 1 239 1 70 1 265 1 140 2 
328 3 95 1 188 1 192 4 51 10 3 2 193 2 249 1 337 3 103 1 11 1 343 10 111 2 205 1 18 3 69 1 70 1 22 2 265 1 24 2 71 2 159 2 268 3 28 1 354 6 119 3 311 2 357 2 75 2 312 2 359 8 272 3 221 1 124 1 364 2 275 1 36 3 171 1 225 3 367 1 282 2 132 1 319 2 231 7 232 3 175 2 176 3 368 3 38 3 177 2 323 2 88 1 375 7 376 4 239 3 89 7 45 1 290 1 140 20 
354 4 119 2 328 2 95 1 357 2 75 3 120 1 3 2 51 1 272 1 249 1 337 2 4 1 103 2 55 1 275 1 10 1 36 2 152 1 280 1 343 1 232 7 344 1 234 1 38 1 176 8 368 2 258 1 286 2 69 1 88 1 239 2 241 1 70 1 265 1 159 2 140 2 244 1 268 8 
354 2 119 1 328 1 329 1 359 1 360 1 51 2 272 1 221 1 193 1 337 1 364 1 275 1 36 1 225 1 231 1 343 1 368 1 38 1 18 1 88 1 375 1 376 1 89 1 239 1 378 1 265 1 71 1 140 3 
354 2 328 1 119 1 231 1 343 2 368 1 359 1 192 1 337 1 18 1 325 1 375 1 364 1 89 1 239 1 241 1 36 1 140 2 
354 2 328 1 119 1 231 1 368 1 359 1 51 2 337 1 374 1 375 1 376 1 89 1 239 1 241 1 36 1 71 1 225 1 140 2 
354 2 119 1 328 1 359 2 192 1 51 2 193 1 337 1 364 1 36 1 225 1 343 2 231 2 368 1 18 1 375 2 239 1 89 2 376 1 241 1 71 1 140 4 
354 2 328 1 119 1 231 1 343 2 368 1 359 1 120 1 192 1 337 1 18 1 325 1 375 1 364 1 89 1 239 1 36 1 140 2 
354 2 328 1 119 1 231 1 368 1 359 1 120 1 51 2 337 1 374 1 375 1 376 1 89 1 239 1 36 1 71 1 225 1 140 2 
354 2 119 1 328 1 120 1 359 2 192 1 51 2 193 1 337 1 364 1 36 1 225 1 343 2 231 2 368 1 18 1 375 2 239 1 89 2 376 1 71 1 140 4 
354 2 119 1 328 1 359 2 192 1 51 2 193 1 337 1 364 1 36 1 225 1 343 2 231 2 368 1 18 1 375 2 239 1 89 2 376 1 71 1 140 4 
354 2 328 1 119 1 311 1 357 1 75 1 3 1 51 1 272 1 249 1 337 1 103 1 36 1 343 1 175 1 232 1 176 1 38 1 368 1 111 1 177 1 239 1 70 1 22 1 24 1 159 1 140 2 268 1 
354 2 328 1 119 1 311 1 357 1 75 1 3 1 51 1 272 1 249 1 337 1 103 1 36 1 173 1 14 1 343 1 232 1 176 1 38 1 368 1 111 1 177 1 239 1 70 1 159 1 140 2 26 1 268 1 
354 2 119 1 328 1 359 2 192 1 51 2 193 1 221 1 337 1 364 1 36 1 225 1 343 2 231 2 368 1 18 1 375 2 239 1 89 2 376 1 71 1 140 4 
354 2 328 1 119 1 311 1 357 1 75 1 359 2 192 1 51 2 3 1 272 1 193 1 337 1 364 1 36 1 225 1 231 2 343 2 175 1 232 1 176 1 38 1 368 1 177 1 18 1 323 1 375 2 376 1 89 2 239 1 22 1 24 1 71 1 159 1 140 4 244 1 268 1 
354 2 119 1 328 1 329 1 359 1 192 1 51 1 272 1 221 1 193 1 337 1 364 1 275 1 36 1 225 1 281 1 343 2 231 1 368 1 38 1 18 1 88 1 375 1 239 1 89 1 378 1 265 1 71 1 140 3 
47 1 354 4 119 2 328 2 297 1 359 6 192 3 51 10 193 3 337 2 148 2 364 3 81 2 225 3 226 1 253 1 343 9 84 1 368 2 322 1 18 3 324 1 372 1 155 1 376 3 263 2 288 1 71 3 117 1 140 19 
142 1 47 2 354 6 119 3 328 3 359 4 297 1 192 2 51 12 193 3 337 3 148 2 364 3 81 1 225 2 226 2 343 14 84 1 15 1 368 3 66 1 350 1 18 3 372 1 155 2 376 2 263 4 21 1 288 2 71 2 117 1 72 1 140 26 382 2 
28 1 142 1 47 1 354 6 119 3 328 3 297 1 359 8 192 4 51 21 193 4 337 3 148 4 364 4 9 1 81 1 11 1 225 5 226 2 132 1 343 20 84 1 15 1 368 3 66 1 205 1 322 1 350 1 18 5 324 1 372 1 155 3 376 4 263 4 21 1 288 3 45 1 290 1 71 4 117 1 72 1 140 41 382 1 
28 1 142 1 47 1 354 8 119 4 328 4 297 1 359 7 192 3 51 18 193 4 337 4 148 4 364 4 9 1 81 1 11 1 225 4 226 2 132 1 343 20 84 1 15 1 368 4 66 1 205 1 322 1 350 1 18 5 324 1 372 1 155 3 376 4 263 4 21 1 288 3 45 1 290 1 71 3 117 1 72 1 140 38 382 2 
28 1 142 1 47 1 354 4 119 2 328 2 297 1 359 14 192 7 51 25 193 7 337 2 100 2 148 4 364 7 81 1 11 1 225 8 226 1 132 1 343 27 84 1 15 1 368 2 66 1 205 1 350 1 18 8 324 2 372 1 155 4 376 7 263 4 21 1 288 2 45 1 290 1 71 7 117 1 72 1 140 52 382 1 
302 1 2 1 332 1 257 1 113 1 180 1 306 1 228 1 98 1 362 1 
352 1 240 1 
94 1 302 1 332 1 257 1 113 1 46 1 98 1 52 1 362 1 
197 1 169 1 
269 1 63 1 114 1 
93 1 230 1 2 1 332 1 257 1 113 1 333 1 361 1 306 1 39 1 98 1 362 1 168 1 302 1 326 1 149 2 184 1 228 1 
93 1 230 1 2 1 332 1 257 1 113 1 333 1 361 1 306 1 39 1 98 1 362 1 168 1 302 1 326 1 149 2 184 1 228 1 
93 1 230 1 2 1 332 1 257 1 113 1 333 1 361 1 306 1 39 1 98 1 362 1 168 1 302 1 326 1 149 2 184 1 228 1 
197 1 169 1 114 1 
197 1 169 1 114 1 
269 1 63 1 
269 1 63 1 114 1 
299 1 73 1 
93 1 332 1 164 1 272 2 98 1 362 1 299 1 302 1 149 1 250 1 275 2 129 1 366 1 230 1 110 1 38 2 111 1 257 1 320 1 113 1 88 2 326 1 352 1 240 1 184 1 265 2 73 1 
354 2 328 1 119 1 357 1 75 1 3 1 51 1 272 2 221 1 167 1 249 1 337 1 316 1 10 1 36 1 152 1 229 1 343 1 232 2 176 2 38 2 368 1 286 2 134 1 210 1 88 2 239 1 70 1 159 1 140 2 268 2 
318 1 270 1 95 1 232 2 247 1 357 1 86 1 176 2 248 1 3 1 315 1 207 1 351 1 223 1 158 1 292 2 92 1 244 1 268 2 
118 1 318 1 95 1 232 1 247 1 357 1 86 1 176 1 248 1 315 1 3 1 207 1 351 1 223 1 158 1 292 2 268 1 
153 1 232 1 357 1 75 1 176 1 248 1 258 1 3 1 300 1 4 1 103 1 159 1 92 1 268 1 
318 1 270 1 95 1 232 1 247 1 357 1 86 1 176 1 248 1 315 1 3 1 207 1 351 1 223 1 158 1 292 2 92 1 268 1 
77 1 
101 1 204 1 333 1 57 1 160 1 216 1 336 1 
93 1 163 1 76 1 333 2 336 1 335 1 363 1 194 1 170 1 125 1 341 1 57 1 204 1 369 1 40 1 209 1 326 1 
93 5 333 8 3 3 193 2 336 9 335 4 194 12 101 1 196 1 103 1 8 2 105 3 341 4 57 2 12 2 346 1 204 8 259 1 68 2 211 2 18 2 308 2 309 2 310 6 264 1 71 2 159 3 214 2 216 1 268 3 311 3 357 4 163 4 75 10 76 4 358 2 78 6 363 3 34 1 222 1 364 2 170 5 225 2 130 2 282 2 232 3 176 3 40 6 42 1 326 5 90 2 289 2 293 2 244 1 
142 1 93 1 163 2 76 2 333 5 78 5 193 2 363 1 336 8 335 2 194 6 196 1 148 1 364 2 170 1 339 1 341 2 225 2 57 2 130 1 15 1 66 1 204 5 40 3 350 1 18 2 212 1 155 1 326 1 309 1 310 5 288 1 71 2 214 2 72 1 
93 1 219 1 163 1 76 1 272 1 335 1 336 2 32 1 275 1 341 1 11 1 225 1 106 1 227 1 130 1 132 1 38 1 204 2 347 1 18 2 88 1 326 1 353 1 378 1 45 1 265 1 214 2 141 1 
163 1 76 1 204 1 333 1 335 1 336 1 101 1 341 1 57 1 216 1 
130 1 282 1 204 5 333 5 78 5 193 2 40 5 336 5 18 2 194 10 364 2 310 5 71 2 225 2 214 2 
93 1 326 1 170 1 333 1 57 1 363 1 
93 3 218 1 357 1 163 2 75 1 76 2 3 1 335 2 336 2 363 2 4 1 196 2 5 1 103 2 317 1 170 4 341 1 277 1 232 4 283 1 176 4 204 2 258 1 42 2 326 3 309 2 264 1 159 1 268 4 
354 2 119 1 328 1 311 1 357 1 75 1 51 1 3 1 272 3 337 1 99 1 103 1 275 2 36 1 106 1 232 1 175 1 368 1 176 1 38 3 111 1 177 1 88 2 239 1 70 1 378 2 22 1 265 2 24 1 159 1 140 1 268 1 
28 1 163 1 76 1 204 2 333 4 78 2 40 2 335 1 336 1 194 4 196 1 309 1 310 2 341 1 57 2 
43 1 257 1 362 1 
43 1 257 1 362 1 
373 1 2 1 257 1 73 1 362 1 
43 1 257 1 362 1 
1 1 257 1 362 1 
1 1 257 1 362 1 
1 1 257 1 362 1 
257 1 362 1 
302 1 113 1 
28 1 354 4 328 2 119 2 132 1 343 4 368 2 359 3 205 1 192 1 51 4 18 1 337 2 376 2 45 1 225 1 290 1 11 1 140 8 382 1 
28 1 132 1 343 3 359 2 205 1 51 3 18 1 376 2 45 1 290 1 11 1 225 1 160 1 140 6 
354 2 328 1 119 1 343 2 368 1 359 2 192 1 51 2 193 1 337 1 18 1 364 1 376 1 225 1 71 1 60 1 140 4 
343 3 359 2 192 1 51 4 193 1 18 1 324 1 148 2 155 1 364 1 376 1 288 1 225 1 71 1 140 7 
28 1 354 4 328 2 119 2 359 9 298 1 192 4 51 12 193 2 337 2 148 2 100 1 364 2 104 1 11 2 225 3 132 1 343 11 368 2 205 1 18 3 324 1 155 2 376 5 45 2 290 1 71 2 140 23 382 2 
148 1 51 1 140 1 
343 1 155 1 140 1 
354 2 119 1 328 1 282 1 343 3 368 1 359 3 192 1 51 3 193 1 337 1 18 1 364 1 376 2 71 1 225 1 60 1 140 6 
354 2 142 1 119 1 328 1 359 2 192 1 51 6 193 2 337 1 148 1 364 2 225 2 343 6 15 1 368 1 66 1 350 1 18 2 372 1 155 1 376 1 288 1 71 2 140 12 72 1 
132 1 343 3 359 2 192 1 51 3 18 1 376 1 45 1 225 1 11 1 140 6 
354 2 328 1 119 1 343 1 368 1 359 2 205 1 192 1 51 2 337 1 376 1 104 1 45 1 11 1 290 1 140 3 382 1 
354 2 119 1 328 1 343 5 132 1 368 1 359 5 192 2 51 5 337 1 18 2 372 1 376 3 45 2 11 2 225 2 227 1 140 10 
354 2 328 1 119 1 343 2 368 1 359 1 192 1 337 1 18 1 372 1 364 1 140 2 
354 2 328 1 119 1 343 2 368 1 359 2 192 1 51 2 193 1 337 1 18 1 372 1 364 1 376 1 225 1 71 1 140 4 
354 6 328 3 119 3 343 1 368 3 359 2 192 1 51 2 322 1 337 3 372 1 104 1 376 1 45 1 11 1 140 3 382 1 
28 1 354 10 119 5 328 5 74 1 359 12 192 5 51 18 193 3 337 5 148 4 364 3 104 1 11 3 225 5 60 1 132 2 343 16 368 5 205 1 67 1 322 1 18 5 324 1 372 1 155 3 376 7 288 1 45 3 290 1 71 3 243 1 140 34 382 2 
28 1 354 2 119 1 328 1 359 2 51 4 337 1 148 1 225 1 11 1 343 4 132 1 15 1 368 1 205 1 18 1 372 1 155 1 376 2 288 1 45 1 290 1 140 8 
28 1 354 4 119 2 328 2 359 3 192 1 51 5 193 1 337 2 148 2 364 1 225 1 11 1 60 1 132 1 343 6 15 1 368 2 205 1 18 2 324 1 372 1 155 1 376 2 288 1 45 1 290 1 140 11 
28 1 354 6 142 1 119 3 328 3 359 4 192 1 51 10 193 2 337 3 148 1 364 2 11 1 225 3 60 1 132 1 343 9 15 1 368 3 66 1 205 1 350 1 18 3 372 1 155 1 376 3 288 1 45 1 290 1 71 2 72 1 140 19 382 1 
28 1 354 6 142 1 119 3 328 3 359 5 192 2 51 7 193 2 337 3 148 1 364 2 11 1 225 2 60 1 132 1 343 10 15 1 368 3 66 1 205 1 350 1 18 3 372 1 155 1 376 3 288 1 45 1 290 1 71 1 140 17 72 1 382 1 
28 1 354 2 119 1 328 1 359 2 51 4 337 1 148 1 225 1 11 1 343 4 132 1 15 1 368 1 205 1 18 1 372 1 155 1 376 2 288 1 45 1 290 1 140 8 
354 2 142 1 119 1 328 1 359 2 192 1 51 6 193 2 337 1 148 1 364 2 225 2 343 6 15 1 368 1 66 1 350 1 18 2 372 1 155 1 376 1 288 1 71 2 140 12 72 1 
28 1 142 1 354 8 119 4 328 4 359 5 192 2 51 8 193 2 337 4 148 1 364 2 11 1 225 2 60 1 132 1 343 10 15 1 368 4 66 1 205 1 350 1 18 3 372 1 155 1 376 3 288 1 45 1 290 1 71 1 72 1 140 18 382 2 
142 1 354 8 119 4 328 4 359 6 192 3 51 7 193 3 337 4 148 1 364 3 225 2 343 9 15 1 368 4 66 1 322 1 350 1 18 3 372 1 155 1 376 3 288 1 71 2 72 1 140 16 382 2 
132 1 343 3 359 6 205 1 192 3 51 4 18 1 376 3 45 3 225 1 290 2 11 3 140 7 
28 1 142 1 354 8 119 4 328 4 359 4 192 1 51 8 193 2 337 4 148 1 364 2 11 1 225 2 132 1 343 10 15 1 368 4 66 1 205 1 322 1 350 1 18 3 372 1 155 1 376 3 288 1 45 1 290 1 71 1 72 1 140 18 382 2 
88 1 38 1 65 1 111 1 313 1 146 1 272 1 
65 1 38 1 111 1 313 1 146 1 370 1 321 1 272 1 88 1 182 1 183 1 266 1 
4 1 232 1 103 1 357 1 75 1 176 1 258 1 159 1 3 1 160 1 268 1 
311 1 232 1 175 1 357 1 75 1 38 2 176 1 111 1 177 1 3 1 272 2 69 1 88 1 103 1 275 1 265 1 159 1 268 1 
311 2 357 1 219 1 75 3 3 1 272 2 6 1 275 2 175 1 232 1 176 1 38 2 111 1 177 1 87 1 42 1 69 1 88 2 308 1 289 1 265 1 159 2 268 1 
311 2 357 1 219 1 143 1 75 3 3 1 272 2 6 1 275 2 173 1 232 2 176 2 38 2 111 1 177 1 87 1 42 1 69 1 88 2 308 1 289 1 265 1 159 2 268 2 
93 2 311 1 357 1 143 1 75 4 358 1 333 1 3 1 103 1 170 1 105 1 57 1 82 1 232 3 176 3 42 1 326 2 308 1 90 1 289 1 159 1 186 1 268 3 
93 2 311 1 232 3 357 1 143 1 176 3 75 4 358 1 333 1 3 1 42 1 103 1 308 1 326 2 170 1 289 1 105 1 90 1 57 1 159 1 12 1 268 3 
232 1 357 1 176 1 234 1 3 1 268 1 
280 1 311 1 95 1 232 6 344 1 357 3 234 1 176 7 75 3 220 1 145 1 286 1 3 2 103 2 222 1 55 1 10 1 267 1 159 2 244 1 268 7 
328 2 3 1 51 3 337 2 11 1 343 3 111 2 205 1 18 1 69 1 22 1 24 1 265 1 159 1 268 1 354 4 28 1 119 2 311 1 357 1 75 1 359 2 272 2 221 1 275 1 36 2 225 1 319 1 132 1 231 1 175 1 232 1 176 1 368 2 38 2 177 1 134 1 323 1 88 1 375 1 89 1 239 2 376 2 45 1 290 1 140 6 244 1 
93 3 163 2 76 2 75 2 358 1 333 1 336 1 335 2 363 1 101 1 103 1 250 1 170 2 341 2 105 1 57 1 12 1 232 1 176 1 204 1 68 1 211 1 326 3 264 1 90 1 293 1 216 1 268 1 
311 1 232 2 357 2 234 1 176 2 75 2 346 1 3 1 222 1 90 1 159 1 244 1 268 2 
232 4 357 1 143 1 176 4 75 1 258 1 3 1 4 1 103 1 159 1 201 1 244 1 268 4 
367 1 311 1 232 2 357 2 176 2 75 1 236 1 145 1 3 1 42 1 126 1 267 1 159 1 268 2 
351 1 232 1 103 1 357 1 176 1 158 1 292 1 3 1 315 1 268 1 
210 1 95 1 232 2 357 1 75 1 176 2 10 1 159 1 3 1 244 1 268 2 
280 1 232 4 357 2 176 5 75 3 258 1 3 2 42 1 4 1 103 1 55 1 10 1 159 2 201 1 244 1 268 5 
280 1 232 4 357 2 176 5 75 3 258 1 3 2 42 1 4 1 301 1 103 1 10 1 159 2 201 1 244 1 268 5 
311 1 232 1 357 1 75 1 38 2 176 1 111 1 177 1 3 1 272 2 69 1 88 1 103 1 275 1 265 1 159 1 268 1 173 1 
311 1 232 1 357 2 176 1 75 1 220 1 145 1 3 1 42 1 222 1 267 1 159 1 268 1 
33 1 213 1 111 1 151 1 13 1 
93 2 161 1 85 1 219 1 255 1 111 1 358 1 87 1 333 1 33 2 6 1 326 2 250 1 213 2 57 1 151 1 291 1 279 1 13 2 
229 1 38 1 272 1 167 1 33 1 88 1 316 1 151 1 13 1 
161 1 85 1 151 1 
162 1 160 1 166 1 208 1 
238 1 174 1 162 1 189 1 278 1 166 1 208 1 
189 1 340 1 260 1 
0 1 174 1 162 1 189 3 112 1 296 1 208 1 166 1 238 3 138 1 157 2 278 1 
238 2 174 1 162 1 189 2 49 1 206 1 278 1 166 1 208 1 
62 1 174 1 189 1 162 1 86 1 112 1 147 1 238 1 158 1 292 1 278 1 
238 1 174 1 162 1 189 1 112 1 278 1 166 1 
238 1 174 1 189 1 112 1 278 1 166 2 208 1 
174 2 254 1 162 1 189 2 112 1 166 1 115 1 238 2 303 1 278 2 
62 1 174 1 189 3 30 1 162 2 112 1 178 1 206 2 166 1 208 1 238 3 278 1 217 1 
174 1 162 1 189 2 86 1 112 1 50 1 206 1 166 1 208 1 351 1 238 2 223 1 158 1 292 2 278 1 
202 1 62 1 174 2 189 4 162 2 49 1 112 1 178 1 206 2 166 1 208 1 238 4 278 2 
238 1 174 1 162 1 189 1 112 1 278 1 166 1 208 1 
62 1 355 1 174 1 189 4 162 3 296 1 178 1 206 2 166 2 208 2 238 4 138 1 157 1 278 1 
109 1 83 1 174 1 162 1 189 2 112 1 165 1 206 1 166 1 208 1 238 2 278 1 
174 1 162 1 189 3 112 1 296 2 307 1 208 1 166 1 238 3 138 1 157 2 278 1 
198 2 162 2 137 1 271 1 
238 1 174 1 189 1 112 1 127 1 278 1 
238 2 174 1 162 1 189 2 112 1 206 1 278 1 166 1 208 1 217 1 
150 1 
238 1 174 1 162 1 189 1 112 1 278 1 166 1 208 1 
174 1 189 3 162 1 112 1 206 1 208 1 166 1 238 3 157 1 278 1 217 1 
62 1 355 1 162 1 178 1 
162 1 166 1 

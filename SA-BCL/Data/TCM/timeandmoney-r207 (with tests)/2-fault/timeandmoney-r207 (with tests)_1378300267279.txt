#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 95 127 286 88 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 1 55 1 183 1 268 2 244 1 81 2 364 1 206 1 82 1 188 2 34 9 104 1 16 3 105 1 248 2 252 1 327 1 132 2 297 1 111 1 280 2 112 5 66 1 43 9 23 6 72 4 54 1 122 2 
123 1 55 1 183 1 268 2 244 1 81 2 364 1 206 1 82 1 188 2 34 9 104 1 16 3 105 1 248 2 252 1 327 1 132 2 297 1 111 1 280 2 112 5 66 1 43 9 23 6 72 4 54 1 122 2 
123 1 55 1 183 1 268 2 244 1 81 2 364 1 206 1 82 1 188 2 34 10 104 1 16 4 105 1 248 2 252 1 327 1 132 2 297 1 111 1 280 2 112 6 66 1 43 10 23 7 72 5 54 1 122 2 
123 1 55 1 183 1 268 2 244 1 81 1 364 1 206 1 82 1 188 2 34 7 104 1 16 2 105 1 248 2 252 1 327 1 132 2 297 1 111 1 280 2 112 4 43 7 23 4 72 3 54 1 122 2 
123 1 55 1 132 1 297 1 280 1 112 3 66 1 43 4 23 3 81 2 364 1 188 1 72 2 34 4 16 1 54 1 248 1 122 1 
55 1 112 1 280 1 43 2 268 1 244 1 319 1 364 1 188 1 34 2 172 1 54 1 122 1 174 1 105 1 248 1 
268 1 23 1 55 1 364 1 72 1 188 2 34 3 104 1 112 2 16 1 54 1 43 3 122 2 
123 1 55 1 327 1 132 1 297 1 111 1 280 1 112 5 66 1 43 9 268 1 23 7 81 2 364 1 188 2 290 1 72 4 34 9 104 1 54 1 16 3 248 1 122 2 24 1 
123 1 55 1 327 1 132 1 297 1 111 1 280 1 112 5 66 1 43 9 268 1 23 7 81 2 364 1 188 2 290 1 72 4 34 9 104 1 54 1 16 3 248 1 122 2 24 1 
70 1 277 1 291 1 
185 2 291 1 215 1 
324 2 118 2 294 2 328 2 15 1 369 2 168 2 114 1 
177 1 95 2 179 1 180 1 181 1 221 1 96 2 59 1 127 2 286 1 203 1 99 1 270 2 15 1 369 2 324 2 17 1 275 1 294 3 328 2 279 1 134 1 168 3 114 1 115 1 44 1 194 1 22 1 208 1 117 1 333 2 71 1 118 2 335 1 259 1 283 1 336 1 
324 1 147 1 118 1 294 1 328 1 329 1 292 1 369 1 168 1 114 1 
107 1 240 1 64 1 342 1 277 1 294 1 222 1 329 1 168 1 170 1 118 1 101 1 129 1 291 1 
324 1 107 1 240 2 64 1 342 1 277 1 294 1 328 1 222 1 329 1 168 1 118 1 101 2 291 1 369 1 
240 1 234 1 150 1 101 1 8 1 
240 2 147 1 150 1 101 2 291 1 369 1 292 1 324 1 233 1 234 1 277 1 294 1 328 1 329 1 114 1 168 1 118 1 119 1 262 1 
240 1 150 1 101 1 
324 1 240 1 234 1 147 1 294 1 328 1 329 1 114 1 168 1 118 1 119 1 101 1 292 1 369 1 
291 1 
240 2 147 1 150 1 101 2 291 1 369 1 292 1 324 1 233 1 234 1 277 1 294 1 328 1 329 1 114 1 168 1 300 1 118 1 119 1 
311 1 312 1 240 5 147 1 150 2 265 2 10 1 78 1 13 1 245 2 101 5 291 2 232 1 292 1 369 1 271 1 272 2 324 1 233 1 234 2 162 1 294 1 277 2 328 1 192 2 329 1 113 5 168 1 114 1 118 1 258 1 119 1 377 4 357 1 121 1 92 2 93 1 261 2 
324 1 95 1 294 2 181 1 127 1 286 1 168 2 194 1 208 1 99 1 71 1 228 1 335 1 118 1 283 1 307 1 270 1 259 1 369 1 74 1 
70 1 15 1 
324 1 294 2 328 1 278 1 21 1 168 2 118 2 15 2 369 1 
228 1 48 1 193 1 
95 1 294 1 133 1 181 1 127 1 286 1 168 1 194 1 208 1 99 1 71 1 335 1 270 1 259 1 283 1 15 1 
324 3 118 3 294 3 328 1 307 1 15 1 369 3 168 3 
324 1 118 1 294 1 329 1 292 1 369 1 168 1 
324 1 118 1 294 1 328 1 278 1 329 1 21 1 369 1 168 1 
177 1 240 1 95 1 342 1 179 1 181 1 96 1 59 1 222 1 127 1 286 1 203 1 99 1 101 1 270 1 15 1 369 3 324 3 107 1 64 1 294 4 328 2 278 1 279 1 329 1 134 1 168 4 114 1 115 1 44 1 194 1 208 1 22 1 135 1 333 2 71 1 335 1 118 3 283 1 259 1 307 1 50 1 336 1 74 1 
324 1 196 1 118 2 294 2 129 1 307 1 15 1 369 1 168 2 
324 3 325 1 107 1 240 1 64 1 342 1 294 3 328 1 278 1 222 1 329 1 168 3 118 3 101 1 307 2 291 1 50 1 369 3 74 1 
324 2 294 2 328 1 278 1 168 2 228 1 48 1 118 2 307 1 369 2 
95 1 294 1 181 1 127 1 286 1 168 1 208 1 194 1 99 1 71 1 335 1 270 1 259 1 283 1 15 1 
250 1 95 1 294 1 181 1 127 1 286 1 168 1 194 1 99 1 71 1 335 1 60 1 270 1 283 1 15 1 
341 1 149 1 179 1 58 1 59 1 96 4 97 1 203 2 228 2 245 1 103 1 207 1 37 1 17 2 295 1 279 1 330 1 134 1 193 2 44 1 333 2 48 2 92 1 336 1 
107 1 324 1 118 1 294 1 329 1 369 1 168 1 217 1 
324 4 159 1 294 5 328 1 278 1 168 5 196 1 118 5 129 1 307 2 15 1 246 1 369 4 74 1 
324 2 118 2 294 2 329 1 292 1 369 2 217 1 168 2 
376 1 350 1 
376 1 350 1 
171 1 51 1 
171 1 51 1 
171 1 51 1 
376 1 145 1 350 1 
376 1 145 1 350 1 
376 1 350 1 73 1 
376 2 47 1 171 1 156 1 350 2 51 1 
376 1 145 1 350 1 
376 1 350 1 152 1 
376 1 350 1 152 1 
376 1 350 1 152 1 
108 1 240 2 40 1 161 1 57 1 264 2 353 2 42 1 223 2 376 2 182 2 257 3 156 1 350 2 101 2 213 1 49 2 291 1 260 1 
240 1 314 1 57 1 28 1 223 1 348 1 182 1 128 1 350 1 101 1 15 1 369 2 324 2 370 1 294 2 353 1 168 2 257 1 376 1 118 2 140 1 49 1 358 1 73 1 
132 1 280 1 248 1 
280 1 248 1 174 1 
197 1 132 2 191 1 308 1 280 3 174 1 
211 1 197 1 132 1 191 1 280 2 174 1 
197 1 132 1 191 2 280 2 174 1 
311 1 25 1 1 1 240 5 150 1 58 1 346 2 348 1 267 1 185 3 245 1 101 5 291 2 83 2 272 1 233 1 234 4 370 1 277 1 295 1 192 1 167 2 113 2 138 1 355 1 140 1 377 3 215 1 92 1 337 1 175 1 261 1 
284 1 311 1 25 3 240 9 56 5 150 6 58 3 8 5 348 4 185 9 245 3 101 9 291 5 83 6 130 1 272 2 106 1 233 1 234 7 277 1 20 1 295 3 192 2 167 6 113 6 67 1 302 1 138 2 355 2 377 8 215 3 357 1 92 3 175 1 261 2 
1 1 25 1 240 3 58 1 346 1 348 1 185 4 245 1 101 3 291 3 83 2 272 1 234 2 277 1 295 1 192 1 113 2 167 2 138 1 355 1 377 3 215 2 357 1 92 1 337 1 261 1 
284 1 1 1 25 2 240 4 58 2 346 2 348 2 185 7 245 2 101 4 291 4 83 4 272 1 106 1 234 3 277 1 20 1 295 2 192 1 167 4 113 4 138 1 355 1 377 5 215 3 357 1 92 2 337 1 261 1 
70 1 305 1 194 1 
126 1 194 1 
18 1 
181 1 194 1 
99 1 109 1 305 2 91 1 181 1 194 3 
99 1 181 1 194 1 
194 1 45 1 
312 1 17 4 341 3 189 1 371 1 96 7 330 2 65 1 224 1 69 1 209 1 203 3 186 2 13 1 245 1 232 1 92 1 
312 1 17 4 341 3 189 1 371 1 96 7 330 2 65 1 224 1 69 1 209 1 203 3 186 2 13 1 245 1 232 1 92 1 
312 1 17 4 341 3 189 1 371 1 298 1 96 7 330 2 65 1 224 1 69 1 209 1 203 3 186 2 13 1 245 1 232 1 92 1 
312 1 25 3 143 3 341 10 179 1 27 1 58 3 59 1 96 31 224 2 226 1 203 15 186 3 205 4 227 1 13 2 245 4 232 2 17 16 189 1 371 1 295 3 296 1 330 5 65 2 256 1 134 1 44 1 209 1 69 5 333 2 303 1 142 1 92 4 
312 1 17 5 341 4 189 1 371 1 125 1 179 2 96 9 59 2 330 3 65 1 134 2 44 2 224 1 226 1 69 1 203 4 186 2 333 4 13 1 245 1 158 1 232 1 92 1 
218 1 55 1 95 1 220 1 127 1 201 1 268 1 364 1 270 1 188 1 34 2 368 1 248 1 326 1 132 1 254 1 166 1 112 1 280 2 43 2 23 1 335 1 141 1 283 1 308 1 52 1 54 1 122 1 174 1 338 1 
218 1 55 1 95 1 343 1 317 1 127 1 201 1 268 1 364 1 270 1 188 1 34 3 368 1 248 1 326 1 132 1 166 1 112 1 280 2 43 3 299 1 23 2 335 1 141 1 283 1 308 1 52 1 122 1 174 1 338 1 
218 1 55 1 95 1 317 1 127 1 201 1 268 1 364 1 270 1 34 2 368 1 248 1 326 1 132 1 166 1 112 1 280 2 43 2 299 1 23 2 335 1 283 1 308 1 174 1 338 1 
62 1 313 1 95 1 326 2 343 1 181 1 127 1 166 2 286 1 288 1 43 1 194 1 360 1 268 2 269 1 335 1 283 1 188 1 270 1 214 1 34 1 368 2 122 1 
218 1 95 1 220 1 317 1 127 1 201 1 268 1 270 1 188 1 34 1 368 1 248 1 326 1 132 1 166 1 280 2 43 1 335 1 141 1 283 1 308 1 52 1 54 1 122 1 174 1 338 1 
4 1 
311 1 240 2 313 1 95 2 150 2 181 2 127 2 286 2 266 1 360 1 99 1 101 2 270 2 366 1 322 1 272 1 38 1 233 1 276 1 372 1 192 1 113 1 194 2 88 1 355 1 335 3 283 2 377 1 261 1 
76 1 240 3 342 1 150 2 222 1 318 1 32 1 101 3 129 1 107 1 233 1 64 1 294 1 41 1 253 1 329 1 168 1 300 1 170 1 118 1 198 2 310 1 
240 3 342 1 150 1 222 1 318 1 32 1 101 3 129 1 291 1 107 1 233 1 64 1 294 1 277 1 41 1 253 1 329 1 168 1 332 1 170 1 300 1 118 1 198 3 310 1 
76 1 240 3 342 1 150 2 200 1 222 1 318 1 32 1 101 3 129 1 107 1 233 1 64 1 294 1 41 1 253 1 329 1 168 1 332 1 300 1 170 1 118 1 198 3 310 1 
240 5 147 1 342 1 150 7 200 4 101 5 291 1 292 1 247 1 249 1 107 1 64 1 63 2 294 2 165 1 253 1 113 1 114 1 168 2 116 2 300 1 170 1 210 1 118 2 119 1 306 2 215 2 216 2 310 1 261 1 311 1 76 4 222 1 318 1 32 1 129 1 321 1 369 1 272 1 324 1 274 1 233 3 277 1 328 1 41 1 192 1 329 2 332 2 90 1 198 4 377 1 
240 4 147 1 342 1 150 4 200 2 101 4 291 1 292 1 107 1 64 1 63 2 294 2 165 1 253 1 113 1 114 1 168 2 116 2 170 1 118 2 119 1 306 2 215 2 216 2 310 1 261 1 311 1 76 2 222 1 318 1 185 2 32 1 129 1 369 1 272 1 324 1 274 1 131 1 233 2 277 1 328 1 41 1 192 1 329 2 332 2 198 4 377 1 
311 1 76 2 240 4 342 1 150 4 200 2 222 1 318 1 32 1 101 4 129 1 291 1 321 1 272 1 249 1 274 1 107 1 233 2 63 2 64 1 277 1 294 1 41 1 165 1 253 1 192 1 329 1 113 1 332 2 168 1 116 2 170 1 210 1 118 1 198 4 306 2 377 1 215 2 216 2 310 1 261 1 
240 4 147 1 342 1 150 4 200 2 101 4 291 1 292 1 249 1 107 1 64 1 63 2 294 2 165 1 253 1 113 1 114 1 168 2 116 2 210 1 170 1 118 2 119 1 306 2 215 2 216 2 310 1 261 1 311 1 76 2 222 1 318 1 32 1 129 1 321 1 369 1 272 1 324 1 274 1 233 2 277 1 328 1 41 1 192 1 329 2 332 2 198 4 377 1 
240 4 147 1 342 1 150 4 200 2 98 2 101 4 291 1 292 1 249 1 107 1 160 1 64 1 294 2 165 1 253 1 113 1 114 1 168 2 116 2 170 1 118 2 119 1 173 1 216 2 310 1 261 1 311 1 76 2 222 1 318 1 185 2 32 1 187 1 129 1 369 1 272 1 324 1 233 2 277 1 328 1 41 1 192 1 329 2 332 2 46 2 198 4 377 1 
240 4 147 1 342 1 150 5 200 3 101 4 291 1 292 1 247 1 249 1 107 1 64 1 63 2 294 2 165 1 253 1 113 1 114 1 168 2 116 2 170 1 210 1 118 2 119 1 306 2 215 2 216 2 310 1 261 1 311 1 76 3 222 1 318 1 32 1 129 1 321 1 369 1 272 1 324 1 274 1 233 2 277 1 328 1 41 1 192 1 329 2 332 3 198 5 377 1 
240 4 147 1 342 1 150 5 200 3 101 4 291 1 292 1 247 1 249 1 107 1 64 1 63 2 294 2 165 1 253 1 113 1 114 1 168 2 116 2 170 1 210 1 118 2 119 1 306 2 215 2 216 2 310 1 261 1 311 1 76 3 222 1 318 1 32 1 129 1 321 1 369 1 272 1 324 1 274 1 233 2 277 1 328 1 41 1 192 1 329 2 332 3 198 5 377 1 
311 1 76 1 240 3 342 1 150 2 200 1 222 1 318 1 185 2 98 2 32 1 187 1 101 3 129 1 291 1 272 1 107 1 131 1 233 1 64 1 277 1 294 1 41 1 165 1 253 1 192 1 329 1 113 1 332 1 168 1 116 2 46 1 170 1 118 1 198 3 377 1 216 2 310 1 261 1 
312 1 17 3 341 2 189 1 371 1 179 1 96 6 279 1 59 1 330 2 134 1 193 1 44 1 203 3 70 1 186 1 333 2 228 1 48 1 13 1 245 1 207 1 15 2 232 1 92 1 336 1 
25 2 143 3 341 2 148 1 179 2 180 1 7 1 58 1 59 2 96 14 30 1 203 6 363 1 205 3 227 1 228 11 245 1 15 1 17 8 295 2 296 1 279 1 330 1 331 1 134 2 193 11 115 1 44 2 69 1 333 4 48 4 336 2 92 2 
95 1 179 1 181 1 180 1 127 1 59 1 96 2 286 1 99 1 363 1 203 1 270 1 15 1 369 1 324 1 17 1 190 1 236 1 294 2 133 1 279 1 134 1 168 2 194 1 208 1 44 1 115 1 71 1 333 2 89 1 335 1 48 1 118 1 283 1 259 1 307 1 336 1 74 1 
341 8 95 3 58 2 59 3 96 20 286 1 203 10 99 2 289 1 13 1 245 3 15 2 61 2 17 10 294 3 295 2 168 3 115 1 22 2 208 2 301 1 69 4 71 2 118 1 307 1 259 2 74 1 312 1 25 2 179 3 317 1 180 1 181 2 127 3 363 1 186 1 228 7 270 3 232 1 369 1 84 1 324 1 189 1 371 1 279 3 330 4 134 3 193 7 44 3 194 2 375 2 333 6 281 2 335 2 48 7 283 2 336 3 92 3 199 2 
313 1 2 1 95 8 242 1 316 1 26 1 179 2 317 1 180 1 181 2 221 2 127 7 59 2 96 2 286 2 225 1 360 1 184 1 203 1 270 8 207 1 369 1 324 1 17 1 87 1 294 1 254 1 279 2 134 2 168 1 194 3 44 2 115 1 333 4 118 1 335 2 307 1 283 2 336 2 
25 1 341 1 179 1 58 1 59 1 96 3 363 1 203 2 228 1 245 1 369 1 324 1 17 1 294 1 328 1 295 1 278 1 279 1 330 1 134 1 193 1 168 1 44 1 333 2 48 1 118 1 309 1 336 1 92 1 
17 2 341 1 149 1 179 1 295 1 96 2 279 1 59 1 134 1 193 1 44 1 69 1 333 2 228 1 48 1 207 1 336 1 92 1 
341 1 179 1 58 1 96 2 279 1 59 1 330 1 134 1 193 1 44 1 203 2 333 2 228 1 48 1 245 1 207 1 336 1 37 1 
25 1 17 2 341 2 179 1 295 1 58 1 96 4 279 1 59 1 330 1 134 1 193 2 44 1 69 1 203 2 333 2 228 2 48 2 245 1 207 1 336 1 92 1 
17 2 341 1 242 1 149 1 179 1 295 1 96 2 279 1 59 1 134 1 193 1 44 1 69 1 333 2 228 1 48 1 336 1 92 1 
341 1 242 1 179 1 58 1 96 2 279 1 59 1 330 1 134 1 193 1 44 1 203 2 333 2 228 1 48 1 245 1 336 1 37 1 
25 1 17 2 341 2 242 1 179 1 295 1 58 1 96 4 279 1 59 1 330 1 134 1 193 2 44 1 69 1 203 2 333 2 228 2 48 2 245 1 336 1 92 1 
25 1 17 2 341 2 179 1 295 1 58 1 279 1 59 1 96 4 330 1 134 1 193 2 44 1 69 1 203 2 333 2 228 2 48 2 245 1 336 1 92 1 
95 1 179 1 180 1 181 1 96 2 127 1 59 1 286 1 99 1 203 1 270 1 15 1 17 1 294 1 279 1 134 1 168 1 208 1 22 1 194 1 44 1 115 1 71 1 333 2 335 1 283 1 259 1 336 1 
95 1 344 1 179 1 180 1 181 1 96 2 127 1 59 1 286 1 99 1 203 1 60 1 270 1 15 1 250 1 17 1 294 1 279 1 134 1 168 1 194 1 44 1 115 1 71 1 333 2 335 1 283 1 336 1 
25 1 17 2 341 2 179 1 295 1 58 1 96 4 279 1 59 1 330 1 134 1 193 2 44 1 69 1 203 2 363 1 333 2 228 2 48 2 245 1 336 1 92 1 
25 1 341 2 95 1 179 1 181 1 58 1 96 4 127 1 59 1 203 2 99 1 228 2 245 1 270 1 61 1 17 2 294 1 295 1 254 1 279 1 330 1 134 1 193 2 168 1 208 1 22 1 194 1 44 1 69 1 71 1 333 2 48 2 335 1 283 1 259 1 92 1 336 1 
25 1 341 1 179 1 58 1 59 1 96 3 203 1 363 1 228 1 245 1 369 1 324 1 17 2 86 1 294 1 328 1 295 1 278 1 279 1 134 1 168 1 193 1 44 1 69 1 333 2 118 1 48 1 336 1 92 1 
143 3 340 1 341 8 241 1 5 4 58 4 96 41 59 3 287 1 11 1 203 21 204 1 205 4 13 1 245 5 158 1 17 20 295 4 296 1 68 1 69 4 212 1 25 4 312 1 359 1 179 3 226 1 186 1 227 3 79 1 229 2 365 1 232 1 189 1 371 1 373 1 330 4 134 3 44 3 333 6 139 1 239 1 92 5 
312 1 25 4 340 1 143 3 241 1 341 7 359 1 179 4 5 4 58 3 59 4 96 38 287 1 11 1 226 2 203 18 204 1 186 1 205 4 79 1 227 3 229 2 13 1 245 4 365 1 158 1 232 1 17 20 189 1 371 1 295 4 373 1 296 1 330 4 134 4 44 4 68 1 69 3 333 8 139 1 212 1 239 1 92 5 
312 1 25 7 340 1 143 4 241 1 341 14 359 1 179 2 5 4 58 7 59 2 96 52 287 1 11 1 226 1 30 2 203 25 204 1 186 1 205 4 227 2 229 1 13 1 245 8 365 1 158 1 232 1 17 27 189 1 371 1 295 7 373 1 296 2 330 7 134 2 44 2 69 7 333 4 139 1 212 1 239 1 92 8 
25 3 143 1 341 6 359 1 243 1 179 2 5 2 58 3 59 2 96 19 203 10 204 2 205 2 79 1 227 1 229 1 245 3 365 1 158 1 17 9 295 3 296 1 330 3 134 2 44 2 69 3 333 4 139 1 239 1 92 3 
25 3 143 2 340 1 341 4 241 1 359 2 179 3 5 4 58 2 59 3 96 26 287 1 11 1 226 2 203 12 204 1 205 2 227 2 229 2 245 2 365 1 158 1 17 14 295 3 373 1 330 2 134 3 44 3 69 2 333 6 139 1 212 1 239 1 92 3 
0 1 182 1 376 1 156 1 350 1 353 1 213 1 49 1 260 1 223 1 
73 1 358 1 
323 1 182 1 376 1 3 1 350 1 353 1 49 1 367 1 223 1 
240 1 40 1 161 1 57 1 264 1 353 1 42 1 223 1 376 1 182 1 257 2 156 1 101 1 350 1 213 1 49 1 291 1 260 1 
240 1 40 1 161 1 57 1 264 1 353 1 42 1 223 1 376 1 182 1 257 2 156 1 101 1 350 1 213 1 49 1 291 1 260 1 
240 1 40 1 161 1 57 1 264 1 353 1 42 1 223 1 376 1 182 1 257 2 156 1 101 1 350 1 213 1 49 1 291 1 260 1 
47 1 145 1 320 1 
47 1 145 1 320 1 
152 1 29 1 
47 1 152 1 29 1 
128 1 28 1 
240 1 314 1 264 1 28 1 223 1 348 1 182 1 100 1 128 1 101 1 350 1 15 1 369 2 324 2 234 1 161 1 370 1 294 2 353 1 168 2 376 1 257 1 118 2 140 1 49 1 358 1 73 1 
145 1 320 1 
47 1 152 1 29 1 
285 1 2 1 95 2 316 1 263 1 179 1 181 1 180 1 221 2 59 1 96 2 127 2 363 1 203 1 153 1 270 2 352 1 17 1 294 2 279 1 134 1 168 2 194 1 44 1 115 1 333 2 335 1 118 2 283 1 336 1 176 1 
95 2 132 1 317 1 110 1 127 2 254 1 255 1 166 1 280 2 201 1 136 1 335 1 283 1 270 2 308 1 52 1 248 1 174 1 338 1 
95 1 132 1 317 1 127 1 166 1 280 2 201 1 136 1 335 1 33 1 270 1 283 1 308 1 52 1 248 1 174 1 338 1 
313 1 95 1 181 1 110 1 127 1 286 1 166 1 288 1 194 1 360 1 31 1 335 1 283 1 270 1 
95 1 132 1 317 1 110 1 127 1 255 1 166 1 280 2 201 1 136 1 335 1 270 1 283 1 308 1 52 1 248 1 174 1 338 1 
120 1 
70 1 277 1 377 1 291 1 113 1 271 1 10 1 
311 1 240 1 147 1 150 1 185 1 101 1 291 1 292 1 369 1 272 1 324 1 274 1 233 1 63 1 294 1 277 1 328 1 192 1 329 1 113 1 168 1 114 1 118 1 119 1 306 1 377 1 215 1 261 1 
240 2 146 1 95 1 342 1 150 2 58 1 286 1 9 1 99 1 154 1 12 1 101 2 245 1 291 3 109 1 19 1 295 1 167 3 113 3 355 1 305 1 356 1 215 3 261 2 311 2 25 1 126 2 181 1 265 1 127 1 185 6 270 1 83 3 272 2 233 1 237 1 192 2 194 4 281 1 335 2 377 4 283 1 92 1 
143 2 340 1 240 1 241 1 147 1 150 1 58 4 287 1 11 1 205 2 245 4 101 1 291 7 292 1 294 1 295 4 296 1 113 8 167 8 168 1 114 1 304 1 355 1 118 1 119 1 212 1 215 5 121 1 261 2 311 2 25 4 265 5 30 1 185 10 227 1 83 8 369 1 272 2 324 1 233 1 277 2 372 1 328 1 192 2 329 1 377 13 92 4 53 1 
311 1 312 1 240 1 147 1 265 2 78 1 13 1 101 1 245 1 232 1 292 1 369 1 272 1 324 1 294 1 328 1 192 1 329 1 113 2 168 1 114 1 210 1 118 1 119 1 377 2 121 1 92 2 261 1 
311 1 277 1 192 1 113 1 10 1 377 1 291 1 271 1 272 1 261 1 
25 2 295 2 265 2 58 2 113 5 167 5 185 10 281 1 245 2 377 5 291 5 215 5 83 5 121 1 92 2 
324 1 233 1 240 1 147 1 294 1 150 1 277 1 328 1 329 1 168 1 114 1 118 1 119 1 101 1 291 1 292 1 369 1 
311 1 240 1 233 1 144 1 95 2 150 2 372 1 127 2 192 1 286 2 113 1 266 1 88 1 355 1 101 1 377 1 270 2 272 1 261 1 
177 1 95 1 179 1 181 1 96 1 59 1 127 1 286 1 203 1 99 1 270 1 15 1 369 2 324 2 294 3 328 2 279 1 134 1 168 3 114 1 115 1 44 1 22 1 208 1 194 1 333 2 71 1 118 2 335 1 259 1 283 1 336 1 
311 1 277 2 372 1 192 1 167 2 113 2 185 4 186 1 355 1 377 1 291 4 215 2 83 2 272 1 261 1 
182 1 347 1 223 1 
182 1 347 1 223 1 
182 1 213 1 351 1 28 1 223 1 
182 1 347 1 223 1 
182 1 35 1 223 1 
182 1 35 1 223 1 
182 1 35 1 223 1 
182 1 223 1 
376 1 350 1 
312 1 143 1 340 1 341 2 179 1 96 8 59 1 203 4 186 1 205 1 227 1 13 1 245 1 158 1 232 1 17 4 189 1 371 1 330 2 134 1 44 1 333 2 92 1 
312 1 25 1 340 1 143 1 341 3 179 2 96 11 59 2 203 5 186 1 205 2 227 1 349 1 13 1 245 1 158 1 232 1 17 6 189 1 371 1 295 1 296 1 330 2 134 2 44 2 69 1 333 4 92 2 
312 1 25 2 143 1 340 1 241 1 341 4 179 3 58 2 96 19 59 3 287 1 11 1 226 1 203 10 186 1 205 1 227 1 349 1 13 1 245 3 158 1 232 1 17 9 189 1 371 1 295 2 330 3 134 3 44 3 69 1 333 6 212 1 92 3 
312 1 25 2 143 1 340 1 241 1 341 5 179 3 58 1 96 17 59 3 287 1 11 1 226 1 203 7 186 1 205 1 227 1 349 1 13 1 245 2 158 1 232 1 17 10 189 1 371 1 295 2 330 3 134 3 44 3 69 2 333 6 212 1 92 3 
312 1 143 1 340 1 341 2 179 1 96 8 59 1 203 4 186 1 205 1 227 1 13 1 245 1 158 1 232 1 17 4 189 1 371 1 330 2 134 1 44 1 333 2 92 1 
25 2 143 1 340 1 241 1 341 2 179 1 58 2 96 12 59 1 287 1 11 1 203 6 205 1 227 1 245 2 158 1 17 6 295 2 330 1 134 1 44 1 69 1 333 2 212 1 92 2 
312 1 25 2 340 1 143 1 241 1 341 5 179 4 58 1 96 18 59 4 287 1 11 1 226 2 203 8 186 1 205 1 227 1 349 1 13 1 245 2 158 1 232 1 17 10 189 1 371 1 295 2 330 3 134 4 44 4 69 2 333 8 212 1 92 3 
25 3 340 1 143 1 241 1 341 6 179 4 58 2 96 16 59 4 287 1 11 1 226 2 203 7 205 1 227 1 79 1 245 2 158 1 17 9 295 3 330 3 134 4 44 4 69 3 333 8 212 1 92 3 
312 1 17 3 341 6 189 1 371 2 96 7 330 3 69 3 203 4 13 3 245 1 232 3 92 1 
312 1 25 2 340 1 143 1 241 1 341 4 179 4 58 1 96 18 59 4 287 1 11 1 226 2 203 8 186 1 205 1 227 1 79 1 13 1 245 2 158 1 232 1 17 10 189 1 371 1 295 2 330 3 134 4 44 4 69 1 333 8 212 1 92 3 
312 1 17 4 341 3 189 1 371 1 179 2 96 8 59 2 330 2 134 2 44 2 69 1 226 1 203 4 186 1 333 4 13 1 245 1 232 1 92 1 
312 1 17 3 341 2 189 1 371 1 96 6 330 2 203 3 70 1 186 1 13 1 245 1 232 1 92 1 
25 1 17 2 341 2 179 1 295 1 58 1 59 1 96 4 330 1 134 1 44 1 69 1 203 2 333 2 349 1 245 1 92 1 
25 1 143 1 17 3 341 2 295 1 296 1 58 1 96 7 330 1 69 1 203 4 205 2 227 1 245 1 92 1 
312 1 25 2 143 2 341 9 179 2 58 2 96 23 59 2 226 2 203 12 30 1 186 1 205 2 13 2 245 3 232 2 17 11 189 1 371 1 295 2 296 1 164 1 331 1 330 5 134 2 44 2 69 4 333 4 92 3 
203 1 205 1 96 1 
17 1 143 1 96 1 
25 1 17 3 341 3 179 1 295 1 58 1 59 1 96 6 330 2 134 1 44 1 69 1 203 3 333 2 281 1 349 1 245 1 92 1 
25 2 143 1 340 1 241 1 341 2 179 1 58 2 96 12 59 1 287 1 11 1 203 6 205 1 227 1 245 2 158 1 17 6 295 2 330 1 134 1 44 1 69 1 333 2 212 1 92 2 
312 1 17 3 341 2 96 6 330 1 69 1 203 3 13 1 245 1 232 1 92 1 
17 1 341 2 189 1 371 1 179 1 164 1 96 3 59 1 330 1 134 1 44 1 69 1 226 1 203 2 333 2 13 1 232 1 
312 1 17 5 341 5 179 1 59 1 96 10 330 3 134 1 44 1 69 2 203 5 333 2 78 1 13 2 245 2 158 1 232 2 92 2 
17 2 341 1 179 1 295 1 59 1 96 2 134 1 44 1 69 1 333 2 158 1 92 1 
25 1 17 2 341 2 179 1 295 1 58 1 59 1 96 4 330 1 134 1 44 1 69 1 203 2 333 2 245 1 158 1 92 1 
17 1 341 2 179 3 164 1 96 3 59 3 330 1 134 3 44 3 226 1 69 1 203 2 333 6 79 1 13 1 158 1 232 1 
312 2 25 3 143 3 341 12 179 5 27 1 58 3 59 5 96 34 226 2 203 18 186 1 205 4 227 1 79 1 349 1 13 3 245 5 158 1 232 3 17 16 189 1 371 1 295 3 164 1 296 1 330 7 256 1 134 5 44 5 69 5 333 10 303 1 92 5 
169 1 196 1 118 1 294 1 129 1 15 1 168 1 
293 1 339 1 294 1 345 1 168 1 169 1 354 1 196 1 118 1 129 1 15 1 94 1 
360 1 70 1 313 1 95 1 335 1 283 1 181 1 270 1 127 1 286 1 194 1 
324 1 95 1 294 2 181 1 127 1 286 1 168 2 194 1 208 1 99 1 71 1 335 1 118 1 307 1 270 1 283 1 15 1 369 1 
107 1 324 2 64 1 95 1 294 2 181 2 127 1 329 1 168 2 45 1 194 3 208 1 361 1 99 2 71 1 335 1 118 2 102 1 307 1 270 1 283 1 15 1 369 1 
178 1 95 2 181 2 127 2 361 1 99 2 102 1 270 2 15 1 369 1 324 2 107 1 250 1 64 1 294 2 329 1 168 2 194 3 45 1 71 1 118 2 335 1 283 1 307 1 
240 2 178 1 95 3 342 1 150 1 126 1 181 1 127 3 286 1 361 1 99 1 102 1 101 2 270 3 291 1 277 1 194 4 45 1 195 1 335 1 305 1 283 1 238 1 
240 2 178 1 95 3 342 1 237 1 277 1 150 1 181 1 126 1 127 3 286 1 45 1 194 4 361 1 99 1 335 1 305 1 101 2 102 1 270 3 283 1 291 1 
95 1 335 1 26 1 283 1 270 1 127 1 
38 1 87 1 2 1 95 7 109 1 26 1 317 1 181 2 221 1 254 1 127 6 286 2 194 3 225 1 184 1 99 1 335 3 270 7 283 2 366 1 36 1 
341 2 95 1 59 2 96 6 99 1 203 3 13 1 245 1 15 2 61 1 17 3 294 2 254 1 168 2 208 1 22 1 71 1 118 1 259 1 307 1 176 1 312 1 179 2 181 1 127 1 363 1 186 1 228 1 270 1 232 1 369 1 324 1 189 1 371 1 279 2 330 2 134 2 193 1 44 2 194 1 333 4 48 1 335 1 283 1 336 2 92 1 199 1 
240 3 144 1 95 1 147 1 342 1 150 2 286 1 9 1 10 1 154 1 12 1 13 1 101 3 245 2 291 2 292 1 294 1 113 5 114 1 168 1 118 1 305 1 119 1 121 1 261 2 311 2 312 1 126 1 265 2 127 1 78 1 270 1 232 1 271 1 369 1 272 2 324 1 233 1 234 1 237 1 277 2 328 1 192 2 329 1 194 2 377 4 92 2 
95 2 109 1 26 1 19 1 181 1 254 1 127 2 194 2 99 1 335 2 305 1 270 2 283 1 
313 1 178 1 95 4 181 1 151 1 127 4 254 1 286 1 194 1 360 1 335 1 270 4 283 1 
38 1 84 1 95 2 276 1 181 1 127 2 194 1 99 1 335 2 102 1 270 2 283 1 366 1 322 1 
95 1 335 1 283 1 270 1 127 1 286 1 280 1 248 1 174 1 338 1 
95 2 2 1 263 1 317 1 181 1 254 1 127 2 194 1 335 1 270 2 283 1 
313 1 87 1 95 5 2 1 181 2 151 1 127 4 254 1 286 1 194 3 360 1 225 1 335 2 102 1 270 5 283 2 
313 1 95 5 2 1 235 1 181 2 151 1 127 4 254 1 286 1 194 3 360 1 225 1 335 2 102 1 270 5 283 2 
324 1 250 1 95 1 294 2 181 1 127 1 286 1 168 2 194 1 99 1 71 1 335 1 118 1 307 1 270 1 283 1 15 1 369 1 
38 1 95 1 109 1 181 1 127 1 194 1 99 1 335 2 102 1 270 1 283 1 366 1 36 1 
85 1 315 1 77 1 230 1 15 1 
107 1 240 2 85 2 234 1 64 1 219 1 315 2 342 1 277 1 77 2 222 1 329 1 362 1 230 1 101 2 282 1 291 1 15 1 50 1 
85 1 285 1 352 1 77 1 294 1 168 1 153 1 118 1 230 1 
362 1 230 1 282 1 
70 1 55 1 364 1 112 1 
55 1 364 1 188 1 34 1 112 1 43 1 122 1 
268 1 34 1 368 1 
55 1 124 1 112 1 43 3 202 1 244 2 364 1 14 1 188 1 34 3 54 1 122 1 
23 1 55 1 81 1 364 1 188 1 34 2 112 1 43 2 122 1 
132 1 72 1 188 1 34 1 297 1 280 1 112 1 54 1 248 1 43 1 122 1 
55 1 188 1 34 1 112 1 54 1 43 1 122 1 
55 2 364 1 188 1 34 1 54 1 43 1 122 1 
55 1 112 1 43 2 137 1 334 1 155 1 188 2 34 2 54 1 122 2 
55 1 327 1 111 1 112 2 43 3 23 2 364 1 188 1 72 1 34 3 54 1 16 1 122 1 
55 1 132 1 112 1 280 2 43 2 23 1 80 1 364 1 188 1 34 2 308 1 54 1 174 1 122 1 248 1 
23 2 55 1 81 1 364 1 72 1 188 2 34 4 112 2 16 1 54 1 66 1 43 4 122 2 
55 1 364 1 188 1 34 1 112 1 54 1 43 1 122 1 
55 2 124 1 112 3 43 4 202 1 244 1 23 2 364 2 157 1 188 1 72 1 34 4 16 1 122 1 
39 1 55 1 374 1 112 1 43 2 23 1 364 1 188 1 290 1 34 2 54 1 122 1 
251 1 55 1 124 2 112 1 43 3 202 1 244 2 364 1 188 1 34 3 54 1 122 1 
75 1 6 1 112 2 273 2 
231 1 188 1 34 1 54 1 43 1 122 1 
23 1 55 1 364 1 188 1 34 2 111 1 112 1 54 1 43 2 122 1 
163 1 
55 1 364 1 188 1 34 1 112 1 54 1 43 1 122 1 
244 1 23 1 55 1 364 1 188 1 34 3 111 1 112 1 54 1 43 3 122 1 
157 1 72 1 112 1 16 1 
55 1 112 1 

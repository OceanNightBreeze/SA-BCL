#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 224 318 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 2 241 2 243 1 97 1 175 5 196 1 36 6 40 1 133 1 202 1 137 2 323 1 250 4 209 1 108 1 252 2 306 3 141 1 255 9 142 1 256 2 257 2 167 1 144 1 90 9 48 1 113 2 117 1 
174 2 241 2 243 1 97 1 175 5 196 1 36 6 40 1 133 1 202 1 137 2 323 1 250 4 209 1 252 2 108 1 306 3 141 1 255 9 142 1 256 2 257 2 167 1 144 1 90 9 48 1 113 2 117 1 
174 2 241 2 243 1 97 1 175 6 196 1 36 7 40 1 133 1 202 1 137 2 323 1 250 5 209 1 252 2 108 1 306 4 141 1 255 10 142 1 256 2 257 2 167 1 144 1 90 10 48 1 113 2 117 1 
174 1 241 2 243 1 175 4 196 1 36 4 40 1 133 1 202 1 137 2 323 1 250 3 209 1 252 2 108 1 306 2 141 1 255 7 142 1 256 2 257 2 167 1 144 1 90 7 48 1 113 2 117 1 
174 2 209 1 241 1 252 1 243 1 97 1 175 3 306 1 255 4 256 1 257 1 167 1 36 3 90 4 113 1 117 1 323 1 250 2 
209 1 241 1 175 1 225 1 255 2 256 1 257 1 167 1 144 1 90 2 147 1 48 1 113 1 137 1 323 1 165 1 
209 1 175 2 306 1 255 3 257 2 167 1 36 1 90 3 113 2 40 1 137 1 323 1 250 1 
174 2 241 1 243 1 97 1 175 5 36 7 40 1 133 1 202 1 162 1 137 1 323 1 250 4 209 1 252 1 306 3 255 9 256 1 257 2 167 1 90 9 112 1 113 2 117 1 
174 2 241 1 243 1 97 1 175 5 36 7 40 1 133 1 202 1 162 1 137 1 323 1 250 4 209 1 252 1 306 3 255 9 256 1 257 2 167 1 90 9 112 1 113 2 117 1 
171 1 128 1 12 1 
47 1 128 1 25 2 
208 2 367 1 115 2 22 1 189 2 285 2 26 2 239 2 
269 2 221 1 98 1 156 1 222 1 31 1 78 1 4 1 5 1 296 1 316 1 199 1 274 1 101 2 181 1 201 2 320 1 139 1 301 2 280 1 208 3 367 1 254 1 211 1 189 2 148 1 332 1 216 2 115 2 22 1 23 1 285 2 379 1 26 3 239 2 95 1 286 1 
208 1 367 1 14 1 273 1 115 1 277 1 189 1 285 1 26 1 239 1 
208 1 44 1 84 1 193 1 128 1 189 1 213 1 349 1 130 1 273 1 104 1 171 1 136 1 26 1 
208 1 44 1 84 1 128 1 189 1 213 1 349 2 130 1 273 1 104 2 171 1 115 1 285 1 239 1 26 1 
281 1 104 1 9 1 50 1 349 1 
160 1 104 2 171 1 9 1 50 1 128 1 35 1 349 2 
104 1 9 1 349 1 
14 1 367 1 208 1 189 1 129 1 349 1 273 1 104 1 50 1 115 1 277 1 285 1 239 1 26 1 
128 1 
104 2 171 1 9 1 50 1 128 1 35 1 313 1 349 2 
268 1 67 2 76 1 32 1 128 1 371 1 99 1 35 1 315 1 349 5 19 2 149 2 104 5 334 1 171 1 50 2 9 2 377 1 41 1 
12 1 22 1 
208 2 189 2 80 1 283 1 115 1 22 2 285 1 26 2 239 1 
220 1 116 1 54 1 
208 1 98 1 31 1 222 1 4 1 316 1 332 1 101 1 181 1 216 1 321 1 22 1 379 1 26 1 95 1 301 1 
208 2 220 1 30 1 98 1 110 1 222 1 31 1 189 1 4 1 316 1 332 1 101 1 181 1 216 1 115 1 379 1 285 1 95 1 26 2 301 1 
208 5 30 2 110 1 189 5 215 1 20 1 111 1 283 1 115 4 22 1 285 4 136 1 26 5 239 1 
208 2 273 1 287 1 115 2 277 1 189 2 285 2 26 2 
208 3 30 1 115 3 22 1 189 3 285 3 239 1 26 3 
208 1 273 1 115 1 277 1 189 1 285 1 26 1 
208 1 273 1 80 1 283 1 115 1 189 1 285 1 26 1 239 1 
269 1 30 1 98 1 156 1 222 1 31 1 78 1 4 1 5 1 296 1 316 1 274 1 130 1 273 1 101 1 181 1 201 2 104 1 163 1 139 1 301 1 280 1 44 1 208 4 367 1 84 1 110 1 254 1 211 1 189 3 213 1 349 1 332 1 216 1 283 1 115 3 22 1 379 1 172 1 285 3 95 1 239 2 26 4 286 1 
208 2 215 1 30 1 115 1 22 1 189 2 285 1 136 1 26 2 
208 3 44 1 84 1 30 2 110 1 128 1 189 3 213 1 349 1 273 1 130 1 283 1 104 1 115 3 163 1 285 3 239 1 26 3 365 1 
208 2 220 1 30 1 189 2 283 1 116 1 115 2 285 2 239 1 26 2 
208 1 98 1 31 1 222 1 4 1 316 1 332 1 101 1 181 1 216 1 22 1 379 1 26 1 95 1 301 1 
208 1 106 1 98 1 222 1 316 1 332 1 101 1 181 1 216 1 22 1 379 1 26 1 95 1 65 1 301 1 
269 4 220 2 78 1 5 1 296 1 197 1 342 1 274 1 201 2 161 1 139 1 280 1 85 1 254 2 87 1 307 1 375 1 308 1 116 2 352 1 312 1 23 2 54 2 266 1 
208 1 273 1 287 1 115 1 189 1 213 1 285 1 26 1 
71 1 223 1 
71 1 223 1 
151 1 61 1 
151 1 61 1 
151 1 61 1 
71 1 223 1 258 1 
71 1 223 1 184 1 
71 2 350 1 151 1 223 2 61 1 317 1 
71 1 223 1 258 1 
71 1 223 1 258 1 
71 1 223 1 152 1 
71 1 223 1 152 1 
71 1 223 1 152 1 
208 2 83 1 46 1 176 1 223 1 189 2 349 1 259 1 37 1 38 1 81 1 71 1 362 1 104 1 115 2 230 1 22 1 285 2 353 1 183 1 184 1 26 2 43 1 82 1 
194 1 128 1 176 2 223 2 34 1 349 2 259 3 159 1 37 2 71 2 7 1 350 1 245 1 104 2 362 1 230 2 183 2 64 2 122 1 
241 1 252 1 256 1 
241 1 256 1 165 1 
55 1 252 2 24 1 372 1 256 3 165 1 
252 1 86 1 24 1 372 1 256 2 165 1 
252 1 24 2 372 1 256 2 165 1 
128 2 32 3 99 1 35 1 315 2 179 1 38 1 104 5 9 1 10 1 82 1 67 1 85 1 330 2 46 1 47 1 305 1 349 5 19 1 375 1 149 1 114 2 50 4 171 1 91 2 352 1 25 3 74 1 173 1 266 1 356 1 314 1 
77 1 128 5 32 8 35 1 99 1 315 6 179 2 103 1 104 9 9 6 10 2 138 1 66 1 107 1 67 2 85 3 281 5 46 4 47 3 349 9 19 2 375 3 149 2 49 5 334 1 114 6 50 7 171 1 91 6 352 3 153 1 25 9 74 3 266 3 314 1 
128 3 32 3 179 1 315 2 104 3 10 1 67 1 330 1 85 1 46 1 47 2 305 1 349 3 19 1 375 1 149 1 334 1 114 2 171 1 50 2 91 2 352 1 74 1 25 4 356 1 266 1 
77 1 128 4 32 5 179 1 315 4 104 4 10 1 138 1 66 1 67 1 330 2 85 2 46 2 47 3 305 1 349 4 19 1 375 2 149 1 114 4 334 1 171 1 50 3 91 4 352 2 25 7 74 2 356 1 266 2 
12 1 56 1 316 1 
224 1 316 1 
336 1 
98 1 222 1 316 1 
316 1 300 1 
222 1 316 1 
98 1 222 1 11 1 56 2 316 3 374 1 
267 1 45 1 269 5 85 1 254 2 331 1 88 1 307 3 57 1 21 1 70 1 298 1 161 2 190 2 352 1 378 1 23 3 
267 1 45 1 269 5 85 1 254 2 331 1 88 1 307 3 57 1 21 1 70 1 298 1 161 2 190 2 352 1 378 1 23 3 
267 1 45 1 269 5 85 1 125 1 254 2 331 1 88 1 307 3 57 1 21 1 70 1 298 1 161 2 190 2 352 1 378 1 23 3 
123 1 267 1 2 1 357 1 269 29 157 4 358 3 78 1 5 1 296 1 57 2 274 1 201 2 298 1 161 5 205 1 279 1 45 2 85 4 302 1 254 14 331 2 88 1 307 10 375 3 21 1 70 5 190 3 352 4 378 2 218 1 23 15 74 3 266 3 
267 1 269 7 78 2 292 1 5 2 296 2 57 1 274 2 201 4 298 1 161 3 363 1 45 1 85 1 302 1 331 1 254 3 307 4 21 1 70 1 190 2 352 1 23 4 378 1 
55 1 241 1 175 1 290 1 177 1 36 1 101 1 276 1 229 1 137 1 323 1 325 1 301 1 165 1 209 1 252 1 368 1 303 1 255 2 256 2 214 1 257 1 167 1 234 1 90 2 332 1 216 1 113 1 95 1 96 1 
55 1 241 1 175 1 177 1 339 1 36 2 101 1 276 1 229 1 137 1 325 1 301 1 165 1 209 1 252 1 368 1 255 3 256 2 214 1 257 1 167 1 234 1 90 3 332 1 216 1 113 1 150 1 121 1 95 1 96 1 
55 1 241 1 175 1 339 1 36 2 101 1 276 1 229 1 137 1 325 1 301 1 165 1 209 1 252 1 368 1 255 2 256 2 214 1 167 1 90 2 332 1 216 1 121 1 95 1 96 1 
326 1 124 1 222 1 232 1 255 1 257 1 214 2 316 1 90 1 332 1 236 1 101 1 275 1 181 1 113 1 216 1 150 1 137 2 95 1 264 1 325 2 96 2 301 1 
55 1 241 1 290 1 177 1 101 1 276 1 229 1 137 1 323 1 325 1 301 1 165 1 252 1 368 1 255 1 256 2 214 1 257 1 234 1 90 1 332 1 216 1 113 1 121 1 95 1 96 1 
337 1 
0 2 193 1 99 1 297 1 101 2 104 5 246 1 9 6 10 1 105 1 301 2 208 1 251 1 67 1 18 1 213 1 349 5 19 1 310 1 216 2 171 1 217 2 119 2 263 1 25 2 219 2 26 1 29 2 124 1 222 1 128 2 32 2 35 3 315 2 316 1 130 1 273 1 181 2 132 1 136 1 364 1 44 1 84 1 329 2 231 1 47 2 370 1 189 1 143 1 332 1 236 1 149 1 191 4 237 2 95 1 
193 1 35 1 130 1 273 1 104 3 9 2 136 1 364 1 44 1 208 1 84 1 251 1 329 1 231 1 370 1 189 1 18 1 213 1 349 3 191 2 26 1 313 1 
0 1 193 1 128 1 35 1 130 1 273 1 104 3 9 1 136 1 364 1 44 1 208 1 84 1 251 1 231 1 370 1 189 1 18 1 213 1 349 3 171 1 191 3 26 1 313 1 
29 1 0 1 193 1 128 1 35 1 130 1 273 1 104 3 9 2 136 1 364 1 44 1 208 1 84 1 251 1 329 1 231 1 370 1 189 1 18 1 213 1 349 3 171 1 191 3 313 1 26 1 
0 4 193 1 99 1 104 5 246 1 9 7 63 1 208 1 251 1 67 1 304 1 18 1 213 1 349 5 19 1 310 1 171 5 217 2 119 2 26 1 313 1 219 2 29 4 128 5 32 1 35 3 226 1 315 1 273 1 130 1 361 1 322 1 364 1 136 1 44 1 84 1 329 4 231 1 370 1 47 2 189 1 149 1 191 6 237 2 
0 2 29 2 193 1 128 2 32 1 35 2 99 1 315 1 130 1 273 1 104 4 246 1 9 4 136 1 364 1 105 1 208 1 44 1 84 1 251 1 329 2 67 1 231 1 47 2 370 1 18 1 189 1 213 1 349 4 19 1 149 1 310 1 171 1 191 4 217 2 119 2 25 2 237 2 219 2 26 1 
0 2 29 2 193 1 128 1 32 1 35 2 99 1 315 1 130 1 273 1 361 1 246 1 104 4 9 4 63 1 136 1 364 1 44 1 208 1 84 1 251 1 329 2 67 1 231 1 47 2 370 1 304 1 189 1 18 1 213 1 349 4 19 1 149 1 310 1 171 1 191 4 217 2 119 2 237 2 219 2 26 1 
0 2 29 2 193 1 128 1 32 1 35 2 99 1 315 1 130 1 273 1 361 1 246 1 104 4 9 4 63 1 136 1 364 1 44 1 208 1 84 1 251 1 329 2 67 1 231 1 47 2 370 1 304 1 189 1 18 1 213 1 349 4 19 1 149 1 310 1 171 1 191 4 217 2 119 2 237 2 219 2 26 1 
0 2 29 2 192 2 193 1 128 1 32 1 35 2 99 1 315 1 130 1 273 1 102 1 104 4 9 4 344 1 63 1 136 1 364 1 44 1 208 1 84 1 251 1 329 2 67 1 231 1 370 1 189 1 18 1 213 1 349 4 19 1 149 1 310 1 171 1 191 4 52 2 25 2 237 2 219 2 26 1 238 1 
29 3 0 3 193 1 128 1 32 1 35 2 99 1 226 1 315 1 130 1 273 1 361 1 246 1 104 4 9 5 63 1 136 1 364 1 44 1 208 1 84 1 251 1 67 1 329 3 231 1 47 2 370 1 304 1 189 1 18 1 213 1 349 4 19 1 149 1 310 1 171 1 191 5 217 2 119 2 237 2 219 2 26 1 
29 3 0 3 193 1 128 1 32 1 35 2 99 1 226 1 315 1 130 1 273 1 361 1 246 1 104 4 9 5 63 1 136 1 364 1 44 1 208 1 84 1 251 1 67 1 329 3 231 1 47 2 370 1 304 1 189 1 18 1 213 1 349 4 19 1 149 1 310 1 171 1 191 5 217 2 119 2 237 2 219 2 26 1 
0 2 29 2 192 2 193 1 128 1 32 1 35 2 99 1 315 1 130 1 273 1 104 4 9 4 344 1 136 1 364 1 105 1 208 1 44 1 84 1 251 1 329 2 67 1 231 1 370 1 18 1 189 1 213 1 349 4 19 1 149 1 310 1 171 1 191 4 52 2 25 2 237 2 219 2 26 1 
267 1 220 1 269 4 78 1 5 1 296 1 274 1 201 2 298 1 161 2 12 1 139 1 280 1 45 1 85 1 254 2 307 2 21 1 116 1 190 1 352 1 312 1 22 1 378 1 23 2 54 1 
357 1 269 14 220 11 156 1 126 1 157 3 78 2 358 3 5 2 296 2 274 2 319 1 201 4 161 1 343 1 320 1 139 1 280 2 187 1 85 2 254 6 307 2 375 1 70 1 284 1 116 4 352 1 22 1 218 1 23 8 74 2 54 11 266 2 
1 1 269 2 30 1 98 1 222 1 31 1 156 1 127 1 78 1 4 1 5 1 316 1 296 1 101 1 274 1 181 1 6 1 201 2 321 1 320 1 301 1 139 1 280 1 208 2 187 1 110 1 254 1 189 1 332 1 216 1 116 1 115 1 22 1 379 1 285 1 23 1 95 1 26 2 
98 2 289 1 156 1 4 2 5 3 296 3 101 3 200 2 201 6 298 1 161 4 247 1 8 2 301 3 208 3 110 1 254 9 211 2 348 1 307 8 21 1 216 3 70 4 115 1 116 7 352 3 22 1 121 1 23 9 74 2 26 3 266 2 267 1 269 18 220 7 30 1 31 2 222 2 78 3 316 2 274 3 181 1 320 1 139 3 280 3 185 2 45 1 187 1 85 3 189 1 332 2 375 2 190 1 378 1 285 1 379 2 154 2 95 2 54 7 
269 2 221 2 124 1 30 1 156 1 222 2 291 1 78 2 5 2 316 3 296 2 101 8 274 2 181 2 201 4 134 1 299 1 320 1 301 8 139 2 208 1 280 2 253 1 303 1 210 1 254 1 189 1 145 1 332 2 236 1 216 7 115 1 312 1 121 1 285 1 23 1 26 1 95 2 265 1 
220 1 269 3 78 1 5 1 296 1 274 1 201 2 161 1 139 1 280 1 166 1 208 1 187 1 85 1 254 2 189 1 307 1 375 1 283 1 116 1 115 1 352 1 285 1 23 1 74 1 239 1 26 1 54 1 266 1 
280 1 220 1 269 2 85 1 87 1 78 1 5 1 307 1 296 1 274 1 201 2 70 1 116 1 312 1 23 2 54 1 139 1 266 1 
280 1 220 1 269 2 254 2 78 1 5 1 307 1 296 1 375 1 274 1 308 1 201 2 161 1 116 1 352 1 312 1 54 1 139 1 
269 4 220 2 78 1 5 1 296 1 274 1 201 2 161 1 139 1 280 1 85 1 254 2 307 2 375 1 70 1 116 2 352 1 312 1 23 2 74 1 266 1 54 2 
280 1 220 1 269 2 85 1 87 1 78 1 5 1 307 1 296 1 274 1 201 2 70 1 116 1 299 1 23 2 54 1 139 1 266 1 
280 1 220 1 269 2 254 2 78 1 5 1 307 1 296 1 375 1 274 1 308 1 201 2 161 1 116 1 299 1 352 1 54 1 139 1 
269 4 220 2 78 1 5 1 296 1 274 1 201 2 161 1 299 1 139 1 280 1 85 1 254 2 307 2 375 1 70 1 116 2 352 1 23 2 74 1 266 1 54 2 
269 4 220 2 78 1 5 1 296 1 274 1 201 2 161 1 139 1 280 1 85 1 254 2 307 2 375 1 70 1 116 2 352 1 23 2 74 1 266 1 54 2 
269 2 98 1 222 1 31 1 156 1 78 1 4 1 5 1 316 1 296 1 101 1 274 1 181 1 201 2 320 1 301 1 139 1 208 1 280 1 211 1 254 1 332 1 216 1 22 1 23 1 379 1 95 1 26 1 
269 2 98 1 222 1 156 1 78 1 5 1 316 1 296 1 101 1 274 1 181 1 201 2 182 1 320 1 65 1 301 1 139 1 208 1 280 1 106 1 254 1 332 1 216 1 22 1 23 1 379 1 95 1 26 1 
269 4 220 2 78 1 5 1 296 1 274 1 201 2 161 1 139 1 280 1 187 1 85 1 254 2 307 2 375 1 70 1 116 2 352 1 23 2 74 1 266 1 54 2 
220 2 269 4 98 1 31 1 222 1 78 1 4 1 5 1 316 1 296 1 101 1 274 1 201 2 161 1 301 1 139 1 185 1 208 1 280 1 85 1 303 1 254 2 211 1 307 2 375 1 332 1 216 1 70 1 116 2 352 1 23 2 379 1 74 1 95 1 26 1 54 2 266 1 
269 3 220 1 78 1 5 1 296 1 274 1 201 2 139 1 207 1 280 1 208 1 187 1 85 1 254 1 189 1 307 1 375 1 70 1 283 1 115 1 116 1 352 1 285 1 23 2 74 1 239 1 26 1 266 1 54 1 
357 1 269 19 157 2 78 2 358 1 3 2 292 1 294 1 5 2 296 2 274 2 201 4 58 1 161 3 60 1 186 1 15 1 85 3 254 10 69 1 233 1 307 6 260 2 375 3 70 3 352 3 218 1 23 9 74 3 266 3 
269 26 157 2 78 3 358 2 3 4 292 1 294 1 5 3 296 3 79 1 274 3 201 6 58 2 161 2 60 1 324 1 186 1 302 2 15 2 85 3 254 12 307 4 260 1 375 2 282 1 309 1 70 2 72 1 352 2 23 14 218 2 74 3 155 1 266 3 
267 1 357 1 269 39 157 4 78 3 358 3 3 4 292 1 294 1 5 3 79 1 296 3 274 3 131 1 201 6 298 1 58 2 161 4 60 1 324 1 186 1 45 1 302 1 15 1 85 5 254 20 69 1 307 8 260 1 375 4 282 1 309 1 21 1 70 4 190 1 72 1 352 5 378 1 218 3 23 19 74 4 155 1 266 4 
267 1 357 1 269 36 157 4 78 4 358 3 3 4 292 1 294 1 5 4 79 1 296 4 274 4 131 1 201 8 298 1 58 2 161 4 60 1 324 1 186 1 45 1 302 2 15 1 85 5 254 17 69 1 307 7 260 1 375 3 282 1 309 1 21 1 70 3 190 1 72 1 352 4 378 1 218 3 23 19 74 4 155 1 266 4 
267 1 357 2 269 50 126 2 157 4 78 2 358 4 3 4 292 1 294 1 5 2 79 1 296 2 274 2 201 4 298 1 58 1 161 7 60 1 324 1 186 1 45 1 302 1 15 1 85 8 254 24 307 14 260 1 375 7 282 1 309 1 21 1 70 7 190 1 72 1 352 8 378 1 218 2 23 26 74 7 155 1 266 7 
37 1 71 1 7 1 350 1 223 1 176 1 51 1 230 1 183 1 122 1 
184 1 43 1 
37 1 71 1 188 1 223 1 176 1 230 1 183 1 42 1 206 1 
311 1 258 1 
152 1 317 1 28 1 
128 1 176 1 223 1 34 1 349 1 259 2 159 1 37 1 71 1 7 1 350 1 245 1 362 1 104 1 230 1 183 1 64 1 122 1 
128 1 176 1 223 1 34 1 349 1 259 2 159 1 37 1 71 1 7 1 350 1 245 1 362 1 104 1 230 1 183 1 64 1 122 1 
128 1 176 1 223 1 34 1 349 1 259 2 159 1 37 1 71 1 7 1 350 1 245 1 362 1 104 1 230 1 183 1 64 1 122 1 
311 1 317 1 258 1 
311 1 317 1 258 1 
152 1 28 1 
152 1 317 1 28 1 
83 1 353 1 
223 1 176 1 159 1 37 1 38 1 81 1 104 1 230 1 183 1 64 1 184 1 43 1 82 1 208 2 83 1 46 1 189 2 349 1 259 1 71 1 50 1 351 1 115 2 22 1 285 2 353 1 26 2 
269 2 221 2 222 1 156 1 78 1 5 1 316 1 296 1 101 2 274 1 201 2 320 1 301 2 139 1 345 1 280 1 208 2 187 1 253 1 369 1 254 1 189 2 145 1 332 1 376 1 216 2 118 1 23 1 95 1 26 2 335 1 
55 1 241 1 252 1 368 1 303 1 177 1 256 2 347 1 332 1 100 1 101 2 216 2 276 1 203 1 121 1 95 1 301 2 96 1 165 1 
55 1 241 1 252 1 368 1 177 1 178 1 256 2 347 1 332 1 101 1 216 1 276 1 121 1 95 1 301 1 96 1 165 1 
124 1 222 1 316 1 360 1 332 1 101 1 236 1 181 1 216 1 203 1 95 1 264 1 301 1 96 1 
55 1 241 1 252 1 368 1 177 1 256 2 347 1 100 1 332 1 101 1 216 1 276 1 203 1 121 1 95 1 301 1 96 1 165 1 
89 1 
171 1 32 1 128 1 377 1 12 1 371 1 315 1 
67 1 47 1 128 2 32 1 35 1 99 1 315 1 349 1 19 1 149 1 104 1 246 1 171 1 9 1 217 1 119 1 25 1 
67 1 98 1 222 1 224 1 99 1 316 1 19 1 374 1 332 1 158 1 149 1 101 1 318 1 181 1 216 1 95 2 301 1 
32 8 157 1 128 5 358 1 35 1 99 2 315 5 79 1 104 1 9 1 10 1 248 1 324 1 327 1 67 2 85 2 47 3 143 1 349 1 19 2 375 2 149 2 309 1 261 2 114 5 171 2 91 5 72 1 352 2 218 1 25 6 74 2 94 1 155 1 266 2 
32 2 227 1 99 1 315 2 129 1 273 1 104 1 277 1 208 1 14 1 367 1 45 1 67 1 85 2 304 1 189 1 349 1 19 1 149 1 261 2 21 1 115 1 352 1 378 1 285 1 94 1 26 1 239 1 
67 1 128 1 32 1 99 1 371 1 315 1 19 1 149 1 171 1 377 1 
85 2 47 5 128 5 32 5 315 5 375 2 261 2 114 5 8 1 91 5 352 2 74 2 25 10 94 1 266 2 
104 1 171 1 9 1 128 1 35 1 349 1 
124 1 222 1 32 2 99 1 35 2 315 2 316 1 272 1 297 1 101 4 181 2 132 1 104 3 9 4 10 2 301 4 140 1 67 2 143 2 349 3 19 2 332 1 149 2 236 1 216 4 334 1 93 2 95 1 27 1 
269 1 98 1 156 1 31 1 222 1 78 1 4 1 5 1 296 1 316 1 274 1 101 1 181 1 201 2 301 1 139 1 208 3 367 1 280 1 254 1 211 1 189 2 332 1 216 1 115 2 22 1 285 2 379 1 26 3 239 2 95 1 286 1 
67 1 47 2 32 1 128 4 99 1 143 1 315 2 19 1 149 1 114 2 171 2 190 1 91 2 10 1 25 4 
37 1 183 1 164 1 
37 1 7 1 353 1 183 1 341 1 
37 1 183 1 164 1 
37 1 183 1 164 1 
244 1 37 1 183 1 
244 1 37 1 183 1 
244 1 37 1 183 1 
37 1 183 1 
71 1 223 1 
267 1 45 1 269 6 85 1 302 1 254 3 78 2 5 2 307 3 296 2 274 2 21 1 201 4 70 1 298 1 161 2 190 1 352 1 23 3 378 1 
267 1 45 1 269 4 85 1 254 2 307 2 21 1 298 1 161 2 190 1 12 1 352 1 378 1 23 2 
269 4 85 1 254 2 78 1 5 1 307 2 146 1 296 1 375 1 274 1 201 2 70 1 161 1 352 1 23 2 74 1 266 1 
357 1 269 7 85 1 254 4 157 2 358 1 307 2 375 1 70 1 161 1 352 1 218 1 23 3 74 1 266 1 
267 1 357 1 269 21 126 1 157 2 358 2 78 2 271 1 5 2 296 2 274 2 319 1 201 4 298 1 161 5 45 2 85 3 302 2 254 11 307 9 375 2 21 1 70 4 190 1 352 3 378 2 23 10 74 2 266 2 
269 1 254 1 157 1 
269 1 358 1 23 1 
269 6 85 1 254 3 78 1 5 1 296 1 146 1 307 3 375 1 274 1 201 2 70 1 8 1 161 2 352 1 23 3 74 1 266 1 
269 12 85 2 254 6 157 1 78 1 358 1 292 1 5 1 307 2 79 1 296 1 375 2 274 1 309 1 201 2 70 1 161 1 72 1 352 2 23 6 218 1 74 2 155 1 324 1 266 2 
269 2 21 1 85 1 254 1 352 1 23 1 
267 1 45 1 269 3 302 1 254 2 271 1 78 1 5 1 307 2 296 1 274 1 201 2 70 1 298 1 161 1 23 1 378 1 
45 1 269 8 85 2 254 4 78 1 292 1 227 1 5 1 296 1 307 4 274 1 201 2 21 1 70 2 161 2 352 2 378 1 23 4 
269 2 85 1 78 1 292 1 5 1 296 1 307 1 274 1 201 2 70 1 23 2 266 1 
269 4 85 1 254 2 78 1 292 1 5 1 307 2 296 1 375 1 274 1 201 2 70 1 161 1 352 1 23 2 74 1 266 1 
45 1 269 3 302 1 254 2 271 1 78 3 292 1 69 1 5 3 296 3 307 2 274 3 201 6 70 1 161 1 378 1 23 1 
123 1 267 1 2 1 357 1 269 30 157 4 271 1 78 5 358 3 292 1 5 5 296 5 274 5 201 10 298 1 161 6 205 1 45 2 302 2 85 5 254 16 69 1 146 1 307 11 375 3 21 2 70 5 190 1 352 5 378 2 218 1 23 14 74 3 266 3 
267 1 269 6 157 1 358 1 78 1 292 1 5 1 296 1 274 1 201 2 298 1 161 2 45 1 85 1 254 3 307 2 21 1 190 1 72 1 352 1 218 1 23 3 378 1 
267 1 357 1 269 9 157 2 78 2 358 1 292 1 5 2 296 2 274 2 201 4 298 1 161 2 45 1 85 2 254 4 146 1 307 3 21 1 70 1 190 1 72 1 352 1 378 1 218 1 23 5 74 1 266 1 
267 1 269 17 157 1 358 1 78 3 292 1 5 3 296 3 79 1 274 3 201 6 298 1 161 3 324 1 45 1 85 3 302 1 254 9 146 1 307 4 375 2 309 1 21 1 70 1 190 1 72 1 352 3 378 1 218 1 23 8 74 2 155 1 266 2 
267 1 269 15 157 1 358 1 78 3 292 1 5 3 296 3 79 1 274 3 201 6 298 1 161 3 324 1 45 1 302 1 85 3 254 6 146 1 307 5 375 1 309 1 21 1 70 2 190 1 72 1 352 2 378 1 218 1 23 9 74 2 155 1 266 2 
267 1 269 6 157 1 358 1 78 1 292 1 5 1 296 1 274 1 201 2 298 1 161 2 45 1 85 1 254 3 307 2 21 1 190 1 72 1 352 1 218 1 23 3 378 1 
269 12 85 2 254 6 157 1 78 1 358 1 292 1 5 1 307 2 79 1 296 1 375 2 274 1 309 1 201 2 70 1 161 1 72 1 352 2 23 6 218 1 74 2 155 1 324 1 266 2 
267 1 269 16 157 1 78 4 358 1 292 1 5 4 296 4 79 1 274 4 201 8 298 1 161 3 324 1 45 1 85 3 302 2 254 7 146 1 307 5 375 1 309 1 21 1 70 2 190 1 72 1 352 2 378 1 218 1 23 9 74 2 155 1 266 2 
269 16 157 1 78 4 358 1 292 1 5 4 296 4 79 1 274 4 201 8 161 3 324 1 85 3 302 2 254 7 69 1 307 6 375 2 309 1 70 3 72 1 352 2 218 1 23 9 74 3 155 1 266 3 
267 1 45 2 269 9 85 3 254 4 227 1 307 7 21 2 298 1 70 3 161 4 190 1 352 3 378 2 23 5 
267 1 269 16 157 1 78 4 358 1 292 1 5 4 296 4 79 1 274 4 201 8 298 1 161 3 324 1 45 1 85 3 302 2 254 7 69 1 307 4 375 1 309 1 21 1 70 1 190 1 72 1 352 2 378 1 218 1 23 9 74 2 155 1 266 2 
208 1 215 1 22 1 189 1 136 1 26 1 13 1 
75 1 208 1 346 1 195 1 189 1 235 1 215 1 22 1 136 1 26 1 354 1 13 1 
332 1 236 1 101 1 181 1 124 1 216 1 222 1 12 1 95 1 316 1 301 1 
208 2 30 1 98 1 222 1 31 1 189 1 316 1 332 1 101 1 181 1 216 1 115 1 22 1 379 1 285 1 95 1 26 2 301 1 
208 2 16 1 30 1 98 2 222 2 31 1 189 2 213 1 316 3 332 1 273 1 130 1 101 1 216 1 115 1 22 1 379 1 285 2 93 1 95 1 26 2 300 1 301 1 
30 1 288 1 98 2 222 2 316 3 101 2 130 1 273 1 300 1 301 2 208 2 106 1 16 1 189 2 213 1 332 1 216 2 115 1 22 1 285 2 379 1 93 1 26 2 95 1 
270 1 288 1 98 1 222 1 128 1 224 1 56 1 293 1 316 4 101 3 181 1 104 2 9 1 300 1 301 3 84 1 16 1 349 2 332 1 216 3 171 1 93 1 95 1 
84 1 16 1 288 1 98 1 222 1 128 1 224 1 56 1 316 4 349 2 332 1 101 3 181 1 216 3 104 2 171 1 9 1 93 1 95 1 300 1 301 3 366 1 
332 1 101 1 216 1 291 1 95 1 301 1 
242 1 221 1 253 1 303 1 210 1 98 1 222 2 291 1 316 3 374 1 332 2 101 7 181 2 169 1 216 6 134 1 204 1 121 1 95 3 265 1 301 7 
98 1 4 1 5 2 296 2 101 1 201 4 298 1 161 2 301 1 208 2 303 1 211 1 254 2 307 2 216 1 21 1 116 1 115 1 352 1 22 1 118 1 23 2 26 2 267 1 269 4 220 1 30 1 31 1 222 1 78 2 316 1 274 2 139 2 185 1 280 2 45 1 187 1 85 1 189 1 332 1 190 1 285 1 379 1 378 1 154 1 95 1 54 1 
240 1 32 1 128 1 224 1 56 1 99 2 35 1 315 1 316 2 272 1 228 1 101 1 181 1 104 3 9 2 301 1 366 1 84 1 328 1 67 2 371 1 349 3 19 2 149 2 216 1 171 1 50 1 377 1 
336 1 98 1 222 1 291 1 56 1 316 1 374 1 158 1 332 1 101 1 216 1 95 2 301 1 
124 1 288 1 303 1 222 1 316 1 332 1 101 4 236 1 181 1 39 1 216 4 95 1 301 4 
98 1 289 1 222 1 198 1 316 1 180 1 332 1 101 2 169 1 216 2 204 1 93 1 95 2 301 2 
332 1 101 1 241 1 181 1 368 1 216 1 256 1 95 1 301 1 165 1 
332 1 101 2 376 1 216 2 253 1 303 1 222 1 121 1 95 1 316 1 301 2 
124 1 253 1 303 1 222 2 316 3 332 2 236 1 101 5 181 1 39 1 216 4 134 1 93 1 95 2 265 1 301 5 
124 1 253 1 303 1 222 2 316 3 332 2 236 1 101 5 181 1 39 1 216 4 134 1 92 1 93 1 95 2 301 5 
208 2 106 1 30 1 98 1 222 1 189 1 316 1 332 1 101 1 181 1 216 1 115 1 22 1 379 1 285 1 95 1 26 2 301 1 
242 1 98 1 222 1 316 1 374 1 332 1 101 1 169 1 216 1 204 1 93 1 95 2 301 1 
168 1 333 1 22 1 120 1 73 1 
44 1 84 1 128 1 213 1 295 1 349 2 273 1 130 1 168 2 333 2 104 2 135 1 171 1 50 1 163 1 22 1 120 2 73 1 278 1 
208 1 369 1 189 1 168 1 120 1 73 1 26 1 345 1 335 1 
135 1 73 1 295 1 
209 1 175 1 12 1 167 1 
209 1 113 1 175 1 255 1 257 1 167 1 90 1 
255 1 137 1 325 1 
209 1 68 1 175 1 255 3 340 1 257 1 167 1 90 3 48 2 113 1 262 1 323 1 
174 1 209 1 113 1 175 1 255 2 257 1 167 1 36 1 90 2 
252 1 241 1 243 1 175 1 255 1 256 1 257 1 90 1 113 1 323 1 250 1 
113 1 175 1 255 1 257 1 323 1 167 1 90 1 
209 1 113 1 255 1 257 1 323 1 167 2 90 1 
175 1 255 2 359 1 257 2 167 1 90 2 113 2 59 1 323 1 53 1 
209 1 175 2 306 1 255 3 257 1 167 1 36 2 90 3 113 1 133 1 202 1 323 1 250 1 
55 1 209 1 252 1 241 1 175 1 255 2 256 2 257 1 167 1 36 1 90 2 113 1 323 1 355 1 165 1 
174 1 209 1 97 1 175 2 306 1 255 4 257 2 167 1 36 2 90 4 113 2 323 1 250 1 
209 1 113 1 175 1 255 1 257 1 323 1 167 1 90 1 
209 2 68 1 175 3 306 1 212 1 255 4 257 1 167 2 36 2 90 4 48 1 113 1 262 1 250 1 
209 1 175 1 255 2 338 1 257 1 167 1 373 1 36 1 90 2 113 1 162 1 323 1 
209 1 68 1 175 1 255 3 257 1 167 1 90 3 48 2 113 1 262 2 323 1 249 1 
170 1 175 2 33 2 62 1 
109 1 113 1 255 1 257 1 323 1 90 1 
209 1 113 1 202 1 175 1 255 2 257 1 323 1 167 1 36 1 90 2 
17 1 
209 1 113 1 175 1 255 1 257 1 323 1 167 1 90 1 
209 1 175 1 255 3 257 1 36 1 167 1 90 3 48 1 113 1 202 1 323 1 
175 1 306 1 212 1 250 1 
175 1 167 1 

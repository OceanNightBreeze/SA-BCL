#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String; | RETURN | 4317 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 1 53 2 291 1 150 1 247 2 77 3 274 1 104 2 275 9 276 1 280 1 161 1 284 1 65 9 187 1 231 6 113 1 114 2 209 2 138 1 48 1 263 5 334 1 212 1 193 2 146 2 238 4 50 1 
289 1 53 2 291 1 150 1 247 2 77 3 274 1 104 2 275 9 276 1 280 1 161 1 284 1 65 9 187 1 231 6 113 1 114 2 209 2 138 1 48 1 263 5 334 1 212 1 193 2 146 2 238 4 50 1 
289 1 53 2 291 1 150 1 247 2 77 4 274 1 104 2 275 10 276 1 280 1 161 1 284 1 65 10 187 1 231 7 113 1 114 2 209 2 138 1 48 1 263 6 334 1 212 1 193 2 146 2 238 5 50 1 
289 1 53 2 291 1 150 1 247 2 77 2 274 1 104 1 275 7 276 1 280 1 161 1 284 1 65 7 187 1 231 4 113 1 114 2 209 2 138 1 48 1 263 4 212 1 193 2 146 2 238 3 50 1 
53 1 247 1 77 1 65 4 231 3 113 1 209 1 104 2 274 1 275 4 263 3 276 1 334 1 212 1 146 1 238 2 193 1 50 1 
53 1 284 1 286 1 247 1 65 2 113 1 209 1 114 1 189 1 275 2 263 1 276 1 280 1 146 1 23 1 50 1 
161 1 247 2 77 1 65 3 231 1 113 1 209 2 114 1 275 3 263 2 276 1 238 1 50 1 
53 1 291 1 150 1 247 2 77 3 104 2 274 1 275 9 276 1 349 1 161 1 287 1 65 9 231 7 113 1 114 1 209 2 263 5 212 1 334 1 238 4 193 1 146 1 50 1 
53 1 291 1 150 1 247 2 77 3 104 2 274 1 275 9 276 1 349 1 161 1 287 1 65 9 231 7 113 1 114 1 209 2 263 5 212 1 334 1 238 4 193 1 146 1 50 1 
321 1 363 1 204 1 
355 2 216 1 204 1 
75 1 59 2 100 2 145 2 239 2 325 2 223 2 257 1 
269 1 271 1 54 1 75 1 100 2 31 1 122 1 125 1 252 1 59 2 347 1 60 1 253 1 7 2 223 3 42 1 205 1 257 1 133 1 111 1 163 1 288 1 186 1 325 2 16 1 90 1 379 1 353 1 49 2 354 2 94 2 145 3 239 2 168 2 308 1 243 1 52 1 
281 1 59 1 100 1 145 1 230 1 239 1 325 1 344 1 223 1 257 1 
363 1 100 1 344 1 137 1 217 1 328 1 81 1 345 1 105 1 331 1 144 1 145 1 223 1 204 1 
363 1 100 1 325 1 344 1 137 1 217 1 328 1 81 2 331 1 59 1 144 2 145 1 239 1 223 1 204 1 
81 1 144 1 305 1 62 1 250 1 
81 2 92 1 363 1 5 1 144 2 305 1 62 1 204 1 
81 1 144 1 62 1 
281 1 100 1 230 1 325 1 344 1 81 1 59 1 305 1 144 1 222 1 145 1 239 1 223 1 257 1 
204 1 
81 2 92 1 363 1 144 2 305 1 44 1 62 1 204 1 
127 1 362 2 363 1 86 1 228 2 36 1 37 1 103 1 80 1 81 5 92 1 305 2 144 5 370 2 167 1 254 1 62 2 9 1 204 1 
75 1 76 1 100 5 325 1 218 2 105 1 59 4 357 1 145 5 239 4 116 1 159 1 223 5 203 1 
281 1 10 1 59 2 100 2 145 2 239 2 344 1 223 2 
271 1 54 1 366 1 31 1 100 1 186 1 16 1 90 1 218 1 354 1 347 1 59 1 60 1 94 1 145 2 239 1 168 1 203 1 223 2 42 1 
321 1 75 1 
75 2 76 1 100 2 325 1 59 1 145 2 169 1 239 1 223 2 
352 1 366 1 83 1 
271 1 54 1 75 1 31 1 186 1 16 1 90 1 354 1 347 1 60 1 94 1 145 1 371 1 168 1 223 1 42 1 
218 1 75 1 59 3 100 3 145 3 325 1 239 3 223 3 
281 1 59 1 100 1 145 1 239 1 344 1 223 1 
59 1 76 1 100 1 145 1 169 1 239 1 325 1 344 1 223 1 
269 1 271 1 54 1 75 1 76 1 31 1 100 3 344 1 217 1 218 1 81 1 122 1 174 1 347 1 59 3 60 1 253 1 7 2 223 4 203 1 42 1 205 1 257 1 133 1 111 1 163 1 288 1 87 1 186 1 16 1 325 2 137 1 90 1 328 1 49 1 331 1 354 1 144 1 94 1 145 4 239 3 168 1 308 1 243 1 
218 1 105 1 75 1 59 1 357 1 100 2 145 2 239 1 223 2 
76 1 100 3 325 1 137 1 344 1 217 1 328 1 81 1 218 2 174 1 331 1 59 3 144 1 145 3 239 3 265 1 203 1 223 3 204 1 
218 1 352 1 59 2 76 1 366 1 100 2 145 2 239 2 325 1 223 2 
271 1 54 1 75 1 31 1 186 1 16 1 90 1 354 1 347 1 60 1 94 1 145 1 168 1 223 1 42 1 
271 1 258 1 54 1 75 1 30 1 186 1 90 1 354 1 347 1 60 1 94 1 145 1 168 1 223 1 42 1 
269 1 309 1 149 1 366 2 122 2 125 2 348 1 83 2 372 1 7 2 84 1 179 1 352 2 227 1 133 1 111 1 163 1 288 1 49 4 307 1 242 1 360 1 243 1 339 1 
10 1 59 1 100 1 145 1 239 1 344 1 223 1 328 1 
129 1 85 1 
129 1 85 1 
106 1 279 1 
106 1 279 1 
106 1 279 1 
129 1 85 1 14 1 
129 1 85 1 14 1 
129 1 85 1 285 1 
129 2 85 2 106 1 277 1 279 1 382 1 
129 1 85 1 14 1 
129 1 85 1 17 1 
129 1 85 1 17 1 
129 1 85 1 17 1 
272 1 129 1 290 1 85 1 75 1 285 1 100 2 33 1 119 1 215 1 251 1 369 1 115 1 81 1 200 1 123 1 59 2 144 1 61 1 145 2 239 2 8 1 223 2 51 1 
129 2 272 1 85 2 259 1 66 1 35 2 215 2 115 2 200 2 81 2 262 1 236 1 144 2 157 1 277 1 61 2 118 1 51 3 204 1 
53 1 146 1 193 1 
53 1 146 1 189 1 
234 1 235 1 322 1 193 2 146 3 189 1 
234 1 171 1 322 1 193 1 146 2 189 1 
234 1 322 2 193 1 146 2 189 1 
309 1 290 1 362 1 149 1 363 1 312 2 197 1 33 1 36 3 119 1 216 1 37 1 3 1 80 2 81 5 346 1 370 1 372 1 41 1 62 1 255 1 204 2 64 1 228 1 330 2 92 1 355 3 192 1 144 5 305 4 381 2 360 1 
309 3 362 2 149 3 363 1 364 1 312 6 196 1 33 4 36 8 216 3 250 5 37 1 79 1 80 6 81 9 296 1 370 2 372 3 41 1 62 6 255 2 9 1 204 5 64 2 228 2 89 5 330 6 92 1 355 9 192 3 144 9 305 7 359 1 117 1 360 3 
309 1 362 1 363 1 149 1 312 2 197 1 33 1 36 3 216 2 3 1 81 3 80 2 370 1 372 1 255 1 9 1 204 3 64 1 228 1 330 2 192 1 355 4 305 2 144 3 381 1 360 1 
309 2 362 1 363 1 149 2 364 1 312 4 197 1 33 2 36 5 216 3 3 1 81 4 80 4 296 1 370 1 372 2 255 1 9 1 204 4 64 1 228 1 330 4 355 7 192 2 144 4 305 3 381 2 117 1 360 2 
186 1 42 1 90 1 
373 1 90 1 
321 1 172 1 90 1 
97 1 90 1 
140 1 
42 1 90 1 
300 1 172 2 186 1 324 1 42 1 90 3 
309 1 110 1 15 1 32 1 316 1 2 1 329 1 122 3 318 1 49 7 125 4 221 2 348 2 360 1 339 3 126 1 338 1 
309 1 110 1 15 1 32 1 316 1 2 1 329 1 122 3 318 1 49 7 125 4 221 2 348 2 360 1 339 3 126 1 338 1 
309 1 110 1 15 1 32 1 316 1 2 1 329 1 122 3 318 1 124 1 49 7 125 4 221 2 348 2 360 1 339 3 126 1 338 1 
269 1 309 4 149 3 32 5 316 1 2 2 318 1 122 15 125 16 58 1 221 3 348 5 7 2 372 3 126 2 110 1 11 4 133 1 131 1 111 1 15 1 229 1 162 1 163 1 326 3 139 1 329 2 49 31 192 3 19 1 95 1 338 2 339 10 360 4 
269 2 309 1 32 1 2 1 122 4 318 1 125 5 221 2 348 3 158 1 7 4 126 1 110 1 133 2 131 1 111 2 15 1 163 2 47 1 329 1 49 9 360 1 339 4 338 1 
53 1 148 1 54 1 29 1 247 1 293 1 219 1 275 2 347 1 276 1 177 1 180 1 181 1 65 2 231 1 113 1 188 1 233 1 209 1 114 1 189 1 235 1 354 1 166 1 263 1 94 1 193 1 146 2 168 1 50 1 
53 1 74 1 54 1 29 1 101 1 247 1 198 1 293 1 219 1 275 3 347 1 276 1 177 1 180 1 181 1 65 3 231 2 113 1 188 1 233 1 209 1 114 1 189 1 235 1 354 1 263 1 94 1 193 1 146 2 168 1 
53 1 54 1 29 1 101 1 198 1 293 1 219 1 275 2 347 1 276 1 177 1 181 1 65 2 231 2 113 1 233 1 114 1 189 1 235 1 354 1 263 1 94 1 146 2 193 1 168 1 
340 1 54 1 74 1 365 1 247 1 293 2 56 1 275 1 347 1 60 1 177 2 42 1 181 2 207 1 208 1 65 1 209 1 114 2 90 1 354 1 333 1 94 1 168 1 
53 1 54 1 29 1 101 1 247 1 293 1 219 1 275 1 347 1 177 1 180 1 181 1 65 1 188 1 233 1 209 1 114 1 189 1 235 1 354 1 166 1 94 1 193 1 146 2 168 1 50 1 
72 1 
340 1 54 1 292 2 96 1 99 2 1 1 100 1 344 1 4 1 345 1 105 1 347 1 60 2 107 2 108 1 62 6 255 1 204 2 208 1 355 2 354 2 306 1 168 2 268 1 311 2 362 1 363 1 315 1 36 2 216 2 173 2 37 1 78 1 217 1 80 2 81 5 370 1 223 1 42 1 178 1 376 1 283 4 228 1 137 1 90 1 328 1 92 3 191 2 331 1 144 5 94 2 335 2 336 1 145 1 241 1 
283 2 376 1 100 1 44 1 315 1 137 1 344 1 217 1 328 1 4 1 81 3 92 1 345 1 191 1 331 1 105 1 144 3 145 1 306 1 62 2 241 1 223 1 
363 1 100 1 315 1 344 1 217 1 4 1 81 3 345 1 105 1 62 1 223 1 204 1 376 1 283 3 44 1 137 1 328 1 92 1 331 1 144 3 145 1 335 1 306 1 241 1 
363 1 100 1 315 1 344 1 217 1 4 1 81 3 345 1 105 1 107 1 223 1 62 2 204 1 376 1 283 3 44 1 137 1 328 1 92 1 331 1 191 1 144 3 145 1 335 1 306 1 241 1 
292 2 195 1 99 2 100 1 344 1 4 1 102 1 199 1 345 1 105 1 107 4 6 1 62 7 204 5 306 1 311 2 362 1 363 5 315 1 36 1 173 2 216 2 37 1 78 1 217 1 81 5 80 1 370 1 223 1 283 6 376 1 228 1 44 1 137 1 136 1 328 1 92 3 191 4 331 1 144 5 145 1 335 4 336 1 241 1 
268 1 311 2 362 1 363 1 292 2 99 2 100 1 315 1 36 1 216 2 173 2 37 1 344 1 78 1 217 1 4 1 80 1 81 4 345 1 105 1 370 1 107 2 62 4 223 1 204 2 376 1 283 4 228 1 137 1 328 1 92 2 191 2 355 2 331 1 144 4 335 2 336 1 145 1 306 1 241 1 
311 2 362 1 363 1 292 2 99 2 100 1 315 1 36 1 216 2 173 2 78 1 344 1 37 1 217 1 4 1 102 1 80 1 81 4 345 1 105 1 370 1 107 2 6 1 62 4 223 1 204 1 376 1 283 4 228 1 137 1 136 1 328 1 92 2 191 2 331 1 144 4 335 2 336 1 145 1 306 1 241 1 
311 2 362 1 363 1 292 2 99 2 100 1 315 1 36 1 216 2 173 2 78 1 344 1 37 1 217 1 4 1 102 1 80 1 81 4 345 1 105 1 370 1 107 2 6 1 62 4 223 1 204 1 376 1 283 4 228 1 137 1 136 1 328 1 92 2 191 2 331 1 144 4 335 2 336 1 145 1 306 1 241 1 
311 2 362 1 363 1 99 2 100 1 315 1 36 1 344 1 37 1 217 1 153 2 4 1 39 2 80 1 81 4 345 1 105 1 370 1 107 2 6 1 62 4 223 1 298 1 204 1 374 1 128 1 376 1 283 4 228 1 137 1 328 1 92 2 191 2 355 2 331 1 144 4 335 2 336 1 145 1 306 1 241 1 
311 2 362 1 363 1 292 2 99 2 100 1 315 1 36 1 216 2 173 2 78 1 37 1 344 1 217 1 4 1 102 1 80 1 81 4 199 1 345 1 105 1 370 1 107 3 6 1 223 1 62 5 204 1 376 1 283 5 228 1 136 1 137 1 328 1 92 2 331 1 191 3 144 4 336 1 145 1 335 3 306 1 241 1 
311 2 362 1 363 1 292 2 99 2 100 1 315 1 36 1 216 2 173 2 78 1 37 1 344 1 217 1 4 1 102 1 80 1 81 4 199 1 345 1 105 1 370 1 107 3 6 1 223 1 62 5 204 1 376 1 283 5 228 1 136 1 137 1 328 1 92 2 331 1 191 3 144 4 336 1 145 1 335 3 306 1 241 1 
268 1 311 2 362 1 363 1 99 2 100 1 315 1 36 1 37 1 344 1 217 1 153 2 4 1 39 2 80 1 81 4 345 1 105 1 370 1 107 2 62 4 223 1 298 1 204 1 376 1 283 4 228 1 137 1 328 1 92 2 191 2 355 2 331 1 144 4 335 2 336 1 145 1 306 1 241 1 
269 1 309 1 75 2 366 1 318 1 122 3 125 3 221 1 348 2 83 1 7 2 179 1 126 1 352 1 321 1 110 1 133 1 111 1 15 1 163 1 288 1 49 6 338 1 243 1 339 2 360 1 
269 2 309 2 75 1 149 2 366 11 32 1 122 6 252 1 125 8 348 1 156 1 202 1 83 11 7 4 372 1 205 1 352 4 11 3 133 2 111 2 185 1 229 1 163 2 288 1 326 3 139 1 49 14 192 2 380 1 240 1 339 2 243 2 360 1 
269 1 271 1 54 1 75 1 31 1 100 1 295 1 218 1 122 1 252 1 125 1 347 1 59 1 60 1 371 1 7 2 223 2 203 1 42 1 205 1 352 1 133 1 111 1 185 1 163 1 288 1 186 1 16 1 45 1 90 1 354 1 49 2 94 1 145 2 337 1 168 1 239 1 243 1 
54 2 149 2 98 2 100 1 246 2 344 1 294 1 252 1 59 1 347 2 60 1 348 4 253 2 7 6 203 1 205 1 109 1 352 6 110 1 111 3 15 1 163 3 16 2 354 1 264 1 168 1 170 2 267 2 360 4 269 3 271 2 309 4 75 1 31 2 366 6 32 1 218 1 318 1 122 11 125 11 83 6 372 2 223 3 42 2 126 1 184 1 133 3 185 1 288 3 186 2 90 2 49 22 192 2 94 1 145 3 239 1 338 1 339 5 243 3 
0 1 269 2 340 1 148 1 54 2 101 1 100 1 152 1 218 1 122 1 252 1 125 1 59 1 347 2 60 2 175 1 7 4 223 1 42 2 179 1 205 1 133 2 134 1 111 2 163 2 288 2 208 1 261 1 327 1 90 3 379 2 354 8 49 2 69 1 94 8 145 1 239 1 168 7 243 2 
269 1 309 1 149 1 76 1 366 1 100 1 122 2 125 1 59 1 348 1 83 1 7 2 372 1 223 1 352 1 133 1 111 1 185 1 163 1 288 1 325 1 165 1 192 1 49 3 145 1 239 1 339 1 243 1 360 1 
269 1 309 1 352 1 149 1 133 1 111 1 366 1 32 1 288 1 163 1 49 2 125 2 83 1 7 2 242 1 339 1 179 1 243 1 
269 1 352 1 133 1 111 1 366 1 288 1 163 1 122 2 49 2 348 1 83 1 7 2 372 1 84 1 339 1 179 1 243 1 360 1 
269 1 309 1 149 1 366 2 32 1 122 2 125 2 348 1 83 2 7 2 372 1 179 1 352 2 133 1 111 1 163 1 288 1 192 1 49 4 243 1 339 2 360 1 
269 1 309 1 352 1 149 1 133 1 111 1 366 1 32 1 288 1 163 1 49 2 125 2 175 1 83 1 7 2 242 1 339 1 243 1 
269 1 352 1 133 1 111 1 366 1 288 1 163 1 122 2 49 2 348 1 175 1 83 1 7 2 372 1 84 1 339 1 243 1 360 1 
269 1 309 1 149 1 366 2 32 1 122 2 125 2 175 1 348 1 83 2 7 2 372 1 352 2 133 1 111 1 163 1 288 1 192 1 49 4 243 1 339 2 360 1 
269 1 309 1 149 1 366 2 32 1 122 2 125 2 348 1 83 2 7 2 372 1 352 2 133 1 111 1 163 1 288 1 49 4 192 1 243 1 339 2 360 1 
269 1 271 1 54 1 75 1 31 1 122 1 125 1 252 1 347 1 60 1 253 1 7 2 223 1 42 1 205 1 133 1 111 1 288 1 163 1 186 1 16 1 90 1 49 2 354 1 94 1 145 1 168 1 243 1 
269 1 271 1 54 1 75 1 273 1 30 1 122 1 125 1 252 1 347 1 60 1 7 2 223 1 42 1 205 1 258 1 133 1 111 1 288 1 163 1 186 1 90 1 49 2 354 1 94 1 145 1 168 1 243 1 
269 1 309 1 149 1 366 2 32 1 122 2 125 2 348 1 83 2 7 2 372 1 352 2 133 1 111 1 185 1 163 1 288 1 192 1 49 4 243 1 339 2 360 1 
269 1 309 1 271 1 148 1 54 1 149 1 366 2 31 1 32 1 122 2 125 2 347 1 348 1 253 1 83 2 372 1 7 2 223 1 42 1 352 2 133 1 111 1 288 1 163 1 186 1 16 1 90 1 49 4 354 1 192 1 94 1 145 1 168 1 170 1 360 1 339 2 243 1 
269 1 309 1 149 1 76 1 100 1 366 1 32 1 122 1 125 2 59 1 83 1 372 1 7 2 223 1 350 1 352 1 133 1 111 1 185 1 163 1 288 1 325 1 192 1 49 3 145 1 239 1 360 1 339 1 243 1 
269 3 309 5 149 4 32 4 120 1 318 1 122 21 125 20 221 1 320 1 348 4 40 2 7 6 372 4 256 1 224 1 126 1 375 1 299 1 183 1 110 1 43 1 11 4 131 1 133 3 111 3 377 1 15 1 323 4 229 3 163 3 112 1 232 1 326 3 139 1 46 1 47 1 49 41 192 4 332 1 338 1 339 8 360 5 
269 4 309 5 149 4 32 3 120 1 318 1 122 18 125 20 221 1 320 1 348 4 40 2 7 8 372 3 256 1 224 1 126 1 375 1 299 1 183 1 110 1 43 1 11 4 131 2 133 4 111 4 377 1 15 1 323 4 229 3 163 4 112 1 232 1 326 3 139 1 46 1 47 1 49 38 192 4 332 1 338 1 339 7 360 4 
269 2 309 8 149 7 32 7 120 1 318 1 122 25 125 27 221 1 320 1 348 7 40 1 7 4 372 7 256 1 224 1 126 1 375 1 299 1 110 1 43 1 11 4 131 1 133 2 111 2 377 1 15 1 323 4 229 2 163 2 112 1 232 1 326 4 139 2 46 1 47 1 49 52 192 7 240 2 338 1 339 14 360 8 
270 1 269 2 309 3 149 3 32 3 122 10 125 9 320 1 348 3 40 1 7 4 372 3 256 1 224 1 375 1 299 2 11 2 133 2 111 2 323 2 229 1 163 2 326 1 139 1 47 1 49 19 192 3 332 1 339 6 360 3 
269 3 309 3 149 3 32 2 120 1 122 12 125 14 320 1 348 2 40 2 7 6 372 2 256 1 224 1 375 2 299 1 43 1 11 2 131 2 133 3 111 3 377 1 323 4 229 2 163 3 112 1 326 2 232 1 46 1 47 1 49 26 192 3 339 4 360 2 
14 1 214 1 
135 1 382 1 17 1 
200 1 129 1 236 1 85 1 157 1 277 1 61 1 237 1 215 1 115 1 
285 1 251 1 
200 1 244 1 129 1 85 1 61 1 34 1 215 1 67 1 115 1 
272 1 129 1 85 1 66 1 35 1 215 1 115 1 81 1 200 1 262 1 236 1 144 1 157 1 277 1 61 1 118 1 51 2 204 1 
272 1 129 1 85 1 66 1 35 1 215 1 115 1 81 1 200 1 262 1 236 1 144 1 157 1 277 1 61 1 118 1 51 2 204 1 
272 1 129 1 85 1 66 1 35 1 215 1 115 1 81 1 200 1 262 1 236 1 144 1 157 1 277 1 61 1 118 1 51 2 204 1 
14 1 214 1 382 1 
14 1 214 1 382 1 
135 1 17 1 
135 1 382 1 17 1 
8 1 369 1 
290 1 75 1 100 2 33 1 35 1 215 1 119 1 251 1 369 1 81 1 200 1 123 1 59 2 61 1 223 2 8 1 129 1 85 1 285 1 115 1 262 1 144 1 305 1 145 2 20 1 239 2 51 1 
0 1 26 1 269 1 54 1 100 2 248 1 122 1 252 1 125 1 347 1 7 2 223 2 42 1 205 1 226 1 133 1 111 1 185 1 163 1 288 1 90 1 379 2 354 2 49 2 69 1 94 2 21 1 145 2 168 2 24 1 243 1 
53 1 180 1 206 1 148 1 54 1 29 1 151 1 101 1 233 1 189 1 235 1 354 2 347 1 211 1 94 2 177 1 193 1 146 2 168 2 
53 1 180 1 206 1 54 1 29 1 101 1 302 1 233 1 189 1 235 1 354 1 347 1 94 1 177 1 193 1 146 2 168 1 
340 1 54 1 151 1 249 1 208 1 90 1 354 1 347 1 60 1 333 1 94 1 177 1 168 1 42 1 
53 1 180 1 206 1 54 1 29 1 151 1 101 1 233 1 189 1 235 1 354 1 347 1 211 1 94 1 177 1 193 1 146 2 168 1 
68 1 
80 1 321 1 363 1 167 1 36 1 204 1 103 1 
362 1 363 1 292 1 228 1 36 1 173 1 216 1 37 1 78 1 81 1 80 1 92 1 355 1 144 1 370 1 62 1 204 2 
148 1 54 4 97 3 149 2 1 1 245 2 246 2 103 1 347 3 60 1 155 2 255 2 62 5 297 2 204 8 13 2 260 2 301 1 354 3 355 12 167 1 168 3 25 2 360 2 309 2 362 4 363 2 27 1 172 2 312 6 313 1 36 9 216 6 37 4 81 5 80 8 370 4 372 2 42 3 373 2 130 1 228 4 186 3 324 1 137 2 90 10 92 3 330 6 192 2 141 2 144 5 143 2 94 3 147 1 
309 2 362 2 149 2 363 2 312 5 1 1 245 2 36 8 216 3 37 2 120 1 81 1 80 5 370 2 372 2 255 1 297 1 62 1 63 1 204 5 43 1 11 1 229 1 228 2 112 1 232 1 326 1 46 1 210 1 92 1 330 5 355 6 192 2 144 1 360 2 
309 2 362 1 245 2 100 1 36 2 344 1 294 1 37 1 81 1 80 2 59 1 370 1 222 1 297 1 223 1 126 1 257 1 281 1 228 1 15 1 230 1 325 1 136 1 144 1 145 1 239 1 338 1 360 1 
362 1 363 1 228 1 36 1 37 1 103 1 80 1 370 1 167 1 204 1 
309 2 149 2 312 5 246 1 245 2 36 5 216 5 80 5 330 5 192 2 355 10 372 2 297 1 204 5 360 2 
81 1 92 1 363 1 144 1 62 1 204 1 
340 1 54 1 362 2 1 2 341 1 313 1 36 2 37 1 80 2 81 3 347 1 370 2 60 2 108 1 255 2 62 4 9 1 42 1 178 1 228 2 208 1 90 1 92 2 354 4 93 1 144 3 94 4 168 4 147 2 
269 1 271 1 54 1 75 1 100 2 31 1 122 1 59 2 347 1 60 1 253 1 7 2 223 3 42 1 205 1 257 1 133 1 111 1 288 1 163 1 186 1 325 2 16 1 90 1 49 1 354 1 94 1 145 3 168 1 239 2 308 1 243 1 
362 1 363 2 312 2 1 1 228 1 36 1 216 2 37 1 80 2 330 2 355 4 221 1 370 1 255 1 204 4 
200 1 142 1 215 1 
200 1 142 1 215 1 
200 1 194 1 157 1 215 1 369 1 
200 1 142 1 215 1 
200 1 314 1 215 1 
200 1 314 1 215 1 
200 1 314 1 215 1 
200 1 215 1 
129 1 85 1 
269 1 309 1 122 4 318 1 125 4 221 1 348 2 7 2 126 1 11 1 110 1 133 1 111 1 229 1 15 1 163 1 326 1 232 1 47 1 49 8 360 1 338 1 339 2 
269 2 309 2 149 1 32 1 318 1 122 5 125 6 221 1 348 2 7 4 126 1 110 1 11 2 133 2 111 2 15 1 229 1 163 2 232 1 326 1 139 1 47 1 49 11 192 1 70 1 360 1 338 1 339 3 
269 3 309 3 149 2 32 1 120 1 318 1 122 10 125 9 221 1 348 3 7 6 372 2 126 1 110 1 43 1 11 1 133 3 131 1 111 3 15 1 229 1 163 3 112 1 326 1 232 1 47 1 46 1 49 19 192 2 70 1 338 1 360 3 339 4 
269 3 309 3 149 2 32 2 120 1 318 1 122 7 125 10 221 1 348 3 7 6 372 1 126 1 110 1 11 1 43 1 131 1 133 3 111 3 15 1 229 1 163 3 112 1 326 1 232 1 47 1 46 1 49 17 192 2 70 1 338 1 360 2 339 5 
269 1 309 1 122 4 318 1 125 4 221 1 348 2 7 2 126 1 11 1 110 1 133 1 111 1 229 1 15 1 163 1 326 1 232 1 47 1 49 8 360 1 338 1 339 2 
269 1 309 2 149 2 32 1 120 1 122 6 125 6 348 1 7 2 372 2 11 1 43 1 133 1 111 1 229 1 163 1 112 1 326 1 232 1 47 1 46 1 49 12 192 2 360 2 339 2 
269 4 309 3 149 2 32 2 120 1 318 1 122 8 125 10 221 1 348 3 7 8 372 1 126 1 110 1 43 1 11 1 133 4 131 2 111 4 15 1 229 1 163 4 112 1 232 1 326 1 46 1 47 1 49 18 192 2 70 1 338 1 360 2 339 5 
269 4 309 3 149 3 32 3 120 1 122 7 125 9 348 3 7 8 372 2 43 1 11 1 133 4 131 2 111 4 229 1 163 4 112 1 232 1 326 1 46 1 47 1 49 16 192 3 332 1 360 2 339 6 
309 1 110 1 32 3 15 1 122 4 318 2 49 7 125 3 348 3 360 1 338 3 126 3 339 6 
269 4 309 3 149 2 32 1 120 1 318 1 122 8 125 10 221 1 348 3 7 8 372 1 126 1 110 1 43 1 11 1 133 4 131 2 111 4 15 1 229 1 163 4 112 1 232 1 326 1 46 1 47 1 49 18 192 2 332 1 338 1 360 2 339 4 
269 2 309 1 110 1 133 2 131 1 111 2 15 1 32 1 163 2 122 4 318 1 49 8 125 4 221 1 348 2 7 4 360 1 339 3 338 1 126 1 
309 1 321 1 110 1 15 1 122 3 318 1 49 6 125 3 221 1 348 2 338 1 126 1 339 2 360 1 
269 1 309 1 149 1 133 1 111 1 32 1 163 1 122 2 192 1 49 4 125 2 348 1 70 1 372 1 7 2 360 1 339 2 
309 1 11 2 149 1 229 1 32 1 326 1 139 1 122 4 49 7 192 1 125 3 348 1 372 1 360 1 339 2 
269 2 309 3 149 2 32 4 318 1 122 12 125 11 221 1 348 5 156 1 372 2 7 4 126 2 110 1 11 2 131 2 133 2 111 2 15 1 163 2 326 2 139 1 91 1 192 2 49 23 240 1 338 2 339 9 360 3 
122 1 49 1 11 1 
49 1 125 1 326 1 
269 1 309 1 149 1 133 1 111 1 246 1 32 1 163 1 122 3 49 6 192 1 125 3 348 2 70 1 7 2 372 1 339 3 360 1 
269 1 309 2 149 2 32 1 120 1 122 6 125 6 348 1 7 2 372 2 11 1 43 1 133 1 111 1 229 1 163 1 112 1 326 1 232 1 47 1 46 1 49 12 192 2 360 2 339 2 
309 1 15 1 32 1 122 3 49 6 125 3 348 1 360 1 338 1 126 1 339 2 
269 1 110 1 131 1 133 1 111 1 32 1 163 1 318 1 91 1 122 2 49 3 125 1 348 1 7 2 339 2 126 1 338 1 
269 1 309 2 133 1 111 1 32 2 15 1 163 1 294 1 47 1 122 5 49 10 125 5 348 3 7 2 338 2 126 2 339 5 360 2 
269 1 309 1 149 1 133 1 111 1 32 1 163 1 47 1 49 2 125 2 7 2 339 1 
269 1 309 1 149 1 133 1 111 1 32 1 163 1 47 1 122 2 192 1 49 4 125 2 348 1 372 1 7 2 360 1 339 2 
269 3 131 1 133 3 111 3 32 1 163 3 47 1 91 1 122 2 49 3 332 1 125 1 348 1 7 6 338 1 126 1 339 2 
269 5 309 5 149 3 32 5 318 1 122 18 58 1 125 16 221 1 348 7 7 10 372 3 126 3 110 1 11 4 131 2 133 5 111 5 15 2 229 1 162 1 163 5 326 3 139 1 47 1 91 1 49 34 192 3 332 1 95 1 70 1 338 3 339 12 360 5 
105 1 75 1 100 1 357 1 358 1 145 1 223 1 
310 1 75 1 100 1 55 1 303 1 105 1 220 1 357 1 358 1 278 1 145 1 223 1 
271 1 258 1 54 1 75 1 100 1 186 1 90 1 218 1 354 1 59 1 347 1 60 1 94 1 145 2 239 1 168 1 223 2 42 1 
317 1 354 1 94 1 168 1 147 1 
340 1 54 1 321 1 354 1 347 1 60 1 94 1 208 1 168 1 42 1 90 1 
271 1 54 1 75 1 100 1 31 1 186 1 90 1 218 1 354 1 59 1 347 1 60 1 94 1 145 2 239 1 168 1 223 2 42 1 
271 1 54 1 75 1 100 2 31 1 186 2 344 1 328 1 90 3 218 1 331 1 354 1 59 1 347 1 94 1 145 2 239 2 168 1 25 1 223 2 147 1 373 1 42 2 
271 1 258 1 54 1 75 1 100 2 186 2 344 1 328 1 90 3 218 1 331 1 354 2 59 1 347 1 94 2 145 2 239 2 168 2 213 1 25 1 223 2 147 1 373 1 42 2 
225 1 54 1 363 1 97 1 172 1 186 1 137 1 190 1 90 4 81 2 354 3 347 1 60 1 144 2 94 3 168 3 213 1 25 1 147 1 62 1 373 1 42 1 204 1 
54 1 363 1 97 1 172 1 186 1 137 1 90 4 81 2 354 3 347 1 60 1 144 2 94 3 155 1 168 3 213 1 25 1 147 1 62 1 373 1 42 1 204 1 
54 1 354 1 347 1 134 1 94 1 168 1 
317 1 354 1 60 1 94 1 168 1 
148 1 54 1 100 1 59 1 347 1 348 2 253 1 7 4 352 1 110 1 111 2 15 1 163 2 16 1 354 1 168 1 170 1 267 1 360 1 269 2 271 1 309 1 75 2 31 1 366 1 218 1 318 1 122 3 125 3 221 1 83 1 223 2 42 1 126 1 226 1 133 2 185 1 288 2 186 1 90 1 49 6 94 1 145 2 239 1 243 2 338 1 339 2 
362 2 363 1 97 1 172 1 313 1 36 1 37 2 103 1 80 1 81 3 60 1 370 2 155 1 62 2 204 1 13 1 260 1 228 2 137 1 90 2 92 1 354 1 141 1 144 3 305 1 167 1 94 1 168 1 
148 1 54 2 172 1 134 1 301 1 186 1 324 1 90 2 354 2 347 1 94 2 168 2 42 1 
340 1 148 1 54 1 208 1 38 1 90 1 354 4 347 1 60 1 94 4 168 4 213 1 42 1 
351 1 54 2 367 1 186 1 90 1 319 1 354 2 304 1 347 1 94 2 73 1 168 2 147 1 42 1 
53 1 54 1 354 1 347 1 60 1 94 1 146 1 168 1 233 1 189 1 
0 1 148 1 54 1 354 2 347 1 101 1 94 2 248 1 168 2 42 1 90 1 
0 1 340 1 148 1 54 2 208 1 38 1 327 1 152 1 90 3 354 5 347 2 60 1 94 5 168 4 147 1 42 2 
0 1 340 1 148 1 54 2 208 1 38 1 152 1 90 3 57 1 354 5 347 2 60 1 94 5 168 4 147 1 42 2 
26 1 100 1 368 1 343 1 201 1 21 1 145 1 24 1 223 1 
201 1 182 1 176 1 
201 1 75 1 368 1 342 1 343 1 
75 1 363 1 182 1 132 1 368 2 343 2 342 2 137 1 344 1 217 1 328 1 81 2 201 1 331 1 174 1 305 1 144 2 176 1 204 1 
321 1 263 1 276 1 113 1 
275 1 263 1 276 1 247 1 65 1 113 1 209 1 
181 1 275 1 114 1 
121 1 361 1 275 3 18 1 263 1 276 1 247 1 280 2 65 3 113 1 209 1 50 1 
104 1 275 2 263 1 276 1 247 1 65 2 231 1 113 1 209 1 
53 1 247 1 65 1 209 1 274 1 275 1 263 1 238 1 193 1 146 1 50 1 
275 1 263 1 276 1 247 1 65 1 209 1 50 1 
275 1 276 2 247 1 65 1 113 1 209 1 50 1 
28 1 247 2 65 2 209 2 275 2 263 1 82 1 276 1 71 1 50 1 
291 1 150 1 247 1 77 1 65 3 231 2 113 1 209 1 275 3 263 2 276 1 238 1 50 1 
53 1 247 1 65 2 231 1 113 1 209 1 189 1 235 1 275 2 263 1 276 1 146 2 22 1 193 1 50 1 
247 2 77 1 65 4 231 2 113 1 209 2 104 1 275 4 263 2 276 1 334 1 238 1 50 1 
275 1 263 1 276 1 247 1 65 1 113 1 209 1 50 1 
361 1 247 1 77 1 65 4 231 2 113 2 209 1 275 4 18 1 263 3 276 2 280 1 238 1 266 1 
282 1 247 1 287 1 65 2 88 1 231 1 113 1 209 1 275 2 263 1 276 1 50 1 
361 1 275 3 18 2 154 1 263 1 276 1 247 1 280 2 65 3 113 1 209 1 50 1 
263 2 356 2 378 1 160 1 
275 1 247 1 65 1 164 1 209 1 50 1 
291 1 275 2 263 1 276 1 247 1 65 2 231 1 113 1 209 1 50 1 
12 1 
275 1 263 1 276 1 247 1 65 1 113 1 209 1 50 1 
291 1 275 3 263 1 276 1 247 1 280 1 65 3 231 1 113 1 209 1 50 1 
263 1 77 1 238 1 266 1 
263 1 276 1 

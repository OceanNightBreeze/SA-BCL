#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 1 172 1 205 1 311 1 266 2 207 9 119 2 29 2 183 5 184 1 73 3 31 9 346 2 188 1 165 2 53 1 125 1 148 1 192 2 105 1 297 1 166 1 37 4 23 1 38 6 213 1 259 1 91 2 
42 1 172 1 205 1 311 1 266 2 207 9 119 2 29 2 183 5 184 1 73 3 31 9 346 2 188 1 165 2 53 1 125 1 148 1 105 1 192 2 297 1 166 1 37 4 23 1 38 6 213 1 259 1 91 2 
42 1 172 1 205 1 311 1 266 2 207 10 119 2 29 2 183 6 184 1 73 4 31 10 346 2 188 1 165 2 53 1 125 1 148 1 105 1 192 2 297 1 166 1 37 5 23 1 38 7 213 1 259 1 91 2 
42 1 172 1 205 1 311 1 266 2 207 7 119 2 29 2 183 4 184 1 73 2 31 7 346 2 188 1 165 2 53 1 125 1 148 1 105 1 192 1 297 1 37 3 23 1 38 4 213 1 259 1 91 2 
53 1 172 1 311 1 192 2 148 1 266 1 207 4 166 1 29 1 37 2 183 3 38 3 73 1 213 1 31 4 346 1 165 1 91 1 
172 1 125 1 173 1 311 1 266 1 207 2 119 1 29 1 183 1 363 1 23 1 213 1 31 2 165 1 13 1 91 1 
172 1 311 1 297 1 207 3 119 1 37 1 183 2 38 1 73 1 213 1 31 3 165 2 91 2 
42 1 172 1 311 1 266 1 207 9 176 1 119 1 29 1 139 1 183 5 184 1 73 3 31 9 346 1 165 2 53 1 192 2 148 1 297 1 166 1 37 4 38 7 213 1 91 2 
42 1 172 1 311 1 266 1 207 9 176 1 119 1 29 1 139 1 183 5 184 1 73 3 31 9 346 1 165 2 53 1 192 2 148 1 297 1 166 1 37 4 38 7 213 1 91 2 
99 1 296 1 178 1 
189 2 99 1 75 1 
145 1 144 2 252 2 242 1 206 2 11 2 79 2 52 2 
337 1 26 1 43 1 222 1 115 1 206 3 6 1 177 1 181 1 362 1 234 1 51 1 11 3 52 2 74 2 286 1 122 1 209 1 145 1 144 2 370 1 76 1 238 2 349 1 191 1 242 1 328 1 245 1 79 2 273 2 81 2 59 1 354 1 375 2 198 1 252 2 202 1 
7 1 144 1 252 1 242 1 206 1 11 1 79 1 52 1 347 1 58 1 
171 1 147 1 206 1 296 1 194 1 298 1 79 1 162 1 330 1 344 1 99 1 335 1 11 1 347 1 
144 1 171 1 147 1 206 1 296 1 298 1 79 1 162 2 252 1 344 2 99 1 335 1 52 1 11 1 347 1 
290 1 342 1 16 1 344 1 162 1 
289 1 290 1 16 1 344 2 99 1 296 1 329 1 162 2 
290 1 344 1 162 1 
144 1 16 1 241 1 242 1 206 1 162 1 79 1 58 1 7 1 252 1 344 1 52 1 11 1 347 1 
99 1 
289 1 159 1 290 1 16 1 344 2 99 1 296 1 162 2 
289 1 290 2 16 2 126 1 3 1 294 1 175 1 296 1 244 1 162 5 180 2 361 1 231 1 200 1 344 5 254 2 99 1 320 1 366 2 
145 1 178 1 
32 1 144 1 145 2 206 2 373 1 79 2 252 1 11 2 52 1 
92 1 221 1 295 1 
112 1 145 1 238 1 43 1 349 1 191 1 206 1 6 1 81 1 177 1 59 1 375 1 181 1 202 1 234 1 11 1 
144 1 145 1 61 1 252 3 206 3 11 3 79 3 52 3 
7 1 252 1 206 1 11 1 79 1 52 1 347 1 
32 1 144 1 252 1 206 1 373 1 11 1 79 1 52 1 347 1 
41 1 171 1 26 1 43 1 222 1 115 1 206 4 6 1 162 1 177 1 181 1 362 1 72 1 344 1 234 1 51 1 11 4 52 3 74 1 286 1 122 1 347 1 32 1 145 1 144 2 147 1 238 1 349 1 191 1 242 1 328 1 298 1 245 1 79 3 273 2 196 1 81 1 59 1 375 1 198 1 61 1 252 3 202 1 335 1 
145 1 61 1 252 1 206 2 201 1 11 2 79 2 52 1 330 1 
32 1 41 1 144 1 171 1 147 1 44 1 206 3 298 1 162 1 79 3 196 1 61 2 252 3 344 1 99 1 335 1 52 3 11 3 347 1 
32 1 92 1 144 1 295 1 206 2 79 2 61 1 252 2 52 2 11 2 
145 1 238 1 43 1 191 1 349 1 206 1 6 1 81 1 177 1 59 1 375 1 181 1 202 1 234 1 11 1 
145 1 238 1 43 1 191 1 349 1 206 1 6 1 81 1 59 1 375 1 356 1 202 1 234 1 141 1 11 1 
92 2 158 1 278 1 221 2 222 1 115 1 95 1 312 1 362 1 322 1 286 1 74 4 328 1 295 2 350 1 245 2 273 2 211 1 354 2 198 1 333 1 303 1 154 1 64 1 
48 1 147 1 252 1 206 1 11 1 79 1 52 1 347 1 
92 1 41 1 43 1 238 1 349 1 191 1 206 2 6 1 79 1 177 1 81 1 59 1 375 1 181 1 61 1 252 1 234 1 202 1 52 1 11 2 
32 1 41 1 145 1 144 1 341 1 61 2 252 4 277 1 206 5 201 1 11 5 79 5 52 4 330 1 
7 1 48 1 252 2 206 2 11 2 79 2 52 2 347 1 
114 1 279 1 
114 1 279 1 
348 1 268 1 
348 1 268 1 
348 1 268 1 
114 1 279 1 33 1 
114 1 279 1 33 1 
114 1 339 1 279 1 
348 1 237 1 107 1 114 2 279 2 268 1 
114 1 279 1 33 1 
114 1 279 1 168 1 
114 1 279 1 168 1 
114 1 279 1 168 1 
309 2 237 1 114 2 279 2 1 3 263 1 280 1 360 2 162 2 250 1 140 2 169 1 344 2 99 1 305 1 334 2 142 1 258 1 380 2 
309 1 114 1 145 1 339 1 279 1 1 1 239 1 206 2 79 2 162 1 229 1 249 1 140 1 343 1 185 1 252 2 344 1 334 1 142 1 89 1 11 2 52 2 217 1 380 1 
29 1 266 1 346 1 
29 1 266 1 13 1 
293 1 94 1 346 2 266 3 13 1 218 1 
332 1 94 1 346 1 266 2 13 1 218 1 
346 1 94 2 266 2 13 1 218 1 
158 1 310 2 68 1 162 5 180 1 267 1 49 1 231 1 185 1 344 5 99 2 100 1 366 1 75 1 289 1 290 1 189 3 190 1 16 4 294 2 243 2 296 1 211 1 210 2 249 1 333 1 154 1 378 1 200 3 254 1 155 1 89 1 
158 3 310 6 175 1 226 1 162 9 138 1 316 1 180 2 267 2 49 1 342 5 231 1 344 9 99 5 366 2 75 3 289 1 290 6 55 5 189 9 190 3 16 7 294 6 243 6 296 1 150 1 211 3 333 3 154 3 378 2 200 8 254 2 85 1 170 1 89 4 
158 1 310 2 175 1 68 1 162 3 180 1 267 1 344 3 99 3 100 1 366 1 75 2 190 1 189 4 16 2 294 2 296 1 243 2 211 1 210 1 333 1 154 1 378 1 200 3 254 1 89 1 
158 2 310 4 175 1 226 1 68 1 162 4 138 1 316 1 180 1 267 1 344 4 99 4 100 1 366 1 75 3 189 7 190 2 16 3 294 4 296 1 243 4 211 2 210 2 333 2 154 2 378 1 200 5 254 1 89 2 
349 1 379 1 178 1 
292 1 349 1 
152 1 
349 1 6 1 
270 1 349 3 379 2 6 1 353 1 59 1 
349 1 6 1 59 1 
240 1 349 1 
260 1 93 1 77 1 265 1 45 1 245 3 312 3 313 1 197 1 354 4 199 1 333 1 154 1 9 1 322 2 157 2 74 7 
260 1 93 1 77 1 265 1 45 1 245 3 312 3 313 1 197 1 354 4 199 1 333 1 154 1 9 1 322 2 157 2 74 7 
260 1 93 1 77 1 265 1 45 1 245 3 312 3 313 1 197 1 354 4 199 1 333 1 8 1 154 1 9 1 322 2 157 2 74 7 
260 1 158 3 93 2 265 2 115 1 116 1 45 2 312 10 313 1 362 1 232 1 9 5 322 5 74 31 271 1 369 1 54 3 190 3 77 1 328 1 245 15 272 1 273 2 197 1 211 3 82 1 354 16 198 1 20 4 199 2 333 4 154 4 157 3 308 1 
93 1 77 1 265 1 115 2 328 2 45 1 312 4 245 4 313 1 46 1 273 4 197 1 354 5 362 2 198 2 275 1 199 1 333 1 154 1 232 1 9 1 322 3 157 2 74 9 
25 1 0 1 172 1 43 1 174 1 311 1 266 2 207 2 29 1 119 1 182 1 183 1 284 1 31 2 346 1 14 1 165 1 13 1 238 1 293 1 106 1 81 1 375 1 135 1 38 1 213 1 202 1 257 1 136 1 91 1 
25 1 0 1 43 1 174 1 311 1 266 2 207 3 29 1 119 1 183 1 317 1 284 1 31 3 346 1 14 1 165 1 13 1 238 1 371 1 293 1 81 1 375 1 60 1 135 1 38 2 213 1 202 1 257 1 136 1 91 1 
25 1 0 1 43 1 174 1 311 1 266 2 207 2 119 1 29 1 183 1 317 1 284 1 31 2 346 1 14 1 13 1 238 1 371 1 293 1 81 1 375 1 135 1 38 2 213 1 202 1 
0 2 43 1 174 2 207 1 6 1 315 1 119 2 98 1 31 1 14 2 165 1 146 1 238 1 191 1 325 1 349 1 81 1 375 1 60 1 110 1 202 1 65 1 91 1 
25 1 0 1 172 1 43 1 174 1 266 2 207 1 29 1 119 1 182 1 284 1 31 1 346 1 14 1 165 1 13 1 238 1 371 1 293 1 81 1 375 1 135 1 202 1 257 1 136 1 91 1 
321 1 
43 1 137 2 96 1 6 1 281 1 179 1 180 1 282 1 231 1 344 4 99 1 233 1 12 2 289 3 290 6 238 2 189 2 191 2 349 1 294 2 149 1 18 1 301 2 110 1 302 1 200 2 254 1 253 1 306 2 202 1 160 1 66 2 162 4 208 1 69 1 267 1 366 1 75 2 325 1 81 2 375 2 84 2 214 2 90 2 
289 1 159 1 290 2 96 1 162 2 208 1 281 1 69 1 344 2 253 1 214 1 
69 1 253 1 344 1 306 1 96 1 12 1 281 1 208 1 162 1 
289 1 159 1 290 2 96 1 162 2 208 1 281 1 69 1 344 2 253 1 306 1 214 1 12 1 90 1 
220 1 137 2 96 1 281 1 180 1 282 1 7 1 231 1 344 4 99 2 11 1 12 3 52 1 347 1 289 3 290 7 144 1 241 1 242 1 149 1 294 1 296 2 58 1 246 1 301 2 21 1 200 1 252 1 254 1 253 1 306 3 24 1 159 1 66 2 206 1 162 4 208 1 69 1 366 1 75 2 327 1 79 1 84 2 214 4 90 4 
66 2 137 2 96 1 281 1 208 1 162 3 180 1 282 1 69 1 231 1 344 3 99 2 233 1 366 1 12 2 75 2 289 2 290 4 189 2 149 1 294 1 296 1 301 2 200 1 253 1 254 1 84 2 306 2 214 2 90 2 
66 2 137 2 96 1 281 1 208 1 162 3 180 1 282 1 69 1 231 1 344 3 99 1 366 1 12 2 75 2 289 2 290 4 327 1 149 1 294 1 296 1 301 2 21 1 200 1 254 1 253 1 84 2 306 2 214 2 24 1 90 2 
66 2 137 2 96 1 281 1 208 1 162 3 180 1 282 1 69 1 231 1 344 3 99 1 366 1 12 2 75 2 289 2 290 4 327 1 149 1 294 1 296 1 301 2 21 1 200 1 254 1 253 1 84 2 306 2 214 2 24 1 90 2 
137 2 96 1 281 1 208 1 162 3 118 1 180 1 282 1 69 1 231 1 344 3 99 1 366 1 12 2 289 2 290 4 189 2 294 1 296 1 80 1 301 2 200 1 63 2 254 1 253 1 304 2 306 2 214 2 215 1 24 1 90 2 
66 2 137 2 96 1 281 1 208 1 162 3 282 1 180 1 69 1 231 1 344 3 99 1 366 1 12 3 75 2 289 2 290 5 327 1 149 1 294 1 296 1 246 1 301 2 21 1 200 1 253 1 254 1 84 2 306 3 24 1 214 3 90 3 
66 2 137 2 96 1 281 1 208 1 162 3 282 1 180 1 69 1 231 1 344 3 99 1 366 1 12 3 75 2 289 2 290 5 327 1 149 1 294 1 296 1 246 1 301 2 21 1 200 1 253 1 254 1 84 2 306 3 24 1 214 3 90 3 
137 2 96 1 281 1 208 1 162 3 180 1 282 1 69 1 231 1 344 3 99 1 233 1 366 1 12 2 289 2 290 4 189 2 294 1 296 1 80 1 301 2 200 1 253 1 254 1 63 2 304 2 306 2 214 2 90 2 
92 1 93 1 221 1 222 1 265 1 115 1 312 2 313 1 178 1 362 1 322 2 286 1 74 6 145 2 77 1 295 1 328 1 245 3 273 2 197 1 354 3 198 1 333 1 154 1 64 1 157 1 
92 11 158 2 26 1 221 11 222 2 115 2 116 1 312 2 47 1 362 2 9 1 322 1 286 1 74 14 145 1 54 3 370 1 190 2 328 2 295 4 245 6 133 1 273 4 211 1 354 8 108 1 248 1 198 2 20 3 333 2 167 1 154 1 308 1 
112 1 41 1 26 1 43 1 222 1 115 1 206 2 6 1 177 1 314 1 181 1 362 1 234 1 11 2 52 1 15 1 286 1 74 2 145 1 370 1 238 1 349 1 191 1 295 1 328 1 79 1 245 1 81 1 273 2 59 1 375 1 354 1 108 1 198 1 61 1 252 1 202 1 204 1 
92 7 93 1 41 1 43 2 221 7 222 3 97 1 6 2 177 2 181 2 9 4 234 2 52 1 11 3 286 3 145 2 238 3 190 2 191 1 349 2 295 7 245 10 197 1 59 2 354 10 108 1 247 2 198 3 61 1 62 1 154 3 252 1 202 2 157 1 158 2 26 1 265 1 115 3 206 3 312 8 313 1 120 2 362 3 322 4 74 20 122 2 370 1 371 1 77 1 328 3 79 1 81 3 273 6 211 2 375 3 134 1 83 2 276 2 333 3 
26 1 264 1 43 2 222 2 115 2 206 1 117 1 6 2 362 2 186 1 11 1 52 1 323 1 286 2 74 2 209 2 370 1 371 1 56 1 238 8 349 3 191 2 325 1 328 2 106 1 132 1 79 1 245 1 81 7 273 4 375 8 354 1 109 1 198 2 61 1 110 1 252 1 64 1 202 2 
92 1 158 1 221 1 222 1 115 1 206 1 312 1 362 1 322 1 52 1 11 1 286 1 74 3 32 1 144 1 190 1 295 1 328 1 79 1 245 2 273 2 211 1 354 1 108 1 198 1 376 1 333 1 252 1 154 1 
92 1 158 1 278 1 221 1 222 1 115 1 295 1 328 1 312 1 273 2 354 2 362 1 198 1 333 1 9 1 64 1 74 2 286 1 
92 1 221 1 222 1 115 1 295 1 328 1 312 1 245 2 273 2 211 1 362 1 198 1 303 1 154 1 64 1 322 1 74 2 286 1 
158 1 92 2 221 2 222 1 115 1 312 2 362 1 9 1 322 1 286 1 74 4 190 1 328 1 295 2 245 2 273 2 211 1 354 2 198 1 333 1 154 1 64 1 
92 1 158 1 278 1 221 1 222 1 115 1 295 1 328 1 312 1 273 2 354 2 362 1 198 1 333 1 9 1 323 1 74 2 286 1 
92 1 221 1 222 1 115 1 295 1 328 1 312 1 245 2 273 2 211 1 362 1 198 1 303 1 154 1 322 1 323 1 74 2 286 1 
92 2 158 1 221 2 190 1 222 1 115 1 295 2 328 1 245 2 312 2 273 2 211 1 354 2 362 1 198 1 333 1 154 1 9 1 322 1 323 1 74 4 286 1 
92 2 158 1 221 2 190 1 222 1 115 1 295 2 328 1 245 2 312 2 273 2 211 1 354 2 362 1 198 1 333 1 154 1 9 1 322 1 286 1 74 4 
26 1 43 1 222 1 115 1 206 1 6 1 177 1 181 1 362 1 234 1 11 1 74 2 122 1 286 1 145 1 370 1 238 1 191 1 349 1 328 1 245 1 81 1 273 2 59 1 354 1 375 1 198 1 202 1 
26 1 43 1 222 1 115 1 206 1 6 1 230 1 362 1 234 1 141 1 11 1 74 2 286 1 145 1 370 1 238 1 191 1 349 1 328 1 245 1 81 1 273 2 59 1 354 1 375 1 198 1 356 1 202 1 
92 2 158 1 221 2 190 1 222 1 115 1 295 2 328 1 245 2 312 2 273 2 211 1 354 2 108 1 362 1 198 1 333 1 154 1 9 1 322 1 74 4 286 1 
92 2 158 1 221 2 43 1 222 1 115 1 206 1 312 2 6 1 177 1 181 1 120 1 362 1 9 1 234 1 322 1 11 1 74 4 122 1 286 1 238 1 190 1 349 1 295 2 328 1 106 1 245 2 81 1 273 2 211 1 59 1 354 2 375 1 198 1 333 1 154 1 202 1 
158 1 92 1 221 1 222 1 115 1 206 1 312 1 362 1 9 1 52 1 11 1 286 1 269 1 74 3 32 1 144 1 190 1 328 1 295 1 245 1 79 1 273 2 211 1 354 2 108 1 198 1 333 1 154 1 252 1 
158 3 67 1 115 2 116 1 5 2 312 6 46 1 362 2 318 1 9 3 322 3 74 19 236 1 102 1 54 1 104 1 190 3 128 2 328 2 245 10 273 4 211 3 354 9 300 1 198 2 20 2 333 3 154 3 88 1 308 1 
158 3 67 1 115 3 5 1 312 4 46 1 362 3 318 1 232 2 9 2 322 2 74 26 288 1 103 1 54 2 104 2 190 3 127 1 128 4 328 3 57 1 245 12 352 1 273 6 211 2 354 14 331 1 300 1 198 3 20 2 333 3 154 2 88 2 308 2 
336 1 158 4 67 1 93 1 265 1 115 3 116 1 5 1 312 8 313 1 46 1 362 3 318 1 232 1 9 4 322 4 288 1 74 41 236 1 103 1 54 3 104 1 190 4 127 1 77 1 128 4 57 1 328 3 352 1 245 21 273 6 197 1 211 4 354 20 331 1 300 1 198 3 20 4 333 5 154 5 157 1 88 2 308 3 
336 1 158 4 67 1 93 1 265 1 115 4 116 1 5 1 312 7 313 1 46 1 362 4 318 1 232 2 9 3 322 4 288 1 74 38 236 1 103 1 54 3 104 1 190 4 127 1 77 1 128 4 57 1 328 4 352 1 245 18 273 8 197 1 211 3 354 20 331 1 300 1 198 4 20 4 333 5 154 4 157 1 88 2 308 3 
158 7 67 1 93 1 265 1 115 2 116 2 5 1 312 14 313 1 46 1 362 2 318 1 232 1 9 7 322 7 288 1 74 52 103 1 54 4 104 1 190 7 127 1 77 1 128 4 57 1 328 2 352 1 245 25 273 4 197 1 211 7 354 27 331 1 300 1 198 2 20 4 333 8 167 2 154 8 157 1 88 1 308 2 
309 1 237 1 114 1 279 1 263 1 140 1 169 1 334 1 324 1 380 1 
339 1 217 1 
309 1 113 1 114 1 279 1 140 1 334 1 285 1 340 1 380 1 
309 1 237 1 114 1 279 1 1 2 263 1 280 1 360 1 162 1 140 1 169 1 344 1 99 1 305 1 334 1 142 1 258 1 380 1 
309 1 237 1 114 1 279 1 1 2 263 1 280 1 360 1 162 1 140 1 169 1 344 1 99 1 305 1 334 1 142 1 258 1 380 1 
309 1 237 1 114 1 279 1 1 2 263 1 280 1 360 1 162 1 140 1 169 1 344 1 99 1 305 1 334 1 142 1 258 1 380 1 
355 1 107 1 33 1 
355 1 107 1 33 1 
168 1 143 1 
107 1 168 1 143 1 
343 1 229 1 
309 1 114 1 279 1 1 1 339 1 206 2 360 1 162 1 229 1 140 1 185 1 343 1 344 1 11 2 52 2 145 1 16 1 239 1 34 1 79 2 249 1 252 2 334 1 258 1 89 1 217 1 380 1 
355 1 33 1 
107 1 168 1 143 1 
40 1 26 1 43 1 222 1 115 1 206 2 6 1 30 1 362 1 11 2 286 1 74 2 209 2 370 1 56 1 238 2 349 1 130 1 326 1 328 1 131 1 79 2 245 1 273 2 81 2 375 2 354 1 108 1 109 1 198 1 202 1 
25 1 0 1 43 1 371 1 238 2 293 1 266 2 225 1 106 1 81 2 29 1 375 2 71 1 284 1 346 1 202 1 111 1 257 1 13 1 
25 1 0 1 371 1 238 1 43 1 293 1 193 1 266 2 81 1 29 1 375 1 284 1 346 1 202 1 111 1 257 1 13 1 
0 1 43 1 238 1 349 1 191 1 2 1 325 1 225 1 6 1 81 1 375 1 110 1 202 1 65 1 
25 1 0 1 43 1 371 1 238 1 293 1 266 2 225 1 81 1 29 1 375 1 71 1 284 1 346 1 202 1 111 1 257 1 13 1 
223 1 
200 1 3 1 99 1 294 1 296 1 244 1 178 1 
66 1 162 1 180 1 231 1 344 1 99 2 366 1 75 1 289 1 290 1 189 1 294 1 149 1 296 1 200 1 254 1 84 1 
219 1 171 2 43 4 224 2 3 1 4 1 6 3 180 4 231 4 50 2 344 5 99 8 187 1 289 3 290 5 238 3 189 12 190 2 292 3 240 2 349 10 191 1 294 8 106 1 296 2 243 6 244 1 353 1 151 2 59 3 200 9 154 2 254 4 156 2 202 3 357 1 158 2 160 1 310 6 162 5 267 2 366 4 164 2 75 6 123 2 81 3 211 2 375 3 274 2 83 2 333 2 377 1 379 2 39 2 
158 2 160 1 310 5 162 1 180 2 267 1 231 2 50 2 344 1 99 5 345 1 366 2 288 1 75 3 289 1 290 1 54 1 189 6 190 2 127 1 294 5 57 1 243 5 296 2 352 1 211 2 274 1 331 1 20 1 333 2 200 8 154 2 254 2 216 1 308 1 
93 1 265 1 27 1 206 1 162 1 180 1 7 1 231 1 50 2 344 1 366 1 11 1 52 1 347 1 144 1 241 1 77 1 242 1 294 2 79 1 58 1 274 1 21 1 333 2 154 1 200 2 252 1 254 1 
3 1 294 1 296 1 244 1 180 1 231 1 200 1 254 1 99 1 366 1 
158 2 310 5 190 2 189 10 294 5 243 5 211 2 274 1 83 1 333 2 50 2 154 2 200 5 99 5 75 5 
289 1 290 1 344 1 99 1 296 1 162 1 
219 2 357 1 160 2 43 1 175 1 6 1 162 3 179 1 180 2 267 2 231 1 319 1 344 3 366 2 289 2 290 4 238 4 349 1 191 2 325 1 294 2 81 4 299 1 375 4 110 1 302 1 200 2 254 2 202 1 
26 1 43 1 222 1 115 1 206 3 6 1 177 1 181 1 362 1 234 1 51 1 11 3 52 2 74 1 122 1 286 1 145 1 144 2 238 1 191 1 349 1 242 1 328 1 245 1 79 2 273 2 81 1 59 1 375 1 198 1 252 2 202 1 
160 1 310 2 189 4 294 2 243 2 296 2 180 1 267 1 231 1 200 1 254 1 99 4 366 1 157 1 75 2 
334 1 351 1 380 1 
334 1 351 1 380 1 
22 1 169 1 334 1 229 1 380 1 
334 1 351 1 380 1 
35 1 334 1 380 1 
35 1 334 1 380 1 
35 1 334 1 380 1 
334 1 380 1 
114 1 279 1 
93 1 77 1 265 1 115 2 328 2 245 4 312 3 273 4 313 1 197 1 354 4 362 2 198 2 333 1 154 1 232 1 9 1 157 1 322 2 74 8 
93 1 265 1 77 1 245 3 312 2 178 1 313 1 197 1 354 3 333 1 154 1 157 1 322 2 74 6 
158 1 190 1 115 1 328 1 245 2 312 2 273 2 211 1 354 2 362 1 198 1 333 1 154 1 212 1 9 1 322 1 74 4 
158 1 54 1 190 1 116 1 245 4 312 2 211 1 354 3 20 2 333 1 154 1 9 1 322 1 74 7 308 1 
158 2 93 2 265 2 116 1 115 2 312 9 313 1 47 1 362 2 232 2 9 4 365 1 322 5 74 23 54 2 190 2 77 1 328 2 245 12 273 4 197 1 211 2 354 11 198 2 20 2 333 3 167 1 154 3 157 1 
20 1 245 1 74 1 
354 1 54 1 74 1 
158 1 190 1 115 1 328 1 245 3 312 3 273 2 211 1 354 3 362 1 198 1 83 1 333 1 212 1 154 1 9 1 322 2 74 6 
158 2 115 1 312 2 46 1 362 1 9 1 322 1 74 12 288 1 54 1 190 2 127 1 328 1 57 1 245 6 352 1 273 2 211 2 354 6 331 1 198 1 20 1 333 2 154 2 308 1 
93 1 77 1 265 1 245 3 312 2 354 3 333 1 154 1 9 1 322 1 74 6 
93 1 265 1 115 1 328 1 312 2 245 2 273 2 313 1 197 1 354 1 362 1 198 1 232 1 9 1 365 1 322 1 74 3 
93 2 27 1 265 2 77 1 115 1 328 1 312 5 245 5 273 2 46 1 354 5 362 1 198 1 333 2 154 2 9 2 322 3 74 10 
158 1 115 1 328 1 312 1 46 1 273 2 354 2 362 1 198 1 333 1 9 1 74 2 
158 1 190 1 115 1 328 1 245 2 312 2 46 1 273 2 211 1 354 2 362 1 198 1 333 1 154 1 9 1 322 1 74 4 
236 1 93 1 265 1 115 3 328 3 245 2 312 2 46 1 273 6 354 1 362 3 198 3 232 1 9 1 365 1 322 1 74 3 
158 3 93 3 265 3 115 5 116 1 312 12 313 1 46 1 362 5 232 2 9 5 365 1 322 7 74 34 236 1 271 1 54 3 190 3 77 2 328 5 272 1 245 18 273 10 197 1 211 3 82 1 354 16 198 5 20 4 333 5 212 1 154 5 157 1 308 1 
93 1 265 1 115 1 312 2 46 1 313 1 362 1 322 2 74 8 288 1 54 1 77 1 328 1 245 4 273 2 197 1 354 4 198 1 20 1 333 1 154 1 157 1 308 1 
158 1 93 1 265 1 115 2 116 1 312 3 313 1 46 1 362 2 9 1 322 2 74 11 288 1 54 1 190 1 77 1 328 2 245 5 273 4 197 1 354 6 198 2 20 2 333 2 154 1 212 1 157 1 308 1 
158 2 93 1 265 1 115 3 312 4 313 1 46 1 362 3 232 1 9 1 322 3 74 19 288 1 54 1 190 2 127 1 77 1 328 3 57 1 245 10 352 1 273 6 197 1 211 2 354 9 331 1 198 3 20 1 333 3 212 1 154 3 157 1 308 1 
158 2 93 1 265 1 115 3 312 5 313 1 46 1 362 3 232 1 9 2 322 3 74 17 288 1 54 1 190 2 127 1 77 1 328 3 57 1 245 7 352 1 273 6 197 1 211 1 354 10 331 1 198 3 20 1 333 3 212 1 154 2 157 1 308 1 
93 1 265 1 115 1 312 2 46 1 313 1 362 1 322 2 74 8 288 1 54 1 77 1 328 1 245 4 273 2 197 1 354 4 198 1 20 1 333 1 154 1 157 1 308 1 
158 2 115 1 312 2 46 1 362 1 9 1 322 1 74 12 288 1 54 1 190 2 127 1 328 1 57 1 245 6 352 1 273 2 211 2 354 6 331 1 198 1 20 1 333 2 154 2 308 1 
158 2 93 1 265 1 115 4 312 5 313 1 46 1 362 4 232 2 9 2 322 3 74 18 288 1 54 1 190 2 127 1 77 1 328 4 57 1 245 8 352 1 273 8 197 1 211 1 354 10 331 1 198 4 20 1 333 3 212 1 154 2 157 1 308 1 
158 3 115 4 312 6 46 1 362 4 232 2 9 3 322 3 74 16 288 1 236 1 54 1 190 3 127 1 328 4 57 1 245 7 352 1 273 8 211 2 354 9 331 1 198 4 20 1 333 3 154 2 308 1 
93 3 265 3 77 1 245 4 312 6 313 1 197 2 354 3 333 1 154 1 9 3 322 3 74 7 
158 2 93 1 265 1 115 4 312 4 313 1 46 1 362 4 232 2 9 1 322 3 74 18 288 1 236 1 54 1 190 2 127 1 77 1 328 4 57 1 245 8 352 1 273 8 197 1 211 1 354 10 331 1 198 4 20 1 333 3 154 2 157 1 308 1 
145 1 261 1 206 1 201 1 11 1 79 1 330 1 
145 1 261 1 291 1 359 1 206 1 79 1 330 1 201 1 87 1 203 1 367 1 11 1 
375 1 43 1 110 1 238 1 349 1 325 1 191 1 202 1 6 1 178 1 81 1 
145 1 43 1 238 1 349 1 191 1 206 2 6 1 79 1 81 1 177 1 59 1 375 1 61 1 252 1 234 1 202 1 52 1 11 2 
219 1 145 1 147 1 43 1 238 1 240 1 349 3 206 2 6 2 79 2 81 1 177 1 59 2 375 1 61 1 252 2 156 1 335 1 234 1 202 1 52 1 11 2 347 1 
219 1 124 1 145 1 147 1 43 1 238 2 240 1 349 3 206 2 6 2 79 2 81 2 59 2 375 2 356 1 61 1 252 2 156 1 335 1 234 1 202 1 52 1 11 2 347 1 
219 1 124 1 290 1 171 1 161 1 43 1 238 3 240 1 292 1 191 1 349 4 296 1 6 1 162 2 81 3 59 1 375 3 344 2 99 1 379 1 156 1 202 1 10 1 
219 1 124 1 290 1 171 1 43 1 238 3 240 1 292 1 191 1 349 4 296 1 6 1 162 2 81 3 151 1 59 1 375 3 344 2 99 1 379 1 156 1 202 1 
375 1 43 1 238 1 264 1 202 1 81 1 
264 1 371 1 56 1 238 7 43 3 17 1 191 2 349 3 106 1 117 1 132 1 6 2 81 6 353 1 59 1 375 7 186 1 235 1 202 2 307 1 209 1 
92 1 93 1 43 1 221 1 222 2 6 1 177 1 181 1 234 1 52 1 11 2 286 2 145 2 238 1 349 1 295 1 106 1 245 3 59 1 197 1 354 3 108 1 198 2 61 1 252 1 154 1 202 1 157 1 265 1 115 2 206 2 312 2 313 1 120 1 362 2 322 2 122 1 74 6 77 1 130 1 328 2 79 1 81 1 273 4 375 1 276 1 333 1 
357 1 171 1 224 1 3 1 162 3 180 2 231 2 344 3 99 1 366 2 164 1 123 1 289 1 290 2 238 1 16 1 292 1 191 1 349 2 294 1 296 1 244 1 81 1 151 1 375 1 200 1 254 2 379 1 
264 1 238 2 43 2 349 2 4 1 106 1 6 1 81 2 353 1 59 1 375 2 379 1 202 1 
124 1 43 1 238 4 191 1 325 1 349 1 106 1 6 1 81 4 375 4 153 1 110 1 202 1 
219 1 238 2 43 2 17 1 349 1 6 1 81 2 59 1 375 2 70 1 62 1 202 1 307 1 368 1 
29 1 375 1 43 1 238 1 284 1 191 1 266 1 202 1 13 1 81 1 
375 2 30 1 43 1 56 1 371 1 238 2 349 1 202 1 106 1 6 1 81 2 
219 1 238 5 56 1 43 2 325 1 191 1 349 3 106 1 117 1 6 2 132 1 81 4 375 5 153 1 110 1 202 2 
219 1 238 5 56 1 43 2 325 1 191 1 349 3 106 1 28 1 6 2 132 1 81 4 375 5 153 1 110 1 202 2 
145 1 43 1 238 1 349 1 191 1 206 2 6 1 79 1 81 1 59 1 375 1 356 1 61 1 252 1 234 1 202 1 52 1 11 2 
219 1 238 1 43 2 17 1 349 1 6 1 81 1 353 1 59 1 375 1 235 1 202 1 307 1 
145 1 338 1 358 1 86 1 19 1 
145 1 171 1 262 1 147 1 338 2 16 1 358 2 129 1 296 1 298 1 162 2 196 1 19 1 344 2 99 1 335 1 163 1 86 2 347 1 
40 1 358 1 326 1 206 1 131 1 79 1 19 1 86 1 11 1 
262 1 163 1 19 1 
183 1 311 1 213 1 178 1 
183 1 311 1 213 1 31 1 207 1 165 1 91 1 
119 1 31 1 14 1 
172 1 311 1 372 1 207 3 183 1 23 2 364 1 31 3 213 1 255 1 165 1 91 1 
183 1 311 1 38 1 192 1 213 1 31 2 207 2 165 1 91 1 
29 1 183 1 37 1 172 1 148 1 31 1 266 1 346 1 207 1 165 1 91 1 
183 1 172 1 213 1 31 1 207 1 165 1 91 1 
172 1 311 1 213 2 31 1 207 1 165 1 91 1 
172 1 31 1 256 1 207 1 165 1 228 1 91 1 
42 1 172 1 311 1 207 3 37 1 183 2 184 1 38 2 73 1 213 1 31 3 165 1 91 1 
172 1 293 1 311 1 36 1 266 2 207 2 29 1 183 1 38 1 213 1 31 2 346 1 13 1 165 1 91 1 
172 1 311 1 192 1 207 4 166 1 37 1 183 2 38 2 73 1 213 1 31 4 165 2 91 2 
183 1 172 1 311 1 213 1 31 1 207 1 165 1 91 1 
311 2 207 4 37 1 183 3 283 1 23 1 38 2 364 1 73 1 213 2 31 4 255 1 165 1 91 1 
172 1 311 1 227 1 207 2 374 1 176 1 183 1 38 1 213 1 31 2 165 1 91 1 
183 1 172 1 311 1 23 2 364 2 213 1 31 3 255 1 121 1 207 3 165 1 91 1 
101 1 183 2 251 2 195 1 
172 1 31 1 207 1 287 1 165 1 91 1 
183 1 42 1 172 1 311 1 38 1 213 1 31 2 207 2 165 1 91 1 
78 1 
183 1 172 1 311 1 213 1 31 1 207 1 165 1 91 1 
42 1 172 1 311 1 207 3 183 1 38 1 23 1 31 3 213 1 165 1 91 1 
183 1 37 1 283 1 73 1 
183 1 213 1 

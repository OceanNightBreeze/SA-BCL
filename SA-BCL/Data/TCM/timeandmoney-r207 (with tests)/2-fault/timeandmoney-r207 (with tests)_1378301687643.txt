#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (1,245) (1,245) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (1,245) (1,245) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (1,245) (1,245) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (1,245) (1,245) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (192,346) 304 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (192,346) 269 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (192,346) 269 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (192,346) 304 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 1492 | stmt -> ;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
75 1 245 1 1 1 261 1 344 1 367 1 217 1 137 1 164 1 332 1 314 1 
75 1 245 1 1 1 261 1 344 1 367 1 217 1 137 1 164 1 332 1 314 1 
75 1 245 1 1 1 261 1 344 1 367 1 217 1 137 1 164 1 332 1 314 1 
75 1 245 1 1 1 261 1 344 1 367 1 217 1 137 1 164 1 332 1 314 1 
115 1 75 1 46 1 326 2 137 1 148 1 164 1 196 1 112 1 253 1 89 2 377 1 20 1 102 3 217 4 367 4 305 1 91 3 
75 1 261 1 137 1 164 1 196 1 112 1 303 1 253 1 293 1 339 1 217 2 367 2 91 1 305 1 358 1 314 1 
75 1 115 1 326 1 137 2 164 2 112 1 71 1 102 1 217 3 367 3 305 1 91 2 314 1 
115 3 75 1 76 1 137 2 164 2 253 1 167 1 102 7 367 9 217 9 305 1 46 1 323 1 326 4 148 1 196 1 112 1 89 2 71 1 20 1 377 1 356 1 91 5 314 1 
115 3 75 1 76 1 137 2 164 2 253 1 167 1 102 7 367 9 217 9 305 1 46 1 323 1 326 4 148 1 196 1 112 1 89 2 71 1 20 1 377 1 356 1 91 5 314 1 
255 1 210 1 193 1 
255 1 214 2 133 1 
117 2 153 2 248 2 360 2 132 2 281 2 17 1 268 1 
116 1 117 3 248 2 360 2 136 1 163 1 337 1 97 1 280 2 98 1 99 1 340 2 281 2 170 1 42 1 225 1 264 1 109 1 129 1 69 1 348 2 17 1 310 1 268 1 230 1 291 1 233 1 352 2 234 1 152 1 153 3 239 1 155 1 158 1 23 2 132 2 55 1 
142 1 90 1 117 1 153 1 248 1 360 1 132 1 281 1 373 1 17 1 
77 1 275 1 117 1 161 1 248 1 373 1 119 1 59 1 210 1 151 1 255 1 113 1 153 1 201 1 
77 1 275 1 117 1 161 1 248 1 360 1 373 1 59 2 210 1 255 1 113 2 153 1 132 1 201 1 281 1 
113 1 371 1 59 1 244 1 333 1 
125 1 255 1 113 2 371 1 378 1 59 2 210 1 244 1 
113 1 59 1 244 1 
142 1 371 1 117 1 248 1 360 1 373 1 59 1 17 1 113 1 90 1 153 1 9 1 132 1 281 1 
255 1 
125 1 56 1 255 1 113 2 371 1 59 2 210 1 244 1 
135 1 125 1 371 2 68 1 127 1 58 2 6 1 59 5 210 1 213 1 255 1 113 5 376 1 100 1 312 1 22 1 218 2 134 2 244 2 
74 1 225 1 264 1 117 2 143 1 248 1 360 1 69 1 163 1 230 1 291 1 96 1 352 1 280 1 98 1 99 1 153 2 132 1 340 1 170 1 
268 1 193 1 
246 1 117 2 248 2 360 1 268 2 153 2 132 1 281 1 273 1 
96 1 139 1 80 1 
225 1 117 1 264 1 69 1 163 1 268 1 230 1 291 1 352 1 280 1 153 1 98 1 99 1 355 1 340 1 170 1 
74 2 246 1 117 5 248 5 143 1 360 4 325 1 47 1 268 1 231 1 151 1 153 5 132 4 281 1 
189 1 90 1 117 2 153 2 248 2 360 2 132 2 373 1 
74 1 117 3 153 3 248 3 360 3 132 3 281 1 268 1 
90 1 117 1 153 1 248 1 360 1 132 1 373 1 
246 1 117 1 153 1 248 1 360 1 132 1 281 1 373 1 273 1 
74 1 116 1 77 1 299 1 246 1 275 1 117 4 161 1 3 1 248 3 360 3 136 1 163 1 59 1 97 1 280 1 98 1 99 1 340 1 281 2 170 1 225 1 264 1 143 1 109 1 69 1 373 1 348 2 17 1 268 1 230 1 291 1 233 1 352 1 234 1 152 1 113 1 153 4 239 1 155 1 23 1 132 3 201 1 55 1 
74 1 151 1 117 2 153 2 248 2 360 1 325 1 132 1 268 1 
74 2 77 1 246 1 299 1 275 1 161 1 117 3 143 1 248 3 360 3 373 1 59 1 375 1 255 1 113 1 153 3 132 3 201 1 281 1 
74 1 96 1 246 1 117 2 153 2 248 2 360 2 132 2 281 1 80 1 
225 1 117 1 264 1 69 1 163 1 268 1 230 1 291 1 352 1 280 1 153 1 99 1 98 1 340 1 170 1 
117 1 264 1 69 1 163 1 268 1 230 1 291 1 352 1 280 1 153 1 98 1 340 1 258 1 170 1 27 1 
116 1 29 1 136 1 5 1 80 2 96 2 97 1 139 2 83 1 259 1 285 1 263 1 147 1 129 2 48 1 348 2 374 1 150 1 152 1 155 1 239 2 23 4 180 1 55 1 
189 1 77 1 117 1 153 1 248 1 360 1 132 1 373 1 
44 1 223 1 
44 1 223 1 
338 1 215 1 
338 1 215 1 
338 1 215 1 
44 1 126 1 223 1 
44 1 126 1 223 1 
44 2 338 1 215 1 346 1 223 2 192 1 
44 1 241 1 223 1 
44 1 126 1 223 1 
44 1 36 1 223 1 
44 1 36 1 223 1 
44 1 36 1 223 1 
188 1 298 1 94 1 117 2 248 2 360 2 138 1 59 1 123 1 124 1 368 1 223 1 44 1 106 1 262 1 15 1 327 1 268 1 113 1 153 2 132 2 241 1 357 1 26 1 
44 2 94 1 322 1 108 1 262 3 2 1 59 2 349 1 192 1 255 1 113 2 123 2 81 2 365 1 219 1 357 2 124 2 223 2 368 2 
148 1 196 1 253 1 
293 1 196 1 253 1 
168 1 293 1 240 1 148 2 196 3 54 1 
168 1 293 1 148 1 196 2 54 1 51 1 
168 1 293 1 148 1 196 2 54 2 
135 1 29 1 31 1 95 1 138 1 4 1 5 1 278 2 58 1 59 5 210 1 254 1 255 2 214 3 218 1 369 1 125 1 104 1 226 2 106 1 371 4 345 1 147 1 87 2 48 1 113 5 376 3 312 2 133 1 134 1 26 1 244 1 
135 1 29 3 30 1 31 1 276 1 361 1 5 3 278 6 58 2 59 9 210 1 254 2 255 5 214 9 257 1 218 2 369 3 125 1 104 2 226 6 106 4 371 7 147 3 48 3 270 5 113 9 199 1 376 8 22 1 312 6 133 3 134 2 203 1 244 6 333 5 
29 1 4 1 5 1 58 1 278 2 59 3 210 1 254 1 255 3 214 4 218 1 369 1 104 1 106 1 226 2 371 2 345 1 87 1 147 1 48 1 113 3 376 3 22 1 312 2 133 2 134 1 
29 2 276 1 361 1 4 1 5 2 278 4 58 1 59 4 210 1 254 1 255 4 214 7 218 1 369 2 104 1 226 4 106 2 371 3 345 1 87 2 147 2 48 2 113 4 376 5 22 1 312 4 133 3 134 1 203 1 
98 1 209 1 193 1 
190 1 98 1 
149 1 
98 1 264 1 291 1 
98 1 318 1 
98 1 264 1 
52 1 98 3 264 1 154 1 209 2 291 1 
334 1 29 1 45 1 263 3 324 2 287 1 336 1 145 1 48 1 129 4 150 2 198 1 239 3 23 7 103 1 93 1 205 1 
334 1 29 1 45 1 263 3 324 2 287 1 336 1 145 1 48 1 129 4 150 2 198 1 239 3 23 7 103 1 93 1 205 1 
334 1 29 1 45 1 263 3 324 2 287 1 336 1 145 1 48 1 129 4 150 2 198 1 292 1 239 3 23 7 103 1 93 1 205 1 
334 2 116 1 29 4 300 1 336 1 5 3 140 1 103 5 222 1 283 3 369 3 45 2 263 10 324 3 287 2 288 1 145 1 16 4 147 3 129 16 48 4 348 2 150 5 198 1 152 1 239 15 155 1 72 1 23 31 159 1 186 1 93 2 205 1 55 1 
0 1 334 1 116 2 29 1 39 1 103 1 45 1 263 4 324 2 287 1 145 1 48 1 129 5 348 4 150 3 198 1 152 2 155 2 239 4 23 9 159 1 93 1 55 2 205 1 
75 1 137 1 33 1 164 1 163 1 253 1 280 1 38 1 102 1 366 1 340 1 367 2 217 2 305 1 105 1 85 1 308 1 146 1 148 1 230 1 196 2 112 1 352 1 353 1 293 1 240 1 271 1 91 1 185 1 314 1 
247 1 137 1 33 1 164 1 163 1 253 1 280 1 38 1 102 2 340 1 367 3 217 3 305 1 41 1 105 1 85 1 308 1 289 1 146 1 148 1 230 1 196 2 112 1 352 1 353 1 293 1 240 1 91 1 185 1 314 1 
247 1 33 1 163 1 253 1 280 1 38 1 102 2 340 1 367 2 217 2 305 1 105 1 85 1 308 1 289 1 148 1 230 1 196 2 112 1 352 1 353 1 293 1 240 1 91 1 314 1 
315 1 137 1 33 2 163 1 164 1 63 1 280 1 38 2 98 1 340 1 367 1 217 1 170 1 41 1 105 2 342 1 264 1 176 1 230 1 352 1 200 1 114 1 314 2 
75 1 105 1 85 1 308 1 146 1 289 1 137 1 33 1 148 1 163 1 164 1 196 2 230 1 253 1 353 1 352 1 280 1 38 1 293 1 240 1 271 1 217 1 367 1 340 1 185 1 314 1 
181 1 
135 1 301 2 248 1 57 1 58 1 59 5 252 1 64 2 254 1 255 2 98 1 101 2 340 2 264 1 111 2 197 1 352 2 151 1 113 5 153 1 312 2 201 1 204 1 77 1 315 1 275 1 117 1 161 1 277 2 317 1 363 4 163 1 119 1 210 1 121 2 280 2 214 2 216 1 218 1 170 2 125 3 86 1 227 1 328 1 373 1 176 1 230 1 50 1 53 2 376 2 133 2 134 1 296 1 242 1 244 6 
77 1 56 1 275 1 117 1 161 1 248 1 363 2 119 1 59 3 64 1 125 1 227 1 328 1 373 1 50 1 151 1 113 3 153 1 201 1 242 1 204 1 244 2 
77 1 56 1 275 1 117 1 161 1 248 1 277 1 363 3 119 1 59 3 210 1 255 1 125 1 227 1 328 1 373 1 50 1 151 1 113 3 153 1 201 1 242 1 204 1 244 1 
77 1 56 1 275 1 117 1 161 1 248 1 301 1 277 1 363 3 119 1 59 3 210 1 64 1 255 1 125 1 227 1 328 1 373 1 50 1 151 1 113 3 153 1 201 1 242 1 204 1 244 2 
135 1 77 1 208 1 56 1 275 1 117 1 161 1 248 1 301 4 277 4 58 1 317 1 363 6 119 1 59 5 210 5 121 2 64 4 255 5 101 2 218 1 220 1 125 3 227 1 328 1 373 1 49 1 111 2 50 1 197 1 151 1 113 5 53 2 376 1 153 1 312 1 201 1 133 2 134 1 182 1 242 1 184 1 204 1 244 7 
135 1 248 1 301 2 58 1 59 4 64 2 255 2 101 2 111 2 197 1 151 1 113 4 153 1 312 1 201 1 204 1 77 1 275 1 161 1 117 1 277 2 363 4 317 1 119 1 210 1 121 2 214 2 218 1 125 2 227 1 373 1 328 1 50 1 376 1 53 2 134 1 133 2 242 1 296 1 244 4 
135 1 77 1 275 1 117 1 161 1 301 2 248 1 277 2 58 1 317 1 363 4 119 1 59 4 210 1 121 2 64 2 255 1 101 2 218 1 220 1 125 2 227 1 328 1 373 1 49 1 111 2 50 1 197 1 151 1 113 4 53 2 376 1 153 1 312 1 201 1 133 2 134 1 242 1 184 1 204 1 244 4 
135 1 77 1 275 1 117 1 161 1 301 2 248 1 277 2 58 1 317 1 363 4 119 1 59 4 210 1 121 2 64 2 255 1 101 2 218 1 220 1 125 2 227 1 328 1 373 1 49 1 111 2 50 1 197 1 151 1 113 4 53 2 376 1 153 1 312 1 201 1 133 2 134 1 242 1 184 1 204 1 244 4 
135 1 77 1 274 1 275 1 117 1 161 1 301 2 248 1 277 2 58 1 317 1 363 4 119 1 59 4 210 1 121 2 279 1 64 2 255 1 214 2 122 2 101 2 218 1 125 2 227 1 343 2 328 1 373 1 70 1 50 1 151 1 113 4 376 1 153 1 312 1 201 1 134 1 242 1 184 1 204 1 244 4 
135 1 77 1 275 1 117 1 161 1 248 1 301 3 277 3 58 1 317 1 363 5 119 1 59 4 210 1 121 2 64 3 255 1 101 2 218 1 220 1 125 2 227 1 328 1 373 1 49 1 111 2 50 1 197 1 151 1 113 4 53 2 376 1 153 1 312 1 201 1 133 2 134 1 182 1 242 1 184 1 204 1 244 5 
135 1 77 1 275 1 117 1 161 1 248 1 301 3 277 3 58 1 317 1 363 5 119 1 59 4 210 1 121 2 64 3 255 1 101 2 218 1 220 1 125 2 227 1 328 1 373 1 49 1 111 2 50 1 197 1 151 1 113 4 53 2 376 1 153 1 312 1 201 1 133 2 134 1 182 1 242 1 184 1 204 1 244 5 
135 1 77 1 275 1 117 1 161 1 301 2 248 1 277 2 58 1 317 1 363 4 119 1 59 4 210 1 121 2 279 1 64 2 255 1 214 2 122 2 101 2 218 1 125 2 227 1 343 2 328 1 373 1 50 1 151 1 113 4 376 1 153 1 312 1 201 1 134 1 296 1 242 1 204 1 244 4 
334 1 116 1 29 1 136 1 80 1 96 1 97 1 139 1 83 1 193 1 45 1 263 2 324 1 145 1 129 3 48 1 348 2 268 2 150 2 198 1 152 1 155 1 239 3 23 6 205 1 55 1 
116 2 29 2 300 1 136 1 79 1 80 4 5 1 96 11 97 2 139 11 103 1 283 3 369 2 321 1 307 1 263 2 109 1 347 1 16 3 147 2 129 8 48 1 348 4 268 1 150 1 152 2 239 6 155 2 158 1 23 14 72 1 202 1 55 2 
74 1 116 1 117 2 248 1 360 1 136 1 79 1 80 1 163 1 35 1 280 1 97 1 98 1 99 1 340 1 170 1 221 1 225 1 264 1 143 1 109 1 69 1 129 1 348 2 268 1 230 1 291 1 352 1 152 1 153 2 155 1 239 1 355 1 23 2 158 1 132 1 272 1 55 1 
334 1 248 1 249 2 136 3 5 2 96 7 97 3 139 7 8 2 99 2 98 2 340 3 103 4 11 1 263 8 264 2 143 1 109 1 145 1 147 2 69 2 348 6 268 2 351 1 150 4 352 3 198 1 152 3 153 3 155 3 158 1 23 20 205 1 74 1 116 3 29 3 117 3 360 1 79 1 80 7 163 2 280 3 170 1 369 2 225 2 45 1 324 1 289 1 48 3 129 10 178 2 230 2 233 2 291 2 238 2 239 10 132 1 243 1 55 3 
74 1 116 2 315 1 117 1 32 1 248 1 360 1 136 2 163 2 60 1 337 2 280 8 97 2 98 3 366 1 340 7 83 1 170 2 194 1 264 2 109 1 289 1 129 1 348 4 176 1 230 2 352 8 152 2 153 1 155 2 239 1 21 1 158 1 23 2 132 1 379 1 24 1 381 1 55 2 
116 1 246 1 29 1 117 1 248 1 360 1 136 1 79 1 80 1 5 1 96 1 97 1 139 1 281 1 369 1 263 1 147 1 175 1 129 1 48 1 348 2 150 1 152 1 153 1 155 1 239 2 23 3 132 1 55 1 
116 1 29 1 263 1 136 1 147 1 80 1 129 2 348 2 96 1 97 1 139 1 152 1 155 1 23 2 180 1 103 1 83 1 55 1 
116 1 263 1 136 1 80 1 5 1 48 1 348 2 150 1 96 1 97 1 139 1 152 1 155 1 239 2 23 2 83 1 259 1 55 1 
116 1 29 1 136 1 80 2 5 1 96 2 97 1 139 2 83 1 103 1 369 1 263 2 147 1 129 2 48 1 348 2 150 1 152 1 155 1 239 2 23 4 55 1 
116 1 29 1 263 1 32 1 136 1 147 1 80 1 129 2 348 2 96 1 97 1 139 1 152 1 155 1 23 2 180 1 103 1 55 1 
116 1 263 1 32 1 136 1 80 1 5 1 48 1 348 2 150 1 96 1 97 1 139 1 152 1 155 1 239 2 23 2 259 1 55 1 
116 1 29 1 32 1 136 1 80 2 5 1 96 2 97 1 139 2 103 1 369 1 263 2 147 1 129 2 48 1 348 2 150 1 152 1 155 1 239 2 23 4 55 1 
116 1 29 1 136 1 80 2 5 1 96 2 97 1 139 2 103 1 369 1 263 2 147 1 129 2 48 1 348 2 150 1 152 1 155 1 239 2 23 4 55 1 
116 1 117 1 136 1 163 1 280 1 97 1 99 1 98 1 340 1 170 1 225 1 264 1 109 1 129 1 69 1 348 2 268 1 230 1 291 1 233 1 352 1 152 1 153 1 155 1 239 1 158 1 23 2 55 1 
116 1 117 1 136 1 163 1 280 1 97 1 98 1 258 1 82 1 340 1 170 1 264 1 109 1 129 1 69 1 348 2 268 1 230 1 291 1 352 1 152 1 153 1 155 1 239 1 158 1 23 2 27 1 55 1 
116 1 29 1 136 1 79 1 80 2 5 1 96 2 97 1 139 2 103 1 369 1 263 2 147 1 129 2 48 1 348 2 150 1 152 1 155 1 239 2 23 4 55 1 
116 1 29 1 117 1 136 1 5 1 80 2 163 1 96 2 280 1 97 1 139 2 99 1 98 1 366 1 340 1 103 1 369 1 225 1 263 2 264 1 147 1 48 1 129 2 69 1 348 2 230 1 178 1 291 1 233 1 150 1 352 1 152 1 153 1 239 2 155 1 23 4 55 1 
116 1 246 1 29 1 117 1 248 1 360 1 136 1 79 1 5 1 80 1 96 1 97 1 139 1 103 1 281 1 13 1 369 1 263 1 147 1 48 1 129 2 348 2 152 1 153 1 239 1 155 1 23 3 132 1 55 1 
0 1 334 1 300 3 5 4 7 1 103 4 10 4 306 1 107 1 263 8 147 4 16 4 145 1 348 6 195 2 18 1 311 1 150 4 354 1 198 1 152 3 155 3 72 1 23 41 157 1 159 1 205 1 206 1 116 3 29 5 359 1 37 1 283 3 369 4 45 1 174 1 324 1 48 5 129 20 232 1 239 21 331 1 55 3 
334 1 206 1 0 1 116 4 29 5 359 1 300 3 5 3 7 1 37 1 10 4 103 3 283 3 369 4 306 1 45 1 107 1 263 7 174 1 324 1 145 1 16 4 147 4 129 20 48 4 195 2 348 8 18 1 311 1 232 1 150 4 198 1 354 1 152 4 155 4 239 18 157 1 23 38 72 1 159 2 331 1 205 1 55 4 
334 1 206 1 0 1 116 2 29 8 359 1 300 2 5 7 7 1 37 1 10 4 103 7 283 4 369 7 321 2 306 1 45 1 107 1 263 14 174 1 324 1 145 1 16 4 147 7 129 27 48 8 195 1 348 4 311 1 232 1 150 7 198 1 354 1 152 2 155 2 239 25 157 1 23 52 72 2 159 1 205 1 55 2 
0 1 116 2 29 3 300 1 5 3 7 1 37 2 169 1 10 2 103 3 283 1 369 3 263 6 174 1 16 2 147 3 129 9 48 3 195 1 348 4 232 1 150 3 152 2 155 2 239 10 157 1 23 19 72 1 331 1 55 2 
0 1 206 1 116 3 29 3 359 1 300 2 5 2 7 1 37 1 103 2 10 4 283 2 369 3 306 1 107 1 263 4 174 2 16 2 147 3 48 2 129 14 195 2 348 6 232 1 311 1 150 2 354 1 152 3 239 12 155 3 157 1 23 26 159 2 55 3 
44 1 108 1 2 1 228 1 123 1 357 1 124 1 368 1 223 1 192 1 
327 1 241 1 
44 1 144 1 123 1 357 1 141 1 319 1 124 1 368 1 223 1 
126 1 269 1 
304 1 346 1 36 1 
94 1 44 1 322 1 108 1 262 2 2 1 59 1 349 1 192 1 255 1 113 1 123 1 81 1 219 1 357 1 124 1 223 1 368 1 
94 1 44 1 322 1 108 1 262 2 2 1 59 1 349 1 192 1 255 1 113 1 123 1 81 1 219 1 357 1 124 1 223 1 368 1 
94 1 44 1 322 1 108 1 262 2 2 1 59 1 349 1 192 1 255 1 113 1 123 1 81 1 219 1 357 1 124 1 223 1 368 1 
346 1 126 1 269 1 
346 1 126 1 269 1 
304 1 36 1 
304 1 346 1 36 1 
298 1 188 1 
188 1 298 1 117 2 248 2 360 2 138 1 59 1 165 1 81 1 123 1 124 1 368 1 223 1 322 1 44 1 106 1 371 1 262 1 15 1 327 1 268 1 113 1 153 2 132 2 241 1 357 1 26 1 
116 1 160 1 335 1 117 2 248 2 136 1 79 1 118 1 163 1 60 1 337 2 280 2 97 1 98 1 340 2 12 1 264 1 109 1 129 1 348 2 230 1 352 2 330 1 152 1 153 2 155 1 239 1 158 1 23 2 24 1 55 1 
84 1 85 1 267 1 289 1 33 1 148 1 163 1 196 2 230 1 253 1 352 2 353 1 280 2 293 1 240 1 366 1 340 2 92 1 185 1 
85 1 289 1 33 1 148 1 163 1 196 2 230 1 253 1 352 1 353 1 280 1 235 1 293 1 240 1 340 1 92 1 185 1 
84 1 315 1 264 1 302 1 33 1 176 1 163 1 230 1 352 1 280 1 98 1 200 1 340 1 170 1 
84 1 85 1 267 1 289 1 33 1 148 1 163 1 196 2 230 1 253 1 352 1 353 1 280 1 293 1 240 1 340 1 92 1 185 1 
172 1 
255 1 376 1 68 1 312 1 6 1 210 1 193 1 
135 1 58 1 59 1 210 1 255 2 214 1 218 1 125 1 111 1 197 1 113 1 53 1 376 1 312 1 133 1 134 1 244 1 
135 4 190 3 249 2 57 1 58 4 5 2 6 1 59 5 191 2 254 2 255 8 98 10 340 3 264 3 68 1 147 2 352 3 113 5 154 1 312 8 313 1 207 2 78 1 29 2 161 2 209 2 278 6 318 2 163 4 210 2 280 3 214 12 366 1 282 2 218 4 170 1 43 2 224 1 369 2 125 3 226 6 128 1 372 2 290 2 48 2 230 3 291 3 329 2 88 2 376 9 134 4 133 6 380 1 244 5 
135 2 206 1 29 2 359 1 300 1 57 1 34 1 278 5 58 2 5 2 59 1 210 2 254 1 255 5 214 6 218 2 283 1 43 2 369 2 125 1 306 1 107 1 226 5 16 1 147 2 48 2 130 1 311 1 329 1 113 1 376 8 312 5 134 2 133 3 244 1 
334 1 135 1 29 2 117 1 248 1 360 1 58 1 59 1 9 1 218 1 281 1 43 2 142 1 45 1 145 1 373 1 48 1 49 1 17 1 329 1 113 1 90 1 153 1 376 2 312 2 132 1 134 1 28 1 
135 1 68 1 58 1 6 1 210 1 255 1 376 1 312 1 218 1 134 1 
29 2 226 5 249 1 147 2 278 5 5 2 48 2 329 1 255 5 214 10 376 5 312 5 133 5 43 2 369 2 
125 1 255 1 113 1 59 1 210 1 244 1 
135 1 78 1 315 1 362 1 58 2 57 2 163 1 59 3 280 4 254 2 98 1 216 1 340 4 218 2 170 2 125 2 86 1 264 1 128 2 110 1 176 1 230 1 352 4 113 3 376 2 22 1 312 2 134 2 244 4 
116 1 117 3 248 2 360 2 136 1 163 1 280 1 97 1 99 1 98 1 340 1 281 2 170 1 225 1 264 1 109 1 69 1 348 2 17 1 268 1 230 1 233 1 291 1 352 1 234 1 152 1 153 3 239 1 155 1 23 1 132 2 55 1 
135 1 226 2 324 1 278 2 58 1 57 1 210 2 254 1 255 4 214 4 376 1 312 2 133 2 218 1 134 1 
123 1 66 1 368 1 
123 1 66 1 368 1 
166 1 298 1 2 1 123 1 368 1 
123 1 66 1 368 1 
123 1 73 1 368 1 
123 1 73 1 368 1 
123 1 73 1 368 1 
123 1 368 1 
44 1 223 1 
0 1 334 1 116 1 29 1 300 1 283 1 306 1 45 1 263 2 324 1 16 1 145 1 48 1 129 4 348 2 150 2 198 1 152 1 239 4 155 1 23 8 55 1 205 1 
334 1 0 1 116 2 29 2 300 1 256 1 103 1 283 1 369 1 306 1 45 1 263 3 324 1 145 1 16 2 147 1 48 1 129 6 348 4 150 2 198 1 152 2 239 5 155 2 23 11 72 1 205 1 55 2 
334 1 0 1 206 1 116 3 29 3 300 1 359 1 5 2 256 1 103 1 283 1 369 2 306 1 45 1 107 1 263 4 324 1 145 1 16 1 147 2 129 9 48 3 348 6 311 1 150 3 198 1 152 3 239 10 155 3 23 19 159 1 205 1 55 3 
334 1 0 1 206 1 116 3 29 3 300 1 359 1 5 1 256 1 103 2 283 1 369 2 306 1 45 1 107 1 263 5 324 1 145 1 16 1 147 2 129 10 48 2 348 6 311 1 150 3 198 1 152 3 239 7 155 3 23 17 159 1 205 1 55 3 
0 1 334 1 116 1 29 1 300 1 283 1 306 1 45 1 263 2 324 1 16 1 145 1 48 1 129 4 348 2 150 2 198 1 152 1 239 4 155 1 23 8 55 1 205 1 
0 1 206 1 116 1 29 2 300 1 359 1 5 2 103 1 283 1 369 2 306 1 107 1 263 2 16 1 147 2 129 6 48 2 348 2 311 1 150 1 152 1 239 6 155 1 23 12 55 1 
334 1 0 1 206 1 116 4 29 3 359 1 300 1 5 1 256 1 103 2 283 1 369 2 306 1 45 1 107 1 263 5 324 1 145 1 16 1 147 2 129 10 48 2 348 8 311 1 150 3 198 1 152 4 239 8 155 4 23 18 159 2 205 1 55 4 
0 1 206 1 116 4 29 3 359 1 300 1 5 2 103 3 283 1 369 3 306 1 107 1 263 6 16 1 147 3 129 9 48 2 348 8 311 1 150 3 152 4 239 7 155 4 23 16 159 2 331 1 55 4 
334 3 29 1 45 3 263 6 145 1 48 1 129 3 150 3 198 2 239 4 23 7 103 3 205 1 
334 1 0 1 206 1 116 4 29 3 359 1 300 1 5 1 103 1 283 1 369 2 306 1 45 1 107 1 263 4 324 1 145 1 16 1 147 2 129 10 48 2 348 8 311 1 150 3 198 1 152 4 239 8 155 4 23 18 159 2 331 1 205 1 55 4 
334 1 116 2 29 1 45 1 263 3 324 1 145 1 48 1 129 4 348 4 150 2 198 1 152 2 239 4 155 2 23 8 159 1 103 1 55 2 205 1 
334 1 29 1 45 1 263 2 324 1 145 1 129 3 48 1 150 2 198 1 239 3 23 6 193 1 205 1 
116 1 29 1 263 2 147 1 48 1 5 1 129 2 348 2 150 1 256 1 152 1 239 2 155 1 23 4 103 1 55 1 369 1 
29 1 263 2 300 1 16 2 147 1 48 1 5 1 129 3 150 1 239 4 23 7 72 1 103 1 283 1 369 1 
334 2 116 2 29 3 5 2 103 4 283 2 369 2 321 1 45 2 370 1 263 9 324 1 145 1 147 2 16 2 129 11 48 3 348 4 150 5 198 1 152 2 239 12 155 2 72 1 23 23 159 2 202 1 205 1 55 2 
239 1 23 1 16 1 
23 1 129 1 283 1 
116 1 29 1 263 3 249 1 147 1 129 3 5 1 48 1 348 2 150 2 152 1 256 1 155 1 239 3 23 6 103 1 55 1 369 1 
0 1 206 1 116 1 29 2 300 1 359 1 5 2 103 1 283 1 369 2 306 1 107 1 263 2 16 1 147 2 129 6 48 2 348 2 311 1 150 1 152 1 239 6 155 1 23 12 55 1 
334 1 29 1 45 1 263 2 145 1 129 3 48 1 150 1 239 3 23 6 103 1 
334 1 116 1 45 1 370 1 263 2 129 1 348 2 150 1 198 1 152 1 239 2 155 1 23 3 159 1 103 1 55 1 205 1 
0 1 334 2 116 1 29 2 45 2 263 5 145 1 129 5 48 2 348 2 150 3 152 1 155 1 239 5 23 10 103 2 55 1 28 1 
0 1 116 1 29 1 263 1 147 1 129 2 348 2 152 1 155 1 23 2 103 1 55 1 
0 1 116 1 29 1 263 2 147 1 48 1 5 1 129 2 348 2 150 1 152 1 239 2 155 1 23 4 103 1 55 1 369 1 
0 1 334 1 116 3 370 1 45 1 263 2 129 1 348 6 150 1 152 3 239 2 155 3 23 3 159 1 103 1 331 1 55 3 
334 3 0 1 116 5 29 5 300 1 5 3 140 1 256 1 103 5 222 1 283 3 369 3 45 3 370 1 263 12 324 1 288 1 145 2 16 4 147 3 129 16 48 5 348 10 150 7 198 1 152 5 239 18 155 5 23 34 72 1 159 2 331 1 205 1 55 5 
151 1 117 1 153 1 248 1 325 1 268 1 212 1 
67 1 117 1 248 1 229 1 162 1 325 1 268 1 212 1 151 1 153 1 171 1 320 1 
352 1 280 1 315 1 98 1 264 1 340 1 176 1 170 1 163 1 230 1 193 1 
74 1 264 1 117 2 248 1 360 1 69 1 163 1 268 1 230 1 291 1 352 1 280 1 98 1 153 2 99 1 132 1 340 1 170 1 
74 1 207 1 77 1 117 2 248 2 360 1 318 1 163 1 280 1 99 1 98 3 340 1 264 2 128 1 69 1 373 1 268 1 230 1 291 2 352 1 153 2 132 2 201 1 
74 1 207 1 77 1 117 2 248 2 360 1 318 1 163 1 280 2 98 3 340 2 264 2 128 1 69 1 373 1 268 1 230 1 291 2 352 2 153 2 295 1 132 2 201 1 27 1 
207 1 190 1 161 1 209 1 318 1 59 2 163 1 210 1 280 3 255 1 98 4 340 3 170 1 284 1 264 1 128 1 230 1 291 1 352 3 113 2 295 1 297 1 244 1 
207 1 190 1 161 1 264 1 209 1 128 1 318 1 163 1 59 2 210 1 230 1 191 1 291 1 352 3 280 3 255 1 113 2 98 4 295 1 340 3 170 1 244 1 
352 1 280 1 340 1 379 1 163 1 230 1 
194 1 264 2 289 1 250 1 163 3 230 2 120 1 337 1 291 1 352 7 280 7 154 1 98 3 21 1 366 1 340 6 379 1 24 1 381 1 170 2 260 1 
334 1 74 1 116 2 29 1 160 1 117 2 248 1 360 1 136 2 79 1 80 1 163 1 96 1 97 2 280 1 139 1 98 1 99 1 366 1 340 1 225 1 45 1 263 2 264 1 324 1 145 1 48 1 129 3 69 1 348 4 268 2 230 1 178 1 291 1 233 1 150 2 352 1 198 1 152 2 153 2 238 1 239 3 155 2 23 6 132 1 205 1 55 2 
135 2 78 1 190 1 161 1 209 1 58 2 6 1 59 3 210 1 191 1 280 1 255 1 98 2 340 1 218 2 282 1 170 1 125 1 371 1 68 1 290 1 88 1 352 1 113 3 376 1 312 1 134 2 244 2 
264 1 209 1 163 2 230 1 291 1 352 2 280 2 154 1 98 2 366 1 340 2 379 1 313 1 
315 1 264 1 316 1 176 1 163 1 230 1 352 4 280 4 98 1 366 1 295 1 340 4 170 1 
286 1 264 1 128 1 177 1 163 2 230 1 120 1 291 1 352 2 280 2 98 1 340 2 243 1 260 1 
352 1 280 1 85 1 293 1 340 1 170 1 163 1 196 1 230 1 253 1 
264 1 289 1 163 1 230 1 352 2 280 2 330 1 98 1 366 1 340 2 24 1 
194 1 315 1 264 2 128 1 316 1 176 1 163 2 230 2 352 5 280 5 98 3 366 1 21 1 340 4 24 1 170 1 
315 1 264 2 128 1 316 1 176 1 163 2 230 2 352 5 280 5 98 3 156 1 366 1 21 1 340 4 24 1 170 1 
74 1 264 1 117 2 248 1 360 1 69 1 163 1 268 1 230 1 291 1 352 1 280 1 98 1 153 2 132 1 340 1 170 1 27 1 
264 1 128 1 250 1 163 2 230 1 120 1 291 1 352 1 280 1 154 1 98 1 340 1 260 1 
62 1 364 1 173 1 266 1 268 1 
77 1 299 1 371 1 275 1 161 1 173 1 266 2 373 1 59 2 268 1 210 1 62 2 255 1 131 1 113 2 237 1 364 2 19 1 201 1 
335 1 364 1 117 1 153 1 173 1 248 1 266 1 118 1 12 1 
131 1 237 1 173 1 
91 1 305 1 112 1 193 1 
367 1 217 1 137 1 91 1 305 1 164 1 112 1 
38 1 367 1 314 1 
75 1 265 1 137 1 164 1 211 1 112 1 217 3 367 3 40 1 91 1 305 1 358 2 
89 1 102 1 367 2 217 2 137 1 91 1 305 1 164 1 112 1 
75 1 46 1 326 1 367 1 217 1 137 1 148 1 91 1 164 1 196 1 253 1 
75 1 367 1 217 1 137 1 91 1 305 1 164 1 
75 1 367 1 217 1 137 1 305 2 164 1 112 1 
75 1 137 2 164 2 236 1 217 2 367 2 65 1 91 1 305 1 25 1 
75 1 115 1 323 1 326 1 137 1 164 1 112 1 167 1 102 2 217 3 367 3 305 1 91 2 
75 1 137 1 148 1 164 1 196 2 112 1 253 1 293 1 179 1 240 1 102 1 217 2 367 2 91 1 305 1 
75 1 115 1 326 1 137 2 164 2 112 1 89 1 377 1 102 2 217 4 367 4 305 1 91 2 
75 1 367 1 217 1 137 1 91 1 305 1 164 1 112 1 
115 1 326 1 137 1 251 1 164 1 211 1 112 2 102 2 40 1 217 4 367 4 305 2 91 3 358 1 
75 1 76 1 14 1 309 1 137 1 164 1 112 1 102 1 217 2 367 2 91 1 305 1 
75 1 137 1 164 1 211 1 112 1 294 1 217 3 367 3 40 2 91 1 305 1 358 2 
183 1 91 2 341 2 187 1 
61 1 75 1 367 1 217 1 137 1 164 1 
167 1 75 1 102 1 367 2 217 2 137 1 91 1 305 1 164 1 112 1 
350 1 
75 1 367 1 217 1 137 1 91 1 305 1 164 1 112 1 
75 1 137 1 164 1 112 1 167 1 102 1 217 3 367 3 305 1 91 1 358 1 
115 1 326 1 251 1 91 1 
91 1 305 1 

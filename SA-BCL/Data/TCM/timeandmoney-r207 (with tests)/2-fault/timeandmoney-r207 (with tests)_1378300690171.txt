#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 322 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 153 14 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 149 374 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 153 (198,270) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 153 (50,123) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 153 (50,123) 18 331 (317,378) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 6 1 1 117 1 272 2 338 1 4 1 165 1 221 9 223 3 51 9 52 5 340 1 196 2 248 2 252 1 281 2 324 1 325 4 62 1 255 2 369 1 211 2 213 1 215 2 375 1 110 1 89 1 310 1 
186 6 1 1 117 1 272 2 338 1 4 1 165 1 221 9 223 3 51 9 52 5 340 1 196 2 248 2 252 1 281 2 324 1 325 4 62 1 255 2 369 1 211 2 213 1 215 2 375 1 110 1 89 1 310 1 
186 7 1 1 117 1 272 2 338 1 4 1 165 1 221 10 223 4 51 10 52 6 340 1 196 2 248 2 252 1 281 2 324 1 325 5 62 1 255 2 369 1 211 2 213 1 215 2 375 1 110 1 89 1 310 1 
186 4 1 1 117 1 272 1 338 1 4 1 165 1 221 7 223 2 51 7 52 4 196 2 248 2 252 1 281 2 324 1 325 3 62 1 255 2 369 1 211 2 213 1 215 2 375 1 110 1 89 1 310 1 
62 1 325 2 186 3 1 1 255 1 117 1 272 2 221 4 223 1 51 4 52 3 340 1 196 1 248 1 215 1 110 1 281 1 310 1 
125 1 1 1 255 1 117 1 304 1 221 2 328 1 211 1 52 1 51 2 213 1 215 1 248 1 252 1 110 1 281 1 
325 1 186 1 1 1 255 2 117 1 221 3 223 1 211 1 51 3 52 2 215 2 110 1 89 1 
186 7 1 1 117 1 272 2 338 1 165 1 221 9 223 3 51 9 52 5 340 1 196 1 225 1 248 1 281 1 325 4 62 1 255 2 302 1 211 1 215 2 89 1 110 1 310 1 
186 7 1 1 117 1 272 2 338 1 165 1 221 9 223 3 51 9 52 5 340 1 196 1 225 1 248 1 281 1 325 4 62 1 255 2 302 1 211 1 215 2 89 1 110 1 310 1 
335 1 179 1 322 1 
46 1 360 2 179 1 
268 2 162 2 226 1 290 1 205 2 347 2 86 2 332 2 
22 1 268 3 0 1 162 2 71 2 291 1 116 1 25 1 74 1 118 1 222 1 358 1 226 1 5 1 363 1 6 1 230 1 232 1 123 1 253 1 84 2 368 2 205 2 326 1 347 2 127 2 370 1 86 3 350 1 134 1 289 1 290 1 237 1 182 2 332 2 113 1 267 1 
268 1 162 1 290 1 205 1 347 1 86 1 42 1 234 1 332 1 184 1 
335 1 268 1 172 1 347 1 86 1 234 1 274 1 132 1 276 1 16 1 235 1 214 1 179 1 251 1 
335 1 268 1 162 1 205 1 347 1 86 1 234 1 274 1 132 2 276 1 16 1 235 1 214 2 179 1 332 1 
214 1 3 1 168 1 21 1 132 1 
335 1 82 1 214 2 3 1 179 1 168 1 27 1 132 2 
214 1 168 1 132 1 
268 1 162 1 3 1 205 1 347 1 86 1 234 1 132 1 65 1 214 1 290 1 42 1 332 1 184 1 
179 1 
335 1 214 2 3 1 179 1 206 1 168 1 27 1 132 2 
335 1 93 2 203 1 163 1 3 2 190 2 26 2 168 2 27 1 35 1 132 5 150 1 197 1 214 5 236 1 179 1 178 1 122 1 183 1 
268 2 162 1 71 1 116 1 205 1 326 1 347 1 127 1 370 1 74 1 86 2 134 1 55 1 5 1 299 1 265 1 237 1 182 1 232 1 123 1 
226 1 322 1 
268 2 162 1 303 1 205 1 347 2 86 2 28 1 226 2 332 1 
55 1 280 1 301 1 
268 1 71 1 116 1 326 1 127 1 128 1 74 1 370 1 86 1 134 1 226 1 5 1 237 1 182 1 232 1 123 1 
268 5 162 4 146 1 205 4 172 1 347 5 86 5 28 1 299 2 226 1 265 1 140 1 112 1 332 1 
268 2 162 2 205 2 347 2 86 2 234 1 372 1 184 1 
268 3 162 3 226 1 299 1 205 3 347 3 86 3 332 1 
268 1 162 1 205 1 347 1 86 1 234 1 184 1 
268 1 162 1 303 1 205 1 347 1 86 1 234 1 332 1 28 1 
268 4 0 1 162 3 71 1 291 1 116 1 218 1 74 1 75 1 222 1 118 1 274 1 28 1 358 1 276 1 226 1 5 1 299 1 6 1 230 1 232 1 123 1 253 1 84 1 368 2 205 3 326 1 347 3 127 1 370 1 86 4 234 1 350 1 132 1 134 1 16 1 235 1 289 1 214 1 290 1 265 1 237 1 182 1 332 2 
268 2 162 1 226 1 299 1 146 1 205 1 172 1 347 2 86 2 
268 3 162 3 218 1 205 3 204 1 347 3 86 3 234 1 274 1 28 1 132 1 276 1 16 1 235 1 214 1 299 2 265 1 179 1 332 1 
268 2 162 2 205 2 347 2 86 2 28 1 299 1 55 1 280 1 332 1 
268 1 71 1 116 1 326 1 127 1 74 1 370 1 86 1 134 1 226 1 5 1 237 1 182 1 232 1 123 1 
268 1 71 1 116 1 270 1 326 1 127 1 74 1 370 1 86 1 134 1 373 1 226 1 5 1 237 1 182 1 
22 2 0 1 114 1 269 1 291 1 298 1 358 1 55 2 99 1 6 2 280 2 253 1 301 2 368 2 84 4 174 1 130 1 350 1 306 1 38 1 309 1 158 1 289 1 45 1 
268 1 235 1 162 1 205 1 347 1 86 1 234 1 372 1 
63 1 220 1 
63 1 220 1 
212 1 279 1 
212 1 279 1 
212 1 279 1 
189 1 63 1 220 1 
189 1 63 1 220 1 
63 1 220 1 131 1 
212 1 279 1 63 2 220 2 201 1 58 1 
189 1 63 1 220 1 
63 1 220 1 207 1 
63 1 220 1 207 1 
63 1 220 1 207 1 
268 2 162 2 242 1 187 1 220 1 355 1 96 1 226 1 362 1 249 1 341 1 102 1 205 2 106 1 63 1 347 2 86 2 131 1 132 1 214 1 137 1 238 1 266 1 333 1 
241 1 115 1 242 3 9 2 315 1 47 1 63 2 220 2 355 2 132 2 339 1 214 2 362 2 137 2 249 1 179 1 231 1 238 2 58 1 
196 1 248 1 281 1 
248 1 281 1 328 1 
157 1 196 2 13 1 281 3 376 1 328 1 
196 1 199 1 13 1 281 2 376 1 328 1 
196 1 13 2 281 2 376 1 328 1 
93 1 335 1 217 1 46 1 114 1 23 1 3 4 190 1 26 1 168 1 27 1 30 1 360 3 300 2 122 3 342 2 106 1 130 1 329 1 35 1 132 5 36 1 309 1 38 1 214 5 40 1 178 2 179 2 180 2 67 1 333 1 266 1 
335 1 93 2 217 2 46 3 114 3 23 1 243 5 3 7 190 2 26 2 168 6 27 1 30 3 360 9 361 1 7 1 57 1 122 8 81 1 342 6 203 1 85 1 130 3 132 9 35 1 309 3 38 3 214 9 87 1 178 6 179 5 180 6 67 2 266 4 21 5 
335 1 93 1 217 1 46 2 114 1 3 2 190 1 26 1 30 1 360 4 300 1 122 3 342 2 203 1 130 1 132 3 36 1 309 1 38 1 214 3 40 1 179 3 178 2 180 2 67 1 266 1 
335 1 93 1 217 1 46 3 114 2 3 3 190 1 26 1 30 2 360 7 7 1 300 2 122 5 81 1 342 4 203 1 85 1 130 2 132 4 36 1 309 2 38 2 214 4 40 1 179 4 178 4 180 4 67 1 266 2 
153 1 322 1 
5 1 149 1 
233 1 
116 1 5 1 370 1 
5 1 353 1 
116 1 5 1 
116 1 313 1 5 1 153 1 370 1 14 1 
141 1 22 4 84 7 145 1 48 1 129 1 76 1 356 1 298 3 288 1 224 1 309 1 38 1 99 2 278 1 6 3 120 2 
141 1 22 4 84 7 145 1 48 1 129 1 76 1 356 1 298 3 288 1 224 1 309 1 38 1 99 2 278 1 6 3 120 2 
141 1 22 4 84 7 145 1 48 1 129 1 76 1 356 1 298 3 288 1 224 1 309 1 38 1 39 1 99 2 278 1 6 3 120 2 
22 16 141 2 0 1 114 3 48 1 145 2 356 1 76 5 275 1 298 10 358 1 54 1 30 3 224 2 99 5 278 1 6 15 120 3 253 1 126 1 202 1 367 3 368 2 84 31 11 1 260 1 129 1 130 3 350 1 175 4 287 1 288 2 38 4 309 4 
22 5 141 1 0 2 145 1 76 1 275 1 356 1 298 4 358 2 224 1 227 1 99 3 278 1 6 4 120 2 253 2 284 1 368 4 84 9 129 1 350 2 288 1 309 1 38 1 
186 1 71 1 1 1 117 1 273 1 221 2 49 1 52 1 51 2 196 1 246 1 248 1 281 2 154 1 79 1 80 1 255 1 83 1 326 1 127 1 348 1 107 1 34 1 328 1 211 1 157 1 215 1 110 1 237 1 182 1 
71 1 186 2 1 1 117 1 273 1 221 3 52 1 51 3 359 1 196 1 246 1 248 1 281 2 154 1 79 1 103 1 255 1 83 1 326 1 127 1 348 1 107 1 34 1 328 1 211 1 157 1 330 1 215 1 237 1 182 1 
71 1 186 2 1 1 117 1 221 2 52 1 51 2 359 1 196 1 246 1 248 1 281 2 79 1 103 1 83 1 326 1 127 1 348 1 107 1 34 1 328 1 211 1 157 1 237 1 182 1 
71 1 116 1 316 1 191 1 221 1 319 1 51 1 5 1 246 2 79 2 255 1 326 1 127 1 305 1 107 2 211 2 134 1 330 1 215 1 136 1 237 1 91 1 182 1 
71 1 273 1 221 1 51 1 196 1 246 1 248 1 281 2 154 1 79 1 80 1 103 1 255 1 83 1 326 1 127 1 348 1 107 1 34 1 328 1 211 1 157 1 215 1 110 1 237 1 182 1 
44 1 
335 1 142 2 93 1 46 2 293 1 190 1 194 2 148 1 97 2 245 1 5 1 251 1 60 1 345 1 258 2 261 2 305 1 347 1 108 1 16 1 214 5 159 2 70 4 160 1 217 1 268 1 71 2 116 1 26 1 168 6 319 1 27 3 274 1 320 1 276 1 360 2 121 1 122 2 32 1 326 1 127 2 172 1 286 1 86 1 234 1 132 5 35 1 133 1 134 2 235 1 179 2 178 2 237 1 182 2 239 2 
268 1 32 1 261 1 172 1 347 1 286 1 108 1 206 1 86 1 168 2 234 1 27 1 274 1 132 3 320 1 276 1 235 1 16 1 214 3 251 1 70 2 160 1 
268 1 335 1 168 1 274 1 27 1 320 1 276 1 251 1 32 1 347 1 172 1 108 1 286 1 86 1 206 1 234 1 132 3 16 1 235 1 214 3 179 1 159 1 70 3 160 1 
268 1 335 1 168 2 27 1 274 1 320 1 276 1 251 1 32 1 258 1 347 1 172 1 261 1 108 1 286 1 206 1 86 1 234 1 132 3 16 1 235 1 214 3 179 1 159 1 70 3 160 1 
335 5 93 1 142 2 46 2 336 1 190 1 148 1 194 2 97 2 251 1 60 1 344 1 258 4 261 4 347 1 108 1 206 1 16 1 214 5 159 4 111 1 70 6 160 1 268 1 312 1 26 1 168 7 274 1 27 3 320 1 276 1 122 1 124 1 32 1 172 1 286 1 86 1 234 1 132 5 35 1 235 1 179 5 178 1 239 2 
93 1 142 2 335 1 46 2 293 1 190 1 148 1 194 2 97 2 251 1 60 1 258 2 347 1 261 2 108 1 16 1 214 4 159 2 70 4 160 1 268 1 26 1 168 4 274 1 27 2 320 1 276 1 360 2 122 1 32 1 172 1 286 1 86 1 234 1 132 4 35 1 235 1 178 1 179 2 239 2 
335 1 142 2 268 1 93 1 46 2 336 1 190 1 26 1 168 4 27 2 194 2 148 1 274 1 97 2 320 1 276 1 251 1 122 1 60 1 124 1 344 1 258 2 32 1 261 2 347 1 172 1 108 1 286 1 86 1 234 1 132 4 35 1 16 1 235 1 214 4 179 1 178 1 159 2 239 2 70 4 160 1 
335 1 142 2 268 1 93 1 46 2 336 1 190 1 26 1 168 4 27 2 194 2 148 1 274 1 97 2 320 1 276 1 251 1 122 1 60 1 124 1 344 1 258 2 32 1 261 2 347 1 172 1 108 1 286 1 86 1 234 1 132 4 35 1 16 1 235 1 214 4 179 1 178 1 159 2 239 2 70 4 160 1 
335 1 268 1 93 1 190 1 26 1 168 4 27 2 194 2 148 1 274 1 97 2 320 1 276 1 360 2 251 1 122 1 344 1 257 2 258 2 32 1 261 2 347 1 172 1 173 1 108 1 286 1 86 1 234 1 132 4 35 1 209 2 16 1 235 1 214 4 135 1 179 1 178 1 159 2 311 1 70 4 160 1 
335 1 142 2 93 1 268 1 46 2 312 1 336 1 190 1 26 1 168 5 27 2 194 2 148 1 274 1 97 2 320 1 276 1 251 1 122 1 60 1 124 1 344 1 32 1 258 3 347 1 172 1 261 3 108 1 286 1 86 1 234 1 35 1 132 4 16 1 235 1 214 4 179 1 178 1 159 3 239 2 70 5 160 1 
335 1 142 2 93 1 268 1 46 2 312 1 336 1 190 1 26 1 168 5 27 2 194 2 148 1 274 1 97 2 320 1 276 1 251 1 122 1 60 1 124 1 344 1 32 1 258 3 347 1 172 1 261 3 108 1 286 1 86 1 234 1 35 1 132 4 16 1 235 1 214 4 179 1 178 1 159 3 239 2 70 5 160 1 
335 1 93 1 268 1 293 1 190 1 26 1 168 4 27 2 194 2 148 1 274 1 97 2 320 1 276 1 360 2 251 1 122 1 257 2 258 2 32 1 261 2 172 1 347 1 108 1 286 1 86 1 234 1 35 1 132 4 209 2 16 1 235 1 214 4 179 1 178 1 159 2 311 1 70 4 160 1 
22 3 0 1 291 1 145 1 356 1 298 2 358 1 55 1 226 2 99 2 278 1 6 3 280 1 322 1 120 1 253 1 301 1 368 2 84 6 129 1 350 1 306 1 288 1 38 1 309 1 289 1 
22 8 0 2 114 2 291 2 25 1 318 1 76 1 298 2 358 2 30 2 226 1 55 11 99 1 250 1 6 6 230 1 280 4 253 2 59 1 301 11 126 1 367 3 368 4 84 14 11 1 130 1 350 2 175 3 38 2 309 1 289 1 352 1 92 1 
268 2 22 1 71 1 162 1 0 1 116 1 291 1 25 1 74 1 147 1 358 1 226 1 5 1 299 1 6 1 230 1 280 1 232 1 123 1 253 1 59 1 366 1 8 1 368 2 84 2 205 1 326 1 127 1 347 1 370 1 128 1 86 2 350 1 134 1 289 1 265 1 237 1 182 1 
240 2 0 3 291 3 145 1 193 2 298 8 299 1 5 2 55 7 99 4 6 10 59 1 253 3 301 7 103 1 205 1 347 1 350 3 210 2 309 3 265 1 161 1 268 3 22 10 71 3 162 1 114 2 116 2 25 1 74 2 222 2 356 1 76 4 358 3 30 2 226 2 278 1 230 1 120 1 280 7 232 2 123 2 368 6 84 20 326 2 171 1 127 3 129 1 370 2 86 3 130 2 288 1 134 1 38 3 289 3 237 2 182 3 378 2 334 1 
268 1 22 1 162 1 71 7 0 2 291 2 116 2 188 1 219 1 25 1 319 1 49 1 358 2 299 1 5 3 6 1 230 1 253 2 103 1 368 4 84 2 205 1 326 2 285 1 347 1 127 8 305 1 86 1 208 1 350 2 306 1 134 2 64 1 289 2 237 2 43 1 182 8 377 1 113 2 
268 1 22 1 0 1 162 1 114 1 291 1 28 1 298 1 358 1 30 1 321 1 55 1 99 1 6 2 280 1 301 1 253 1 59 1 368 2 84 3 205 1 347 1 86 1 130 1 350 1 38 1 309 1 289 1 332 1 
22 2 0 1 114 1 291 1 84 2 368 2 350 1 76 1 298 1 306 1 358 1 158 1 38 1 55 1 289 1 280 1 301 1 253 1 
0 1 291 1 269 1 84 2 368 2 130 1 350 1 298 1 306 1 358 1 309 1 55 1 289 1 99 1 6 2 280 1 301 1 253 1 
22 2 0 1 114 1 291 1 84 4 368 2 130 1 350 1 76 1 298 2 306 1 358 1 30 1 309 1 38 1 55 2 289 1 99 1 6 2 280 2 301 2 253 1 
22 2 0 1 114 1 291 1 84 2 368 2 219 1 350 1 76 1 298 1 358 1 158 1 38 1 55 1 289 1 280 1 301 1 253 1 
0 1 291 1 269 1 84 2 368 2 219 1 130 1 350 1 298 1 358 1 309 1 55 1 289 1 99 1 6 2 280 1 301 1 253 1 
22 2 0 1 114 1 291 1 84 4 368 2 219 1 130 1 350 1 76 1 298 2 358 1 30 1 309 1 38 1 55 2 289 1 99 1 6 2 280 2 301 2 253 1 
22 2 0 1 114 1 291 1 368 2 84 4 130 1 350 1 76 1 298 2 358 1 30 1 309 1 38 1 55 2 289 1 99 1 6 2 280 2 301 2 253 1 
22 1 268 1 71 1 0 1 116 1 291 1 25 1 74 1 222 1 358 1 226 1 5 1 6 1 230 1 232 1 123 1 253 1 84 2 368 2 326 1 127 1 370 1 86 1 350 1 134 1 289 1 237 1 182 1 
22 1 268 1 71 1 0 1 116 1 291 1 270 1 25 1 74 1 358 1 226 1 5 1 6 1 230 1 253 1 84 2 368 2 12 1 326 1 127 1 370 1 86 1 350 1 134 1 373 1 289 1 237 1 182 1 
22 2 0 1 114 1 291 1 84 4 368 2 130 1 350 1 76 1 298 2 358 1 30 1 309 1 38 1 55 2 289 1 99 1 6 2 280 2 301 2 59 1 253 1 
240 1 22 2 268 1 114 1 71 1 0 1 116 1 291 1 74 1 222 1 76 1 49 1 298 2 358 1 30 1 55 2 5 1 99 1 6 2 280 2 232 1 123 1 301 2 253 1 84 4 368 2 326 1 127 1 370 1 86 1 130 1 350 1 309 1 38 1 289 1 237 1 182 1 
268 1 22 2 0 1 162 1 114 1 291 1 76 1 28 1 298 1 358 1 30 1 55 1 6 1 280 1 253 1 59 1 301 1 368 2 84 3 205 1 262 1 347 1 86 1 130 1 350 1 309 1 38 1 289 1 332 1 
22 9 0 2 114 3 143 1 94 1 76 3 298 6 98 1 29 2 358 2 30 3 99 3 247 1 277 1 6 10 253 2 284 1 254 2 126 1 367 1 368 4 84 19 11 1 130 3 350 2 175 2 38 3 309 3 181 1 20 1 
216 1 22 14 0 3 114 3 76 2 295 1 275 2 94 1 298 4 29 4 358 3 195 1 30 3 99 2 247 2 277 2 6 12 253 3 284 1 254 1 367 2 368 6 84 26 11 2 130 2 350 3 175 2 177 1 307 1 309 2 38 3 181 1 139 1 20 1 
0 3 143 1 145 1 94 1 295 1 298 8 195 1 99 4 247 2 6 21 253 3 254 1 11 3 350 3 307 1 309 5 20 1 216 1 22 20 114 4 76 4 275 1 356 1 358 3 29 4 30 4 277 1 278 1 120 1 323 1 284 1 126 1 367 3 84 41 368 6 129 1 130 4 175 4 177 1 288 1 38 5 181 1 139 1 
216 1 22 20 0 4 114 4 143 1 145 1 356 1 295 1 275 2 94 1 76 3 298 7 29 4 358 4 195 1 30 4 99 4 278 1 247 2 277 1 6 18 120 1 323 1 253 4 284 1 254 1 126 1 367 3 368 8 84 38 11 3 129 1 130 3 350 4 175 4 288 1 177 1 307 1 38 5 309 4 181 1 139 1 20 1 
216 1 22 27 0 2 114 7 145 1 356 1 275 1 295 1 94 1 76 7 298 14 29 4 358 2 195 1 30 7 99 7 278 1 247 1 277 1 250 2 6 25 120 1 253 2 284 1 254 1 126 2 367 4 368 4 84 52 11 2 129 1 130 7 350 2 175 4 288 1 177 1 307 1 38 8 309 8 181 1 139 1 20 1 
308 1 115 1 362 1 137 1 63 1 231 1 220 1 238 1 355 1 58 1 
341 1 131 1 
362 1 137 1 63 1 220 1 138 1 238 1 167 1 355 1 15 1 
56 1 189 1 
37 1 201 1 207 1 
241 1 115 1 242 2 9 1 47 1 63 1 220 1 355 1 132 1 339 1 214 1 362 1 249 1 137 1 179 1 231 1 238 1 58 1 
241 1 115 1 242 2 9 1 47 1 63 1 220 1 355 1 132 1 339 1 214 1 362 1 249 1 137 1 179 1 231 1 238 1 58 1 
241 1 115 1 242 2 9 1 47 1 63 1 220 1 355 1 132 1 339 1 214 1 362 1 249 1 137 1 179 1 231 1 238 1 58 1 
56 1 189 1 201 1 
56 1 189 1 201 1 
37 1 207 1 
37 1 201 1 207 1 
102 1 96 1 
268 2 242 1 162 2 187 1 3 1 220 1 355 1 96 1 339 1 226 1 362 1 341 1 102 1 9 1 205 2 106 1 63 1 347 2 86 2 131 1 132 1 176 1 214 1 137 1 238 1 266 1 333 1 
268 2 22 1 72 1 0 1 71 2 116 1 291 1 188 1 25 1 358 1 5 1 6 1 230 1 59 1 253 1 156 1 368 2 84 2 105 1 326 1 127 2 347 2 86 2 350 1 64 1 289 1 351 1 264 1 237 1 182 2 113 2 
103 1 71 2 164 1 83 1 337 1 326 1 127 2 273 1 107 1 34 1 328 1 49 1 157 1 196 1 248 1 281 2 237 1 182 2 282 1 
103 1 71 1 164 1 83 1 326 1 127 1 273 1 107 1 34 1 328 1 157 1 196 1 248 1 281 2 237 1 182 1 100 1 
71 1 116 1 337 1 326 1 316 1 127 1 305 1 107 1 319 1 134 1 5 1 78 1 237 1 182 1 
103 1 71 1 164 1 83 1 337 1 326 1 127 1 273 1 107 1 34 1 328 1 157 1 196 1 248 1 281 2 237 1 182 1 282 1 
364 1 
335 1 197 1 163 1 179 1 178 1 322 1 122 1 
60 1 335 1 93 1 142 1 46 1 190 1 26 1 168 1 27 1 132 1 35 1 214 1 360 1 179 2 178 1 122 1 239 1 
93 1 71 1 116 1 313 1 326 1 190 1 127 1 370 1 26 1 149 1 35 1 134 1 374 1 5 1 77 1 237 2 182 1 
185 1 216 1 217 1 93 2 335 2 46 3 114 2 190 2 26 2 168 1 27 1 295 1 119 1 195 1 30 2 360 6 122 8 61 1 342 5 367 1 11 1 33 2 130 2 132 1 175 1 35 2 133 1 307 1 38 2 309 2 214 1 179 5 178 5 180 5 139 1 
268 1 93 1 162 1 336 1 145 1 190 1 26 1 278 1 122 2 61 1 155 1 205 1 347 1 33 2 86 1 234 1 35 1 132 1 288 1 65 1 38 2 309 1 214 1 290 1 178 2 42 1 332 1 184 1 
93 1 335 1 163 1 190 1 26 1 35 1 197 1 178 1 179 1 122 1 
61 1 342 5 114 2 46 5 33 2 193 1 130 2 30 2 38 2 309 2 360 10 178 5 179 5 180 5 122 5 
335 1 214 1 179 1 168 1 27 1 132 1 
93 2 217 2 71 4 116 1 2 2 190 2 24 1 26 2 168 4 27 2 319 1 5 1 121 1 365 1 122 2 203 1 345 1 326 1 127 4 305 1 349 1 35 1 132 3 133 2 134 2 214 3 178 2 237 1 182 4 
268 3 0 1 71 1 162 2 116 1 291 1 74 1 118 1 222 1 358 1 226 1 5 1 6 1 230 1 232 1 123 1 253 1 84 1 368 2 205 2 326 1 127 1 347 2 370 1 86 3 350 1 134 1 289 1 290 1 237 1 182 1 332 2 
342 2 93 1 217 1 335 2 46 2 190 1 26 1 35 1 133 1 360 4 178 2 179 4 180 2 120 1 122 1 
10 1 362 1 238 1 
10 1 362 1 238 1 
109 1 362 1 231 1 238 1 96 1 
10 1 362 1 238 1 
144 1 362 1 238 1 
144 1 362 1 238 1 
144 1 362 1 238 1 
362 1 238 1 
63 1 220 1 
22 4 0 2 84 8 368 4 145 1 129 1 350 2 76 1 275 1 356 1 298 3 358 2 288 1 309 1 38 1 99 2 278 1 6 4 120 1 253 2 
22 3 84 6 145 1 129 1 356 1 298 2 288 1 38 1 309 1 99 2 278 1 6 3 120 1 322 1 
22 2 0 1 114 1 368 2 84 4 346 1 130 1 350 1 76 1 298 2 358 1 30 1 309 1 38 1 99 1 6 2 253 1 
22 3 126 1 367 1 114 1 84 7 11 1 130 1 175 2 76 1 298 2 30 1 309 1 38 1 99 1 6 4 
22 11 114 2 0 2 145 2 356 1 76 4 275 2 298 9 358 2 30 2 99 5 200 1 278 1 250 1 6 12 120 1 253 2 126 1 367 2 84 23 368 4 129 1 130 2 350 2 175 2 288 2 38 3 309 3 352 1 
84 1 6 1 175 1 
22 1 367 1 84 1 
22 3 0 1 114 1 368 2 84 6 346 1 193 1 130 1 350 1 76 1 298 3 358 1 30 1 38 1 309 1 99 2 6 3 253 1 
216 1 22 6 0 1 114 2 76 1 295 1 298 2 358 1 195 1 30 2 99 1 6 6 253 1 284 1 367 1 84 12 368 2 11 1 130 2 350 1 175 1 307 1 38 2 309 2 139 1 
22 3 84 6 145 1 76 1 298 2 288 1 38 1 309 1 99 1 278 1 6 3 
22 1 0 1 84 3 368 2 145 1 129 1 350 1 76 1 356 1 275 1 298 2 288 1 358 1 99 1 200 1 6 2 253 1 
284 1 22 5 0 1 155 1 368 2 84 10 145 2 350 1 76 2 298 5 358 1 288 2 38 2 309 2 99 3 278 1 6 5 253 1 
284 1 22 2 0 1 114 1 368 2 84 2 350 1 76 1 298 1 358 1 38 1 253 1 
284 1 22 2 0 1 114 1 368 2 84 4 130 1 350 1 76 1 298 2 358 1 30 1 309 1 38 1 99 1 6 2 253 1 
284 1 22 1 0 3 143 1 84 3 368 6 145 1 350 3 275 1 76 1 298 2 358 3 288 1 200 1 99 1 6 2 253 3 
22 16 0 5 114 3 143 1 145 3 356 1 275 2 76 5 298 12 358 5 54 1 30 3 200 1 99 7 278 2 6 18 120 1 253 5 284 1 202 1 126 1 367 3 368 10 84 34 11 1 346 1 260 1 129 1 130 3 350 5 175 4 288 3 38 5 309 5 
216 1 22 4 0 1 145 1 356 1 298 2 358 1 99 2 278 1 6 4 120 1 253 1 284 1 367 1 84 8 368 2 11 1 129 1 350 1 175 1 288 1 309 1 38 1 
216 1 22 6 0 2 114 1 145 1 356 1 76 1 298 3 358 2 30 1 99 2 278 1 6 5 120 1 253 2 284 1 126 1 367 1 84 11 368 4 11 1 346 1 129 1 350 2 175 2 288 1 309 1 38 2 
216 1 22 9 0 3 114 2 145 1 356 1 76 1 295 1 275 1 298 4 358 3 195 1 30 2 99 3 278 1 6 10 120 1 253 3 284 1 367 1 84 19 368 6 346 1 11 1 129 1 130 2 350 3 175 1 288 1 307 1 38 3 309 3 139 1 
216 1 22 10 0 3 114 2 145 1 356 1 275 1 76 2 295 1 298 5 358 3 195 1 30 2 99 3 278 1 6 7 120 1 253 3 284 1 367 1 84 17 368 6 346 1 11 1 129 1 130 1 350 3 175 1 288 1 307 1 38 3 309 2 139 1 
216 1 22 4 0 1 145 1 356 1 298 2 358 1 99 2 278 1 6 4 120 1 253 1 284 1 367 1 84 8 368 2 11 1 129 1 350 1 175 1 288 1 309 1 38 1 
216 1 22 6 0 1 114 2 76 1 295 1 298 2 358 1 195 1 30 2 99 1 6 6 253 1 284 1 367 1 84 12 368 2 11 1 130 2 350 1 175 1 307 1 38 2 309 2 139 1 
216 1 22 10 0 4 114 2 145 1 356 1 76 2 295 1 275 2 298 5 358 4 195 1 30 2 99 3 278 1 6 8 120 1 253 4 284 1 367 1 84 18 368 8 11 1 346 1 129 1 130 1 350 4 175 1 288 1 307 1 38 3 309 2 139 1 
216 1 22 9 0 4 114 3 143 1 76 3 295 1 275 2 298 6 358 4 195 1 30 3 99 3 6 7 253 4 284 1 367 1 84 16 368 8 11 1 130 2 350 4 175 1 307 1 38 3 309 2 139 1 
22 3 84 7 145 3 129 1 356 2 76 3 298 6 288 3 309 1 38 1 99 3 278 1 6 4 
216 1 22 10 0 4 114 2 143 1 145 1 356 1 76 1 295 1 275 2 298 4 358 4 195 1 30 2 99 3 278 1 6 8 120 1 253 4 284 1 367 1 84 18 368 8 11 1 129 1 130 1 350 4 175 1 288 1 307 1 38 3 309 2 139 1 
268 1 226 1 146 1 347 1 172 1 86 1 101 1 
268 1 292 1 146 1 172 1 347 1 86 1 296 1 226 1 229 1 66 1 169 1 101 1 
134 1 71 1 116 1 5 1 326 1 305 1 127 1 237 1 322 1 182 1 319 1 
268 2 162 1 71 1 116 1 205 1 326 1 347 1 127 1 370 1 74 1 86 2 134 1 226 1 5 1 299 1 237 1 182 1 123 1 
268 2 71 1 162 2 116 2 314 1 2 1 74 1 226 1 299 1 5 3 123 1 205 1 326 1 127 1 347 2 370 2 86 2 234 1 16 1 235 1 237 1 182 1 353 1 
268 2 71 2 162 2 116 2 314 1 270 1 2 1 74 1 226 1 299 1 5 3 228 1 205 1 326 1 127 2 347 2 370 2 86 2 234 1 16 1 235 1 237 1 182 2 353 1 
71 1 198 1 5 1 214 1 2 1 153 1 127 1 182 1 168 1 149 1 132 1 
71 1 5 1 214 1 2 1 153 1 127 1 182 1 168 1 149 1 50 1 132 1 
71 1 326 1 127 1 237 1 182 1 208 1 
103 1 71 6 313 1 116 2 188 1 326 2 285 1 127 7 166 1 370 1 208 1 49 1 134 2 5 3 17 1 41 1 237 3 43 1 182 7 377 1 113 1 
240 1 0 2 291 2 145 1 49 1 298 2 299 1 5 1 55 1 99 2 6 3 59 1 253 2 301 1 205 1 347 1 350 2 309 1 268 2 22 3 71 1 162 1 72 1 116 1 74 1 222 1 356 1 358 2 226 2 278 1 280 1 120 1 232 1 123 1 368 4 84 6 326 1 127 1 370 1 129 1 86 2 288 1 38 1 289 2 237 1 182 1 378 1 
93 1 71 1 3 1 190 1 127 1 317 1 26 1 168 1 349 1 149 1 50 1 132 1 35 1 134 1 5 1 214 1 153 1 18 1 331 1 182 1 
71 1 313 1 116 1 326 1 127 1 370 1 208 1 77 1 5 1 153 1 237 2 182 1 233 1 
71 4 116 1 326 1 127 4 305 1 319 1 49 1 134 1 5 1 31 1 228 1 237 1 182 4 
71 2 116 1 2 1 271 1 326 1 127 2 294 1 370 1 5 1 17 1 41 1 237 2 182 2 161 1 
134 1 71 1 248 1 326 1 127 1 281 1 237 1 34 1 182 1 328 1 
103 1 71 2 116 1 5 1 188 1 264 1 326 1 127 2 237 1 182 2 49 1 
71 4 116 2 188 1 2 1 326 2 305 1 127 5 285 1 319 1 49 1 134 1 5 3 31 1 237 2 182 5 377 1 
343 1 71 4 116 2 188 1 2 1 326 2 305 1 127 5 285 1 319 1 49 1 134 1 5 3 31 1 237 2 182 5 
268 2 162 1 71 1 116 1 270 1 205 1 326 1 347 1 127 1 370 1 74 1 86 2 134 1 226 1 5 1 299 1 237 1 182 1 
71 1 313 1 116 1 2 1 326 1 127 1 166 1 370 1 5 1 17 1 41 1 237 2 182 1 
244 1 226 1 371 1 357 1 297 1 
335 1 218 1 3 1 259 1 327 1 234 1 371 2 274 1 132 2 297 1 357 2 276 1 244 2 235 1 16 1 226 1 214 2 179 1 19 1 
268 1 244 1 156 1 351 1 105 1 347 1 86 1 371 1 297 1 
259 1 327 1 297 1 
52 1 1 1 117 1 322 1 
52 1 51 1 1 1 255 1 117 1 215 1 221 1 
246 1 221 1 211 1 
255 1 1 1 117 1 221 3 52 1 51 3 151 1 263 1 215 1 110 1 252 2 68 1 
52 1 51 2 186 1 1 1 255 1 117 1 272 1 215 1 221 2 
52 1 51 1 325 1 196 1 255 1 248 1 215 1 110 1 281 1 221 1 310 1 
52 1 51 1 1 1 255 1 215 1 110 1 221 1 
51 1 1 2 255 1 117 1 215 1 110 1 221 1 
1 1 255 2 221 2 95 1 52 1 51 2 215 2 88 1 110 1 170 1 
325 1 186 2 1 1 255 1 117 1 338 1 165 1 221 3 223 1 51 3 52 2 215 1 110 1 
186 1 1 1 255 1 117 1 221 2 328 1 52 1 51 2 157 1 196 1 215 1 248 1 110 1 281 2 283 1 
325 1 186 2 1 1 255 2 117 1 272 1 221 4 223 1 51 4 52 2 340 1 215 2 110 1 
52 1 51 1 1 1 255 1 117 1 215 1 110 1 221 1 
325 1 186 2 1 2 255 1 117 2 221 4 223 1 51 4 52 3 263 1 215 1 252 1 90 1 68 1 
186 1 1 1 255 1 256 1 117 1 302 1 221 2 52 1 51 2 53 1 215 1 110 1 
255 1 1 1 117 1 221 3 52 1 51 3 263 1 215 1 110 1 252 2 68 2 354 1 
52 2 73 1 192 1 69 2 
51 1 104 1 255 1 215 1 110 1 221 1 
52 1 51 2 186 1 1 1 255 1 117 1 338 1 215 1 110 1 221 2 
152 1 
52 1 51 1 1 1 255 1 117 1 215 1 110 1 221 1 
52 1 51 3 186 1 1 1 255 1 117 1 338 1 215 1 252 1 110 1 221 3 
52 1 325 1 90 1 223 1 
52 1 1 1 

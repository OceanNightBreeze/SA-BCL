#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 353 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 2 276 1 77 1 304 1 362 1 365 2 37 3 50 3 334 1 287 1 310 1 126 1 97 2 
313 2 77 1 172 1 127 1 240 1 49 1 50 9 334 2 31 2 51 2 34 1 276 4 160 2 277 1 304 6 362 1 305 2 37 9 365 2 63 1 64 1 370 1 287 1 185 1 310 1 126 3 97 5 125 1 
313 2 77 1 172 1 127 1 240 1 49 1 50 9 334 2 31 2 51 2 34 1 276 4 160 2 277 1 304 6 362 1 305 2 37 9 365 2 63 1 64 1 370 1 287 1 185 1 310 1 126 3 97 5 125 1 
313 2 77 1 172 1 127 1 240 1 49 1 50 10 334 2 31 2 51 2 34 1 276 5 160 2 277 1 304 7 362 1 305 2 37 10 365 2 63 1 64 1 370 1 287 1 185 1 310 1 126 4 97 6 125 1 
313 2 77 1 172 1 127 1 240 1 49 1 50 7 334 2 31 2 51 1 276 3 160 2 277 1 304 4 362 1 305 2 37 7 365 2 63 1 64 1 370 1 287 1 185 1 310 1 126 2 97 4 125 1 
313 1 34 1 276 2 160 1 77 1 304 3 362 1 305 1 127 1 365 1 37 4 64 1 50 4 31 1 51 2 287 1 126 1 97 3 
313 1 77 1 214 1 362 1 305 1 172 1 365 1 37 2 174 1 50 2 17 1 334 1 31 1 185 1 287 1 97 1 
313 2 77 1 127 1 48 1 50 9 334 1 31 1 51 2 10 1 34 1 276 4 160 1 304 7 362 1 305 1 37 9 365 2 63 1 64 1 310 1 287 1 126 3 97 5 125 1 
313 2 77 1 127 1 48 1 50 9 334 1 31 1 51 2 10 1 34 1 276 4 160 1 304 7 362 1 305 1 37 9 365 2 63 1 64 1 310 1 287 1 126 3 97 5 125 1 
290 1 228 1 354 1 364 1 92 1 356 1 30 1 267 1 254 1 123 1 257 1 243 1 186 1 75 1 
107 1 
181 1 107 1 94 1 85 1 288 1 354 2 243 1 92 2 
22 1 261 1 188 1 204 1 3 2 354 5 92 5 62 2 340 1 143 2 68 1 107 1 94 2 85 1 288 1 20 1 156 1 98 1 243 2 
107 1 327 1 288 1 
107 1 271 2 38 1 
356 2 290 2 267 2 30 2 254 2 341 1 364 1 75 2 
259 1 290 2 213 2 237 2 190 2 332 1 29 1 356 3 129 1 81 1 267 3 30 2 7 1 33 1 111 1 86 1 222 1 200 1 180 1 250 1 120 2 138 2 364 1 285 1 339 1 254 2 368 1 341 1 18 1 70 1 145 1 255 1 21 1 124 1 258 1 42 1 75 2 
356 1 290 1 267 1 30 1 254 1 123 1 257 1 364 1 186 1 75 1 
290 1 56 1 227 1 228 1 364 1 356 2 47 1 30 1 267 2 254 1 107 1 19 1 211 1 123 1 257 2 288 1 186 1 75 2 
290 2 227 1 228 1 364 1 354 1 92 1 356 2 47 1 30 2 267 2 254 2 107 1 211 1 123 1 288 1 257 2 186 1 75 2 
94 1 189 1 354 1 243 1 92 1 
333 1 107 1 94 1 85 1 288 1 354 2 243 1 92 2 
94 1 354 1 92 1 
290 1 356 2 30 1 267 2 254 1 341 2 344 1 263 1 75 2 
292 1 96 1 166 1 
213 1 222 1 200 1 190 1 250 1 138 1 332 1 356 1 81 1 267 1 339 1 368 1 341 1 6 1 124 1 258 1 
341 1 327 1 
356 1 267 1 30 1 254 1 257 1 186 1 75 1 
356 1 290 1 267 1 30 1 254 1 263 1 344 1 257 1 75 1 
244 1 290 1 322 1 227 1 88 1 47 1 356 2 30 2 267 2 254 2 197 1 211 1 344 1 257 1 75 2 
356 2 244 1 56 1 267 2 30 1 148 1 254 1 341 1 75 2 
244 1 227 1 353 1 88 1 356 1 47 1 30 1 267 1 254 1 197 1 211 1 257 1 75 1 
244 1 290 1 356 2 30 2 267 2 254 2 96 1 344 1 166 1 75 2 
213 1 222 1 200 1 190 1 250 1 138 1 332 1 356 1 81 1 267 1 339 1 368 1 341 1 124 1 258 1 
213 1 200 1 190 1 250 1 138 1 46 1 332 1 356 1 81 1 102 1 267 1 339 1 368 1 341 1 258 1 
259 1 237 4 218 1 292 2 357 1 266 1 129 1 104 1 155 1 133 1 111 2 86 2 113 1 301 1 180 1 120 2 205 1 285 1 18 1 71 1 122 1 255 1 96 2 166 2 
47 1 356 1 267 1 30 1 254 1 318 1 257 1 75 1 
290 1 244 1 356 3 267 3 30 3 254 3 341 1 75 3 
244 1 213 1 222 1 200 1 190 1 250 1 138 1 332 1 356 2 81 1 30 1 267 2 339 1 368 1 254 1 197 1 166 1 124 1 258 1 75 1 
244 2 290 1 56 1 148 1 356 5 30 4 267 5 254 4 341 1 309 1 197 1 344 1 75 5 198 1 
356 2 267 2 30 2 254 2 318 1 257 1 186 1 75 2 
159 1 225 1 84 1 
159 2 225 2 295 1 163 1 345 1 308 1 
159 1 225 1 
159 1 225 1 
295 1 308 1 
295 1 308 1 
295 1 308 1 
233 1 159 1 225 1 
233 1 159 1 225 1 
233 1 159 1 225 1 
159 1 225 1 11 1 
159 1 225 1 11 1 
159 1 225 1 11 1 
159 2 352 1 225 2 161 1 203 2 60 1 163 1 90 1 354 2 101 1 92 2 253 2 286 1 16 2 235 2 107 1 176 3 342 2 272 1 
24 1 354 1 356 2 30 2 267 2 176 1 84 1 159 1 55 1 179 1 225 1 60 1 162 1 91 1 92 1 253 1 254 2 16 1 235 1 341 1 121 1 342 1 74 1 75 2 
174 1 160 1 31 2 247 2 112 1 
160 1 31 1 305 1 
174 1 31 1 305 1 
174 1 160 2 144 1 31 3 247 1 112 1 
174 1 160 1 31 2 247 1 112 1 329 1 
187 1 261 1 3 1 100 1 354 5 266 1 175 2 104 1 315 1 316 1 107 2 271 3 83 1 85 1 243 4 113 1 55 1 116 1 135 1 162 1 204 2 62 1 92 5 143 1 94 1 371 2 38 1 122 1 288 1 167 2 98 3 74 1 
261 1 351 1 189 5 3 2 100 3 354 9 266 3 175 6 104 3 106 1 315 2 107 5 316 1 271 9 85 1 156 1 243 7 53 1 113 3 116 2 323 1 204 6 230 1 92 9 62 2 143 2 94 6 326 1 38 3 122 3 288 1 167 6 74 4 346 5 98 8 
3 1 354 3 100 1 266 1 104 1 175 2 315 1 107 3 271 4 83 1 156 1 243 2 113 1 116 1 135 1 204 2 62 1 92 3 143 1 371 1 38 2 122 1 288 1 167 2 98 3 74 1 
3 1 354 4 100 2 266 2 175 4 104 2 106 1 315 1 107 4 271 7 83 1 156 1 243 3 53 1 113 2 116 1 135 1 323 1 204 4 62 1 92 4 143 1 371 2 38 3 122 2 288 1 167 4 98 5 74 2 
40 1 
274 1 327 1 250 1 
81 1 250 1 
81 1 65 1 274 2 250 3 251 1 258 1 
250 1 300 1 
81 1 250 1 258 1 
173 1 250 1 
115 1 320 1 237 7 76 1 12 1 139 1 357 2 141 1 369 1 155 3 95 2 122 1 299 1 111 3 134 1 113 1 212 1 86 4 
259 1 349 1 237 31 262 1 76 1 2 1 100 3 357 5 129 1 219 1 266 3 104 3 155 10 317 1 178 1 111 15 359 1 134 1 86 16 113 4 115 2 320 2 180 1 12 1 120 2 206 4 139 2 366 3 141 1 369 2 18 1 95 3 122 4 212 5 
259 2 237 9 76 1 357 3 129 2 155 4 317 1 111 4 113 1 86 5 115 1 320 1 246 1 180 2 12 1 120 4 139 1 141 1 369 1 18 2 95 2 122 1 374 1 212 1 
115 1 320 1 237 7 76 1 12 1 139 1 357 2 141 1 369 1 155 3 95 2 122 1 111 3 134 1 113 1 212 1 86 4 
115 1 320 1 237 7 76 1 12 1 139 1 357 2 141 1 369 1 155 3 95 2 122 1 111 3 134 1 113 1 212 1 86 4 
313 1 213 1 245 2 200 1 146 1 190 1 26 2 13 1 250 1 27 1 138 1 332 1 365 1 37 1 265 1 81 1 339 1 196 1 67 1 50 1 334 2 210 1 72 2 
313 1 213 1 245 1 200 1 275 1 160 1 190 1 26 1 192 1 305 1 138 1 332 1 365 1 37 1 174 1 50 1 144 1 334 1 31 2 165 1 82 1 72 1 220 1 287 1 328 1 54 1 
313 1 213 1 77 1 190 1 26 1 192 1 332 1 174 1 50 2 334 1 31 2 82 1 220 1 54 1 245 1 275 1 200 1 160 1 304 1 362 1 305 1 138 1 37 2 365 1 144 1 372 1 72 1 287 1 328 1 97 1 
313 1 213 1 77 1 190 1 26 1 192 1 332 1 174 1 50 3 334 1 31 2 82 1 220 1 110 1 245 1 275 1 200 1 160 1 304 2 362 1 305 1 138 1 37 3 365 1 144 1 165 1 210 1 72 1 328 1 97 1 
213 1 77 1 190 1 26 1 332 1 174 1 50 2 334 1 31 2 220 1 110 1 245 1 275 1 200 1 160 1 304 2 362 1 305 1 138 1 37 2 144 1 165 1 72 1 328 1 97 1 
361 1 
168 1 147 1 261 1 3 1 354 3 356 1 47 1 267 1 107 1 130 1 109 2 85 2 132 1 335 1 158 3 56 1 58 3 227 1 204 1 229 1 324 2 363 1 61 1 232 2 62 1 92 3 209 1 143 1 94 5 182 3 183 2 19 1 211 1 184 3 38 2 288 1 257 1 98 1 348 1 75 1 236 1 
168 1 147 1 261 1 3 1 354 3 356 1 47 1 267 1 107 1 130 1 109 2 85 2 132 1 335 1 158 3 56 1 58 3 227 1 204 1 229 1 324 2 363 1 61 1 232 2 62 1 92 3 209 1 143 1 94 5 182 3 183 2 19 1 211 1 184 3 38 2 288 1 257 1 98 1 348 1 75 1 236 1 
168 1 261 1 3 1 194 1 354 3 356 1 47 1 239 1 267 1 107 1 130 1 271 2 32 2 85 2 335 1 158 2 56 1 58 2 117 2 227 1 204 1 61 1 232 2 62 1 92 3 209 1 143 1 94 4 182 2 184 2 183 2 19 1 211 1 288 1 257 1 98 1 236 1 75 1 
147 1 190 2 3 1 194 1 332 1 47 1 196 1 107 1 109 2 335 1 158 2 56 1 116 1 200 1 302 1 58 2 250 1 204 2 61 1 62 1 209 1 339 2 67 1 19 1 211 1 257 1 75 1 168 1 213 2 261 1 79 1 354 4 356 1 81 1 267 1 130 1 271 2 85 3 223 1 227 1 324 2 138 2 92 4 232 2 282 1 143 1 94 6 182 2 184 2 183 2 38 2 98 2 236 1 
168 1 56 1 227 1 354 2 61 1 92 2 47 1 356 1 181 1 209 1 267 1 94 2 182 1 130 1 211 1 19 1 85 1 257 1 236 1 75 1 
158 1 168 1 56 1 58 1 227 1 354 1 61 1 92 1 47 1 356 1 209 1 267 1 130 1 211 1 19 1 257 1 236 1 75 1 
168 1 354 2 356 1 47 1 267 1 130 1 85 1 158 1 56 1 58 1 227 1 61 1 92 2 209 1 181 1 94 2 182 1 19 1 211 1 184 1 257 1 75 1 236 1 
290 1 147 1 3 1 47 1 107 2 109 2 335 1 158 3 56 1 58 3 204 1 61 1 62 1 209 1 254 1 211 1 19 1 123 1 257 2 75 2 348 1 168 1 261 1 354 4 356 2 30 1 267 2 269 1 130 1 85 3 132 1 227 1 228 1 229 1 324 2 363 1 364 1 92 4 232 2 181 1 143 1 94 7 182 4 184 4 183 2 38 2 288 2 98 1 186 1 236 1 
147 1 3 1 194 1 47 1 107 2 109 2 335 1 158 2 56 1 58 2 204 1 61 1 62 1 209 1 211 1 19 1 257 1 75 1 168 1 261 1 354 3 356 1 267 1 130 1 271 2 85 2 227 1 324 2 92 3 232 2 143 1 94 4 182 2 183 2 184 2 38 2 288 1 98 1 236 1 
168 1 261 1 147 1 3 1 354 3 356 1 47 1 267 1 107 1 130 1 109 2 85 2 335 1 158 2 56 1 58 2 227 1 204 1 229 1 324 2 363 1 61 1 232 2 92 3 62 1 209 1 143 1 94 4 182 2 184 2 183 2 19 1 211 1 38 2 288 1 257 1 98 1 348 1 75 1 236 1 
168 1 261 1 147 1 3 1 354 3 356 1 47 1 267 1 107 1 130 1 109 2 85 2 335 1 158 2 56 1 58 2 227 1 204 1 229 1 324 2 363 1 61 1 232 2 92 3 62 1 209 1 143 1 94 4 182 2 184 2 183 2 19 1 211 1 38 2 288 1 257 1 98 1 348 1 75 1 236 1 
168 1 261 1 3 1 354 3 356 1 47 1 239 1 267 1 107 1 130 1 271 2 32 2 85 2 335 1 158 2 56 1 58 2 117 2 59 1 227 1 204 1 61 1 232 2 92 3 62 1 209 1 143 1 94 4 182 2 184 2 183 2 19 1 211 1 256 1 288 1 257 1 98 1 348 1 75 1 236 1 
259 2 213 8 237 2 190 7 1 1 332 2 218 1 356 1 152 1 129 2 81 2 267 1 30 1 105 1 196 1 7 1 33 2 111 1 86 1 244 1 224 1 200 2 136 1 118 1 180 2 250 3 120 4 89 1 138 8 285 2 339 2 254 1 67 1 18 2 165 1 372 1 255 2 21 1 75 1 
290 1 259 1 237 3 100 1 357 1 292 1 356 1 129 1 266 1 30 1 267 1 104 1 155 1 111 2 86 1 113 1 201 1 180 1 249 1 120 2 285 1 254 1 18 1 122 1 96 1 344 1 255 1 166 1 75 1 
259 1 237 6 76 1 218 1 357 2 292 1 129 1 155 2 111 3 86 3 113 1 320 1 180 1 12 1 120 2 141 1 285 1 369 1 18 1 341 2 327 1 95 1 122 1 96 1 255 1 166 1 
259 2 349 1 43 1 237 14 45 1 100 2 357 1 292 11 129 2 266 1 154 1 104 2 155 2 7 1 178 1 111 6 86 8 113 1 180 2 249 1 120 4 206 3 366 3 285 2 341 1 18 2 122 2 255 1 96 4 21 1 166 11 289 1 212 1 
259 1 213 1 237 2 190 1 191 1 332 1 356 2 81 1 129 1 267 2 30 1 6 1 197 1 7 1 177 1 111 1 86 1 244 1 222 1 200 1 180 1 249 1 250 1 120 2 138 1 285 1 339 1 368 1 254 1 341 1 18 1 39 1 96 1 255 1 124 1 21 1 258 1 75 1 
237 20 190 3 44 1 332 2 100 2 292 7 104 2 155 8 197 1 7 1 111 10 113 3 244 1 57 2 200 2 12 1 249 1 250 2 120 6 252 2 339 1 254 1 341 2 18 3 70 2 165 1 122 3 255 3 21 1 124 2 166 7 258 2 75 1 212 4 259 3 213 3 350 2 76 1 357 4 356 3 80 1 129 3 81 2 266 2 30 1 267 3 86 10 222 2 320 1 180 3 87 2 138 3 141 1 285 3 369 1 368 2 95 1 373 1 96 7 
259 1 237 2 180 1 120 2 218 1 292 1 129 1 285 1 104 1 155 1 18 1 122 1 96 1 255 1 166 1 212 1 301 1 86 2 
259 1 237 2 180 1 120 2 218 1 357 1 292 1 129 1 266 1 285 1 155 1 18 1 96 1 255 1 166 1 133 1 111 2 113 1 
259 1 237 4 100 1 218 1 292 2 357 1 129 1 266 1 104 1 155 2 111 2 86 2 113 1 180 1 120 2 285 1 18 1 122 1 255 1 96 2 166 2 212 1 
259 1 237 2 1 1 180 1 120 2 292 1 129 1 285 1 104 1 155 1 18 1 122 1 96 1 255 1 166 1 212 1 301 1 86 2 
259 1 237 2 1 1 180 1 120 2 357 1 292 1 129 1 266 1 285 1 155 1 18 1 96 1 255 1 166 1 133 1 111 2 113 1 
259 1 237 4 1 1 100 1 292 2 357 1 129 1 266 1 104 1 155 2 111 2 86 2 113 1 180 1 120 2 285 1 18 1 122 1 255 1 96 2 166 2 212 1 
259 1 237 4 180 1 120 2 100 1 357 1 292 2 266 1 129 1 285 1 104 1 155 2 18 1 122 1 96 2 255 1 166 2 111 2 113 1 212 1 86 2 
259 1 213 1 237 2 190 1 332 1 356 1 81 1 129 1 267 1 7 1 111 1 86 1 222 1 200 1 180 1 250 1 120 2 138 1 285 1 339 1 368 1 341 1 70 1 18 1 255 1 124 1 21 1 258 1 
259 1 213 1 237 2 190 1 46 1 332 1 356 1 81 1 129 1 102 1 267 1 7 1 111 1 86 1 200 1 360 1 180 1 250 1 120 2 138 1 285 1 339 1 368 1 341 1 18 1 255 1 21 1 258 1 
259 1 237 4 100 1 292 2 357 1 129 1 266 1 104 1 155 2 111 2 86 2 113 1 180 1 249 1 120 2 285 1 18 1 122 1 255 1 96 2 166 2 212 1 
259 1 213 1 237 4 190 1 332 1 100 1 357 1 292 2 356 1 266 1 81 1 129 1 104 1 267 1 155 2 111 2 113 1 86 2 222 1 200 1 57 1 180 1 250 1 120 2 138 1 285 1 368 1 70 1 18 1 372 1 122 1 96 2 255 1 166 2 124 1 258 1 212 1 
290 1 259 1 237 3 100 1 356 1 292 1 266 1 129 1 30 1 267 1 104 1 155 1 111 1 113 1 86 2 180 1 249 1 120 2 280 1 285 1 254 1 18 1 122 1 344 1 255 1 96 1 166 1 212 1 75 1 
259 2 349 1 237 19 314 2 331 1 100 3 357 3 129 2 266 3 268 2 104 3 155 6 52 1 178 1 111 10 86 9 113 3 246 1 180 2 278 1 120 4 206 2 366 1 234 1 367 1 18 2 122 3 347 1 99 1 212 3 
259 3 330 1 237 26 314 1 169 1 193 1 331 2 100 3 151 1 357 2 129 3 266 2 268 4 104 3 155 4 317 2 52 1 178 2 111 12 113 2 86 14 246 1 180 3 278 2 120 6 306 1 206 2 231 1 366 2 367 1 18 3 122 3 99 1 212 2 
330 1 237 41 193 1 100 4 331 2 151 1 104 4 155 8 52 1 111 21 113 5 246 1 12 1 120 6 206 4 306 1 18 3 122 5 212 4 349 1 259 3 169 1 76 1 314 1 78 1 357 4 266 4 129 3 268 4 317 1 178 3 86 20 320 1 180 3 278 1 231 1 366 3 141 1 367 1 369 1 234 1 95 1 99 1 
259 4 349 1 330 1 237 38 314 1 76 1 169 1 78 1 193 1 331 2 100 4 151 1 357 4 129 4 266 3 268 4 104 4 155 7 317 2 52 1 178 3 111 18 86 20 113 4 320 1 246 1 180 4 12 1 278 1 120 8 306 1 206 4 231 1 366 3 141 1 234 1 369 1 367 1 18 4 95 1 122 5 99 1 212 3 
259 2 349 2 330 1 43 2 237 52 314 1 76 1 169 1 193 1 331 1 100 7 151 1 357 7 129 2 266 7 268 4 104 7 155 14 317 1 52 1 178 2 111 25 86 27 113 8 320 1 246 1 180 2 12 1 278 1 120 4 306 1 206 4 231 1 366 4 141 1 369 1 367 1 18 2 95 1 122 8 99 1 212 7 
259 1 213 2 237 2 190 2 332 1 356 2 81 1 129 1 267 2 7 1 9 1 33 2 111 1 86 1 200 1 136 1 118 1 226 1 180 1 36 1 249 1 250 1 120 2 138 2 285 1 69 1 18 1 255 1 21 1 311 1 75 2 
213 1 260 1 200 1 190 1 26 1 250 1 138 1 332 1 265 1 81 1 5 1 339 1 67 1 196 1 
213 1 260 1 275 1 200 1 160 1 190 1 26 1 305 1 138 1 332 1 283 1 174 1 293 1 144 1 31 2 165 1 82 1 328 1 
213 2 260 1 200 1 275 1 160 1 190 2 26 1 305 1 138 2 332 1 283 1 174 1 293 1 144 1 31 2 165 1 372 1 82 1 328 1 
213 1 275 1 200 1 160 1 190 1 26 1 305 1 138 1 332 1 195 1 174 1 293 1 144 1 31 2 165 1 82 1 328 1 
296 1 
261 1 204 1 3 1 62 1 340 1 143 1 107 1 20 1 288 1 98 1 
350 1 204 5 100 2 266 2 104 2 175 5 107 5 271 10 108 2 122 2 38 5 167 5 98 5 312 1 113 2 
107 1 94 1 85 1 288 1 354 1 92 1 
213 4 261 1 190 4 79 1 3 2 332 1 354 3 81 1 196 1 358 1 85 2 319 1 156 1 200 1 116 2 302 1 14 2 250 1 204 2 164 1 138 4 62 2 92 3 282 2 339 2 143 2 67 1 94 4 98 2 
340 1 107 1 327 1 204 1 288 1 20 1 98 1 
147 1 261 1 3 1 354 1 107 2 271 1 109 1 85 1 204 1 324 1 62 1 92 1 143 1 94 1 38 1 288 1 98 1 
190 3 3 4 332 4 100 2 104 2 107 8 108 2 300 3 157 2 336 1 113 2 116 2 200 3 303 1 14 1 250 10 204 8 307 2 251 1 164 1 62 4 340 1 339 1 122 2 73 2 20 1 258 3 167 6 312 2 213 3 350 2 261 4 25 2 354 5 128 1 81 3 173 2 266 2 175 6 271 12 85 3 221 2 274 2 138 3 92 5 282 1 140 2 93 2 143 4 94 5 372 1 38 6 288 2 98 9 
23 1 330 1 261 2 169 1 193 1 3 2 354 1 100 2 151 1 266 2 175 5 104 2 107 5 271 6 108 2 85 1 178 1 113 2 199 1 116 1 204 5 206 1 231 1 92 1 62 2 282 1 366 1 143 2 94 1 38 3 122 2 288 2 167 5 98 8 312 1 
290 1 261 1 3 1 354 1 356 1 4 1 267 1 30 1 108 2 113 1 320 1 12 1 204 2 228 1 363 1 364 1 62 1 92 1 369 1 143 1 254 1 122 2 123 1 257 1 98 2 312 1 186 1 75 1 
259 1 290 2 213 1 237 1 190 1 332 1 356 3 129 1 81 1 267 3 30 2 111 1 222 1 200 1 180 1 250 1 120 2 138 1 364 1 285 1 339 1 254 2 368 1 341 1 18 1 70 1 145 1 255 1 21 1 124 1 258 1 75 2 
116 1 261 1 204 2 3 1 62 1 282 1 175 2 143 1 107 4 95 1 271 4 38 2 288 2 167 2 98 1 
16 1 235 1 24 1 241 1 272 1 
16 1 235 1 149 1 
16 1 235 1 149 1 
16 1 235 1 149 1 
16 1 235 1 119 1 
16 1 235 1 119 1 
16 1 235 1 119 1 
16 1 235 1 
159 1 225 1 
259 1 320 2 246 1 237 10 180 1 12 1 120 2 357 3 129 1 4 1 369 2 155 5 18 1 122 2 111 5 212 2 86 5 113 2 
259 1 246 1 237 2 180 1 120 2 129 1 104 1 155 1 18 1 122 1 86 2 212 1 
259 1 246 1 237 4 180 1 120 2 100 1 357 1 266 1 129 1 104 1 155 2 18 1 122 1 111 2 113 1 86 2 212 1 
259 3 320 1 246 1 237 3 180 3 120 6 355 1 357 1 129 3 234 1 369 1 155 2 317 1 18 3 111 2 212 1 86 1 
259 5 349 1 262 1 237 34 76 1 2 1 100 3 355 1 357 7 129 5 266 3 104 3 155 12 317 2 178 1 359 1 111 18 86 16 113 5 320 3 246 1 180 5 12 2 120 10 206 4 366 3 141 1 369 3 234 1 18 5 95 1 122 5 41 1 212 5 
259 1 237 8 76 1 193 1 357 2 129 1 155 2 178 1 111 4 113 1 86 4 320 1 246 1 180 1 12 1 120 2 206 1 366 1 141 1 369 1 18 1 95 1 122 1 
259 2 349 1 237 11 76 1 193 1 100 1 357 2 129 2 104 1 155 3 178 1 111 5 113 1 86 6 320 1 246 1 180 2 12 1 120 4 206 2 366 1 141 1 369 1 18 2 95 1 122 2 41 1 212 1 
259 3 330 1 237 19 76 1 169 1 193 1 100 2 151 1 357 3 129 3 266 2 104 2 155 4 317 1 178 1 111 10 86 9 113 3 320 1 246 1 180 3 12 1 120 6 206 1 231 1 366 1 141 1 369 1 18 3 95 1 122 3 41 1 212 1 
259 3 330 1 237 17 76 1 169 1 193 1 100 2 151 1 357 3 129 3 266 1 104 2 155 5 317 1 178 1 111 7 86 10 113 2 320 1 246 1 180 3 12 1 120 6 206 1 231 1 366 1 141 1 369 1 18 3 95 1 122 3 41 1 212 2 
259 1 237 8 76 1 193 1 357 2 129 1 155 2 178 1 111 4 113 1 86 4 320 1 246 1 180 1 12 1 120 2 206 1 366 1 141 1 369 1 18 1 95 1 122 1 
259 1 330 1 237 12 169 1 193 1 100 2 151 1 357 1 129 1 266 2 104 2 155 2 178 1 111 6 86 6 113 2 246 1 180 1 120 2 206 1 231 1 366 1 18 1 122 2 212 1 
259 4 330 1 237 18 76 1 169 1 193 1 100 2 151 1 357 3 129 4 266 1 104 2 155 5 317 2 178 1 111 8 86 10 113 2 320 1 246 1 180 4 12 1 120 8 206 1 231 1 366 1 141 1 369 1 18 4 95 1 122 3 41 1 212 2 
259 4 330 1 237 16 169 1 193 1 100 3 151 1 357 3 129 4 266 2 104 3 155 6 317 2 178 1 111 7 86 9 113 2 246 1 180 4 120 8 206 1 231 1 366 1 234 1 18 4 122 3 212 3 
320 3 237 7 76 2 12 1 357 3 141 1 369 3 155 6 122 1 111 4 113 1 212 3 86 3 
259 4 330 1 237 18 76 1 169 1 193 1 100 2 151 1 357 3 129 4 266 1 104 2 155 4 317 2 178 1 111 8 86 10 113 2 320 1 246 1 180 4 12 1 120 8 206 1 231 1 366 1 141 1 369 1 234 1 18 4 95 1 122 3 212 1 
259 2 320 1 237 8 76 1 180 2 12 1 120 4 357 2 129 2 141 1 369 1 155 3 18 2 317 1 95 1 122 1 111 4 113 1 86 4 212 1 
320 1 237 6 76 1 12 1 357 2 141 1 369 1 155 2 327 1 95 1 122 1 111 3 86 3 113 1 
259 1 237 4 180 1 120 2 100 1 357 1 266 1 129 1 104 1 155 2 18 1 122 1 41 1 111 2 113 1 86 2 212 1 
349 1 237 7 206 2 100 1 357 1 366 1 266 1 104 1 155 2 122 1 178 1 111 4 113 1 86 3 212 1 
349 1 259 2 43 1 237 23 76 1 100 2 355 1 357 5 266 2 129 2 154 1 104 2 155 9 317 2 111 12 86 11 113 3 320 2 180 2 12 1 120 4 206 2 366 2 141 1 369 2 18 2 95 1 122 3 212 4 
237 1 206 1 111 1 
366 1 237 1 86 1 
259 1 350 1 237 6 180 1 120 2 100 1 357 2 129 1 266 1 104 1 155 3 18 1 122 1 41 1 111 3 86 3 212 1 113 1 
259 1 330 1 237 12 169 1 193 1 100 2 151 1 357 1 129 1 266 2 104 2 155 2 178 1 111 6 86 6 113 2 246 1 180 1 120 2 206 1 231 1 366 1 18 1 122 2 212 1 
320 1 237 6 12 1 357 1 369 1 155 2 122 1 111 3 86 3 113 1 212 1 
259 1 320 1 237 3 76 1 180 1 120 2 355 1 357 1 129 1 141 1 369 1 155 2 317 1 18 1 111 2 86 1 212 1 
56 1 35 1 148 1 170 1 208 1 356 1 153 1 267 1 341 1 270 1 8 1 75 1 
356 1 56 1 153 1 267 1 148 1 341 1 75 1 
213 4 200 1 190 4 250 1 138 4 332 1 207 1 81 1 66 1 339 1 67 1 196 1 372 1 
213 2 200 1 321 1 190 2 44 1 171 1 14 1 250 1 138 2 332 2 81 1 294 1 242 1 258 1 
213 1 174 1 200 1 339 1 31 1 190 1 305 1 328 1 138 1 332 1 
213 2 200 1 118 1 190 2 250 1 138 2 332 1 81 1 165 1 372 1 311 1 
213 5 200 2 118 1 190 4 14 1 250 3 138 5 332 2 207 1 152 1 81 2 339 1 196 1 67 1 105 1 372 1 
213 5 200 2 118 1 190 4 14 1 250 3 138 5 332 2 207 1 150 1 81 2 339 1 196 1 67 1 105 1 372 1 
81 1 213 1 200 1 339 1 196 1 67 1 190 1 327 1 250 1 138 1 332 1 
244 1 213 1 200 1 190 1 250 1 138 1 332 1 356 2 81 1 30 1 267 2 339 1 368 1 254 1 341 1 124 1 258 1 75 1 
244 1 213 1 200 1 190 1 250 3 14 1 138 1 332 1 47 1 356 2 173 1 81 2 30 2 267 2 368 1 254 1 341 1 211 1 257 1 124 1 258 2 221 1 75 2 
244 1 213 2 200 1 190 2 250 3 14 1 138 2 46 1 332 1 47 1 356 2 173 1 81 2 66 1 30 2 267 2 368 1 254 1 341 1 211 1 257 1 258 2 221 1 75 2 
213 3 274 1 200 1 190 3 137 1 14 1 250 4 138 3 332 1 354 2 92 2 173 1 81 1 284 1 66 1 339 1 107 1 94 1 288 1 157 1 258 1 300 1 221 1 
213 3 274 1 200 1 190 3 25 1 14 1 250 4 138 3 332 1 354 2 92 2 173 1 81 1 66 1 339 1 107 1 94 1 288 1 157 1 258 1 300 1 221 1 
213 1 200 1 190 1 138 1 89 1 332 1 
224 1 213 7 200 2 321 1 118 1 190 6 171 1 250 3 251 1 89 1 138 7 217 1 332 3 152 1 81 2 339 2 105 1 165 1 372 1 33 1 258 1 
237 6 190 1 332 1 292 1 155 2 111 3 113 1 244 1 57 1 200 1 12 1 249 1 250 1 120 4 254 1 70 1 18 2 341 2 122 1 255 2 124 1 166 1 258 1 75 1 259 2 213 1 76 1 356 2 357 2 129 2 81 1 30 1 267 2 86 3 222 1 320 1 36 1 180 2 87 1 138 1 141 1 285 2 368 1 369 1 372 1 95 1 96 1 
213 1 261 2 190 1 25 1 3 2 354 3 107 1 85 1 300 1 157 1 243 1 274 1 250 2 204 1 307 1 138 1 164 1 62 2 92 3 140 1 340 1 339 1 143 2 94 2 73 1 288 1 20 1 98 1 
213 2 274 1 200 1 190 2 250 2 251 1 89 1 138 2 332 2 81 1 372 1 258 1 336 1 
244 1 213 1 200 1 190 1 250 1 138 1 46 1 332 1 356 2 81 1 30 1 267 2 339 1 368 1 254 1 341 1 258 1 75 1 
213 1 200 1 321 1 190 1 171 1 14 1 250 1 251 1 138 1 217 1 332 2 81 1 258 1 
114 1 0 1 341 1 131 1 338 1 
290 1 0 1 216 1 354 1 356 1 47 1 267 1 30 1 107 1 131 1 243 1 114 1 227 1 248 1 338 1 228 1 88 1 364 1 92 1 254 1 211 1 123 1 343 1 257 2 288 1 186 1 75 1 
114 1 0 1 226 1 338 1 356 1 267 1 69 1 9 1 75 1 
114 1 248 1 343 1 
313 1 50 1 77 1 287 1 362 1 97 1 37 1 365 1 
313 1 276 1 77 2 337 1 304 2 362 2 264 1 37 4 365 1 50 4 298 1 185 1 126 1 97 3 
313 1 77 1 304 1 362 1 238 1 365 1 37 2 28 1 48 1 50 2 287 1 97 1 
313 1 50 3 202 1 77 1 298 1 185 2 337 2 287 1 362 1 97 1 37 3 365 1 
291 1 215 2 273 1 97 2 
313 1 50 1 297 1 287 1 37 1 365 1 
313 1 50 2 77 1 304 1 287 1 362 1 97 1 63 1 37 2 365 1 
281 1 
313 1 50 1 77 1 287 1 362 1 97 1 37 1 365 1 
77 1 327 1 362 1 97 1 
313 1 50 1 77 1 362 1 97 1 37 1 365 1 
334 1 72 1 37 1 
313 1 77 1 337 1 362 1 365 1 37 3 325 1 50 3 298 1 287 1 185 2 97 1 
313 1 50 2 77 1 51 1 304 1 362 1 97 1 37 2 365 1 
313 1 276 1 160 1 305 1 365 1 37 1 64 1 50 1 31 1 287 1 97 1 
313 1 50 1 287 1 362 1 97 1 37 1 365 1 
313 1 50 1 77 1 287 1 362 2 37 1 365 1 
313 2 362 1 15 1 279 1 365 2 37 2 50 2 142 1 287 1 97 1 
313 1 276 1 77 1 304 2 362 1 365 1 37 3 63 1 50 3 287 1 125 1 126 1 97 2 
313 1 160 1 77 1 304 1 362 1 305 1 365 1 37 2 174 1 103 1 50 2 144 1 31 2 287 1 97 1 
313 2 34 1 276 1 77 1 304 2 362 1 365 2 37 4 50 4 51 1 287 1 126 1 97 2 
313 1 77 1 304 1 362 1 365 1 37 3 63 1 50 3 287 1 185 1 97 1 
276 1 97 1 126 1 264 1 
362 1 97 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (124,135) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 3 138 1 302 2 205 1 151 2 224 1 131 1 343 3 78 1 210 1 378 2 277 1 10 1 
2 9 214 1 259 1 196 1 151 5 130 1 224 3 131 1 199 2 343 9 294 1 323 1 78 1 267 1 10 6 106 1 138 4 205 2 302 2 272 2 378 2 210 1 277 1 117 1 211 2 335 2 337 1 358 1 
2 9 214 1 259 1 196 1 151 5 130 1 224 3 131 1 199 2 343 9 294 1 323 1 78 1 267 1 10 6 106 1 138 4 205 2 302 2 272 2 378 2 210 1 277 1 117 1 211 2 335 2 337 1 358 1 
2 10 214 1 259 1 196 1 151 6 130 1 224 4 131 1 199 2 343 10 294 1 323 1 78 1 267 1 10 7 106 1 138 5 205 2 302 2 272 2 378 2 210 1 277 1 117 1 211 2 335 2 337 1 358 1 
2 7 214 1 259 1 151 4 130 1 224 2 131 1 199 1 343 7 294 1 323 1 78 1 267 1 10 4 106 1 138 3 205 2 302 2 272 2 378 2 210 1 277 1 117 1 211 2 335 2 337 1 358 1 
2 4 138 2 302 1 196 1 272 1 151 3 224 1 131 1 199 2 343 4 78 1 210 1 378 1 117 1 211 1 10 3 106 1 335 1 
2 2 214 1 302 1 259 1 205 1 43 1 272 1 206 1 151 1 164 1 131 1 343 2 78 1 210 1 378 1 211 1 
95 1 2 9 258 1 196 1 151 5 224 3 131 1 199 2 343 9 323 1 78 1 10 7 106 1 138 4 205 1 302 2 272 1 378 2 210 1 277 1 117 1 211 1 335 1 358 1 
95 1 2 9 258 1 196 1 151 5 224 3 131 1 199 2 343 9 323 1 78 1 10 7 106 1 138 4 205 1 302 2 272 1 378 2 210 1 277 1 117 1 211 1 335 1 358 1 
192 1 41 1 257 1 194 1 69 1 330 1 208 1 87 1 133 1 324 1 7 1 178 1 169 1 246 1 
353 1 
192 2 238 1 133 2 324 1 195 1 68 1 179 1 353 1 
192 5 238 1 96 1 195 1 160 2 68 2 174 1 88 1 47 1 353 1 364 2 102 1 342 1 253 1 133 5 62 1 324 2 325 1 226 2 
195 1 334 1 353 1 
175 2 23 1 353 1 
257 1 7 2 169 2 36 1 69 2 330 2 208 2 87 2 
283 1 257 1 314 2 69 3 219 1 241 1 361 1 70 1 340 1 71 1 263 1 265 1 7 2 8 1 268 2 367 1 297 1 203 1 31 2 158 1 32 2 247 1 329 1 58 1 330 2 208 3 87 2 331 1 167 1 333 1 169 2 36 1 189 1 37 2 233 1 237 1 40 1 
41 1 257 1 194 1 7 1 178 1 169 1 69 1 330 1 208 1 87 1 
192 1 301 1 195 1 14 1 66 1 69 1 371 1 330 1 208 1 353 1 6 1 133 1 178 1 155 1 
192 2 301 1 195 1 14 1 69 1 330 1 208 1 87 1 353 1 133 2 6 1 7 1 169 1 178 1 155 1 
192 1 133 1 324 1 68 1 21 1 
312 1 192 2 238 1 133 2 324 1 195 1 68 1 353 1 
192 1 133 1 68 1 
283 1 31 1 158 1 314 1 32 1 247 1 69 2 241 1 330 1 70 1 161 1 208 2 71 1 87 1 331 1 167 1 153 1 7 1 8 1 80 1 
159 1 69 2 330 2 208 2 87 1 7 1 169 1 36 2 94 1 
124 1 3 1 153 1 
65 1 283 1 31 1 314 1 158 1 32 1 247 1 69 1 241 1 208 1 70 1 71 1 331 1 167 1 36 1 8 1 
334 1 36 1 
7 3 169 1 36 1 69 3 330 3 161 1 208 3 87 3 
41 1 7 1 178 1 69 1 330 1 208 1 87 1 
159 1 7 1 178 1 169 1 69 1 330 1 208 1 87 1 94 1 
192 1 283 1 257 1 314 1 287 1 69 4 219 1 241 1 70 1 340 1 71 1 263 1 6 1 133 1 265 1 7 3 178 1 8 1 268 1 80 1 155 1 367 1 297 1 31 1 158 1 32 1 247 1 301 1 14 1 330 3 208 4 161 1 87 3 331 1 167 1 169 2 36 1 189 1 37 2 233 1 281 1 237 1 94 1 40 1 
375 1 7 1 36 1 69 2 371 1 330 2 208 2 161 1 87 1 
192 1 301 1 14 1 69 3 330 3 161 2 208 3 87 3 353 1 133 1 6 1 344 1 7 3 169 1 178 1 80 1 155 1 281 1 94 1 
124 1 69 2 330 2 161 1 208 2 87 2 7 2 153 1 169 1 94 1 
31 1 283 1 314 1 158 1 32 1 247 1 69 1 241 1 208 1 70 1 71 1 331 1 167 1 36 1 8 1 
31 1 283 1 314 1 158 1 32 1 247 1 98 1 69 1 208 1 70 1 71 1 167 1 36 1 8 1 121 1 
124 2 126 1 3 2 42 1 219 1 44 1 104 1 263 1 265 1 153 2 135 1 268 4 367 2 30 1 183 1 108 1 329 2 57 1 141 1 116 1 37 2 233 1 237 1 40 1 
301 1 7 1 178 1 69 1 330 1 208 1 87 1 291 1 
69 5 371 1 330 5 161 2 208 5 87 4 186 1 375 1 7 4 169 1 36 1 80 1 298 1 94 1 
41 1 7 2 178 1 69 2 330 2 208 2 87 2 291 1 
341 1 79 1 49 1 
232 1 63 1 79 2 110 1 348 1 49 2 
79 1 49 1 
79 1 49 1 
63 1 348 1 
63 1 348 1 
63 1 348 1 
79 1 59 1 49 1 
79 1 59 1 49 1 
79 1 59 1 49 1 
109 1 79 1 49 1 
109 1 79 1 49 1 
109 1 79 1 49 1 
192 2 150 2 82 3 239 1 84 1 45 1 290 2 99 2 353 1 49 2 113 1 232 1 133 2 76 1 177 2 79 2 234 1 20 2 170 1 
192 1 359 1 150 1 82 1 128 1 318 1 304 1 129 1 69 2 330 2 208 2 99 1 87 2 49 1 341 1 200 1 322 1 133 1 177 1 7 2 79 1 36 1 170 1 20 1 
43 1 139 2 211 2 111 1 335 1 
272 1 211 1 335 1 
272 1 43 1 211 1 
43 1 139 1 211 3 111 1 118 1 335 2 
43 1 139 1 211 2 111 1 326 1 335 1 
192 5 313 1 359 1 238 1 97 1 195 1 318 1 68 1 44 1 364 1 175 3 342 3 133 5 324 4 345 1 154 1 226 1 304 1 160 1 57 1 328 2 372 2 88 2 141 1 353 2 374 2 62 1 116 1 278 1 119 1 93 1 23 1 
191 1 192 6 41 1 238 1 194 1 195 1 44 1 101 3 342 3 345 1 7 1 246 1 160 1 57 1 208 1 353 3 62 1 116 1 169 1 21 3 23 1 313 1 359 2 257 1 69 1 68 4 319 1 364 1 175 3 133 6 324 5 178 1 226 1 368 1 330 1 87 1 88 2 372 2 141 1 374 2 278 1 93 1 
192 3 313 1 359 1 195 1 44 1 174 1 364 1 342 3 175 4 133 3 324 2 345 1 154 1 226 1 160 1 57 1 328 1 88 2 372 2 141 1 353 3 374 2 116 1 278 1 119 1 23 2 
192 4 313 1 359 2 195 1 44 2 174 1 262 1 364 1 175 7 342 5 133 4 345 1 324 3 154 1 226 1 300 1 160 1 57 2 328 2 352 1 372 4 88 4 141 2 353 4 374 4 116 2 278 2 119 1 23 3 
72 1 
283 1 377 1 334 1 
283 1 309 1 
283 1 70 1 
283 3 377 2 193 1 156 1 70 1 71 1 
283 1 70 1 71 1 
283 1 280 1 
108 3 126 2 230 2 24 1 360 1 329 4 351 1 220 1 207 1 141 1 252 1 244 1 116 1 268 7 347 1 367 3 120 1 81 1 
126 5 24 2 360 1 44 3 220 2 25 1 365 1 263 1 75 1 265 1 244 1 266 1 268 31 53 1 54 1 347 1 367 15 180 1 81 2 108 10 230 3 329 16 57 3 351 5 207 1 248 4 141 4 252 2 278 3 116 4 37 2 236 3 237 1 40 1 
311 1 108 4 126 3 230 2 24 1 360 1 329 5 351 1 220 1 207 1 141 1 252 1 143 1 263 2 265 2 116 1 54 1 268 9 37 4 347 1 367 4 237 2 81 1 40 2 
108 3 126 2 230 2 24 1 329 4 360 1 351 1 220 1 207 1 141 1 252 1 244 1 116 1 268 7 347 1 367 3 81 1 
108 3 126 2 230 2 24 1 329 4 360 1 351 1 220 1 207 1 141 1 252 1 244 1 116 1 268 7 347 1 367 3 81 1 
283 1 31 1 2 1 314 1 32 1 247 1 205 2 302 1 172 2 70 1 197 1 363 1 250 1 165 1 306 2 343 1 167 1 115 1 378 1 134 2 8 1 380 1 310 1 
314 1 2 1 285 1 172 1 43 1 243 1 343 1 77 1 134 1 8 1 269 1 31 1 32 1 247 1 302 1 205 1 272 1 354 1 306 1 376 1 378 1 210 1 211 2 118 1 335 1 279 1 
314 1 2 2 285 1 172 1 43 1 151 1 243 1 131 1 343 2 77 1 78 1 134 1 8 1 10 1 269 1 229 1 31 1 32 1 247 1 302 1 205 1 272 1 354 1 306 1 376 1 378 1 210 1 211 2 118 1 335 1 
314 1 2 3 172 1 43 1 288 1 151 1 243 1 131 1 343 3 77 1 78 1 134 1 8 1 10 2 269 1 31 1 32 1 247 1 302 1 205 1 272 1 354 1 306 1 376 1 378 1 211 2 118 1 335 1 279 1 310 1 
314 1 2 2 172 1 43 1 288 1 151 1 243 1 131 1 343 2 77 1 78 1 134 1 8 1 10 2 269 1 31 1 32 1 247 1 205 1 272 1 306 1 211 2 118 1 335 1 279 1 
105 1 
192 5 283 1 238 3 195 1 289 1 100 1 342 2 6 1 8 1 155 1 296 1 204 1 349 2 299 1 247 1 301 1 14 1 160 1 208 1 209 1 353 2 62 1 114 2 167 2 168 1 115 1 64 1 22 2 23 2 356 1 122 2 123 1 313 1 314 2 66 1 68 6 69 1 70 1 364 1 175 2 133 5 178 1 226 1 31 2 32 2 371 1 330 1 88 2 332 1 187 4 188 2 39 1 380 1 148 2 338 2 
192 3 238 1 349 1 299 1 301 1 14 1 66 1 68 2 69 1 371 1 330 1 208 1 100 1 133 3 6 1 332 1 168 1 178 1 187 2 155 1 179 1 356 1 
192 3 238 1 195 1 66 1 68 1 69 1 100 1 6 1 133 3 178 1 155 1 179 1 299 1 301 1 14 1 330 1 371 1 208 1 353 1 332 1 168 1 187 3 356 1 148 1 
192 3 238 1 195 1 66 1 69 1 68 2 100 1 6 1 133 3 178 1 155 1 179 1 299 1 349 1 301 1 14 1 330 1 371 1 208 1 353 1 332 1 168 1 187 3 356 1 148 1 338 1 
192 5 238 3 317 1 195 5 66 1 68 7 69 1 100 1 242 1 364 1 342 1 133 5 6 1 178 1 155 1 296 1 179 1 226 1 184 1 299 1 349 4 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 5 62 1 332 1 114 2 168 1 64 1 187 6 188 2 22 2 23 2 235 1 356 1 122 2 148 4 256 1 338 4 
192 4 238 2 195 1 289 1 100 1 342 1 6 1 155 1 296 1 299 1 349 2 301 1 14 1 160 1 208 1 353 2 62 1 168 1 114 2 64 1 22 2 23 2 356 1 122 2 66 1 69 1 68 4 364 1 175 2 133 4 178 1 226 1 330 1 371 1 88 1 332 1 187 4 188 2 148 2 338 2 
192 4 238 2 317 1 195 1 66 1 68 4 69 1 100 1 242 1 364 1 342 1 6 1 133 4 178 1 155 1 296 1 226 1 349 2 184 1 299 1 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 1 332 1 62 1 114 2 168 1 64 1 187 4 188 2 22 2 23 2 356 1 148 2 122 2 338 2 
192 4 238 2 317 1 195 1 66 1 68 4 69 1 100 1 242 1 364 1 342 1 6 1 133 4 178 1 155 1 296 1 226 1 349 2 184 1 299 1 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 1 332 1 62 1 114 2 168 1 64 1 187 4 188 2 22 2 23 2 356 1 148 2 122 2 338 2 
0 2 192 4 238 2 195 1 66 1 68 4 69 1 320 1 100 1 223 1 364 1 321 2 175 2 342 1 6 1 133 4 178 1 155 1 226 1 349 2 184 1 299 1 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 1 332 1 62 1 168 1 64 1 92 1 187 4 188 2 22 2 356 1 148 2 338 2 
192 4 238 2 317 1 195 1 66 1 69 1 68 5 100 1 242 1 364 1 342 1 6 1 133 4 178 1 155 1 296 1 226 1 184 1 299 1 349 3 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 1 62 1 332 1 114 2 168 1 64 1 187 5 188 2 22 2 23 2 356 1 122 2 148 3 256 1 338 3 
192 4 238 2 317 1 195 1 66 1 69 1 68 5 100 1 242 1 364 1 342 1 6 1 133 4 178 1 155 1 296 1 226 1 184 1 299 1 349 3 301 1 14 1 160 1 330 1 371 1 208 1 88 1 353 1 62 1 332 1 114 2 168 1 64 1 187 5 188 2 22 2 23 2 356 1 122 2 148 3 256 1 338 3 
192 4 0 2 238 2 195 1 289 1 100 1 342 1 6 1 155 1 299 1 349 2 301 1 14 1 160 1 208 1 353 1 62 1 168 1 64 1 22 2 356 1 66 1 69 1 68 4 364 1 321 2 175 2 133 4 178 1 226 1 330 1 371 1 88 1 332 1 92 1 187 4 188 2 148 2 338 2 
283 3 314 8 69 1 219 2 261 1 70 2 26 1 27 1 74 1 5 1 104 1 263 2 265 2 7 1 9 1 8 2 268 2 366 1 367 1 203 2 229 1 31 8 32 7 247 2 329 1 330 1 208 1 161 1 87 1 167 2 333 1 115 1 37 4 189 1 233 2 279 1 237 2 380 1 40 2 
124 1 126 1 3 1 69 1 219 1 44 1 263 1 265 1 153 1 7 1 268 3 367 2 56 1 108 1 329 1 57 1 330 1 208 1 87 1 141 1 169 1 278 1 116 1 37 2 233 1 146 1 94 1 237 1 40 1 
124 1 126 2 3 1 360 1 219 1 220 1 104 1 263 1 265 1 153 1 268 6 347 1 367 3 108 2 230 1 329 3 207 1 141 1 252 1 334 1 116 1 36 2 37 2 233 1 237 1 40 1 
124 4 126 1 125 1 3 11 219 2 44 2 365 1 263 2 28 1 265 2 153 11 266 1 268 14 202 1 367 6 108 2 329 8 57 1 351 1 248 3 141 2 166 1 333 1 278 2 116 1 36 1 189 1 37 4 233 1 146 1 236 3 237 2 40 2 
124 1 67 1 69 1 329 1 219 1 339 1 330 1 161 1 208 1 87 1 263 1 265 1 333 1 7 1 268 1 37 2 80 1 146 1 233 1 237 1 40 1 
283 2 3 7 241 2 44 2 7 1 153 7 8 2 347 1 297 2 158 2 108 8 247 2 57 2 351 4 207 1 161 1 208 3 162 2 252 1 167 1 308 2 116 3 124 7 314 3 126 4 315 2 69 3 360 1 219 3 220 1 70 2 71 2 263 3 265 3 80 1 268 20 367 10 181 1 137 2 31 3 32 3 230 1 273 1 329 10 330 1 87 1 331 2 141 3 333 1 278 2 36 2 189 1 37 6 146 1 233 3 279 1 336 1 237 3 40 3 
124 1 183 1 108 1 3 1 219 1 329 2 351 1 44 1 141 1 104 1 263 1 265 1 153 1 268 2 37 2 233 1 237 1 40 1 
124 1 108 1 126 1 3 1 42 1 219 1 57 1 104 1 263 1 265 1 153 1 116 1 268 2 37 2 233 1 367 2 237 1 40 1 
124 2 126 1 3 2 219 1 44 1 104 1 263 1 265 1 153 2 268 4 367 2 108 2 329 2 57 1 351 1 141 1 278 1 116 1 37 2 233 1 237 1 40 1 
124 1 183 1 108 1 3 1 219 1 329 2 351 1 44 1 261 1 141 1 263 1 265 1 153 1 268 2 37 2 233 1 237 1 40 1 
124 1 108 1 126 1 3 1 42 1 219 1 57 1 261 1 263 1 265 1 153 1 116 1 268 2 37 2 233 1 367 2 237 1 40 1 
124 2 126 1 3 2 219 1 44 1 261 1 263 1 265 1 153 2 268 4 367 2 108 2 329 2 57 1 351 1 141 1 278 1 116 1 37 2 233 1 237 1 40 1 
124 2 126 1 3 2 219 1 44 1 263 1 265 1 153 2 268 4 367 2 108 2 329 2 57 1 351 1 141 1 278 1 116 1 37 2 233 1 237 1 40 1 
283 1 314 1 69 1 241 1 219 1 70 1 71 1 263 1 265 1 8 1 268 2 297 1 367 1 31 1 158 1 32 1 247 1 329 1 208 1 331 1 167 1 333 1 36 1 37 2 189 1 233 1 237 1 40 1 
283 1 314 1 98 1 69 1 219 1 70 1 71 1 263 1 265 1 8 1 268 2 367 1 31 1 158 1 32 1 247 1 329 1 208 1 167 1 333 1 36 1 37 2 189 1 233 1 121 1 237 1 357 1 40 1 
124 2 126 1 3 2 219 1 44 1 263 1 265 1 153 2 268 4 367 2 108 2 329 2 57 1 351 1 141 1 278 1 116 1 37 2 233 1 146 1 237 1 40 1 
124 2 283 1 314 1 126 1 3 2 315 1 69 1 241 1 219 1 44 1 70 1 71 1 263 1 265 1 153 2 8 1 268 4 367 2 297 1 229 1 31 1 158 1 108 2 32 1 247 1 57 1 329 2 351 1 208 1 141 1 331 1 116 1 278 1 37 2 233 1 237 1 40 1 
124 1 3 1 69 1 219 1 44 1 263 1 265 1 7 1 153 1 268 3 367 1 108 1 57 1 329 2 351 1 330 1 208 1 87 1 141 1 116 1 169 1 278 1 37 2 233 1 146 1 19 1 94 1 237 1 40 1 
126 3 127 1 286 2 44 3 292 2 365 1 103 1 263 2 265 2 266 1 346 1 268 19 367 10 108 6 83 1 329 9 57 3 351 3 248 2 112 1 141 3 143 1 278 3 116 3 379 1 37 4 236 1 237 2 213 1 40 2 
126 2 127 2 149 1 286 4 44 3 198 1 292 1 103 2 365 2 263 3 225 1 265 3 245 1 54 2 268 26 136 1 367 12 108 4 83 1 329 14 57 2 351 2 112 1 248 2 141 3 143 1 276 1 116 2 278 3 37 6 236 2 237 3 213 1 40 3 
149 1 286 4 44 4 198 1 103 1 292 1 245 1 54 1 346 1 347 1 108 8 57 4 351 4 207 1 112 1 248 4 252 1 116 5 213 1 127 2 126 4 360 1 220 1 365 3 263 3 225 1 265 3 266 1 268 41 136 1 367 21 327 1 230 1 329 20 83 1 141 5 143 1 276 1 278 4 37 6 236 3 237 3 40 3 
149 1 126 4 127 2 286 4 360 1 44 4 220 1 198 1 292 1 365 3 103 1 263 4 225 1 265 4 266 1 245 1 346 1 54 2 268 38 136 1 347 1 367 18 327 1 108 7 230 1 83 1 329 20 57 3 351 3 207 1 248 4 112 1 141 5 252 1 143 1 276 1 278 4 116 4 37 8 236 3 237 4 213 1 40 4 
149 1 126 7 127 1 286 4 360 1 44 7 220 1 198 1 292 1 365 2 103 1 263 2 225 1 265 2 266 2 245 1 54 1 268 52 136 1 347 1 202 2 367 25 108 14 230 1 83 1 329 27 57 7 351 7 207 1 248 4 112 1 141 8 252 1 143 1 276 1 278 7 116 8 37 4 236 4 237 2 213 1 40 2 
232 1 150 1 239 1 303 1 177 1 79 1 20 1 45 1 99 1 49 1 
341 1 128 1 
150 1 177 1 79 1 145 1 20 1 4 1 46 1 99 1 49 1 
192 1 150 1 82 2 239 1 45 1 290 1 99 1 353 1 49 1 113 1 232 1 133 1 76 1 177 1 79 1 234 1 170 1 20 1 
192 1 150 1 82 2 239 1 45 1 290 1 99 1 353 1 49 1 113 1 232 1 133 1 76 1 177 1 79 1 234 1 170 1 20 1 
192 1 150 1 82 2 239 1 45 1 290 1 99 1 353 1 49 1 113 1 232 1 133 1 76 1 177 1 79 1 234 1 170 1 20 1 
176 1 59 1 110 1 
176 1 59 1 110 1 
109 1 251 1 
109 1 110 1 251 1 
200 1 322 1 
192 1 359 1 150 1 128 1 129 1 318 1 69 2 290 1 99 1 49 1 341 1 322 1 200 1 133 1 324 1 177 1 7 2 79 1 82 1 304 1 330 2 208 2 87 2 36 1 234 1 20 1 190 1 
176 1 59 1 
109 1 110 1 251 1 
283 1 314 2 69 2 219 1 70 1 26 1 27 1 263 1 293 1 265 1 8 1 268 2 367 1 203 2 157 1 31 2 32 2 247 1 329 1 330 2 208 2 60 1 333 1 37 2 189 1 233 1 146 1 282 1 237 1 255 1 40 1 
283 1 31 1 314 1 32 1 247 1 33 1 70 1 305 1 165 1 306 1 167 1 115 1 8 1 380 1 
31 1 314 1 32 1 33 1 247 1 272 1 43 1 89 1 243 1 354 1 306 1 211 2 8 1 295 1 118 1 269 1 335 1 279 1 
229 1 31 2 314 2 32 2 247 1 33 1 272 1 43 1 89 1 243 1 354 1 306 1 211 2 8 1 295 1 118 1 269 1 335 1 279 1 
31 1 314 1 32 1 247 1 272 1 43 1 73 1 89 1 243 1 354 1 306 1 211 2 8 1 118 1 269 1 335 1 279 1 
29 1 
195 1 160 1 47 1 88 1 364 1 353 1 253 1 342 1 62 1 226 1 
370 1 57 2 44 2 88 5 372 5 141 2 353 5 175 10 342 5 374 5 308 1 278 2 116 2 23 5 107 2 
192 1 133 1 238 1 195 1 68 1 353 1 
192 3 283 1 313 2 314 4 238 2 68 4 362 1 70 1 174 1 364 2 51 2 342 2 133 3 8 1 226 2 228 1 31 4 32 4 247 1 160 2 209 1 88 2 61 1 62 1 167 2 115 1 39 2 380 1 123 1 
342 1 253 1 195 1 334 1 88 1 47 1 353 1 
192 1 238 1 195 1 68 1 364 1 342 1 175 1 133 1 296 1 226 1 160 1 88 1 353 2 62 1 114 1 23 1 122 1 
192 5 283 10 238 3 193 1 195 2 44 2 47 1 152 1 51 1 342 9 8 4 11 2 107 2 247 3 14 2 160 4 57 2 353 8 253 1 355 1 62 4 167 1 308 2 309 3 116 2 23 6 254 2 313 2 314 3 216 2 68 5 70 3 71 3 364 4 175 12 133 5 226 4 228 1 270 2 229 1 31 3 32 3 185 1 370 2 274 2 372 6 88 8 141 2 373 2 374 6 377 2 278 2 39 1 280 2 
192 1 313 1 238 1 149 1 195 2 68 1 44 2 198 1 364 2 365 1 175 6 342 8 133 1 225 1 245 1 136 1 226 2 107 2 160 2 370 1 57 2 372 5 88 5 248 1 141 2 353 5 374 5 62 2 16 1 278 2 116 2 39 1 23 3 236 1 212 1 
192 1 41 1 257 1 317 1 194 1 69 1 220 1 364 1 342 2 133 1 7 1 178 1 347 1 226 1 107 2 246 1 160 1 370 1 330 1 208 1 88 2 87 1 141 2 252 1 62 1 116 1 169 1 18 1 
283 1 314 1 257 1 69 3 241 1 219 1 70 1 340 1 71 1 263 1 265 1 7 2 8 1 268 1 367 1 297 1 31 1 158 1 32 1 247 1 330 2 208 3 87 2 331 1 167 1 169 2 36 1 189 1 37 2 233 1 237 1 40 1 
313 1 230 1 195 2 160 1 372 2 88 2 364 1 353 4 175 4 342 1 374 2 62 1 39 1 23 2 226 1 
200 1 177 1 45 1 86 1 99 1 
91 1 177 1 99 1 
91 1 177 1 99 1 
91 1 177 1 99 1 
182 1 177 1 99 1 
182 1 177 1 99 1 
182 1 177 1 99 1 
177 1 99 1 
79 1 49 1 
126 3 108 5 329 5 351 2 220 2 141 2 252 2 263 1 143 1 265 1 116 2 37 2 18 1 268 10 347 1 367 5 237 1 40 1 
108 1 329 2 44 1 351 1 141 1 143 1 263 1 265 1 37 2 268 2 237 1 40 1 
126 1 108 2 57 1 329 2 44 1 351 1 141 1 143 1 263 1 265 1 116 1 278 1 37 2 268 4 367 2 237 1 40 1 
126 1 108 2 329 1 351 1 220 1 252 1 143 1 263 3 265 3 54 1 346 1 268 3 37 6 38 1 367 2 237 3 40 3 
1 1 126 7 360 1 44 3 220 3 25 1 365 1 263 5 265 5 266 1 54 2 53 1 346 1 268 34 347 2 367 18 180 1 108 12 230 1 329 16 57 3 351 5 207 1 248 4 141 5 252 3 143 1 278 3 116 5 37 10 38 1 236 3 237 5 40 5 
108 3 126 2 230 1 329 4 360 1 351 1 207 1 220 1 141 1 252 1 263 2 265 2 116 1 268 8 37 4 54 1 347 1 367 4 237 2 40 2 
126 2 108 2 230 1 360 1 329 3 207 1 220 1 141 1 252 1 334 1 116 1 268 6 347 1 367 3 
1 1 126 1 108 2 57 1 329 2 44 1 351 1 141 1 263 1 265 1 116 1 278 1 37 2 268 4 367 2 237 1 40 1 
126 1 108 2 57 1 329 3 44 1 351 1 248 2 141 1 365 1 266 1 116 1 278 1 268 7 367 4 236 1 
126 5 360 1 44 2 220 2 263 2 28 1 265 2 266 1 268 23 54 2 347 1 367 12 202 1 108 9 230 1 329 11 57 2 351 4 207 1 141 3 248 2 252 2 278 2 116 3 37 4 38 1 236 2 237 2 40 2 
268 1 367 1 248 1 
268 1 329 1 236 1 
1 1 108 3 126 2 329 3 57 1 44 1 351 1 141 1 263 1 265 1 308 1 278 1 116 1 37 2 268 6 367 3 237 1 40 1 
149 1 126 1 44 2 198 1 365 1 263 1 225 1 265 1 245 1 268 12 136 1 367 6 108 2 329 6 57 2 351 1 248 1 141 2 143 1 278 2 116 2 37 2 236 1 237 1 40 1 
126 1 108 2 329 3 351 1 220 1 141 1 252 1 116 1 268 6 347 1 367 3 
108 2 126 1 329 1 360 1 351 1 220 1 207 1 252 1 263 1 265 1 268 3 54 1 37 2 38 1 367 2 237 1 40 1 
149 1 126 2 360 1 220 1 365 1 263 1 265 1 268 8 347 1 367 4 108 2 230 1 329 4 207 1 141 1 248 1 252 1 143 1 116 1 37 2 236 1 237 1 40 1 
1 1 126 2 149 1 360 1 44 1 220 1 365 1 263 2 265 2 266 1 268 11 347 1 367 5 108 3 230 1 329 6 351 1 207 1 248 2 141 2 252 1 143 1 116 1 278 1 37 4 236 1 237 2 40 2 
1 1 149 1 126 3 360 1 44 2 220 1 198 1 365 1 263 3 225 1 265 3 245 1 268 19 54 1 136 1 347 1 367 10 108 4 230 1 329 9 57 2 351 1 207 1 248 1 141 3 252 1 143 1 278 2 116 3 37 6 236 1 237 3 40 3 
1 1 149 1 126 3 360 1 44 2 220 1 198 1 365 1 263 3 225 1 265 3 245 1 54 1 268 17 136 1 347 1 367 7 108 5 230 1 329 10 57 1 351 2 207 1 248 1 141 3 252 1 143 1 278 2 116 2 37 6 236 1 237 3 40 3 
149 1 126 2 360 1 220 1 365 1 263 1 265 1 268 8 347 1 367 4 108 2 230 1 329 4 207 1 141 1 248 1 252 1 143 1 116 1 37 2 236 1 237 1 40 1 
149 1 126 1 44 2 198 1 365 1 263 1 225 1 265 1 245 1 268 12 136 1 367 6 108 2 329 6 57 2 351 1 248 1 141 2 143 1 278 2 116 2 37 2 236 1 237 1 40 1 
1 1 149 1 126 3 360 1 44 2 220 1 198 1 365 1 263 4 225 1 265 4 245 1 268 18 54 2 136 1 347 1 367 8 108 5 230 1 329 10 57 1 351 2 207 1 248 1 141 3 252 1 143 1 278 2 116 2 37 8 236 1 237 4 40 4 
149 1 126 3 44 3 198 1 365 1 263 4 225 1 265 4 245 1 268 16 346 1 54 2 136 1 367 7 108 6 329 9 57 2 351 3 248 1 141 3 143 1 278 3 116 2 37 8 236 1 237 4 40 4 
126 3 108 6 360 2 329 3 351 3 207 1 220 3 141 1 252 3 116 1 268 7 347 1 367 4 
149 1 126 3 360 1 44 2 220 1 198 1 365 1 263 4 225 1 265 4 245 1 268 18 346 1 54 2 136 1 347 1 367 8 108 4 230 1 329 10 57 1 351 1 207 1 248 1 141 3 252 1 143 1 278 2 116 2 37 8 236 1 237 4 40 4 
375 1 13 1 36 1 69 1 330 1 371 1 208 1 
284 1 13 1 69 1 371 1 330 1 208 1 140 1 132 1 375 1 36 1 12 1 55 1 
229 1 31 4 283 1 314 4 32 4 247 1 215 1 70 1 144 1 167 1 115 1 8 1 380 1 
31 2 283 1 314 2 32 2 247 1 70 1 34 1 71 1 142 1 51 1 275 1 50 1 8 2 336 1 
31 1 314 1 32 1 247 1 167 1 272 1 43 1 211 1 8 1 269 1 
229 1 31 2 157 1 283 1 314 2 32 2 247 1 70 1 27 1 8 1 279 1 
229 1 31 5 283 3 314 5 32 4 247 2 215 1 70 2 27 1 5 1 51 1 167 1 115 1 8 2 9 1 380 1 
229 1 31 5 283 3 314 5 32 4 247 2 215 1 70 2 27 1 51 1 35 1 167 1 115 1 8 2 9 1 380 1 
283 1 31 1 314 1 32 1 247 1 167 1 115 1 334 1 8 1 70 1 380 1 
283 1 31 1 158 1 314 1 32 1 247 1 69 2 330 1 70 1 161 1 208 2 71 1 87 1 331 1 167 1 7 1 36 1 8 1 
283 3 314 1 69 2 70 2 71 2 51 1 7 2 178 1 8 1 155 1 11 1 31 1 158 1 32 1 247 1 301 1 330 2 208 2 161 1 87 1 331 1 36 1 280 1 
283 3 314 2 98 1 69 2 70 2 71 2 51 1 7 2 178 1 8 1 155 1 11 1 31 2 158 1 32 2 247 1 301 1 330 2 208 2 161 1 87 1 144 1 36 1 280 1 
192 2 31 3 283 4 314 3 32 3 316 1 247 1 195 1 14 1 68 1 70 1 71 1 353 1 51 1 133 2 144 1 167 1 377 1 309 1 8 1 280 1 11 1 171 1 
192 2 31 3 283 4 314 3 32 3 247 1 195 1 14 1 68 1 70 1 71 1 353 1 51 1 133 2 144 1 167 1 377 1 309 1 8 1 280 1 11 1 270 1 
31 1 314 1 32 1 247 1 8 1 366 1 
229 1 31 7 283 3 314 7 32 6 193 1 247 2 70 2 71 1 27 1 74 1 163 1 5 1 275 1 50 1 167 2 9 1 8 3 366 1 279 1 203 1 
124 1 283 1 314 1 126 2 3 1 315 1 69 2 360 1 219 2 241 1 220 1 70 1 71 1 263 2 265 2 153 1 7 1 8 1 268 6 347 1 367 3 297 1 137 1 229 1 31 1 158 1 108 2 32 1 247 1 230 1 329 3 330 1 207 1 208 2 161 1 60 1 87 1 141 1 331 1 252 1 116 1 36 2 37 4 233 2 146 1 237 2 40 2 
192 3 283 2 314 1 238 1 195 1 68 2 47 1 364 2 342 1 133 3 324 1 226 2 228 1 270 1 31 1 32 1 14 1 160 2 274 1 88 1 353 1 373 1 253 1 62 2 167 1 377 1 309 1 254 1 
229 1 31 2 283 2 314 2 32 2 193 1 247 1 70 1 152 1 71 1 377 1 8 2 366 1 
283 1 31 1 158 1 314 1 32 1 247 1 98 1 69 2 330 1 70 1 161 1 208 2 71 1 87 1 167 1 7 1 36 1 8 1 
31 1 283 1 314 1 32 1 193 1 247 1 70 1 71 1 163 1 275 1 51 1 50 1 8 2 
217 1 260 1 69 1 330 1 208 1 307 1 293 1 282 1 255 1 
307 1 201 1 271 1 
307 1 260 1 217 1 36 1 240 1 
192 2 369 1 301 1 195 1 14 1 271 1 217 2 260 2 240 2 353 1 307 1 133 2 201 1 6 1 324 1 178 1 36 1 155 1 281 1 
131 1 2 1 343 1 78 1 378 1 302 1 210 1 151 1 
2 4 214 1 138 1 302 1 218 1 151 3 221 1 249 1 224 1 131 2 343 4 78 2 378 1 10 2 
2 2 95 1 302 1 173 1 151 1 85 1 131 1 343 2 78 1 210 1 378 1 10 1 
2 3 214 2 302 1 151 1 221 1 249 2 131 1 343 3 210 1 378 1 78 1 147 1 
15 2 17 1 151 2 227 1 
2 1 343 1 350 1 378 1 302 1 210 1 
131 1 2 2 343 2 323 1 78 1 378 1 302 1 210 1 10 1 151 1 
52 1 
131 1 2 1 343 1 78 1 378 1 302 1 210 1 151 1 
131 1 78 1 334 1 151 1 
131 1 2 1 343 1 78 1 378 1 302 1 151 1 
2 1 205 1 134 1 
2 3 214 2 302 1 151 1 221 1 249 1 231 1 131 1 343 3 210 1 378 1 78 1 
131 1 199 1 2 2 343 2 78 1 378 1 302 1 10 1 151 1 
2 1 138 1 302 1 272 1 151 1 343 1 210 1 378 1 211 1 106 1 335 1 
2 1 343 1 78 1 378 1 302 1 210 1 151 1 
131 1 2 1 343 1 78 2 378 1 302 1 210 1 
2 2 302 2 151 1 222 1 90 1 343 2 264 1 78 1 210 1 378 2 
2 3 138 1 302 1 151 2 224 1 131 1 343 3 323 1 78 1 210 1 378 1 10 2 358 1 
2 2 302 1 43 1 272 1 151 1 48 1 131 1 343 2 78 1 210 1 378 1 211 2 118 1 10 1 335 1 
2 4 138 1 302 2 196 1 151 2 224 1 131 1 199 1 343 4 78 1 210 1 378 2 10 2 
131 1 2 3 343 3 323 1 214 1 78 1 378 1 302 1 210 1 10 1 151 1 
138 1 218 1 151 1 224 1 
78 1 151 1 

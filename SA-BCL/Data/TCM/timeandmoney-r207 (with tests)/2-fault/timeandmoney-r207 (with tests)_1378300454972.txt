#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 225 98 313 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
326 2 195 1 1 1 308 1 327 1 7 3 128 1 152 1 292 1 227 2 153 1 311 2 203 1 10 2 230 1 297 1 279 1 232 1 316 4 236 2 234 6 90 2 343 1 61 9 95 1 266 5 217 9 378 2 
326 2 195 1 1 1 308 1 327 1 7 3 128 1 152 1 292 1 227 2 153 1 311 2 203 1 10 2 230 1 297 1 279 1 232 1 316 4 236 2 234 6 90 2 343 1 61 9 95 1 266 5 217 9 378 2 
326 2 195 1 1 1 308 1 327 1 7 4 128 1 152 1 292 1 227 2 153 1 311 2 203 1 10 2 230 1 297 1 279 1 232 1 316 5 236 2 234 7 90 2 343 1 61 10 95 1 266 6 217 10 378 2 
326 1 195 1 1 1 308 1 327 1 7 2 128 1 152 1 292 1 227 2 153 1 311 2 203 1 10 2 230 1 297 1 232 1 316 3 236 2 234 4 90 2 343 1 61 7 95 1 266 4 217 7 378 2 
279 1 326 2 1 1 316 2 327 1 236 1 234 3 7 1 128 1 90 1 343 1 61 4 292 1 227 1 10 1 266 3 217 4 378 1 
37 1 1 1 236 1 128 1 90 1 310 1 95 1 61 2 189 1 292 1 227 1 311 1 266 1 217 2 378 1 230 1 
1 1 316 1 236 2 234 1 7 1 128 1 90 2 61 3 292 1 203 1 311 1 266 2 217 3 
326 2 1 1 327 1 7 3 128 1 292 1 153 1 227 1 311 1 203 1 10 1 297 1 279 1 316 4 234 7 236 2 182 1 90 2 185 1 343 1 61 9 266 5 217 9 378 1 
326 2 1 1 327 1 7 3 128 1 292 1 153 1 227 1 311 1 203 1 10 1 297 1 279 1 316 4 234 7 236 2 182 1 90 2 185 1 343 1 61 9 266 5 217 9 378 1 
72 1 73 1 246 1 
245 2 335 1 246 1 
124 1 186 2 125 2 344 1 117 2 263 2 312 2 340 2 
268 1 124 1 288 1 197 2 289 1 271 1 125 2 352 1 290 1 174 1 27 1 329 1 29 1 177 1 132 1 312 2 229 1 205 1 366 1 299 1 231 1 85 2 340 2 183 1 372 1 164 2 242 1 186 2 344 1 117 3 262 2 22 1 119 1 263 3 264 1 167 1 193 2 
124 1 113 1 186 1 202 1 125 1 117 1 263 1 293 1 312 1 340 1 
253 1 136 1 246 1 240 1 256 1 73 1 186 1 117 1 324 1 74 1 263 1 293 1 99 1 346 1 
253 1 136 2 125 1 246 1 340 1 256 2 240 1 73 1 186 1 117 1 263 1 293 1 312 1 99 1 346 1 
256 1 136 1 337 1 41 1 133 1 
256 2 73 1 109 1 136 2 337 1 246 1 41 1 48 1 
256 1 136 1 337 1 
113 1 124 1 136 1 125 1 180 1 340 1 256 1 186 1 202 1 117 1 41 1 263 1 293 1 312 1 
246 1 
256 2 9 1 73 1 109 1 136 2 337 1 246 1 41 1 
78 1 136 5 337 2 246 1 181 2 199 1 353 1 224 2 256 5 49 1 60 1 302 1 73 1 109 1 142 1 41 2 215 1 34 1 146 2 
205 1 299 1 231 1 197 1 271 1 290 1 340 1 183 1 27 1 29 1 201 1 260 1 186 1 243 1 117 2 262 1 264 1 263 2 312 1 193 1 
72 1 344 1 
125 1 173 1 340 1 341 1 186 2 117 2 344 2 263 2 312 1 
243 1 351 1 362 1 
205 1 299 1 197 1 231 1 271 1 290 1 183 1 27 1 282 1 29 1 344 1 117 1 262 1 263 1 264 1 193 1 
365 1 280 1 125 1 173 1 340 4 260 2 186 5 201 1 117 5 344 1 74 1 263 5 130 1 312 4 
186 2 202 1 318 1 117 2 263 2 293 1 312 2 340 2 
260 1 186 3 125 1 344 1 117 3 263 3 312 3 340 3 
186 1 202 1 117 1 263 1 293 1 312 1 340 1 
186 1 125 1 117 1 263 1 293 1 173 1 312 1 340 1 341 1 
124 1 221 1 197 1 289 1 271 1 125 2 352 1 173 1 290 1 174 1 27 1 329 1 29 1 177 1 201 1 132 1 293 1 312 3 205 1 253 1 366 1 299 1 231 1 136 1 85 2 340 3 183 1 240 1 256 1 164 1 242 1 186 3 260 1 344 1 117 4 262 1 119 1 264 1 263 4 42 1 167 1 193 1 99 1 346 1 
365 1 186 2 260 1 344 1 117 2 74 1 263 2 312 1 340 1 
253 1 101 1 221 1 136 1 125 1 246 1 173 1 340 3 256 1 240 1 201 1 260 2 186 3 117 3 263 3 293 1 312 3 99 1 346 1 
125 1 173 1 340 2 260 1 186 2 243 1 117 2 263 2 362 1 312 2 
205 1 299 1 197 1 231 1 271 1 290 1 183 1 27 1 29 1 344 1 117 1 262 1 263 1 264 1 193 1 
364 1 205 1 299 1 197 1 231 1 271 1 350 1 290 1 183 1 29 1 344 1 117 1 262 1 263 1 193 1 
46 1 289 1 3 1 351 2 172 1 352 1 6 1 358 1 177 1 276 1 132 1 362 2 134 1 82 1 301 1 85 2 164 4 242 2 243 2 323 1 22 2 119 1 167 1 377 1 
240 1 186 1 117 1 318 1 263 1 293 1 312 1 340 1 
259 1 328 1 
259 1 328 1 
106 1 54 1 
106 1 54 1 
106 1 54 1 
342 1 259 1 328 1 
342 1 259 1 328 1 
259 1 110 1 328 1 
106 1 81 1 259 2 86 1 54 1 328 2 
342 1 259 1 328 1 
214 1 259 1 328 1 
214 1 259 1 328 1 
214 1 259 1 328 1 
0 1 65 1 67 1 47 1 328 1 330 1 151 1 309 1 291 1 110 1 312 2 79 1 136 1 368 1 340 2 139 1 256 1 371 1 259 1 186 2 344 1 117 2 263 2 144 1 
0 2 81 1 136 2 4 1 246 1 208 1 239 1 328 2 139 2 256 2 330 1 291 2 371 2 283 1 107 1 162 2 259 2 191 1 144 3 
227 1 10 1 378 1 
37 1 227 1 378 1 
59 1 37 1 187 1 227 3 10 2 369 1 
59 1 37 1 227 2 375 1 10 1 369 1 
59 2 37 1 227 2 10 1 369 1 
245 3 65 1 46 1 246 2 172 1 353 2 6 1 275 1 150 2 224 1 151 1 355 1 109 1 73 1 129 1 34 3 78 1 157 1 79 1 335 1 80 1 136 5 337 1 301 1 181 1 281 1 213 2 256 5 303 2 41 4 20 1 146 1 
245 9 46 3 246 5 172 3 223 1 353 6 6 3 150 6 224 2 73 1 109 1 129 3 228 1 133 5 34 8 157 1 78 1 79 4 335 3 80 2 336 1 136 9 337 6 338 1 301 3 181 2 212 1 281 2 213 6 256 9 115 1 141 5 142 1 41 7 146 2 
245 4 124 1 46 1 125 1 246 3 172 1 6 1 353 2 224 1 150 2 355 1 73 1 202 1 129 1 293 1 312 1 34 3 113 1 79 1 335 2 80 1 136 3 301 1 180 1 181 1 340 1 281 1 256 3 213 2 186 1 117 1 142 1 303 1 41 2 20 1 263 1 146 1 
245 5 46 1 246 3 6 2 150 3 202 1 293 1 113 1 335 2 338 1 301 1 340 1 256 4 213 3 115 1 303 2 117 1 20 1 263 1 124 1 125 1 172 2 353 4 224 1 355 1 73 1 129 2 228 1 312 1 34 3 79 2 80 1 136 4 181 1 180 1 281 1 186 1 142 1 41 3 146 1 
72 1 271 1 166 1 
271 1 304 1 
160 1 
205 1 231 1 271 1 
359 1 271 1 
205 1 271 1 
205 1 231 1 271 3 166 2 192 1 238 1 
100 1 138 1 301 1 233 1 172 1 273 1 92 1 276 3 164 7 242 3 94 1 323 2 261 1 244 1 22 4 332 1 285 2 
100 1 138 1 301 1 233 1 172 1 273 1 92 1 276 3 164 7 242 3 94 1 323 2 261 1 244 1 22 4 332 1 285 2 
100 1 158 1 138 1 301 1 233 1 172 1 273 1 92 1 276 3 164 7 242 3 94 1 323 2 261 1 244 1 332 1 22 4 285 2 
100 2 169 1 46 3 289 1 171 1 273 2 172 4 6 3 177 1 276 10 129 3 332 1 132 1 179 1 252 1 38 1 138 1 301 4 233 1 85 2 235 1 15 4 89 3 92 1 93 1 164 31 242 15 94 2 261 2 323 5 22 16 244 5 167 1 285 3 
100 1 220 1 289 2 172 1 273 1 177 2 276 4 332 1 132 2 38 1 301 1 233 1 85 4 92 1 164 9 242 4 94 1 261 1 323 3 374 1 22 5 244 1 167 2 285 2 
26 1 66 1 1 1 197 1 128 1 292 1 227 2 311 1 10 1 334 1 37 1 315 1 299 1 83 1 234 1 236 1 183 1 184 1 90 1 257 1 187 1 61 2 262 1 97 1 21 1 266 1 193 1 217 2 378 1 120 1 
26 1 66 1 197 1 128 1 292 1 227 2 311 1 10 1 334 1 37 1 315 1 299 1 83 1 236 1 234 2 183 1 184 1 90 1 116 1 187 1 61 3 118 1 262 1 21 1 216 1 266 1 193 1 217 3 378 1 120 1 
26 1 66 1 197 1 128 1 292 1 227 2 311 1 10 1 37 1 299 1 83 1 234 2 183 1 184 1 187 1 61 2 118 1 262 1 21 1 216 1 266 1 193 1 217 2 120 1 378 1 
26 2 270 1 66 2 197 1 271 1 29 1 311 2 112 1 251 1 205 1 35 1 299 1 83 2 236 1 84 1 183 1 88 1 90 1 116 1 61 1 262 1 193 1 217 1 
26 1 66 1 1 1 197 1 227 2 311 1 10 1 334 1 37 1 315 1 299 1 83 1 236 1 183 1 184 1 90 1 187 1 61 1 118 1 262 1 97 1 21 1 193 1 217 1 378 1 120 1 
321 1 
44 2 245 2 197 2 198 1 246 2 109 3 293 1 295 2 55 1 205 1 253 1 335 2 299 1 337 6 161 2 14 1 211 2 58 1 256 5 17 1 19 2 117 1 262 2 263 1 267 1 346 1 307 4 271 1 353 2 224 1 225 1 29 2 73 1 74 1 34 2 314 2 78 1 135 2 35 1 136 5 181 1 319 1 88 1 183 1 281 1 240 1 322 1 140 1 186 1 324 1 193 2 99 1 379 1 145 1 146 1 
307 2 198 1 9 1 109 1 74 1 293 1 253 1 136 3 337 2 14 1 211 1 256 3 240 1 140 1 17 1 186 1 117 1 324 1 263 1 99 1 379 1 346 1 
307 3 198 1 246 1 9 1 73 1 109 1 74 1 293 1 314 1 253 1 136 3 337 1 14 1 256 3 240 1 140 1 17 1 186 1 117 1 324 1 263 1 99 1 379 1 346 1 
307 3 198 1 246 1 9 1 109 1 73 1 74 1 293 1 314 1 253 1 135 1 136 3 337 2 14 1 211 1 256 3 240 1 140 1 17 1 186 1 117 1 324 1 263 1 99 1 379 1 346 1 
44 2 198 1 246 5 9 1 109 3 293 1 295 2 253 1 335 2 337 7 161 2 14 1 211 4 256 5 17 1 19 2 117 1 263 1 346 1 307 6 353 1 224 1 225 1 175 1 73 5 74 1 363 1 34 1 314 4 78 1 135 4 136 5 181 1 319 1 240 1 140 1 186 1 324 1 325 1 284 1 98 1 99 1 379 1 146 1 
307 4 44 2 245 2 198 1 246 2 353 1 224 1 225 1 73 1 109 2 74 1 293 1 295 2 34 1 314 2 78 1 135 2 253 1 335 2 136 4 337 4 161 2 181 1 319 1 14 1 211 2 256 4 240 1 140 1 17 1 186 1 19 2 117 1 324 1 263 1 99 1 379 1 145 1 146 1 346 1 
307 4 44 2 198 1 246 1 353 1 224 1 225 1 73 1 109 2 74 1 293 1 295 2 34 1 314 2 78 1 135 2 253 1 335 2 136 4 337 4 161 2 181 1 319 1 14 1 211 2 256 4 240 1 140 1 17 1 186 1 19 2 117 1 324 1 263 1 325 1 284 1 98 1 99 1 379 1 346 1 146 1 
307 4 44 2 198 1 246 1 353 1 224 1 225 1 73 1 109 2 74 1 293 1 295 2 34 1 314 2 78 1 135 2 253 1 335 2 136 4 337 4 161 2 181 1 319 1 14 1 211 2 256 4 240 1 140 1 17 1 186 1 19 2 117 1 324 1 263 1 325 1 284 1 98 1 99 1 379 1 346 1 146 1 
307 2 194 1 198 1 353 1 224 1 225 1 74 1 293 1 295 1 313 1 34 1 78 1 253 1 136 2 181 1 14 1 256 2 240 1 140 1 17 1 186 1 19 1 117 1 324 1 263 1 98 1 99 1 379 1 346 1 347 1 146 1 
307 5 44 2 198 1 246 1 353 1 224 1 225 1 73 1 109 2 74 1 293 1 363 1 295 2 34 1 78 1 314 3 253 1 135 3 335 2 136 4 337 5 161 2 181 1 319 1 14 1 211 3 256 4 240 1 140 1 17 1 186 1 19 2 117 1 324 1 325 1 263 1 284 1 98 1 99 1 379 1 146 1 346 1 
307 5 44 2 198 1 246 1 353 1 224 1 225 1 73 1 109 2 74 1 293 1 363 1 295 2 34 1 78 1 314 3 253 1 135 3 335 2 136 4 337 5 161 2 181 1 319 1 14 1 211 3 256 4 240 1 140 1 17 1 186 1 19 2 117 1 324 1 325 1 263 1 284 1 98 1 99 1 379 1 146 1 346 1 
307 2 194 1 198 1 353 1 224 1 225 1 74 1 293 1 295 1 34 1 78 1 253 1 136 2 181 1 14 1 256 2 240 1 140 1 17 1 186 1 19 1 117 1 324 1 263 1 99 1 379 1 146 1 346 1 
100 1 289 1 3 1 351 1 273 1 172 1 352 1 72 1 177 1 276 2 332 1 132 1 362 1 301 1 233 1 85 2 92 1 164 6 242 3 243 1 323 2 344 2 119 1 22 3 167 1 285 1 
268 1 46 1 289 2 171 1 170 1 351 11 172 2 352 1 6 2 174 1 276 2 177 2 129 2 131 1 132 2 362 4 179 1 13 1 301 1 207 1 339 1 85 4 15 3 89 3 164 14 242 6 243 11 344 1 323 1 244 1 119 2 22 8 167 2 
268 1 197 1 68 1 271 1 289 1 352 1 290 1 174 1 27 1 127 1 29 1 249 1 177 1 201 1 132 1 362 1 312 1 205 1 299 1 231 1 339 1 85 2 340 1 183 1 282 1 164 2 186 1 260 1 242 1 344 1 117 2 262 1 264 1 119 1 263 2 22 1 193 1 167 1 
100 1 45 1 46 2 197 3 289 3 290 2 6 2 105 1 201 1 108 2 332 1 294 1 205 2 299 2 301 3 339 1 340 1 258 2 164 20 260 1 118 1 344 2 117 3 262 3 263 3 119 3 264 2 22 10 167 3 218 2 121 2 268 1 271 2 351 7 273 1 172 3 352 3 174 1 27 2 29 1 177 3 276 8 129 2 132 3 312 1 362 7 366 2 231 2 233 1 85 6 183 2 92 1 242 10 186 1 243 7 323 4 244 4 193 3 285 1 
268 1 197 8 287 1 271 3 289 2 3 1 147 1 352 2 174 1 29 2 50 1 177 2 132 2 312 1 205 2 35 1 299 2 209 1 85 4 340 1 255 1 183 2 88 1 91 1 257 1 372 2 164 2 186 1 260 1 242 1 118 1 117 1 262 8 263 1 119 2 22 1 193 7 167 2 168 1 
46 1 125 1 289 1 351 1 172 1 173 1 352 1 6 1 276 1 177 1 129 1 132 1 362 1 312 1 301 1 339 1 85 2 340 1 164 3 186 1 242 2 243 1 323 1 117 1 119 1 63 1 263 1 22 1 167 1 
134 1 289 1 3 1 351 1 85 2 172 1 352 1 6 1 276 1 177 1 164 2 243 1 244 1 119 1 22 2 132 1 362 1 167 1 
46 1 289 1 3 1 301 1 351 1 85 2 352 1 276 1 177 1 164 2 242 2 243 1 323 1 119 1 132 1 362 1 167 1 377 1 
46 1 289 1 3 1 351 2 172 1 352 1 6 1 177 1 276 2 129 1 132 1 362 2 301 1 85 2 164 4 242 2 243 2 323 1 22 2 119 1 244 1 167 1 
134 1 287 1 289 1 351 1 85 2 172 1 352 1 6 1 276 1 177 1 164 2 243 1 244 1 119 1 22 2 132 1 362 1 167 1 
46 1 287 1 289 1 301 1 351 1 85 2 352 1 276 1 177 1 164 2 242 2 243 1 323 1 119 1 132 1 362 1 167 1 377 1 
46 1 287 1 289 1 351 2 172 1 352 1 6 1 177 1 276 2 129 1 132 1 362 2 301 1 85 2 164 4 242 2 243 2 323 1 22 2 119 1 244 1 167 1 
46 1 289 1 351 2 172 1 352 1 6 1 177 1 276 2 129 1 132 1 362 2 301 1 85 2 164 4 242 2 243 2 323 1 22 2 119 1 244 1 167 1 
268 1 197 1 271 1 289 1 352 1 290 1 174 1 27 1 29 1 177 1 132 1 205 1 366 1 299 1 231 1 85 2 183 1 164 2 242 1 344 1 117 1 262 1 22 1 264 1 263 1 119 1 193 1 167 1 
268 1 197 1 271 1 289 1 350 1 352 1 290 1 174 1 29 1 177 1 132 1 204 1 205 1 364 1 299 1 231 1 85 2 183 1 164 2 242 1 344 1 117 1 262 1 22 1 263 1 119 1 193 1 167 1 
46 1 289 1 351 2 172 1 352 1 6 1 177 1 276 2 129 1 132 1 362 2 301 1 339 1 85 2 164 4 242 2 243 2 323 1 22 2 119 1 244 1 167 1 
46 1 197 1 271 1 289 1 351 2 172 1 352 1 6 1 290 1 27 1 276 2 177 1 108 1 129 1 132 1 362 2 205 1 366 1 299 1 231 1 301 1 85 2 183 1 257 1 164 4 242 2 243 2 323 1 117 1 262 1 244 1 22 2 264 1 263 1 119 1 193 1 167 1 
46 1 125 1 289 1 351 1 172 1 173 1 352 1 6 1 149 1 276 1 177 1 129 1 132 1 312 1 362 1 301 1 339 1 85 2 340 1 164 3 242 1 186 1 243 1 117 1 244 1 119 1 263 1 22 2 167 1 
25 1 219 1 46 3 289 2 70 1 171 1 172 3 6 3 356 2 357 1 177 2 276 6 331 1 129 3 154 1 132 2 53 1 179 1 301 3 85 4 15 2 89 1 164 19 242 10 323 3 374 1 22 9 244 3 43 2 167 2 
219 1 46 2 289 3 70 2 171 2 5 1 172 3 6 3 356 1 248 1 357 1 8 1 276 4 177 3 331 2 129 3 154 1 360 1 132 3 254 1 38 2 301 2 85 6 210 1 15 2 89 2 164 26 242 12 323 2 374 1 244 2 22 14 43 4 167 3 
100 1 46 4 286 1 289 3 5 1 6 4 248 1 8 1 331 2 154 1 332 1 254 1 301 5 210 1 15 4 164 41 22 20 167 3 25 1 219 1 70 1 171 3 172 5 273 1 356 1 357 1 276 8 177 3 129 4 360 1 132 3 179 1 38 1 233 1 85 6 89 3 92 1 242 21 323 4 374 1 244 4 43 4 285 1 
25 1 100 1 219 1 46 3 286 1 289 4 70 1 171 3 273 1 5 1 172 5 6 4 356 1 248 1 357 1 8 1 177 4 276 7 331 2 129 4 154 1 360 1 332 1 132 4 179 1 254 1 38 2 301 4 233 1 85 8 210 1 15 4 89 3 92 1 164 38 242 18 323 4 374 1 22 20 244 3 43 4 167 4 285 1 
100 1 219 1 46 7 289 2 70 1 171 2 273 1 5 1 172 8 6 7 356 1 248 1 357 1 8 1 177 2 276 14 331 1 129 7 154 1 360 1 332 1 132 2 179 2 254 1 38 1 13 2 301 8 233 1 85 4 210 1 15 4 89 4 92 1 164 52 242 25 323 7 374 1 22 27 244 7 43 4 167 2 285 1 
0 1 139 1 371 1 291 1 107 1 81 1 259 1 191 1 305 1 328 1 
110 1 47 1 
0 1 139 1 371 1 291 1 241 1 259 1 31 1 103 1 328 1 
342 1 39 1 
214 1 148 1 86 1 
0 1 81 1 136 1 4 1 246 1 208 1 239 1 328 1 330 1 256 1 139 1 291 1 371 1 107 1 162 1 259 1 191 1 144 2 
0 1 81 1 136 1 4 1 246 1 208 1 239 1 328 1 330 1 256 1 139 1 291 1 371 1 107 1 162 1 259 1 191 1 144 2 
0 1 81 1 136 1 4 1 246 1 208 1 239 1 328 1 330 1 256 1 139 1 291 1 371 1 107 1 162 1 259 1 191 1 144 2 
342 1 39 1 86 1 
342 1 39 1 86 1 
214 1 148 1 
214 1 148 1 86 1 
309 1 67 1 
0 1 65 1 67 1 47 1 328 1 151 1 309 1 291 1 110 1 277 1 312 2 79 1 136 1 368 1 208 1 340 2 256 1 139 1 371 1 162 1 259 1 186 2 344 1 117 2 41 1 263 2 144 1 
64 1 268 1 102 1 197 2 271 1 289 1 147 1 352 1 174 1 50 1 177 1 156 1 132 1 205 1 299 1 367 1 339 1 85 2 183 1 370 1 372 2 164 2 186 2 242 1 117 2 262 2 119 1 263 2 22 1 167 1 193 2 
26 1 349 1 37 1 299 1 315 1 197 2 237 1 183 1 257 1 187 1 227 2 118 1 262 2 51 1 21 1 10 1 193 2 378 1 120 1 
26 1 349 1 37 1 315 1 299 1 197 1 57 1 183 1 187 1 227 2 118 1 262 1 21 1 10 1 193 1 378 1 120 1 
205 1 26 1 35 1 299 1 197 1 271 1 206 1 84 1 183 1 88 1 29 1 262 1 51 1 193 1 
26 1 349 1 37 1 315 1 299 1 197 1 237 1 183 1 187 1 227 2 118 1 262 1 51 1 21 1 10 1 193 1 378 1 120 1 
62 1 
72 1 49 1 73 1 246 1 215 1 353 1 34 1 
245 1 44 1 246 2 353 1 224 1 109 1 73 1 34 1 78 1 335 1 136 1 337 1 161 1 181 1 319 1 256 1 146 1 
245 12 46 2 197 3 246 8 247 2 6 2 150 6 49 1 109 3 155 1 205 3 298 2 253 2 159 1 335 6 299 3 337 5 301 2 58 1 256 5 213 6 257 1 18 1 165 1 304 3 262 3 166 2 215 1 121 2 271 10 172 2 353 8 224 4 28 2 29 1 359 2 178 2 73 2 129 2 278 2 75 2 34 9 78 4 231 3 136 5 181 4 87 2 183 4 238 1 281 2 190 2 143 1 193 3 146 4 
245 6 46 2 171 1 246 5 5 1 172 2 353 5 6 2 150 5 224 2 248 1 178 2 109 1 73 2 129 2 360 1 34 8 78 2 335 3 254 1 136 1 337 1 301 2 181 2 210 1 58 1 16 1 15 1 281 1 320 1 256 1 213 5 89 1 190 1 146 2 
100 1 348 1 124 1 125 1 273 1 172 2 353 2 224 1 178 2 202 1 293 1 312 1 34 2 78 1 113 1 136 1 301 1 181 1 180 1 340 1 256 1 92 1 186 1 190 1 117 1 263 1 325 1 146 1 
78 1 181 1 246 1 353 1 224 1 49 1 73 1 215 1 146 1 34 1 
245 10 335 5 46 2 301 2 246 5 172 2 6 2 353 5 150 5 213 5 178 2 129 2 190 1 121 1 34 5 
256 1 73 1 136 1 109 1 337 1 246 1 
197 4 271 1 353 2 224 2 29 2 176 1 109 2 55 1 34 2 205 1 78 1 35 1 159 2 299 1 136 3 337 4 181 2 183 1 88 1 58 2 281 2 256 3 322 1 18 1 142 1 262 4 24 1 193 4 146 2 
124 1 197 1 125 2 271 1 289 1 352 1 290 1 174 1 27 1 329 1 29 1 177 1 132 1 312 2 205 1 366 1 299 1 231 1 85 2 340 2 183 1 164 1 242 1 186 2 344 1 117 3 262 1 263 3 264 1 119 1 167 1 193 1 
245 4 78 1 335 2 181 1 246 4 353 2 150 2 224 1 58 1 281 1 213 2 73 2 285 1 146 1 34 1 
200 1 0 1 371 1 
200 1 0 1 371 1 
309 1 0 1 371 1 191 1 104 1 
200 1 0 1 371 1 
0 1 371 1 361 1 
0 1 371 1 361 1 
0 1 371 1 361 1 
0 1 371 1 
259 1 328 1 
100 1 38 1 289 2 301 1 233 1 172 1 85 4 273 1 92 1 276 3 177 2 164 8 242 4 323 2 22 4 244 1 332 1 132 2 167 2 285 1 
100 1 72 1 92 1 276 2 164 6 242 3 301 1 323 2 233 1 22 3 172 1 273 1 332 1 285 1 
46 1 289 1 301 1 69 1 85 2 172 1 6 1 276 2 177 1 164 4 242 2 129 1 323 1 22 2 244 1 132 1 167 1 
46 1 301 1 171 1 172 1 6 1 15 2 89 1 276 2 164 7 242 4 129 1 323 1 22 3 244 1 179 1 
100 2 46 2 289 2 273 2 172 3 6 2 276 9 177 2 129 2 332 1 131 1 132 2 179 1 38 2 13 1 301 3 233 1 85 4 15 2 89 2 92 1 163 1 164 23 242 12 323 5 244 4 22 11 167 2 285 1 
164 1 242 1 15 1 
89 1 164 1 22 1 
46 1 289 1 69 1 301 1 85 2 172 1 6 1 177 1 276 3 164 6 242 3 129 1 323 2 22 3 244 1 132 1 167 1 121 1 
46 2 289 1 171 1 5 1 172 2 6 2 248 1 177 1 276 2 129 2 360 1 132 1 254 1 301 2 85 2 210 1 15 1 89 1 164 12 242 6 323 1 374 1 244 1 22 6 167 1 
100 1 301 1 172 1 273 1 92 1 276 2 164 6 242 3 323 1 22 3 244 1 
100 1 38 1 289 1 233 1 273 1 85 2 276 2 163 1 177 1 164 3 242 2 323 1 22 1 244 1 332 1 132 1 167 1 
100 2 348 1 289 1 301 2 85 2 273 2 172 2 177 1 276 5 92 1 164 10 242 5 323 3 374 1 244 2 22 5 132 1 167 1 
289 1 85 2 172 1 6 1 177 1 276 1 164 2 374 1 22 2 244 1 132 1 167 1 
46 1 289 1 301 1 85 2 172 1 6 1 276 2 177 1 164 4 242 2 129 1 323 1 374 1 22 2 244 1 132 1 167 1 
25 1 100 1 38 1 289 3 85 6 273 1 163 1 177 3 276 2 164 3 242 2 323 1 374 1 244 1 22 1 132 3 167 3 
100 3 25 1 169 1 46 3 289 5 69 1 171 1 273 3 172 5 6 3 177 5 276 12 129 3 332 1 132 5 179 1 252 1 38 2 301 5 233 1 85 10 15 4 89 3 92 2 163 1 93 1 164 34 242 18 323 7 374 1 22 16 244 5 167 5 285 1 
100 1 289 1 171 1 172 1 5 1 273 1 177 1 276 2 332 1 132 1 301 1 233 1 85 2 15 1 89 1 92 1 164 8 242 4 323 2 374 1 22 4 167 1 285 1 
100 1 289 2 69 1 171 1 273 1 5 1 172 2 6 1 177 2 276 3 129 1 332 1 132 2 179 1 301 1 233 1 85 4 15 2 89 1 92 1 164 11 242 5 323 2 374 1 22 6 244 1 167 2 285 1 
100 1 46 2 289 3 69 1 171 1 273 1 5 1 172 3 6 2 248 1 177 3 276 4 129 2 360 1 332 1 132 3 254 1 38 1 301 3 233 1 85 6 210 1 15 1 89 1 92 1 164 19 242 10 323 3 374 1 244 1 22 9 167 3 285 1 
100 1 46 1 289 3 69 1 171 1 273 1 5 1 172 3 6 2 248 1 177 3 276 5 129 2 360 1 332 1 132 3 254 1 38 1 301 2 233 1 85 6 210 1 15 1 89 1 92 1 164 17 242 7 323 3 374 1 244 2 22 10 167 3 285 1 
100 1 289 1 171 1 172 1 5 1 273 1 177 1 276 2 332 1 132 1 301 1 233 1 85 2 15 1 89 1 92 1 164 8 242 4 323 2 374 1 22 4 167 1 285 1 
46 2 289 1 171 1 5 1 172 2 6 2 248 1 177 1 276 2 129 2 360 1 132 1 254 1 301 2 85 2 210 1 15 1 89 1 164 12 242 6 323 1 374 1 244 1 22 6 167 1 
100 1 46 1 289 4 69 1 171 1 273 1 5 1 172 3 6 2 248 1 177 4 276 5 129 2 360 1 332 1 132 4 254 1 38 2 301 2 233 1 85 8 210 1 15 1 89 1 92 1 164 18 242 8 323 3 374 1 244 2 22 10 167 4 285 1 
25 1 46 2 289 4 171 1 5 1 172 3 6 3 248 1 177 4 276 6 129 3 360 1 132 4 254 1 38 2 301 2 85 8 210 1 15 1 89 1 164 16 242 7 323 3 374 1 244 3 22 9 167 4 
100 3 301 1 233 1 273 3 172 1 276 6 92 1 164 7 242 4 323 3 332 2 244 3 22 3 
100 1 25 1 46 1 289 4 171 1 273 1 5 1 172 3 6 2 248 1 177 4 276 4 129 2 360 1 332 1 132 4 254 1 38 2 301 2 233 1 85 8 210 1 15 1 89 1 92 1 164 18 242 8 323 3 374 1 244 1 22 10 167 4 285 1 
365 1 186 1 137 1 344 1 117 1 263 1 74 1 
365 1 137 1 30 1 226 1 186 1 32 1 344 1 117 1 74 1 263 1 265 1 76 1 
205 1 72 1 29 1 35 1 299 1 197 1 271 1 262 1 193 1 183 1 88 1 
205 1 299 1 231 1 197 1 271 1 290 1 340 1 183 1 29 1 260 1 186 1 344 1 117 2 262 1 263 2 264 1 312 1 193 1 
197 1 271 3 290 1 247 1 359 1 293 1 312 2 205 2 159 1 299 1 231 2 340 1 183 1 240 1 186 2 260 1 344 1 117 2 262 1 264 1 263 2 193 1 99 1 
197 2 271 3 290 1 247 1 71 1 359 1 293 1 312 2 364 1 205 2 159 1 299 1 231 2 340 1 183 1 240 1 186 2 260 1 344 1 117 2 262 2 263 2 193 2 99 1 
269 1 197 3 271 4 246 1 247 1 71 1 29 1 359 1 73 1 250 1 205 1 253 1 159 1 299 1 136 2 231 1 337 1 183 1 256 2 166 1 304 1 262 3 193 3 
205 1 298 1 253 1 159 1 299 1 231 1 136 2 197 3 271 4 337 1 246 1 247 1 71 1 183 1 256 2 29 1 359 1 73 1 262 3 304 1 166 1 193 3 
299 1 197 1 262 1 209 1 193 1 183 1 
205 2 299 2 197 7 231 1 317 1 271 3 147 1 209 1 126 1 255 1 183 3 238 1 29 2 372 1 91 1 257 1 118 1 262 7 193 6 168 1 12 1 
100 1 102 1 197 1 289 2 290 1 108 1 332 1 205 1 299 1 301 1 339 1 340 1 257 1 164 6 260 1 117 2 344 2 262 1 264 1 263 2 119 2 22 3 167 2 218 1 271 1 351 1 273 1 172 1 352 2 27 1 177 2 276 2 132 2 362 1 312 1 366 1 231 1 233 1 85 4 183 1 92 1 186 1 242 3 243 1 323 2 193 1 285 1 
197 1 271 2 246 1 353 1 224 2 28 1 29 1 49 1 73 1 109 1 278 1 75 1 34 1 78 2 298 1 253 1 136 3 337 2 181 2 256 3 18 1 41 1 262 1 304 1 166 1 215 1 193 1 146 2 
205 1 299 1 197 2 231 1 271 2 209 1 183 2 238 1 257 1 165 1 166 1 262 2 193 2 
56 1 205 1 35 1 299 1 197 4 271 1 71 1 183 1 88 1 29 1 257 1 262 4 193 4 
205 1 45 1 159 1 299 1 197 2 231 1 317 1 271 1 183 2 40 1 262 2 33 1 193 2 12 1 
29 1 37 1 299 1 197 1 227 1 262 1 193 1 183 1 378 1 120 1 
205 1 257 1 299 1 197 2 271 1 367 1 118 1 147 1 262 2 193 2 183 1 
56 1 205 2 35 1 159 1 299 2 197 5 271 3 147 1 88 1 183 2 29 1 257 1 91 1 262 5 193 4 168 1 
56 1 122 1 205 2 35 1 159 1 299 2 197 5 271 3 147 1 88 1 183 2 29 1 257 1 262 5 193 4 168 1 
205 1 364 1 299 1 231 1 197 1 271 1 290 1 340 1 183 1 29 1 260 1 186 1 344 1 117 2 262 1 263 2 312 1 193 1 
205 1 159 1 299 1 197 1 231 1 317 1 271 1 126 1 183 2 238 1 262 1 193 1 12 1 
77 1 300 1 344 1 274 1 11 1 
77 2 253 1 36 1 221 1 196 1 136 2 300 2 246 1 274 1 240 1 256 2 73 1 344 1 41 1 293 1 23 1 99 1 11 2 346 1 
64 1 370 1 186 1 300 1 117 1 263 1 274 1 156 1 11 1 
36 1 274 1 23 1 
72 1 128 1 292 1 266 1 
128 1 90 1 61 1 292 1 236 1 266 1 217 1 
83 1 61 1 311 1 
123 1 1 1 2 1 236 1 90 1 128 1 61 3 95 2 292 1 266 1 306 1 217 3 
326 1 128 1 90 1 61 2 292 1 234 1 236 1 266 1 217 2 
1 1 316 1 236 1 90 1 343 1 61 1 227 1 10 1 266 1 217 1 378 1 
90 1 1 1 61 1 292 1 236 1 266 1 217 1 
128 1 90 1 1 1 61 1 292 2 236 1 217 1 
1 1 272 1 236 2 90 2 61 2 292 1 96 1 111 1 266 1 217 2 
297 1 1 1 316 1 236 1 234 2 7 1 128 1 90 1 61 3 292 1 153 1 266 2 217 3 
37 1 1 1 236 1 234 1 128 1 90 1 187 1 61 2 292 1 227 2 10 1 266 1 217 2 376 1 378 1 
279 1 326 1 1 1 316 1 236 2 234 2 7 1 128 1 90 2 61 4 292 1 266 2 217 4 
128 1 90 1 1 1 61 1 292 1 236 1 266 1 217 1 
123 1 316 1 234 2 236 1 7 1 128 2 90 1 95 1 61 4 292 2 306 1 333 1 266 3 217 4 
128 1 90 1 185 1 1 1 222 1 61 2 292 1 234 1 236 1 266 1 296 1 217 2 
123 1 1 1 236 1 90 1 128 1 61 3 188 1 95 2 292 1 266 1 306 2 217 3 
354 1 52 1 266 2 345 2 
90 1 373 1 1 1 61 1 236 1 217 1 
297 1 128 1 90 1 1 1 61 2 292 1 234 1 236 1 266 1 217 2 
114 1 
128 1 90 1 1 1 61 1 292 1 236 1 266 1 217 1 
297 1 1 1 234 1 236 1 90 1 128 1 61 3 95 1 292 1 266 1 217 3 
316 1 333 1 266 1 7 1 
292 1 266 1 

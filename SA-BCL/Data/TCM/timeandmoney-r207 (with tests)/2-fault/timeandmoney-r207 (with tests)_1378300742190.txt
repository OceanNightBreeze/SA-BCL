#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (209,377) (105,349) (105,349) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 153 (33,101,372) (33,101,372) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 153 (33,101,372) (33,101,372) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 153 (33,101,372) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (72,327) (95,185,296) (33,101,372) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (209,377) (209,377) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 153 (95,185,296) (95,185,296) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 153 (95,185,296) (95,185,296) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 153 (95,185,296) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
167 3 18 1 287 1 246 2 299 3 224 1 42 1 330 1 51 2 161 1 162 1 31 2 15 1 
45 1 167 9 18 1 287 4 246 5 197 1 135 2 224 3 51 2 119 1 31 2 341 1 279 1 299 9 55 2 186 2 211 1 61 1 42 1 306 1 330 1 43 1 161 1 162 6 14 2 350 1 240 1 15 2 
45 1 167 9 18 1 287 4 246 5 197 1 135 2 224 3 51 2 119 1 31 2 341 1 279 1 299 9 55 2 186 2 211 1 61 1 42 1 306 1 330 1 43 1 161 1 162 6 14 2 350 1 240 1 15 2 
45 1 167 10 18 1 287 5 246 6 197 1 135 2 224 4 51 2 119 1 31 2 341 1 279 1 299 10 55 2 186 2 211 1 61 1 42 1 306 1 330 1 43 1 161 1 162 7 14 2 350 1 240 1 15 2 
45 1 167 7 18 1 287 3 246 4 197 1 135 2 224 2 51 2 119 1 31 2 279 1 299 7 55 1 186 2 211 1 61 1 42 1 306 1 330 1 43 1 161 1 162 4 14 2 350 1 240 1 15 2 
167 4 287 2 246 3 299 4 55 2 186 1 197 1 224 1 135 1 42 1 330 1 51 1 161 1 162 3 14 1 31 1 240 1 341 1 
167 2 246 1 299 2 186 1 211 1 136 1 42 1 178 1 330 1 51 1 161 1 130 1 119 1 31 1 14 1 15 1 
244 1 167 9 287 4 18 1 246 5 197 1 224 3 135 1 51 2 31 2 341 1 299 9 55 2 186 1 322 1 42 1 330 1 43 1 161 1 162 7 350 1 240 1 14 1 15 1 
244 1 167 9 287 4 18 1 246 5 197 1 224 3 135 1 51 2 31 2 341 1 299 9 55 2 186 1 322 1 42 1 330 1 43 1 161 1 162 7 350 1 240 1 14 1 15 1 
78 1 79 1 169 1 222 1 320 1 174 1 254 1 85 1 109 1 338 1 143 1 44 1 179 1 316 1 
251 1 
78 2 317 1 251 1 338 2 116 1 50 1 222 1 340 1 
78 5 219 2 317 1 251 1 47 2 278 1 171 1 222 2 116 2 107 1 118 1 156 1 212 1 25 1 141 1 338 5 50 1 122 2 352 1 
317 1 251 1 151 1 
138 2 251 1 74 1 
85 2 79 1 169 2 109 2 28 1 320 2 179 2 44 2 
133 1 115 1 169 2 69 2 355 1 70 1 357 1 71 2 225 1 248 1 93 1 249 1 28 1 250 1 363 1 179 3 6 1 30 1 7 1 366 2 79 1 277 1 103 1 320 2 104 1 281 2 374 1 191 1 85 2 109 2 110 1 111 1 261 2 128 1 44 3 165 1 264 1 
85 1 79 1 169 1 109 1 320 1 179 1 44 1 174 1 254 1 316 1 
9 1 78 1 317 1 169 1 251 1 358 1 174 1 83 1 41 1 336 1 338 1 44 1 179 1 180 1 
78 2 317 1 169 1 251 1 358 1 320 1 174 1 85 1 41 1 336 1 109 1 338 2 44 1 179 1 180 1 
78 1 338 1 116 1 300 1 222 1 
78 2 317 1 251 1 338 2 116 1 50 1 222 1 364 1 
78 1 338 1 116 1 
169 2 220 1 320 1 85 1 109 1 379 1 28 2 44 2 179 2 
337 1 267 1 129 1 
69 1 70 1 355 1 104 1 281 1 191 1 248 1 249 1 110 1 177 1 28 1 128 1 179 1 44 1 366 1 264 1 
28 1 151 1 
169 1 69 1 355 1 70 1 320 1 104 1 134 1 281 1 191 1 248 1 92 1 337 1 249 1 109 1 110 1 128 1 44 2 179 2 366 1 264 1 
169 5 220 1 35 1 320 4 134 1 83 1 200 1 92 2 85 1 109 4 28 1 147 1 44 5 179 5 
169 2 109 2 320 2 179 2 44 2 88 1 174 1 254 1 
85 1 92 1 169 3 109 3 28 1 320 3 179 3 44 3 
169 1 109 1 320 1 179 1 44 1 174 1 254 1 
85 1 169 1 220 1 109 1 379 1 320 1 179 1 44 1 174 1 
220 1 169 3 69 1 355 1 70 1 357 1 358 1 71 1 134 1 174 1 225 1 248 1 92 1 336 1 249 1 94 1 28 1 338 1 250 1 363 1 179 4 30 1 180 1 366 1 78 1 79 1 277 1 103 1 320 3 104 1 281 1 374 1 191 1 85 2 41 1 109 3 110 1 111 1 261 2 128 1 44 4 217 1 264 1 165 1 
92 1 169 2 109 1 28 1 320 1 147 1 179 2 44 2 83 1 
78 1 220 1 169 3 251 1 358 1 320 3 134 1 174 1 85 1 92 2 41 1 336 1 109 3 94 1 338 1 44 3 179 3 180 1 16 1 
220 1 169 2 267 1 320 2 92 1 85 1 109 2 337 1 44 2 179 2 
69 1 70 1 355 1 104 1 281 1 191 1 248 1 249 1 110 1 28 1 128 1 179 1 44 1 366 1 264 1 
69 1 70 1 355 1 104 1 281 1 191 1 248 1 249 1 28 1 203 1 128 1 179 1 44 1 366 1 242 1 
357 1 48 1 71 4 267 2 49 1 225 1 270 1 93 2 337 2 142 1 363 1 30 1 229 1 277 1 103 2 12 1 214 1 326 1 259 1 111 1 261 2 65 1 129 2 17 1 
169 1 109 1 358 1 320 1 179 1 44 1 174 1 88 1 
370 1 98 1 295 1 
312 1 370 2 290 1 295 2 102 1 175 1 
370 1 295 1 
370 1 295 1 
290 1 102 1 
290 1 102 1 
290 1 102 1 
286 1 370 1 295 1 
286 1 370 1 295 1 
286 1 370 1 295 1 
370 1 295 1 269 1 
370 1 295 1 269 1 
370 1 295 1 269 1 
169 2 360 1 91 1 293 1 28 1 338 1 276 1 98 1 204 1 145 1 295 1 179 2 78 1 370 1 320 2 57 1 154 1 187 1 233 1 109 2 127 1 307 1 284 1 44 2 
78 2 251 1 370 2 1 1 58 1 57 2 253 1 360 2 233 2 187 3 373 2 175 1 75 1 127 2 338 2 204 1 120 1 295 2 8 1 
354 2 186 2 135 1 73 1 136 1 
186 1 135 1 14 1 
186 1 136 1 14 1 
354 1 327 1 186 3 73 1 135 2 136 1 
354 1 186 2 72 1 73 1 135 1 136 1 
219 1 166 1 47 1 48 1 116 1 222 4 359 2 334 1 74 1 118 3 91 1 138 3 25 2 276 1 142 1 338 5 50 1 121 1 122 1 78 5 52 1 317 1 251 2 54 1 154 1 301 1 158 1 325 2 214 1 259 1 131 2 352 1 
332 1 219 2 166 2 47 2 48 3 116 6 222 7 359 6 334 2 199 1 74 3 91 4 118 8 202 1 138 9 25 6 141 1 142 3 338 9 50 1 149 1 121 3 122 2 78 9 318 5 317 1 251 5 54 1 300 5 214 3 259 3 131 6 87 1 263 1 352 1 
219 1 166 1 47 1 48 1 222 2 359 2 334 1 74 2 118 3 91 1 138 4 25 2 141 1 142 1 338 3 122 1 121 1 52 1 78 3 317 1 251 3 301 1 325 1 214 1 259 1 131 2 
219 1 166 1 47 1 48 2 222 3 359 4 334 1 199 1 74 3 118 5 91 2 202 1 138 7 25 4 141 1 142 2 338 4 122 1 121 2 78 4 52 1 317 1 251 4 301 1 325 2 214 2 259 2 131 4 87 1 
29 1 
189 1 191 1 151 1 
56 1 191 1 
355 1 128 1 191 1 
191 1 32 1 
355 1 191 1 
272 1 355 1 294 1 128 1 189 2 191 3 
183 1 0 1 124 1 103 3 48 1 11 1 71 7 223 1 22 1 305 1 270 2 63 1 326 3 93 4 346 1 142 1 238 1 164 2 
0 1 357 1 71 31 48 4 223 5 22 2 173 1 270 5 226 1 93 16 96 4 26 1 142 4 363 1 121 3 183 2 208 1 277 1 184 1 124 1 103 15 11 2 190 1 126 3 305 1 159 1 326 10 214 3 346 1 259 3 238 2 111 1 261 2 164 3 
0 1 357 2 48 1 71 9 223 1 22 1 173 1 270 3 93 5 142 1 363 2 183 1 277 2 11 1 103 4 232 1 305 1 282 1 326 4 346 1 111 2 238 1 261 4 164 2 
183 1 0 1 124 1 103 3 48 1 11 1 71 7 223 1 22 1 305 1 270 2 326 3 93 4 346 1 142 1 238 1 164 2 
183 1 0 1 124 1 103 3 48 1 11 1 71 7 223 1 22 1 305 1 270 2 326 3 93 4 346 1 142 1 238 1 164 2 
368 1 167 1 69 1 297 2 299 1 281 1 105 1 4 2 82 2 248 1 256 1 377 1 349 1 51 1 31 1 15 2 366 1 
33 1 167 1 153 1 69 1 297 1 299 1 291 1 281 1 4 1 82 1 330 1 51 1 101 1 31 1 15 1 366 1 
33 1 167 1 153 1 69 1 297 1 299 1 196 1 281 1 4 1 82 1 330 1 51 1 101 1 31 1 15 1 366 1 
33 1 167 2 153 1 69 1 297 1 299 2 291 1 281 1 4 1 82 1 256 1 193 1 51 1 162 1 31 1 15 1 366 1 
167 1 69 1 297 1 372 1 299 1 186 1 104 1 291 1 281 1 136 1 4 1 82 1 193 1 327 1 249 1 162 1 296 1 366 1 15 1 150 1 
181 1 
132 1 47 1 2 1 292 1 248 2 138 2 336 1 139 4 249 1 338 5 50 3 207 1 9 1 251 2 10 1 104 1 155 2 215 1 113 2 66 2 352 1 353 1 219 1 166 1 169 1 69 2 355 1 20 1 358 1 116 6 117 2 74 2 174 1 118 2 25 2 275 1 179 1 315 1 180 1 367 1 366 2 122 1 78 5 317 1 230 2 281 2 321 2 191 1 83 1 234 1 41 1 86 1 285 2 44 1 331 1 
169 1 20 1 358 1 116 2 2 1 174 1 336 1 139 2 338 3 50 1 179 1 180 1 340 1 207 1 9 1 78 3 155 1 83 1 41 1 86 1 44 1 331 1 
169 1 20 1 358 1 116 1 2 1 174 1 336 1 139 3 338 3 50 1 179 1 180 1 340 1 207 1 9 1 78 3 317 1 251 1 83 1 41 1 86 1 44 1 113 1 331 1 
169 1 20 1 358 1 116 2 2 1 174 1 336 1 139 3 338 3 50 1 179 1 180 1 340 1 207 1 9 1 78 3 317 1 251 1 155 1 321 1 83 1 41 1 86 1 44 1 113 1 331 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 7 2 1 117 2 74 2 174 1 118 1 140 1 336 1 139 6 25 1 275 1 338 5 50 3 179 1 180 1 340 1 122 1 207 1 9 1 78 5 317 5 34 1 230 2 251 5 155 4 321 4 36 1 157 1 83 1 192 1 41 1 86 1 285 2 44 1 66 2 113 4 352 1 331 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 4 2 1 117 2 74 2 174 1 118 1 138 2 336 1 139 4 25 1 275 1 338 4 50 2 179 1 180 1 207 1 122 1 9 1 78 4 317 1 230 2 251 2 10 1 155 2 321 2 83 1 41 1 86 1 285 2 44 1 113 2 66 2 331 1 352 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 4 2 1 117 2 74 2 174 1 118 1 336 1 139 4 25 1 275 1 338 4 50 2 179 1 180 1 122 1 207 1 9 1 78 4 317 1 230 2 251 1 155 2 321 2 36 1 83 1 157 1 192 1 41 1 86 1 285 2 44 1 113 2 66 2 331 1 352 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 4 2 1 117 2 74 2 174 1 118 1 336 1 139 4 25 1 275 1 338 4 50 2 179 1 180 1 122 1 207 1 9 1 78 4 317 1 230 2 251 1 155 2 321 2 36 1 83 1 157 1 192 1 41 1 86 1 285 2 44 1 113 2 66 2 331 1 352 1 
132 1 219 1 169 1 47 1 289 2 20 1 358 1 116 4 2 1 174 1 118 1 138 2 336 1 139 4 24 2 25 1 338 4 50 2 179 1 180 1 227 1 122 1 207 1 9 1 78 4 317 1 251 1 155 2 321 2 303 1 83 1 192 1 41 1 236 1 86 1 285 2 44 1 113 2 66 2 331 1 352 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 5 2 1 117 2 74 2 174 1 118 1 336 1 139 5 140 1 25 1 275 1 338 4 50 2 179 1 180 1 122 1 207 1 9 1 78 4 317 1 230 2 251 1 155 3 321 3 36 1 83 1 157 1 192 1 41 1 86 1 285 2 44 1 66 2 113 3 352 1 331 1 
132 1 219 1 169 1 47 1 20 1 358 1 116 5 2 1 117 2 74 2 174 1 118 1 336 1 139 5 140 1 25 1 275 1 338 4 50 2 179 1 180 1 122 1 207 1 9 1 78 4 317 1 230 2 251 1 155 3 321 3 36 1 83 1 157 1 192 1 41 1 86 1 285 2 44 1 66 2 113 3 352 1 331 1 
132 1 219 1 169 1 47 1 289 2 20 1 358 1 116 4 2 1 174 1 118 1 138 2 336 1 139 4 24 2 25 1 338 4 50 2 179 1 180 1 207 1 122 1 9 1 78 4 317 1 251 1 10 1 155 2 321 2 303 1 83 1 41 1 86 1 285 2 44 1 113 2 66 2 331 1 352 1 
133 1 353 1 169 1 69 7 355 2 357 2 71 2 196 1 291 1 225 2 248 2 92 1 249 2 93 1 250 1 363 2 179 1 30 2 7 2 366 8 277 2 298 1 103 1 320 1 104 2 59 1 281 8 191 3 108 1 215 1 109 1 347 1 237 1 111 2 261 4 308 1 65 1 44 1 351 1 
220 1 169 1 357 1 267 1 48 1 71 3 225 1 270 1 337 1 93 1 142 1 363 1 179 1 30 1 77 1 121 1 277 1 103 2 320 1 85 1 324 1 326 1 214 1 109 1 259 1 111 1 261 2 129 1 44 1 
0 1 357 1 267 1 48 1 71 6 225 1 270 2 337 1 93 3 142 1 28 2 363 1 30 1 151 1 183 1 277 1 103 3 305 1 326 2 346 1 238 1 111 1 261 2 65 1 129 1 164 1 
133 1 195 1 357 2 71 14 48 2 267 4 223 1 225 1 270 1 337 11 93 8 26 1 97 1 96 3 28 1 142 1 250 1 144 1 363 2 30 2 77 1 121 2 208 1 277 2 103 6 252 1 126 3 326 2 214 1 259 2 111 2 261 4 129 11 
133 1 169 1 69 1 355 1 70 1 357 1 267 1 71 2 134 1 225 1 248 1 92 1 249 1 93 1 177 1 28 1 250 1 363 1 179 2 30 1 366 1 77 1 277 1 103 1 320 1 104 1 280 1 281 1 188 1 191 1 109 1 110 1 111 1 261 2 128 1 112 1 44 2 264 1 
133 1 0 1 48 3 291 1 134 1 5 1 248 1 92 1 249 2 337 7 93 10 142 3 250 1 342 2 103 10 104 2 62 2 305 1 214 2 109 1 346 1 110 2 259 2 111 3 261 6 164 1 114 2 165 2 264 2 265 1 169 1 69 3 70 2 355 2 357 3 71 20 267 7 223 4 225 3 270 4 274 1 28 2 363 3 179 3 30 3 366 3 77 1 121 2 183 1 277 3 320 1 281 3 191 2 326 8 238 1 128 2 44 3 239 2 129 7 
277 1 357 1 267 1 71 2 48 1 223 1 12 1 225 1 326 1 337 1 93 2 259 1 111 1 261 2 65 1 363 1 129 1 30 1 
229 1 277 1 357 1 267 1 71 2 103 2 225 1 270 1 326 1 214 1 337 1 111 1 142 1 261 2 65 1 363 1 129 1 30 1 
357 1 48 1 71 4 267 2 223 1 225 1 270 1 93 2 337 2 142 1 363 1 30 1 121 1 277 1 103 2 326 2 214 1 259 1 111 1 261 2 65 1 129 2 
277 1 357 1 267 1 71 2 48 1 223 1 12 1 225 1 326 1 337 1 93 2 259 1 111 1 261 2 363 1 129 1 30 1 351 1 
229 1 277 1 357 1 267 1 71 2 103 2 225 1 270 1 326 1 214 1 337 1 111 1 142 1 261 2 363 1 129 1 30 1 351 1 
357 1 48 1 71 4 267 2 223 1 225 1 270 1 93 2 337 2 142 1 363 1 30 1 121 1 277 1 103 2 326 2 214 1 259 1 111 1 261 2 129 2 351 1 
357 1 71 4 48 1 267 2 223 1 225 1 270 1 93 2 337 2 142 1 363 1 30 1 121 1 277 1 103 2 326 2 214 1 259 1 111 1 261 2 129 2 
133 1 69 1 355 1 70 1 357 1 71 2 225 1 248 1 93 1 249 1 28 1 250 1 363 1 179 1 30 1 366 1 277 1 103 1 104 1 281 1 191 1 110 1 111 1 261 2 128 1 44 1 264 1 165 1 
133 1 69 1 355 1 70 1 357 1 71 2 225 1 248 1 93 1 249 1 28 1 203 1 250 1 363 1 100 1 179 1 30 1 366 1 277 1 103 1 104 1 281 1 191 1 111 1 261 2 128 1 44 1 242 1 
357 1 48 1 71 4 267 2 223 1 225 1 270 1 93 2 337 2 142 1 363 1 30 1 121 1 77 1 277 1 103 2 326 2 214 1 259 1 111 1 261 2 129 2 
69 1 70 1 355 1 357 1 267 2 71 4 48 1 196 1 223 1 225 1 270 1 337 2 93 2 249 1 142 1 363 1 179 1 30 1 366 1 121 1 277 1 103 2 104 1 281 1 191 1 214 1 326 2 110 1 259 1 111 1 261 2 128 1 129 2 239 1 44 1 264 1 165 1 
220 1 169 1 357 1 48 1 71 3 267 1 223 1 225 1 93 2 337 1 142 1 363 1 179 1 30 1 365 1 77 1 121 1 277 1 103 1 320 1 85 1 214 1 326 1 109 1 259 1 111 1 261 2 44 1 129 1 
357 2 71 19 48 3 223 3 270 3 273 1 93 9 96 2 26 1 142 3 363 2 339 2 121 3 152 2 208 1 277 2 103 10 210 1 60 1 302 1 126 1 255 1 282 1 326 6 214 3 259 3 283 1 111 2 261 4 68 1 
357 3 71 26 48 3 223 2 173 2 270 2 271 1 93 14 26 2 96 2 142 2 363 3 99 1 339 4 121 3 152 1 277 3 103 12 210 1 13 1 302 2 126 2 255 1 235 1 326 4 282 1 214 2 259 3 283 2 111 3 261 6 218 1 194 1 68 1 
0 1 357 3 71 41 48 5 223 4 173 1 270 4 271 1 93 20 96 4 26 3 142 5 363 3 99 1 339 4 205 1 121 4 152 1 183 1 208 1 277 3 103 21 210 1 60 1 13 1 302 1 126 3 305 1 255 1 235 1 282 1 326 8 214 4 346 1 259 4 238 1 283 2 111 3 261 6 164 1 218 1 194 1 68 1 
0 1 357 4 71 38 48 5 223 3 173 2 270 4 271 1 93 20 96 4 26 3 142 4 363 4 99 1 339 4 205 1 121 4 152 1 183 1 208 1 277 4 103 18 210 1 60 1 13 1 302 1 126 3 305 1 255 1 235 1 282 1 326 7 214 3 346 1 259 4 238 1 283 2 111 4 261 8 164 1 218 1 194 1 68 1 
0 1 357 2 71 52 48 8 223 7 173 1 270 7 271 1 93 27 96 4 26 2 142 8 363 2 99 1 339 4 121 7 152 1 183 1 208 2 277 2 103 25 252 2 210 1 13 1 302 1 126 4 305 1 255 1 235 1 282 1 326 14 214 7 346 1 259 7 238 1 283 1 111 2 261 4 164 1 218 1 194 1 68 1 
168 1 370 1 127 1 57 1 253 1 120 1 295 1 233 1 360 1 175 1 
98 1 284 1 
370 1 127 1 57 1 172 1 295 1 233 1 360 1 89 1 206 1 
286 1 310 1 
46 1 312 1 269 1 
78 1 251 1 370 1 1 1 57 1 253 1 360 1 233 1 187 2 373 1 175 1 75 1 338 1 127 1 204 1 120 1 295 1 8 1 
78 1 251 1 370 1 1 1 57 1 253 1 360 1 233 1 187 2 373 1 175 1 75 1 338 1 127 1 204 1 120 1 295 1 8 1 
78 1 251 1 370 1 1 1 57 1 253 1 360 1 233 1 187 2 373 1 175 1 75 1 338 1 127 1 204 1 120 1 295 1 8 1 
286 1 310 1 312 1 
286 1 310 1 312 1 
46 1 269 1 
46 1 312 1 269 1 
293 1 145 1 
169 2 222 1 360 1 75 1 91 1 293 1 28 1 27 1 338 1 276 1 98 1 145 1 179 2 295 1 78 1 370 1 320 2 57 1 154 1 233 1 187 1 373 1 109 2 127 1 307 1 284 1 44 2 
133 1 169 2 69 2 355 1 356 1 357 1 71 2 335 1 225 1 249 1 93 1 250 1 363 1 179 2 30 1 7 2 366 2 77 1 277 1 103 1 104 1 281 2 80 1 375 1 191 1 108 1 111 1 261 2 308 1 44 2 163 1 
377 1 209 1 69 1 281 1 4 1 366 1 323 1 248 1 
153 1 69 1 95 1 185 1 291 1 281 1 4 1 366 1 323 1 
153 1 69 2 95 1 185 1 196 1 291 1 281 2 4 1 366 2 323 1 
153 1 69 1 95 1 245 1 291 1 281 1 4 1 366 1 
362 1 
219 1 317 1 47 1 251 1 107 1 118 1 212 1 25 1 122 1 352 1 
251 5 48 2 359 5 74 5 62 1 118 5 304 2 40 1 138 10 214 2 25 5 259 2 142 2 131 5 121 2 
78 1 317 1 251 1 338 1 116 1 50 1 
219 2 353 1 166 2 69 4 355 1 47 2 333 2 116 4 118 2 248 2 249 1 25 2 141 1 338 3 50 2 315 1 148 1 228 1 367 1 366 4 122 2 78 3 104 1 281 4 191 1 234 2 215 1 380 1 352 1 
317 1 25 1 251 1 107 1 118 1 151 1 212 1 
219 1 47 1 116 1 117 1 74 1 118 1 138 1 25 1 275 1 338 1 50 1 122 1 78 1 317 1 230 1 251 2 352 1 
47 4 333 1 48 2 196 1 3 2 248 1 138 12 249 3 338 5 142 2 294 1 50 3 146 2 343 2 251 8 56 3 104 4 107 1 62 2 212 1 304 2 258 1 214 2 259 2 352 4 219 4 166 2 69 3 355 3 116 5 311 2 359 6 74 6 118 9 361 2 176 1 25 8 366 3 122 4 32 2 121 2 78 5 317 2 123 2 281 3 189 2 191 10 234 1 41 2 40 2 328 1 380 1 128 3 131 6 
219 2 166 1 47 2 48 2 116 1 359 5 74 3 118 8 138 6 271 1 25 5 96 1 26 1 338 1 314 1 142 2 50 1 99 1 122 2 121 2 78 1 317 2 251 5 126 1 234 1 213 1 304 2 40 1 235 1 214 2 259 2 131 5 218 1 194 1 352 2 
219 1 169 1 47 1 48 2 174 1 118 2 25 2 338 1 142 1 143 1 179 1 122 1 316 1 78 1 79 1 183 1 320 1 81 1 36 1 254 1 304 2 305 1 85 1 40 1 109 1 238 1 44 1 352 1 
169 2 69 1 70 1 355 1 357 1 71 1 225 1 248 1 249 1 28 1 250 1 363 1 179 3 30 1 366 1 79 1 277 1 103 1 320 2 104 1 281 1 374 1 191 1 85 2 109 2 110 1 111 1 261 2 128 1 44 3 165 1 264 1 
219 1 166 1 317 2 47 1 251 4 359 2 74 2 118 1 234 1 138 4 25 2 131 2 164 1 122 1 352 1 
90 1 127 1 145 1 57 1 253 1 
288 1 127 1 57 1 
288 1 127 1 57 1 
288 1 127 1 57 1 
378 1 127 1 57 1 
378 1 127 1 57 1 
378 1 127 1 57 1 
127 1 57 1 
370 1 295 1 
183 2 277 1 357 1 71 10 103 5 48 2 223 2 81 1 270 3 305 1 282 1 326 5 93 5 111 1 238 2 142 2 261 2 363 1 
277 1 357 1 48 1 71 2 223 1 282 1 326 1 93 2 259 1 111 1 261 2 363 1 
277 1 357 1 103 2 48 1 71 4 223 1 270 1 214 1 326 2 282 1 93 2 259 1 142 1 111 1 261 2 363 1 121 1 
183 1 277 3 357 3 103 2 71 3 21 1 223 1 60 1 173 1 270 1 282 1 326 2 93 1 111 3 238 1 261 6 363 3 
0 1 357 5 71 34 48 5 21 1 223 5 173 2 270 7 93 16 96 4 26 1 142 5 363 5 121 3 183 3 208 1 184 1 277 5 53 1 103 18 60 1 190 1 126 3 305 2 159 1 282 1 326 12 214 3 346 1 259 3 238 3 111 5 261 10 164 1 
183 1 277 2 0 1 357 2 48 1 103 4 71 8 223 1 173 1 305 1 270 2 326 3 93 4 346 1 142 1 111 2 238 1 261 4 363 2 164 1 
183 1 0 1 103 3 48 1 71 6 270 2 305 1 326 2 93 3 346 1 238 1 142 1 164 1 151 1 
277 1 53 1 357 1 103 2 48 1 71 4 223 1 270 1 214 1 326 2 93 2 259 1 142 1 111 1 261 2 363 1 121 1 
208 1 103 4 71 7 48 1 223 1 126 1 270 1 214 1 326 2 93 3 26 1 96 2 259 1 142 1 121 1 
0 1 195 1 357 2 48 3 71 23 21 1 223 4 173 2 270 5 93 11 96 2 142 3 363 2 121 2 183 2 208 1 277 2 103 12 252 1 126 2 305 1 326 9 214 2 346 1 259 2 238 2 111 2 261 4 164 1 
96 1 71 1 103 1 
93 1 71 1 126 1 
277 1 53 1 357 1 103 3 71 6 48 1 223 1 62 1 270 2 326 3 214 1 93 3 259 1 111 1 142 1 261 2 363 1 121 1 
357 1 71 12 48 2 223 1 270 1 271 1 93 6 96 1 26 1 142 2 363 1 99 1 121 2 277 1 103 6 126 1 235 1 282 1 214 2 326 2 259 2 111 1 261 2 218 1 194 1 
183 1 48 1 71 6 103 3 223 1 305 1 270 1 326 2 93 3 142 1 238 1 
183 1 277 1 0 1 357 1 103 2 71 3 21 1 223 1 173 1 270 1 326 2 93 1 346 1 238 1 111 1 261 2 363 1 
0 1 357 1 48 1 71 8 270 2 93 4 96 1 26 1 142 1 363 1 99 1 183 1 277 1 103 4 126 1 305 1 282 1 326 2 346 1 111 1 238 1 261 2 164 1 
0 1 357 2 71 11 48 2 223 1 270 2 93 6 96 2 26 1 142 1 363 2 99 1 121 1 183 1 208 1 277 2 53 1 103 5 126 1 305 1 282 1 326 3 346 1 259 1 238 1 111 2 261 4 164 1 
0 1 357 3 71 19 48 3 223 1 173 1 270 3 271 1 93 9 96 1 26 1 142 3 363 3 99 1 121 2 183 1 277 3 53 1 103 10 126 1 305 1 235 1 282 1 214 2 326 4 346 1 259 2 238 1 111 3 261 6 164 1 218 1 194 1 
0 1 357 3 71 17 48 3 223 2 173 1 270 3 271 1 93 10 96 1 26 1 142 2 363 3 99 1 121 2 183 1 277 3 53 1 103 7 126 1 305 1 235 1 282 1 214 1 326 5 346 1 259 2 238 1 111 3 261 6 164 1 218 1 194 1 
0 1 357 1 48 1 71 8 270 2 93 4 96 1 26 1 142 1 363 1 99 1 183 1 277 1 103 4 126 1 305 1 282 1 326 2 346 1 111 1 238 1 261 2 164 1 
357 1 71 12 48 2 223 1 270 1 271 1 93 6 96 1 26 1 142 2 363 1 99 1 121 2 277 1 103 6 126 1 235 1 282 1 214 2 326 2 259 2 111 1 261 2 218 1 194 1 
0 1 357 4 71 18 48 3 223 2 173 2 270 3 271 1 93 10 96 1 26 1 142 2 363 4 99 1 121 2 183 1 277 4 53 1 103 8 126 1 305 1 235 1 282 1 214 1 326 5 346 1 259 2 238 1 111 4 261 8 164 1 218 1 194 1 
357 4 71 16 48 3 223 3 173 2 270 3 271 1 93 9 96 1 26 1 142 2 363 4 99 1 121 3 277 4 103 7 60 1 126 1 235 1 282 1 214 2 326 6 259 3 111 4 261 8 218 1 194 1 
183 3 0 1 103 4 71 7 48 1 223 3 270 3 305 1 326 6 93 3 346 2 142 1 238 3 
0 1 357 4 71 18 48 3 223 1 173 2 270 3 271 1 93 10 96 1 26 1 142 2 363 4 99 1 121 2 183 1 277 4 103 8 60 1 126 1 305 1 235 1 282 1 214 1 326 4 346 1 259 2 238 1 111 4 261 8 164 1 218 1 194 1 
169 1 28 1 179 1 44 1 147 1 83 1 344 1 
170 1 319 1 169 1 106 1 83 1 344 1 313 1 28 1 147 1 44 1 179 1 182 1 
353 1 215 1 249 1 69 4 355 1 196 1 104 1 281 4 76 1 366 4 241 1 191 1 248 1 
69 2 355 1 333 1 371 1 247 1 104 2 281 2 39 1 191 1 23 1 249 1 274 1 128 1 366 2 
249 1 69 1 186 1 104 1 281 1 136 1 14 1 366 1 150 1 248 1 
69 2 355 1 196 1 291 1 104 1 281 2 375 1 191 1 108 1 249 1 366 2 
353 1 69 4 355 2 333 1 196 1 104 2 281 5 191 3 248 1 108 1 215 1 249 2 347 1 237 1 76 1 366 5 
353 1 69 4 355 2 333 1 196 1 104 2 281 5 376 1 191 3 248 1 108 1 215 1 249 2 347 1 76 1 366 5 
353 1 215 1 249 1 69 1 355 1 104 1 281 1 366 1 191 1 151 1 248 1 
169 1 69 1 355 1 70 1 320 1 104 1 281 1 191 1 248 1 92 1 109 1 249 1 110 1 28 1 128 1 44 2 179 2 366 1 
169 2 343 1 69 1 355 2 70 1 358 1 333 1 320 1 104 1 281 1 174 1 191 3 92 1 336 1 109 2 249 1 110 1 28 1 128 2 44 2 179 2 366 1 32 1 
169 2 343 1 69 2 355 2 70 1 358 1 333 1 320 1 104 1 281 2 174 1 191 3 92 1 336 1 109 2 249 1 28 1 128 2 44 2 179 2 366 2 241 1 32 1 242 1 
78 2 317 1 343 1 69 3 251 1 355 1 333 1 116 1 104 1 56 1 281 3 189 1 191 4 248 1 41 1 64 1 160 1 249 1 338 2 128 1 366 3 241 1 32 1 
78 2 317 1 343 1 69 3 251 1 355 1 333 1 116 1 104 1 56 1 281 3 189 1 191 4 248 1 41 1 249 1 338 2 128 1 146 1 366 3 241 1 32 1 
249 1 69 1 104 1 281 1 59 1 366 1 
69 6 355 2 298 1 371 1 196 1 291 1 104 3 59 1 281 7 125 1 191 3 248 2 108 1 23 1 249 2 347 1 237 1 294 1 128 1 7 1 366 7 
0 1 48 1 196 1 92 1 249 1 93 3 337 1 142 1 342 1 103 3 104 1 305 1 109 1 110 1 346 1 111 2 261 4 164 1 264 1 165 1 169 1 69 1 70 1 355 1 357 2 356 1 267 1 71 6 225 2 270 2 28 2 363 2 179 2 30 2 366 1 77 1 183 1 277 2 320 1 281 1 191 1 326 2 238 1 128 1 239 1 44 2 129 1 
219 2 69 1 47 2 222 1 116 2 3 1 118 1 361 1 248 1 25 1 338 3 50 1 146 1 366 1 122 2 78 3 317 1 123 1 251 1 56 1 281 1 189 1 107 1 191 2 212 1 41 1 380 1 352 2 
69 2 355 1 196 1 104 2 59 1 281 2 189 1 191 2 258 1 249 1 294 1 128 1 366 2 
169 1 69 1 355 1 70 1 320 1 104 1 281 1 191 1 248 1 92 1 109 1 249 1 28 1 128 1 44 2 179 2 366 1 242 1 
69 1 355 1 333 1 371 1 104 2 281 1 125 1 191 1 23 1 249 1 294 1 128 1 366 1 
309 1 28 1 381 1 67 1 243 1 
78 2 317 1 309 2 251 1 19 1 358 1 222 1 174 1 84 1 41 1 336 1 94 1 28 1 338 2 329 1 180 1 67 2 381 2 243 1 
309 1 169 1 179 1 44 1 80 1 163 1 335 1 67 1 243 1 
19 1 329 1 243 1 
167 1 42 1 246 1 299 1 51 1 330 1 161 1 31 1 
167 4 287 1 246 3 299 4 211 1 198 1 224 1 345 1 42 2 260 1 51 1 161 2 162 2 31 1 
167 2 221 1 246 1 299 2 268 1 322 1 42 1 330 1 51 1 162 1 161 1 31 1 
167 3 246 1 299 3 198 1 211 2 37 1 345 2 42 1 330 1 51 1 161 1 31 1 
201 1 257 1 246 2 216 2 
167 1 369 1 299 1 51 1 330 1 31 1 
167 2 42 1 246 1 299 2 51 1 330 1 161 1 162 1 350 1 31 1 
266 1 
167 1 42 1 246 1 299 1 51 1 330 1 161 1 31 1 
42 1 246 1 161 1 151 1 
167 1 42 1 246 1 299 1 51 1 161 1 31 1 
297 1 299 1 15 1 
345 1 167 3 42 1 231 1 246 1 299 3 51 1 330 1 161 1 211 2 198 1 31 1 
167 2 42 1 246 1 55 1 299 2 51 1 161 1 162 1 31 1 
167 1 287 1 246 1 299 1 51 1 330 1 186 1 197 1 135 1 14 1 31 1 
167 1 42 1 246 1 299 1 51 1 330 1 31 1 
167 1 42 2 299 1 51 1 330 1 161 1 31 1 
167 2 246 1 299 2 137 1 38 1 42 1 330 1 51 2 262 1 31 2 
167 3 287 1 246 2 299 3 224 1 42 1 330 1 51 1 43 1 161 1 162 2 31 1 350 1 
167 2 246 1 299 2 186 2 136 1 135 1 42 1 327 1 348 1 330 1 51 1 161 1 162 1 31 1 14 1 
167 4 287 1 246 2 299 4 55 1 224 1 42 1 330 1 51 2 161 1 162 2 31 2 341 1 
167 3 246 1 299 3 211 1 42 1 330 1 51 1 162 1 161 1 31 1 350 1 
287 1 260 1 246 1 224 1 
42 1 246 1 

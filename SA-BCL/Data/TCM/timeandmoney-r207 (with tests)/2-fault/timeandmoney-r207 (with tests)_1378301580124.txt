#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 28 37 127 102 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 28 37 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 28 37 376 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 28 37 127 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 28 37 127 27 261 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 28 37 127 27 261 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 28 37 127 27 80 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 28 37 249 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 28 37 249 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 28 37 127 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 1 40 3 342 1 109 2 164 2 69 1 110 3 198 1 48 2 115 1 283 1 272 1 133 1 
340 1 342 4 109 2 241 1 55 2 110 9 112 1 113 2 115 1 7 1 63 1 90 1 272 6 302 1 93 1 40 9 196 1 195 2 164 2 69 3 198 1 48 5 360 1 378 1 283 2 338 1 380 2 133 1 
340 1 342 4 109 2 241 1 55 2 110 9 112 1 113 2 115 1 7 1 63 1 90 1 272 6 302 1 93 1 40 9 196 1 195 2 164 2 69 3 198 1 48 5 360 1 378 1 283 2 338 1 380 2 133 1 
340 1 342 5 109 2 241 1 55 2 110 10 112 1 113 2 115 1 7 1 63 1 90 1 272 7 302 1 93 1 40 10 196 1 195 2 164 2 69 4 198 1 48 6 360 1 378 1 283 2 338 1 380 2 133 1 
340 1 342 3 109 2 241 1 55 1 110 7 112 1 113 2 115 1 63 1 90 1 272 4 302 1 93 1 40 7 196 1 195 2 164 2 69 2 198 1 48 4 360 1 378 1 283 2 338 1 380 2 133 1 
340 1 40 4 342 2 195 1 109 1 241 1 164 1 55 2 69 1 110 4 198 1 48 3 113 1 115 1 7 1 272 3 338 1 380 1 
340 1 40 2 220 1 195 1 109 1 164 1 85 1 110 2 48 1 198 1 113 1 360 1 115 1 247 1 283 1 63 1 
342 4 340 1 109 2 241 1 55 2 110 9 112 1 113 1 115 1 7 1 272 7 40 9 195 1 164 2 69 3 96 1 198 1 73 1 48 5 378 1 283 1 338 1 380 1 133 1 
342 4 340 1 109 2 241 1 55 2 110 9 112 1 113 1 115 1 7 1 272 7 40 9 195 1 164 2 69 3 96 1 198 1 73 1 48 5 378 1 283 1 338 1 380 1 133 1 
205 1 286 1 242 1 260 1 355 1 147 1 309 1 49 1 187 1 327 1 370 1 269 1 11 1 92 1 
36 1 
242 2 260 1 124 1 269 2 36 1 173 1 22 1 13 1 
330 1 68 1 239 2 179 1 242 5 260 2 152 2 22 1 97 1 266 1 359 1 189 1 268 1 201 1 269 5 36 1 173 2 104 2 13 1 
36 1 22 1 197 1 
26 1 36 1 271 2 
205 2 309 2 286 2 187 1 71 1 11 2 92 2 147 2 
205 2 135 1 286 3 347 1 57 2 348 2 182 1 183 1 322 1 245 1 188 2 187 1 155 1 298 1 11 2 91 1 209 1 92 2 274 2 14 1 229 1 375 1 163 1 15 1 122 1 277 2 123 1 94 1 71 1 252 1 199 1 147 3 99 1 309 2 79 1 237 1 131 1 
205 1 309 1 286 1 187 1 49 1 327 1 355 1 11 1 92 1 147 1 
286 1 240 1 242 1 251 1 355 1 167 1 22 1 147 1 269 1 379 1 329 1 335 1 36 1 92 1 
205 1 286 1 240 1 242 2 355 1 22 1 147 1 309 1 269 2 379 1 329 1 335 1 36 1 11 1 92 1 
242 1 260 1 88 1 269 1 173 1 
242 2 260 1 243 1 269 2 36 1 173 1 22 1 13 1 
242 1 269 1 173 1 
258 1 135 1 205 1 286 2 122 1 252 1 182 1 57 1 348 1 183 1 184 1 147 2 25 1 79 1 298 1 11 1 209 1 131 1 92 1 274 1 
205 1 286 2 29 1 71 2 147 2 309 1 326 1 11 1 92 2 
258 1 278 1 308 1 
135 1 286 1 122 1 71 1 252 1 182 1 57 1 348 1 183 1 147 1 349 1 79 1 298 1 209 1 131 1 274 1 
71 1 197 1 
309 1 205 3 286 3 71 1 11 3 184 1 92 3 147 3 
205 1 286 1 327 1 355 1 11 1 92 1 147 1 
205 1 309 1 286 1 29 1 326 1 355 1 11 1 92 1 147 1 
135 1 205 3 29 1 286 4 240 1 242 1 182 1 57 1 348 1 183 1 322 1 184 1 245 1 188 2 187 1 269 1 298 1 329 1 11 3 91 1 209 1 92 3 274 1 14 1 229 1 375 1 15 1 122 1 277 1 355 1 71 1 252 1 233 1 199 1 147 4 99 1 309 2 25 1 281 1 79 1 237 1 379 1 335 1 131 1 
205 1 286 2 251 1 71 1 346 1 11 1 184 1 92 2 147 2 
205 3 29 1 286 3 240 1 242 1 355 1 184 2 147 3 309 1 25 1 281 1 269 1 335 1 379 1 329 1 36 1 363 1 11 3 92 3 
258 1 205 2 29 1 286 2 184 1 278 1 147 2 309 1 11 2 92 2 
135 1 286 1 122 1 71 1 252 1 182 1 57 1 348 1 183 1 147 1 79 1 298 1 131 1 209 1 274 1 
135 1 286 1 122 1 289 1 71 1 252 1 182 1 57 1 348 1 183 1 147 1 59 1 79 1 209 1 274 1 
258 2 322 1 245 1 188 2 225 1 193 1 14 1 373 1 353 1 375 2 15 1 277 4 94 2 358 1 278 2 308 2 216 1 235 1 279 1 99 1 128 1 284 1 150 1 237 1 
205 1 286 1 369 1 355 1 329 1 11 1 92 1 147 1 
205 4 286 5 29 1 251 1 71 1 346 1 184 2 147 5 368 1 309 1 25 1 11 4 160 1 92 5 
205 2 286 2 369 1 327 1 355 1 11 2 92 2 147 2 
325 1 61 1 299 1 
325 2 114 1 61 2 351 1 176 1 234 1 
325 1 61 1 
325 1 61 1 
114 1 234 1 
114 1 234 1 
114 1 234 1 
325 1 61 1 291 1 
325 1 61 1 291 1 
325 1 61 1 291 1 
325 1 61 1 312 1 
325 1 61 1 312 1 
325 1 61 1 312 1 
42 1 30 1 242 2 54 2 288 2 31 3 324 1 325 2 333 1 218 2 61 2 269 2 157 1 36 1 103 2 351 1 81 2 38 1 134 1 
341 1 205 2 286 2 30 1 242 1 288 1 31 1 263 1 325 1 61 1 269 1 9 1 299 1 11 2 92 2 306 1 71 1 166 1 145 1 147 2 218 1 238 1 103 1 81 1 
195 2 126 1 149 2 85 1 380 1 
195 1 113 1 380 1 
195 1 113 1 85 1 
195 3 126 1 149 1 85 1 357 1 380 2 
195 2 126 1 149 1 231 1 85 1 380 1 
285 1 239 1 242 5 260 4 152 1 262 1 225 1 269 5 9 1 193 1 36 2 271 3 13 1 352 2 68 1 121 2 306 1 145 1 22 1 47 1 97 3 215 1 169 1 74 1 26 1 128 1 284 1 201 2 173 1 104 1 132 2 364 1 
285 1 239 2 242 9 260 7 152 2 262 2 225 3 88 5 371 1 269 9 193 3 36 5 271 9 65 1 13 1 352 6 68 1 121 6 306 4 141 1 331 1 44 1 22 1 97 8 169 3 24 5 253 1 359 1 26 3 128 3 284 3 201 6 173 6 104 2 364 2 
239 1 242 3 260 2 152 1 262 1 225 1 269 3 36 3 193 1 271 4 352 2 306 1 121 2 22 1 47 1 97 3 74 1 169 1 26 2 359 1 128 1 284 1 201 2 104 1 364 1 132 1 
239 1 242 4 260 3 152 1 262 1 225 2 269 4 36 4 193 2 271 7 65 1 352 4 121 4 306 2 44 1 22 1 47 1 97 5 74 1 169 2 253 1 26 3 359 1 128 2 284 2 201 4 104 1 364 1 132 2 
259 1 
336 1 209 1 197 1 
307 1 209 1 
183 1 209 1 
122 1 336 2 183 1 321 1 209 3 204 1 
122 1 183 1 209 1 
209 1 140 1 
365 1 375 3 17 1 277 7 94 4 181 1 235 3 34 1 128 1 284 1 150 2 62 1 172 1 89 1 350 1 228 1 64 1 67 2 
365 1 181 1 245 1 34 1 188 2 139 1 225 3 62 5 193 3 350 2 300 1 228 2 64 2 248 1 67 3 14 1 375 15 120 1 17 1 277 31 230 1 94 16 169 3 332 3 235 10 99 1 128 4 284 4 150 5 237 1 172 2 52 1 203 1 82 4 
365 1 181 1 245 2 188 4 139 1 62 1 350 1 64 1 228 1 14 2 67 2 162 1 375 4 305 1 17 1 277 9 94 5 235 4 99 2 128 1 284 1 150 3 237 2 172 1 
365 1 375 3 17 1 277 7 94 4 181 1 235 3 34 1 128 1 284 1 150 2 62 1 172 1 350 1 228 1 64 1 67 2 
365 1 375 3 17 1 277 7 94 4 181 1 235 3 34 1 128 1 284 1 150 2 62 1 172 1 350 1 228 1 64 1 67 2 
53 1 135 1 109 1 178 1 345 2 348 1 57 1 182 1 183 1 110 1 294 1 209 1 66 2 274 1 211 1 40 1 164 1 21 1 170 1 79 1 283 2 310 2 177 1 
340 1 40 1 195 2 135 1 0 1 109 1 164 1 354 1 345 1 85 1 357 1 57 1 348 1 110 1 113 1 77 1 86 1 79 1 372 1 283 1 310 1 130 1 192 1 380 1 274 1 66 1 
340 1 0 1 135 1 109 1 345 1 85 1 348 1 57 1 110 2 113 1 86 1 115 1 372 1 192 1 208 1 272 1 66 1 274 1 40 2 195 2 164 1 357 1 48 1 198 1 77 1 283 1 79 1 310 1 130 1 380 1 
0 1 135 1 109 1 345 1 85 1 348 1 57 1 110 3 113 1 115 1 372 1 192 1 272 2 12 1 66 1 274 1 40 3 195 2 354 1 164 1 357 1 21 1 48 1 198 1 77 1 283 1 79 1 310 1 130 1 380 1 
0 1 135 1 345 1 85 1 348 1 57 1 110 2 113 1 115 1 372 1 272 2 12 1 66 1 274 1 40 2 195 2 354 1 357 1 48 1 198 1 77 1 283 1 79 1 310 1 380 1 
43 1 
239 1 286 1 240 1 242 4 152 1 57 2 348 2 154 1 207 1 8 1 209 1 211 1 13 2 117 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 170 1 26 1 129 1 127 1 79 1 173 3 28 1 135 1 182 2 320 1 367 1 183 1 262 1 87 1 269 4 329 1 271 1 37 1 274 2 92 1 97 2 147 1 280 1 201 2 202 1 102 1 379 1 335 1 104 1 105 1 
240 1 286 1 304 1 242 2 355 1 251 1 72 2 167 1 367 1 154 1 147 1 87 1 269 2 335 1 329 1 379 1 105 1 92 1 28 1 
286 1 240 1 242 3 180 1 367 1 154 1 87 1 269 3 329 1 36 1 92 1 13 1 304 1 124 1 251 1 355 1 167 1 72 3 22 1 147 1 379 1 335 1 173 1 105 1 
240 1 286 1 304 1 242 2 355 1 251 1 72 2 167 1 367 1 154 1 147 1 87 1 269 2 335 1 329 1 379 1 105 1 37 1 92 1 28 1 
240 1 286 1 376 1 304 1 242 3 124 1 355 1 251 1 72 2 167 1 367 1 154 1 147 1 87 1 269 3 335 1 329 1 379 1 173 1 105 1 37 1 13 1 92 1 28 1 
239 1 286 1 240 1 242 3 152 1 367 1 154 1 87 1 207 1 269 3 8 1 329 1 271 1 37 1 13 1 92 1 117 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 97 1 147 1 26 1 129 1 127 1 201 1 379 1 335 1 173 1 104 1 105 1 28 1 
239 1 286 1 240 1 242 3 261 1 152 1 367 1 154 1 87 1 207 1 269 3 8 1 329 1 37 1 13 1 92 1 117 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 97 1 125 1 147 1 26 1 129 1 127 1 27 1 201 1 379 1 335 1 173 1 104 1 105 1 28 1 
239 1 286 1 240 1 242 3 261 1 152 1 367 1 154 1 87 1 207 1 269 3 8 1 329 1 37 1 13 1 92 1 117 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 97 1 125 1 147 1 26 1 129 1 127 1 27 1 201 1 379 1 335 1 173 1 104 1 105 1 28 1 
239 1 286 1 240 1 366 1 242 3 317 1 152 1 318 1 367 1 154 1 87 1 269 3 329 1 271 1 116 1 37 1 13 1 92 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 97 1 147 1 129 1 127 1 27 1 201 1 379 1 335 1 80 1 173 1 104 1 105 1 28 1 
249 1 240 1 286 1 304 1 242 2 355 1 251 1 72 2 167 1 367 1 154 1 147 1 87 1 269 2 335 1 329 1 379 1 105 1 37 1 92 1 28 1 
249 1 240 1 286 1 304 1 242 2 355 1 251 1 72 2 167 1 367 1 154 1 147 1 87 1 269 2 335 1 329 1 379 1 105 1 37 1 92 1 28 1 
239 1 286 1 240 1 242 3 366 1 152 1 318 1 367 1 154 1 87 1 269 3 329 1 271 1 116 1 37 1 13 1 92 1 68 1 304 1 251 1 355 1 168 1 167 1 72 2 97 1 147 1 129 1 127 1 201 1 379 1 335 1 173 1 104 1 105 1 28 1 
205 1 135 2 286 1 151 1 348 8 57 7 182 2 183 2 184 1 322 2 32 1 245 2 188 4 10 1 208 1 11 1 273 1 209 3 91 1 92 1 274 8 211 1 14 2 375 1 15 2 163 1 354 1 277 2 123 2 95 1 94 1 46 1 147 1 216 1 170 1 99 2 79 2 237 2 256 1 
258 1 205 1 29 1 286 1 322 1 245 1 188 2 225 1 193 1 11 1 92 1 14 1 375 2 15 1 277 3 94 1 278 1 308 1 147 1 169 1 235 1 98 1 309 1 99 1 128 1 150 1 284 1 237 1 337 1 
258 1 365 1 181 1 322 1 245 1 188 2 350 1 228 1 14 1 67 1 375 3 15 1 17 1 277 6 94 3 71 2 278 1 197 1 308 1 216 1 235 2 99 1 128 1 150 2 284 1 237 1 
258 11 322 2 245 2 188 4 225 1 62 1 227 1 193 2 91 1 14 2 248 1 375 6 163 1 15 1 277 14 94 8 71 1 232 1 278 4 146 1 308 11 169 2 235 2 332 3 99 2 51 1 128 2 150 1 284 1 237 2 337 1 52 1 82 3 
135 1 205 1 286 2 348 1 57 1 182 1 183 1 322 1 184 1 245 1 185 1 349 1 188 2 298 1 11 1 209 1 91 1 274 1 92 1 212 1 14 1 375 1 15 1 163 1 122 1 277 2 94 1 71 1 252 1 278 1 147 2 25 1 99 1 79 1 237 1 337 1 106 1 131 1 
205 1 286 3 348 3 57 3 245 3 297 2 62 4 298 2 350 1 11 1 209 2 67 1 14 3 250 1 163 1 15 3 354 1 17 1 122 2 71 2 252 2 308 7 169 2 25 1 128 3 79 2 131 2 219 2 365 1 258 7 135 2 221 2 181 1 319 1 182 1 183 2 184 1 322 3 323 2 188 6 225 2 35 1 193 2 228 1 91 1 274 3 92 1 229 2 375 10 277 20 94 10 278 7 147 3 235 8 99 3 150 4 284 3 237 3 337 1 
258 1 353 1 15 1 277 2 94 2 278 1 322 1 308 1 245 1 235 1 216 1 99 1 188 2 128 1 62 1 237 1 193 1 14 1 
258 1 375 2 15 1 277 2 358 1 278 1 322 1 308 1 245 1 235 1 216 1 99 1 188 2 225 1 150 1 284 1 237 1 14 1 
258 2 322 1 245 1 188 2 225 1 62 1 193 1 14 1 375 2 15 1 277 4 94 2 278 2 169 1 308 2 216 1 235 2 99 1 128 1 284 1 150 1 237 1 
258 1 353 1 15 1 277 2 94 2 278 1 322 1 308 1 245 1 235 1 99 1 188 2 128 1 62 1 237 1 193 1 256 1 14 1 
258 1 375 2 15 1 277 2 358 1 278 1 322 1 308 1 245 1 235 1 99 1 188 2 225 1 150 1 284 1 237 1 256 1 14 1 
258 2 322 1 245 1 188 2 225 1 62 1 193 1 14 1 375 2 15 1 277 4 94 2 278 2 169 1 308 2 235 2 99 1 128 1 284 1 150 1 237 1 256 1 
258 2 322 1 245 1 188 2 225 1 62 1 193 1 14 1 375 2 15 1 277 4 94 2 278 2 169 1 308 2 235 2 99 1 128 1 284 1 150 1 237 1 
135 1 286 1 348 1 57 1 182 1 183 1 322 1 245 1 188 2 298 1 209 1 91 1 274 1 14 1 229 1 375 1 163 1 15 1 122 1 277 2 94 1 71 1 252 1 147 1 99 1 79 1 237 1 131 1 
135 1 286 1 289 1 348 1 57 1 182 1 183 1 322 1 59 1 245 1 188 2 5 1 209 1 91 1 274 1 14 1 375 1 163 1 15 1 122 1 277 2 94 1 71 1 252 1 147 1 99 1 79 1 237 1 
258 2 322 1 245 1 188 2 225 1 62 1 193 1 14 1 375 2 15 1 277 4 94 2 278 2 169 1 308 2 235 2 99 1 128 1 284 1 150 1 237 1 337 1 
258 2 135 1 286 1 221 1 348 1 57 1 183 1 322 1 245 1 188 2 225 1 62 1 298 1 193 1 208 1 209 1 274 1 14 1 229 1 375 2 15 1 122 1 277 4 94 2 252 1 278 2 308 2 147 1 169 1 235 2 99 1 128 1 150 1 284 1 79 1 237 1 131 1 
258 1 205 1 29 1 286 1 322 1 245 1 188 2 225 1 62 1 193 1 11 1 92 1 14 1 375 1 15 1 277 3 94 2 142 1 278 1 147 1 169 1 308 1 235 1 309 1 99 1 128 1 284 1 237 1 337 1 
84 2 290 1 56 1 264 2 223 1 245 2 188 4 224 1 225 3 62 3 193 3 14 2 248 1 162 1 375 10 277 19 94 9 169 3 217 1 332 1 235 6 99 2 100 1 128 3 150 3 284 3 237 2 174 1 52 1 82 2 
84 4 290 2 56 2 264 1 4 1 223 1 111 1 265 1 245 3 188 6 224 1 139 2 225 2 62 2 193 3 14 3 39 1 162 1 375 12 277 26 94 14 169 3 235 4 332 2 99 3 254 1 128 3 150 2 284 2 237 3 174 1 52 2 83 1 82 2 
365 1 84 4 2 1 181 1 290 2 56 1 264 1 4 1 265 1 111 1 223 1 245 3 188 6 224 1 139 1 225 4 62 4 193 4 350 1 228 1 67 1 14 3 248 1 39 1 162 1 375 21 17 1 277 41 94 20 169 4 332 3 235 8 99 3 100 1 254 1 128 5 150 4 284 5 237 3 174 1 52 3 83 1 82 4 
365 1 84 4 2 1 181 1 290 2 56 1 264 1 4 1 265 1 111 1 223 1 245 4 188 8 224 1 139 2 225 3 62 3 193 4 350 1 228 1 67 1 14 4 248 1 39 1 162 1 375 18 17 1 277 38 94 20 169 4 332 3 235 7 99 4 100 1 254 1 128 5 150 4 284 4 237 4 174 1 52 3 83 1 82 4 
365 1 84 4 181 1 290 1 56 1 264 1 4 1 265 1 111 1 223 1 245 2 188 4 224 1 139 1 225 7 62 7 193 7 350 1 228 1 67 1 14 2 248 2 39 1 162 1 375 25 17 1 277 52 94 27 146 2 169 7 332 4 235 14 99 2 254 1 128 8 150 7 284 8 237 2 174 1 52 2 83 1 82 4 
325 1 333 1 218 1 138 1 288 1 61 1 103 1 351 1 81 1 38 1 
341 1 299 1 
33 1 75 1 325 1 218 1 288 1 61 1 143 1 103 1 81 1 
42 1 30 1 242 1 54 1 288 1 31 2 325 1 333 1 218 1 61 1 269 1 157 1 36 1 103 1 351 1 81 1 38 1 134 1 
42 1 30 1 242 1 54 1 288 1 31 2 325 1 333 1 218 1 61 1 269 1 157 1 36 1 103 1 351 1 81 1 38 1 134 1 
42 1 30 1 242 1 54 1 288 1 31 2 325 1 333 1 218 1 61 1 269 1 157 1 36 1 103 1 351 1 81 1 38 1 134 1 
190 1 291 1 176 1 
190 1 291 1 176 1 
118 1 312 1 
118 1 176 1 312 1 
166 1 263 1 
341 1 205 2 286 2 54 1 242 1 260 1 288 1 31 1 263 1 325 1 61 1 269 1 9 1 299 1 11 2 92 2 306 1 71 1 166 1 145 1 147 2 218 1 238 1 103 1 311 1 81 1 134 1 
190 1 291 1 
118 1 176 1 312 1 
135 1 286 2 151 1 348 2 57 2 183 1 322 1 244 1 32 1 245 1 188 2 301 1 209 1 91 1 274 2 92 2 14 1 275 1 375 1 15 1 163 1 277 2 123 2 94 1 144 1 147 2 99 1 79 1 101 1 237 1 337 1 
135 1 182 1 57 1 348 1 183 1 23 1 170 1 246 1 79 1 310 1 209 1 274 1 211 1 177 1 
195 2 303 1 0 1 135 1 354 1 85 1 357 1 57 1 348 1 113 1 246 1 77 1 296 1 79 1 310 1 130 1 380 1 274 1 
195 2 135 1 303 1 0 1 354 1 85 1 357 1 57 2 348 2 113 1 246 1 77 1 296 1 79 1 310 1 130 1 208 1 380 1 274 2 
195 2 0 1 135 1 354 1 316 1 85 1 357 1 57 1 348 1 113 1 77 1 296 1 79 1 310 1 130 1 380 1 274 1 
292 1 
330 1 68 1 239 1 152 1 22 1 97 1 266 1 201 1 36 1 104 1 
121 5 97 5 323 1 169 2 60 1 186 2 26 5 225 2 128 2 284 2 201 5 193 2 36 5 271 10 352 5 
242 1 269 1 36 1 173 1 22 1 13 1 
135 1 239 2 343 1 242 3 152 2 320 1 348 4 57 4 182 2 183 1 262 2 226 2 269 3 158 1 159 1 209 1 274 4 13 2 211 1 68 1 97 2 170 1 359 1 280 1 79 1 202 2 201 2 173 4 104 2 
330 1 201 1 36 1 22 1 97 1 266 1 197 1 
239 1 242 1 152 1 207 1 269 1 8 1 36 2 271 1 13 1 117 1 68 1 22 1 97 1 26 1 201 1 173 1 104 1 
239 4 242 5 152 4 57 3 348 3 58 1 60 2 208 1 159 1 209 10 13 3 352 6 68 4 119 1 122 3 121 6 18 2 307 3 22 2 169 2 26 6 128 2 79 4 173 5 313 1 135 3 315 2 182 1 262 2 183 3 266 1 323 2 186 2 225 2 226 1 269 5 36 8 193 2 271 12 274 3 140 2 330 1 276 2 97 9 200 2 148 2 284 2 202 1 201 8 335 2 336 2 104 4 204 1 339 2 
239 2 242 1 152 2 262 1 4 1 111 1 265 1 60 1 186 2 225 2 156 1 269 1 36 5 193 2 271 6 13 1 352 5 39 1 68 2 121 5 22 2 97 8 169 2 332 1 254 1 236 1 26 3 128 2 284 2 202 1 201 5 173 1 104 2 52 1 82 1 
68 1 239 1 242 1 152 1 125 1 153 1 186 1 269 1 104 1 350 1 228 1 
205 2 135 1 286 3 348 1 57 1 182 1 183 1 322 1 245 1 188 2 187 1 298 1 11 2 91 1 209 1 274 1 92 2 14 1 229 1 375 1 15 1 122 1 277 1 71 1 252 1 199 1 147 3 99 1 309 2 79 1 237 1 131 1 
68 1 239 1 121 2 152 1 22 2 262 1 97 1 26 2 201 2 202 1 36 4 271 4 104 1 67 1 352 2 
218 1 166 1 270 1 81 1 38 1 
218 1 255 1 81 1 
218 1 255 1 81 1 
218 1 255 1 81 1 
213 1 218 1 81 1 
213 1 218 1 81 1 
213 1 218 1 81 1 
218 1 81 1 
325 1 61 1 
235 1 150 1 350 1 228 1 153 1 
162 1 277 2 94 2 245 1 235 1 99 1 188 2 128 1 62 1 237 1 193 1 14 1 
162 1 375 2 277 4 94 2 245 1 169 1 235 2 99 1 188 2 225 1 128 1 150 1 284 1 62 1 237 1 193 1 14 1 
162 1 375 2 277 3 19 1 94 1 245 3 235 2 99 3 100 1 188 6 139 1 150 1 62 1 237 3 350 1 228 1 14 3 
365 1 181 2 245 5 188 10 139 2 225 3 295 1 62 5 193 3 350 3 300 1 228 3 67 1 14 5 248 1 162 1 375 18 17 1 277 34 19 1 230 1 94 16 169 3 332 3 235 12 99 5 100 1 128 5 284 5 150 7 237 5 203 1 52 1 82 4 
365 1 181 1 4 1 245 1 188 2 350 1 228 1 67 1 14 1 162 1 375 4 17 1 277 8 94 4 332 1 235 2 99 1 128 1 284 1 150 2 237 1 52 1 82 1 
365 1 181 1 4 1 245 2 188 4 295 1 62 1 193 1 350 1 228 1 67 1 14 2 248 1 162 1 375 5 17 1 277 11 94 6 169 1 332 1 235 3 99 2 128 2 284 1 150 2 237 2 52 1 82 2 
365 1 181 1 4 1 111 1 265 1 245 3 188 6 139 1 225 2 295 1 62 1 193 2 350 1 228 1 67 1 14 3 39 1 162 1 375 10 17 1 277 19 94 9 169 2 332 1 235 4 99 3 254 1 128 3 284 3 150 3 237 3 52 1 82 1 
365 1 181 1 4 1 111 1 265 1 245 3 188 6 139 1 225 1 295 1 62 2 193 2 350 1 228 1 67 1 14 3 162 1 39 1 375 7 17 1 277 17 94 10 169 2 332 1 235 5 99 3 254 1 128 3 284 2 150 3 237 3 52 1 82 1 
365 1 181 1 4 1 245 1 188 2 350 1 228 1 67 1 14 1 162 1 375 4 17 1 277 8 94 4 332 1 235 2 99 1 128 1 284 1 150 2 237 1 52 1 82 1 
4 1 111 1 265 1 245 1 188 2 225 2 62 1 193 2 14 1 162 1 39 1 375 6 277 12 94 6 169 2 332 1 235 2 99 1 254 1 128 2 284 2 150 1 237 1 52 1 82 1 
365 1 181 1 4 1 111 1 265 1 245 4 188 8 139 2 225 1 295 1 62 2 193 2 350 1 228 1 67 1 14 4 39 1 162 1 375 8 17 1 277 18 94 10 169 2 332 1 235 5 99 4 254 1 128 3 284 2 150 3 237 4 52 1 82 1 
4 1 111 1 265 1 245 4 188 8 139 2 225 2 62 3 193 3 14 4 39 1 162 1 375 7 277 16 94 9 169 3 332 1 235 6 99 4 254 1 100 1 128 3 284 2 150 3 237 4 52 1 82 1 
365 2 375 4 17 1 277 7 94 3 181 1 235 6 128 1 284 1 150 3 62 3 350 3 228 3 
365 1 181 1 4 1 111 1 265 1 245 4 188 8 139 2 225 1 62 1 193 2 350 1 228 1 67 1 14 4 39 1 162 1 375 8 17 1 277 18 94 10 169 2 332 1 235 4 99 4 254 1 100 1 128 3 284 2 150 3 237 4 52 1 82 1 
365 1 375 4 17 1 277 8 94 4 181 1 245 2 235 3 99 2 188 4 139 1 128 1 284 1 150 2 62 1 237 2 350 1 228 1 67 1 14 2 
235 2 365 1 375 3 17 1 277 6 128 1 284 1 150 2 94 3 181 1 350 1 228 1 197 1 67 1 
375 2 277 4 94 2 245 1 169 1 235 2 99 1 188 2 225 1 295 1 128 1 150 1 284 1 62 1 237 1 193 1 14 1 
375 4 277 7 94 3 169 1 332 1 235 2 225 1 128 1 150 1 284 1 62 1 193 1 52 1 82 2 248 1 
365 1 181 1 245 2 188 4 139 2 225 2 62 4 227 1 193 2 350 2 228 2 67 1 248 1 14 2 375 12 17 1 277 23 19 1 94 11 146 1 169 2 235 9 332 2 99 2 128 3 284 3 150 5 237 2 82 2 
375 1 277 1 82 1 
332 1 277 1 94 1 
375 3 277 6 94 3 245 1 323 1 169 1 235 3 99 1 188 2 225 1 295 1 128 1 284 1 150 2 62 1 237 1 193 1 14 1 
4 1 111 1 265 1 245 1 188 2 225 2 62 1 193 2 14 1 162 1 39 1 375 6 277 12 94 6 169 2 332 1 235 2 99 1 254 1 128 2 284 2 150 1 237 1 52 1 82 1 
375 3 277 6 94 3 181 1 235 2 128 1 284 1 150 1 62 1 350 1 228 1 
365 1 375 2 17 1 277 3 19 1 94 1 245 1 235 2 99 1 188 2 139 1 150 1 62 1 237 1 350 1 228 1 14 1 
286 1 1 1 251 1 71 1 346 1 92 1 147 1 
108 1 286 1 1 1 251 1 71 1 356 1 377 1 346 1 137 1 147 1 210 1 92 1 
374 1 135 1 182 1 57 4 348 4 183 1 170 1 334 1 79 1 208 1 209 1 274 4 211 1 
257 1 135 1 344 1 122 1 319 1 57 2 348 2 136 1 183 1 50 1 226 1 79 2 209 1 274 2 
195 1 135 1 113 1 77 1 79 1 85 1 348 1 57 1 182 1 274 1 
135 1 354 1 79 1 101 1 348 2 57 2 208 1 183 1 209 1 274 2 32 1 
374 1 135 2 95 1 182 1 57 4 348 5 183 2 32 1 170 1 226 1 79 2 208 1 10 1 209 3 211 1 274 5 
374 1 314 1 135 2 95 1 182 1 57 4 348 5 183 2 32 1 170 1 226 1 79 2 208 1 209 3 211 1 274 5 
170 1 135 1 79 1 348 1 57 1 182 1 183 1 209 1 211 1 197 1 274 1 
205 1 135 1 286 2 122 1 71 1 252 1 182 1 57 1 348 1 183 1 184 1 147 2 79 1 298 1 11 1 209 1 92 1 274 1 
135 1 205 1 286 2 240 1 315 1 348 1 57 1 183 2 184 1 226 1 298 1 329 1 11 2 209 3 274 1 92 2 140 1 122 2 355 1 71 1 252 1 147 2 79 1 
135 1 205 1 286 2 240 1 315 1 348 2 57 2 183 2 184 1 59 1 226 1 329 1 11 2 209 3 274 2 92 2 140 1 122 2 355 1 71 1 252 1 147 2 334 1 79 1 
107 1 135 1 315 1 242 2 122 1 307 1 182 1 22 1 57 3 348 3 183 1 334 1 79 1 226 1 269 2 335 1 36 1 173 1 336 1 209 4 161 1 274 3 140 1 
135 1 315 1 242 2 122 1 307 1 182 1 22 1 57 3 348 3 183 1 148 1 334 1 79 1 226 1 269 2 335 1 36 1 173 1 336 1 209 4 274 3 140 1 
135 1 79 1 348 1 57 1 46 1 274 1 
135 2 287 1 354 1 122 1 123 1 95 1 46 1 182 2 57 6 348 7 136 1 183 2 32 1 50 1 79 3 10 1 208 1 273 1 209 3 274 7 204 1 
258 1 365 1 135 1 205 1 286 2 221 1 181 1 57 1 348 1 183 1 322 2 184 1 245 2 188 4 297 1 298 1 350 1 301 1 208 1 11 1 228 1 209 1 92 1 274 1 67 1 14 2 229 1 375 3 15 2 17 1 122 1 277 6 94 3 71 2 252 1 278 1 308 1 147 2 235 2 99 2 128 1 284 1 150 2 79 1 237 2 337 1 131 1 
239 2 242 3 260 1 152 2 348 1 57 1 182 1 266 1 269 3 36 1 159 1 209 2 274 1 13 1 330 1 68 2 276 1 18 1 307 1 22 1 97 1 200 1 148 1 201 1 335 1 173 2 336 1 104 2 
135 1 122 1 46 1 57 2 348 2 183 1 79 2 336 1 208 1 209 2 274 2 204 1 313 1 
205 1 135 1 286 2 122 1 71 1 252 1 182 1 57 1 348 1 183 1 184 1 147 2 59 1 79 1 11 1 209 1 92 1 274 1 
135 1 287 1 122 1 57 1 348 1 136 1 183 1 50 1 226 1 79 2 209 1 274 1 204 1 
41 1 16 1 293 1 328 1 71 1 
41 2 240 1 242 2 16 2 260 1 355 1 71 1 22 1 20 1 76 1 293 1 281 1 78 1 328 2 269 2 335 1 329 1 379 1 36 1 
41 1 286 1 144 1 244 1 147 1 293 1 328 1 92 1 275 1 
76 1 293 1 20 1 
40 1 340 1 109 1 164 1 115 1 110 1 48 1 198 1 
40 4 342 1 109 1 214 1 164 1 69 1 165 1 110 4 198 2 48 3 360 1 115 2 272 2 175 1 
340 1 40 2 109 1 164 1 70 1 96 1 110 2 48 1 198 1 6 1 115 1 272 1 
340 1 40 3 109 1 164 1 165 2 110 3 48 1 198 1 360 2 115 1 175 1 194 1 
267 1 282 1 3 2 48 2 
40 1 340 1 109 1 164 1 206 1 110 1 
40 2 340 1 109 1 164 1 378 1 115 1 272 1 110 2 48 1 198 1 
362 1 
40 1 340 1 109 1 164 1 115 1 110 1 48 1 198 1 
115 1 48 1 198 1 197 1 
40 1 109 1 164 1 115 1 110 1 48 1 198 1 
283 1 110 1 66 1 
340 1 40 3 109 1 164 1 165 1 45 1 110 3 48 1 198 1 360 2 115 1 175 1 
40 2 109 1 55 1 164 1 115 1 272 1 110 2 48 1 198 1 
342 1 40 1 340 1 195 1 113 1 109 1 164 1 380 1 338 1 110 1 48 1 
40 1 340 1 109 1 164 1 110 1 48 1 198 1 
40 1 340 1 109 1 164 1 115 1 110 1 198 2 
340 1 40 2 109 2 164 2 222 1 110 2 48 1 198 1 191 1 361 1 
340 1 40 3 342 1 109 1 164 1 69 1 110 3 198 1 48 2 112 1 378 1 115 1 272 2 
340 1 40 2 195 2 109 1 164 1 85 1 357 1 110 2 48 1 198 1 113 1 171 1 115 1 272 1 380 1 
340 1 40 4 342 1 109 2 164 2 55 1 69 1 110 4 198 1 48 2 115 1 7 1 272 2 
40 3 340 1 109 1 164 1 378 1 360 1 115 1 272 1 110 3 48 1 198 1 
342 1 214 1 69 1 48 1 
48 1 198 1 

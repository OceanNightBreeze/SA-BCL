#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (28,118) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (100,374) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (28,118) 58 109 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (28,118) 58 64 (212,285) (212,285) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
141 4 283 1 143 9 23 2 221 1 352 3 145 2 149 1 62 1 204 6 182 1 65 2 184 1 319 1 186 2 91 9 301 1 304 1 258 1 40 2 305 1 237 1 18 2 346 1 238 1 49 5 331 2 169 1 
141 4 283 1 143 9 23 2 221 1 352 3 145 2 149 1 62 1 204 6 182 1 65 2 184 1 319 1 186 2 91 9 301 1 304 1 258 1 40 2 305 1 237 1 18 2 346 1 238 1 49 5 169 1 331 2 
141 5 283 1 143 10 23 2 221 1 352 4 145 2 149 1 62 1 204 7 182 1 65 2 184 1 319 1 186 2 91 10 301 1 304 1 258 1 40 2 305 1 237 1 18 2 346 1 238 1 49 6 169 1 331 2 
141 3 283 1 143 7 23 2 221 1 352 2 145 2 149 1 62 1 204 4 182 1 65 2 184 1 319 1 186 2 91 7 301 1 304 1 40 2 305 1 237 1 18 2 346 1 238 1 49 4 169 1 331 1 
182 1 141 2 143 4 65 1 319 1 352 1 145 1 186 1 91 4 304 1 258 1 40 1 305 1 204 3 18 1 346 1 49 3 331 2 
182 1 368 1 143 2 65 1 319 1 23 1 145 1 91 2 304 1 40 1 378 1 18 1 237 1 49 1 169 1 158 1 
182 1 141 1 143 3 319 1 23 1 352 1 145 2 91 3 301 1 304 1 204 1 18 2 49 2 
141 4 283 1 143 9 352 3 23 1 145 2 334 1 204 7 252 1 182 1 65 1 184 1 319 1 186 1 91 9 301 1 304 1 40 1 258 1 305 1 18 2 49 5 346 1 331 2 
141 4 283 1 143 9 352 3 23 1 145 2 334 1 204 7 252 1 182 1 65 1 184 1 319 1 186 1 91 9 301 1 304 1 40 1 258 1 305 1 18 2 49 5 346 1 331 2 
219 1 176 1 300 1 
323 1 176 1 370 2 
317 1 342 2 69 2 115 2 344 2 281 2 74 1 50 2 
193 1 24 1 75 1 201 1 222 1 311 1 82 1 336 1 270 2 10 1 205 1 31 1 316 1 126 1 33 1 317 1 183 2 92 2 278 2 214 1 342 2 69 2 164 1 94 2 115 2 344 2 45 1 281 2 166 1 74 1 50 2 218 1 348 1 
170 1 342 1 69 1 115 1 344 1 281 1 36 1 31 1 74 1 50 1 
219 1 356 1 112 1 175 1 6 1 69 1 176 1 376 1 44 1 9 1 281 1 328 1 31 1 50 1 
219 1 356 2 112 1 6 2 342 1 69 1 176 1 115 1 344 1 44 1 9 1 281 1 328 1 31 1 50 1 
209 1 6 1 61 1 67 1 356 1 
209 1 234 1 361 1 6 2 219 1 176 1 61 1 356 2 
209 1 6 1 356 1 
350 1 170 1 356 1 36 1 6 1 342 1 69 1 61 1 115 1 344 1 281 1 31 1 74 1 50 1 
176 1 
209 1 361 1 6 2 219 1 131 1 176 1 61 1 356 2 
209 2 219 1 299 1 333 1 356 5 290 1 80 1 361 1 6 5 187 1 60 2 335 2 176 1 61 2 364 1 216 1 167 1 239 2 168 1 
317 1 300 1 
317 2 195 1 342 1 69 2 115 1 344 1 281 2 228 1 50 2 
28 1 100 1 58 1 
317 1 183 1 24 1 278 1 164 1 280 1 94 1 10 1 205 1 31 1 
183 1 24 1 278 1 312 1 28 1 342 1 69 1 164 1 94 1 17 1 344 1 10 1 281 1 50 1 
317 1 342 3 69 3 115 1 344 3 281 3 50 3 312 1 
342 1 69 1 344 1 281 1 36 1 31 1 50 1 
342 1 69 1 195 1 115 1 344 1 281 1 31 1 228 1 50 1 
195 1 24 1 75 1 201 1 356 1 311 1 312 1 82 1 6 1 336 1 9 1 270 2 10 1 227 1 31 1 316 1 126 1 317 1 183 1 92 1 112 1 278 1 214 1 342 3 69 3 164 1 94 1 115 2 189 1 344 3 17 1 44 1 281 3 166 1 328 1 74 1 50 3 348 1 
317 1 342 1 69 2 306 1 344 1 376 1 281 2 50 2 312 1 
195 1 356 1 112 1 312 2 6 1 342 3 69 3 115 1 176 1 17 1 344 3 189 1 9 1 44 1 281 3 328 1 20 1 31 1 50 3 
28 1 342 2 69 2 195 1 115 1 344 2 281 2 100 1 50 2 312 1 
317 1 183 1 24 1 278 1 164 1 94 1 10 1 205 1 31 1 
317 1 183 1 117 1 351 1 53 1 233 1 278 1 69 1 164 1 8 1 39 1 94 1 313 1 43 1 281 1 
193 2 1 1 118 1 75 2 201 1 311 1 202 1 58 2 243 1 246 1 359 1 81 1 82 1 28 2 203 1 270 2 316 1 92 4 277 1 214 1 374 1 343 1 166 1 100 2 
342 1 69 1 344 1 44 1 281 1 135 1 31 1 50 1 
317 1 195 1 312 2 342 4 71 1 69 5 306 1 115 1 344 4 17 1 376 1 281 5 99 1 50 5 
342 2 69 2 344 2 281 2 135 1 36 1 31 1 50 2 
29 1 355 1 
29 1 355 1 
41 1 353 1 
41 1 353 1 
41 1 353 1 
29 1 327 1 355 1 
29 1 355 1 178 1 
360 1 29 2 253 1 41 1 353 1 355 2 
29 1 327 1 355 1 
29 1 327 1 355 1 
29 1 355 1 93 1 
29 1 355 1 93 1 
29 1 355 1 93 1 
129 2 298 1 25 1 110 1 275 1 355 2 356 2 54 2 152 3 57 1 235 1 360 1 6 2 29 2 176 1 363 2 46 1 47 2 191 2 
317 1 296 1 129 1 160 1 275 1 355 1 356 1 14 1 54 1 232 1 242 1 152 1 322 1 6 1 29 1 342 2 69 2 344 2 281 2 178 1 47 1 50 2 207 1 191 1 
65 1 40 1 186 1 
368 1 65 1 40 1 
368 1 65 3 269 1 95 1 186 2 289 1 
368 1 65 2 269 1 72 1 186 1 289 1 
368 1 65 2 269 2 186 1 289 1 
219 1 356 5 241 1 173 1 202 1 359 1 81 1 361 1 6 5 60 1 335 1 61 4 176 2 362 1 364 3 181 2 209 1 130 1 299 1 370 3 14 1 230 2 232 1 37 1 257 2 322 1 323 1 326 1 343 1 307 1 167 2 239 1 
219 1 287 1 354 1 356 9 173 3 202 3 359 3 81 3 6 9 361 1 60 2 292 1 335 2 61 7 176 5 362 2 364 8 294 1 181 6 209 6 130 2 299 1 370 9 67 5 256 1 230 6 322 4 323 3 68 1 326 1 343 3 236 5 167 6 239 2 168 1 
219 1 356 3 173 1 202 1 359 1 81 1 6 3 60 1 335 1 176 3 61 2 362 1 364 3 181 2 130 1 370 4 230 2 37 1 322 1 257 1 323 2 343 1 307 1 239 1 167 2 168 1 
219 1 287 1 356 4 173 2 202 2 359 2 81 2 6 4 60 1 335 1 176 4 362 1 61 3 364 5 294 1 181 4 130 1 370 7 230 4 37 1 322 2 257 2 323 3 68 1 343 2 307 1 239 1 167 4 168 1 
293 1 43 1 300 1 
43 1 59 1 
15 1 
43 1 53 1 
293 2 351 1 84 1 43 3 53 1 315 1 
351 1 43 1 53 1 
208 1 43 1 
142 1 193 4 285 1 75 3 210 1 172 1 357 1 92 7 212 1 202 1 277 2 246 3 343 1 215 1 248 1 365 1 64 2 
142 1 193 4 285 1 75 3 210 1 172 1 357 1 92 7 212 1 202 1 277 2 246 3 343 1 215 1 248 1 365 1 64 2 
142 1 193 4 285 1 308 1 75 3 210 1 172 1 357 1 92 7 212 1 202 1 277 2 246 3 343 1 215 1 248 1 365 1 64 2 
142 2 193 16 285 1 52 4 75 15 310 1 172 2 357 1 173 3 311 1 202 4 246 10 174 1 359 3 82 1 83 3 81 3 248 1 270 2 365 5 11 1 316 1 64 3 210 2 92 31 302 1 212 1 277 5 214 1 375 1 343 4 215 2 101 1 190 1 
193 5 142 1 171 1 285 1 75 4 172 1 357 1 311 2 202 1 246 4 82 2 270 4 365 1 316 2 64 2 254 1 210 1 92 9 212 1 277 3 214 2 343 1 215 1 101 1 
143 2 196 1 117 1 144 1 23 1 145 1 121 1 105 1 313 1 314 1 204 1 63 1 156 1 182 1 127 1 368 1 183 1 65 2 35 1 319 1 186 1 91 2 278 1 304 1 40 1 94 1 95 1 18 1 49 1 332 1 
143 3 117 1 144 1 23 1 145 1 121 1 105 1 106 1 313 1 204 2 87 1 63 1 156 1 182 1 229 1 127 1 368 1 183 1 65 2 35 1 319 1 186 1 91 3 278 1 40 1 94 1 95 1 18 1 49 1 332 1 
143 2 117 1 23 1 144 1 121 1 106 1 313 1 204 2 87 1 63 1 182 1 127 1 368 1 183 1 65 2 35 1 319 1 186 1 91 2 278 1 40 1 94 1 95 1 49 1 332 1 
143 1 117 1 21 1 144 2 23 2 22 1 145 1 53 1 121 2 313 1 229 1 183 1 89 1 35 2 91 1 113 1 278 1 325 1 164 1 94 1 43 1 18 1 262 1 
143 1 196 1 117 1 144 1 23 1 145 1 121 1 105 1 313 1 87 1 63 1 156 1 127 1 368 1 183 1 65 2 35 1 186 1 91 1 278 1 304 1 40 1 94 1 95 1 18 1 332 1 
259 1 
194 1 199 1 2 1 240 1 53 1 150 1 104 1 6 4 60 1 335 1 9 1 159 1 209 4 297 1 299 1 112 1 113 1 114 3 164 2 69 1 264 1 167 2 117 1 119 1 356 4 358 1 78 1 361 2 175 1 313 1 364 2 30 1 31 1 180 1 367 1 183 2 130 1 273 1 185 1 370 1 278 2 323 1 325 1 136 1 94 2 43 1 376 1 44 1 281 1 328 1 329 1 239 1 50 1 
199 1 356 3 150 1 104 1 175 1 6 3 361 1 9 1 30 1 31 1 159 1 209 2 131 1 112 1 114 2 136 1 69 1 376 1 44 1 281 1 328 1 50 1 
219 1 199 1 356 3 150 1 104 1 175 1 6 3 361 1 176 1 9 1 31 1 159 1 209 1 131 1 112 1 114 3 136 1 69 1 376 1 44 1 281 1 328 1 50 1 264 1 
219 1 199 1 356 3 150 1 104 1 78 1 361 1 175 1 6 3 176 1 9 1 30 1 31 1 159 1 209 2 131 1 112 1 114 3 136 1 69 1 376 1 44 1 281 1 328 1 50 1 264 1 
199 1 2 2 150 1 104 1 6 5 60 1 291 1 335 1 9 1 159 1 209 7 297 2 299 1 112 1 114 6 69 1 264 4 167 1 219 5 220 1 119 1 356 5 358 2 78 4 79 1 361 3 175 1 176 5 364 1 30 4 31 1 180 1 131 1 185 2 323 2 136 1 137 1 96 1 44 1 376 1 281 1 328 1 50 1 239 1 
199 1 2 2 150 1 104 1 6 4 60 1 335 1 9 1 159 1 209 4 297 2 299 1 112 1 114 4 69 1 167 1 264 2 219 1 119 1 356 4 358 2 78 2 175 1 361 2 176 2 364 1 30 2 31 1 180 1 367 1 185 2 370 2 323 2 136 1 44 1 376 1 281 1 328 1 50 1 239 1 
219 1 220 1 199 1 2 2 119 1 356 4 358 2 150 1 104 1 78 2 361 2 175 1 6 4 291 1 60 1 335 1 176 1 9 1 364 1 30 2 31 1 180 1 159 1 209 4 297 2 185 2 299 1 112 1 114 4 323 2 136 1 69 1 96 1 376 1 44 1 281 1 328 1 264 2 167 1 50 1 239 1 
219 1 220 1 199 1 2 2 119 1 356 4 358 2 150 1 104 1 78 2 361 2 175 1 6 4 291 1 60 1 335 1 176 1 9 1 364 1 30 2 31 1 180 1 159 1 209 4 297 2 185 2 299 1 112 1 114 4 323 2 136 1 69 1 96 1 376 1 44 1 281 1 328 1 264 2 167 1 50 1 239 1 
219 1 197 2 199 1 2 2 119 1 356 4 150 1 104 1 78 2 224 1 361 2 175 1 6 4 291 1 60 1 335 1 176 1 225 2 9 1 364 1 30 2 31 1 159 1 209 4 339 1 185 2 299 1 370 2 112 1 114 4 136 1 69 1 261 1 376 1 44 1 281 1 328 1 264 2 167 1 50 1 239 1 
219 1 220 1 199 1 2 2 119 1 356 4 358 2 150 1 104 1 78 3 361 2 175 1 6 4 291 1 60 1 335 1 176 1 9 1 364 1 30 3 31 1 180 1 159 1 209 5 297 2 185 2 299 1 112 1 114 5 323 2 136 1 137 1 69 1 96 1 376 1 44 1 281 1 328 1 167 1 239 1 50 1 264 3 
219 1 220 1 199 1 2 2 119 1 356 4 358 2 150 1 104 1 78 3 361 2 175 1 6 4 291 1 60 1 335 1 176 1 9 1 364 1 30 3 31 1 180 1 159 1 209 5 297 2 185 2 299 1 112 1 114 5 323 2 136 1 137 1 69 1 96 1 376 1 44 1 281 1 328 1 167 1 239 1 50 1 264 3 
219 1 197 2 199 1 2 2 119 1 356 4 150 1 104 1 78 2 224 1 361 2 175 1 6 4 60 1 335 1 176 1 225 2 9 1 364 1 30 2 31 1 367 1 159 1 209 4 185 2 299 1 370 2 112 1 114 4 136 1 69 1 376 1 44 1 281 1 328 1 264 2 167 1 239 1 50 1 
142 1 193 3 285 1 75 3 201 1 172 1 357 1 311 1 202 1 58 1 243 1 246 2 28 1 82 1 270 2 316 1 64 1 317 2 300 1 92 6 212 1 277 2 214 1 343 1 166 1 100 1 
193 8 284 1 52 3 75 6 201 1 173 2 311 2 58 11 202 1 246 2 174 1 359 2 82 2 28 11 83 3 81 1 154 1 336 1 270 4 365 1 316 2 33 1 317 1 211 1 231 1 92 14 277 1 214 2 303 1 375 1 343 2 166 2 100 4 
193 1 24 1 75 1 201 1 311 1 312 1 26 1 82 1 336 1 177 1 10 1 270 2 316 1 317 1 33 1 183 1 211 1 92 2 278 1 214 1 342 1 164 1 69 1 94 1 280 1 344 1 17 1 281 1 166 1 100 1 381 1 50 1 
193 3 51 1 24 1 75 4 201 2 173 1 311 2 202 1 58 3 246 1 312 1 359 1 81 1 28 3 82 2 247 1 336 1 10 1 270 4 316 2 183 1 109 1 211 1 134 1 92 7 277 1 278 1 214 2 342 1 69 1 164 1 94 1 343 1 344 1 17 1 73 1 281 1 166 2 100 3 50 1 348 1 
265 1 193 1 117 2 75 1 201 2 53 2 311 2 243 1 312 1 82 2 7 1 313 2 336 1 314 1 270 4 249 1 87 1 251 1 316 2 33 1 183 7 92 2 113 1 278 8 214 2 325 1 163 1 342 1 69 1 164 2 94 8 344 1 43 3 45 2 281 1 166 2 380 1 330 1 50 1 
0 1 193 1 195 1 75 2 201 1 173 1 311 1 58 1 202 1 246 1 359 1 28 1 82 1 81 1 270 2 316 1 211 1 92 3 277 1 214 1 342 1 69 1 115 1 343 1 344 1 281 1 166 1 100 1 50 1 
193 2 1 1 201 1 92 2 311 1 58 1 246 1 243 1 214 1 359 1 28 1 82 1 343 1 270 2 365 1 166 1 100 1 316 1 
75 2 201 1 92 2 311 1 277 1 58 1 202 1 246 1 243 1 214 1 28 1 82 1 81 1 270 2 203 1 166 1 100 1 316 1 
193 2 75 2 201 1 173 1 311 1 58 2 202 1 243 1 246 2 359 1 82 1 28 2 81 1 270 2 365 1 316 1 92 4 277 1 214 1 343 1 166 1 100 2 
193 2 1 1 201 1 92 2 311 1 58 1 246 1 214 1 359 1 28 1 7 1 82 1 343 1 270 2 365 1 166 1 100 1 316 1 
75 2 201 1 92 2 311 1 277 1 58 1 202 1 246 1 214 1 28 1 7 1 82 1 81 1 270 2 203 1 166 1 100 1 316 1 
193 2 75 2 201 1 173 1 311 1 58 2 202 1 246 2 359 1 82 1 7 1 28 2 81 1 270 2 365 1 316 1 92 4 277 1 214 1 343 1 166 1 100 2 
193 2 75 2 201 1 173 1 311 1 58 2 202 1 246 2 359 1 82 1 28 2 81 1 270 2 365 1 316 1 92 4 277 1 214 1 343 1 166 1 100 2 
193 1 24 1 75 1 201 1 311 1 82 1 336 1 270 2 10 1 205 1 31 1 316 1 33 1 317 1 183 1 92 2 278 1 214 1 164 1 94 1 166 1 348 1 
193 1 117 1 351 1 75 1 201 1 53 1 311 1 82 1 8 1 313 1 336 1 270 2 316 1 33 1 317 1 183 1 274 1 92 2 233 1 278 1 214 1 39 1 164 1 69 1 94 1 43 1 281 1 166 1 
193 2 75 2 201 1 173 1 311 1 58 2 202 1 246 2 359 1 82 1 28 2 81 1 270 2 365 1 316 1 211 1 92 4 277 1 214 1 343 1 166 1 100 2 
193 1 24 1 75 2 201 1 173 1 311 1 202 1 58 1 246 1 359 1 28 1 82 1 81 1 247 1 10 1 314 1 270 2 316 1 183 1 92 3 277 1 278 1 214 1 94 1 343 1 166 1 100 1 348 1 
193 2 195 1 75 1 201 1 173 1 311 1 202 1 58 1 246 1 359 1 81 1 82 1 27 1 28 1 270 2 365 1 316 1 211 1 92 3 214 1 342 1 69 1 115 1 343 1 344 1 281 1 166 1 100 1 50 1 
142 1 193 20 285 1 52 4 171 1 288 1 75 21 172 1 3 1 357 1 4 1 173 4 311 3 202 5 244 1 246 8 174 1 359 4 82 3 83 3 81 4 270 6 271 1 365 4 124 1 366 1 64 1 13 4 316 3 372 1 92 41 212 1 277 4 214 3 38 2 375 3 70 1 343 5 138 1 19 1 48 1 101 1 192 1 
142 1 193 20 285 1 52 4 171 1 288 1 75 18 172 1 3 1 357 1 4 1 173 4 311 4 202 4 244 1 246 7 174 1 359 4 82 4 83 3 81 3 270 8 271 1 365 3 124 1 366 1 64 1 13 4 316 4 372 1 92 38 212 1 277 4 214 4 38 2 375 3 70 1 343 5 138 1 19 1 48 1 101 2 192 1 
142 1 193 27 285 1 52 4 171 1 288 1 75 25 172 1 357 1 4 1 173 7 311 2 202 8 244 1 246 14 174 2 359 7 82 2 83 4 81 7 270 4 271 1 365 7 124 1 366 1 64 1 13 4 316 2 372 1 92 52 212 1 277 7 214 2 303 2 38 1 375 2 70 1 343 8 138 1 19 1 101 1 192 1 
193 9 52 2 171 1 75 10 3 1 4 1 173 3 311 2 202 3 245 1 246 6 174 1 359 3 82 2 83 1 81 3 270 4 271 1 365 3 124 1 366 2 13 2 316 2 92 19 277 3 214 2 38 1 375 1 343 3 192 1 
193 14 171 1 52 2 288 1 75 12 4 1 173 3 311 3 202 2 246 4 244 1 359 3 82 3 83 2 81 2 270 6 365 2 271 2 124 1 366 1 13 4 316 3 372 1 92 26 277 2 214 3 38 2 375 2 70 1 343 3 138 1 19 1 101 2 192 1 
360 1 129 1 29 1 25 1 110 1 147 1 355 1 47 1 54 1 191 1 
178 1 242 1 
129 1 279 1 29 1 355 1 148 1 98 1 47 1 54 1 191 1 
129 1 298 1 25 1 110 1 275 1 355 1 356 1 54 1 152 2 57 1 360 1 6 1 29 1 176 1 363 1 46 1 47 1 191 1 
129 1 298 1 25 1 110 1 275 1 355 1 356 1 54 1 152 2 57 1 360 1 6 1 29 1 176 1 363 1 46 1 47 1 191 1 
129 1 298 1 25 1 110 1 275 1 355 1 356 1 54 1 152 2 57 1 360 1 6 1 29 1 176 1 363 1 46 1 47 1 191 1 
253 1 327 1 341 1 
253 1 327 1 341 1 
55 1 93 1 
253 1 55 1 93 1 
160 1 207 1 
355 1 356 1 54 1 242 1 57 1 152 1 6 1 29 1 61 1 363 1 123 1 178 1 207 1 317 1 129 1 296 1 160 1 14 1 232 1 322 1 342 2 69 2 344 2 281 2 47 1 50 2 191 1 
327 1 341 1 
253 1 55 1 93 1 
265 1 193 1 117 1 75 1 201 1 53 1 311 1 82 1 313 1 336 1 155 1 270 2 338 1 251 1 316 1 33 1 183 2 211 1 92 2 278 2 16 1 214 1 69 2 94 2 260 1 43 1 45 2 281 2 166 1 50 2 116 1 
368 1 127 1 183 2 65 2 117 1 186 1 278 2 121 1 105 1 162 1 40 1 94 2 95 1 313 1 122 1 314 1 87 1 63 1 125 1 
368 1 127 1 183 1 65 2 117 1 186 1 278 1 121 1 105 1 40 1 94 1 95 1 313 1 12 1 87 1 63 1 125 1 
183 1 89 1 117 1 53 1 113 1 278 1 121 1 162 1 325 1 164 1 94 1 313 1 43 1 32 1 
368 1 127 1 183 1 65 2 117 1 186 1 278 1 121 1 105 1 162 1 40 1 94 1 95 1 122 1 313 1 87 1 63 1 125 1 
206 1 
80 1 219 1 176 1 300 1 364 1 216 1 167 1 
219 1 356 1 358 1 361 1 6 1 60 1 335 1 176 2 364 1 180 1 209 1 297 1 299 1 370 1 323 1 167 1 239 1 
194 1 102 2 53 3 151 1 5 1 202 2 59 3 6 5 60 4 335 4 293 2 337 2 9 2 209 5 208 2 109 2 299 4 255 2 164 1 343 2 345 1 165 2 216 1 167 8 219 2 117 4 351 3 356 5 223 2 173 2 77 1 268 1 80 1 359 2 361 3 81 2 176 8 313 3 314 1 364 9 315 1 181 6 128 2 183 3 130 2 318 2 132 2 370 12 230 6 278 3 323 6 94 3 43 10 239 4 
194 1 219 2 52 1 102 2 309 1 356 1 173 2 202 2 244 1 359 2 6 1 361 1 83 1 81 2 60 2 335 2 176 5 364 8 157 1 181 5 209 1 130 1 299 2 255 1 370 6 372 1 230 5 323 3 375 1 70 1 343 2 138 1 19 1 239 2 167 5 
142 1 350 1 170 1 102 2 356 1 172 1 357 1 202 1 6 1 60 1 335 1 364 2 31 1 299 1 255 1 133 1 36 1 342 1 69 1 343 2 115 1 96 1 344 1 281 1 74 1 239 1 167 2 50 1 
219 1 299 1 80 1 60 1 335 1 176 1 216 1 364 1 239 1 167 1 
109 1 102 2 255 1 370 10 230 5 173 2 202 2 359 2 323 5 81 2 343 2 176 5 364 5 167 5 181 5 
209 1 6 1 361 1 219 1 176 1 356 1 
194 2 117 1 240 1 356 3 53 1 151 2 361 2 6 3 60 2 335 2 313 1 364 2 209 4 88 1 183 4 130 2 299 1 113 1 278 4 325 1 164 2 94 4 42 1 43 1 345 1 329 1 239 2 167 2 168 1 
317 1 183 1 24 1 75 1 201 1 92 1 311 1 278 1 214 1 82 1 342 2 69 2 164 1 94 1 115 2 336 1 344 2 270 2 10 1 281 2 166 1 74 1 50 2 316 1 348 1 126 1 
130 1 219 2 194 1 299 1 370 4 230 2 323 2 60 1 335 1 176 4 364 1 167 2 239 1 64 1 181 2 
129 1 179 1 47 1 
129 1 110 1 76 1 47 1 207 1 
129 1 179 1 47 1 
129 1 179 1 47 1 
129 1 47 1 140 1 
129 1 47 1 140 1 
129 1 47 1 140 1 
129 1 47 1 
29 1 355 1 
193 4 142 1 52 1 171 1 285 1 75 4 172 1 357 1 311 1 202 1 244 1 246 2 83 1 82 1 270 2 64 1 316 1 92 8 212 1 277 2 214 1 375 1 343 1 
142 1 193 6 285 1 52 2 171 1 75 5 172 1 357 1 173 1 311 2 202 1 244 1 246 3 174 1 359 1 82 2 83 1 270 4 365 1 295 1 64 1 316 2 92 11 212 1 277 2 214 2 375 1 343 2 
142 1 193 9 285 1 52 1 171 1 75 10 172 1 357 1 173 2 311 3 202 3 244 1 246 4 359 2 83 1 82 3 81 2 270 6 365 1 295 1 64 1 316 3 372 1 92 19 212 1 277 3 214 3 375 1 70 1 343 3 138 1 19 1 101 1 
142 1 193 10 285 1 52 1 171 1 75 7 172 1 357 1 173 2 311 3 202 2 244 1 246 5 359 2 83 1 82 3 81 1 270 6 365 2 295 1 64 1 316 3 372 1 92 17 212 1 277 3 214 3 375 1 70 1 343 3 138 1 19 1 101 1 
193 4 142 1 52 1 171 1 285 1 75 4 172 1 357 1 311 1 202 1 244 1 246 2 83 1 82 1 270 2 64 1 316 1 92 8 212 1 277 2 214 1 375 1 343 1 
193 6 171 1 52 1 75 6 372 1 92 12 173 2 311 1 277 1 202 2 246 2 214 1 244 1 359 2 81 2 82 1 83 1 375 1 70 1 343 2 138 1 270 2 365 1 19 1 316 1 
142 1 193 10 285 1 52 1 171 1 75 8 172 1 357 1 173 2 311 4 202 2 244 1 246 5 359 2 82 4 83 1 81 1 270 8 365 2 295 1 64 1 316 4 372 1 92 18 212 1 277 3 214 4 375 1 70 1 343 3 138 1 19 1 101 2 
193 9 52 1 171 1 75 7 3 1 173 3 311 4 202 2 244 1 246 6 359 3 82 4 83 1 81 2 270 8 365 3 316 4 372 1 92 16 277 3 214 4 375 1 70 1 343 3 138 1 19 1 101 2 
142 3 193 3 285 2 75 4 172 3 92 7 357 1 212 1 202 1 277 3 246 6 343 1 365 3 
142 1 193 10 285 1 52 1 171 1 75 8 172 1 357 1 3 1 173 2 311 4 202 2 244 1 246 4 359 2 82 4 83 1 81 1 270 8 365 1 64 1 316 4 372 1 92 18 212 1 277 3 214 4 375 1 70 1 343 3 138 1 19 1 101 2 
193 4 142 1 285 1 75 4 172 1 357 1 92 8 311 2 212 1 202 1 277 2 246 3 214 2 82 2 343 1 270 4 365 1 101 1 64 1 316 2 
142 1 193 3 285 1 75 3 300 1 172 1 357 1 92 6 212 1 277 2 202 1 246 2 343 1 64 1 
193 2 75 2 92 4 173 1 311 1 277 1 202 1 246 2 214 1 359 1 81 1 82 1 343 1 270 2 365 1 295 1 316 1 
193 3 52 2 75 4 92 7 173 1 277 1 202 1 246 2 174 1 359 1 81 1 83 1 375 1 343 1 365 1 
142 2 193 11 285 1 52 2 75 12 172 2 357 1 173 2 311 2 202 3 246 9 359 2 174 1 83 2 81 2 82 2 270 4 365 4 64 1 316 2 231 1 320 1 92 23 212 1 277 5 214 2 303 1 343 3 101 2 
52 1 75 1 92 1 
193 1 83 1 92 1 
193 3 109 1 75 3 92 6 173 1 311 1 202 1 277 2 214 1 246 3 359 1 82 1 81 1 343 1 270 2 365 1 295 1 316 1 
193 6 171 1 52 1 75 6 372 1 92 12 173 2 311 1 277 1 202 2 246 2 214 1 244 1 359 2 81 2 82 1 83 1 375 1 70 1 343 2 138 1 270 2 365 1 19 1 316 1 
193 3 142 1 75 3 172 1 357 1 92 6 202 1 277 1 246 2 343 1 365 1 
193 1 142 1 285 1 75 2 172 1 320 1 92 3 311 1 212 1 277 1 246 2 214 1 82 1 270 2 365 1 101 1 316 1 
142 2 193 5 171 1 75 5 133 1 172 2 92 10 357 1 311 1 277 3 202 2 214 1 246 5 82 1 343 2 270 2 365 2 316 1 
193 2 171 1 92 2 311 1 214 1 246 1 359 1 82 1 343 1 270 2 365 1 316 1 
193 2 171 1 75 2 92 4 173 1 311 1 277 1 202 1 246 2 214 1 359 1 81 1 82 1 343 1 270 2 365 1 316 1 
142 1 193 1 171 1 75 2 320 1 172 1 3 1 92 3 311 3 277 1 214 3 246 2 82 3 270 6 365 1 101 1 316 3 
142 3 193 16 285 1 52 4 171 1 75 18 310 1 172 3 357 2 3 1 173 3 311 5 202 5 246 12 174 1 359 3 82 5 83 3 81 3 270 10 11 1 365 5 295 1 64 1 316 5 320 1 92 34 302 1 212 1 277 7 214 5 375 1 343 5 101 2 
317 1 69 1 306 1 376 1 200 1 281 1 50 1 
317 1 161 1 266 1 371 1 200 1 373 1 69 1 306 1 376 1 281 1 379 1 50 1 
325 1 183 1 117 1 164 1 94 1 313 1 43 1 300 1 53 1 113 1 278 1 
317 1 183 1 24 1 278 1 312 1 342 1 69 1 164 1 94 1 344 1 205 1 281 1 31 1 50 1 
317 1 183 1 24 1 151 1 278 1 312 1 342 1 69 1 94 1 344 1 205 1 281 1 31 1 50 1 
117 1 351 2 53 2 151 1 312 1 313 1 31 1 317 1 208 1 183 2 66 1 132 1 233 1 278 2 342 1 39 1 69 2 94 2 344 2 43 3 44 1 281 2 328 1 50 2 
219 1 117 1 351 1 356 2 53 1 151 1 59 1 6 2 293 1 176 1 313 1 85 1 9 1 250 1 209 1 208 1 183 3 66 1 132 1 278 3 164 1 94 3 43 4 
208 1 209 1 183 3 219 1 117 1 66 1 351 1 132 1 356 2 53 1 151 1 278 3 59 1 6 2 164 1 94 3 293 1 176 1 337 1 43 4 313 1 9 1 
183 1 163 1 117 1 94 1 313 1 278 1 
265 1 349 1 183 6 117 3 351 1 53 2 321 1 103 1 278 7 163 1 164 2 94 7 43 3 313 2 45 1 314 1 249 1 87 1 380 1 330 1 315 1 
193 3 142 1 285 1 24 1 75 2 201 2 172 1 357 1 311 2 58 1 202 1 246 1 312 1 28 1 82 2 247 1 270 4 314 1 10 1 64 1 316 2 317 2 183 1 211 1 92 5 212 1 277 1 278 1 214 2 16 1 342 1 69 1 94 1 343 1 344 1 281 1 73 1 166 2 50 1 348 1 
219 1 356 3 223 1 59 1 80 1 6 3 361 1 60 2 335 2 293 1 176 1 61 1 337 1 9 1 364 1 209 2 183 1 128 1 299 2 318 1 278 1 164 1 94 1 43 2 345 1 216 1 167 1 239 2 
183 2 117 2 351 1 53 1 5 1 278 2 163 1 293 1 94 2 43 2 313 1 314 1 315 1 
90 1 183 4 117 1 66 1 53 1 113 1 278 4 325 1 164 1 94 4 43 1 313 1 314 1 
349 1 183 2 117 2 351 1 146 1 53 1 151 1 103 1 56 1 278 2 120 1 94 2 43 1 313 1 
368 1 127 1 183 1 65 1 40 1 117 1 164 1 94 1 313 1 278 1 
265 1 183 2 117 1 94 2 313 1 43 1 155 1 314 1 53 1 87 1 278 2 
265 1 90 1 183 4 117 2 53 2 151 1 113 1 278 5 325 1 164 1 94 5 43 3 313 2 314 1 249 1 380 1 
265 1 90 1 183 4 117 2 369 1 53 2 151 1 113 1 278 5 325 1 164 1 94 5 43 3 313 2 314 1 249 1 
317 1 183 1 117 1 351 1 53 1 233 1 278 1 312 1 342 1 69 2 164 1 39 1 94 1 43 1 344 1 313 1 281 2 50 1 
349 1 183 1 117 2 351 1 53 1 151 1 321 1 103 1 278 1 94 1 43 1 313 1 315 1 
317 1 324 1 198 1 377 1 217 1 
317 1 219 1 267 1 198 2 356 2 112 1 6 2 324 2 176 1 61 1 188 1 189 1 9 1 44 1 377 2 217 1 328 1 31 1 272 1 
324 1 69 1 260 1 198 1 281 1 217 1 338 1 50 1 116 1 
267 1 217 1 272 1 
182 1 319 1 300 1 49 1 
182 1 143 1 319 1 145 1 91 1 18 1 49 1 
35 1 23 1 91 1 
182 1 143 3 319 1 145 1 91 3 304 1 153 1 97 1 18 1 263 1 49 1 169 2 
182 1 143 2 319 1 145 1 91 2 204 1 18 1 49 1 331 1 
141 1 143 1 65 1 145 1 186 1 91 1 304 1 40 1 18 1 346 1 49 1 
143 1 304 1 319 1 145 1 91 1 18 1 49 1 
182 1 143 1 304 1 319 2 145 1 91 1 18 1 
143 2 319 1 340 1 145 2 91 2 276 1 304 1 86 1 18 2 49 1 
182 1 283 1 141 1 143 3 184 1 319 1 352 1 145 1 91 3 304 1 204 2 18 1 49 2 
182 1 368 1 143 2 65 2 319 1 145 1 186 1 91 2 304 1 40 1 95 1 226 1 204 1 18 1 49 1 
182 1 141 1 143 4 319 1 352 1 145 2 91 4 304 1 258 1 204 2 18 2 49 2 331 1 
182 1 143 1 304 1 319 1 145 1 91 1 18 1 49 1 
182 2 141 1 143 4 319 2 352 1 145 1 91 4 213 1 153 1 204 2 18 1 263 1 49 3 169 1 
182 1 143 2 319 1 145 1 91 2 304 1 204 1 18 1 49 1 347 1 139 1 252 1 
182 1 143 3 286 1 319 1 145 1 91 3 153 1 304 1 18 1 263 2 49 1 169 2 
282 1 49 2 107 2 108 1 
143 1 304 1 145 1 91 1 18 1 111 1 
182 1 283 1 143 2 304 1 319 1 145 1 91 2 204 1 18 1 49 1 
34 1 
182 1 143 1 304 1 319 1 145 1 91 1 18 1 49 1 
283 1 182 1 143 3 304 1 319 1 145 1 91 3 204 1 18 1 49 1 169 1 
141 1 352 1 49 1 213 1 
319 1 49 1 

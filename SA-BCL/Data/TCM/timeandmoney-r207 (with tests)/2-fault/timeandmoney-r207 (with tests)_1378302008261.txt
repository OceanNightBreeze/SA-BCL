#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 1 87 1 143 4 107 5 58 1 31 2 267 2 268 1 365 1 270 1 273 1 112 3 65 1 246 2 38 9 94 2 11 1 132 1 340 1 152 2 15 9 49 6 304 2 78 1 80 1 258 1 160 1 349 2 
106 1 87 1 143 4 107 5 58 1 267 2 268 1 31 2 365 1 270 1 273 1 112 3 65 1 246 2 38 9 94 2 11 1 132 1 340 1 152 2 15 9 49 6 304 2 78 1 80 1 258 1 160 1 349 2 
106 1 87 1 143 5 107 6 58 1 267 2 268 1 31 2 365 1 270 1 273 1 112 4 65 1 246 2 38 10 94 2 11 1 132 1 340 1 152 2 15 10 49 7 304 2 78 1 80 1 258 1 160 1 349 2 
106 1 87 1 143 3 107 4 58 1 267 2 268 1 31 1 365 1 273 1 112 2 65 1 246 2 38 7 94 2 11 1 132 1 340 1 152 2 15 7 49 4 304 2 78 1 80 1 258 1 160 1 349 2 
106 1 87 1 143 2 107 3 152 1 15 4 58 1 267 1 31 2 49 3 304 1 365 1 270 1 160 1 349 1 112 1 38 4 94 1 
40 1 87 1 107 1 152 1 15 2 58 1 268 1 267 1 304 1 160 1 175 1 246 1 38 2 147 1 94 1 132 1 
87 1 143 1 107 2 15 3 58 1 49 1 304 2 78 1 160 1 112 1 246 1 38 3 94 2 
106 1 87 1 143 4 107 5 58 1 31 2 267 1 365 1 270 1 112 3 246 1 38 9 130 1 94 2 152 1 153 1 15 9 49 7 78 1 304 2 80 1 258 1 160 1 349 1 
106 1 87 1 143 4 107 5 58 1 31 2 267 1 365 1 270 1 112 3 246 1 38 9 130 1 94 2 152 1 153 1 15 9 49 7 78 1 304 2 80 1 258 1 160 1 349 1 
204 1 243 1 117 1 
204 1 308 2 309 1 
163 2 189 2 216 2 10 1 93 2 303 2 140 2 229 1 
285 1 163 2 219 2 199 1 290 1 265 1 266 2 2 1 59 1 3 1 202 1 168 1 310 1 224 1 203 2 225 1 7 1 125 1 337 1 10 1 93 3 229 1 133 1 212 2 213 1 46 1 303 3 257 1 189 2 191 1 216 2 379 1 351 1 324 2 325 1 140 2 281 1 
367 1 163 1 189 1 121 1 216 1 10 1 48 1 93 1 303 1 140 1 
163 1 306 1 154 1 303 1 5 1 111 1 367 1 204 1 243 1 260 1 19 1 93 1 211 1 282 1 
163 1 306 2 154 1 303 1 5 1 111 1 189 1 367 1 204 1 243 1 216 1 93 1 140 1 211 2 282 1 
306 1 295 1 211 1 120 1 256 1 
41 1 306 2 204 1 243 1 295 1 333 1 211 2 256 1 
306 1 295 1 211 1 
163 1 306 1 48 1 303 1 256 1 367 1 189 1 62 1 121 1 216 1 10 1 93 1 140 1 211 1 
204 1 
41 1 306 2 204 1 243 1 295 1 77 1 211 2 256 1 
13 1 41 1 357 1 306 5 232 1 135 2 235 1 16 1 256 2 269 1 157 1 204 1 243 1 244 2 295 2 227 1 131 1 211 5 355 2 
163 3 189 3 216 3 93 3 303 3 140 1 229 1 242 1 
367 1 163 1 189 1 121 1 216 1 93 1 303 1 
367 1 163 1 189 1 216 1 377 1 93 1 303 1 140 1 66 1 
285 1 163 3 306 1 219 1 290 1 265 1 266 2 2 1 59 1 3 1 242 1 168 1 5 1 310 1 111 1 367 1 203 1 225 1 7 1 125 1 337 1 10 1 93 4 66 1 229 1 276 1 211 1 133 1 212 1 213 1 46 1 154 1 303 4 238 1 257 1 189 3 379 1 216 3 351 1 324 1 140 2 281 1 282 1 102 1 
100 1 163 2 189 1 19 1 216 1 93 2 303 2 229 1 242 1 
163 3 306 1 154 1 303 3 238 1 242 2 5 1 111 1 367 1 189 3 204 1 216 3 93 3 140 1 66 1 141 1 211 1 276 1 282 1 
163 2 189 2 356 1 341 1 216 2 93 2 303 2 140 1 66 1 242 1 
133 1 219 1 212 1 46 1 2 1 303 1 59 1 3 1 168 1 203 1 225 1 125 1 351 1 93 1 229 1 
219 1 212 1 46 1 2 1 303 1 59 1 29 1 363 1 168 1 203 1 225 1 125 1 351 1 93 1 229 1 
285 1 356 2 290 2 266 2 310 1 224 2 312 1 7 1 35 1 337 1 315 1 274 1 114 1 12 1 374 1 341 2 76 1 257 1 215 1 193 1 324 4 21 1 281 1 162 2 
111 1 367 1 163 1 189 1 375 1 216 1 93 1 303 1 
117 1 229 1 
163 2 377 1 303 2 189 1 216 1 93 2 66 1 140 1 229 2 
356 1 341 1 162 1 
133 1 219 1 212 1 234 1 46 1 2 1 303 1 59 1 3 1 168 1 203 1 225 1 125 1 351 1 93 1 229 1 
133 1 163 1 356 1 219 1 212 1 46 1 2 1 303 2 59 1 238 1 3 1 242 1 168 1 189 1 203 1 225 1 125 1 216 1 351 1 93 2 
104 1 163 5 303 5 238 1 242 2 100 1 189 4 19 1 216 4 93 5 66 1 140 1 229 1 241 1 
367 1 163 2 189 2 375 1 121 1 216 2 93 2 303 2 
335 1 343 1 320 1 
173 1 343 1 320 1 
173 1 343 1 320 1 
173 1 343 1 320 1 
343 1 320 1 
343 1 320 1 
74 1 99 1 
74 1 99 1 
74 1 99 1 
335 1 343 1 320 1 
335 1 343 1 320 1 
220 1 343 1 320 1 
74 1 343 2 9 1 99 1 57 1 320 2 
96 1 306 2 307 1 72 3 151 1 342 2 343 2 320 2 255 2 187 1 158 2 137 1 206 1 204 1 205 1 9 1 353 2 195 2 211 2 
163 2 306 1 220 1 6 1 170 1 205 1 93 2 229 1 211 1 250 1 230 1 72 1 342 1 343 1 45 1 320 1 303 2 189 2 158 1 216 2 353 1 195 1 217 1 198 1 
349 1 152 1 267 1 
152 1 267 1 147 1 
278 1 171 1 8 1 349 2 267 3 147 1 
278 1 8 1 349 1 210 1 267 2 147 1 
278 1 8 2 349 1 267 2 147 1 
103 1 330 2 306 5 308 3 309 1 27 1 6 1 312 1 294 1 204 2 243 1 244 1 295 1 313 2 113 1 274 1 370 1 131 1 211 5 250 1 41 1 13 3 252 2 301 1 135 1 76 1 16 2 256 4 192 1 21 1 217 1 355 1 
103 1 330 2 55 1 62 1 204 3 243 1 244 1 295 4 10 1 113 1 211 6 250 2 13 3 301 1 252 2 76 1 303 1 16 2 256 5 120 3 121 1 216 1 161 3 21 1 355 1 163 1 306 6 308 3 309 1 367 1 312 1 93 1 370 1 274 1 131 1 41 1 318 1 135 1 48 1 189 1 196 1 140 1 
330 2 306 3 308 4 309 2 27 1 312 1 204 3 294 1 243 1 244 1 313 1 227 1 113 1 370 1 274 1 211 3 250 1 13 3 301 1 252 2 135 1 76 1 16 2 256 2 21 1 355 1 
330 4 306 4 165 1 308 7 309 3 27 1 312 2 204 4 294 1 243 1 244 1 313 2 227 1 113 2 370 1 274 2 211 4 250 2 13 5 300 1 42 1 252 4 301 1 135 1 76 2 16 4 256 3 21 2 355 1 
125 1 2 1 
225 1 125 1 2 3 223 2 179 1 148 1 
117 1 2 1 223 1 
331 1 2 1 
73 1 
225 1 125 1 2 1 
18 1 2 1 
287 1 288 1 200 1 290 3 76 1 167 1 237 1 185 1 28 1 291 1 224 4 312 1 215 3 324 7 114 2 327 2 249 1 
287 1 288 1 200 1 290 3 76 1 167 1 237 1 185 1 28 1 291 1 224 4 312 1 215 3 324 7 114 2 327 2 249 1 
287 1 288 1 200 1 290 3 76 1 167 1 237 1 185 1 28 1 291 1 224 4 312 1 215 3 323 1 324 7 114 2 327 2 249 1 
285 1 288 2 287 2 200 1 144 1 264 3 290 15 167 1 266 2 28 2 291 1 224 16 312 4 7 1 113 3 274 3 114 5 249 5 150 1 317 1 183 1 76 4 237 1 185 2 257 1 348 1 138 4 215 10 324 31 22 1 327 3 21 3 328 1 281 1 
54 1 285 2 287 1 288 1 200 1 290 4 76 1 266 4 237 1 185 1 28 1 291 1 257 2 224 5 312 1 7 2 215 4 324 9 354 1 114 3 327 2 328 1 249 1 281 2 
219 1 221 1 87 1 289 1 107 1 89 1 58 1 267 2 293 1 168 1 203 1 171 1 271 1 246 1 92 1 38 2 147 1 94 1 212 1 43 1 152 1 15 2 49 1 304 1 155 1 160 1 214 1 349 1 351 1 197 1 
219 1 289 1 107 1 108 1 89 1 58 1 267 2 4 1 293 1 168 1 171 1 203 1 246 1 92 1 38 3 147 1 94 1 212 1 43 1 152 1 15 3 49 2 304 1 119 1 155 1 160 1 214 1 349 1 351 1 197 1 
219 1 289 1 107 1 108 1 89 1 58 1 267 2 4 1 293 1 168 1 203 1 171 1 246 1 38 2 147 1 212 1 43 1 152 1 15 2 49 2 160 1 214 1 349 1 351 1 197 1 
122 1 181 1 219 1 212 1 43 2 319 1 15 1 2 1 59 1 119 1 304 1 168 1 203 1 61 1 214 2 52 1 125 1 351 1 246 2 38 1 85 1 94 1 197 2 
219 1 212 1 289 1 87 1 43 1 89 1 108 1 152 1 15 1 267 2 155 1 304 1 168 1 293 1 171 1 203 1 214 1 271 1 349 1 351 1 92 1 246 1 38 1 147 1 94 1 197 1 
134 1 
284 2 110 1 2 1 59 2 292 1 5 1 111 1 203 2 204 2 243 1 244 1 295 6 211 5 13 2 298 1 212 2 14 2 154 1 345 4 344 1 303 1 254 1 16 2 347 1 260 1 19 1 305 1 352 2 351 1 355 1 163 1 306 5 219 2 308 2 309 2 168 1 367 1 311 1 90 1 125 1 226 2 370 1 93 1 176 1 131 1 373 2 41 3 319 1 135 1 47 1 51 2 52 1 240 2 101 1 282 1 
163 1 306 3 110 1 5 1 111 1 367 1 90 1 295 2 93 1 211 3 41 1 154 1 345 2 344 1 303 1 77 1 347 1 260 1 19 1 240 1 101 1 282 1 
163 1 306 3 110 1 5 1 111 1 367 1 90 1 204 1 243 1 226 1 295 1 93 1 211 3 41 1 154 1 345 3 344 1 303 1 77 1 347 1 260 1 19 1 101 1 282 1 
163 1 306 3 110 1 5 1 111 1 367 1 90 1 204 1 243 1 226 1 295 2 93 1 211 3 41 1 14 1 154 1 345 3 344 1 77 1 303 1 347 1 260 1 19 1 240 1 101 1 282 1 
163 2 306 3 110 1 5 1 111 1 367 2 62 1 90 1 369 1 204 1 243 1 295 2 10 1 93 2 211 3 41 1 14 1 48 1 154 1 345 2 344 1 77 1 303 2 347 1 189 1 121 1 260 1 19 1 216 1 240 1 140 1 101 1 282 1 
284 2 163 1 306 4 308 2 309 2 110 1 5 1 111 1 367 1 311 1 90 1 204 2 243 1 226 2 244 1 295 4 93 1 131 1 211 4 41 2 373 2 13 1 14 2 135 1 47 1 154 1 345 4 344 1 303 1 16 1 51 2 347 1 260 1 19 1 305 1 240 2 352 2 101 1 355 1 282 1 
284 2 163 1 306 4 309 2 110 1 5 1 111 1 311 1 367 1 90 1 204 1 243 1 226 2 244 1 295 4 93 1 211 4 131 1 41 2 373 2 13 1 14 2 233 1 376 1 135 1 47 1 154 1 345 4 344 1 303 1 16 1 51 2 347 1 260 1 19 1 240 2 352 2 326 1 101 1 282 1 355 1 
284 2 163 1 306 4 309 2 110 1 5 1 111 1 311 1 367 1 90 1 204 1 243 1 226 2 244 1 295 4 93 1 211 4 131 1 41 2 373 2 13 1 14 2 233 1 376 1 135 1 47 1 154 1 345 4 344 1 303 1 16 1 51 2 347 1 260 1 19 1 240 2 352 2 326 1 101 1 282 1 355 1 
163 1 306 4 308 2 110 1 30 1 146 2 5 1 111 1 367 1 90 1 204 1 172 1 243 1 226 2 244 1 295 4 93 1 39 1 211 4 131 1 41 2 13 1 14 2 116 2 233 1 135 1 47 1 154 1 345 4 344 1 303 1 16 1 51 2 347 1 260 1 19 1 240 2 352 2 101 1 282 1 355 1 
284 2 163 1 306 4 309 2 110 1 5 1 111 1 311 1 367 1 90 1 204 1 243 1 244 1 226 3 295 5 93 1 131 1 211 4 41 2 373 2 13 1 70 1 14 3 233 1 376 1 135 1 47 1 154 1 345 5 344 1 303 1 16 1 51 2 347 1 260 1 19 1 352 2 240 3 326 1 101 1 355 1 282 1 
284 2 163 1 306 4 309 2 110 1 5 1 111 1 311 1 367 1 90 1 204 1 243 1 244 1 226 3 295 5 93 1 131 1 211 4 41 2 373 2 13 1 70 1 14 3 233 1 376 1 135 1 47 1 154 1 345 5 344 1 303 1 16 1 51 2 347 1 260 1 19 1 352 2 240 3 326 1 101 1 355 1 282 1 
163 1 306 4 308 2 110 1 146 2 5 1 111 1 367 1 90 1 204 1 243 1 226 2 244 1 295 4 93 1 39 1 131 1 211 4 41 2 13 1 14 2 116 2 135 1 47 1 154 1 345 4 344 1 303 1 16 1 51 2 347 1 260 1 19 1 305 1 240 2 352 2 101 1 355 1 282 1 
12 1 285 1 356 1 341 1 266 2 257 1 310 1 224 2 312 1 7 1 215 1 35 1 337 1 324 2 274 1 249 1 162 1 281 1 
285 1 356 1 374 1 341 1 290 2 76 1 266 2 257 1 310 1 7 1 215 1 35 1 337 1 324 2 114 1 21 1 162 1 281 1 
285 1 356 2 341 2 290 2 76 1 266 2 257 1 310 1 224 2 312 1 7 1 215 2 35 1 337 1 113 1 324 4 274 1 114 1 21 1 249 1 162 2 281 1 
12 1 285 1 356 1 341 1 266 2 239 1 257 1 310 1 224 2 312 1 7 1 215 1 337 1 324 2 274 1 249 1 162 1 281 1 
285 1 356 1 374 1 341 1 290 2 76 1 266 2 239 1 257 1 310 1 7 1 215 1 337 1 324 2 114 1 21 1 162 1 281 1 
285 1 356 2 341 2 290 2 76 1 266 2 239 1 257 1 310 1 224 2 312 1 7 1 215 2 337 1 113 1 324 4 274 1 114 1 21 1 249 1 162 2 281 1 
285 1 356 2 341 2 290 2 76 1 266 2 257 1 310 1 224 2 312 1 7 1 215 2 337 1 113 1 274 1 324 4 114 1 21 1 249 1 162 2 281 1 
285 1 219 1 290 1 265 1 2 1 266 2 59 1 3 1 202 1 168 1 310 1 224 1 203 1 225 1 7 1 125 1 337 1 93 1 229 1 133 1 212 1 46 1 303 1 257 1 379 1 351 1 324 2 281 1 
285 1 219 1 290 1 265 1 2 1 266 2 29 1 59 1 363 1 202 1 168 1 310 1 224 1 34 1 203 1 225 1 7 1 125 1 337 1 93 1 229 1 212 1 46 1 303 1 257 1 351 1 324 2 281 1 
285 1 356 2 1 1 341 2 290 2 76 1 266 2 257 1 310 1 224 2 312 1 7 1 215 2 337 1 113 1 324 4 274 1 114 1 21 1 249 1 162 2 281 1 
285 1 356 2 219 1 221 1 290 2 2 1 266 2 3 1 168 1 310 1 224 2 203 1 312 1 225 1 7 1 125 1 337 1 113 1 274 1 93 1 114 1 249 1 133 1 212 1 341 2 76 1 46 1 236 1 303 1 257 1 215 2 379 1 351 1 324 4 21 1 162 2 281 1 
285 1 163 1 356 1 1 1 290 1 266 2 361 1 310 1 224 2 312 1 7 1 337 1 113 1 93 1 274 1 66 1 249 1 341 1 76 1 303 1 257 1 189 1 215 1 216 1 324 3 21 1 140 1 281 1 162 1 
285 1 356 1 200 1 290 3 266 2 28 1 291 1 310 1 224 3 312 1 7 1 35 1 337 1 114 2 229 2 341 1 117 1 76 1 185 1 237 1 257 1 215 2 324 6 327 1 281 1 162 1 
285 2 356 11 1 1 290 6 264 3 144 1 109 1 265 1 360 1 266 4 202 1 310 2 224 8 312 2 7 2 36 1 337 1 113 2 274 2 114 1 229 1 249 1 183 1 341 4 76 1 257 2 82 1 138 3 215 2 324 14 21 1 281 2 162 11 
285 1 163 1 219 1 1 1 290 1 265 1 2 1 266 2 59 1 3 1 242 1 168 1 202 1 310 1 203 1 224 1 225 1 124 1 7 1 125 1 91 1 337 1 93 2 229 1 133 1 212 1 341 1 234 1 46 1 303 2 238 1 257 1 189 1 81 1 216 1 351 1 324 2 281 1 
53 2 285 3 1 1 200 1 290 10 108 1 2 2 59 1 291 1 3 2 242 1 202 1 203 3 336 1 7 3 337 3 113 2 114 4 249 4 212 3 341 7 76 3 75 2 303 3 257 3 215 8 216 1 351 2 21 2 162 7 163 1 219 3 356 7 265 1 266 6 28 1 168 2 310 3 224 10 312 3 225 2 125 2 93 3 274 2 229 2 133 2 46 2 236 2 237 1 185 1 50 1 238 1 186 2 189 1 378 1 379 2 324 20 327 1 281 3 
163 1 285 2 123 1 219 8 221 1 290 1 108 1 265 1 2 3 266 4 59 2 242 1 168 2 202 1 310 2 203 8 224 1 7 2 125 2 35 1 337 2 93 1 180 1 95 1 212 7 319 1 303 1 79 1 257 2 239 1 189 1 52 1 261 1 191 2 216 1 194 1 351 2 324 2 281 2 
285 1 163 1 356 1 1 1 290 2 266 2 334 1 310 1 224 1 312 1 7 1 337 1 113 1 93 1 274 1 114 1 66 1 341 1 76 1 303 1 257 1 189 1 215 1 216 1 324 3 140 1 21 1 162 1 281 1 
24 1 54 1 285 2 164 2 86 1 290 10 264 1 144 1 266 4 32 1 224 9 312 3 7 2 126 1 113 3 338 2 274 3 114 3 249 3 231 1 183 1 44 1 76 3 257 2 138 2 215 6 279 1 324 19 21 3 281 2 
54 1 285 3 164 4 86 1 332 1 290 12 264 2 222 1 266 6 224 14 312 3 7 3 126 1 209 1 113 3 338 1 274 3 114 2 249 2 231 2 182 1 183 2 184 1 44 2 76 2 257 3 138 2 215 4 84 1 279 1 324 26 21 2 328 2 281 3 
24 1 54 1 285 3 164 4 86 1 200 1 332 1 222 1 290 21 264 3 144 1 266 6 28 1 60 1 291 1 224 20 312 5 7 3 126 1 209 1 113 4 338 1 274 4 114 4 249 4 231 2 182 1 183 3 184 1 44 1 76 5 237 1 185 1 257 3 138 4 215 8 84 1 279 1 324 41 327 1 21 4 328 1 281 3 
24 1 54 1 285 4 164 4 86 1 200 1 332 1 222 1 290 18 264 3 144 1 266 8 28 1 60 1 291 1 224 20 312 5 7 4 126 1 209 1 113 4 338 1 274 4 114 4 249 3 231 2 182 1 183 3 184 1 44 1 76 4 237 1 185 1 257 4 138 4 215 7 84 1 279 1 324 38 327 1 21 3 328 2 281 4 
54 1 285 2 164 4 86 1 200 1 332 1 222 1 290 25 264 4 144 2 266 4 28 1 291 1 224 27 312 8 7 2 126 1 209 1 113 7 338 1 274 7 114 7 249 7 231 1 182 1 183 2 184 1 44 1 76 8 237 1 185 1 257 2 82 2 138 4 215 14 84 1 279 1 324 52 327 1 21 7 328 1 281 2 
96 1 306 1 307 1 72 2 151 1 342 1 343 1 320 1 255 1 158 1 137 1 206 1 204 1 205 1 9 1 353 1 195 1 211 1 
96 1 306 1 307 1 72 2 151 1 342 1 343 1 320 1 255 1 158 1 137 1 206 1 204 1 205 1 9 1 353 1 195 1 211 1 
96 1 306 1 307 1 72 2 151 1 342 1 343 1 320 1 255 1 158 1 137 1 206 1 204 1 205 1 9 1 353 1 195 1 211 1 
335 1 127 1 57 1 
335 1 127 1 57 1 
173 1 321 1 
173 1 321 1 57 1 
230 1 198 1 
163 2 307 1 306 1 220 1 145 1 6 1 170 1 93 2 229 1 211 1 250 1 230 1 72 1 342 1 343 1 45 1 303 2 320 1 255 1 256 1 158 1 189 2 216 2 353 1 195 1 217 1 198 1 
158 1 206 1 151 1 342 1 343 1 9 1 353 1 228 1 195 1 320 1 
220 1 45 1 
158 1 342 1 343 1 201 1 353 1 195 1 320 1 67 1 364 1 
335 1 127 1 
173 1 321 1 57 1 
285 1 163 2 219 2 1 1 290 1 359 1 265 1 2 1 266 2 168 1 169 1 202 1 310 1 203 2 224 1 7 1 125 1 296 1 337 1 93 2 316 1 180 1 212 2 303 2 79 1 257 1 322 1 191 2 351 1 324 2 281 1 
219 2 212 2 221 1 289 1 43 1 108 1 152 1 267 2 155 1 168 1 293 1 171 1 203 2 349 1 297 1 351 1 147 1 129 1 177 1 
219 1 212 1 289 1 43 1 108 1 152 1 346 1 267 2 155 1 293 1 168 1 171 1 203 1 349 1 351 1 147 1 177 1 
277 1 219 1 212 1 43 1 319 1 2 1 59 1 168 1 203 1 52 1 125 1 297 1 351 1 85 1 
219 1 212 1 289 1 43 1 108 1 152 1 267 2 155 1 168 1 293 1 171 1 203 1 349 1 297 1 351 1 147 1 129 1 177 1 
69 1 
13 1 269 1 357 1 204 1 243 1 117 1 16 1 
284 1 41 1 13 1 373 1 306 1 308 1 309 1 135 1 16 1 311 1 204 2 243 1 244 1 295 1 211 1 131 1 355 1 
283 2 53 2 330 6 142 2 331 3 2 10 59 1 203 3 204 8 243 2 244 4 295 5 113 2 211 5 13 9 251 2 212 3 115 2 252 6 253 2 76 2 154 2 16 8 17 1 18 2 351 3 21 2 355 4 262 1 357 1 219 3 306 5 221 1 263 2 308 12 309 6 168 4 223 2 269 1 33 2 312 2 225 3 174 2 125 3 370 2 274 2 275 1 176 1 131 4 179 1 41 3 135 4 188 1 280 1 
330 5 306 1 308 6 332 1 309 3 264 1 222 1 33 1 312 2 204 5 243 2 244 2 295 1 272 1 209 1 113 2 370 1 274 2 176 1 211 1 131 2 41 1 13 8 251 2 182 1 183 1 252 5 135 2 76 2 16 5 156 1 138 1 84 1 21 2 355 2 
163 1 306 1 28 1 362 1 33 1 367 1 312 2 62 1 244 1 10 1 93 1 131 1 211 1 13 2 251 2 376 1 135 1 76 1 48 1 303 1 185 1 237 1 16 2 189 1 121 1 216 1 140 1 355 1 
13 1 357 1 135 1 16 1 269 1 204 1 243 1 244 1 131 1 355 1 
53 1 13 5 330 5 33 1 312 2 251 2 204 5 308 10 252 5 309 5 76 2 113 2 274 2 21 2 16 5 
41 1 306 1 204 1 243 1 295 1 211 1 
219 4 306 3 2 1 59 2 292 1 168 1 203 4 125 1 244 2 295 4 37 1 227 1 370 2 275 2 176 2 131 1 211 3 298 1 13 2 41 2 299 1 212 4 319 1 135 2 16 2 188 1 52 1 351 1 355 2 
163 2 285 1 219 1 290 1 265 1 266 2 2 1 59 1 3 1 168 1 310 1 203 1 225 1 7 1 125 1 337 1 10 1 93 3 229 1 133 1 212 1 213 1 46 1 303 3 257 1 189 2 216 2 379 1 351 1 324 1 140 2 281 1 
330 2 13 1 308 4 252 2 309 2 135 1 16 2 204 4 243 2 244 1 370 1 327 1 176 1 131 1 355 1 
339 1 353 1 195 1 
20 1 353 1 195 1 
20 1 353 1 195 1 
20 1 353 1 195 1 
353 1 195 1 
343 1 320 1 
339 1 353 1 195 1 
339 1 353 1 195 1 
206 1 353 1 372 1 195 1 198 1 
285 2 200 1 290 4 76 1 266 4 237 1 28 1 185 1 291 1 257 2 224 4 312 1 7 2 215 3 324 8 327 1 114 2 249 1 328 1 281 2 
200 1 117 1 290 3 76 1 28 1 185 1 237 1 291 1 224 3 312 1 215 2 324 6 327 1 114 2 
285 1 290 2 76 1 266 2 257 1 224 2 312 1 7 1 215 2 113 1 128 1 274 1 324 4 114 1 21 1 249 1 281 1 
183 1 290 4 264 1 144 1 76 1 224 3 312 1 138 2 215 2 113 1 324 7 274 1 114 1 21 1 249 1 
285 2 200 1 144 1 264 2 290 12 266 4 28 2 291 1 224 11 312 3 7 2 36 1 208 1 113 2 274 2 114 5 249 4 76 3 237 1 185 2 257 2 82 1 138 2 215 9 324 23 327 1 21 2 328 2 281 2 
138 1 290 1 324 1 
224 1 264 1 324 1 
53 1 285 1 290 3 76 1 266 2 257 1 224 3 312 1 7 1 215 3 113 1 128 1 324 6 274 1 21 1 114 2 249 1 281 1 
54 1 285 1 332 1 264 1 290 6 222 1 266 2 224 6 312 2 7 1 113 2 209 1 274 2 114 1 249 1 182 1 183 1 76 2 257 1 138 1 215 2 324 12 84 1 21 2 281 1 
290 3 76 1 237 1 28 1 185 1 224 3 312 1 215 2 324 6 114 1 249 1 
285 1 200 1 290 2 266 2 185 1 28 1 291 1 257 1 224 1 7 1 215 2 208 1 324 3 114 1 249 1 328 1 281 1 
54 1 285 1 290 5 76 2 266 2 28 2 185 2 237 1 362 1 257 1 224 5 312 2 7 1 215 5 324 10 114 3 249 2 281 1 
54 1 285 1 266 2 257 1 224 2 312 1 7 1 215 1 274 1 324 2 249 1 281 1 
54 1 285 1 290 2 76 1 266 2 257 1 224 2 312 1 7 1 215 2 113 1 274 1 324 4 114 1 21 1 249 1 281 1 
24 1 54 1 285 3 290 2 266 6 28 1 185 1 257 3 224 1 7 3 215 2 208 1 324 3 114 1 328 1 249 1 281 3 
24 1 54 1 285 5 200 1 290 18 264 3 144 1 266 10 28 3 291 1 224 16 312 5 7 5 208 1 113 3 128 1 274 3 114 7 249 5 150 1 317 1 183 1 76 5 237 2 185 3 257 5 348 1 138 4 215 12 324 34 327 1 21 3 328 2 281 5 
54 1 285 1 200 1 264 1 290 4 266 2 28 1 291 1 224 4 312 1 7 1 114 2 182 1 183 1 76 1 185 1 237 1 257 1 138 1 215 2 324 8 327 1 281 1 
54 1 285 2 200 1 290 5 264 1 144 1 266 4 28 1 291 1 224 6 312 2 7 2 113 1 128 1 274 1 114 2 249 1 182 1 183 1 76 1 237 1 185 1 257 2 138 2 215 3 324 11 327 1 281 2 
54 1 285 3 200 1 332 1 264 1 290 10 222 1 266 6 28 1 291 1 224 9 312 3 7 3 209 1 113 2 128 1 274 2 114 3 249 1 182 1 183 1 76 3 237 1 185 1 257 3 138 1 215 4 324 19 84 1 327 1 21 2 328 1 281 3 
54 1 285 3 200 1 332 1 264 1 290 7 222 1 266 6 28 1 291 1 224 10 312 3 7 3 113 2 209 1 128 1 274 2 114 3 249 2 182 1 183 1 76 2 237 1 185 1 257 3 138 1 215 5 324 17 84 1 327 1 21 1 328 1 281 3 
54 1 285 1 200 1 264 1 290 4 266 2 28 1 291 1 224 4 312 1 7 1 114 2 182 1 183 1 76 1 185 1 237 1 257 1 138 1 215 2 324 8 327 1 281 1 
54 1 285 1 332 1 264 1 290 6 222 1 266 2 224 6 312 2 7 1 113 2 209 1 274 2 114 1 249 1 182 1 183 1 76 2 257 1 138 1 215 2 324 12 84 1 21 2 281 1 
54 1 285 4 200 1 332 1 290 8 264 1 222 1 266 8 28 1 291 1 224 10 312 3 7 4 209 1 113 2 128 1 274 2 114 3 249 2 182 1 183 1 76 2 237 1 185 1 257 4 138 1 215 5 84 1 324 18 327 1 21 1 328 2 281 4 
24 1 54 1 285 4 332 1 290 7 264 1 222 1 266 8 224 9 312 3 7 4 209 1 113 3 274 3 114 3 249 3 182 1 183 1 76 2 257 4 138 1 215 6 84 1 324 16 21 2 328 2 281 4 
200 2 290 4 76 1 28 3 185 3 237 1 291 1 224 3 312 1 215 6 324 7 114 3 249 3 
24 1 54 1 285 4 200 1 332 1 290 8 264 1 222 1 266 8 28 1 291 1 224 10 312 3 7 4 209 1 113 2 274 2 114 3 249 1 182 1 183 1 76 2 237 1 185 1 257 4 138 1 215 4 84 1 324 18 327 1 21 1 328 2 281 4 
100 1 163 1 83 1 19 1 93 1 303 1 229 1 
149 1 163 1 26 1 88 1 303 1 100 1 83 1 19 1 248 1 93 1 229 1 329 1 
203 1 219 1 52 1 212 1 125 1 117 1 319 1 351 1 2 1 59 1 168 1 
163 1 133 1 219 1 212 1 46 1 2 1 303 2 59 1 242 1 168 1 189 1 203 1 225 1 125 1 216 1 351 1 93 2 229 1 
163 2 133 1 219 1 115 1 212 1 46 1 2 3 303 2 242 1 5 1 168 1 111 1 367 1 189 1 203 1 225 2 125 2 18 1 216 2 351 1 93 2 275 1 229 1 
163 2 219 2 2 3 29 1 242 1 366 1 168 1 5 1 111 1 203 2 367 1 225 2 125 2 93 2 275 1 229 1 212 2 115 1 46 1 303 2 189 1 18 1 216 2 351 1 
331 1 219 3 306 2 358 1 2 4 59 1 366 1 223 1 168 1 203 3 368 1 225 1 204 1 125 1 243 1 295 1 275 1 211 2 212 3 115 1 154 1 18 1 351 1 
142 1 306 2 219 3 331 1 115 1 212 3 154 1 2 4 59 1 366 1 168 1 223 1 203 3 225 1 204 1 243 1 125 1 18 1 295 1 351 1 275 1 211 2 
203 1 219 1 123 1 212 1 351 1 168 1 
180 1 95 1 218 1 123 1 219 7 212 6 221 1 108 1 2 3 59 2 168 3 203 7 225 1 191 1 261 1 125 2 245 1 194 1 351 2 23 1 179 1 
285 2 163 1 356 1 219 1 1 1 200 1 221 1 290 3 2 1 266 4 28 1 291 1 3 1 242 1 168 1 310 2 224 3 203 1 312 1 225 1 7 2 125 1 337 2 93 2 114 2 229 2 133 1 212 1 341 1 76 1 46 1 75 1 236 1 237 1 185 1 303 2 257 2 189 1 322 1 215 2 216 1 379 1 351 1 324 6 327 1 162 1 281 2 
283 1 142 1 357 1 306 3 219 1 331 1 263 1 2 2 59 1 223 1 269 1 203 1 204 1 243 1 174 1 244 2 295 2 131 2 211 3 13 1 41 1 212 1 135 2 154 1 16 1 256 1 188 1 355 2 
123 1 219 2 212 2 221 1 2 2 223 1 168 2 203 2 225 1 125 1 351 1 280 1 179 1 
219 4 212 4 221 1 319 1 2 1 59 1 366 1 168 1 203 4 63 1 52 1 125 1 351 1 
218 1 219 2 0 1 212 2 56 1 2 1 168 2 203 2 225 1 125 1 378 1 245 1 351 1 275 1 
203 1 219 1 212 1 152 1 351 1 267 1 147 1 59 1 168 1 293 1 
180 1 203 2 219 2 212 2 221 1 125 1 296 1 108 1 351 1 2 1 168 1 
180 1 219 5 212 4 221 1 319 1 2 3 59 1 168 2 203 5 63 1 52 1 261 1 125 2 351 2 194 1 275 1 
180 1 219 5 212 4 221 1 319 1 2 3 59 1 168 2 203 5 63 1 52 1 125 2 350 1 351 2 194 1 275 1 
163 1 219 1 212 1 46 1 2 1 303 2 59 1 29 1 242 1 168 1 189 1 203 1 225 1 125 1 216 1 351 1 93 2 229 1 
218 1 219 1 212 1 2 1 168 2 203 1 225 1 125 1 245 1 351 1 275 1 23 1 179 1 
163 1 166 1 139 1 359 1 93 1 303 1 316 1 169 1 178 1 
136 1 139 1 68 1 
166 1 139 1 118 1 229 1 178 1 
306 2 166 2 118 2 154 1 5 1 256 1 111 1 367 1 159 1 136 1 204 1 243 1 139 1 229 1 211 2 68 1 276 1 178 2 282 1 
160 1 117 1 107 1 58 1 
160 1 107 1 15 1 38 1 58 1 304 1 94 1 
246 1 15 1 197 1 
160 1 259 1 25 1 87 1 107 1 314 1 15 3 38 3 58 1 268 2 304 1 94 1 
160 1 107 1 15 2 38 2 58 1 49 1 31 1 304 1 94 1 
87 1 143 1 107 1 152 1 15 1 267 1 304 1 365 1 349 1 38 1 94 1 
87 1 107 1 15 1 38 1 58 1 304 1 94 1 
160 1 87 1 15 1 38 1 58 2 304 1 94 1 
87 1 107 1 97 1 15 2 58 1 304 2 247 1 38 2 380 1 94 2 
87 1 143 1 107 2 15 3 58 1 49 2 304 1 80 1 258 1 160 1 112 1 38 3 94 1 
105 1 87 1 107 1 152 1 15 2 58 1 267 2 49 1 304 1 171 1 160 1 349 1 38 2 147 1 94 1 
87 1 143 1 107 2 15 4 58 1 31 1 49 2 304 2 270 1 160 1 112 1 38 4 94 2 
160 1 87 1 107 1 15 1 38 1 58 1 304 1 94 1 
143 1 107 3 15 4 268 1 58 2 49 2 304 1 259 1 160 2 190 1 314 1 112 1 38 4 94 1 
87 1 107 1 15 2 58 1 49 1 304 1 160 1 207 1 64 1 38 2 130 1 94 1 
160 1 259 2 71 1 87 1 107 1 314 1 15 3 38 3 58 1 268 2 304 1 94 1 
286 1 107 2 98 1 381 2 
87 1 15 1 371 1 38 1 304 1 94 1 
258 1 160 1 87 1 107 1 15 2 38 2 58 1 49 1 304 1 94 1 
302 1 
160 1 87 1 107 1 15 1 38 1 58 1 304 1 94 1 
87 1 107 1 15 3 49 1 268 1 58 1 304 1 258 1 160 1 38 3 94 1 
190 1 143 1 107 1 112 1 
107 1 58 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 287 361 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 1 108 1 265 2 2 1 3 4 294 1 214 1 363 1 61 1 42 1 220 1 44 2 149 9 170 2 301 5 150 1 191 2 345 2 67 3 70 6 31 2 131 2 73 1 199 9 203 1 75 1 136 1 317 1 
105 1 108 1 265 2 2 1 3 4 294 1 214 1 363 1 61 1 42 1 220 1 170 2 44 2 149 9 301 5 150 1 191 2 345 2 67 3 70 6 31 2 131 2 73 1 199 9 203 1 75 1 136 1 317 1 
105 1 108 1 265 2 2 1 3 5 294 1 214 1 363 1 61 1 42 1 220 1 170 2 44 2 149 10 301 6 150 1 191 2 345 2 67 4 70 7 31 2 131 2 73 1 199 10 203 1 75 1 136 1 317 1 
108 1 265 2 2 1 3 3 294 1 214 1 363 1 61 1 42 1 220 1 170 2 44 2 149 7 301 4 150 1 191 2 345 2 67 2 70 4 31 2 131 1 73 1 199 7 203 1 75 1 136 1 317 1 
105 1 345 1 265 1 67 1 3 2 70 3 31 1 131 2 73 1 199 4 75 1 42 1 136 1 149 4 301 3 170 1 150 1 191 1 
291 1 345 1 265 1 2 1 31 1 73 1 199 2 202 1 75 1 301 1 149 2 44 1 150 1 317 1 191 1 91 1 
345 2 265 2 67 1 3 1 70 1 73 1 199 3 75 1 220 1 149 3 44 1 301 2 150 1 
105 1 265 2 3 4 211 1 214 1 42 1 220 1 44 1 149 9 301 5 170 1 150 1 191 1 345 2 67 3 70 7 31 1 131 2 73 1 199 9 203 1 75 1 136 1 313 1 
105 1 265 2 3 4 211 1 214 1 42 1 220 1 44 1 149 9 301 5 170 1 150 1 191 1 345 2 67 3 70 7 31 1 131 2 73 1 199 9 203 1 75 1 136 1 313 1 
240 1 353 1 354 1 
185 2 240 1 26 1 
124 1 255 2 13 2 246 2 358 1 302 2 188 2 293 2 
208 1 158 1 358 1 109 1 319 1 142 2 84 1 293 2 299 1 148 2 337 1 246 3 63 1 329 2 302 3 188 2 222 1 124 1 93 1 9 2 94 1 255 2 48 1 257 1 226 1 68 1 284 1 371 1 133 1 350 1 13 2 14 1 177 1 261 1 316 2 16 1 288 1 
166 1 62 1 255 1 13 1 246 1 358 1 302 1 188 1 293 1 137 1 
251 1 281 1 256 1 240 1 83 1 258 1 293 1 62 1 246 1 338 1 15 1 353 1 302 1 314 1 
255 1 256 2 240 1 83 1 258 2 293 1 62 1 13 1 246 1 338 1 15 1 353 1 302 1 314 1 188 1 
167 1 256 1 258 1 55 1 206 1 
167 1 141 1 256 2 240 1 328 1 353 1 258 2 55 1 
167 1 256 1 258 1 
255 1 256 1 358 1 258 1 293 1 166 1 62 1 13 1 246 1 55 1 302 1 188 1 137 1 223 1 
240 1 
167 1 141 1 256 2 240 1 353 1 258 2 55 1 259 1 
366 2 47 1 266 1 153 1 141 1 256 5 240 1 258 5 38 1 145 1 321 1 167 2 24 1 353 1 55 2 102 2 78 1 341 2 377 1 
124 1 354 1 
124 2 255 1 85 1 293 2 13 1 246 2 43 1 302 2 188 1 
88 1 59 1 175 1 
124 1 158 1 93 1 9 1 48 1 94 1 257 1 109 1 142 1 319 1 84 1 53 1 246 1 63 1 302 1 316 1 
158 1 93 1 9 1 94 1 48 1 255 1 109 1 257 1 319 1 142 1 84 1 19 1 175 1 293 1 13 1 63 1 246 2 302 2 316 1 157 1 
124 1 255 3 13 3 246 3 302 3 188 1 293 3 157 1 
166 1 62 1 255 1 13 1 246 1 302 1 293 1 
62 1 255 1 13 1 246 1 43 1 302 1 188 1 85 1 293 1 
158 1 267 1 109 1 358 1 83 1 319 1 142 1 84 1 85 1 19 1 293 3 299 1 62 1 148 2 63 1 246 4 329 1 338 1 302 4 188 2 222 1 124 1 93 1 9 1 94 1 48 1 255 3 256 1 257 1 195 1 68 1 258 1 133 1 350 1 13 3 14 1 177 1 15 1 261 1 314 1 316 1 16 1 288 1 157 1 
124 1 251 1 255 1 13 1 246 2 302 2 118 1 293 2 157 1 
255 3 256 1 267 1 240 1 83 1 258 1 85 1 19 1 293 3 62 1 13 3 246 3 15 1 338 1 302 3 103 1 314 1 188 1 157 2 
88 1 255 2 13 2 246 2 302 2 188 1 85 1 175 1 293 2 157 1 
124 1 158 1 9 1 93 1 48 1 94 1 257 1 109 1 142 1 319 1 84 1 246 1 63 1 302 1 316 1 
124 1 158 1 9 1 93 1 48 1 94 1 95 1 109 1 142 1 319 1 84 1 323 1 246 1 302 1 316 1 
161 1 164 1 59 2 297 1 299 1 88 2 298 1 148 2 329 4 120 1 193 1 46 1 125 1 226 2 98 1 175 2 133 2 134 1 331 1 350 1 14 1 261 1 16 1 288 1 
62 1 255 1 13 1 246 1 338 1 302 1 293 1 238 1 
251 1 124 1 255 4 85 1 19 1 308 1 293 5 22 1 13 4 246 5 302 5 188 1 118 1 157 2 
166 1 62 1 255 2 13 2 246 2 302 2 293 2 238 1 
325 1 198 1 
325 1 198 1 
181 1 269 1 
181 1 269 1 
181 1 269 1 
325 1 198 1 296 1 
325 1 198 1 296 1 
325 1 71 1 198 1 
80 1 325 2 181 1 359 1 269 1 198 2 
325 1 198 1 296 1 
325 1 212 1 198 1 
325 1 212 1 198 1 
325 1 212 1 198 1 
160 1 18 2 256 2 240 1 173 1 359 1 258 2 128 1 110 2 360 2 20 1 198 2 244 2 218 1 325 2 232 1 169 3 151 2 140 1 
124 1 17 1 255 2 225 1 256 1 18 1 173 1 127 1 10 1 71 1 258 1 110 1 198 1 72 1 293 2 244 1 325 1 13 2 246 2 169 1 302 2 171 1 151 1 172 1 
170 1 31 1 191 1 
291 1 31 1 191 1 
291 1 352 1 233 1 286 1 170 2 31 3 
147 1 291 1 352 1 233 1 170 1 31 2 
291 1 352 1 233 2 170 1 31 2 
17 1 141 1 240 2 185 3 298 1 167 1 339 1 64 1 248 1 26 1 341 1 120 1 27 1 250 2 366 1 47 3 225 1 282 1 153 1 256 5 258 5 30 1 98 1 72 1 52 2 331 1 33 1 102 1 55 4 353 1 289 2 78 2 
264 5 141 1 240 5 38 1 144 1 185 9 298 3 167 6 339 1 303 1 248 2 152 1 26 3 341 2 120 3 27 3 366 2 279 1 47 8 256 9 153 1 258 9 129 1 98 3 72 4 52 6 176 1 331 3 33 2 55 7 353 1 102 2 289 6 78 6 206 5 
240 3 38 1 185 4 298 1 64 1 248 1 26 2 341 1 120 1 27 1 250 1 366 1 47 3 282 1 256 3 258 3 98 1 72 1 52 2 331 1 33 1 353 1 55 2 102 1 78 2 289 2 
240 4 38 1 185 7 298 2 303 1 64 1 248 1 152 1 26 3 341 1 120 2 27 2 250 2 366 1 47 5 256 4 282 1 258 4 129 1 98 2 72 2 52 4 331 2 33 1 353 1 102 1 55 3 289 4 78 4 
93 1 126 1 354 1 
93 1 287 1 
143 1 
93 1 94 1 
93 3 94 1 126 2 319 1 271 1 112 1 
93 1 94 1 319 1 
254 1 93 1 
0 1 125 2 226 4 96 1 227 1 49 1 197 2 98 1 216 1 39 1 133 3 295 1 12 1 331 1 329 7 138 1 193 3 
0 1 125 2 226 4 96 1 227 1 49 1 197 2 98 1 216 1 39 1 133 3 295 1 12 1 331 1 329 7 138 1 193 3 
0 1 125 2 226 4 96 1 227 1 49 1 197 2 98 1 216 1 39 1 133 3 295 1 12 1 331 1 231 1 329 7 138 1 193 3 
239 1 81 1 0 2 333 1 209 1 241 4 216 1 39 2 273 1 295 1 243 1 299 1 298 3 148 2 329 31 27 3 120 3 193 10 125 5 226 16 227 2 49 2 96 5 197 3 98 4 348 1 133 15 12 1 331 4 350 1 14 1 261 1 263 3 138 1 
0 1 209 1 39 1 216 1 299 2 148 4 329 9 193 4 125 3 66 1 226 5 49 1 96 1 227 1 197 2 98 1 133 4 12 1 331 1 350 2 14 2 261 2 234 1 138 1 
291 1 265 1 142 1 84 1 41 1 301 1 170 1 149 2 44 1 221 1 150 1 191 1 90 1 192 1 9 1 344 1 280 1 345 1 48 1 70 1 31 2 347 1 73 1 199 2 75 1 310 1 54 1 286 1 316 1 379 1 
58 1 291 1 265 1 142 1 84 1 87 1 324 1 301 1 170 1 149 3 44 1 221 1 150 1 191 1 90 1 9 1 344 1 280 1 345 1 48 1 70 2 31 2 347 1 73 1 199 3 310 1 54 1 286 1 316 1 379 1 
58 1 291 1 142 1 84 1 87 1 301 1 44 1 149 2 170 1 221 1 150 1 90 1 191 1 9 1 280 1 48 1 70 2 31 2 347 1 73 1 199 2 310 1 54 1 286 1 316 1 
107 1 158 1 93 1 9 1 48 1 94 1 345 1 265 1 28 1 210 1 142 1 84 1 199 1 135 1 324 1 310 2 100 1 44 2 149 1 316 1 221 2 90 2 237 1 
291 1 265 1 142 1 84 1 87 1 41 1 170 1 149 1 44 1 221 1 191 1 90 1 9 1 344 1 280 1 345 1 48 1 31 2 347 1 199 1 75 1 310 1 54 1 286 1 316 1 379 1 
76 1 
332 1 141 3 240 2 83 1 142 2 84 1 293 1 242 2 185 2 246 1 338 1 302 1 190 4 341 1 249 2 251 1 343 1 253 2 306 1 47 2 9 2 93 1 94 1 48 1 256 5 153 1 258 5 99 2 204 2 312 1 15 1 353 1 102 1 314 1 316 2 107 1 158 2 162 1 320 1 213 1 62 1 167 6 327 1 26 2 123 1 366 1 281 1 368 1 283 1 28 1 372 2 33 1 79 2 78 2 36 1 
141 1 83 1 320 1 293 1 62 1 167 2 246 1 327 1 338 1 302 1 190 2 251 1 306 1 253 1 281 1 256 3 258 3 259 1 312 1 15 1 314 1 36 1 
141 1 240 1 83 1 320 1 293 1 62 1 167 1 246 1 327 1 338 1 302 1 190 3 251 1 306 1 281 1 256 3 258 3 259 1 99 1 312 1 15 1 314 1 353 1 36 1 
141 1 240 1 83 1 320 1 293 1 242 1 62 1 167 2 246 1 327 1 338 1 302 1 190 3 251 1 306 1 253 1 281 1 256 3 258 3 259 1 99 1 312 1 15 1 314 1 353 1 36 1 
290 1 141 3 162 1 240 5 83 1 320 1 293 1 242 4 362 1 62 1 167 7 327 1 246 1 338 1 302 1 190 6 45 1 26 2 341 1 342 1 249 2 366 1 251 1 306 1 253 4 47 1 281 1 153 1 256 5 283 1 369 1 258 5 259 1 99 4 372 2 204 2 312 1 15 1 102 1 353 5 314 1 79 2 78 1 36 1 
141 2 240 2 162 1 83 1 320 1 293 1 242 2 185 2 62 1 167 4 327 1 246 1 338 1 302 1 190 4 26 2 341 1 249 2 123 1 366 1 251 1 253 2 306 1 47 1 281 1 153 1 256 4 283 1 258 4 99 2 372 2 204 2 312 1 15 1 353 1 102 1 314 1 79 2 78 1 36 1 
141 2 240 1 162 1 83 1 320 1 293 1 242 2 62 1 167 4 246 1 327 1 338 1 302 1 190 4 45 1 26 2 341 1 342 1 249 2 251 1 366 1 253 2 306 1 47 1 281 1 256 4 153 1 283 1 369 1 258 4 99 2 372 2 204 2 312 1 15 1 353 1 314 1 102 1 79 2 78 1 36 1 
141 2 240 1 162 1 83 1 320 1 293 1 242 2 62 1 167 4 246 1 327 1 338 1 302 1 190 4 45 1 26 2 341 1 342 1 249 2 251 1 366 1 253 2 306 1 47 1 281 1 256 4 153 1 283 1 369 1 258 4 99 2 372 2 204 2 312 1 15 1 353 1 314 1 102 1 79 2 78 1 36 1 
141 2 357 1 240 1 162 1 83 1 320 1 293 1 242 2 185 2 62 1 167 4 246 1 327 1 338 1 302 1 189 2 190 4 45 1 341 1 8 2 251 1 366 1 253 2 306 1 47 1 281 1 256 4 153 1 258 4 99 2 330 1 309 1 372 2 312 1 15 1 353 1 314 1 102 1 79 2 78 1 36 1 
290 1 141 2 240 1 162 1 83 1 320 1 293 1 242 3 62 1 167 5 246 1 327 1 338 1 302 1 190 5 45 1 26 2 341 1 342 1 249 2 366 1 251 1 306 1 253 3 47 1 281 1 153 1 256 4 283 1 369 1 258 4 99 3 372 2 204 2 312 1 15 1 353 1 102 1 314 1 79 2 78 1 36 1 
290 1 141 2 240 1 162 1 83 1 320 1 293 1 242 3 62 1 167 5 246 1 327 1 338 1 302 1 190 5 45 1 26 2 341 1 342 1 249 2 366 1 251 1 306 1 253 3 47 1 281 1 153 1 256 4 283 1 369 1 258 4 99 3 372 2 204 2 312 1 15 1 353 1 102 1 314 1 79 2 78 1 36 1 
141 2 240 1 162 1 83 1 320 1 293 1 242 2 185 2 62 1 167 4 327 1 246 1 338 1 302 1 189 2 190 4 341 1 123 1 8 2 366 1 251 1 253 2 306 1 47 1 281 1 153 1 256 4 258 4 99 2 330 1 372 2 312 1 15 1 353 1 102 1 314 1 79 2 78 1 36 1 
164 1 59 1 39 1 216 1 88 1 299 1 148 2 329 6 193 2 124 2 125 2 226 3 227 1 197 1 98 1 175 1 133 3 12 1 331 1 350 1 14 1 261 1 354 1 16 1 288 1 138 1 
81 1 37 1 333 1 241 3 59 11 4 1 299 2 298 2 88 4 6 1 148 4 114 1 115 1 329 14 27 2 120 1 193 2 124 1 125 1 68 1 226 8 96 1 98 1 175 11 371 1 133 6 331 2 350 2 14 2 261 2 16 2 288 1 263 3 
158 1 159 1 109 1 319 1 142 1 84 1 19 1 293 1 217 1 88 1 299 1 114 1 148 2 63 1 246 2 329 2 302 2 124 1 93 1 9 1 94 1 48 1 255 1 257 1 68 1 226 1 154 1 371 1 53 1 133 1 350 1 13 1 14 1 261 1 316 1 16 1 288 1 157 1 
142 3 84 2 293 1 87 1 39 1 183 2 299 3 88 7 298 2 148 6 246 3 302 3 193 8 252 2 9 3 93 2 255 1 48 2 94 2 257 2 96 4 197 1 98 3 12 1 350 3 13 1 14 3 261 3 316 3 16 3 157 1 156 2 158 1 109 2 319 2 19 1 59 7 272 1 216 1 114 1 63 2 329 20 222 2 27 2 120 2 122 1 124 2 277 1 125 4 68 1 226 10 227 1 228 2 175 7 371 1 133 10 331 3 288 3 138 1 
158 2 107 1 318 1 164 1 142 8 84 2 293 1 87 1 184 1 299 2 148 4 337 2 246 1 329 2 302 1 7 1 192 1 93 3 9 8 255 1 48 2 94 2 69 1 226 1 68 1 28 1 371 1 133 1 350 2 13 1 14 2 261 2 262 1 316 7 16 2 288 2 35 1 139 1 157 1 
59 1 85 1 293 1 88 1 299 1 298 1 148 2 114 1 246 1 329 3 302 1 188 1 27 1 120 1 193 1 125 1 255 1 226 1 98 1 175 1 133 2 32 1 331 1 350 1 13 1 14 1 261 1 16 1 288 1 
46 1 226 2 96 1 164 1 59 1 175 1 88 1 299 1 298 1 331 1 350 1 148 2 14 1 329 2 261 1 16 1 288 1 193 1 
125 1 161 1 164 1 59 1 98 1 175 1 133 2 88 1 299 1 350 1 148 2 14 1 329 2 261 1 16 1 288 1 120 1 193 1 
125 1 226 2 96 1 164 1 59 2 98 1 175 2 133 2 88 2 299 1 298 1 331 1 350 1 148 2 14 1 329 4 261 1 16 1 288 1 120 1 27 1 193 2 
46 1 226 2 96 1 59 1 175 1 88 1 299 1 298 1 331 1 350 1 148 2 14 1 329 2 261 1 16 1 35 1 288 1 193 1 
125 1 161 1 59 1 98 1 175 1 133 2 88 1 299 1 350 1 148 2 14 1 329 2 261 1 16 1 35 1 288 1 120 1 193 1 
125 1 226 2 96 1 59 2 98 1 175 2 133 2 88 2 299 1 298 1 331 1 350 1 148 2 14 1 329 4 261 1 16 1 35 1 288 1 120 1 27 1 193 2 
125 1 226 2 96 1 59 2 98 1 175 2 133 2 88 2 299 1 298 1 331 1 350 1 148 2 14 1 329 4 261 1 16 1 288 1 120 1 27 1 193 2 
158 1 109 1 319 1 142 1 84 1 299 1 148 2 63 1 246 1 329 2 302 1 222 1 124 1 9 1 93 1 94 1 48 1 257 1 226 1 68 1 371 1 133 1 350 1 14 1 261 1 316 1 16 1 288 1 
158 1 109 1 319 1 142 1 84 1 323 1 299 1 148 2 246 1 329 2 302 1 124 1 9 1 93 1 94 1 48 1 95 1 226 1 68 1 371 1 133 1 229 1 350 1 14 1 261 1 316 1 16 1 288 1 
125 1 226 2 96 1 59 2 98 1 175 2 133 2 88 2 299 1 298 1 331 1 114 1 350 1 148 2 14 1 329 4 261 1 16 1 288 1 120 1 27 1 193 2 
109 1 319 1 142 1 84 1 59 2 88 2 298 1 299 1 148 2 63 1 246 1 329 4 302 1 222 1 120 1 27 1 193 2 192 1 252 1 9 1 93 1 125 1 48 1 94 1 257 1 226 2 96 1 98 1 175 2 133 2 331 1 350 1 14 1 261 1 316 1 16 1 288 1 
85 1 59 1 293 1 299 1 298 1 88 1 148 2 114 1 246 1 329 3 302 1 188 1 120 1 27 1 193 1 255 1 226 2 96 1 98 1 175 1 133 1 331 1 350 1 13 1 14 1 261 1 16 1 288 1 378 1 
81 1 333 1 268 1 241 2 335 1 299 2 275 1 298 3 148 4 186 1 168 1 329 19 27 3 120 3 193 6 278 2 125 3 226 9 11 1 96 3 346 2 98 3 133 10 331 3 350 2 14 2 261 2 234 1 56 1 263 1 
81 2 209 2 268 2 335 2 241 2 274 1 299 3 275 1 298 3 148 6 186 1 329 26 119 1 27 3 120 2 193 4 278 4 194 1 367 1 125 2 226 14 96 2 11 1 346 1 98 2 133 12 331 3 350 3 14 3 261 3 234 1 315 1 77 1 263 2 
81 3 333 1 335 1 241 4 39 1 298 4 299 3 148 6 186 1 193 8 194 1 96 4 11 1 197 1 98 5 346 1 12 1 350 3 14 3 261 3 315 1 263 3 56 1 209 1 268 2 216 1 274 1 275 1 329 41 119 1 120 4 27 4 278 4 367 1 125 4 226 20 227 1 133 21 331 5 234 1 374 1 77 1 138 1 
81 3 333 1 209 2 268 2 241 4 335 1 216 1 39 1 274 1 299 4 275 1 298 4 148 8 186 1 329 38 119 1 27 4 120 3 193 7 194 1 278 4 367 1 125 4 226 20 227 1 11 1 96 3 197 1 346 1 98 4 133 18 12 1 331 5 350 4 14 4 374 1 261 4 234 1 315 1 77 1 56 1 263 3 138 1 
81 2 333 2 209 1 268 1 241 4 335 1 216 1 39 1 4 2 274 1 299 2 275 1 298 7 148 4 186 1 329 52 119 1 27 7 120 7 193 14 194 1 278 4 367 1 125 7 226 27 227 1 11 1 96 7 197 1 346 1 98 8 133 25 12 1 331 8 350 2 14 2 261 2 234 1 315 1 77 1 263 4 138 1 
219 1 325 1 232 1 18 1 359 1 110 1 198 1 151 1 140 1 244 1 
10 1 71 1 
325 1 356 1 18 1 110 1 25 1 86 1 198 1 151 1 244 1 
256 1 18 1 240 1 173 1 359 1 258 1 128 1 110 1 360 1 20 1 198 1 244 1 218 1 325 1 232 1 169 2 151 1 140 1 
256 1 18 1 240 1 173 1 359 1 258 1 128 1 110 1 360 1 20 1 198 1 244 1 218 1 325 1 232 1 169 2 151 1 140 1 
256 1 18 1 240 1 173 1 359 1 258 1 128 1 110 1 360 1 20 1 198 1 244 1 218 1 325 1 232 1 169 2 151 1 140 1 
80 1 178 1 296 1 
80 1 178 1 296 1 
212 1 121 1 
80 1 212 1 121 1 
127 1 172 1 
325 1 256 1 18 1 258 1 55 1 110 1 198 1 151 1 236 1 244 1 
178 1 296 1 
80 1 212 1 121 1 
142 2 84 1 293 2 40 1 245 1 299 1 114 1 148 2 337 2 246 2 329 2 302 2 7 1 93 1 9 2 48 1 94 1 69 1 226 1 68 1 285 1 174 1 371 1 133 1 350 1 14 1 261 1 316 2 16 1 355 1 288 1 
291 1 9 2 344 1 280 1 48 1 142 2 84 1 31 2 347 1 87 1 260 1 286 1 170 1 316 2 191 1 90 1 179 1 104 1 192 1 
291 1 9 1 344 1 280 1 48 1 142 1 84 1 31 2 347 1 87 1 286 1 170 1 340 1 316 1 191 1 90 1 179 1 
158 1 107 1 93 1 9 1 48 1 94 1 142 1 28 1 84 1 215 1 135 1 316 1 90 1 104 1 
291 1 9 1 344 1 280 1 48 1 142 1 84 1 31 2 347 1 87 1 260 1 286 1 170 1 316 1 191 1 90 1 179 1 104 1 
292 1 
47 1 266 1 24 1 240 1 353 1 354 1 78 1 
366 1 47 1 256 1 141 1 153 1 240 2 283 1 258 1 185 1 204 1 167 1 353 1 102 1 341 1 78 1 26 1 249 1 
366 1 158 1 93 1 9 1 48 1 94 1 153 1 319 1 142 1 84 1 132 1 112 1 361 1 102 1 287 1 316 1 341 1 
81 1 141 1 240 5 241 1 182 1 185 6 274 1 298 2 167 1 365 2 119 1 341 2 26 3 27 2 120 2 366 2 194 1 367 1 47 8 224 1 256 1 153 2 368 1 258 1 98 2 52 5 331 2 33 1 351 1 102 2 353 2 315 1 289 5 263 1 78 5 
358 1 293 1 182 1 39 1 216 1 166 1 62 1 365 2 246 1 302 1 188 1 223 1 341 1 342 1 366 1 47 2 255 1 153 1 256 1 227 1 258 1 98 1 74 1 331 2 13 1 102 1 137 1 78 2 
366 1 47 1 153 1 266 1 240 1 24 1 102 1 353 1 341 1 78 1 
47 5 240 5 98 2 182 1 52 5 185 10 298 2 331 2 365 2 78 5 289 5 26 5 27 2 120 2 156 1 
167 1 256 1 141 1 240 1 353 1 258 1 
332 1 158 2 107 1 57 1 141 2 142 4 38 1 84 1 213 1 5 2 167 4 116 1 341 2 366 2 93 1 9 4 47 2 48 1 94 1 153 1 256 3 368 2 258 3 28 1 230 1 33 2 102 2 316 4 78 2 
158 1 358 1 109 1 142 1 319 1 84 1 293 2 299 1 148 2 246 3 63 1 329 1 302 3 188 2 222 1 124 1 9 1 93 1 255 2 48 1 94 1 257 1 68 1 133 1 350 1 13 2 14 1 177 1 261 1 316 1 16 1 288 1 
366 1 47 1 153 1 240 4 368 1 197 1 52 2 185 4 33 1 102 1 353 2 26 2 289 2 78 2 341 1 
110 1 207 1 244 1 
110 1 207 1 244 1 
232 1 127 1 110 1 376 1 244 1 
110 1 207 1 244 1 
110 1 196 1 244 1 
110 1 196 1 244 1 
110 1 196 1 244 1 
110 1 244 1 
325 1 198 1 
125 2 209 1 226 4 96 1 227 1 197 1 98 1 216 1 39 1 133 4 12 1 331 1 299 2 350 2 148 4 14 2 329 8 261 2 138 1 193 3 
125 2 226 3 227 1 197 1 98 1 39 1 216 1 133 3 12 1 331 1 329 6 354 1 138 1 193 2 
125 1 226 2 96 1 98 1 270 1 133 2 299 1 298 1 331 1 350 1 148 2 14 1 329 4 261 1 120 1 27 1 193 2 
81 1 125 1 333 1 226 3 96 1 241 2 98 1 133 4 298 1 331 1 329 7 263 1 120 1 27 1 193 2 
333 1 209 2 241 2 216 1 39 2 4 1 298 2 299 2 148 4 329 23 115 1 187 1 27 2 120 2 193 9 125 5 226 11 227 2 96 4 197 1 98 3 133 12 12 1 331 3 350 2 14 2 261 2 263 2 138 1 
329 1 241 1 133 1 
329 1 226 1 263 1 
125 2 226 3 96 1 98 1 270 1 133 3 299 1 298 1 331 1 148 2 350 1 14 1 329 6 261 1 27 1 120 1 156 1 193 3 
81 1 241 1 274 1 299 1 298 2 148 2 329 12 119 1 27 2 120 2 193 2 194 1 367 1 125 1 226 6 96 1 98 2 133 6 331 2 350 1 14 1 261 1 234 1 315 1 263 1 
125 1 226 3 227 1 96 1 98 1 216 1 39 1 133 3 331 1 329 6 193 2 
125 1 209 1 226 1 96 1 227 1 39 1 133 2 12 1 299 1 350 1 148 2 14 1 329 3 187 1 261 1 138 1 193 2 
125 3 226 5 227 2 96 2 98 2 39 2 216 1 133 5 74 1 299 1 331 2 148 2 350 1 14 1 329 10 261 1 234 1 193 5 
226 2 96 1 299 1 298 1 331 1 350 1 148 2 14 1 329 2 234 1 261 1 193 1 
125 1 226 2 96 1 98 1 133 2 299 1 298 1 331 1 350 1 148 2 14 1 329 4 234 1 261 1 120 1 27 1 193 2 
125 1 209 1 226 1 227 1 96 1 39 1 133 2 299 3 350 3 148 6 14 3 329 3 187 1 234 1 261 3 56 1 193 2 
81 1 333 1 209 2 241 4 270 1 216 2 39 3 273 1 243 1 299 5 298 3 148 10 329 34 187 1 27 3 120 3 193 12 125 7 226 16 227 3 96 5 197 1 98 5 348 1 133 18 12 1 331 5 350 5 14 5 261 5 234 1 56 1 263 3 138 1 
81 1 241 1 39 1 216 1 299 1 148 2 329 8 119 1 193 2 125 2 226 4 227 1 197 1 98 1 133 4 12 1 331 1 350 1 14 1 261 1 234 1 263 1 138 1 
81 1 333 1 241 2 270 1 216 1 39 1 299 2 298 1 148 4 329 11 119 1 27 1 193 3 125 2 226 6 227 1 96 1 197 1 98 1 133 5 12 1 331 2 350 2 14 2 234 1 261 2 263 1 138 1 
81 1 209 1 241 1 270 1 216 1 39 1 274 1 299 3 298 2 148 6 329 19 119 1 27 2 120 2 193 4 194 1 367 1 125 3 226 9 227 1 96 1 197 1 98 3 133 10 12 1 331 3 350 3 14 3 261 3 234 1 315 1 263 1 138 1 
81 1 209 1 241 1 270 1 216 1 39 1 274 1 299 3 298 2 148 6 329 17 119 1 27 2 120 1 193 5 194 1 367 1 125 3 226 10 227 1 96 2 197 1 98 2 133 7 12 1 331 3 350 3 14 3 261 3 234 1 315 1 263 1 138 1 
81 1 241 1 39 1 216 1 299 1 148 2 329 8 119 1 193 2 125 2 226 4 227 1 197 1 98 1 133 4 12 1 331 1 350 1 14 1 261 1 234 1 263 1 138 1 
81 1 241 1 274 1 299 1 298 2 148 2 329 12 119 1 27 2 120 2 193 2 194 1 367 1 125 1 226 6 96 1 98 2 133 6 331 2 350 1 14 1 261 1 234 1 315 1 263 1 
81 1 209 2 241 1 270 1 216 1 39 1 274 1 299 4 298 2 148 8 329 18 119 1 27 2 120 1 193 5 194 1 367 1 125 3 226 10 227 1 96 2 197 1 98 2 133 8 12 1 331 3 350 4 14 4 261 4 234 1 315 1 263 1 138 1 
81 1 209 2 241 1 274 1 299 4 298 3 148 8 329 16 119 1 27 3 120 2 193 6 194 1 367 1 125 3 226 9 96 3 98 2 133 7 331 3 350 4 14 4 234 1 261 4 315 1 56 1 263 1 
125 3 226 3 227 3 96 3 98 1 39 3 216 1 133 4 12 2 331 1 329 7 138 1 193 6 
81 1 209 2 241 1 216 1 39 1 274 1 299 4 298 2 148 8 329 18 119 1 27 2 120 1 193 4 194 1 367 1 125 3 226 10 227 1 96 1 197 1 98 2 133 8 12 1 331 3 350 4 14 4 234 1 261 4 315 1 56 1 263 1 138 1 
124 1 251 1 246 1 302 1 293 1 118 1 200 1 
124 1 251 1 1 1 293 1 200 1 326 1 246 1 89 1 302 1 118 1 276 1 205 1 
107 1 158 1 93 1 9 1 48 1 94 1 28 1 142 1 84 1 316 1 354 1 
124 1 158 1 93 1 9 1 94 1 255 1 48 1 109 1 319 1 142 1 84 1 293 1 13 1 246 2 63 1 302 2 316 1 157 1 
124 1 254 1 93 3 9 1 94 2 255 1 48 1 109 1 83 1 319 2 142 1 84 1 111 1 293 2 5 1 62 1 13 2 246 2 63 1 338 1 302 2 316 1 157 1 
109 1 83 1 142 2 319 2 84 1 111 1 293 2 323 1 5 1 62 1 246 2 338 1 302 2 124 1 254 1 9 2 93 3 48 1 255 1 94 2 51 1 13 2 316 2 157 1 
106 1 158 1 240 1 142 3 319 1 84 1 111 1 5 1 167 1 254 1 93 4 9 3 48 1 94 1 256 2 126 1 258 2 51 1 15 1 353 1 287 1 316 3 34 1 
158 1 254 1 65 1 9 3 93 4 94 1 48 1 256 2 240 1 126 1 319 1 258 2 142 3 84 1 51 1 111 1 5 1 167 1 15 1 353 1 316 3 287 1 
9 1 48 1 142 1 84 1 316 1 184 1 
158 2 318 1 9 7 93 3 94 2 48 2 69 1 142 7 319 1 84 3 87 1 112 1 184 1 373 1 337 1 311 1 262 1 316 6 305 1 139 1 192 1 
142 1 84 1 293 1 39 1 183 1 88 1 299 2 148 4 246 2 302 2 192 1 193 2 252 1 9 1 93 1 255 1 48 1 94 1 257 1 197 1 98 1 12 1 350 2 13 1 14 2 261 2 316 1 16 2 157 1 109 1 319 1 59 1 216 1 114 1 63 1 329 6 222 1 124 2 125 2 226 3 227 1 285 1 175 1 133 3 331 1 288 2 138 1 
158 1 57 1 82 1 266 1 141 1 240 1 142 1 113 1 167 2 24 1 341 2 366 2 65 1 47 1 9 1 93 2 153 2 256 3 126 1 258 3 130 1 15 1 353 1 102 2 55 1 316 1 287 1 78 1 
9 1 93 1 94 1 48 1 126 1 143 1 142 1 319 1 84 1 132 1 112 1 184 1 316 1 
158 1 107 1 9 4 93 1 94 1 48 1 142 4 28 1 84 1 51 1 146 1 316 4 192 1 
122 1 9 2 93 1 94 1 48 1 163 1 142 2 319 1 84 2 336 1 5 1 373 1 316 2 305 1 
158 1 291 1 280 1 9 1 48 1 142 1 84 1 316 1 31 1 191 1 
9 2 93 1 94 1 48 1 69 1 142 2 84 1 87 1 245 1 316 2 192 1 
107 1 158 1 9 5 93 3 94 2 48 2 69 1 28 1 142 5 84 2 146 1 5 1 316 4 262 1 139 1 192 1 
107 1 158 1 9 5 93 3 94 2 48 2 69 1 28 1 142 5 97 1 84 2 146 1 5 1 316 4 139 1 192 1 
124 1 158 1 93 1 9 1 94 1 255 1 48 1 109 1 319 1 142 1 84 1 293 1 323 1 13 1 246 2 302 2 316 1 157 1 
5 1 373 1 93 1 9 1 48 1 94 1 311 1 319 1 142 1 84 2 316 1 305 1 112 1 
50 1 29 1 174 1 293 1 40 1 23 1 246 1 302 1 355 1 
23 1 247 1 235 1 
124 1 23 1 50 1 375 1 29 1 
124 1 256 2 267 1 240 1 83 1 258 2 50 2 29 2 23 1 62 1 15 1 338 1 300 1 353 1 55 1 247 1 314 1 235 1 375 2 
301 1 150 1 354 1 73 1 
345 1 265 1 301 1 149 1 150 1 73 1 199 1 
44 1 221 1 199 1 
345 1 265 1 60 1 199 3 73 1 322 1 364 1 75 1 301 1 149 3 150 1 317 2 
345 1 265 1 301 1 70 1 149 2 150 1 131 1 73 1 199 2 
75 1 345 1 265 1 136 1 3 1 170 1 301 1 149 1 31 1 191 1 199 1 
75 1 345 1 265 1 301 1 149 1 150 1 199 1 
75 1 345 1 265 1 149 1 150 2 73 1 199 1 
345 2 265 2 199 2 370 1 201 1 75 1 101 1 301 1 149 2 150 1 
345 1 265 1 67 1 3 1 70 2 214 1 73 1 199 3 203 1 75 1 149 3 301 2 150 1 
291 1 345 1 265 1 70 1 31 2 73 1 199 2 75 1 286 1 301 1 149 2 170 1 150 1 191 1 92 1 
105 1 345 2 265 2 67 1 3 1 70 2 131 1 73 1 199 4 75 1 149 4 301 2 150 1 
75 1 345 1 265 1 301 1 149 1 150 1 73 1 199 1 
345 1 265 1 67 1 3 1 70 2 73 2 199 4 322 1 364 1 149 4 301 3 150 2 304 1 317 1 
345 1 265 1 334 1 70 1 211 1 199 2 73 1 75 1 301 1 149 2 150 1 117 1 
345 1 265 1 199 3 73 1 322 2 364 1 165 1 75 1 301 1 149 3 150 1 317 2 
301 2 155 1 21 1 349 2 
75 1 345 1 265 1 149 1 199 1 180 1 
75 1 345 1 265 1 301 1 70 1 149 2 150 1 73 1 199 2 203 1 
307 1 
75 1 345 1 265 1 301 1 149 1 150 1 73 1 199 1 
345 1 265 1 70 1 199 3 73 1 203 1 75 1 149 3 301 1 150 1 317 1 
3 1 67 1 301 1 304 1 
301 1 150 1 

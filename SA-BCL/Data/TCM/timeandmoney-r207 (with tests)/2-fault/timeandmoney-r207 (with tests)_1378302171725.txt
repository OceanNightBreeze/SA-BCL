#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 363 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
350 1 369 2 130 3 251 2 200 1 67 1 253 1 50 1 29 2 115 3 106 1 33 1 111 1 
1 1 350 3 130 9 66 1 182 1 251 5 26 1 67 6 253 1 50 1 29 2 115 9 312 1 335 2 33 4 190 2 194 1 369 2 200 2 143 1 144 1 264 1 241 2 106 1 246 1 227 1 111 1 110 2 
1 1 350 3 130 9 66 1 182 1 251 5 26 1 67 6 253 1 50 1 29 2 115 9 312 1 335 2 33 4 190 2 194 1 369 2 200 2 143 1 144 1 264 1 241 2 106 1 246 1 227 1 111 1 110 2 
1 1 350 4 130 10 66 1 182 1 251 6 26 1 67 7 253 1 50 1 29 2 115 10 312 1 335 2 33 5 190 2 194 1 369 2 200 2 143 1 144 1 264 1 241 2 106 1 246 1 227 1 111 1 110 2 
1 1 350 2 130 7 66 1 251 4 26 1 67 4 253 1 50 1 29 2 115 7 312 1 335 1 33 3 190 2 194 1 369 2 200 2 143 1 144 1 264 1 241 2 106 1 246 1 227 1 111 1 110 2 
350 1 369 1 130 4 66 1 182 1 26 1 251 3 67 3 253 1 29 1 115 4 241 1 335 2 106 1 33 2 190 1 111 1 110 1 
369 1 130 2 219 1 251 1 40 1 221 1 143 1 200 1 253 1 29 1 115 2 312 1 241 1 106 1 111 1 110 1 
350 3 130 9 66 1 251 5 26 1 182 1 67 7 253 1 50 1 29 2 115 9 285 1 335 2 33 4 190 1 369 2 319 1 200 1 144 1 264 1 241 1 106 1 111 1 110 1 
350 3 130 9 66 1 251 5 26 1 182 1 67 7 253 1 50 1 29 2 115 9 285 1 335 2 33 4 190 1 369 2 319 1 200 1 144 1 264 1 241 1 106 1 111 1 110 1 
208 1 140 1 48 1 372 1 79 1 321 1 19 1 42 1 282 1 225 1 123 1 86 1 259 1 74 1 
71 1 
338 1 19 1 94 1 71 1 41 1 259 2 92 1 321 2 
338 1 46 1 329 1 78 2 235 2 41 1 113 1 373 1 104 2 321 5 92 2 19 2 332 1 71 1 212 1 240 1 243 1 259 5 99 1 
338 1 71 1 178 1 
71 1 378 1 330 2 
42 2 282 2 140 2 225 1 48 2 86 2 316 1 74 2 
301 1 328 1 48 3 4 1 230 1 282 2 185 1 97 1 334 1 358 1 257 1 314 1 73 2 316 1 74 2 163 2 215 1 165 1 339 2 197 2 140 3 61 1 142 1 371 1 172 1 222 1 173 2 120 1 42 2 239 1 323 1 324 1 225 1 150 1 176 1 86 2 23 1 
42 1 282 1 208 1 140 1 225 1 123 1 48 1 86 1 372 1 74 1 
337 1 338 1 128 1 140 1 48 1 249 1 372 1 292 1 68 1 321 1 71 1 259 1 346 1 74 1 
337 1 338 1 128 1 140 1 48 1 372 1 292 1 321 2 42 1 282 1 71 1 86 1 259 2 346 1 74 1 
19 1 85 1 259 1 92 1 321 1 
338 1 19 1 341 1 71 1 41 1 259 2 92 1 321 2 
259 1 92 1 321 1 
140 2 48 2 118 1 42 1 282 1 86 1 74 2 316 2 336 1 
148 1 311 1 359 1 
165 1 197 1 140 1 48 1 172 1 173 1 4 1 237 1 185 1 97 1 323 1 334 1 150 1 73 1 23 1 316 1 
165 1 248 1 197 1 367 1 140 2 48 2 172 1 173 1 4 1 282 1 185 1 97 1 334 1 323 1 359 1 150 1 73 1 86 1 23 1 74 1 
178 1 316 1 
248 1 340 1 367 2 140 5 48 5 249 1 274 1 42 1 282 4 333 1 86 4 74 5 316 1 336 1 
282 2 140 2 123 1 48 2 86 2 44 1 372 1 74 2 
42 1 282 3 367 1 140 3 48 3 86 3 316 1 74 3 
282 1 140 1 123 1 48 1 86 1 372 1 74 1 
42 1 282 1 140 1 48 1 118 1 86 1 372 1 74 1 336 1 
301 1 248 1 128 1 328 1 48 4 4 1 282 3 185 1 283 1 97 1 334 1 358 1 257 1 287 1 314 1 73 1 259 1 316 1 74 3 163 1 336 1 337 1 215 1 165 1 339 2 197 1 367 1 140 4 371 1 172 1 372 1 292 1 173 1 120 1 321 1 42 2 323 1 324 1 225 1 150 1 176 1 86 3 23 1 346 1 
282 1 367 1 140 2 48 2 249 1 274 1 86 1 316 1 74 2 
337 1 248 1 128 1 367 2 140 3 48 3 372 1 292 1 321 1 42 1 282 3 71 1 287 1 86 3 259 1 346 1 74 3 325 1 336 1 
367 1 140 2 48 2 42 1 282 2 148 1 359 1 86 2 74 2 336 1 
165 1 197 1 140 1 48 1 172 1 173 1 4 1 185 1 323 1 334 1 97 1 150 1 73 1 23 1 316 1 
165 1 53 1 197 1 140 1 48 1 173 1 4 1 185 1 334 1 97 1 150 1 73 1 380 1 23 1 316 1 
301 1 87 1 89 1 328 1 8 1 70 1 31 1 311 2 358 1 359 2 314 1 315 1 136 1 163 4 215 2 216 1 339 2 14 1 100 1 38 1 222 2 120 1 148 2 324 1 
282 1 140 1 48 1 86 1 372 1 44 1 346 1 74 1 
184 1 261 1 275 1 
184 2 88 1 204 1 275 2 352 1 326 1 
184 1 275 1 
184 1 275 1 
204 1 352 1 
204 1 352 1 
204 1 352 1 
184 1 348 1 275 1 
184 1 348 1 275 1 
184 1 348 1 275 1 
184 1 170 1 275 1 
184 1 170 1 275 1 
184 1 170 1 275 1 
48 2 275 1 276 1 184 1 282 2 11 1 259 1 316 1 74 2 191 1 193 1 196 1 261 1 140 2 57 1 77 1 321 1 146 1 322 1 223 1 266 1 86 2 244 1 180 1 
35 1 125 1 196 1 77 2 275 2 131 1 278 2 321 2 147 1 146 3 184 2 376 1 322 2 71 1 244 2 259 2 51 1 326 1 193 2 
241 2 219 1 190 1 226 2 65 1 
241 1 190 1 110 1 
241 1 219 1 110 1 
241 3 219 1 141 1 226 1 190 2 65 1 
241 2 219 1 226 1 190 1 268 1 65 1 
209 1 330 3 49 2 92 1 254 1 8 1 332 2 284 1 212 1 71 2 186 1 116 1 258 1 315 1 259 5 191 1 338 1 216 1 15 2 57 1 38 1 235 1 78 1 41 1 293 1 104 1 321 5 19 4 223 1 378 1 240 3 45 2 
347 5 209 2 330 9 49 6 331 1 92 6 8 3 332 6 284 3 71 5 212 1 186 2 72 1 258 1 361 1 99 1 315 3 259 9 191 4 135 1 338 1 216 3 38 3 218 1 78 2 235 2 41 1 104 2 321 9 19 7 378 3 240 8 175 1 85 5 45 6 
209 1 330 4 49 2 254 1 8 1 332 2 71 3 284 1 186 1 116 1 259 3 99 1 315 1 191 1 338 1 216 1 15 1 38 1 235 1 78 1 104 1 321 3 19 2 378 2 240 3 45 2 
209 1 330 7 49 4 331 1 254 1 8 2 332 4 71 4 284 2 186 1 116 1 361 1 259 4 99 1 315 2 191 2 338 1 216 2 15 2 38 2 235 1 78 1 104 1 321 4 19 3 378 3 240 5 175 1 45 4 
152 1 
97 1 271 1 178 1 
97 1 22 1 
97 1 334 1 4 1 
168 1 97 1 
97 1 334 1 
363 1 
215 3 166 1 327 1 262 1 37 1 38 1 211 1 90 1 181 1 222 4 8 1 70 3 306 1 354 2 31 2 177 1 192 1 163 7 
211 5 90 2 181 1 306 1 8 4 70 10 354 3 284 3 31 5 358 1 213 1 314 1 161 1 315 3 192 1 163 31 215 15 166 2 339 2 216 3 37 1 262 2 102 1 171 1 38 4 263 1 199 1 222 16 120 1 174 3 63 4 201 1 324 1 177 2 
211 1 90 1 250 1 181 1 8 1 70 4 354 2 31 3 358 2 214 1 314 2 192 1 163 9 166 1 215 4 339 4 262 1 37 1 38 1 199 1 222 5 120 2 324 2 177 1 
215 3 166 1 262 1 37 1 38 1 211 1 90 1 181 1 222 4 8 1 70 3 306 1 354 2 31 2 177 1 192 1 163 7 
215 3 166 1 262 1 37 1 38 1 211 1 90 1 181 1 222 4 8 1 70 3 306 1 354 2 31 2 177 1 192 1 163 7 
130 1 277 2 6 2 29 1 185 1 115 1 357 1 334 1 97 1 73 1 117 2 165 1 197 1 138 1 369 1 17 1 200 2 173 1 374 1 342 1 150 1 242 1 109 1 
130 1 277 1 91 1 253 1 6 1 95 1 29 1 115 1 185 1 32 1 232 1 73 1 190 1 117 1 197 1 369 1 219 1 141 1 119 1 200 1 173 1 150 1 241 2 381 1 24 1 110 1 
130 2 251 1 277 1 67 1 3 1 91 1 253 1 6 1 95 1 29 1 115 2 185 1 32 1 232 1 73 1 190 1 117 1 197 1 369 1 219 1 141 1 200 1 173 1 150 1 241 2 106 1 381 1 24 1 111 1 110 1 
130 3 251 1 277 1 67 2 91 1 6 1 95 1 29 1 115 3 185 1 32 1 73 1 190 1 117 1 197 1 369 1 219 1 141 1 119 1 200 1 173 1 21 1 150 1 241 2 106 1 242 1 381 1 24 1 111 1 110 1 
130 2 251 1 277 1 67 2 91 1 6 1 95 1 115 2 185 1 32 1 73 1 190 1 117 1 197 1 219 1 141 1 119 1 200 1 173 1 21 1 150 1 241 2 106 1 111 1 110 1 
81 1 
128 1 129 1 330 2 48 1 92 6 332 2 185 1 334 1 97 1 187 1 233 1 288 1 337 1 338 1 197 2 55 1 140 1 60 4 235 1 62 2 292 1 104 1 18 1 240 2 298 2 150 1 107 1 299 2 108 1 151 1 346 1 109 1 300 1 209 1 249 1 156 2 68 1 69 1 158 2 160 1 255 2 71 2 212 1 357 1 73 2 259 5 162 2 74 1 165 2 78 1 41 3 372 1 173 2 321 5 378 2 
128 1 48 1 249 1 68 1 156 1 92 2 69 1 94 1 187 1 233 1 259 3 74 1 337 1 140 1 60 2 41 1 372 1 292 1 18 1 321 3 346 1 300 1 
128 1 48 1 249 1 92 1 68 1 69 1 94 1 71 1 187 1 233 1 259 3 74 1 162 1 337 1 338 1 140 1 60 3 41 1 372 1 292 1 18 1 321 3 346 1 300 1 
128 1 48 1 249 1 68 1 156 1 92 2 69 1 94 1 255 1 71 1 187 1 233 1 259 3 74 1 162 1 337 1 338 1 140 1 60 3 41 1 372 1 292 1 18 1 321 3 346 1 300 1 
0 1 128 1 48 1 92 7 94 1 332 1 187 1 233 1 337 1 338 5 55 1 140 1 101 1 60 6 235 1 292 1 62 2 104 1 18 1 240 1 298 2 299 2 346 1 151 1 300 1 249 1 156 4 68 1 69 1 158 2 255 4 308 1 71 5 212 1 259 5 74 1 162 4 217 1 78 1 41 3 372 1 220 1 321 5 378 2 
128 1 330 2 48 1 249 1 156 2 92 4 68 1 69 1 158 2 255 2 332 1 71 2 212 1 187 1 233 1 259 4 162 2 74 1 337 1 338 1 55 1 140 1 60 4 235 1 78 1 41 2 372 1 62 2 292 1 104 1 18 1 321 4 378 2 240 1 298 2 299 2 108 1 151 1 346 1 300 1 
128 1 48 1 249 1 156 2 92 4 68 1 69 1 158 2 255 2 332 1 308 1 71 1 212 1 187 1 233 1 259 4 162 2 74 1 337 1 338 1 55 1 101 1 140 1 60 4 235 1 78 1 41 2 372 1 220 1 62 2 292 1 104 1 18 1 321 4 378 2 240 1 298 2 299 2 151 1 346 1 300 1 
128 1 48 1 249 1 156 2 92 4 68 1 69 1 158 2 255 2 332 1 308 1 71 1 212 1 187 1 233 1 259 4 162 2 74 1 337 1 338 1 55 1 101 1 140 1 60 4 235 1 78 1 41 2 372 1 220 1 62 2 292 1 104 1 18 1 321 4 378 2 240 1 298 2 299 2 151 1 346 1 300 1 
128 1 304 1 330 2 48 1 249 1 273 1 156 2 92 4 68 1 69 1 255 2 332 1 71 1 212 1 187 1 233 1 259 4 162 2 74 1 12 1 364 2 337 1 338 1 101 1 140 1 60 4 235 1 78 1 41 2 372 1 62 2 292 1 104 1 18 1 321 4 240 1 179 2 299 2 151 1 346 1 300 1 
128 1 48 1 249 1 68 1 156 3 92 5 69 1 158 2 332 1 255 3 308 1 71 1 212 1 187 1 233 1 259 4 74 1 162 3 337 1 338 1 55 1 101 1 140 1 217 1 60 5 235 1 78 1 41 2 220 1 372 1 62 2 292 1 104 1 18 1 321 4 378 2 240 1 298 2 299 2 151 1 346 1 300 1 
128 1 48 1 249 1 68 1 156 3 92 5 69 1 158 2 332 1 255 3 308 1 71 1 212 1 187 1 233 1 259 4 74 1 162 3 337 1 338 1 55 1 101 1 140 1 217 1 60 5 235 1 78 1 41 2 220 1 372 1 62 2 292 1 104 1 18 1 321 4 378 2 240 1 298 2 299 2 151 1 346 1 300 1 
128 1 304 1 330 2 48 1 249 1 156 2 92 4 68 1 69 1 255 2 332 1 71 1 212 1 187 1 233 1 259 4 162 2 74 1 364 2 337 1 338 1 140 1 60 4 235 1 78 1 41 2 372 1 62 2 292 1 104 1 18 1 321 4 240 1 179 2 299 2 108 1 151 1 346 1 300 1 
301 2 89 1 48 1 328 2 3 1 133 1 28 1 282 1 185 2 97 3 357 1 334 2 358 2 73 8 314 2 74 1 163 2 165 2 215 1 339 4 197 7 367 1 140 1 39 1 61 2 119 1 142 1 371 1 173 8 222 1 120 2 121 1 377 1 122 1 324 2 150 2 86 1 245 1 109 1 
301 1 328 1 48 1 70 1 8 1 282 1 284 1 31 1 311 1 358 1 359 1 314 1 315 1 362 1 74 1 336 1 163 3 215 2 339 2 216 1 140 1 38 1 222 1 120 1 295 1 42 1 148 1 324 1 86 1 
215 3 301 1 339 2 37 1 38 1 89 1 90 1 328 1 181 1 222 3 120 1 8 1 70 2 354 1 148 1 31 2 311 1 324 1 358 1 359 1 314 1 177 1 178 1 316 2 192 1 163 6 
301 2 328 1 183 1 279 1 7 1 311 3 358 2 359 3 314 2 316 1 163 4 215 3 339 4 139 1 198 1 371 1 372 1 222 1 120 2 174 1 63 1 295 1 324 2 
301 1 248 1 328 1 48 2 4 1 280 1 134 1 282 1 185 1 97 1 334 1 358 1 73 1 314 1 316 1 74 1 163 2 13 1 165 1 215 1 339 2 197 1 367 1 140 2 371 1 142 1 172 1 173 1 222 1 120 1 295 1 237 1 148 1 323 1 324 1 150 1 86 1 23 1 
228 2 90 1 48 3 328 3 181 1 4 2 8 3 282 1 281 2 185 2 284 2 334 2 97 2 192 1 339 6 54 2 197 3 140 3 142 1 295 1 203 1 148 7 150 2 23 2 301 3 248 1 211 4 351 1 159 2 70 8 354 1 31 4 311 7 358 3 257 2 359 7 73 3 314 3 315 2 316 2 74 1 163 20 215 10 165 1 216 2 37 1 367 1 38 3 119 1 371 1 172 2 173 3 222 10 120 3 323 2 324 3 379 1 177 1 86 1 
301 1 339 2 14 1 211 1 89 1 328 1 222 2 120 1 70 1 8 1 148 1 311 1 324 1 358 1 359 1 314 1 315 1 163 2 
301 1 215 2 339 2 216 1 89 1 38 1 328 1 120 1 70 1 148 1 31 1 311 1 324 1 358 1 359 1 314 1 136 1 163 2 
301 1 89 1 211 1 328 1 8 1 70 2 284 1 31 1 311 2 358 1 359 2 314 1 315 1 163 4 215 2 339 2 216 1 38 1 222 2 120 1 148 2 324 1 
301 1 339 2 14 1 211 1 328 1 222 2 120 1 70 1 8 1 148 1 122 1 311 1 324 1 358 1 359 1 314 1 315 1 163 2 
301 1 215 2 339 2 216 1 38 1 328 1 120 1 70 1 148 1 122 1 31 1 311 1 324 1 358 1 359 1 314 1 136 1 163 2 
301 1 211 1 328 1 8 1 70 2 284 1 31 1 311 2 358 1 359 2 314 1 315 1 163 4 215 2 339 2 216 1 38 1 222 2 120 1 122 1 148 2 324 1 
301 1 211 1 328 1 8 1 70 2 284 1 31 1 311 2 358 1 359 2 314 1 315 1 163 4 215 2 339 2 216 1 38 1 222 2 120 1 148 2 324 1 
301 1 48 1 328 1 4 1 185 1 334 1 97 1 358 1 257 1 73 1 314 1 316 1 163 2 165 1 215 1 339 2 197 1 140 1 142 1 371 1 172 1 222 1 173 1 120 1 323 1 324 1 150 1 23 1 
301 1 48 1 328 1 4 1 185 1 334 1 97 1 358 1 73 1 314 1 316 1 163 2 53 1 165 1 215 1 339 2 197 1 140 1 142 1 371 1 222 1 173 1 120 1 344 1 324 1 150 1 380 1 23 1 
301 1 211 1 328 1 8 1 70 2 284 1 31 1 311 2 358 1 359 2 314 1 315 1 163 4 215 2 339 2 216 1 38 1 222 2 120 1 295 1 148 2 324 1 
301 1 211 1 48 1 328 1 3 1 4 1 159 1 70 2 8 1 185 1 284 1 31 1 334 1 97 1 311 2 358 1 359 2 257 1 73 1 314 1 315 1 163 4 215 2 216 1 339 2 197 1 140 1 38 1 172 1 222 2 173 1 120 1 148 2 323 1 324 1 150 1 23 1 
301 1 211 1 328 1 48 1 70 1 8 1 282 1 284 1 311 1 358 1 359 1 314 1 315 1 74 1 336 1 163 3 215 1 216 1 339 2 140 1 38 1 222 2 120 1 295 1 42 1 148 1 324 1 43 1 86 1 
270 1 126 1 349 1 211 3 154 2 8 3 70 6 284 3 286 1 31 3 358 2 213 1 188 1 214 1 314 2 161 1 315 3 163 19 36 1 215 10 339 4 216 3 38 3 222 9 120 2 174 1 63 2 238 2 20 1 324 2 
270 2 126 1 211 2 114 1 154 4 70 4 8 3 284 3 31 2 358 3 188 1 214 1 213 2 314 3 315 3 163 26 36 1 215 12 365 1 339 6 216 2 167 1 38 2 59 1 199 2 222 14 120 3 174 2 63 2 375 1 238 1 20 2 324 3 124 1 
270 1 126 1 349 1 211 4 90 1 181 1 114 1 154 4 8 5 70 8 354 1 284 4 31 4 358 3 213 3 188 1 214 1 314 3 161 1 315 4 192 1 163 41 36 1 365 1 215 21 339 6 216 4 37 1 167 1 58 1 59 1 38 5 199 1 222 20 120 3 174 3 375 1 63 4 238 1 20 2 324 3 177 1 124 1 
270 1 126 1 349 1 211 3 90 1 181 1 114 1 154 4 8 5 70 7 354 1 284 4 31 4 358 4 213 3 188 1 214 1 314 4 161 1 315 4 192 1 163 38 36 1 365 1 215 18 339 8 216 3 37 1 167 1 58 1 59 1 38 4 199 2 222 20 120 4 174 3 375 1 63 4 238 1 20 2 324 4 177 1 124 1 
270 1 126 1 211 7 90 1 181 1 114 1 154 4 8 8 70 14 354 1 284 7 31 7 358 2 213 2 188 1 214 1 314 2 161 2 315 7 192 1 163 52 36 1 365 1 215 25 339 4 216 7 37 1 167 1 59 1 38 8 199 1 222 27 120 2 174 4 375 1 63 4 238 1 345 2 20 1 324 2 177 1 124 1 
125 1 184 1 322 1 77 1 275 1 244 1 51 1 260 1 326 1 193 1 
261 1 276 1 
184 1 30 1 322 1 77 1 229 1 275 1 244 1 291 1 193 1 
348 1 84 1 
88 1 170 1 252 1 
35 1 125 1 196 1 77 1 275 1 278 1 321 1 147 1 146 2 184 1 376 1 322 1 71 1 244 1 259 1 51 1 326 1 193 1 
35 1 125 1 196 1 77 1 275 1 278 1 321 1 147 1 146 2 184 1 376 1 322 1 71 1 244 1 259 1 51 1 326 1 193 1 
35 1 125 1 196 1 77 1 275 1 278 1 321 1 147 1 146 2 184 1 376 1 322 1 71 1 244 1 259 1 51 1 326 1 193 1 
88 1 348 1 84 1 
88 1 348 1 84 1 
170 1 252 1 
88 1 170 1 252 1 
266 1 180 1 
48 2 275 1 276 1 278 1 184 1 282 2 11 1 259 1 316 1 191 1 74 2 317 1 193 1 35 1 261 1 140 2 57 1 77 1 321 1 146 1 19 1 322 1 223 1 266 1 244 1 86 2 180 1 
301 1 112 1 328 1 305 1 48 2 2 1 133 1 28 1 185 1 97 1 334 1 358 1 73 2 314 1 74 2 163 2 215 1 339 2 197 2 140 2 61 2 142 1 371 1 173 2 222 1 120 1 145 1 295 1 82 1 324 1 150 1 
165 1 197 1 138 1 173 1 157 1 6 1 202 1 185 1 97 1 334 1 357 1 150 1 73 1 109 1 
197 1 219 1 153 1 141 1 119 1 173 1 6 1 202 1 95 1 185 1 83 1 32 1 241 2 150 1 73 1 190 1 381 1 110 1 
197 2 219 1 153 1 141 1 119 1 173 2 3 1 6 1 202 1 95 1 185 1 83 1 32 1 241 2 150 1 73 2 190 1 381 1 110 1 
197 1 56 1 219 1 153 1 141 1 119 1 173 1 6 1 95 1 185 1 32 1 241 2 150 1 73 1 190 1 381 1 110 1 
10 1 
338 1 46 1 78 1 235 1 104 1 332 1 212 1 71 1 240 1 243 1 
216 2 137 1 38 2 330 10 49 5 8 2 281 1 9 2 332 5 284 2 71 5 378 5 240 5 315 2 45 5 
338 1 71 1 41 1 259 1 321 1 92 1 
209 2 47 1 155 1 92 4 160 1 332 2 96 2 185 1 212 1 97 1 334 1 357 1 73 4 99 1 259 3 288 2 34 1 165 2 197 4 235 2 78 2 41 2 173 4 104 2 321 3 240 2 150 1 107 1 109 1 
338 1 46 1 332 1 71 1 240 1 243 1 178 1 
330 1 92 1 158 1 332 1 212 1 71 2 259 1 338 1 55 1 235 1 78 1 41 1 104 1 321 1 378 1 240 1 298 1 
46 1 127 1 128 2 47 1 271 2 330 12 49 6 3 1 4 3 92 5 5 1 8 2 9 2 231 2 281 2 332 8 96 1 185 4 284 2 97 10 334 3 98 2 288 1 338 2 197 3 137 2 290 2 235 4 104 4 240 9 22 3 150 3 243 1 206 1 302 2 209 2 212 4 71 8 313 2 73 3 259 5 315 2 165 1 216 2 168 2 38 2 78 4 41 3 173 3 321 5 378 6 267 1 269 2 45 6 
209 1 330 6 49 5 114 1 92 1 8 2 9 2 332 5 212 2 71 5 284 2 309 1 213 1 259 1 315 2 288 1 365 1 338 2 216 2 167 1 137 1 59 1 38 2 235 2 78 2 41 1 104 2 174 1 321 1 63 1 375 1 265 1 240 8 378 3 45 5 
208 1 48 1 90 1 8 2 9 2 282 1 332 2 212 1 259 1 192 1 74 1 75 1 137 1 140 1 38 1 235 1 78 1 372 1 220 1 104 1 79 1 321 1 42 1 240 2 225 1 123 1 177 1 86 1 
301 1 48 3 328 1 4 1 282 2 185 1 334 1 97 1 358 1 257 1 314 1 73 1 316 1 74 2 163 1 215 1 165 1 339 2 197 1 140 3 371 1 172 1 173 1 120 1 42 2 323 1 225 1 324 1 150 1 176 1 86 2 23 1 
338 2 209 1 330 4 49 2 78 1 235 1 104 1 354 1 332 2 212 1 71 4 378 2 240 1 288 1 45 2 
322 1 149 1 51 1 180 1 193 1 
322 1 236 1 193 1 
322 1 236 1 193 1 
322 1 236 1 193 1 
322 1 370 1 193 1 
322 1 370 1 193 1 
322 1 370 1 193 1 
322 1 193 1 
184 1 275 1 
75 1 215 5 339 2 211 2 38 2 90 2 222 5 120 1 70 5 8 2 31 3 324 1 358 1 214 1 314 1 177 2 192 1 163 10 
339 2 211 1 222 2 120 1 8 1 70 1 324 1 358 1 214 1 314 1 315 1 163 2 
215 2 216 1 339 2 38 1 211 1 222 2 120 1 70 2 8 1 284 1 31 1 324 1 358 1 214 1 314 1 315 1 163 4 
215 2 339 6 349 1 211 1 198 1 90 1 199 1 222 1 120 3 70 2 31 1 324 3 358 3 214 1 314 3 177 1 163 3 
349 1 211 5 90 3 181 1 8 5 70 12 354 1 284 3 31 7 358 5 213 1 214 1 314 5 161 1 315 3 192 2 163 34 215 18 339 10 216 3 37 1 102 1 38 5 198 1 263 1 199 2 222 16 120 5 174 3 63 4 201 1 64 1 324 5 177 3 
90 1 181 1 8 1 70 2 354 1 31 2 358 1 213 1 214 1 314 1 192 1 163 8 215 4 339 2 37 1 38 1 59 1 222 4 174 1 120 1 63 1 324 1 177 1 
211 1 90 1 181 1 8 2 70 3 354 1 284 1 31 2 358 2 213 1 214 1 314 2 161 1 315 1 192 1 163 11 215 5 339 4 37 1 38 1 59 1 222 6 120 2 174 1 63 2 64 1 324 2 177 1 
211 1 90 1 181 1 114 1 8 3 70 4 354 1 284 2 31 3 358 3 213 1 214 1 314 3 315 2 192 1 163 19 215 10 365 1 339 6 216 2 37 1 167 1 59 1 38 3 199 1 222 9 174 1 120 3 63 1 375 1 64 1 324 3 177 1 
211 2 90 1 181 1 114 1 8 3 70 5 354 1 284 2 31 3 358 3 213 1 214 1 314 3 315 2 192 1 163 17 215 7 365 1 339 6 216 1 37 1 167 1 59 1 38 2 199 1 222 10 174 1 120 3 63 1 375 1 64 1 324 3 177 1 
90 1 181 1 8 1 70 2 354 1 31 2 358 1 213 1 214 1 314 1 192 1 163 8 215 4 339 2 37 1 38 1 59 1 222 4 174 1 120 1 63 1 324 1 177 1 
211 1 114 1 8 2 70 2 284 2 31 1 358 1 213 1 214 1 314 1 315 2 163 12 215 6 365 1 339 2 216 2 167 1 59 1 38 2 222 6 174 1 120 1 63 1 375 1 324 1 
211 2 90 1 181 1 114 1 8 3 70 5 354 1 284 2 31 3 358 4 213 1 214 1 314 4 315 2 192 1 163 18 215 8 365 1 339 8 216 1 37 1 167 1 59 1 38 2 199 2 222 10 120 4 174 1 63 1 375 1 64 1 324 4 177 1 
349 1 211 3 114 1 8 3 70 6 284 3 31 3 358 4 213 1 214 1 314 4 315 3 163 16 215 7 365 1 339 8 216 2 167 1 59 1 38 2 199 2 222 9 120 4 174 1 63 1 375 1 324 4 
215 4 37 1 38 1 211 3 90 3 181 2 222 3 70 6 8 1 31 3 177 3 192 1 163 7 
349 1 211 1 90 1 181 1 114 1 8 3 70 4 354 1 284 2 31 3 358 4 213 1 214 1 314 4 315 2 192 1 163 18 215 8 365 1 339 8 216 1 37 1 167 1 59 1 38 2 199 2 222 10 120 4 174 1 63 1 375 1 324 4 177 1 
215 4 339 4 37 1 38 1 211 1 90 1 181 1 199 1 222 4 120 2 8 1 70 3 354 1 31 2 324 2 358 2 314 2 177 1 192 1 163 8 
215 3 8 1 70 2 354 1 37 1 31 2 38 1 90 1 181 1 177 1 178 1 222 3 192 1 163 6 
215 2 216 1 339 2 38 1 211 1 222 2 120 1 64 1 70 2 8 1 284 1 31 1 324 1 358 1 314 1 315 1 163 4 
215 4 216 1 38 1 211 1 222 3 174 1 63 2 8 1 70 2 284 1 31 1 213 1 161 1 315 1 163 7 
211 3 90 2 181 1 8 2 70 6 31 3 358 1 314 1 192 1 163 15 75 1 215 8 339 2 37 1 139 1 38 2 198 1 199 1 222 7 120 1 174 1 63 1 324 1 177 2 
63 1 215 1 163 1 
222 1 174 1 163 1 
215 3 339 2 216 1 211 1 38 1 222 3 120 1 64 1 8 1 70 3 281 1 284 1 31 2 324 1 358 1 314 1 315 1 163 6 
211 1 114 1 8 2 70 2 284 2 31 1 358 1 213 1 214 1 314 1 315 2 163 12 215 6 365 1 339 2 216 2 167 1 59 1 38 2 222 6 174 1 120 1 63 1 375 1 324 1 
215 3 38 1 211 1 90 1 222 3 8 1 70 2 31 1 177 1 192 1 163 6 
215 2 339 2 37 1 211 1 90 1 198 1 181 1 199 1 222 1 120 1 70 2 31 1 324 1 358 1 314 1 177 1 163 3 
296 1 140 1 48 1 249 1 274 1 316 1 74 1 
164 1 289 1 303 1 140 1 48 1 249 1 274 1 80 1 296 1 360 1 316 1 74 1 
165 1 197 4 185 1 97 1 334 1 357 1 310 1 150 1 73 4 320 1 173 4 109 1 3 1 
207 1 197 2 169 1 173 2 132 1 4 1 96 1 203 1 185 2 334 1 97 1 150 1 73 2 247 1 
165 1 197 1 185 1 32 1 241 1 219 1 150 1 73 1 173 1 110 1 
197 2 2 1 119 1 173 2 3 1 28 1 185 1 334 1 97 1 150 1 73 2 
165 1 197 4 39 1 320 1 173 5 3 1 28 1 96 1 185 2 377 1 357 1 334 2 97 3 150 2 73 5 109 1 
165 1 195 1 197 4 320 1 173 5 3 1 28 1 96 1 185 2 377 1 357 1 334 2 97 3 150 2 73 5 109 1 
165 1 197 1 185 1 97 1 334 1 357 1 150 1 73 1 178 1 173 1 109 1 
165 1 197 1 367 1 140 2 48 2 172 1 173 1 4 1 282 1 185 1 97 1 334 1 150 1 73 1 86 1 23 1 316 1 74 1 
48 2 4 2 282 1 96 1 185 1 334 2 97 3 73 1 316 1 74 2 197 1 168 1 367 1 140 2 172 1 372 1 173 1 292 1 150 1 86 2 23 1 346 1 269 1 
48 2 4 2 282 1 96 1 185 1 334 2 97 3 310 1 73 2 316 1 74 2 53 1 197 2 168 1 367 1 140 2 372 1 173 2 292 1 150 1 86 2 23 1 346 1 269 1 
165 1 338 1 128 1 168 1 197 3 271 1 173 3 4 1 321 2 92 1 93 1 307 1 71 1 185 1 96 1 334 1 97 4 310 1 22 1 150 1 73 3 259 2 269 1 
165 1 338 1 128 1 168 1 197 3 271 1 290 1 173 3 4 1 321 2 92 1 71 1 185 1 96 1 334 1 97 4 310 1 22 1 150 1 73 3 259 2 269 1 
197 1 185 1 150 1 73 1 245 1 173 1 
165 2 207 1 197 6 61 1 39 1 119 1 173 7 3 1 4 1 121 1 28 1 377 1 185 3 334 2 97 3 256 1 267 1 150 2 73 7 245 1 247 1 
301 2 228 1 90 1 328 2 48 2 181 1 3 1 4 1 159 1 8 1 70 2 354 1 282 1 185 1 31 2 97 1 334 1 311 1 358 2 359 1 257 1 314 2 73 1 316 2 192 1 74 1 163 6 215 3 339 4 37 1 197 1 367 1 140 2 38 1 172 1 222 3 173 1 120 2 295 1 82 1 148 1 323 1 324 2 150 1 177 1 86 1 23 1 
46 1 302 1 128 1 47 1 271 1 92 2 231 1 332 1 71 1 212 2 97 2 98 1 73 1 259 3 338 1 165 1 197 1 290 1 235 2 78 2 41 1 173 1 104 2 321 3 19 1 240 1 22 1 243 1 
197 2 127 1 271 1 173 2 3 1 4 1 185 2 334 1 97 2 267 1 150 1 73 2 245 1 
165 1 53 1 197 1 367 1 140 2 48 2 173 1 4 1 282 1 185 1 97 1 334 1 150 1 73 1 86 1 23 1 316 1 74 1 
207 1 197 1 173 1 4 1 96 1 185 2 334 1 97 1 256 1 267 1 150 1 73 1 247 1 
366 1 355 1 189 1 316 1 382 1 
337 1 338 1 318 1 366 2 128 1 372 1 292 1 27 1 321 2 19 1 355 1 71 1 224 1 287 1 259 2 189 2 346 1 316 1 382 2 
366 1 112 1 355 1 140 1 48 1 305 1 189 1 74 1 145 1 
318 1 355 1 224 1 
253 1 29 1 115 1 130 1 369 1 106 1 251 1 111 1 
234 1 350 1 368 1 130 4 369 1 272 1 251 3 67 2 29 1 115 4 312 1 106 2 33 1 111 2 
369 1 130 2 251 1 319 1 103 1 67 1 253 1 29 1 343 1 115 2 106 1 111 1 
253 1 234 1 29 1 115 3 368 2 130 3 369 1 312 2 205 1 106 1 251 1 111 1 
105 1 16 2 251 2 353 1 
253 1 29 1 115 1 356 1 130 1 369 1 
253 1 29 1 115 2 130 2 369 1 106 1 251 1 144 1 67 1 111 1 
294 1 
253 1 29 1 115 1 130 1 369 1 106 1 251 1 111 1 
106 1 251 1 178 1 111 1 
29 1 115 1 130 1 369 1 106 1 251 1 111 1 
130 1 200 1 117 1 
234 1 369 1 130 3 368 1 251 1 253 1 297 1 29 1 115 3 312 2 106 1 111 1 
29 1 115 2 130 2 369 1 335 1 106 1 251 1 67 1 111 1 
369 1 130 1 66 1 251 1 253 1 29 1 115 1 241 1 33 1 190 1 110 1 
253 1 29 1 115 1 130 1 369 1 106 1 251 1 
253 1 29 1 115 1 130 1 369 1 106 2 111 1 
253 1 76 1 29 2 115 2 210 1 130 2 369 2 106 1 251 1 25 1 
350 1 369 1 130 3 251 2 144 1 67 2 264 1 253 1 29 1 115 3 106 1 33 1 111 1 
52 1 369 1 130 2 219 1 141 1 251 1 67 1 253 1 29 1 115 2 241 2 106 1 190 1 111 1 110 1 
350 1 369 2 130 4 182 1 251 2 67 2 253 1 29 2 115 4 335 1 106 1 33 1 111 1 
369 1 130 3 251 1 144 1 67 1 253 1 29 1 115 3 312 1 106 1 111 1 
350 1 272 1 33 1 251 1 
106 1 251 1 

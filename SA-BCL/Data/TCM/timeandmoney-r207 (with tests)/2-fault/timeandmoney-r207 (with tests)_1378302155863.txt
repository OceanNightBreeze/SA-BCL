#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 230 332 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 6 334 1 237 4 29 1 78 9 221 1 81 2 268 1 294 2 245 9 37 1 159 5 347 1 250 1 352 1 321 1 180 2 62 1 205 1 206 1 357 2 21 1 285 2 309 2 234 2 49 1 260 3 380 1 
2 6 334 1 237 4 29 1 78 9 221 1 81 2 268 1 294 2 245 9 37 1 159 5 347 1 250 1 352 1 321 1 180 2 62 1 205 1 206 1 357 2 21 1 285 2 309 2 234 2 49 1 260 3 380 1 
2 7 334 1 237 5 29 1 78 10 221 1 81 2 268 1 294 2 245 10 37 1 159 6 347 1 250 1 352 1 321 1 180 2 62 1 205 1 206 1 357 2 21 1 285 2 309 2 234 2 49 1 260 4 380 1 
2 4 334 1 237 3 29 1 78 7 221 1 81 2 268 1 294 2 245 7 37 1 159 4 347 1 352 1 321 1 180 1 62 1 205 1 206 1 357 2 21 1 285 2 309 2 234 2 49 1 260 2 380 1 
2 3 237 2 250 1 352 1 180 2 62 1 29 1 205 1 78 4 221 1 357 1 81 1 245 4 285 1 309 1 234 1 260 1 159 3 
352 1 62 1 64 1 78 2 221 1 268 1 293 1 81 1 357 1 270 1 294 1 245 2 309 1 234 1 159 1 380 1 
2 1 237 1 352 1 62 1 78 3 221 1 294 1 245 3 309 2 234 2 49 1 260 1 159 2 
2 7 237 4 239 1 29 1 78 9 221 1 81 1 294 1 245 9 159 5 347 1 352 1 321 1 250 1 180 2 62 1 139 1 205 1 357 1 285 1 309 2 234 2 260 3 49 1 
2 7 237 4 239 1 29 1 78 9 221 1 81 1 294 1 245 9 159 5 347 1 352 1 321 1 250 1 180 2 62 1 139 1 205 1 357 1 285 1 309 2 234 2 260 3 49 1 
134 1 119 1 375 1 
275 1 375 1 338 2 
307 1 213 2 40 1 367 2 89 2 302 2 126 2 7 2 
3 1 213 2 73 2 365 1 193 1 102 1 367 2 339 1 217 2 104 2 151 1 126 3 7 2 241 1 8 1 109 2 35 1 57 1 176 1 228 1 274 1 273 1 40 1 59 1 162 1 201 1 89 3 302 2 65 1 307 1 19 1 308 1 207 2 258 1 232 1 210 1 24 1 
213 1 40 1 367 1 89 1 111 1 302 1 126 1 7 1 
98 1 71 1 375 1 135 1 367 1 149 1 179 1 89 1 126 1 119 1 310 1 295 1 12 1 189 1 
71 2 213 1 375 1 135 2 367 1 149 1 89 1 302 1 126 1 7 1 119 1 310 1 295 1 12 1 189 1 
26 1 71 1 297 1 135 1 137 1 
372 1 26 1 71 2 119 1 375 1 135 2 5 1 137 1 
26 1 71 1 135 1 
71 1 40 1 213 1 135 1 367 1 89 1 302 1 137 1 126 1 7 1 111 1 83 1 
375 1 
26 1 71 2 119 1 375 1 135 2 5 1 244 1 137 1 
71 5 26 2 375 1 135 5 5 1 152 1 303 1 220 1 137 2 114 2 280 1 33 1 119 1 267 1 108 1 282 2 23 2 174 1 212 1 
307 1 134 1 
213 1 367 2 89 2 302 1 126 2 7 1 307 2 10 1 287 1 
15 1 188 1 25 1 
274 1 73 1 365 1 102 1 201 1 89 1 151 1 126 1 196 1 65 1 307 1 19 1 308 1 207 1 109 1 57 1 
274 1 213 1 73 1 365 1 102 1 201 1 367 1 315 1 89 2 151 1 126 2 7 1 91 1 65 1 19 1 308 1 207 1 109 1 188 1 57 1 
307 1 213 3 367 3 315 1 89 3 302 1 126 3 7 3 
213 1 177 1 367 1 89 1 126 1 7 1 189 1 
213 1 10 1 367 1 89 1 302 1 126 1 7 1 287 1 189 1 
71 1 3 1 213 3 73 1 365 1 193 1 102 1 339 1 367 3 217 2 315 1 149 1 104 1 151 1 126 4 7 3 8 1 109 1 129 1 295 1 12 1 57 1 176 1 274 1 40 1 59 1 135 1 162 1 201 1 89 4 302 2 91 1 65 1 307 1 19 1 308 1 207 1 258 1 310 1 69 1 210 1 24 1 287 1 189 1 
98 1 14 1 307 1 213 1 367 2 315 1 89 2 126 2 7 1 
71 1 213 3 375 1 135 1 367 3 315 2 149 1 89 3 302 1 126 3 7 3 91 1 118 1 129 1 295 1 310 1 12 1 287 1 189 1 
213 2 367 2 315 1 89 2 302 1 126 2 7 2 188 1 25 1 287 1 
274 1 73 1 365 1 102 1 201 1 89 1 151 1 126 1 65 1 307 1 19 1 308 1 207 1 109 1 57 1 
274 1 73 1 365 1 102 1 201 1 89 1 126 1 127 1 183 1 307 1 19 1 308 1 207 1 109 1 57 1 
3 2 366 1 191 1 217 2 104 4 8 1 343 1 266 1 34 1 35 2 176 1 198 1 15 2 199 1 59 1 162 1 178 1 92 1 251 1 67 1 258 1 188 2 24 1 25 2 
213 1 367 1 149 1 89 1 126 1 7 1 189 1 272 1 
98 1 14 1 213 4 367 5 315 2 89 5 302 1 126 5 7 4 91 1 307 1 79 1 209 1 287 1 
213 2 177 1 367 2 89 2 126 2 7 2 272 1 189 1 
116 1 142 1 
116 1 142 1 
299 1 351 1 
299 1 351 1 
299 1 351 1 
116 1 142 1 120 1 
116 1 142 1 120 1 
116 1 142 1 215 1 
330 1 116 2 142 2 257 1 299 1 351 1 
116 1 142 1 120 1 
262 1 116 1 142 1 
262 1 116 1 142 1 
262 1 116 1 142 1 
330 1 71 2 375 1 263 1 135 2 341 1 304 1 322 2 30 2 164 1 116 2 231 1 117 2 142 2 80 1 56 3 93 2 227 2 70 1 
71 1 51 1 213 2 215 1 367 2 126 2 7 2 30 1 56 1 223 1 197 1 173 1 227 1 131 1 135 1 89 2 322 1 164 1 116 1 307 1 142 1 355 1 93 1 168 1 
357 1 81 1 285 1 
357 1 81 1 293 1 
85 1 50 1 81 3 293 1 337 1 285 2 
85 1 132 1 81 2 293 1 337 1 285 1 
85 2 81 2 293 1 337 1 285 1 
364 1 26 1 71 5 191 1 338 3 5 1 27 2 124 1 152 2 220 1 368 1 343 1 266 1 267 3 36 1 173 1 198 1 346 1 275 1 135 5 375 2 349 1 114 1 137 4 355 1 119 1 282 1 284 2 259 1 362 2 23 1 168 1 
364 2 26 6 71 9 191 3 338 9 5 1 240 1 152 6 368 1 220 1 170 1 292 1 343 3 266 3 316 5 267 8 171 1 198 3 275 3 297 5 135 9 375 5 349 2 136 1 137 7 114 2 280 1 143 1 119 1 282 2 284 6 259 3 362 6 23 2 168 4 
364 1 71 3 191 1 27 1 338 4 124 1 152 2 343 1 266 1 267 3 198 1 346 1 275 2 375 3 135 3 349 1 137 2 114 1 280 1 119 1 282 1 259 1 284 2 23 1 362 2 168 1 
364 1 71 4 191 2 338 7 27 2 124 1 240 1 152 4 343 2 266 2 267 5 198 2 346 1 275 3 375 4 135 4 349 1 136 1 114 1 137 3 280 1 119 1 143 1 282 1 284 4 259 2 362 4 23 1 168 2 
242 1 134 1 308 1 
308 1 22 1 
133 1 
274 1 308 1 
242 2 274 1 308 3 185 1 102 1 145 1 
274 1 308 1 102 1 
308 1 157 1 
3 3 191 1 350 1 17 1 104 7 18 1 230 1 251 3 325 1 343 1 67 2 144 1 283 1 20 1 224 1 35 4 248 2 
3 3 191 1 350 1 17 1 104 7 18 1 230 1 251 3 325 1 343 1 67 2 144 1 283 1 20 1 224 1 35 4 248 2 
3 3 191 1 148 1 350 1 17 1 104 7 18 1 230 1 251 3 325 1 343 1 67 2 283 1 144 1 20 1 224 1 35 4 248 2 
3 15 190 3 191 4 217 2 104 31 264 1 155 1 9 1 266 3 343 4 55 1 224 1 35 16 248 3 198 3 59 1 350 1 17 2 162 1 18 2 305 1 230 1 251 10 325 2 283 1 144 2 67 5 20 5 258 1 259 3 359 1 360 1 361 4 24 1 
331 1 3 4 59 2 191 1 350 1 17 1 162 2 217 4 300 1 104 9 18 1 264 1 230 1 251 4 325 1 343 1 283 1 67 3 144 1 20 1 258 2 35 5 24 2 248 2 
50 1 2 1 73 1 72 1 365 1 123 1 290 1 265 1 78 2 221 1 293 1 81 2 294 1 109 1 245 2 226 1 159 1 352 1 203 1 62 1 278 1 377 1 255 1 19 1 357 1 207 1 285 1 309 1 234 1 48 1 
50 1 2 2 73 1 72 1 365 1 123 1 265 1 78 3 221 1 293 1 81 2 294 1 109 1 245 3 159 1 376 1 203 1 62 1 278 1 377 1 255 1 19 1 357 1 207 1 285 1 309 1 234 1 48 1 167 1 381 1 
50 1 2 2 73 1 72 1 365 1 123 1 265 1 78 2 221 1 293 1 81 2 294 1 109 1 245 2 159 1 376 1 62 1 377 1 255 1 19 1 207 1 357 1 285 1 48 1 167 1 
318 1 274 1 73 1 365 1 60 1 123 2 301 1 113 1 138 1 78 1 265 2 19 1 308 1 207 1 294 2 245 1 109 1 309 1 234 1 48 2 235 1 381 1 57 1 
50 1 73 1 72 1 365 1 123 1 290 1 265 1 78 1 293 1 81 2 294 1 109 1 245 1 352 1 203 1 278 1 377 1 255 1 19 1 357 1 207 1 285 1 309 1 234 1 48 1 167 1 
192 1 
98 1 1 1 336 1 338 2 5 3 6 1 149 1 150 1 152 2 154 4 110 1 109 2 246 1 295 1 12 1 160 2 57 2 60 1 249 2 202 1 114 1 19 1 119 1 308 1 207 2 310 1 312 2 23 1 364 1 122 2 26 6 71 5 73 2 365 1 216 2 367 1 125 1 220 1 126 1 371 1 267 2 374 2 274 1 275 2 87 1 276 1 375 2 135 5 179 1 89 1 279 2 282 1 187 1 235 1 189 1 
98 1 1 1 71 3 122 1 26 2 6 1 5 1 367 1 149 1 150 1 126 1 154 2 244 1 295 1 12 1 87 1 276 1 135 3 89 1 179 1 310 1 189 1 
98 1 1 1 26 1 71 3 6 1 5 1 367 1 149 1 150 1 126 1 154 3 244 1 295 1 12 1 374 1 87 1 276 1 135 3 375 1 89 1 179 1 119 1 310 1 189 1 
98 1 1 1 71 3 122 1 26 2 5 1 6 1 367 1 216 1 149 1 150 1 126 1 154 3 244 1 295 1 12 1 374 1 87 1 276 1 135 3 375 1 89 1 179 1 119 1 310 1 189 1 
98 1 1 1 333 1 6 1 5 3 149 1 150 1 152 1 342 1 154 6 244 1 295 1 12 1 160 2 249 2 202 1 114 1 256 1 119 5 310 1 23 1 312 2 211 1 122 4 71 5 26 7 216 4 367 1 125 1 126 1 220 1 267 1 374 4 87 1 275 2 276 1 135 5 375 5 277 1 89 1 179 1 279 2 282 1 189 1 
98 1 1 1 6 1 338 2 5 2 149 1 150 1 152 1 154 4 246 1 295 1 12 1 160 2 249 2 202 1 114 1 119 1 310 1 23 1 312 2 71 4 26 4 122 2 367 1 216 2 125 1 126 1 220 1 267 1 374 2 87 1 275 2 276 1 135 4 375 2 89 1 179 1 279 2 282 1 189 1 
98 1 1 1 122 2 26 4 71 4 333 1 5 2 6 1 216 2 367 1 149 1 150 1 125 1 152 1 126 1 220 1 342 1 154 4 267 1 295 1 12 1 160 2 374 2 275 2 87 1 276 1 375 1 135 4 249 2 202 1 89 1 179 1 114 1 279 2 256 1 119 1 282 1 310 1 312 2 23 1 189 1 
98 1 1 1 122 2 26 4 71 4 333 1 5 2 6 1 216 2 367 1 149 1 150 1 125 1 152 1 126 1 220 1 342 1 154 4 267 1 295 1 12 1 160 2 374 2 275 2 87 1 276 1 375 1 135 4 249 2 202 1 89 1 179 1 114 1 279 2 256 1 119 1 282 1 310 1 312 2 23 1 189 1 
98 1 1 1 122 2 26 4 71 4 5 2 338 2 6 1 216 2 367 1 149 1 150 1 152 1 126 1 220 1 342 1 154 4 243 1 267 1 295 1 12 1 374 2 87 1 276 1 375 1 135 4 249 2 298 1 202 1 89 1 179 1 114 1 140 2 119 1 66 2 282 1 233 1 310 1 312 2 23 1 189 1 
98 1 1 1 71 4 122 3 26 5 333 1 5 2 6 1 367 1 216 3 149 1 150 1 125 1 152 1 220 1 126 1 342 1 154 5 267 1 295 1 12 1 160 2 374 3 275 2 87 1 276 1 375 1 135 4 249 2 202 1 89 1 179 1 114 1 279 2 256 1 119 1 282 1 310 1 312 2 23 1 211 1 189 1 
98 1 1 1 71 4 122 3 26 5 333 1 5 2 6 1 367 1 216 3 149 1 150 1 125 1 152 1 220 1 126 1 342 1 154 5 267 1 295 1 12 1 160 2 374 3 275 2 87 1 276 1 375 1 135 4 249 2 202 1 89 1 179 1 114 1 279 2 256 1 119 1 282 1 310 1 312 2 23 1 211 1 189 1 
98 1 1 1 6 1 338 2 5 2 149 1 150 1 152 1 154 4 246 1 295 1 12 1 249 2 202 1 114 1 119 1 66 2 310 1 23 1 312 2 71 4 26 4 122 2 367 1 216 2 126 1 220 1 267 1 374 2 87 1 276 1 135 4 375 1 89 1 179 1 140 2 282 1 233 1 189 1 
3 3 191 1 217 2 104 6 8 1 343 1 35 3 248 1 176 1 15 1 134 1 59 1 350 1 162 1 178 1 18 1 251 2 230 1 325 1 307 2 283 1 67 2 258 1 188 1 25 1 24 1 
3 6 190 3 314 1 193 1 191 2 217 4 104 14 8 1 155 1 266 2 343 1 32 1 35 8 176 2 228 1 39 1 15 11 198 1 348 1 59 2 162 2 305 1 251 2 307 1 326 1 67 1 20 1 258 2 259 2 188 11 361 3 24 2 25 4 
73 1 214 1 213 1 3 1 365 1 314 1 4 1 193 1 102 1 367 1 315 1 217 2 104 2 151 1 196 1 126 2 7 1 8 1 109 1 35 1 57 1 176 1 274 1 228 1 59 1 201 1 162 1 89 2 91 1 204 1 65 1 307 1 19 1 308 1 207 1 258 1 25 1 24 1 
0 2 3 10 193 1 191 3 102 2 339 2 104 20 151 2 7 1 8 3 343 3 109 3 248 1 57 1 15 7 198 2 59 3 16 2 350 1 162 3 201 2 18 1 251 8 65 2 253 2 307 2 19 2 308 2 67 4 207 3 20 4 258 3 259 2 167 1 24 3 25 7 73 3 213 1 365 2 314 1 313 2 367 1 217 6 315 1 126 3 266 2 172 1 35 10 176 3 228 1 274 2 320 1 89 3 323 1 91 1 230 1 325 1 283 1 188 7 
213 1 73 8 3 1 365 2 193 1 367 1 315 1 217 4 104 2 126 1 7 1 8 2 31 1 156 1 109 8 35 1 226 1 175 1 57 2 176 2 228 1 274 2 59 2 60 1 178 1 162 2 89 1 353 1 19 2 308 3 165 1 207 7 94 1 258 2 379 1 232 2 167 1 24 2 235 1 
213 1 3 2 314 1 191 1 367 1 217 2 103 1 104 3 126 1 7 1 8 1 266 1 343 1 35 1 176 1 15 1 198 1 59 1 162 1 89 1 302 1 251 1 67 1 258 1 259 1 188 1 25 1 287 1 24 1 
176 1 15 1 366 1 59 1 191 1 178 1 162 1 217 2 104 2 8 1 251 1 266 1 20 1 258 1 188 1 35 2 25 1 24 1 
176 1 15 1 198 1 3 2 59 1 178 1 162 1 217 2 104 2 8 1 251 1 343 1 67 1 34 1 258 1 188 1 25 1 24 1 
3 2 191 1 217 2 104 4 8 1 266 1 343 1 35 2 176 1 15 2 198 1 59 1 162 1 178 1 251 2 67 1 20 1 259 1 258 1 188 2 24 1 25 2 
176 1 15 1 366 1 59 1 191 1 162 1 217 2 104 2 8 1 251 1 31 1 266 1 20 1 258 1 188 1 35 2 25 1 24 1 
176 1 15 1 198 1 3 2 59 1 162 1 217 2 104 2 8 1 251 1 31 1 343 1 67 1 34 1 258 1 188 1 25 1 24 1 
3 2 191 1 217 2 104 4 8 1 31 1 266 1 343 1 35 2 176 1 15 2 198 1 59 1 162 1 251 2 67 1 20 1 259 1 258 1 188 2 24 1 25 2 
3 2 191 1 217 2 104 4 8 1 266 1 343 1 35 2 176 1 15 2 198 1 59 1 162 1 251 2 67 1 20 1 259 1 258 1 188 2 24 1 25 2 
73 1 3 1 365 1 193 1 102 1 339 1 217 2 104 2 151 1 126 1 8 1 109 1 35 1 57 1 176 1 228 1 274 1 59 1 201 1 162 1 89 1 65 1 307 1 19 1 308 1 207 1 258 1 24 1 
121 1 73 1 3 1 365 1 193 1 102 1 217 2 104 2 126 1 8 1 127 1 109 1 35 1 57 1 176 1 228 1 274 1 59 1 201 1 162 1 89 1 183 1 307 1 19 1 308 1 207 1 258 1 24 1 
3 2 314 1 191 1 217 2 104 4 8 1 266 1 343 1 35 2 176 1 15 2 198 1 59 1 162 1 251 2 67 1 20 1 259 1 258 1 188 2 24 1 25 2 
3 2 73 1 365 1 191 1 102 1 339 1 217 2 104 4 151 1 126 1 8 1 343 1 266 1 109 1 35 2 226 1 176 1 198 1 15 2 274 1 16 1 59 1 201 1 162 1 89 1 251 2 65 1 19 1 308 1 67 1 207 1 20 1 258 1 259 1 188 2 25 2 24 1 
3 1 213 1 314 1 191 1 367 1 217 2 104 3 126 1 7 1 8 1 343 1 266 1 271 1 35 2 176 1 198 1 15 1 59 1 162 1 89 1 302 1 251 1 20 1 258 1 259 1 188 1 287 1 24 1 25 1 
331 1 288 1 3 10 190 1 191 3 217 4 104 19 77 1 155 1 266 3 343 3 158 2 35 9 84 1 198 3 59 2 162 2 305 1 251 6 281 1 378 1 67 3 208 1 20 3 258 2 358 1 259 3 286 2 361 2 24 2 
331 1 288 1 3 12 190 2 191 3 75 1 238 1 217 6 194 1 104 26 369 1 106 1 264 2 343 2 266 3 158 1 35 14 84 2 198 2 59 3 162 3 305 2 251 4 281 2 327 1 378 1 67 2 20 2 258 3 358 1 259 3 286 4 361 2 24 3 
331 1 288 1 3 21 190 3 191 5 238 1 104 41 194 1 106 1 155 1 343 5 158 1 248 1 161 1 198 4 59 3 350 1 162 3 305 3 18 1 251 8 67 4 20 4 259 4 358 1 258 3 361 4 24 3 75 1 217 6 369 1 77 1 264 1 266 4 35 20 84 2 230 1 325 1 281 1 327 1 378 1 283 1 286 4 
331 1 288 1 3 18 190 3 191 5 75 1 238 1 217 8 194 1 104 38 369 1 77 1 106 1 264 2 155 1 266 4 343 4 158 1 35 20 84 2 161 1 248 1 198 3 59 4 350 1 162 4 18 1 305 3 230 1 251 7 325 1 327 1 281 1 378 1 283 1 67 4 20 3 258 4 358 1 259 4 286 4 361 4 24 4 
331 1 288 1 3 25 190 4 191 8 75 1 238 1 217 4 194 1 104 52 369 1 106 1 264 1 155 2 266 7 343 8 158 1 35 27 84 1 248 1 39 2 198 7 59 2 350 1 162 2 18 1 305 2 230 1 251 14 325 1 327 1 281 1 378 1 283 1 67 7 20 7 258 2 358 1 259 7 286 4 361 4 24 2 
330 1 116 1 142 1 80 1 93 1 341 1 219 1 322 1 227 1 30 1 
215 1 223 1 
324 1 116 1 86 1 142 1 93 1 344 1 322 1 227 1 30 1 
330 1 71 1 375 1 263 1 135 1 341 1 304 1 322 1 164 1 30 1 116 1 117 1 142 1 80 1 56 2 93 1 227 1 70 1 
330 1 71 1 375 1 263 1 135 1 341 1 304 1 322 1 164 1 30 1 116 1 117 1 142 1 80 1 56 2 93 1 227 1 70 1 
330 1 71 1 375 1 263 1 135 1 341 1 304 1 322 1 164 1 30 1 116 1 117 1 142 1 80 1 56 2 93 1 227 1 70 1 
257 1 120 1 63 1 
257 1 120 1 63 1 
262 1 107 1 
262 1 107 1 257 1 
51 1 197 1 
71 1 51 1 213 2 215 1 289 1 367 2 126 2 7 2 30 1 56 1 223 1 197 1 173 1 227 1 131 1 135 1 89 2 137 1 322 1 116 1 117 1 307 1 142 1 355 1 93 1 70 1 168 1 
120 1 63 1 
262 1 107 1 257 1 
73 2 3 1 365 1 314 1 193 1 367 2 217 2 104 2 126 2 169 1 8 1 109 2 35 1 176 1 274 1 228 1 59 1 162 1 89 2 61 1 19 1 354 1 308 1 165 1 46 1 207 2 258 1 379 1 232 2 146 1 24 1 
50 1 73 2 72 1 365 1 278 1 370 1 19 1 255 1 357 1 81 2 293 1 207 2 109 2 186 1 285 1 226 1 48 1 167 1 363 1 
50 1 73 1 72 1 236 1 365 1 278 1 370 1 255 1 19 1 357 1 81 2 293 1 207 1 109 1 285 1 48 1 167 1 
274 1 73 1 365 1 60 1 41 1 301 1 19 1 308 1 207 1 109 1 48 1 363 1 235 1 57 1 
50 1 73 1 72 1 365 1 278 1 370 1 19 1 255 1 357 1 81 2 293 1 207 1 109 1 186 1 285 1 48 1 167 1 363 1 
105 1 
134 1 119 1 267 1 375 1 108 1 152 1 303 1 
26 1 71 1 338 1 5 1 125 1 152 1 220 1 267 1 160 1 275 1 375 2 135 1 114 1 279 1 119 1 282 1 23 1 
99 2 0 2 335 2 336 1 191 2 102 3 5 3 101 2 338 12 152 8 291 2 242 2 343 2 108 1 109 3 157 2 247 1 295 2 57 1 58 1 198 2 303 1 114 4 19 4 119 2 308 10 207 3 259 2 22 3 23 4 362 6 261 1 364 2 26 5 71 5 73 3 365 3 218 1 220 4 76 2 266 2 317 1 267 9 269 2 226 1 274 3 275 6 319 2 135 5 375 8 282 4 328 2 145 1 284 6 
99 2 364 1 71 1 26 1 190 1 336 1 191 2 5 1 338 6 75 1 238 1 194 1 220 2 152 5 369 1 266 2 343 2 267 8 38 1 198 2 275 3 319 1 135 1 375 5 200 1 114 2 305 1 327 1 119 2 282 2 284 5 259 2 362 5 361 1 23 2 
99 1 71 1 332 1 333 1 191 1 135 1 152 2 220 1 114 1 18 1 230 1 325 1 343 1 267 2 282 1 23 1 
375 1 303 1 220 1 114 1 152 1 119 1 282 1 108 1 267 1 23 1 
99 2 0 1 198 2 275 5 319 1 191 2 375 5 338 10 152 5 266 2 343 2 267 5 259 2 284 5 362 5 
71 1 26 1 119 1 375 1 135 1 5 1 
261 1 364 2 26 4 71 3 73 4 365 1 336 2 5 2 218 2 220 1 152 2 371 1 373 1 267 2 110 1 109 4 57 2 274 1 88 1 60 1 135 3 114 2 280 1 19 1 308 1 282 2 207 4 23 2 235 1 
3 1 73 1 213 2 365 1 193 1 102 1 367 2 339 1 217 2 104 1 151 1 126 3 7 2 8 1 109 1 57 1 176 1 274 1 40 1 59 1 201 1 162 1 89 3 302 2 65 1 307 1 19 1 308 1 207 1 258 1 210 1 24 1 
364 1 275 2 375 4 336 1 338 4 152 2 220 1 114 1 119 2 282 1 267 1 284 2 362 2 23 1 248 1 
254 1 227 1 30 1 
254 1 227 1 30 1 
51 1 341 1 329 1 227 1 30 1 
254 1 227 1 30 1 
128 1 227 1 30 1 
128 1 227 1 30 1 
128 1 227 1 30 1 
227 1 30 1 
116 1 142 1 
3 4 59 2 191 1 350 1 162 2 217 4 104 8 264 1 18 1 230 1 251 3 325 1 343 1 67 2 283 1 20 1 258 2 35 4 24 2 248 1 
230 1 251 2 325 1 343 1 3 3 134 1 191 1 67 2 283 1 350 1 104 6 35 3 18 1 248 1 
198 1 3 2 59 1 191 1 162 1 217 2 104 4 229 1 251 2 343 1 266 1 67 1 20 1 258 1 259 1 35 2 24 1 
198 1 3 4 190 1 191 1 104 7 305 1 155 1 251 2 343 1 266 1 67 1 20 1 259 1 35 3 361 2 
3 12 190 2 191 3 217 4 104 23 264 2 155 1 266 2 343 3 32 1 35 11 13 1 248 1 198 2 39 1 59 2 350 1 162 2 18 2 230 1 251 9 325 2 283 1 67 5 20 4 259 2 258 2 361 2 24 2 
3 1 104 1 361 1 
190 1 104 1 35 1 
0 1 198 1 3 3 59 1 191 1 162 1 217 2 104 6 229 1 251 3 266 1 343 1 67 2 20 1 258 1 259 1 35 3 24 1 
331 1 3 6 190 1 191 2 75 1 217 2 238 1 104 12 194 1 369 1 266 2 343 2 35 6 198 2 59 1 162 1 305 1 251 2 327 1 67 1 20 1 258 1 259 2 361 1 24 1 
3 3 191 1 104 6 18 1 230 1 251 2 325 1 343 1 67 1 20 1 35 3 
3 2 59 1 350 1 162 1 217 2 104 3 18 1 264 1 251 2 325 1 67 1 283 1 20 1 258 1 35 1 13 1 24 1 
331 1 332 1 3 5 59 1 191 2 162 1 217 2 104 10 18 2 251 5 230 1 325 2 343 2 67 3 20 2 258 1 35 5 24 1 
331 1 59 1 191 1 162 1 217 2 104 2 251 1 266 1 20 1 258 1 35 2 24 1 
198 1 331 1 3 2 59 1 191 1 162 1 217 2 104 4 251 2 343 1 266 1 67 1 20 1 258 1 259 1 35 2 24 1 
331 1 3 2 59 3 162 3 217 6 104 3 77 1 264 1 18 1 251 2 325 1 67 1 20 1 258 3 35 1 13 1 24 3 
331 1 3 18 190 3 191 5 217 10 104 34 77 1 264 2 155 1 9 1 266 3 343 5 55 1 35 16 13 1 248 1 198 3 59 5 350 1 162 5 229 1 18 3 305 1 230 2 251 12 325 3 283 1 67 7 20 5 258 5 259 3 360 1 361 4 24 5 
331 1 3 4 190 1 59 1 191 1 350 1 162 1 75 1 217 2 104 8 18 1 305 1 230 1 251 2 325 1 343 1 67 2 283 1 258 1 35 4 361 1 24 1 248 1 
331 1 3 5 190 1 191 2 75 1 217 4 104 11 155 1 343 1 266 1 35 6 248 1 59 2 350 1 162 2 229 1 18 1 305 1 230 1 251 3 325 1 67 2 283 1 20 1 258 2 259 1 361 2 24 2 
331 1 3 10 190 1 191 3 75 1 217 6 238 1 194 1 104 19 369 1 264 1 266 2 343 3 35 9 248 1 198 2 59 3 350 1 162 3 229 1 18 1 305 1 230 1 251 4 325 1 327 1 283 1 67 3 20 1 258 3 259 2 361 1 24 3 
331 1 3 7 190 1 191 3 75 1 217 6 238 1 104 17 194 1 369 1 264 1 266 2 343 2 35 10 248 1 198 1 59 3 350 1 162 3 229 1 18 1 305 1 230 1 251 5 325 1 327 1 283 1 67 3 20 2 258 3 259 2 361 1 24 3 
331 1 3 4 190 1 59 1 191 1 350 1 162 1 75 1 217 2 104 8 18 1 305 1 230 1 251 2 325 1 343 1 67 2 283 1 258 1 35 4 361 1 24 1 248 1 
331 1 3 6 190 1 191 2 75 1 217 2 238 1 104 12 194 1 369 1 266 2 343 2 35 6 198 2 59 1 162 1 305 1 251 2 327 1 67 1 20 1 258 1 259 2 361 1 24 1 
331 1 3 8 190 1 191 3 75 1 238 1 217 8 194 1 104 18 369 1 264 2 266 2 343 2 35 10 248 1 198 1 59 4 350 1 162 4 229 1 18 1 305 1 230 1 251 5 325 1 327 1 283 1 67 3 20 2 258 4 259 2 361 1 24 4 
331 1 3 7 190 1 191 3 75 1 238 1 217 8 194 1 104 16 369 1 77 1 264 2 266 3 343 2 35 9 198 2 59 4 162 4 305 1 251 6 327 1 67 3 20 3 258 4 259 3 361 1 24 4 
3 4 191 1 350 1 104 7 18 3 251 6 230 1 325 3 343 1 283 2 67 3 20 3 35 3 
331 1 3 8 190 1 191 3 75 1 238 1 217 8 194 1 104 18 369 1 77 1 264 2 266 2 343 2 35 10 248 1 198 1 59 4 350 1 162 4 18 1 305 1 230 1 251 4 325 1 327 1 283 1 67 3 20 1 258 4 259 2 361 1 24 4 
98 1 14 1 307 1 367 1 89 1 68 1 126 1 
14 1 98 1 367 1 89 1 28 1 126 1 43 1 115 1 54 1 307 1 68 1 147 1 
274 1 73 1 19 1 365 1 134 1 308 1 60 1 207 1 109 1 235 1 57 1 
274 1 213 1 73 1 365 1 102 1 201 1 367 1 315 1 89 2 151 1 126 2 7 1 307 1 19 1 308 1 207 1 109 1 57 1 
73 1 213 2 365 1 102 2 367 2 315 1 149 1 218 1 151 1 126 2 7 1 269 1 109 1 157 1 274 2 201 1 89 2 307 1 19 1 308 3 207 1 310 1 189 1 
73 2 213 2 365 1 102 2 367 2 315 1 149 1 218 1 126 2 7 1 127 1 269 1 109 2 157 1 274 2 201 1 89 2 141 1 307 1 19 1 308 3 207 2 310 1 189 1 
26 1 71 2 73 3 365 1 102 1 218 1 242 1 269 1 109 3 157 1 295 1 57 1 274 1 135 2 375 1 141 1 19 1 45 1 308 4 119 1 207 3 47 1 22 1 
274 1 71 2 26 1 73 3 365 1 375 1 135 2 102 1 218 1 141 1 242 1 19 1 119 1 308 4 269 1 207 3 328 1 157 1 109 3 295 1 22 1 57 1 
73 1 19 1 365 1 207 1 109 1 353 1 
274 2 73 7 365 2 102 1 112 1 353 1 163 1 19 3 308 3 165 1 156 1 207 6 109 7 145 1 94 1 11 1 232 1 226 1 167 1 175 1 57 2 
3 3 191 1 102 1 339 1 104 6 151 1 7 1 8 2 343 1 109 1 248 1 15 1 16 1 59 2 350 1 162 2 201 1 18 1 251 2 65 1 253 1 307 2 19 1 308 1 207 1 67 2 258 2 25 1 24 2 73 1 213 1 365 1 314 1 367 1 217 4 315 1 126 2 35 3 226 1 176 2 274 1 89 2 230 1 325 1 46 1 283 1 188 1 
261 1 71 3 26 2 73 1 335 1 5 1 152 1 220 2 76 1 291 1 242 1 267 1 108 1 109 1 295 1 57 1 375 1 135 3 303 1 114 2 137 1 119 1 308 2 207 1 282 2 328 1 23 2 22 1 
274 1 73 2 365 1 102 1 353 1 242 1 19 2 308 2 207 2 109 2 145 1 226 1 58 1 
274 1 73 4 365 1 60 1 141 1 19 1 308 1 207 4 109 4 166 1 226 1 235 1 57 1 
274 1 73 2 365 1 320 1 102 1 112 1 218 1 163 1 222 1 19 2 308 1 207 2 109 2 82 1 
73 1 19 1 365 1 255 1 357 1 81 1 293 1 207 1 109 1 57 1 
274 1 73 2 365 1 61 1 19 1 308 1 207 2 165 1 109 2 226 1 167 1 
274 2 73 5 365 2 60 1 218 1 19 2 308 3 207 4 156 1 165 1 109 5 166 1 226 1 235 1 175 1 57 1 
274 2 73 5 365 2 60 1 218 1 182 1 19 2 308 3 207 4 165 1 109 5 166 1 226 1 235 1 175 1 57 1 
274 1 213 1 73 1 365 1 102 1 201 1 367 1 315 1 89 2 126 2 7 1 127 1 307 1 19 1 308 1 207 1 109 1 57 1 
274 1 73 1 365 1 102 1 112 1 218 1 163 1 19 2 308 1 207 1 109 1 145 1 11 1 
306 1 307 1 52 1 340 1 153 1 
71 2 52 2 375 1 135 2 149 1 195 1 340 1 137 1 153 2 306 2 307 1 119 1 129 1 95 1 295 1 310 1 311 1 12 1 189 1 
354 1 52 1 367 1 89 1 340 1 126 1 146 1 153 1 169 1 
195 1 340 1 311 1 
221 1 134 1 62 1 159 1 
78 1 221 1 245 1 309 1 62 1 234 1 159 1 
294 1 245 1 123 1 
44 1 78 3 221 1 74 1 268 2 245 3 352 1 42 1 309 1 62 1 234 1 159 1 
78 2 2 1 221 1 245 2 180 1 309 1 62 1 234 1 159 1 
78 1 357 1 81 1 237 1 245 1 285 1 352 1 309 1 234 1 159 1 205 1 
78 1 245 1 352 1 309 1 62 1 234 1 159 1 
78 1 221 1 245 1 352 1 309 1 62 2 234 1 
352 1 62 1 252 1 78 2 245 2 309 2 234 2 159 1 130 1 97 1 
347 1 2 2 237 1 352 1 321 1 62 1 78 3 221 1 245 3 309 1 234 1 260 1 159 2 
50 1 2 1 53 1 352 1 62 1 78 2 221 1 293 1 81 2 357 1 245 2 285 1 309 1 234 1 159 1 
2 2 237 1 352 1 250 1 180 1 62 1 78 4 221 1 245 4 309 2 234 2 260 1 159 2 
78 1 221 1 245 1 352 1 309 1 62 1 234 1 159 1 
2 2 237 1 42 1 62 2 181 1 44 1 78 4 221 2 268 1 245 4 309 1 234 1 260 1 159 3 
100 1 2 1 352 1 62 1 239 1 78 2 221 1 356 1 245 2 309 1 234 1 159 1 
352 1 42 2 62 1 44 1 78 3 221 1 268 2 245 3 309 1 234 1 96 1 159 1 
296 1 225 1 159 2 345 2 
78 1 184 1 245 1 352 1 309 1 234 1 
347 1 78 2 2 1 221 1 245 2 352 1 309 1 62 1 234 1 159 1 
90 1 
78 1 221 1 245 1 352 1 309 1 62 1 234 1 159 1 
347 1 78 3 2 1 221 1 268 1 245 3 352 1 309 1 62 1 234 1 159 1 
237 1 159 1 260 1 181 1 
62 1 159 1 

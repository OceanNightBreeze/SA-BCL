#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (121,285) (121,285) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 150 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 150 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 150 115 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 144 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (121,285) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 43 131 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 1 346 2 265 1 118 1 2 1 290 5 292 3 319 1 95 1 297 2 50 1 209 1 298 1 210 2 53 2 123 2 151 9 12 1 360 1 37 1 62 1 198 2 64 6 159 1 18 4 203 2 69 1 21 9 
313 1 265 1 346 2 118 1 2 1 290 5 292 3 319 1 95 1 297 2 50 1 209 1 298 1 210 2 53 2 123 2 151 9 12 1 360 1 37 1 62 1 198 2 64 6 159 1 18 4 203 2 69 1 21 9 
313 1 265 1 346 2 118 1 2 1 290 6 292 4 319 1 95 1 297 2 50 1 209 1 298 1 210 2 53 2 123 2 151 10 12 1 360 1 37 1 62 1 198 2 64 7 159 1 18 5 203 2 69 1 21 10 
313 1 265 1 346 1 118 1 2 1 290 4 292 2 319 1 95 1 297 2 50 1 209 1 298 1 210 2 53 2 123 2 151 7 12 1 360 1 37 1 62 1 198 2 64 4 159 1 18 3 203 2 21 7 
12 1 360 1 265 1 346 2 290 3 292 1 319 1 198 1 297 1 64 3 298 1 210 1 53 1 123 1 18 2 69 1 151 4 21 4 
12 1 360 1 265 1 118 1 290 1 62 1 155 1 198 1 297 1 110 1 210 1 123 1 326 1 203 1 151 2 21 2 
12 1 360 1 265 1 290 2 292 1 297 2 50 1 64 1 123 2 18 1 203 1 151 3 21 3 
265 1 346 2 219 1 290 5 292 3 319 1 95 1 50 1 297 2 298 1 210 1 53 1 123 2 151 9 12 1 360 1 37 1 198 1 64 7 18 4 203 1 69 1 92 1 21 9 
265 1 346 2 219 1 290 5 292 3 319 1 95 1 50 1 297 2 298 1 210 1 53 1 123 2 151 9 12 1 360 1 37 1 198 1 64 7 18 4 203 1 69 1 92 1 21 9 
144 1 361 1 139 1 
168 1 361 1 295 2 
368 1 126 2 316 1 323 2 157 2 239 2 364 2 101 2 
22 1 284 1 316 1 239 3 220 1 138 1 94 1 294 1 5 1 73 1 146 2 323 2 324 2 148 1 224 1 213 1 80 2 272 1 101 3 102 1 174 1 252 1 126 2 84 1 303 1 364 2 254 1 108 2 338 1 368 1 157 2 308 1 45 1 237 1 204 1 46 1 137 2 
126 1 315 1 316 1 323 1 157 1 239 1 364 1 355 1 249 1 101 1 
315 1 361 1 239 1 275 1 364 1 139 1 164 1 49 1 227 1 310 1 33 1 101 1 9 1 100 1 
126 1 315 1 361 1 239 1 275 1 364 1 139 1 164 2 157 1 323 1 310 1 33 1 101 1 9 1 100 2 
147 1 48 1 164 1 242 1 100 1 
361 1 32 1 48 1 139 1 164 2 242 1 250 1 100 2 
164 1 242 1 100 1 
126 1 315 1 316 1 239 1 364 1 48 1 164 1 157 1 323 1 355 1 249 1 100 1 248 1 101 1 
361 1 
117 1 361 1 32 1 48 1 139 1 164 2 242 1 100 2 
82 1 285 1 185 1 361 1 231 1 48 2 139 1 164 5 17 1 349 1 242 2 121 1 112 1 191 2 32 1 234 2 262 2 100 5 35 1 
368 1 144 1 
126 1 239 2 364 2 61 1 368 2 157 1 323 1 182 1 101 2 
86 1 263 1 177 1 
252 1 284 1 303 1 239 1 294 1 368 1 324 1 224 1 308 1 213 1 80 1 272 1 101 1 204 1 300 1 137 1 
252 1 284 1 126 1 303 1 239 2 364 1 177 1 294 1 96 1 323 1 324 1 224 1 308 1 226 1 213 1 80 1 272 1 204 1 101 2 137 1 
126 4 239 5 364 5 29 1 368 1 96 2 323 4 157 1 245 1 226 1 227 1 182 1 273 1 101 5 
126 2 315 1 323 2 239 2 216 1 364 2 249 1 101 2 
368 1 96 1 126 3 157 1 323 3 239 3 364 3 101 3 
126 1 315 1 323 1 239 1 364 1 249 1 101 1 
126 1 315 1 323 1 157 1 239 1 364 1 182 1 61 1 101 1 
284 1 315 1 316 1 239 4 220 1 94 1 164 1 294 1 96 1 5 1 73 1 146 2 323 3 324 1 148 1 224 1 226 1 213 1 247 1 80 1 272 1 33 1 101 4 9 1 100 1 102 1 252 1 126 3 84 1 303 1 275 1 364 3 108 1 368 1 179 1 157 2 308 1 45 1 310 1 182 1 237 1 204 1 46 1 137 1 
368 1 126 1 96 1 323 1 239 2 364 2 227 1 273 1 101 2 
126 3 315 1 361 1 239 3 275 1 364 3 164 1 96 2 179 1 157 1 323 3 226 1 310 1 214 1 182 1 33 1 100 1 9 1 101 3 
126 2 239 2 364 2 177 1 96 1 157 1 323 2 182 1 263 1 101 2 
252 1 284 1 303 1 239 1 294 1 368 1 324 1 224 1 308 1 213 1 80 1 272 1 101 1 204 1 137 1 
331 1 284 1 303 1 239 1 368 1 340 1 324 1 224 1 308 1 213 1 80 1 272 1 101 1 204 1 137 1 
162 1 238 1 220 1 240 1 73 1 146 2 31 1 148 1 356 1 173 1 358 1 332 1 84 2 254 2 86 2 177 2 108 4 366 1 156 1 133 1 45 1 263 2 237 1 46 1 
126 1 315 1 323 1 239 1 364 1 216 1 310 1 101 1 
89 1 116 1 
89 1 116 1 
41 1 241 1 
41 1 241 1 
41 1 241 1 
373 1 89 1 116 1 
180 1 89 1 116 1 
41 1 343 1 89 2 130 1 241 1 116 2 
373 1 89 1 116 1 
373 1 89 1 116 1 
370 1 89 1 116 1 
370 1 89 1 116 1 
370 1 89 1 116 1 
206 1 239 2 164 1 28 1 323 2 321 1 98 1 77 1 100 1 101 2 126 2 14 1 253 1 362 1 364 2 63 1 368 1 371 1 158 1 113 1 180 1 89 1 116 1 90 1 
314 1 361 1 164 2 130 1 28 1 87 1 63 2 120 1 371 2 170 1 113 3 98 2 77 2 325 2 89 2 19 1 116 2 172 1 100 2 
198 1 210 1 53 1 
198 1 210 1 326 1 
198 3 169 1 53 2 6 1 326 1 34 1 
198 2 169 1 53 1 326 1 34 1 320 1 
198 2 169 1 53 1 326 1 34 2 
238 1 186 1 48 4 164 5 139 1 295 3 242 1 351 1 168 1 191 1 31 1 192 2 32 1 150 1 152 1 356 1 100 5 173 1 35 3 82 1 196 1 361 2 304 1 253 1 362 1 335 2 158 1 112 2 234 1 68 1 262 1 136 2 
185 1 0 3 238 1 186 1 48 5 164 7 139 1 295 3 242 4 3 1 268 1 351 1 168 1 147 3 191 2 31 1 192 2 32 1 212 1 150 1 356 1 100 7 173 1 35 3 82 1 361 3 253 2 304 1 112 2 234 2 262 2 136 2 
185 1 196 1 304 1 48 1 164 2 191 1 234 1 150 1 262 1 68 1 100 2 35 1 
185 1 196 1 304 1 164 1 191 1 234 1 150 1 68 1 262 1 115 1 100 1 35 1 
284 1 201 1 144 1 
284 1 11 1 
88 1 
284 1 308 1 204 1 
367 1 284 1 
284 1 308 1 
201 2 284 3 308 1 289 1 204 1 91 1 
282 1 283 1 84 3 175 1 267 1 208 1 254 4 108 7 156 3 132 1 74 1 354 1 299 1 183 2 356 1 173 1 358 2 
282 1 283 1 84 3 175 1 267 1 208 1 254 4 108 7 156 3 132 1 74 1 354 1 299 1 183 2 356 1 173 1 358 2 
282 1 283 1 84 3 197 1 175 1 267 1 208 1 254 4 108 7 156 3 132 1 74 1 354 1 299 1 183 2 356 1 173 1 358 2 
282 5 283 2 238 3 208 1 267 2 165 1 351 3 73 1 146 2 269 1 74 1 148 1 31 3 223 1 299 1 354 2 194 1 228 1 356 4 173 4 358 5 104 1 84 15 175 1 254 16 108 31 256 3 132 2 156 10 260 4 279 1 183 3 237 1 46 1 
282 1 24 1 283 1 267 1 208 1 73 2 146 4 148 2 74 1 354 1 194 1 356 1 173 1 358 3 359 1 84 4 175 1 254 5 108 9 156 4 132 1 183 2 237 2 46 2 
70 1 265 1 290 1 297 1 210 1 324 1 53 1 123 1 6 1 326 1 80 1 151 2 272 1 125 1 12 1 13 1 83 1 360 1 303 1 16 1 198 2 64 1 278 1 374 1 235 1 261 1 203 1 135 1 137 1 21 2 
70 1 290 1 297 1 210 1 324 1 53 1 123 1 6 1 326 1 271 1 80 1 151 3 79 1 272 1 125 1 12 1 13 1 83 1 360 1 303 1 16 1 198 2 64 2 278 1 374 1 235 1 236 1 203 1 137 1 21 3 
70 1 290 1 324 1 210 1 53 1 6 1 326 1 271 1 80 1 151 2 272 1 125 1 12 1 13 1 360 1 303 1 16 1 198 2 64 2 278 1 235 1 203 1 236 1 137 1 21 2 
284 1 207 1 297 1 97 1 324 1 224 1 270 1 75 1 123 1 80 1 151 1 79 1 272 1 57 1 13 2 303 1 16 2 306 1 278 2 308 1 203 2 137 1 21 1 
70 1 265 1 297 1 210 1 324 1 53 1 123 1 6 1 326 1 80 1 151 1 272 1 125 1 13 1 83 1 303 1 16 1 198 2 278 1 374 1 235 1 236 1 203 1 135 1 137 1 21 1 
47 1 
315 1 266 4 139 1 49 1 141 1 51 2 322 2 191 1 324 2 224 2 327 2 227 1 272 1 58 1 100 5 101 1 9 1 275 1 112 2 234 1 281 2 23 1 284 1 287 1 239 1 291 2 164 5 295 2 350 1 242 6 168 2 75 1 76 2 32 3 80 2 33 1 81 1 35 2 124 1 357 1 82 1 361 2 304 1 303 1 364 1 129 2 306 1 131 1 40 1 308 1 43 1 310 1 217 1 262 1 137 2 
23 1 315 1 117 1 239 1 266 2 164 3 49 1 141 1 242 2 322 1 32 1 227 1 58 1 33 1 101 1 81 1 100 3 9 1 124 1 275 1 364 1 310 1 
23 1 315 1 117 1 239 1 266 3 291 1 164 3 139 1 49 1 242 1 141 1 32 1 227 1 58 1 33 1 101 1 81 1 100 3 9 1 124 1 361 1 275 1 364 1 310 1 
23 1 117 1 315 1 239 1 266 3 291 1 164 3 139 1 49 1 141 1 242 2 322 1 32 1 227 1 58 1 33 1 101 1 81 1 100 3 9 1 124 1 361 1 275 1 364 1 129 1 310 1 
281 2 23 1 117 1 315 1 239 1 266 6 187 1 291 4 139 5 164 5 49 1 141 1 242 7 51 2 190 1 168 2 191 1 322 4 76 2 32 3 327 2 227 1 58 1 33 1 81 1 100 5 101 1 9 1 35 1 357 1 124 1 82 1 302 1 361 5 275 1 364 1 129 4 38 1 40 1 307 1 112 1 234 1 310 1 262 1 
315 1 266 4 139 1 49 1 141 1 51 2 191 1 322 2 227 1 327 2 58 1 9 1 101 1 100 4 275 1 112 1 234 1 281 2 23 1 287 1 239 1 291 2 164 4 295 2 242 4 168 2 76 2 32 2 33 1 81 1 357 1 124 1 35 1 82 1 361 2 364 1 129 2 40 1 310 1 262 1 
281 2 23 1 315 1 239 1 266 4 291 2 139 1 164 4 49 1 242 4 141 1 51 2 190 1 168 2 322 2 191 1 76 2 32 2 327 2 227 1 58 1 33 1 101 1 81 1 100 4 9 1 35 1 357 1 124 1 82 1 302 1 361 1 275 1 364 1 129 2 38 1 40 1 112 1 234 1 310 1 262 1 
281 2 23 1 315 1 239 1 266 4 291 2 139 1 164 4 49 1 242 4 141 1 51 2 190 1 168 2 322 2 191 1 76 2 32 2 327 2 227 1 58 1 33 1 101 1 81 1 100 4 9 1 35 1 357 1 124 1 82 1 302 1 361 1 275 1 364 1 129 2 38 1 40 1 112 1 234 1 310 1 262 1 
281 2 23 1 315 1 347 1 239 1 266 4 291 2 139 1 164 4 295 2 49 1 242 4 141 1 143 1 322 2 191 1 76 2 32 2 227 1 58 1 33 1 101 1 81 1 100 4 9 1 35 1 124 1 82 1 361 1 36 2 275 1 364 1 129 2 60 2 38 1 40 1 112 1 342 1 234 1 310 1 262 1 
281 2 23 1 315 1 239 1 266 5 187 1 291 3 139 1 164 4 49 1 141 1 242 5 51 2 190 1 168 2 191 1 322 3 76 2 32 2 327 2 227 1 58 1 33 1 101 1 81 1 100 4 9 1 35 1 357 1 124 1 82 1 302 1 361 1 275 1 364 1 129 3 38 1 40 1 112 1 234 1 310 1 262 1 
281 2 23 1 315 1 239 1 266 5 187 1 291 3 139 1 164 4 49 1 141 1 242 5 51 2 190 1 168 2 191 1 322 3 76 2 32 2 327 2 227 1 58 1 33 1 101 1 81 1 100 4 9 1 35 1 357 1 124 1 82 1 302 1 361 1 275 1 364 1 129 3 38 1 40 1 112 1 234 1 310 1 262 1 
315 1 266 4 139 1 49 1 141 1 191 1 322 2 227 1 58 1 9 1 101 1 100 4 275 1 60 2 112 1 234 1 281 2 23 1 347 1 287 1 239 1 291 2 164 4 295 2 242 4 76 2 32 2 33 1 81 1 124 1 35 1 82 1 36 2 361 1 364 1 129 2 40 1 310 1 262 1 
283 1 162 1 208 1 220 1 144 1 73 1 146 2 74 1 148 1 356 1 358 2 173 1 84 3 175 1 254 3 86 1 177 1 108 6 132 1 156 2 368 2 45 1 263 1 183 1 237 1 46 1 
282 1 238 2 220 1 94 1 119 1 351 2 73 2 146 4 148 2 31 1 7 1 228 1 356 2 358 1 173 1 174 1 84 6 105 1 86 11 254 8 232 1 177 11 108 14 256 3 156 2 258 1 368 1 260 3 279 1 45 2 263 4 237 2 46 2 
284 1 239 2 220 1 94 1 294 1 96 1 324 1 323 1 146 2 73 1 224 1 148 1 226 1 213 1 80 1 272 1 101 2 300 1 252 1 174 1 126 1 59 1 84 1 105 1 303 1 364 1 254 1 108 2 39 1 368 1 259 1 308 1 45 1 263 1 204 1 237 1 137 1 46 1 
220 3 94 1 96 1 324 3 146 6 323 1 224 1 148 3 226 1 272 2 101 3 102 2 333 2 105 1 106 2 108 20 156 8 341 1 344 1 236 1 237 3 204 2 282 4 283 1 284 2 238 2 208 1 239 3 72 2 294 2 166 2 351 2 73 3 74 1 31 2 213 2 80 3 356 3 358 4 173 3 174 1 252 2 126 1 84 10 175 1 303 2 364 1 86 7 254 10 177 7 132 1 368 2 372 1 308 2 45 3 183 1 263 7 137 3 46 3 
284 3 162 1 239 1 163 1 220 2 94 1 96 1 323 1 324 8 73 2 146 4 224 2 148 2 75 1 149 1 80 7 272 2 101 1 174 1 126 1 84 1 334 1 303 2 128 1 364 1 254 1 108 2 338 2 306 1 277 1 308 2 261 1 45 2 236 1 280 1 237 2 205 1 137 8 46 2 
238 1 239 1 220 1 351 1 73 1 146 2 323 1 148 1 31 1 101 1 356 1 358 1 173 1 126 1 84 2 105 1 364 1 86 1 254 1 177 1 337 1 108 3 156 1 157 1 45 1 182 1 263 1 237 1 46 1 
282 1 162 1 238 1 220 1 86 1 254 2 177 1 108 2 366 1 156 1 146 2 73 1 148 1 45 1 263 1 237 1 356 1 46 1 
84 2 162 1 220 1 86 1 240 1 177 1 108 2 156 1 146 2 73 1 148 1 31 1 45 1 263 1 237 1 358 1 46 1 173 1 
282 1 238 1 162 1 220 1 351 1 73 1 146 2 148 1 31 1 356 1 173 1 358 1 84 2 254 2 86 2 177 2 108 4 156 2 45 1 263 2 237 1 46 1 
282 1 238 1 128 1 220 1 86 1 254 2 177 1 108 2 366 1 156 1 146 2 73 1 148 1 45 1 263 1 237 1 356 1 46 1 
84 2 128 1 220 1 86 1 240 1 177 1 108 2 156 1 146 2 73 1 148 1 31 1 45 1 263 1 237 1 358 1 46 1 173 1 
282 1 238 1 220 1 351 1 73 1 146 2 148 1 31 1 356 1 173 1 358 1 84 2 128 1 254 2 86 2 177 2 108 4 156 2 45 1 263 2 237 1 46 1 
282 1 84 2 238 1 220 1 86 2 254 2 177 2 108 4 156 2 351 1 146 2 73 1 31 1 148 1 45 1 263 2 237 1 356 1 358 1 173 1 46 1 
284 1 239 1 220 1 94 1 294 1 324 1 146 2 73 1 224 1 148 1 213 1 80 1 272 1 101 1 102 1 174 1 252 1 84 1 303 1 254 1 108 2 368 1 308 1 45 1 204 1 237 1 137 1 46 1 
284 1 239 1 220 1 94 1 324 1 146 2 73 1 224 1 148 1 246 1 213 1 80 1 272 1 101 1 174 1 331 1 84 1 303 1 254 1 108 2 368 1 340 1 308 1 45 1 204 1 237 1 137 1 46 1 
282 1 238 1 220 1 351 1 73 1 146 2 148 1 31 1 356 1 173 1 358 1 84 2 105 1 254 2 86 2 177 2 108 4 156 2 45 1 263 2 237 1 46 1 
282 1 284 1 238 1 239 1 220 1 294 1 72 1 351 1 324 1 146 2 73 1 31 1 148 1 213 1 80 1 272 1 356 1 101 1 358 1 173 1 102 1 252 1 84 2 303 1 86 2 254 2 177 2 108 4 156 2 308 1 261 1 45 1 263 2 204 1 237 1 137 1 46 1 
282 1 238 1 239 1 220 1 351 1 73 1 146 2 323 1 31 1 148 1 99 1 101 1 356 1 173 1 126 1 84 1 105 1 364 1 254 2 86 1 177 1 108 3 156 1 157 1 45 1 182 1 263 1 237 1 46 1 
282 3 24 1 264 1 238 3 27 2 243 1 188 2 351 3 73 2 146 4 148 2 31 3 228 1 356 3 358 3 173 3 84 10 85 1 254 9 108 19 256 1 339 1 156 6 111 1 260 2 279 1 44 1 237 2 184 1 46 2 
282 2 24 1 264 1 26 1 238 3 27 1 243 1 142 1 188 4 30 1 351 3 211 1 73 3 146 6 148 3 52 1 31 2 194 2 356 3 358 2 173 2 84 12 254 14 108 26 256 2 156 4 339 2 111 1 260 2 279 2 44 2 20 1 237 3 46 3 
282 4 218 1 283 1 24 1 264 1 26 1 238 4 208 1 27 1 243 1 142 1 30 1 188 4 351 4 211 1 73 3 146 6 74 1 52 1 148 3 31 4 194 1 228 1 356 5 358 4 173 5 84 21 175 1 85 1 254 20 108 41 256 3 132 1 339 1 156 8 111 1 260 4 279 3 44 2 183 1 20 1 237 3 46 3 
282 3 218 1 283 1 24 1 264 1 26 1 238 4 208 1 27 1 243 1 142 1 30 1 188 4 351 4 211 1 73 4 146 8 74 1 52 1 148 4 31 3 194 2 228 1 356 5 358 4 173 4 84 18 175 1 85 1 254 20 108 38 256 3 132 1 339 1 156 7 111 1 260 4 279 3 44 2 183 1 20 1 237 4 46 4 
282 7 283 1 24 1 264 1 26 1 238 7 208 1 27 1 243 1 142 1 30 1 188 4 119 2 351 7 211 1 73 2 146 4 74 1 52 1 148 2 31 7 194 1 228 2 356 8 358 7 173 8 84 25 175 1 254 27 108 52 256 4 132 1 339 1 156 14 111 1 260 4 279 2 44 1 183 1 20 1 237 2 46 2 
63 1 371 1 170 1 98 1 77 1 181 1 89 1 130 1 116 1 172 1 
180 1 90 1 
103 1 63 1 371 1 98 1 77 1 15 1 328 1 89 1 116 1 
373 1 8 1 
370 1 343 1 56 1 
314 1 361 1 164 1 130 1 28 1 87 1 63 1 120 1 371 1 170 1 113 2 98 1 77 1 325 1 89 1 116 1 172 1 100 1 
314 1 361 1 164 1 130 1 28 1 87 1 63 1 120 1 371 1 170 1 113 2 98 1 77 1 325 1 89 1 116 1 172 1 100 1 
314 1 361 1 164 1 130 1 28 1 87 1 63 1 120 1 371 1 170 1 113 2 98 1 77 1 325 1 89 1 116 1 172 1 100 1 
373 1 343 1 8 1 
373 1 343 1 8 1 
370 1 56 1 
370 1 343 1 56 1 
206 1 14 1 
206 1 239 2 48 1 164 1 189 1 321 1 323 2 98 1 325 1 77 1 101 2 100 1 126 2 14 1 253 1 362 1 364 2 87 1 63 1 368 1 371 1 158 1 113 1 180 1 89 1 116 1 90 1 
284 1 286 1 239 2 220 1 94 1 324 2 146 2 73 1 148 1 149 1 80 2 272 1 330 1 101 2 174 1 301 1 84 1 105 1 303 1 364 2 254 1 108 2 338 2 65 1 308 1 309 1 45 1 280 1 237 1 137 2 46 1 
70 1 13 1 83 1 303 1 288 1 348 1 198 2 210 1 324 2 53 1 6 1 326 1 235 1 261 1 236 1 80 2 272 1 137 2 251 1 
70 1 13 1 83 1 288 1 303 1 198 2 178 1 210 1 324 1 53 1 6 1 326 1 235 1 236 1 80 1 272 1 137 1 
284 1 13 1 303 1 306 1 324 1 224 1 270 1 75 1 308 1 80 1 272 1 329 1 137 1 251 1 
70 1 13 1 83 1 288 1 303 1 348 1 198 2 210 1 324 1 53 1 6 1 326 1 235 1 236 1 80 1 272 1 137 1 251 1 
305 1 
144 1 121 1 285 1 361 1 112 1 139 1 35 1 
164 1 139 1 295 1 242 1 51 1 168 1 191 1 32 1 327 1 100 1 35 1 357 1 82 1 361 2 112 1 234 1 262 1 
312 1 93 2 139 2 4 1 191 4 324 3 224 1 192 6 193 2 272 4 9 2 100 5 11 3 153 2 276 2 107 2 200 2 201 2 112 8 234 4 204 3 284 10 285 1 238 2 164 5 71 1 295 12 350 1 242 5 166 2 351 2 121 1 168 6 31 2 353 2 32 3 80 3 356 2 35 9 173 2 82 4 361 8 127 1 304 2 303 3 367 2 308 3 261 1 134 2 311 1 262 4 91 1 136 6 137 3 
1 1 26 1 238 2 164 1 139 2 295 6 350 1 242 1 142 1 30 1 351 2 168 3 211 1 191 2 192 5 52 1 31 2 32 1 100 1 356 2 35 8 173 2 82 2 361 5 304 1 256 1 200 2 112 5 260 1 279 1 234 2 134 1 262 2 345 1 136 5 
283 1 315 1 316 1 239 1 164 1 190 1 191 1 323 1 355 1 249 1 101 1 100 1 356 2 248 1 173 1 35 2 82 1 126 1 175 1 364 1 132 1 200 2 112 2 157 1 234 1 134 1 262 1 376 1 
82 1 121 1 361 1 112 1 191 1 234 1 139 1 262 1 35 1 
361 1 238 1 295 2 351 1 168 1 112 2 192 1 31 1 356 1 136 1 173 1 35 1 
361 1 32 1 139 1 164 1 100 1 242 1 
312 1 284 1 185 1 164 2 242 2 350 1 191 2 324 2 224 2 75 1 32 1 80 2 272 1 100 2 35 1 82 1 303 1 304 1 306 1 131 1 112 1 308 1 43 1 234 2 262 2 137 2 
284 1 316 1 239 3 220 1 94 1 294 1 5 1 73 1 146 2 324 1 323 2 148 1 224 1 213 1 80 1 272 1 101 3 102 1 252 1 126 2 84 1 303 1 364 2 108 1 368 1 157 2 308 1 45 1 204 1 237 1 46 1 137 1 
82 1 361 4 304 1 139 2 295 4 350 1 168 2 112 2 191 1 192 2 234 1 262 1 183 1 136 2 35 1 
63 1 98 1 317 1 
63 1 206 1 170 1 244 1 98 1 
63 1 98 1 317 1 
63 1 98 1 317 1 
63 1 98 1 161 1 
63 1 98 1 161 1 
63 1 98 1 161 1 
63 1 98 1 
89 1 116 1 
282 1 283 1 84 4 175 1 208 1 254 4 108 8 156 3 132 1 146 4 73 2 148 2 74 1 194 1 183 1 356 1 237 2 173 1 358 2 46 2 
156 2 132 1 283 1 144 1 84 3 74 1 175 1 208 1 254 3 183 1 108 6 356 1 173 1 358 2 
282 1 84 2 238 1 254 2 108 4 156 2 109 1 351 1 146 2 73 1 31 1 148 1 237 1 356 1 358 1 173 1 46 1 
282 1 84 4 238 1 254 3 108 7 256 1 156 2 351 1 31 1 260 2 279 1 228 1 356 1 358 1 173 1 
282 4 283 2 238 2 208 1 119 1 351 2 146 4 73 2 74 1 31 2 148 2 7 1 194 2 228 1 356 3 229 1 173 3 358 5 84 12 175 1 254 11 108 23 256 2 132 2 156 9 260 2 183 1 237 2 46 2 
84 1 260 1 108 1 
254 1 108 1 256 1 
282 1 84 3 238 1 254 3 108 6 166 1 156 3 109 1 351 1 73 1 146 2 148 1 31 1 237 1 356 1 46 1 173 1 358 2 
282 1 24 1 26 1 238 2 142 1 30 1 351 2 73 1 146 2 211 1 148 1 52 1 31 2 356 2 173 2 358 1 84 6 254 6 108 12 256 1 156 2 260 1 279 1 237 1 46 1 
282 1 283 1 84 3 175 1 254 3 108 6 132 1 156 2 356 1 173 1 358 1 
282 1 283 1 84 2 208 1 254 1 108 3 156 2 132 1 146 2 73 1 74 1 148 1 194 1 229 1 237 1 358 1 46 1 
282 2 24 1 283 2 84 5 175 1 254 5 108 10 132 2 156 5 73 1 146 2 148 1 376 1 237 1 356 2 46 1 358 3 173 2 
282 1 24 1 238 1 254 2 108 2 156 1 146 2 73 1 148 1 237 1 356 1 46 1 
282 1 24 1 84 2 238 1 254 2 108 4 156 2 351 1 146 2 73 1 31 1 148 1 237 1 356 1 358 1 173 1 46 1 
282 1 24 1 283 1 84 2 85 1 254 1 108 3 132 1 156 2 146 6 73 3 148 3 194 1 229 1 237 3 46 3 358 1 
282 5 283 3 24 1 238 3 208 1 165 1 351 3 269 1 73 5 146 10 74 1 223 1 148 5 31 3 194 2 228 1 229 1 356 5 173 5 358 7 84 18 175 2 85 1 254 16 108 34 256 3 132 3 156 12 109 1 260 4 279 1 183 1 237 5 46 5 
24 1 283 1 26 1 208 1 73 1 146 2 148 1 74 1 356 1 173 1 358 2 84 4 175 1 254 4 108 8 256 1 132 1 156 2 260 1 279 1 183 1 237 1 46 1 
282 1 283 1 24 1 26 1 238 1 208 1 351 1 73 2 146 4 74 1 148 2 228 1 356 2 173 1 358 2 84 5 175 1 254 6 108 11 256 1 132 1 156 3 109 1 260 2 279 1 183 1 237 2 46 2 
282 1 283 1 24 1 26 1 238 2 208 1 142 1 30 1 351 2 73 3 146 6 211 1 74 1 148 3 52 1 31 2 194 1 356 3 173 3 358 3 84 10 175 1 254 9 108 19 256 1 132 1 156 4 109 1 260 1 279 1 183 1 237 3 46 3 
282 2 283 1 24 1 26 1 238 2 208 1 142 1 30 1 351 2 73 3 146 6 211 1 74 1 148 3 52 1 31 1 194 1 356 3 173 2 358 3 84 7 175 1 254 10 108 17 256 1 132 1 156 5 109 1 260 1 279 1 183 1 237 3 46 3 
24 1 283 1 26 1 208 1 73 1 146 2 148 1 74 1 356 1 173 1 358 2 84 4 175 1 254 4 108 8 256 1 132 1 156 2 260 1 279 1 183 1 237 1 46 1 
282 1 24 1 26 1 238 2 142 1 30 1 351 2 73 1 146 2 211 1 148 1 52 1 31 2 356 2 173 2 358 1 84 6 254 6 108 12 256 1 156 2 260 1 279 1 237 1 46 1 
282 2 283 1 24 1 26 1 238 2 208 1 142 1 30 1 351 2 211 1 73 4 146 8 74 1 148 4 52 1 31 1 194 2 356 3 173 2 358 3 84 8 175 1 254 10 108 18 256 1 132 1 156 5 109 1 260 1 279 1 183 1 237 4 46 4 
282 3 24 1 26 1 238 3 142 1 30 1 351 3 211 1 73 4 146 8 148 4 52 1 31 2 194 2 356 3 173 2 358 3 84 7 85 1 254 9 108 16 256 1 156 6 260 1 279 1 237 4 46 4 
282 3 283 3 84 4 175 1 208 1 254 3 108 7 132 3 156 6 74 2 356 1 173 1 358 3 
282 1 283 1 24 1 26 1 238 2 208 1 142 1 30 1 351 2 211 1 73 4 146 8 74 1 148 4 52 1 31 1 194 2 356 3 173 2 358 3 84 8 175 1 85 1 254 10 108 18 256 1 132 1 156 4 260 1 279 1 183 1 237 4 46 4 
368 1 239 1 364 1 227 1 140 1 101 1 273 1 
230 1 368 1 369 1 145 1 239 1 364 1 227 1 140 1 375 1 377 1 101 1 273 1 
284 1 144 1 324 1 75 1 224 1 303 1 308 1 80 1 272 1 306 1 137 1 
252 1 284 1 126 1 303 1 239 2 364 1 368 1 96 1 323 1 324 1 224 1 308 1 213 1 80 1 272 1 204 1 101 2 137 1 
252 1 284 3 126 1 315 1 127 1 303 1 239 2 364 2 107 1 367 1 368 1 96 1 323 2 324 1 308 2 310 1 213 1 80 1 33 1 272 1 204 2 101 2 137 1 
284 3 315 1 239 2 96 1 324 2 323 2 213 1 80 2 272 1 33 1 101 2 331 1 126 1 303 1 127 1 364 2 107 1 199 1 367 1 368 1 308 2 310 1 204 2 137 2 
284 4 164 2 139 1 242 1 296 1 222 1 324 3 224 1 80 3 272 1 100 2 9 1 11 1 361 1 303 1 127 1 107 1 199 1 367 1 201 1 308 1 204 1 137 3 
284 4 11 1 361 1 127 1 303 1 107 1 139 1 164 2 242 1 199 1 367 1 201 1 324 3 224 1 308 1 193 1 80 3 272 1 9 1 204 1 100 2 137 3 
277 1 324 1 303 1 80 1 272 1 137 1 
284 3 334 1 303 2 163 1 338 1 277 1 324 7 54 1 224 2 308 2 149 1 55 1 261 1 236 1 80 6 160 1 272 3 91 1 204 1 205 1 137 7 
220 2 96 1 324 1 146 4 323 1 148 2 272 1 101 2 102 1 333 1 105 1 108 6 156 2 237 2 204 1 284 1 283 1 239 2 208 1 294 1 72 1 73 2 74 1 213 1 80 1 356 1 358 2 173 1 252 1 126 1 301 1 84 3 303 1 175 1 364 1 254 3 86 1 177 1 132 1 368 2 308 1 261 1 45 2 263 1 183 1 137 1 46 2 
312 1 284 2 285 1 93 1 48 1 139 1 164 3 242 2 121 1 191 2 324 1 224 1 353 1 193 1 32 1 80 1 100 3 9 1 35 1 82 2 11 1 361 1 276 1 201 1 112 1 234 2 262 2 137 1 
284 2 303 1 277 1 201 1 324 2 308 1 261 1 311 1 80 2 272 2 91 1 204 1 137 2 
284 1 154 1 303 1 306 1 199 1 324 4 224 1 75 1 308 1 261 1 80 4 272 1 137 4 
284 1 25 1 127 1 303 1 176 1 341 1 324 2 54 1 308 1 55 1 80 2 272 2 204 1 137 2 
198 1 70 1 210 1 324 1 224 1 303 1 326 1 80 1 272 1 137 1 
284 1 303 1 324 2 308 1 149 1 309 1 261 1 236 1 80 2 272 1 137 2 
284 3 154 1 334 1 127 1 303 2 306 1 324 5 75 1 224 1 308 2 149 1 261 1 80 4 272 2 137 5 205 1 
284 3 154 1 127 1 303 2 306 1 167 1 324 5 75 1 224 1 308 2 149 1 261 1 80 4 272 2 137 5 205 1 
331 1 284 1 126 1 303 1 239 2 364 1 368 1 96 1 323 1 324 1 224 1 308 1 213 1 80 1 272 1 204 1 101 2 137 1 
284 1 324 1 54 1 303 1 308 1 127 1 55 1 80 1 272 2 160 1 204 1 91 1 137 1 
286 1 122 1 352 1 65 1 239 1 364 1 67 1 330 1 101 1 
78 1 114 1 67 1 
368 1 122 1 352 1 67 1 233 1 
274 1 315 1 361 1 275 1 48 1 139 1 164 2 233 2 368 1 179 1 352 2 122 2 310 1 78 1 67 1 114 1 33 1 9 1 100 2 
144 1 12 1 360 1 290 1 
297 1 12 1 360 1 123 1 290 1 151 1 21 1 
278 1 203 1 21 1 
12 1 265 1 360 1 290 1 221 1 62 2 297 1 202 1 42 1 123 1 151 3 21 3 
64 1 297 1 12 1 360 1 346 1 123 1 290 1 151 2 21 2 
198 1 297 1 210 1 265 1 53 1 18 1 123 1 290 1 151 1 319 1 21 1 
297 1 12 1 265 1 123 1 290 1 151 1 21 1 
297 1 12 2 360 1 265 1 123 1 151 1 21 1 
297 2 12 1 265 1 123 2 318 1 171 1 363 1 290 1 151 2 21 2 
12 1 360 1 265 1 290 2 37 1 292 1 95 1 297 1 64 2 123 1 18 1 151 3 21 3 
12 1 360 1 265 1 290 1 293 1 198 2 297 1 64 1 210 1 53 1 123 1 6 1 326 1 151 2 21 2 
12 1 360 1 265 1 346 1 290 2 292 1 297 2 64 2 123 2 18 1 151 4 69 1 21 4 
297 1 12 1 360 1 265 1 123 1 290 1 151 1 21 1 
12 2 360 2 290 3 255 1 292 1 221 1 62 1 64 2 297 1 42 1 123 1 18 1 151 4 21 4 
64 1 297 1 12 1 360 1 265 1 123 1 290 1 151 2 365 1 92 1 257 1 21 2 
12 1 265 1 360 1 290 1 221 1 62 2 297 1 42 2 123 1 225 1 151 3 21 3 
10 1 215 1 66 2 290 2 
297 1 265 1 123 1 336 1 151 1 21 1 
64 1 297 1 12 1 360 1 265 1 123 1 290 1 151 2 95 1 21 2 
195 1 
297 1 12 1 360 1 265 1 123 1 290 1 151 1 21 1 
12 1 265 1 360 1 290 1 62 1 95 1 64 1 297 1 123 1 151 3 21 3 
18 1 290 1 255 1 292 1 
12 1 290 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (183,209,329) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (183,209,329) 263 173 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (183,209,329) 263 32 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (183,209,329) (183,209,329) 236 40 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 333 19 (42,180) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 333 19 (334,349) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (183,209,329) 263 202 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 1 27 1 271 1 229 2 274 2 74 1 168 1 75 4 215 5 38 1 147 1 41 1 78 1 126 1 79 3 342 2 242 1 107 1 222 1 132 7 133 9 85 9 160 1 134 1 
253 1 27 1 271 1 229 2 274 2 74 1 168 1 75 4 215 5 38 1 147 1 41 1 78 1 126 1 79 3 342 2 242 1 107 1 222 1 132 7 133 9 85 9 160 1 134 1 
266 1 251 1 253 2 27 2 271 1 229 2 350 1 274 2 168 2 195 1 255 1 75 4 215 5 38 2 147 1 41 1 78 1 178 1 126 1 79 3 342 2 222 1 107 1 132 6 133 9 85 9 160 1 134 1 
266 1 251 1 253 2 27 2 271 1 229 2 350 1 274 2 168 2 195 1 255 1 75 4 215 5 38 2 147 1 41 1 78 1 178 1 126 1 79 3 342 2 222 1 107 1 132 6 133 9 85 9 160 1 134 1 
266 1 251 1 253 2 27 2 271 1 229 2 350 1 274 2 168 2 195 1 255 1 75 5 215 6 38 2 147 1 41 1 78 1 178 1 126 1 79 4 342 2 222 1 107 1 132 7 133 10 85 10 160 1 134 1 
266 1 251 1 253 2 27 2 271 1 229 1 350 1 274 2 168 2 195 1 255 1 75 3 215 4 38 2 41 1 78 1 178 1 126 1 79 2 342 2 222 1 107 1 132 4 133 7 85 7 160 1 134 1 
147 1 253 1 27 1 271 1 229 2 79 1 342 1 274 1 107 1 222 1 168 1 132 3 75 2 215 3 133 4 85 4 160 1 134 1 
253 1 1 1 178 1 27 1 271 1 342 1 99 1 241 1 274 1 195 1 215 1 133 2 85 2 160 1 134 1 38 1 
78 1 271 1 79 1 342 2 274 2 132 1 75 1 215 2 133 3 85 3 160 1 134 1 38 1 
332 1 282 1 244 1 
279 1 282 1 164 2 
298 2 292 2 58 2 179 2 191 1 148 2 53 1 345 2 
89 2 248 1 290 1 292 3 252 1 92 1 191 1 165 1 211 2 4 1 53 1 98 1 139 1 298 2 73 1 58 2 142 1 231 1 7 1 8 1 305 1 42 1 179 2 308 2 200 1 148 2 128 1 286 1 19 1 262 1 316 1 207 2 64 2 20 1 158 1 345 3 324 1 
298 1 315 1 292 1 58 1 179 1 191 1 50 1 148 1 52 1 345 1 
220 1 298 1 292 1 209 1 227 1 50 1 183 1 345 1 247 1 
220 1 298 1 292 1 58 1 227 1 179 1 50 1 148 1 183 1 345 1 
335 1 237 1 45 1 329 1 233 1 
335 2 45 1 282 1 244 1 51 1 329 2 166 1 233 1 
335 1 45 1 329 1 
292 1 179 1 191 1 329 1 52 1 148 1 298 1 315 1 58 1 335 1 50 1 146 1 345 1 233 1 
282 1 
249 1 335 2 45 1 282 1 244 1 329 2 166 1 233 1 
278 1 190 1 0 1 355 2 177 1 62 1 45 2 282 1 329 5 166 1 210 1 57 1 335 5 319 1 101 1 196 2 244 1 233 2 172 2 
248 1 42 1 292 2 252 1 308 1 148 1 4 1 182 1 298 1 19 1 316 1 142 1 300 1 58 1 207 1 64 1 158 1 102 1 7 1 345 2 
332 1 53 1 
292 2 179 1 163 1 148 1 15 1 53 2 298 2 58 1 345 2 
47 1 84 1 182 1 
248 1 292 1 42 1 252 1 308 1 4 1 53 1 19 1 316 1 207 1 64 1 142 1 337 1 158 1 7 1 345 1 
298 3 292 3 58 3 179 1 148 3 102 1 53 1 345 3 
298 1 315 1 292 1 58 1 50 1 148 1 345 1 
298 1 292 1 58 1 179 1 163 1 50 1 148 1 15 1 345 1 
220 1 298 2 263 1 292 2 58 2 300 1 227 1 179 1 163 1 50 1 148 2 102 1 183 1 345 2 173 1 
298 2 292 2 58 1 148 1 102 1 87 1 53 1 247 1 345 2 
220 1 298 1 263 1 32 1 292 1 58 1 300 1 227 1 50 1 148 1 102 1 183 1 345 1 
298 2 47 1 292 2 58 2 179 1 163 1 148 2 102 1 182 1 345 2 
248 1 292 1 42 1 252 1 308 1 4 1 53 1 19 1 316 1 207 1 64 1 142 1 158 1 7 1 345 1 
248 1 292 1 308 1 4 1 349 1 53 1 285 1 19 1 316 1 207 1 64 1 142 1 158 1 7 1 345 1 
89 2 88 1 136 1 211 4 98 1 139 2 299 1 197 1 305 1 200 1 123 1 340 1 283 1 182 2 128 1 185 1 261 1 286 1 47 2 186 1 262 2 223 1 20 1 84 2 
298 1 250 1 292 1 58 1 227 1 50 1 148 1 345 1 
259 1 292 5 179 1 163 1 148 4 53 1 298 5 58 4 300 1 102 2 22 1 87 1 247 1 345 5 
298 2 250 1 315 1 292 2 58 2 50 1 148 2 345 2 
269 1 72 1 
269 1 72 1 
307 1 65 1 
307 1 65 1 
307 1 65 1 
269 1 162 1 72 1 
269 1 216 1 72 1 
269 2 307 1 65 1 344 1 67 1 72 2 
269 1 162 1 72 1 
269 1 162 1 72 1 
269 1 117 1 72 1 
269 1 117 1 72 1 
269 1 117 1 72 1 
269 2 121 1 238 1 138 2 70 1 282 1 14 2 329 2 357 3 297 2 72 2 273 2 230 1 360 1 318 2 335 2 67 1 76 1 361 1 
269 1 292 2 138 1 93 1 329 1 53 1 72 1 273 1 298 2 100 1 58 2 335 1 170 1 216 1 76 1 36 1 118 1 310 1 148 2 357 1 14 1 318 1 345 2 111 1 
253 1 168 1 27 1 
99 1 253 1 27 1 
99 1 253 3 168 2 276 1 265 1 219 1 
99 1 253 2 168 1 276 1 338 1 265 1 
99 1 253 2 168 1 276 1 265 2 
136 1 190 3 90 1 94 2 93 1 164 3 329 5 166 1 56 1 335 5 101 2 116 1 196 1 36 1 198 1 172 1 233 4 279 1 118 1 355 1 12 2 13 1 62 1 45 1 282 2 124 1 106 2 150 1 261 1 185 1 186 1 153 1 244 1 
24 1 136 3 190 8 90 3 93 4 164 9 329 9 210 1 192 1 166 1 167 1 335 9 275 1 101 6 116 1 196 2 198 2 199 1 233 7 172 2 279 3 355 2 12 6 237 5 45 6 62 1 282 5 124 2 240 5 106 6 261 3 185 3 186 3 153 3 224 1 244 1 
136 1 190 3 90 1 292 1 191 1 93 1 94 1 164 4 52 1 329 3 210 1 298 1 56 1 58 1 335 3 101 2 196 1 146 1 198 1 233 2 172 1 279 2 258 1 355 1 12 2 179 1 282 3 124 1 148 1 150 1 106 2 261 1 185 1 153 1 186 1 315 1 50 1 244 1 345 1 
190 5 136 2 90 2 94 2 93 2 191 1 329 4 52 1 56 1 58 1 335 4 101 4 196 1 146 1 198 1 233 3 199 1 279 3 12 4 282 4 148 1 150 1 106 4 153 2 244 1 345 1 292 1 164 7 210 1 167 1 298 1 172 1 258 1 355 1 179 1 124 1 185 2 261 2 186 2 315 1 224 1 50 1 
248 1 332 1 204 1 
248 1 110 1 
44 1 
248 1 4 1 
248 3 63 1 353 1 4 1 204 2 7 1 
248 1 4 1 7 1 
248 1 83 1 
88 2 136 1 61 1 176 1 123 3 330 1 211 7 358 1 95 1 213 2 152 1 139 3 185 1 262 4 189 1 322 1 264 1 
88 2 136 1 61 1 176 1 123 3 330 1 211 7 358 1 95 1 213 2 152 1 139 3 185 1 262 4 189 1 322 1 264 1 
88 2 136 1 61 1 176 1 123 3 71 1 330 1 211 7 358 1 95 1 213 2 152 1 139 3 185 1 262 4 189 1 322 1 264 1 
89 2 88 5 267 4 136 4 327 3 137 1 330 2 211 31 193 1 95 2 213 3 98 1 139 15 55 1 305 1 61 1 176 2 123 10 358 5 128 1 343 1 152 1 18 1 185 4 261 3 286 1 153 3 186 3 262 16 48 1 189 1 322 2 264 1 23 1 
89 4 88 3 136 1 211 9 330 1 95 1 98 2 213 2 139 4 55 1 141 1 354 1 305 2 176 1 123 4 358 1 128 2 152 1 185 1 286 2 262 5 189 1 322 1 264 1 
325 1 268 1 253 2 27 1 271 1 272 1 99 1 274 1 142 1 168 1 215 1 38 1 219 1 104 1 308 1 201 1 127 1 341 1 342 1 130 1 316 1 64 1 207 1 132 1 287 1 133 2 85 2 159 1 160 1 134 1 
325 1 268 1 253 2 27 1 271 1 272 1 99 1 274 1 142 1 168 1 215 1 219 1 38 1 104 1 308 1 201 1 127 1 341 1 184 1 342 1 312 1 316 1 64 1 207 1 108 1 132 2 133 3 85 3 159 1 160 1 
268 1 253 2 27 1 271 1 272 1 99 1 142 1 168 1 215 1 38 1 219 1 104 1 308 1 201 1 127 1 184 1 316 1 64 1 207 1 108 1 132 2 133 2 85 2 159 1 160 1 
248 1 291 1 268 2 308 1 104 2 122 1 272 2 4 1 359 1 342 1 312 1 97 1 316 1 142 1 274 1 207 1 64 1 171 1 304 1 133 1 158 1 85 1 38 2 
325 1 268 1 253 2 27 1 272 1 99 1 274 1 142 1 168 1 38 1 219 1 104 1 308 1 201 1 127 1 341 1 342 1 130 1 316 1 64 1 207 1 108 1 133 1 85 1 159 1 134 1 
187 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 292 1 355 1 209 1 236 1 227 1 62 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 196 1 345 1 247 1 172 1 40 1 
248 1 190 1 292 1 209 1 161 1 227 1 2 1 329 2 166 1 4 1 298 1 142 1 335 2 101 1 304 1 171 1 196 1 40 1 172 1 220 1 234 1 355 1 236 1 308 2 62 1 45 2 124 1 183 1 151 1 316 1 64 2 207 2 157 1 50 1 158 2 345 1 247 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 249 1 292 1 209 1 236 1 227 1 45 1 329 2 166 1 183 1 151 1 298 1 335 2 157 1 50 1 345 1 247 1 40 1 
220 1 292 1 355 1 209 1 236 1 227 1 62 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 196 1 345 1 247 1 172 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
220 1 209 1 292 1 236 1 227 1 329 1 183 1 151 1 298 1 335 1 157 1 50 1 247 1 345 1 40 1 
89 2 88 2 136 1 330 1 211 6 53 2 98 1 213 1 139 3 332 1 197 1 305 1 200 1 123 2 182 1 128 1 152 1 185 1 47 1 286 1 262 3 189 1 322 1 20 1 84 1 264 1 
88 1 89 4 267 3 136 1 327 3 165 1 211 14 53 1 98 2 139 6 54 1 231 1 6 1 305 2 356 1 309 1 123 2 200 1 358 1 182 11 128 2 18 1 185 2 261 1 313 1 286 2 153 2 186 2 47 4 262 8 48 1 20 2 84 11 
248 1 89 2 292 2 252 1 165 1 4 1 211 2 53 1 98 1 54 1 298 1 139 1 142 1 58 1 300 1 231 1 143 1 337 1 217 1 102 1 7 1 305 1 42 1 308 1 200 1 148 1 128 1 19 1 47 1 286 1 262 1 316 1 64 1 207 1 321 1 20 1 158 1 345 2 
88 4 89 6 136 3 330 1 4 2 53 2 98 3 139 10 54 1 58 1 142 2 231 1 102 1 7 2 235 1 200 3 239 2 148 1 152 1 286 3 19 2 153 2 108 1 64 3 207 3 66 1 156 2 20 3 158 1 246 2 345 3 290 2 248 2 292 3 252 2 165 1 211 20 213 1 298 1 300 1 305 3 175 1 42 2 120 2 308 3 123 8 182 7 358 4 128 3 185 3 261 2 47 7 186 2 262 10 316 2 189 1 322 1 84 7 264 1 
248 3 89 4 112 1 69 1 292 1 165 1 211 2 4 2 30 1 98 2 298 1 139 1 351 1 58 1 142 2 231 1 304 1 171 1 60 1 102 1 197 1 39 1 305 2 181 1 308 8 200 2 148 1 128 2 286 2 262 1 316 2 108 1 64 8 207 7 287 1 20 2 158 2 345 1 324 2 
88 1 89 2 136 1 292 1 163 1 328 1 211 3 98 1 54 1 298 1 139 2 58 1 305 1 179 1 123 1 200 1 148 1 182 1 128 1 185 1 261 1 47 1 286 1 153 1 186 1 262 1 20 1 84 1 345 1 
89 2 305 1 123 1 200 1 283 1 211 2 358 1 182 1 128 1 98 1 185 1 47 1 286 1 186 1 262 2 20 1 84 1 197 1 
88 1 89 2 305 1 136 1 123 1 200 1 211 2 182 1 128 1 98 1 261 1 139 2 47 1 286 1 223 1 20 1 84 1 197 1 
89 2 88 1 136 1 211 4 98 1 139 2 197 1 305 1 200 1 123 2 182 2 358 1 128 1 185 1 261 1 186 1 153 1 286 1 47 2 262 2 20 1 84 2 
89 2 305 1 123 1 200 1 283 1 211 2 358 1 182 1 128 1 30 1 98 1 185 1 47 1 286 1 186 1 262 2 20 1 84 1 
88 1 89 2 305 1 136 1 123 1 200 1 211 2 182 1 128 1 30 1 98 1 261 1 139 2 47 1 286 1 223 1 20 1 84 1 
89 2 88 1 136 1 211 4 30 1 98 1 139 2 305 1 200 1 123 2 182 2 358 1 128 1 185 1 261 1 186 1 153 1 286 1 47 2 262 2 20 1 84 2 
89 2 88 1 136 1 211 4 98 1 139 2 305 1 200 1 123 2 182 2 358 1 128 1 185 1 261 1 186 1 153 1 286 1 47 2 262 2 20 1 84 2 
290 1 248 1 89 2 292 1 252 1 165 1 211 2 4 1 53 1 98 1 139 1 142 1 231 1 7 1 305 1 42 1 308 1 200 1 128 1 19 1 286 1 262 1 316 1 64 1 207 1 20 1 158 1 345 1 
248 1 89 2 292 1 165 1 211 2 4 1 349 1 53 1 98 1 139 1 142 1 231 1 145 1 7 1 305 1 308 1 200 1 128 1 285 1 19 1 286 1 262 1 316 1 64 1 207 1 20 1 158 1 345 1 
89 2 88 1 136 1 211 4 98 1 54 1 139 2 305 1 200 1 123 2 182 2 358 1 128 1 185 1 261 1 186 1 153 1 286 1 47 2 262 2 20 1 84 2 
88 1 290 1 248 1 89 2 136 1 292 1 252 1 211 4 4 1 98 1 139 2 142 1 7 1 305 1 42 1 308 1 123 2 239 1 200 1 358 1 182 2 128 1 261 1 185 1 47 2 186 1 19 1 286 1 153 1 262 2 316 1 64 1 207 1 287 1 20 1 84 2 345 1 
89 2 136 1 292 1 163 1 211 3 98 1 139 1 54 1 298 1 58 1 305 1 179 1 123 1 200 1 148 1 358 1 182 1 128 1 260 1 261 1 185 1 286 1 153 1 186 1 47 1 262 2 20 1 84 1 345 1 
88 4 89 6 68 1 267 4 136 5 327 3 293 4 330 1 211 41 296 1 194 1 213 1 98 3 139 21 55 1 352 1 33 1 34 1 218 2 354 1 305 3 11 1 123 8 16 1 358 4 128 3 152 1 80 1 18 3 185 5 261 4 286 3 153 4 186 4 262 20 188 1 48 1 189 1 82 1 322 1 289 1 264 1 86 1 
88 4 89 8 68 1 267 4 136 4 327 3 293 4 330 1 211 38 296 1 194 1 213 1 98 4 139 18 55 2 352 1 33 1 34 1 218 2 354 1 305 4 11 1 123 7 16 1 358 3 128 4 152 1 80 1 18 3 185 5 261 3 286 4 153 4 186 4 262 20 188 1 48 1 189 1 82 1 322 1 289 1 264 1 86 1 
88 7 89 4 68 1 267 4 136 8 327 4 293 4 330 1 211 52 296 1 194 1 213 1 98 2 139 25 55 1 33 1 34 1 218 1 354 1 305 2 11 1 309 2 123 14 358 7 128 2 152 1 80 1 18 2 185 8 261 7 286 2 153 7 186 7 262 27 188 1 48 2 189 1 82 1 322 1 289 1 264 1 86 1 
88 3 89 4 267 2 136 3 327 1 293 2 211 19 296 1 98 2 139 10 352 1 34 2 218 1 354 1 305 2 11 1 123 6 358 3 128 2 18 1 185 3 261 3 286 2 153 3 186 3 262 9 48 1 323 1 289 1 86 1 
88 2 89 6 68 1 267 2 136 2 327 2 293 4 211 26 296 1 194 1 98 3 139 12 55 2 33 1 34 1 218 2 354 1 305 3 11 1 123 4 358 2 128 3 18 2 80 1 185 3 261 2 286 3 153 3 186 3 262 14 188 1 82 1 289 1 86 2 
273 1 103 1 269 1 318 1 121 1 138 1 67 1 14 1 361 1 72 1 
216 1 111 1 
273 1 269 1 109 1 318 1 302 1 138 1 257 1 14 1 72 1 
269 1 121 1 238 1 138 1 70 1 282 1 329 1 14 1 357 2 297 1 72 1 273 1 230 1 335 1 318 1 67 1 76 1 361 1 
269 1 121 1 238 1 138 1 70 1 282 1 329 1 14 1 357 2 297 1 72 1 273 1 230 1 335 1 318 1 67 1 76 1 361 1 
269 1 121 1 238 1 138 1 70 1 282 1 329 1 14 1 357 2 297 1 72 1 273 1 230 1 335 1 318 1 67 1 76 1 361 1 
162 1 344 1 284 1 
162 1 344 1 284 1 
117 1 254 1 
117 1 344 1 254 1 
170 1 310 1 
292 2 269 1 138 1 93 1 228 1 329 1 53 1 297 1 72 1 273 1 100 1 298 2 230 1 58 2 335 1 170 1 216 1 36 1 233 1 118 1 310 1 14 1 357 1 148 2 318 1 345 2 111 1 
162 1 284 1 
117 1 344 1 254 1 
248 1 89 2 292 2 294 1 165 1 4 1 211 2 98 1 54 1 298 2 139 1 142 1 231 1 60 1 37 1 39 1 305 1 308 2 200 1 105 1 128 1 286 1 262 1 316 1 64 2 207 2 154 1 320 1 20 1 345 2 324 2 
306 1 253 2 27 1 308 2 272 1 295 1 127 1 341 1 99 1 316 1 142 1 108 1 207 2 64 2 168 1 287 1 21 1 159 1 219 1 
306 1 253 2 27 1 308 1 272 1 127 1 341 1 99 1 316 1 108 1 207 1 64 1 142 1 168 1 301 1 159 1 219 1 
248 1 308 1 272 1 4 1 359 1 331 1 316 1 142 1 207 1 64 1 304 1 171 1 21 1 158 1 
306 1 253 2 27 1 308 1 272 1 295 1 127 1 341 1 99 1 316 1 108 1 207 1 64 1 142 1 168 1 21 1 159 1 219 1 
225 1 
89 2 290 1 248 1 292 3 252 1 92 1 191 1 211 1 4 1 53 1 98 1 139 1 298 2 58 2 142 1 231 1 7 1 305 1 42 1 308 1 179 2 200 1 148 2 128 1 286 1 19 1 316 1 64 1 207 1 20 1 158 1 345 3 
279 1 190 1 355 1 161 1 12 1 62 1 164 2 124 1 282 2 101 1 196 1 244 1 172 1 
190 1 332 1 0 1 177 1 101 1 282 1 244 1 
190 1 164 1 329 1 166 1 335 1 101 1 196 1 9 1 172 1 279 1 355 1 10 1 62 1 45 1 282 2 49 1 244 1 
190 4 136 1 90 2 329 2 4 1 142 1 335 2 101 3 196 2 144 1 7 1 232 1 279 3 12 3 62 2 282 3 204 1 106 3 153 1 207 1 64 1 110 2 243 1 158 1 248 4 29 1 164 6 166 1 353 1 169 1 303 1 172 2 355 2 120 1 308 1 180 1 45 2 124 1 221 1 185 1 261 1 186 1 316 2 
68 1 267 1 190 8 136 2 90 1 161 1 327 1 164 6 329 1 166 1 194 1 335 1 33 1 101 5 196 2 172 2 279 3 258 2 43 1 355 2 12 5 45 1 62 2 124 1 282 5 203 1 106 5 18 1 80 1 185 2 261 2 153 2 186 2 188 1 244 2 
136 1 190 2 90 1 292 1 191 1 329 1 52 1 330 1 298 1 58 1 335 1 59 1 101 2 196 1 146 1 172 1 258 2 355 1 179 1 62 1 46 1 148 1 185 2 315 1 322 1 50 1 264 1 345 1 
190 1 355 1 0 1 177 1 62 1 282 1 101 1 196 1 244 1 172 1 
279 2 258 1 190 2 136 1 90 1 12 2 164 4 282 2 106 2 185 1 261 1 153 1 186 1 101 2 
335 1 45 1 282 1 244 1 329 1 166 1 
248 1 190 2 161 2 2 1 348 1 329 3 210 1 4 1 166 2 5 1 142 1 335 3 101 2 304 1 171 1 196 2 277 1 172 2 234 1 355 2 308 4 281 2 62 1 45 4 124 2 316 1 64 4 207 4 158 2 
270 1 138 1 14 1 
131 1 121 1 138 1 310 1 14 1 
270 1 138 1 14 1 
270 1 138 1 14 1 
174 1 138 1 14 1 
174 1 138 1 14 1 
174 1 138 1 14 1 
138 1 14 1 
269 1 72 1 
89 2 88 2 267 1 136 1 327 1 211 8 330 1 213 1 98 1 139 4 33 1 354 1 305 1 123 2 128 1 152 1 185 1 18 1 286 1 262 4 189 1 322 1 264 1 
88 2 89 4 267 2 136 1 327 1 347 1 330 1 211 11 213 1 98 2 139 5 33 1 354 1 305 2 123 3 358 1 128 2 152 1 18 1 185 2 286 2 153 1 186 1 262 6 48 1 189 1 322 1 264 1 
89 6 88 3 267 1 68 1 136 3 327 1 347 1 330 1 211 19 194 1 213 1 98 3 139 10 55 1 33 1 354 1 305 3 123 4 358 1 128 3 152 1 18 1 80 1 185 3 261 2 286 3 153 2 186 2 262 9 188 1 189 1 322 1 264 1 
89 6 88 3 267 1 68 1 136 2 327 1 347 1 330 1 211 17 194 1 213 1 98 3 139 7 55 1 33 1 354 1 305 3 123 5 358 2 128 3 152 1 18 1 80 1 185 3 261 1 286 3 153 2 186 2 262 10 188 1 189 1 322 1 264 1 
89 2 88 2 267 1 136 1 327 1 211 8 330 1 213 1 98 1 139 4 33 1 354 1 305 1 123 2 128 1 152 1 185 1 18 1 286 1 262 4 189 1 322 1 264 1 
88 1 89 2 305 1 68 1 267 1 136 2 327 1 123 2 211 12 358 1 128 1 194 1 98 1 261 2 185 2 80 1 18 1 139 6 186 2 153 2 286 1 262 6 188 1 33 1 354 1 
89 8 88 3 68 1 267 1 136 2 327 1 347 1 330 1 211 18 194 1 213 1 98 4 139 8 55 2 33 1 354 1 305 4 123 5 358 2 128 4 152 1 18 1 80 1 185 3 261 1 286 4 153 2 186 2 262 10 188 1 189 1 322 1 264 1 
89 8 88 3 68 1 267 1 136 2 327 1 211 16 194 1 98 4 139 7 55 2 352 1 33 1 354 1 305 4 123 6 358 3 128 4 18 1 80 1 185 3 261 2 286 4 153 3 186 3 262 9 188 1 
88 3 136 1 123 6 211 7 330 3 358 3 152 1 139 4 185 1 262 3 189 2 322 3 264 1 
89 8 88 3 68 1 267 1 136 2 327 1 330 1 211 18 194 1 213 1 98 4 139 8 55 2 352 1 33 1 354 1 305 4 123 4 358 1 128 4 152 1 18 1 80 1 185 3 261 1 286 4 153 2 186 2 262 10 188 1 189 1 322 1 264 1 
88 2 89 4 305 2 136 1 123 3 211 8 330 1 358 1 128 2 213 1 98 2 152 1 185 1 139 4 286 2 55 1 262 4 189 1 322 1 264 1 
88 2 136 1 123 2 330 1 211 6 213 1 152 1 139 3 185 1 332 1 262 3 189 1 322 1 264 1 
88 1 89 2 305 1 136 1 347 1 123 2 211 4 358 1 128 1 98 1 139 2 261 1 185 1 286 1 153 1 186 1 262 2 
88 1 267 2 136 1 327 1 123 2 211 7 358 1 261 1 18 1 139 4 185 1 153 1 186 1 262 3 48 1 
88 5 89 4 267 2 136 3 208 1 327 2 330 2 211 23 213 1 98 2 139 12 55 2 6 1 305 2 123 9 309 1 358 4 128 2 152 1 185 3 261 2 186 2 153 2 286 2 262 11 48 1 189 1 322 2 264 1 
139 1 267 1 211 1 
262 1 327 1 211 1 
305 1 89 2 88 2 136 1 347 1 120 1 123 3 211 6 358 1 128 1 98 1 139 3 185 1 261 1 286 1 153 1 186 1 262 3 
88 1 89 2 305 1 68 1 267 1 136 2 327 1 123 2 211 12 358 1 128 1 194 1 98 1 261 2 185 2 80 1 18 1 139 6 186 2 153 2 286 1 262 6 188 1 33 1 354 1 
88 1 136 1 123 2 211 6 330 1 358 1 185 1 139 3 262 3 322 1 264 1 
88 1 89 2 305 1 208 1 123 2 330 1 211 3 358 1 128 1 98 1 152 1 139 2 55 1 286 1 262 1 189 1 322 1 
305 1 89 2 88 3 136 2 123 5 46 1 330 2 211 10 358 2 128 1 98 1 139 5 185 2 286 1 262 5 322 2 264 1 354 1 
89 2 305 1 123 1 211 2 358 1 128 1 98 1 185 1 286 1 186 1 262 2 354 1 
88 1 89 2 305 1 136 1 123 2 211 4 358 1 128 1 98 1 139 2 261 1 185 1 286 1 153 1 186 1 262 2 354 1 
89 6 305 3 88 1 208 1 123 2 211 3 330 1 358 1 128 3 98 3 139 2 55 1 286 3 352 1 262 1 322 1 354 1 
89 10 88 7 267 4 208 1 136 5 327 3 347 1 137 1 330 3 211 34 193 1 213 1 98 5 139 18 55 2 352 1 354 1 305 5 123 12 358 5 128 5 343 1 152 1 18 1 185 5 261 3 286 5 153 3 186 3 262 16 48 1 189 1 322 3 264 2 
298 1 292 1 87 1 53 1 345 1 247 1 206 1 
292 1 125 1 53 1 149 1 206 1 298 1 288 1 256 1 35 1 87 1 247 1 345 1 
248 1 332 1 316 1 142 1 64 1 207 1 308 1 171 1 304 1 158 1 4 1 
248 1 292 2 42 1 308 1 148 1 4 1 53 1 298 1 19 1 316 1 58 1 207 1 64 1 142 1 158 1 102 1 7 1 345 2 
220 1 248 3 292 1 42 1 227 1 308 1 281 1 148 1 4 2 298 1 333 1 19 1 316 1 58 1 207 1 64 1 142 1 83 1 50 1 102 1 7 2 345 1 
220 1 248 3 292 1 227 1 308 1 281 1 148 1 4 2 349 1 298 1 333 1 19 1 316 1 58 1 207 1 64 1 142 1 83 1 50 1 102 1 7 2 345 1 
248 4 329 2 4 1 333 1 334 1 142 1 335 2 7 1 232 1 308 3 281 1 45 1 282 1 204 1 205 1 314 1 316 1 64 3 207 3 110 1 83 1 244 1 158 1 
248 4 308 3 180 1 281 1 45 1 282 1 329 2 4 1 204 1 333 1 314 1 316 1 207 3 64 3 142 1 335 2 83 1 110 1 158 1 244 1 232 1 7 1 
112 1 316 1 142 1 64 1 207 1 308 1 
248 3 112 1 69 1 181 1 308 7 4 2 17 1 351 1 129 1 316 3 108 1 207 6 64 7 353 1 142 2 155 1 287 1 60 1 158 2 7 1 324 1 
89 4 88 2 136 1 4 1 330 1 53 2 98 2 54 1 139 3 58 1 142 1 102 1 7 1 239 1 200 2 148 1 152 1 286 2 19 1 64 1 207 1 154 1 287 1 20 2 246 1 345 2 290 1 248 1 292 2 252 1 211 6 213 1 298 1 305 2 42 1 308 1 123 2 182 1 128 2 185 1 47 1 262 3 316 1 189 1 322 1 84 1 264 1 
248 2 190 1 0 1 348 1 29 1 329 3 166 1 335 3 101 1 196 2 232 1 172 2 233 1 355 2 177 1 308 1 180 1 62 2 45 2 282 1 221 1 204 1 207 1 64 1 110 1 243 1 244 1 158 1 
248 2 112 1 308 2 4 1 204 1 316 2 207 2 64 2 353 1 142 1 287 1 144 1 7 1 
248 1 119 1 308 4 4 1 314 1 316 1 207 4 64 4 142 1 287 1 304 1 171 1 158 1 
248 1 175 1 308 2 281 1 4 1 129 1 31 1 316 2 207 2 64 2 142 1 317 1 155 1 7 1 
99 1 316 1 253 1 142 1 64 1 207 1 27 1 308 1 127 1 158 1 
248 1 308 2 294 1 4 1 316 1 207 2 64 2 108 1 142 1 287 1 60 1 
248 3 119 1 308 5 181 1 281 1 4 2 351 1 316 2 207 4 64 5 142 2 287 1 171 1 304 1 158 1 60 1 
248 3 135 1 119 1 308 5 181 1 281 1 4 2 316 2 207 4 64 5 142 2 287 1 171 1 304 1 158 1 60 1 
248 1 292 2 308 1 148 1 4 1 349 1 53 1 298 1 19 1 316 1 58 1 207 1 64 1 142 1 158 1 102 1 7 1 345 2 
248 1 308 1 281 1 4 1 17 1 129 1 316 2 207 1 64 1 353 1 142 1 155 1 7 1 
113 1 245 1 77 1 96 1 53 1 
220 1 280 1 113 1 227 1 329 1 202 1 96 1 183 1 81 1 263 1 335 1 50 1 245 1 77 1 233 1 
292 1 96 1 105 1 298 1 320 1 245 1 77 1 37 1 345 1 
280 1 202 1 245 1 
274 1 195 1 132 1 271 1 126 1 215 1 133 3 85 3 160 1 134 1 342 1 
3 1 75 1 215 1 79 1 
215 1 160 1 
332 1 271 1 215 1 160 1 
274 1 271 1 215 1 133 1 85 1 160 1 342 1 
268 1 85 1 38 1 
25 1 26 1 339 1 271 1 342 1 274 1 195 2 215 1 133 3 85 3 134 1 160 1 
274 1 132 1 271 1 215 1 229 1 133 2 85 2 160 1 342 1 
253 1 27 1 342 1 274 1 222 1 168 1 75 1 215 1 133 1 85 1 134 1 
274 1 215 1 133 1 85 1 160 1 134 1 342 1 
274 1 271 1 133 1 85 1 160 2 134 1 342 1 
342 2 274 2 214 1 336 1 215 1 133 2 85 2 226 1 160 1 134 1 
41 1 271 1 126 1 79 1 342 1 274 1 132 2 75 1 215 2 133 3 85 3 160 1 134 1 
253 2 27 1 271 1 342 1 212 1 99 1 274 1 168 1 132 1 215 1 133 2 85 2 160 1 134 1 219 1 
147 1 271 1 229 1 79 1 342 2 274 2 132 2 75 1 215 2 133 4 85 4 160 1 134 1 
274 1 271 1 215 1 133 1 85 1 160 1 134 1 342 1 
26 1 3 1 339 1 271 2 79 1 342 1 274 1 195 1 132 2 75 1 215 3 133 4 85 4 160 2 
326 1 91 1 271 1 342 1 242 1 274 1 132 1 215 1 133 2 85 2 160 1 134 1 
26 1 28 1 339 2 271 1 342 1 274 1 195 2 215 1 133 3 85 3 134 1 160 1 
115 1 114 2 346 1 215 2 
140 1 274 1 133 1 85 1 134 1 342 1 
274 1 132 1 271 1 215 1 126 1 133 2 85 2 160 1 134 1 342 1 
311 1 
274 1 271 1 215 1 133 1 85 1 160 1 134 1 342 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 318 4 259 1 280 5 340 1 284 2 8 1 306 1 241 1 33 1 263 1 114 1 12 1 266 1 223 2 42 1 176 9 337 3 294 2 208 1 380 7 254 1 103 9 102 1 
212 1 318 4 42 1 259 1 340 1 280 5 284 2 8 1 241 1 306 1 33 1 263 1 176 9 114 1 337 3 294 2 208 1 12 1 380 7 266 1 223 2 254 1 102 1 103 9 
318 4 259 1 340 1 5 1 323 1 280 5 284 2 241 2 306 1 33 1 263 2 114 1 12 2 266 1 223 2 170 1 42 1 292 1 122 1 176 9 98 1 337 3 294 2 208 1 380 6 254 2 102 1 103 9 
318 4 259 1 340 1 5 1 323 1 280 5 284 2 241 2 306 1 33 1 263 2 114 1 12 2 266 1 223 2 170 1 42 1 292 1 122 1 176 9 98 1 337 3 294 2 208 1 380 6 254 2 102 1 103 9 
318 5 259 1 340 1 5 1 323 1 280 6 284 2 241 2 306 1 33 1 263 2 114 1 12 2 266 1 223 2 170 1 42 1 292 1 122 1 176 10 98 1 337 4 294 2 208 1 380 7 254 2 102 1 103 10 
318 3 259 1 340 1 5 1 323 1 280 4 284 1 241 2 306 1 33 1 263 2 114 1 12 2 266 1 223 2 170 1 42 1 292 1 122 1 176 7 98 1 337 2 294 2 208 1 380 4 254 2 103 7 
318 2 42 1 259 1 340 1 280 3 284 2 241 1 33 1 263 1 176 4 337 1 294 1 208 1 380 3 12 1 223 1 102 1 103 4 
42 1 96 1 158 1 280 1 323 1 21 1 241 1 33 1 292 1 263 1 176 2 294 1 208 1 223 1 254 1 103 2 
318 1 42 1 280 2 306 1 33 1 176 3 337 1 294 2 208 1 380 1 223 2 254 1 103 3 
219 1 
89 1 237 1 210 2 
352 2 357 1 63 2 94 2 365 2 45 2 345 2 278 1 
357 1 130 1 105 1 191 1 279 1 112 1 341 1 6 1 195 1 345 3 308 1 62 2 328 1 63 2 365 2 244 1 198 1 167 1 332 1 309 1 171 1 311 1 94 2 43 2 45 2 230 2 46 2 374 1 270 1 290 1 352 3 124 1 378 1 51 1 24 1 278 1 256 2 
352 1 16 1 357 1 63 1 94 1 365 1 45 1 47 1 135 1 345 1 
71 1 29 1 345 1 135 1 352 1 10 1 376 1 32 1 63 1 150 1 125 1 273 1 89 1 200 1 
94 1 45 1 71 1 29 1 345 1 135 1 352 1 10 2 376 1 32 1 63 1 365 1 125 2 89 1 200 1 
10 1 153 1 235 1 190 1 125 1 
10 2 235 1 190 1 125 2 89 1 36 1 168 1 200 1 
10 1 235 1 125 1 
16 1 357 1 94 1 190 1 45 1 47 1 135 1 345 1 174 1 352 1 10 1 63 1 365 1 125 1 
89 1 
10 2 253 1 235 1 190 1 125 2 89 1 168 1 200 1 
357 1 358 2 190 2 339 1 58 2 135 1 345 1 363 1 218 1 10 5 84 1 63 1 163 1 137 1 365 1 89 2 168 1 200 2 16 1 347 5 310 2 70 1 268 2 94 1 119 2 45 1 47 1 121 1 174 1 352 1 235 2 23 2 125 5 75 1 209 1 99 1 316 5 79 1 
311 1 105 1 45 1 230 1 279 1 142 1 112 1 6 1 341 1 270 1 345 2 161 1 352 2 62 1 63 1 365 1 378 1 198 1 256 1 224 1 
219 1 
94 1 45 1 375 1 345 2 352 2 63 2 365 1 265 1 278 2 
281 1 48 1 224 1 
311 1 105 1 230 1 279 1 112 1 341 1 6 1 345 1 270 1 352 1 62 1 378 1 88 1 198 1 278 1 256 1 
94 1 156 1 45 4 142 2 342 1 375 1 345 5 161 1 352 5 63 5 365 4 273 1 53 1 278 1 
225 1 352 2 16 1 63 2 365 2 45 2 135 1 345 2 
352 3 63 3 94 1 365 3 45 3 142 1 345 3 278 1 
352 1 16 1 63 1 365 1 45 1 135 1 345 1 
352 1 63 1 94 1 365 1 45 1 265 1 375 1 135 1 345 1 
130 1 357 1 105 1 191 1 29 1 279 1 112 1 6 1 341 1 195 1 345 4 135 1 161 1 308 1 10 1 62 1 32 1 63 3 365 3 198 1 309 1 171 1 311 1 94 2 43 1 231 1 45 3 71 1 230 1 46 2 142 1 72 1 374 1 375 1 270 1 352 4 376 1 124 1 378 1 51 1 125 1 24 1 278 1 256 1 
352 2 63 2 365 1 45 1 273 1 142 1 342 1 345 2 278 1 
94 1 29 1 45 3 231 1 71 1 142 2 375 1 135 1 345 3 161 1 352 3 10 1 376 1 32 1 63 3 365 3 125 1 89 1 91 1 
94 1 45 2 142 1 375 1 48 1 345 2 352 2 63 2 365 2 224 1 
311 1 105 1 230 1 279 1 112 1 341 1 6 1 345 1 270 1 352 1 62 1 378 1 198 1 278 1 256 1 
311 1 105 1 230 1 279 1 112 1 345 1 270 1 352 1 62 1 11 1 378 1 198 1 278 1 256 1 183 1 
358 1 58 1 133 1 281 2 59 1 195 1 307 1 308 1 244 2 309 1 224 2 15 1 171 1 229 1 43 4 172 1 46 2 374 2 48 2 271 1 291 1 51 1 24 1 381 1 
352 1 225 1 63 1 365 1 71 1 45 1 135 1 345 1 
257 1 54 1 
257 1 54 1 
106 1 127 1 
106 1 127 1 
106 1 127 1 
214 1 257 1 54 1 
214 1 257 1 54 1 
186 1 257 1 54 1 
106 1 330 1 127 1 249 1 257 2 54 2 
214 1 257 1 54 1 
255 1 257 1 54 1 
255 1 257 1 54 1 
255 1 257 1 54 1 
186 1 213 1 192 1 194 1 110 1 134 1 282 1 345 2 10 1 286 1 85 1 63 2 365 2 64 1 45 2 120 1 234 1 352 2 125 1 207 1 278 1 257 1 54 1 299 1 
227 1 185 1 189 1 213 2 120 3 131 1 194 2 134 2 282 1 248 2 344 1 10 2 125 2 207 2 89 1 330 1 100 1 257 2 54 2 
263 1 12 1 241 1 
263 1 158 1 241 1 
144 1 319 1 263 3 35 1 158 1 12 2 
144 1 319 1 320 1 263 2 158 1 12 1 
144 1 319 2 263 2 158 1 12 1 
358 1 190 4 192 1 58 1 133 1 110 1 325 1 301 1 286 1 10 5 163 1 86 1 89 2 168 1 38 1 200 1 15 1 347 3 310 1 69 2 268 1 370 2 119 1 235 1 125 5 180 1 151 1 181 1 237 1 210 3 356 2 316 2 
153 5 358 3 190 7 58 3 133 3 110 4 283 1 325 1 301 2 285 5 10 9 163 1 89 5 168 1 200 1 202 1 15 3 93 1 347 8 310 2 69 6 268 2 119 2 203 1 235 6 125 9 354 1 180 3 151 2 99 1 237 3 210 9 356 6 316 6 317 1 
358 1 190 2 58 1 110 1 133 1 301 1 10 3 89 3 38 1 200 1 15 1 347 3 310 1 268 1 370 1 69 2 119 1 125 3 151 1 180 1 181 1 99 1 237 2 316 2 356 2 210 4 
358 2 190 3 58 2 110 2 133 2 301 1 10 4 89 4 38 1 200 1 202 1 15 2 93 1 347 5 310 1 69 4 268 1 370 2 119 1 203 1 125 4 151 1 180 2 99 1 181 1 237 3 210 7 356 4 316 4 
219 1 
57 1 198 1 
362 1 
279 1 198 1 112 1 
198 1 274 1 
279 1 198 1 
129 1 17 1 279 1 198 3 112 1 367 2 
70 1 228 2 358 1 300 1 43 7 58 1 172 3 349 1 59 2 121 1 374 3 351 1 61 1 164 1 244 4 298 1 79 1 
70 1 228 2 358 1 300 1 43 7 58 1 172 3 349 1 59 2 121 1 374 3 351 1 61 1 164 1 244 4 298 1 79 1 
70 1 228 2 358 1 300 1 43 7 58 1 172 3 349 1 59 2 121 1 374 3 351 1 61 1 164 1 293 1 244 4 298 1 79 1 
300 1 358 4 58 4 133 3 109 1 59 5 195 1 61 1 164 2 244 16 37 1 15 3 171 1 70 2 289 1 228 3 43 31 172 10 349 1 46 2 121 2 247 1 97 1 374 15 351 2 175 4 148 1 51 1 24 1 180 3 178 1 152 3 298 5 79 1 
358 1 58 1 109 1 59 3 195 2 61 1 164 1 244 5 171 2 228 2 70 1 43 9 312 1 172 4 46 4 349 1 372 1 121 1 351 1 374 4 51 2 24 2 298 1 79 1 
105 1 158 1 280 1 241 1 62 1 33 1 263 2 35 1 12 1 331 1 223 1 201 1 42 1 95 1 230 1 141 1 270 1 147 1 149 1 176 2 52 1 294 1 208 1 380 1 126 1 277 1 297 1 254 1 256 1 103 2 
184 1 105 1 158 1 280 1 241 1 305 1 62 1 33 1 263 2 35 1 12 1 331 1 223 1 201 1 92 1 95 1 230 1 141 1 270 1 149 1 176 3 52 1 294 1 208 1 126 1 380 2 297 1 254 1 256 1 103 3 
184 1 105 1 95 1 230 1 158 1 280 1 270 1 241 1 62 1 33 1 263 2 176 2 149 1 35 1 208 1 12 1 380 2 126 1 331 1 297 1 254 1 201 1 103 2 256 1 92 1 
105 1 4 1 157 1 230 1 279 1 322 1 216 1 270 1 305 1 62 1 149 2 176 1 378 1 236 1 294 1 126 2 198 1 331 2 90 1 254 2 223 1 103 1 256 1 
105 1 158 1 241 1 62 1 263 2 35 1 12 1 331 1 223 1 201 1 92 1 42 1 95 1 230 1 141 1 270 1 149 1 176 1 52 1 294 1 126 1 277 1 297 1 254 1 256 1 103 1 
83 1 
104 1 238 1 1 1 321 5 29 1 359 3 132 3 324 1 343 3 304 1 345 1 135 1 30 1 10 4 32 1 163 1 63 1 221 2 89 1 222 2 168 2 118 2 200 1 267 1 347 1 310 1 268 1 119 1 71 1 20 1 233 2 352 1 22 1 376 1 235 5 150 1 125 4 273 1 295 1 237 2 316 1 211 1 
104 1 238 1 1 1 321 5 29 1 359 3 132 3 324 1 343 3 304 1 345 1 135 1 30 1 10 4 32 1 163 1 63 1 221 2 89 1 222 2 168 2 118 2 200 1 267 1 347 1 310 1 268 1 119 1 71 1 20 1 233 2 352 1 22 1 376 1 235 5 150 1 125 4 273 1 295 1 237 2 316 1 211 1 
1 1 343 2 345 1 10 4 63 1 163 1 222 2 168 2 267 1 347 1 310 1 268 1 119 1 71 1 233 2 352 1 22 1 235 4 125 4 273 1 316 1 238 1 321 4 29 1 359 2 132 2 324 1 135 1 32 1 89 1 200 1 40 1 44 2 145 1 376 1 50 2 150 1 295 1 210 2 
1 1 105 1 157 1 301 1 343 2 345 1 304 1 10 5 62 2 163 1 63 1 221 2 222 2 168 3 118 2 267 1 347 2 310 1 268 1 119 1 230 2 71 1 173 1 233 2 270 1 313 1 22 1 352 1 235 6 125 5 273 1 237 2 316 2 238 1 321 4 29 1 359 2 279 1 132 2 324 1 135 1 32 1 89 2 140 1 199 1 198 1 90 1 200 1 40 1 376 1 378 2 150 1 295 1 210 2 256 2 
238 1 1 1 321 2 29 1 359 1 345 1 135 1 10 3 32 1 63 1 168 1 267 1 71 1 352 1 22 1 376 1 253 1 235 2 150 1 125 3 273 1 295 1 
238 1 1 1 321 3 29 1 132 1 345 1 135 1 10 3 32 1 63 1 89 1 168 1 200 1 267 1 71 1 352 1 22 1 376 1 253 1 235 1 150 1 125 3 273 1 295 1 
238 1 1 1 321 3 29 1 359 1 132 1 343 1 345 1 135 1 10 3 32 1 63 1 89 1 168 1 200 1 267 1 71 1 352 1 22 1 253 1 376 1 235 2 150 1 125 3 273 1 295 1 
104 1 238 1 1 1 338 1 321 6 29 1 359 4 132 4 324 1 343 4 304 1 345 1 135 1 30 1 10 5 32 1 163 1 63 1 221 2 89 5 222 2 168 3 118 2 200 5 267 1 347 1 310 1 268 1 119 1 71 1 20 1 233 2 22 1 352 1 253 1 376 1 235 7 150 1 125 5 273 1 295 1 237 2 316 1 211 1 
1 1 343 2 304 1 345 1 10 4 63 1 163 1 221 2 222 2 168 2 118 2 267 1 347 1 310 1 268 1 119 1 71 1 233 2 352 1 22 1 235 4 125 4 273 1 316 1 237 2 238 1 321 4 29 1 359 2 132 2 324 1 135 1 32 1 89 2 200 1 40 1 376 1 150 1 295 1 210 2 
238 1 104 1 1 1 321 4 29 1 359 2 132 2 324 1 343 2 304 1 345 1 135 1 30 1 10 4 32 1 63 1 163 1 221 2 89 1 222 2 168 2 118 2 200 1 267 1 347 1 310 1 268 1 119 1 71 1 20 1 233 2 352 1 22 1 376 1 235 4 150 1 125 4 273 1 295 1 237 2 316 1 
238 1 104 1 1 1 321 4 29 1 359 2 132 2 324 1 343 2 304 1 345 1 135 1 30 1 10 4 32 1 63 1 163 1 221 2 89 1 222 2 168 2 118 2 200 1 267 1 347 1 310 1 268 1 119 1 71 1 20 1 233 2 352 1 22 1 376 1 235 4 150 1 125 4 273 1 295 1 237 2 316 1 
238 1 1 1 81 1 321 4 29 1 359 2 132 2 324 1 343 2 345 1 135 1 10 4 32 1 63 1 163 1 89 1 222 2 168 2 200 1 267 1 347 1 310 1 268 1 119 1 44 2 71 1 20 1 233 2 352 1 22 1 145 1 50 2 376 1 235 4 150 1 125 4 273 1 295 1 296 1 210 2 316 1 
308 1 219 1 171 1 51 1 24 1 46 2 195 1 309 1 271 1 
358 1 58 2 133 2 59 1 281 11 215 1 195 2 308 2 244 8 14 1 332 1 309 1 224 11 15 1 171 2 289 1 43 14 172 2 46 4 247 1 374 6 48 4 143 1 175 3 124 1 51 2 24 2 179 1 180 2 77 1 152 3 278 1 298 1 
105 1 279 1 112 1 6 1 341 1 195 1 345 2 161 1 62 1 308 1 63 1 365 1 88 1 244 1 198 1 14 1 332 1 309 1 368 1 311 1 171 1 43 2 230 1 45 1 46 2 142 1 374 1 270 1 48 1 251 1 272 1 352 2 378 1 124 1 51 1 24 1 278 1 256 1 
3 1 105 2 58 3 59 4 112 2 341 2 6 2 61 1 345 3 161 1 62 3 308 3 63 1 14 1 169 2 309 3 224 7 15 2 171 3 311 2 228 1 70 1 230 3 172 8 349 1 121 1 270 2 352 3 124 1 24 3 76 1 180 2 278 2 79 1 358 3 191 2 279 2 133 2 281 7 195 3 329 1 365 1 242 2 87 2 244 10 198 2 332 1 92 1 246 2 43 20 45 1 46 6 142 1 374 10 48 7 378 1 51 3 256 3 298 4 
105 2 157 1 279 2 217 1 195 2 261 1 345 1 62 7 308 2 63 1 365 1 264 1 138 1 244 1 198 3 90 1 332 1 309 2 92 1 67 1 334 1 171 2 43 2 45 1 230 8 46 4 142 1 374 1 270 2 271 1 290 2 352 1 147 1 123 1 378 2 124 1 51 2 24 2 256 8 
358 1 58 1 133 1 59 1 281 1 195 1 345 1 308 1 63 1 365 1 244 1 14 1 309 1 224 1 15 1 171 1 94 1 43 3 172 1 45 1 46 2 375 1 374 2 48 1 352 1 51 1 24 1 180 1 275 1 
171 1 43 2 172 1 58 1 46 2 133 1 281 1 195 1 48 1 271 1 291 1 308 1 51 1 24 1 244 2 298 1 309 1 224 1 
15 1 171 1 358 1 43 2 172 1 46 2 59 1 281 1 195 1 374 2 48 1 271 1 307 1 308 1 51 1 24 1 309 1 224 1 
358 1 58 1 133 1 281 2 59 1 195 1 308 1 244 2 309 1 224 2 15 1 171 1 43 4 172 2 46 2 374 2 48 2 271 1 51 1 24 1 180 1 298 1 
171 1 43 2 172 1 58 1 46 2 133 1 281 1 261 1 195 1 48 1 291 1 308 1 51 1 24 1 244 2 298 1 309 1 224 1 
15 1 171 1 358 1 43 2 172 1 46 2 59 1 281 1 261 1 195 1 374 2 48 1 307 1 308 1 51 1 24 1 309 1 224 1 
358 1 58 1 133 1 281 2 59 1 195 1 261 1 308 1 244 2 309 1 224 2 15 1 171 1 43 4 172 2 46 2 374 2 48 2 51 1 24 1 180 1 298 1 
15 1 171 1 358 1 43 4 172 2 58 1 46 2 133 1 59 1 281 2 374 2 195 1 48 2 308 1 51 1 24 1 244 2 180 1 298 1 309 1 224 2 
105 1 191 1 279 1 112 1 6 1 341 1 195 1 345 1 62 1 308 1 244 1 198 1 332 1 309 1 311 1 171 1 43 2 230 1 46 2 374 1 270 1 352 1 378 1 124 1 51 1 24 1 278 1 256 1 
105 1 279 1 112 1 195 1 345 1 62 1 308 1 11 1 244 1 198 1 117 1 332 1 309 1 311 1 171 1 43 2 230 1 46 2 374 1 270 1 352 1 378 1 124 1 51 1 24 1 278 1 256 1 183 1 
358 1 58 1 133 1 281 2 59 1 195 1 308 1 244 2 14 1 309 1 224 2 15 1 171 1 43 4 172 2 46 2 374 2 48 2 51 1 24 1 180 1 298 1 
105 1 358 1 58 1 191 1 279 1 133 1 59 1 281 2 112 1 6 1 341 1 195 1 345 1 62 1 308 1 244 2 198 1 169 1 309 1 224 2 15 1 311 1 171 1 43 4 172 2 230 1 46 2 374 2 48 2 270 1 352 1 147 1 51 1 24 1 180 1 298 1 256 1 
358 1 58 1 133 1 281 1 195 1 345 1 308 1 63 1 365 1 244 2 14 1 309 1 224 1 15 1 171 1 94 1 43 3 172 1 45 1 46 2 374 1 375 1 48 1 352 1 51 1 24 1 180 1 298 1 101 1 
0 1 240 2 187 1 358 3 58 3 133 3 60 1 59 3 195 2 244 9 115 1 66 1 15 3 171 2 289 1 43 19 172 6 46 4 372 1 247 1 374 10 175 2 177 1 206 1 51 2 24 2 180 3 152 1 26 2 298 3 
0 2 28 1 240 1 358 2 58 3 109 2 133 3 60 1 59 2 195 3 7 1 136 1 244 14 115 2 66 1 15 2 171 3 289 2 43 26 172 4 46 6 350 1 372 1 374 12 175 2 205 1 206 1 51 3 24 3 180 3 152 2 26 4 298 2 78 1 
0 2 28 1 240 1 187 1 358 5 58 5 109 1 133 4 60 1 59 4 7 1 195 3 160 1 61 1 136 1 244 20 115 1 66 1 15 4 171 3 228 1 70 1 289 3 43 41 172 8 349 1 46 6 350 1 372 1 121 1 247 1 374 21 175 4 205 1 206 1 51 3 24 3 180 4 152 3 26 4 298 4 79 1 78 1 
0 2 28 1 240 1 187 1 358 4 58 5 109 2 133 4 60 1 59 4 7 1 195 4 160 1 61 1 136 1 244 20 115 1 66 1 15 3 171 4 228 1 70 1 289 3 43 38 172 7 349 1 46 8 350 1 372 1 121 1 247 1 374 18 175 4 205 1 206 1 51 4 24 4 180 4 152 3 26 4 298 3 79 1 78 1 
0 1 28 1 240 1 358 8 58 8 109 1 133 7 60 1 59 7 7 1 195 2 61 1 136 1 244 27 115 1 66 1 15 7 171 2 228 1 70 1 289 2 43 52 172 14 349 1 46 4 350 1 372 1 121 1 247 2 374 25 143 2 175 4 205 1 206 1 51 2 24 2 180 7 152 4 26 4 298 7 79 1 78 1 
185 1 213 1 207 1 194 1 330 1 134 1 344 1 9 1 257 1 54 1 
186 1 64 1 
213 1 18 1 207 1 194 1 134 1 73 1 303 1 257 1 54 1 
165 1 214 1 
249 1 255 1 55 1 
227 1 185 1 189 1 213 1 120 2 194 1 134 1 282 1 248 1 344 1 10 1 125 1 207 1 89 1 330 1 100 1 257 1 54 1 
227 1 185 1 189 1 213 1 120 2 194 1 134 1 282 1 248 1 344 1 10 1 125 1 207 1 89 1 330 1 100 1 257 1 54 1 
227 1 185 1 189 1 213 1 120 2 194 1 134 1 282 1 248 1 344 1 10 1 125 1 207 1 89 1 330 1 100 1 257 1 54 1 
165 1 214 1 249 1 
165 1 214 1 249 1 
255 1 55 1 
249 1 255 1 55 1 
85 1 234 1 
186 1 190 1 213 1 192 1 194 1 110 1 134 1 111 1 345 2 10 1 286 1 85 1 63 2 64 1 365 2 227 1 120 1 45 2 248 1 234 1 352 2 125 1 207 1 278 1 257 1 54 1 299 1 
2 1 105 1 188 1 279 1 195 1 345 2 308 1 62 2 63 2 264 1 138 1 244 1 198 1 245 1 14 1 332 1 309 1 39 1 171 1 43 2 230 2 46 2 232 1 374 1 270 1 290 2 352 2 124 1 51 1 24 1 256 2 
41 1 105 1 95 1 230 2 158 1 360 1 141 1 260 1 270 1 241 1 62 2 147 1 263 2 149 1 35 1 12 1 256 2 201 1 92 1 
41 1 105 1 95 1 230 1 158 1 141 1 270 1 241 1 62 1 263 2 149 1 35 1 12 1 256 1 27 1 201 1 92 1 
62 1 105 1 4 1 149 1 378 1 157 1 288 1 230 1 279 1 260 1 198 1 90 1 270 1 256 1 
41 1 105 1 95 1 230 1 158 1 360 1 141 1 260 1 270 1 241 1 62 1 263 2 149 1 35 1 12 1 256 1 201 1 92 1 
348 1 
357 1 130 1 105 1 191 1 279 1 112 1 341 1 6 1 195 1 345 3 62 1 308 1 63 2 365 2 198 1 309 1 311 1 171 1 94 2 43 1 230 1 45 2 46 2 374 1 270 1 352 3 124 1 378 1 51 1 24 1 278 1 256 1 
347 1 310 1 228 1 69 2 268 1 119 1 301 1 163 1 89 4 199 1 356 2 237 2 210 4 316 2 200 2 
219 1 
304 1 10 1 163 1 221 1 89 2 168 1 118 1 200 1 347 1 310 1 268 1 119 1 235 1 125 1 237 1 316 1 210 1 
105 4 57 3 58 2 339 2 159 2 112 3 301 2 302 2 62 3 10 5 220 2 113 2 163 4 168 3 13 2 15 2 347 9 310 4 268 4 69 6 119 4 230 3 270 3 314 1 235 5 23 2 125 5 75 1 180 2 274 2 356 6 237 6 316 8 80 1 129 1 358 2 29 2 279 3 133 2 363 1 31 2 34 1 364 1 87 2 89 8 199 1 198 10 367 2 200 2 336 1 147 1 378 1 210 12 256 3 
358 2 339 1 58 2 133 2 301 1 7 1 136 1 10 1 163 2 243 1 89 5 199 1 168 1 200 2 15 2 347 8 310 2 69 5 289 1 268 2 119 2 350 1 175 1 146 1 235 1 205 1 125 1 23 2 180 2 152 1 210 6 356 5 237 3 316 5 78 1 
104 1 357 1 358 1 339 1 58 2 135 1 345 1 10 1 163 1 63 1 137 1 365 1 16 1 347 2 310 1 70 1 268 1 119 1 94 1 45 1 47 1 121 1 174 1 352 1 23 2 125 1 316 2 79 1 
347 1 310 1 268 1 119 1 363 1 163 1 75 1 89 1 316 1 200 1 
15 2 347 5 69 5 358 2 339 1 58 2 133 2 87 1 23 2 89 5 180 2 316 5 356 5 210 10 237 5 
10 1 235 1 125 1 89 1 168 1 200 1 
105 1 157 1 279 1 301 2 62 4 10 3 163 1 34 1 198 1 199 2 168 2 90 1 347 2 68 1 310 2 268 2 119 2 230 4 173 1 335 1 270 1 336 2 313 1 235 4 378 2 125 3 99 1 316 2 256 4 
369 1 213 1 194 1 
369 1 213 1 194 1 
226 1 185 1 85 1 213 1 194 1 
369 1 213 1 194 1 
155 1 213 1 194 1 
155 1 213 1 194 1 
155 1 213 1 194 1 
213 1 194 1 
257 1 54 1 
171 2 228 1 70 1 358 1 43 8 58 1 172 3 46 4 349 1 109 1 59 2 121 1 374 4 195 2 61 1 51 2 24 2 244 4 298 1 79 1 
219 1 
15 1 171 1 358 1 43 4 172 2 58 1 46 2 133 1 59 1 374 2 195 1 51 1 24 1 355 1 244 2 180 1 298 1 
15 1 289 1 358 1 43 7 58 1 172 2 133 1 59 1 247 1 374 4 175 2 244 3 180 1 152 1 298 1 
358 3 58 3 133 2 109 2 59 5 215 1 195 2 61 1 262 1 244 11 15 2 171 2 228 1 70 2 43 23 172 9 349 1 46 4 121 2 247 1 374 12 143 1 175 2 51 2 24 2 180 2 152 2 298 4 79 1 
43 1 374 1 175 1 
43 1 244 1 152 1 
15 1 171 1 358 1 43 6 58 1 172 3 46 2 133 1 59 2 195 1 374 3 87 1 51 1 24 1 355 1 244 3 180 1 298 1 
358 2 58 2 133 2 59 1 195 1 7 1 136 1 244 6 15 2 171 1 289 1 43 12 172 2 46 2 372 1 350 1 374 6 175 1 205 1 51 1 24 1 180 2 152 1 298 1 78 1 
70 1 358 1 43 6 58 1 172 2 59 1 121 1 374 3 244 3 298 1 79 1 
171 1 70 1 43 3 172 2 46 2 349 1 109 1 59 1 121 1 374 2 195 1 61 1 262 1 51 1 24 1 244 1 298 1 
171 1 70 2 358 2 43 10 172 5 58 2 46 2 372 1 59 3 121 2 195 1 374 5 137 1 51 1 24 1 244 5 298 2 79 1 
171 1 43 2 58 1 172 1 46 2 372 1 133 1 195 1 51 1 24 1 244 2 298 1 
15 1 171 1 358 1 43 4 172 2 58 1 46 2 372 1 133 1 59 1 374 2 195 1 51 1 24 1 244 2 180 1 298 1 
171 3 187 1 70 1 43 3 172 2 46 6 109 1 372 1 59 1 121 1 374 2 195 3 262 1 51 3 24 3 244 1 298 1 
187 1 358 5 58 5 109 2 133 3 59 7 195 5 61 1 262 1 37 1 244 16 15 3 171 5 228 1 70 3 289 1 43 34 172 12 349 1 46 10 372 1 121 3 97 1 247 1 374 18 175 4 51 5 24 5 355 1 178 1 180 3 152 3 298 5 79 2 
358 1 58 1 59 2 195 1 61 1 244 4 171 1 228 1 289 1 70 1 43 8 172 2 46 2 349 1 372 1 121 1 374 4 175 1 205 1 51 1 24 1 152 1 79 1 
358 1 58 2 133 1 59 2 195 2 61 1 244 6 171 2 228 1 70 1 289 1 43 11 172 3 349 1 46 4 372 1 121 1 247 1 374 5 175 2 205 1 51 2 24 2 355 1 180 1 152 1 298 1 79 1 
358 3 58 3 133 2 109 1 59 3 195 3 7 1 61 1 136 1 244 9 15 2 171 3 228 1 70 1 289 1 43 19 172 4 349 1 46 6 350 1 372 1 121 1 374 10 175 1 205 1 51 3 24 3 355 1 180 2 152 1 298 1 79 1 78 1 
358 2 58 3 109 1 133 2 59 3 195 3 7 1 61 1 136 1 244 10 15 1 171 3 228 1 70 1 289 1 43 17 172 5 349 1 46 6 372 1 350 1 121 1 374 7 175 1 205 1 51 3 24 3 355 1 180 2 152 1 298 2 79 1 78 1 
358 1 58 1 59 2 195 1 61 1 244 4 171 1 228 1 289 1 70 1 43 8 172 2 46 2 349 1 372 1 121 1 374 4 175 1 205 1 51 1 24 1 152 1 79 1 
358 2 58 2 133 2 59 1 195 1 7 1 136 1 244 6 15 2 171 1 289 1 43 12 172 2 46 2 372 1 350 1 374 6 175 1 205 1 51 1 24 1 180 2 152 1 298 1 78 1 
358 2 58 3 133 2 109 2 59 3 195 4 7 1 61 1 136 1 244 10 15 1 171 4 228 1 70 1 289 1 43 18 172 5 349 1 46 8 350 1 372 1 121 1 374 8 175 1 205 1 51 4 24 4 355 1 180 2 152 1 298 2 79 1 78 1 
187 1 358 2 58 3 133 3 109 2 59 3 195 4 7 1 136 1 244 9 15 2 171 4 289 1 43 16 172 6 46 8 350 1 372 1 374 7 175 1 205 1 51 4 24 4 180 3 152 1 298 3 78 1 
70 3 358 1 43 7 172 6 58 1 349 1 59 3 121 3 374 4 61 2 244 3 298 3 79 1 
187 1 358 2 58 3 133 2 109 2 59 3 195 4 7 1 61 1 136 1 244 10 15 1 171 4 228 1 70 1 289 1 43 18 172 4 349 1 46 8 350 1 372 1 121 1 374 8 175 1 205 1 51 4 24 4 180 2 152 1 298 1 79 1 78 1 
352 1 63 1 273 1 342 1 182 1 345 1 278 1 
352 1 239 1 63 1 107 1 273 1 166 1 116 1 342 1 182 1 276 1 345 1 278 1 
62 1 219 1 378 1 230 1 256 1 
311 1 105 1 45 1 230 1 279 1 142 1 112 1 6 1 345 2 270 1 352 2 62 1 63 1 365 1 378 1 198 1 278 1 256 1 
105 1 279 2 112 2 6 1 345 2 135 1 62 1 32 1 113 1 63 2 365 2 198 3 311 1 230 1 45 1 71 1 142 1 270 1 336 1 352 2 274 1 278 1 256 1 
105 1 279 2 112 2 345 2 135 1 346 1 62 2 11 1 32 1 113 1 63 2 365 2 198 3 311 1 230 2 45 1 71 1 142 1 270 1 336 1 352 2 274 1 278 1 256 2 
105 1 57 1 29 1 193 1 279 1 112 1 346 1 62 3 10 2 113 1 89 1 198 4 367 1 200 1 333 1 230 3 270 1 336 1 235 1 378 1 125 2 274 1 256 3 
105 1 57 1 29 1 230 3 279 1 112 1 302 1 270 1 346 1 336 1 10 2 62 3 113 1 235 1 378 1 125 2 89 1 198 4 367 1 274 1 200 1 256 3 
62 1 105 1 123 1 230 1 270 1 256 1 
129 1 334 1 105 3 230 7 279 2 112 1 217 1 270 2 290 1 327 1 197 1 62 6 162 1 147 1 123 1 378 2 138 1 198 3 256 7 92 1 67 1 
105 1 58 1 59 2 112 1 6 1 341 1 345 2 61 1 62 1 308 2 63 1 14 1 169 1 309 2 224 1 171 2 311 1 70 1 228 1 230 1 172 2 349 1 121 1 270 1 352 2 24 2 278 2 79 1 358 1 191 1 279 1 281 1 195 2 365 1 244 3 198 1 39 1 246 1 43 6 45 1 46 4 142 1 374 3 48 1 147 1 51 2 256 1 
190 1 57 1 29 1 159 1 302 1 363 1 62 1 10 3 220 1 163 2 34 1 89 1 198 2 367 1 168 1 13 1 200 1 347 1 310 2 268 2 119 2 230 1 235 2 378 1 125 3 75 1 316 1 256 1 
129 1 105 2 230 2 279 1 112 1 270 1 62 2 147 1 123 1 364 1 198 2 367 1 256 2 
105 1 230 4 157 1 279 1 270 1 346 1 62 4 147 1 378 1 139 1 198 1 90 1 256 4 
105 2 230 2 19 1 279 1 112 1 270 1 336 1 327 1 197 1 62 2 379 1 76 1 198 1 256 2 
62 1 105 1 263 1 95 1 378 1 230 1 158 1 270 1 241 1 256 1 
105 1 230 2 279 1 232 1 270 1 62 2 147 1 138 1 198 1 256 2 92 1 
334 1 105 2 157 1 230 5 279 2 270 2 336 1 62 4 147 1 378 1 139 1 138 1 198 3 90 1 256 5 67 1 
334 1 105 2 157 1 230 5 279 2 270 2 336 1 62 4 377 1 147 1 378 1 139 1 138 1 198 3 90 1 256 5 
311 1 105 1 45 1 230 1 279 1 142 1 112 1 345 2 270 1 352 2 62 1 11 1 63 1 365 1 378 1 198 1 278 1 256 1 
129 1 105 2 230 1 279 1 112 1 270 1 336 1 327 1 197 1 62 1 162 1 198 1 256 1 
196 1 49 1 373 1 278 1 252 1 
190 1 29 1 71 1 231 1 361 1 373 2 135 1 252 2 49 1 196 2 10 2 32 1 376 1 353 1 125 2 89 1 315 1 278 1 200 1 
352 1 49 1 196 1 2 1 63 1 188 1 245 1 373 1 345 1 
49 1 353 1 315 1 
42 1 323 1 280 1 33 1 176 3 114 1 294 1 208 1 380 1 223 1 103 3 
318 1 371 1 337 1 280 1 
208 1 280 1 
219 1 
33 1 176 1 294 1 208 1 280 1 223 1 103 1 
331 1 254 1 103 1 
42 1 280 1 323 2 204 1 287 1 33 1 176 3 294 1 25 1 208 1 223 1 103 3 
33 1 176 2 294 1 208 1 280 1 380 1 284 1 223 1 103 2 
318 1 42 1 263 1 176 1 294 1 12 1 280 1 340 1 223 1 241 1 103 1 
42 1 176 1 294 1 208 1 280 1 223 1 103 1 
33 1 42 1 176 1 294 1 208 2 223 1 103 1 
42 1 154 1 280 1 326 1 176 2 294 2 65 1 208 1 223 2 103 2 
318 1 42 1 280 2 33 1 176 3 114 1 337 1 294 1 208 1 380 2 266 1 223 1 103 3 
128 1 42 1 158 1 280 1 241 1 33 1 263 2 176 2 294 1 35 1 208 1 12 1 380 1 223 1 103 2 
318 1 42 1 280 2 284 1 33 1 176 4 337 1 294 2 208 1 380 2 223 2 103 4 102 1 
33 1 42 1 176 1 294 1 208 1 280 1 223 1 103 1 
318 1 371 1 323 1 280 3 287 1 33 2 176 4 337 1 294 1 25 1 208 2 380 2 223 1 103 4 
42 1 258 1 108 1 280 1 8 1 33 1 176 2 294 1 208 1 380 1 223 1 103 2 
42 1 280 1 323 2 287 2 33 1 176 3 366 1 294 1 25 1 208 1 223 1 103 3 
280 2 269 2 250 1 74 1 
56 1 42 1 176 1 294 1 223 1 103 1 
33 1 42 1 176 2 114 1 294 1 208 1 280 1 380 1 223 1 103 2 
82 1 
33 1 42 1 176 1 294 1 208 1 280 1 223 1 103 1 

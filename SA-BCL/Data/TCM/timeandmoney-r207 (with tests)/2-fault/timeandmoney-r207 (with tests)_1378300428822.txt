#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 162 (12,350) (12,350) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 162 (12,350) (12,350) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 162 (12,350) (12,350) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 162 (12,350) (12,350) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 162 (11,298) (11,298) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (62,153,215,327) 212 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (62,153,215,327) 212 35 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (62,153,215,327) 212 35 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (22,163,281) (22,163,281) (22,163,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (22,163,281) (22,163,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (62,153,215,327) (62,153,215,327) (22,163,281) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (189,288) (189,288) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
350 1 308 1 12 1 162 1 115 1 327 1 20 1 215 1 153 1 
350 1 308 1 12 1 162 1 115 1 327 1 20 1 215 1 153 1 
350 1 308 1 12 1 162 1 115 1 327 1 20 1 215 1 153 1 
350 1 308 1 12 1 162 1 115 1 327 1 20 1 215 1 153 1 
23 3 45 1 2 1 1 2 72 1 115 1 62 3 327 1 339 2 153 1 160 1 99 1 295 1 286 1 366 1 225 1 20 4 215 4 
11 1 308 1 160 1 162 1 115 1 88 1 298 1 327 1 20 1 215 1 153 1 
308 1 212 1 115 1 327 2 20 1 215 2 153 2 
363 1 308 1 212 1 35 1 115 1 62 1 327 2 20 2 215 3 153 2 
363 1 308 1 212 1 35 1 115 1 62 1 327 2 20 2 215 3 153 2 
3 1 237 1 183 1 
237 1 221 1 184 2 
235 2 83 2 174 2 297 1 287 1 200 2 84 2 15 2 
273 2 289 2 274 1 46 1 136 1 360 1 118 1 9 1 247 2 97 2 341 1 174 2 365 1 297 1 123 1 200 3 125 1 321 1 30 1 83 2 61 2 232 1 182 1 63 1 84 2 15 3 39 1 154 1 87 1 235 2 375 1 133 1 238 1 352 1 287 1 314 1 271 1 
235 1 83 1 174 1 287 1 200 1 84 1 15 1 180 1 102 1 120 1 
282 1 336 1 58 1 83 1 3 1 244 1 15 1 27 1 156 1 158 1 237 1 200 1 102 1 166 1 
282 1 336 2 83 1 3 1 244 1 84 1 15 1 27 1 156 1 235 1 174 1 237 1 200 1 166 2 102 1 
336 1 140 1 33 1 358 1 166 1 
149 1 336 2 33 1 3 1 237 1 49 1 358 1 166 2 
336 1 33 1 166 1 
336 1 83 1 358 1 84 1 15 1 120 1 235 1 174 1 287 1 200 1 180 1 102 1 166 1 79 1 
237 1 
149 1 336 2 33 1 3 1 237 1 36 1 358 1 166 2 
149 1 336 5 33 2 3 1 261 2 304 1 358 2 305 2 373 1 106 1 266 1 197 2 96 1 340 1 237 1 19 1 166 5 354 1 206 1 
297 1 183 1 
83 2 84 1 15 2 235 1 174 1 297 2 200 2 146 1 216 1 
374 1 193 1 285 1 
218 1 61 1 46 1 15 1 154 1 87 1 247 1 97 1 133 1 341 1 238 1 365 1 297 1 352 1 200 1 271 1 
83 1 61 1 46 1 104 1 84 1 15 2 154 1 87 1 247 1 374 1 97 1 133 1 341 1 174 1 224 1 365 1 238 1 352 1 200 2 271 1 
83 5 84 4 104 1 15 5 158 1 235 1 174 4 224 2 297 1 200 5 300 1 229 1 216 1 302 1 
83 2 174 2 200 2 84 2 15 2 180 1 334 1 102 1 
235 1 83 3 174 3 224 1 297 1 200 3 84 3 15 3 
83 1 174 1 200 1 84 1 15 1 180 1 102 1 
235 1 83 1 174 1 200 1 84 1 15 1 102 1 146 1 216 1 
336 1 273 1 289 2 274 1 46 1 136 1 244 1 360 1 118 1 27 1 247 1 97 1 341 1 174 3 224 1 365 1 251 1 297 1 123 1 200 4 102 1 321 1 282 1 83 3 61 1 232 1 182 1 84 3 104 1 15 4 39 1 154 1 87 1 156 1 235 2 375 1 133 1 309 1 238 1 352 1 287 1 216 1 166 1 271 1 
158 1 83 2 174 1 224 1 297 1 200 2 84 1 300 1 15 2 
336 1 282 1 83 3 244 1 104 1 84 3 15 3 27 1 156 1 235 1 174 3 237 1 224 2 309 1 178 1 200 3 216 1 166 1 102 1 
83 2 193 1 84 2 15 2 235 1 374 1 174 2 224 1 200 2 216 1 
61 1 46 1 15 1 154 1 87 1 247 1 97 1 133 1 341 1 238 1 365 1 297 1 352 1 200 1 271 1 
61 1 46 1 15 1 277 1 247 1 97 1 133 1 341 1 238 1 365 1 297 1 352 1 200 1 190 1 271 1 
168 1 273 4 193 2 289 2 243 1 136 1 25 1 360 1 123 1 228 1 280 1 202 1 126 1 231 1 57 1 321 1 182 1 39 2 348 1 374 2 375 1 285 2 40 1 314 2 
83 1 174 1 244 1 200 1 84 1 15 1 102 1 334 1 
4 1 173 1 
4 1 173 1 
370 1 330 1 
370 1 330 1 
370 1 330 1 
4 1 64 1 173 1 
4 1 64 1 173 1 
4 1 116 1 173 1 
4 2 369 1 370 1 359 1 330 1 173 2 
4 1 64 1 173 1 
4 1 107 1 173 1 
4 1 107 1 173 1 
4 1 107 1 173 1 
336 1 44 1 4 1 116 1 50 1 173 1 174 2 297 1 53 1 198 1 201 1 200 2 226 1 255 1 230 1 83 2 368 1 371 1 372 1 84 2 15 2 67 1 21 1 166 1 
336 2 81 1 44 1 4 2 73 1 359 1 50 3 361 1 173 2 132 1 67 2 332 1 237 1 53 2 201 2 377 2 21 2 166 2 90 1 
160 1 99 1 286 1 
160 1 99 1 88 1 
160 3 286 2 88 1 343 1 378 1 135 1 
160 2 286 1 88 1 343 1 378 1 65 1 
160 2 286 1 88 1 343 1 378 2 
336 5 71 2 316 1 3 1 25 1 358 4 291 1 221 1 197 1 342 1 199 2 226 1 202 1 256 1 57 1 206 3 149 1 33 1 34 1 261 1 368 1 325 2 371 1 305 1 184 3 266 1 17 1 237 2 109 1 40 1 166 5 354 2 
336 9 91 1 71 6 316 3 94 5 3 1 25 3 358 7 221 3 197 2 140 5 141 1 342 1 199 6 202 3 320 1 256 2 344 1 57 3 206 8 147 1 149 1 33 6 368 4 261 2 207 1 304 1 305 2 184 9 266 1 17 2 237 5 40 3 166 9 354 6 
336 3 3 1 316 1 71 2 25 1 358 2 291 1 221 2 197 1 199 2 202 1 256 1 57 1 206 3 261 1 368 1 325 1 304 1 305 1 184 4 17 1 237 3 109 1 40 1 166 3 354 2 
336 4 3 1 71 4 316 2 25 2 358 3 291 1 221 3 197 1 199 4 202 2 256 1 344 1 57 2 206 5 147 1 261 1 368 2 207 1 325 2 304 1 305 1 184 7 17 1 237 4 109 1 40 2 166 4 354 4 
341 1 240 1 183 1 
341 1 26 1 
213 1 
341 1 365 1 46 1 
68 1 341 1 
341 1 365 1 
181 1 341 3 365 1 46 1 6 1 240 2 
0 1 192 1 273 7 25 1 39 3 131 1 28 1 108 1 333 1 228 3 376 2 40 1 258 1 231 2 313 1 70 1 314 4 
0 1 192 1 273 7 25 1 39 3 131 1 28 1 108 1 333 1 228 3 376 2 40 1 258 1 231 2 313 1 70 1 314 4 
0 1 192 1 273 7 25 1 39 3 131 1 317 1 28 1 333 1 108 1 228 3 376 2 40 1 258 1 231 2 313 1 70 1 314 4 
0 2 192 2 357 1 273 31 316 3 289 2 220 1 276 1 136 1 338 1 25 4 47 1 360 1 28 2 123 1 299 1 228 10 202 3 258 1 231 5 57 3 182 1 39 15 131 5 210 1 185 3 333 1 108 1 376 3 40 4 312 4 70 1 313 2 314 16 
0 1 192 1 273 9 289 4 290 1 136 2 182 2 25 1 360 2 39 4 131 1 28 1 333 1 299 1 123 2 228 4 376 2 40 1 258 1 257 1 313 1 70 1 231 3 314 5 
115 1 247 1 10 1 97 1 99 1 179 1 281 1 61 1 345 1 62 1 327 1 347 1 153 1 155 1 268 1 133 1 308 1 160 2 239 1 286 1 163 1 88 1 352 1 20 1 215 2 22 1 135 1 
247 1 10 1 97 1 51 1 99 1 323 1 61 1 345 1 62 2 327 1 347 1 153 1 155 1 268 1 133 1 308 1 160 2 239 1 286 1 163 1 88 1 352 1 20 2 215 3 379 1 22 1 135 1 
61 1 345 1 62 2 155 1 247 1 10 1 97 1 133 1 51 1 268 1 160 2 308 1 99 1 239 1 286 1 88 1 163 1 352 1 20 1 215 2 379 1 135 1 
315 1 318 1 292 1 247 1 97 1 341 1 365 1 323 1 61 1 327 1 153 1 155 2 133 1 268 2 308 2 239 2 352 1 189 1 20 1 215 1 111 1 288 1 271 1 
115 1 247 1 10 1 97 1 99 1 281 1 61 1 345 1 327 1 347 1 153 1 155 1 268 1 133 1 308 1 160 2 239 1 286 1 163 1 88 1 352 1 20 1 215 1 379 1 22 1 135 1 
41 1 
336 5 3 1 244 1 197 1 293 2 247 2 248 1 97 2 341 1 54 1 200 1 101 4 301 1 102 1 205 1 206 2 149 3 58 1 61 2 261 1 262 2 264 2 15 1 305 1 266 1 156 1 17 1 158 1 352 1 111 1 166 5 354 2 114 2 271 2 355 1 217 1 315 1 221 2 119 1 27 1 365 1 77 1 176 1 227 2 78 2 282 1 33 6 83 1 324 1 129 1 184 2 331 1 133 1 237 2 187 2 
336 3 244 1 27 1 176 1 200 1 101 2 301 1 102 1 282 1 149 1 58 1 83 1 33 2 36 1 15 1 129 1 156 1 158 1 331 1 187 1 166 3 355 1 
336 3 3 1 244 1 27 1 176 1 200 1 101 3 301 1 102 1 282 1 149 1 58 1 33 1 83 1 36 1 15 1 129 1 156 1 158 1 331 1 237 1 166 3 355 1 114 1 
336 3 3 1 244 1 27 1 176 1 200 1 101 3 301 1 102 1 149 1 282 1 58 1 83 1 33 2 36 1 264 1 15 1 129 1 156 1 158 1 331 1 237 1 187 1 166 3 355 1 114 1 
336 5 92 1 3 5 244 1 197 1 293 2 200 1 101 6 102 1 301 1 206 1 149 3 58 1 261 1 262 2 264 4 15 1 305 1 266 1 156 1 158 1 166 5 354 1 355 1 114 4 221 2 119 1 27 1 121 1 76 1 176 1 278 1 227 2 78 2 282 1 127 1 33 7 83 1 324 1 36 1 129 1 331 1 237 5 187 4 
336 4 3 1 244 1 197 1 293 2 200 1 101 4 102 1 301 1 206 1 205 1 149 2 58 1 261 1 262 2 264 2 15 1 305 1 266 1 156 1 158 1 166 4 354 1 355 1 114 2 221 2 119 1 27 1 176 1 227 2 78 2 282 1 83 1 33 4 324 1 129 1 184 2 331 1 237 2 187 2 
336 4 3 1 244 1 221 2 119 1 27 1 197 1 293 2 121 1 176 1 278 1 227 2 200 1 78 2 101 4 301 1 102 1 206 1 149 2 282 1 58 1 127 1 33 4 83 1 324 1 261 1 262 2 264 2 15 1 129 1 305 1 266 1 156 1 158 1 331 1 237 1 187 2 166 4 354 1 114 2 355 1 
336 4 3 1 244 1 221 2 119 1 27 1 197 1 293 2 121 1 176 1 278 1 227 2 200 1 78 2 101 4 301 1 102 1 206 1 149 2 282 1 58 1 127 1 33 4 83 1 324 1 261 1 262 2 264 2 15 1 129 1 305 1 266 1 156 1 158 1 331 1 237 1 187 2 166 4 354 1 114 2 355 1 
336 4 3 1 244 1 119 1 27 1 197 1 293 2 121 1 98 1 176 1 252 2 200 1 145 1 101 4 301 1 102 1 206 1 149 2 282 1 58 1 33 4 31 1 83 1 261 1 262 2 264 2 15 1 129 1 305 1 184 2 266 1 156 1 158 1 331 1 236 2 237 1 187 2 166 4 354 1 114 2 355 1 
336 4 92 1 3 1 244 1 221 2 119 1 197 1 27 1 293 2 121 1 176 1 278 1 227 2 200 1 78 2 101 5 301 1 102 1 206 1 149 2 282 1 127 1 58 1 83 1 33 5 324 1 261 1 262 2 264 3 15 1 129 1 305 1 266 1 156 1 158 1 331 1 237 1 187 3 166 4 354 1 355 1 114 3 
336 4 92 1 3 1 244 1 221 2 119 1 197 1 27 1 293 2 121 1 176 1 278 1 227 2 200 1 78 2 101 5 301 1 102 1 206 1 149 2 282 1 127 1 58 1 83 1 33 5 324 1 261 1 262 2 264 3 15 1 129 1 305 1 266 1 156 1 158 1 331 1 237 1 187 3 166 4 354 1 355 1 114 3 
336 4 3 1 244 1 197 1 293 2 252 2 200 1 101 4 102 1 301 1 206 1 205 1 149 2 58 1 261 1 262 2 264 2 15 1 305 1 266 1 156 1 158 1 166 4 354 1 355 1 114 2 119 1 27 1 176 1 282 1 31 1 83 1 33 4 129 1 184 2 331 1 236 2 237 1 187 2 
193 1 273 6 289 2 136 1 25 1 360 1 28 1 297 2 123 1 228 2 280 1 258 1 231 2 321 1 182 1 183 1 39 3 374 1 375 1 285 1 333 1 376 1 40 1 70 1 313 1 314 3 
273 14 316 2 193 4 24 1 289 4 220 1 136 2 170 1 25 2 360 2 137 1 75 1 297 1 123 2 228 2 125 1 202 2 231 1 321 2 57 1 259 1 232 1 182 2 39 6 131 1 185 3 210 1 374 11 375 1 285 11 40 1 312 3 314 8 
218 1 193 1 273 2 289 2 46 1 136 1 360 1 247 1 97 1 341 1 174 1 224 1 365 1 297 1 123 1 200 2 125 1 321 1 259 1 83 1 61 1 232 1 182 1 84 1 104 1 15 2 154 1 38 1 39 1 87 1 133 1 375 1 238 1 352 1 311 1 112 1 271 1 314 1 
193 7 289 6 46 2 194 1 136 3 247 3 139 1 97 3 341 2 297 2 143 2 200 3 202 2 258 1 57 2 259 1 61 3 152 2 104 1 15 3 154 2 159 2 352 2 313 1 70 1 271 1 167 2 314 10 273 20 316 2 274 2 25 3 360 3 28 1 174 1 224 1 365 2 123 3 228 8 125 1 231 4 321 3 83 1 232 1 182 3 84 1 39 10 234 1 87 2 131 4 374 7 375 3 133 2 285 7 238 2 333 1 376 1 40 3 379 1 
315 1 273 2 289 4 95 1 136 2 360 2 247 8 9 2 97 7 174 1 341 3 224 1 365 2 123 2 200 1 254 1 179 1 280 1 125 1 321 2 83 1 61 8 232 1 303 1 182 2 85 1 84 1 15 1 39 1 16 1 307 1 133 2 375 2 161 1 352 2 111 1 379 1 271 2 314 1 
193 1 316 1 273 3 289 2 136 1 25 1 360 1 174 1 123 1 228 1 200 1 202 1 231 1 204 1 321 1 57 1 259 1 83 1 182 1 84 1 15 1 39 2 374 1 235 1 375 1 285 1 40 1 216 1 314 1 
193 1 273 2 289 2 136 1 182 1 25 1 360 1 131 1 374 1 375 1 285 1 123 1 228 1 280 1 202 1 126 1 321 1 314 2 
193 1 273 2 289 2 243 1 136 1 182 1 360 1 39 2 374 1 375 1 285 1 123 1 228 1 280 1 40 1 231 1 321 1 57 1 
193 2 273 4 316 1 289 2 136 1 182 1 25 1 360 1 39 2 131 1 374 2 375 1 285 2 123 1 228 2 280 1 40 1 202 1 231 1 57 1 321 1 314 2 
193 1 273 2 289 2 136 1 182 1 25 1 360 1 131 1 374 1 375 1 285 1 161 1 123 1 228 1 202 1 126 1 321 1 314 2 
193 1 273 2 289 2 243 1 136 1 182 1 360 1 39 2 374 1 375 1 285 1 161 1 123 1 228 1 40 1 231 1 321 1 57 1 
193 2 273 4 316 1 289 2 136 1 182 1 25 1 360 1 39 2 131 1 374 2 375 1 285 2 161 1 123 1 228 2 40 1 202 1 231 1 57 1 321 1 314 2 
193 2 316 1 273 4 289 2 136 1 182 1 25 1 360 1 39 2 131 1 374 2 375 1 285 2 123 1 228 2 40 1 202 1 231 1 57 1 321 1 314 2 
273 2 274 1 289 2 46 1 136 1 360 1 247 1 97 1 341 1 365 1 297 1 123 1 200 1 125 1 321 1 61 1 232 1 182 1 15 1 154 1 39 1 87 1 133 1 375 1 238 1 352 1 314 1 271 1 
273 2 289 2 46 1 136 1 360 1 277 1 247 1 97 1 341 1 365 1 297 1 123 1 200 1 125 1 321 1 61 1 232 1 182 1 15 1 39 1 133 1 375 1 238 1 352 1 110 1 190 1 314 1 271 1 
259 1 193 2 273 4 316 1 289 2 136 1 182 1 25 1 360 1 39 2 131 1 374 2 375 1 285 2 123 1 228 2 40 1 202 1 231 1 57 1 321 1 314 2 
193 2 273 4 316 1 274 1 289 2 46 1 136 1 25 1 360 1 247 1 97 1 341 1 365 1 123 1 228 2 200 1 179 1 202 1 231 1 57 1 321 1 61 1 182 1 15 1 39 2 154 1 131 1 87 1 374 2 133 1 375 1 285 2 238 1 352 1 40 1 314 2 167 1 
316 1 273 3 193 1 289 2 136 1 25 1 360 1 174 1 123 1 228 1 200 1 202 1 57 1 321 1 259 1 83 1 182 1 84 1 15 1 39 1 131 1 235 1 374 1 375 1 285 1 69 1 40 1 216 1 314 2 
335 1 219 2 273 19 316 3 289 4 275 2 220 1 136 2 25 3 360 2 123 2 228 6 202 3 257 1 231 3 57 3 182 2 233 1 283 1 39 10 131 3 265 1 185 1 210 1 66 1 186 1 267 1 40 3 312 2 314 9 
335 1 219 4 273 26 316 3 289 6 275 1 220 2 136 3 25 3 360 3 245 1 299 2 123 3 228 4 202 3 257 1 231 2 57 2 148 1 260 1 182 3 37 1 233 1 283 1 39 12 131 2 265 2 185 2 66 2 89 1 40 2 241 1 312 2 314 14 
335 1 219 4 273 41 316 4 289 6 275 1 220 3 136 3 48 1 25 5 360 3 245 1 28 1 299 1 123 3 228 8 202 4 258 1 257 1 231 4 57 4 148 1 260 1 182 3 37 1 233 1 283 1 39 21 131 4 265 2 185 3 210 1 66 1 267 1 333 1 89 1 376 1 40 5 241 1 312 4 313 1 70 1 314 20 
335 1 219 4 273 38 316 4 289 8 275 1 220 3 136 4 48 1 25 5 360 4 245 1 28 1 299 2 123 4 228 7 202 4 258 1 257 1 231 4 57 3 148 1 260 1 182 4 37 1 233 1 283 1 39 18 131 3 265 2 185 3 210 1 66 1 267 1 333 1 89 1 376 1 40 4 241 1 312 4 313 1 70 1 314 20 
335 1 219 4 273 52 316 7 289 4 275 1 220 2 136 2 170 2 25 8 360 2 245 1 28 1 299 1 123 2 228 14 202 7 258 1 257 1 231 7 57 7 148 1 260 1 182 2 37 1 233 1 283 1 39 25 131 7 265 1 185 4 210 2 66 1 333 1 89 1 376 1 40 8 241 1 312 4 313 1 70 1 314 27 
67 1 4 1 250 1 53 1 359 1 201 1 21 1 90 1 361 1 173 1 
116 1 198 1 
322 1 67 1 223 1 4 1 53 1 328 1 201 1 21 1 173 1 
64 1 8 1 
107 1 369 1 14 1 
336 1 44 1 4 1 73 1 359 1 50 2 361 1 173 1 132 1 67 1 332 1 237 1 53 1 201 1 377 1 21 1 166 1 90 1 
336 1 44 1 4 1 73 1 359 1 50 2 361 1 173 1 132 1 67 1 332 1 237 1 53 1 201 1 377 1 21 1 166 1 90 1 
336 1 44 1 4 1 73 1 359 1 50 2 361 1 173 1 132 1 67 1 332 1 237 1 53 1 201 1 377 1 21 1 166 1 90 1 
369 1 64 1 8 1 
369 1 64 1 8 1 
107 1 14 1 
107 1 369 1 14 1 
255 1 230 1 
336 1 4 1 116 1 171 1 358 1 50 1 173 1 174 2 297 1 53 1 198 1 200 2 201 1 226 1 255 1 230 1 83 2 368 1 371 1 372 1 84 2 15 2 332 1 67 1 377 1 21 1 166 1 
273 2 289 2 136 1 360 1 196 1 247 2 9 2 97 2 341 1 365 1 123 1 200 2 254 1 125 1 321 1 259 1 82 1 83 2 61 2 232 1 303 1 182 1 329 1 15 2 39 1 284 1 133 1 375 1 352 1 134 1 314 1 
61 2 345 1 347 1 195 1 247 2 10 1 97 2 133 1 268 1 160 2 99 1 286 1 88 1 352 1 353 1 179 1 164 1 379 1 135 1 
61 1 345 1 347 1 195 1 247 1 362 1 10 1 97 1 268 1 133 1 160 2 99 1 286 1 88 1 352 1 379 1 135 1 
315 1 13 1 61 1 318 1 247 1 97 1 133 1 268 1 341 1 365 1 352 1 353 1 111 1 271 1 
61 1 345 1 347 1 195 1 247 1 10 1 97 1 133 1 268 1 160 2 99 1 286 1 88 1 352 1 353 1 164 1 379 1 135 1 
253 1 
3 1 237 1 183 1 354 1 106 1 206 1 96 1 
336 1 3 1 221 1 197 1 227 1 78 1 206 1 149 1 33 1 324 1 261 1 305 1 184 1 266 1 237 2 166 1 354 1 
336 5 93 2 5 1 3 2 46 3 6 1 197 4 96 1 247 3 138 1 97 3 341 10 100 2 143 2 199 6 55 2 202 2 206 9 57 2 149 3 61 3 261 4 263 2 346 2 151 1 305 4 106 1 266 4 211 2 349 1 17 2 68 2 352 3 166 5 270 2 354 8 271 1 272 1 71 6 316 2 25 2 26 3 221 6 27 2 77 1 365 3 179 1 33 5 184 12 133 4 237 8 188 2 40 2 240 2 
336 1 71 5 316 2 3 2 220 1 25 2 221 3 245 1 197 2 77 1 175 1 199 5 202 2 206 8 57 2 149 1 32 1 33 1 260 1 261 2 37 1 305 2 184 6 266 2 185 1 17 1 237 5 89 1 188 2 40 2 270 1 241 1 166 1 312 1 354 5 
336 1 25 2 197 1 120 1 28 1 174 1 200 1 180 1 102 1 258 1 206 2 79 1 127 1 83 1 261 1 84 1 15 1 305 1 266 1 235 1 188 2 287 1 40 1 270 1 165 1 166 1 354 2 313 1 
3 1 261 1 305 1 106 1 266 1 197 1 96 1 237 1 354 1 206 1 
316 2 71 5 25 2 221 5 184 10 237 5 143 1 188 2 199 5 202 2 40 2 270 1 354 5 57 2 206 5 
336 1 149 1 33 1 3 1 237 1 166 1 
336 3 315 1 5 1 7 1 197 2 247 4 248 1 138 2 97 4 341 1 365 1 77 2 54 1 206 2 149 2 33 4 61 4 261 2 304 1 305 2 266 1 351 1 17 2 133 1 352 1 111 1 166 3 354 2 271 2 
273 1 289 2 274 1 46 1 136 1 360 1 118 1 247 1 97 1 174 2 341 1 365 1 297 1 123 1 200 3 321 1 83 2 61 1 232 1 182 1 84 2 15 3 39 1 154 1 87 1 235 2 133 1 375 1 238 1 352 1 287 1 271 1 
71 2 3 2 261 1 221 2 305 1 184 4 266 1 197 1 17 1 237 4 77 1 199 2 376 1 354 2 206 1 
67 1 319 1 201 1 
67 1 319 1 201 1 
67 1 201 1 255 1 209 1 90 1 
67 1 319 1 201 1 
67 1 201 1 203 1 
67 1 201 1 203 1 
67 1 201 1 203 1 
67 1 201 1 
4 1 173 1 
273 8 289 4 136 2 182 2 25 1 360 2 39 4 131 1 28 1 123 2 299 1 333 1 376 1 228 3 40 1 258 1 231 2 70 1 313 1 314 4 
273 6 25 1 39 3 183 1 28 1 333 1 376 1 228 2 40 1 258 1 70 1 313 1 231 2 314 3 
316 1 273 4 289 2 136 1 182 1 25 1 360 1 39 2 131 1 306 1 123 1 228 2 40 1 202 1 231 1 57 1 314 2 
273 7 316 1 220 1 25 1 39 4 131 1 185 1 210 1 228 2 40 1 202 1 312 2 231 1 57 1 314 3 
316 2 273 23 289 4 136 2 25 3 170 1 360 2 137 1 28 2 142 1 299 2 123 2 228 9 202 2 258 1 231 5 57 2 182 2 39 12 131 4 210 1 185 2 333 1 376 1 40 3 312 2 313 2 70 1 314 11 
273 1 39 1 312 1 
273 1 185 1 314 1 
273 6 316 1 289 2 182 1 136 1 25 1 360 1 39 3 131 1 306 1 123 1 143 1 228 3 202 1 40 1 231 2 314 3 57 1 
273 12 316 2 289 2 220 1 136 1 25 2 360 1 245 1 123 1 228 2 202 2 257 1 231 1 57 2 260 1 182 1 37 1 39 6 131 1 185 1 89 1 40 2 312 1 241 1 314 6 
273 6 25 1 39 3 131 1 28 1 228 2 40 1 258 1 313 1 231 1 314 3 
273 3 289 2 136 1 182 1 360 1 39 2 131 1 28 1 142 1 333 1 299 1 123 1 228 2 231 1 313 1 70 1 314 1 
273 10 289 2 182 1 136 1 25 2 360 1 39 5 131 2 28 2 123 1 228 5 40 2 257 1 165 1 258 1 313 2 231 3 314 5 
273 2 289 2 136 1 182 1 25 1 360 1 131 1 123 1 228 1 202 1 257 1 314 2 
316 1 273 4 289 2 136 1 182 1 25 1 360 1 39 2 131 1 123 1 228 2 40 1 202 1 257 1 231 1 57 1 314 2 
273 3 289 6 136 3 182 3 360 3 39 2 131 1 267 1 28 1 142 1 299 1 123 3 228 2 257 1 313 1 231 1 314 1 
357 1 273 34 316 3 289 10 220 1 276 1 136 5 47 1 25 5 360 5 28 3 142 1 299 2 123 5 228 12 202 3 258 2 257 1 231 7 57 3 182 5 39 18 131 5 185 3 210 1 306 1 267 1 333 1 376 1 40 5 312 4 313 3 70 1 314 16 
273 8 289 2 220 1 136 1 25 1 360 1 28 1 123 1 228 2 257 1 258 1 231 2 182 1 37 1 39 4 185 1 333 1 376 1 40 1 312 1 70 1 313 1 314 4 
273 11 316 1 289 4 220 1 136 2 25 2 360 2 28 1 123 2 228 3 202 1 258 1 257 1 231 2 182 2 37 1 39 5 131 1 185 1 210 1 306 1 333 1 376 1 40 1 312 2 313 1 70 1 314 6 
273 19 316 2 289 6 220 1 136 3 25 3 360 3 245 1 28 1 123 3 299 1 228 4 202 2 258 1 257 1 231 3 57 2 260 1 182 3 37 1 39 10 131 1 185 1 306 1 333 1 89 1 376 1 40 3 312 1 241 1 313 1 70 1 314 9 
273 17 316 2 289 6 220 1 136 3 25 3 360 3 245 1 28 1 299 1 123 3 228 5 202 2 258 1 257 1 231 3 57 1 260 1 182 3 37 1 39 7 131 2 185 1 306 1 333 1 89 1 376 1 40 2 312 1 241 1 313 1 70 1 314 10 
273 8 289 2 220 1 136 1 25 1 360 1 28 1 123 1 228 2 257 1 258 1 231 2 182 1 37 1 39 4 185 1 333 1 376 1 40 1 312 1 70 1 313 1 314 4 
273 12 316 2 289 2 220 1 136 1 25 2 360 1 245 1 123 1 228 2 202 2 257 1 231 1 57 2 260 1 182 1 37 1 39 6 131 1 185 1 89 1 40 2 312 1 241 1 314 6 
273 18 316 2 289 8 220 1 136 4 25 3 360 4 245 1 28 1 123 4 299 2 228 5 202 2 258 1 257 1 231 3 57 1 260 1 182 4 37 1 39 8 131 2 185 1 306 1 333 1 89 1 376 1 40 2 241 1 312 1 313 1 70 1 314 10 
273 16 316 3 289 8 220 1 136 4 25 3 360 4 245 1 123 4 299 2 228 6 202 3 257 1 231 3 57 2 260 1 182 4 37 1 39 7 131 3 185 1 267 1 89 1 40 2 241 1 312 1 314 9 
273 7 25 1 39 4 131 3 28 3 333 2 228 6 40 1 258 1 70 1 313 3 231 3 314 3 
273 18 316 2 289 8 220 1 136 4 25 3 360 4 245 1 28 1 123 4 299 2 228 4 202 2 258 1 257 1 231 3 57 1 260 1 182 4 37 1 39 8 131 1 185 1 267 1 333 1 89 1 376 1 40 2 241 1 312 1 313 1 70 1 314 10 
158 1 83 1 297 1 200 1 15 1 300 1 128 1 
83 1 86 1 128 1 15 1 158 1 364 1 297 1 200 1 279 1 300 1 42 1 191 1 
315 1 97 1 133 1 341 1 61 1 365 1 352 1 111 1 183 1 247 1 271 1 
83 1 61 1 46 1 84 1 15 2 154 1 247 1 97 1 133 1 341 1 174 1 224 1 365 1 238 1 297 1 352 1 200 2 271 1 
83 2 61 1 263 1 46 2 244 1 84 1 15 2 154 1 156 1 247 1 138 1 97 1 68 1 133 1 341 3 174 2 224 1 365 2 238 1 297 1 352 1 200 2 102 1 
83 2 61 2 263 1 46 2 244 1 84 1 15 2 130 1 156 1 247 2 138 1 97 2 68 1 133 1 341 3 174 2 224 1 365 2 238 1 297 1 352 1 200 2 190 1 102 1 
336 2 33 1 3 1 61 3 46 1 263 1 26 1 130 1 27 1 74 1 247 3 138 1 97 3 68 1 133 1 341 4 237 1 365 1 352 1 166 2 240 1 113 1 271 1 
336 2 33 1 3 1 61 3 46 1 263 1 26 1 130 1 27 1 211 1 247 3 138 1 97 3 68 1 133 1 341 4 237 1 365 1 352 1 166 2 240 1 271 1 
97 1 133 1 61 1 352 1 85 1 247 1 
356 1 61 1 46 1 6 1 247 1 97 1 133 2 341 1 365 1 310 1 177 1 352 1 271 1 
193 1 289 4 46 1 136 2 247 1 97 1 341 1 297 2 200 2 258 1 259 1 61 1 15 2 154 1 159 1 352 1 70 1 313 1 167 1 314 3 273 6 274 1 25 1 360 2 28 1 174 1 224 1 365 1 123 2 228 2 179 1 231 2 321 2 82 1 83 1 182 2 84 1 39 3 87 1 374 1 375 2 133 1 285 1 238 1 333 1 376 1 40 1 
336 3 93 1 3 1 5 1 358 1 26 1 197 2 27 1 96 1 247 1 97 1 341 2 100 1 55 1 206 1 149 1 33 2 61 1 261 2 305 2 106 1 266 2 211 1 237 1 166 3 240 1 354 1 271 1 
272 1 97 2 133 2 341 2 61 2 365 1 46 1 352 1 6 1 85 1 179 1 240 1 247 2 
315 1 61 4 130 1 247 4 97 4 133 1 341 1 365 1 352 1 179 1 111 1 56 1 271 1 
356 1 61 1 169 1 46 1 234 1 247 1 97 1 133 2 122 1 341 1 365 1 310 1 352 1 
10 1 97 1 133 1 160 1 61 1 99 1 88 1 352 1 247 1 271 1 
61 2 329 1 247 2 97 2 133 1 341 1 365 1 352 1 179 1 254 1 379 1 
315 1 61 5 95 1 247 5 138 1 97 4 16 1 133 2 341 3 365 2 352 2 179 1 254 1 111 1 56 1 271 1 
315 1 61 5 95 1 247 5 138 1 97 4 249 1 133 2 341 3 365 2 352 2 179 1 254 1 111 1 56 1 271 1 
83 1 61 1 46 1 84 1 15 2 247 1 97 1 133 1 341 1 174 1 224 1 365 1 238 1 297 1 352 1 200 2 190 1 271 1 
356 1 61 1 46 1 6 1 247 1 138 1 97 1 133 2 341 1 365 1 310 1 177 1 352 1 
52 1 297 1 296 1 269 1 80 1 
336 2 282 1 242 1 3 1 244 1 358 1 27 1 156 1 237 1 52 2 309 1 297 1 296 2 144 1 124 1 269 1 102 1 166 2 80 2 
83 1 15 1 196 1 284 1 52 1 200 1 134 1 269 1 80 1 
124 1 144 1 269 1 
23 1 45 1 2 1 183 1 
23 1 45 1 2 1 327 1 20 1 215 1 153 1 
308 1 239 1 20 1 
23 1 45 1 157 1 2 1 103 1 115 1 327 1 214 1 18 2 20 3 215 3 153 1 
23 1 45 1 2 1 1 1 62 1 327 1 20 2 215 2 153 1 
23 1 115 1 327 1 339 1 153 1 160 1 295 1 99 1 286 1 20 1 215 1 
23 1 45 1 115 1 327 1 20 1 215 1 153 1 
45 2 2 1 115 1 327 1 20 1 215 1 153 1 
23 1 45 1 367 1 115 1 327 2 208 1 153 2 20 2 215 2 43 1 
23 2 45 1 2 1 59 1 115 1 326 1 72 1 62 2 327 1 339 1 153 1 20 3 215 3 
23 1 45 1 2 1 115 1 337 1 62 1 327 1 153 1 160 2 99 1 88 1 286 1 20 2 215 2 135 1 
23 2 45 1 2 1 1 1 115 1 72 1 62 2 327 2 339 1 153 2 225 1 20 4 215 4 
23 1 45 1 2 1 115 1 327 1 20 1 215 1 153 1 
23 3 45 2 2 2 103 1 72 1 62 2 327 1 339 1 153 1 157 1 18 1 20 4 215 4 29 1 
23 1 45 1 2 1 363 1 150 1 115 1 62 1 327 1 20 2 215 2 153 1 222 1 
23 1 45 1 157 2 2 1 103 1 115 1 327 1 18 2 20 3 215 3 153 1 246 1 
23 2 294 1 117 2 172 1 
60 1 115 1 327 1 20 1 215 1 153 1 
23 1 45 1 2 1 59 1 115 1 62 1 327 1 20 2 215 2 153 1 
105 1 
23 1 45 1 2 1 115 1 327 1 20 1 215 1 153 1 
23 1 45 1 59 1 2 1 115 1 62 1 327 1 18 1 20 3 215 3 153 1 
23 1 72 1 339 1 29 1 
23 1 45 1 

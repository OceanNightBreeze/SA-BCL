#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 340 271 144 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 340 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 1 112 1 168 9 169 1 116 1 19 4 246 1 363 2 332 2 304 1 174 1 335 5 73 2 74 6 269 2 309 1 81 2 370 1 311 3 293 2 62 1 63 1 32 2 137 1 160 1 348 1 279 1 211 9 
40 1 112 1 168 9 169 1 116 1 19 4 246 1 363 2 332 2 304 1 174 1 335 5 73 2 74 6 269 2 309 1 81 2 370 1 311 3 293 2 62 1 63 1 32 2 137 1 160 1 348 1 279 1 211 9 
40 1 112 1 168 10 169 1 116 1 19 5 246 1 363 2 332 2 304 1 174 1 335 6 73 2 74 7 269 2 309 1 81 2 370 1 311 4 293 2 62 1 63 1 32 2 137 1 160 1 348 1 279 1 211 10 
40 1 112 1 168 7 169 1 116 1 19 3 246 1 363 2 332 2 304 1 174 1 335 4 73 2 74 4 269 1 81 2 370 1 311 2 293 2 62 1 63 1 32 2 137 1 160 1 348 1 279 1 211 7 
74 3 269 2 40 1 309 1 81 1 311 1 293 1 168 4 169 1 63 1 19 2 32 1 332 1 137 1 348 1 335 3 73 1 211 4 
81 1 58 1 293 1 168 2 68 1 116 1 63 1 117 1 246 1 32 1 363 1 137 1 348 1 335 1 211 2 73 1 
74 1 81 2 311 1 293 2 168 3 63 1 19 1 363 1 304 1 137 1 348 1 335 2 211 3 
74 7 40 1 269 2 309 1 112 1 81 2 311 3 293 2 169 1 168 9 63 1 19 4 86 1 32 1 363 1 332 1 174 1 304 1 137 1 345 1 348 1 335 5 73 1 211 9 
74 7 40 1 269 2 309 1 112 1 81 2 311 3 293 2 169 1 168 9 63 1 19 4 86 1 32 1 363 1 332 1 174 1 304 1 137 1 345 1 348 1 335 5 73 1 211 9 
286 1 231 1 161 1 
286 1 47 2 214 1 
28 2 125 2 21 2 208 1 46 2 266 1 12 2 281 2 
196 1 41 1 2 1 94 1 303 1 21 2 148 1 331 1 46 2 222 1 266 1 72 1 178 1 179 1 52 2 28 3 125 3 77 1 180 2 79 1 232 1 310 1 207 1 315 1 12 2 14 2 132 1 188 1 343 1 87 2 208 1 158 1 297 1 106 1 138 1 139 2 281 2 
28 1 125 1 21 1 208 1 46 1 129 1 223 1 185 1 12 1 281 1 
125 1 28 1 213 1 57 1 129 1 166 1 12 1 295 1 286 1 333 1 320 1 237 1 26 1 161 1 
125 1 28 1 213 1 57 1 129 1 12 1 295 2 21 1 286 1 46 1 333 1 237 2 26 1 161 1 281 1 
275 1 175 1 130 1 237 1 295 1 
199 1 275 1 286 1 175 1 339 1 237 2 161 1 295 2 
275 1 237 1 295 1 
125 1 28 1 129 1 185 1 12 1 295 1 21 1 208 1 175 1 46 1 237 1 223 1 225 1 281 1 
286 1 
199 1 275 1 286 1 175 1 237 2 25 1 161 1 295 2 
99 2 255 1 141 1 42 1 1 1 205 2 170 2 206 1 295 5 20 1 199 1 275 2 201 1 134 1 286 1 175 2 71 1 237 5 161 1 
231 1 266 1 
125 2 28 2 312 1 12 2 21 1 46 1 266 2 288 1 281 1 
324 1 184 1 65 1 
28 1 125 1 180 1 232 1 310 1 303 1 188 1 132 1 87 1 158 1 297 1 222 1 266 1 287 1 178 1 139 1 
28 3 125 3 21 3 46 3 266 1 36 1 12 3 281 1 
28 1 125 1 21 1 46 1 129 1 223 1 12 1 
28 1 125 1 21 1 46 1 129 1 312 1 288 1 12 1 281 1 
213 1 196 1 2 1 94 1 303 1 21 3 45 1 148 1 331 1 222 1 46 3 333 1 266 1 72 1 288 1 26 1 178 1 179 1 52 2 28 4 125 4 77 1 180 1 232 1 57 1 155 1 129 1 310 1 12 3 295 1 14 1 132 1 188 1 343 1 87 1 158 1 208 1 297 1 106 1 237 1 36 1 139 1 351 1 281 2 
28 2 125 2 21 1 46 1 320 1 266 1 36 1 375 1 12 2 
125 3 28 3 213 1 57 1 129 1 3 1 12 3 295 1 45 1 21 3 286 1 46 3 333 1 237 1 36 2 288 1 26 1 281 1 351 1 
28 2 125 2 21 2 46 2 36 1 288 1 184 1 65 1 12 2 281 1 
28 1 125 1 180 1 232 1 310 1 303 1 188 1 132 1 87 1 158 1 297 1 222 1 266 1 178 1 139 1 
28 1 125 1 180 1 55 1 232 1 310 1 157 1 303 1 188 1 132 1 87 1 222 1 266 1 178 1 139 1 
353 1 196 2 115 1 2 1 324 2 94 1 121 1 48 1 224 1 72 1 52 2 367 1 77 1 29 1 290 1 371 1 184 2 207 2 14 4 343 1 106 1 34 1 346 1 65 2 
28 1 125 1 21 1 333 1 46 1 129 1 12 1 31 1 
125 2 28 2 180 1 232 1 310 1 184 1 303 1 12 1 132 1 188 1 45 1 21 1 87 1 158 1 222 1 46 1 297 1 36 1 178 1 139 1 
125 5 28 5 375 1 12 5 21 4 45 1 189 1 46 4 320 1 36 2 266 1 288 1 366 1 281 1 
28 2 125 2 21 2 46 2 129 1 223 1 31 1 12 2 
5 1 23 1 
5 1 23 1 
153 1 107 1 
153 1 107 1 
153 1 107 1 
69 1 5 1 23 1 
69 1 5 1 23 1 
5 1 23 1 9 1 
153 1 33 1 5 2 23 2 176 1 107 1 
69 1 5 1 23 1 
296 1 5 1 23 1 
296 1 5 1 23 1 
296 1 5 1 23 1 
0 1 212 1 75 1 257 2 291 1 61 2 295 2 85 1 327 3 5 2 286 1 23 2 176 1 238 2 237 2 98 1 334 2 299 2 379 1 
257 1 256 1 140 1 323 1 21 2 327 1 329 1 5 1 46 2 23 1 266 1 75 1 125 2 28 2 27 1 61 1 9 1 314 1 12 2 295 1 135 1 238 1 237 1 299 1 
32 1 332 1 73 1 
32 1 68 1 73 1 
328 1 332 2 264 1 68 1 17 1 73 3 
218 1 328 1 332 1 68 1 17 1 73 2 
328 2 332 1 68 1 17 1 73 2 
353 1 42 2 282 2 1 3 283 1 323 1 214 1 170 1 199 1 118 1 329 1 70 1 121 1 201 1 47 3 175 4 286 2 6 2 99 1 29 1 290 1 8 2 274 1 314 1 205 1 295 5 275 1 235 1 237 5 254 1 350 1 161 1 
353 3 141 1 42 6 282 6 1 8 323 4 214 3 170 2 245 5 118 1 199 1 70 2 96 1 121 3 201 1 47 9 175 7 286 5 6 6 177 1 99 2 29 3 290 3 338 1 130 5 10 1 274 2 83 1 205 2 295 9 275 6 235 3 237 9 349 1 161 1 
353 1 141 1 42 2 1 3 282 2 283 1 323 1 214 2 170 1 70 1 121 1 286 3 175 2 47 4 6 2 99 1 29 1 8 1 290 1 274 1 205 1 295 3 235 1 237 3 254 1 161 1 
353 2 141 1 42 4 282 4 1 5 283 1 323 2 214 3 170 1 70 1 121 2 286 4 47 7 175 3 6 4 99 1 29 2 8 2 290 2 338 1 10 1 274 1 83 1 205 1 295 4 235 2 237 4 254 1 161 1 
231 1 215 1 
303 1 171 1 
360 1 
132 1 303 1 
132 1 101 1 182 1 178 1 215 2 303 3 
132 1 178 1 303 1 
250 1 303 1 
353 1 164 1 163 1 354 1 290 1 196 3 114 1 369 1 272 1 262 1 207 4 217 1 146 1 14 7 34 3 48 2 267 2 
353 1 164 1 163 1 354 1 290 1 196 3 114 1 369 1 272 1 262 1 207 4 217 1 146 1 14 7 34 3 48 2 267 2 
353 1 164 1 163 1 354 1 290 1 196 3 114 1 369 1 272 1 262 1 374 1 207 4 217 1 146 1 14 7 34 3 48 2 267 2 
16 1 163 2 354 2 164 5 353 4 196 15 357 1 114 2 2 1 167 1 262 1 94 1 217 1 146 1 285 4 121 3 265 1 48 5 72 1 226 3 267 3 52 2 29 3 290 4 369 1 372 1 272 2 207 16 14 31 343 1 104 1 235 3 34 10 241 1 
16 1 353 1 354 1 164 1 163 1 259 1 196 4 114 1 2 2 262 1 94 2 146 1 48 3 72 2 267 2 52 4 290 1 369 1 272 1 207 5 317 1 14 9 343 2 34 4 
162 1 168 2 68 1 95 1 363 1 332 1 264 1 222 1 122 1 335 1 149 1 73 2 74 1 180 1 232 1 30 1 81 1 59 1 293 1 63 1 342 1 32 1 133 1 87 1 137 1 192 1 348 1 139 1 89 1 211 2 
162 1 168 3 68 1 95 1 363 1 332 1 264 1 222 1 335 1 149 1 73 2 74 2 180 1 232 1 30 1 81 1 59 1 293 1 63 1 342 1 32 1 87 1 192 1 348 1 253 1 38 1 280 1 139 1 89 1 211 3 
162 1 168 2 68 1 95 1 363 1 264 1 332 1 222 1 335 1 149 1 73 2 74 2 180 1 232 1 30 1 59 1 63 1 32 1 87 1 348 1 253 1 38 1 139 1 89 1 211 2 
162 2 168 1 303 1 363 2 222 1 149 2 180 1 232 1 30 2 81 1 82 1 310 1 293 1 156 1 292 1 186 1 132 1 87 1 159 1 280 1 139 1 239 1 211 1 
162 1 168 1 68 1 95 1 363 1 332 1 264 1 222 1 122 1 149 1 73 2 180 1 232 1 30 1 81 1 59 1 293 1 342 1 32 1 87 1 137 1 192 1 253 1 139 1 89 1 211 1 
216 1 
193 2 322 2 42 2 92 1 1 2 199 3 249 1 201 1 286 2 47 2 333 1 99 1 57 1 60 1 340 1 292 1 204 1 341 2 294 4 205 1 12 1 295 5 252 2 161 1 213 1 355 1 166 1 214 2 170 1 303 1 362 2 70 1 222 1 306 1 365 2 26 1 227 1 125 1 28 1 229 1 180 2 232 1 233 1 310 2 129 1 132 1 275 6 276 1 87 2 136 1 320 1 237 5 376 2 239 1 139 2 
213 1 355 1 322 1 92 1 166 1 199 1 333 1 25 1 306 1 26 1 28 1 125 1 233 1 57 1 129 1 60 1 294 2 12 1 295 3 275 2 320 1 237 3 
213 1 355 1 92 1 166 1 199 1 333 1 286 1 25 1 306 1 26 1 28 1 125 1 233 1 57 1 129 1 60 1 294 3 12 1 295 3 275 1 320 1 237 3 376 1 161 1 
193 1 213 1 355 1 322 1 92 1 166 1 199 1 333 1 286 1 25 1 306 1 26 1 28 1 125 1 233 1 57 1 129 1 60 1 294 3 12 1 295 3 275 2 320 1 237 3 376 1 161 1 
193 4 213 1 355 1 322 4 42 1 92 1 1 1 166 1 214 2 170 1 43 1 362 2 199 3 201 1 286 5 333 1 123 1 25 1 306 1 365 2 26 1 99 1 125 1 28 1 368 1 233 1 57 1 129 1 60 1 340 1 271 1 341 2 294 6 205 1 12 1 295 5 275 7 252 2 136 1 320 1 237 5 376 4 300 1 161 5 
193 2 322 2 42 1 92 1 1 1 199 2 201 1 333 1 47 2 286 2 99 1 57 1 60 1 340 1 294 4 341 2 205 1 12 1 295 4 252 2 161 1 213 1 355 1 166 1 170 1 214 2 362 2 306 1 26 1 365 2 28 1 125 1 229 1 233 1 129 1 275 4 136 1 320 1 237 4 376 2 
193 2 213 1 322 2 355 1 42 1 92 1 1 1 166 1 214 2 170 1 43 1 199 2 362 2 201 1 286 1 333 1 306 1 365 2 26 1 99 1 28 1 125 1 233 1 57 1 129 1 60 1 340 1 271 1 341 2 294 4 205 1 12 1 295 4 275 4 252 2 136 1 320 1 237 4 376 2 161 1 300 1 
193 2 213 1 322 2 355 1 42 1 92 1 1 1 166 1 214 2 170 1 43 1 199 2 362 2 201 1 286 1 333 1 306 1 365 2 26 1 99 1 28 1 125 1 233 1 57 1 129 1 60 1 340 1 271 1 341 2 294 4 205 1 12 1 295 4 275 4 252 2 136 1 320 1 237 4 376 2 161 1 300 1 
213 1 355 1 356 1 42 1 92 1 1 1 166 1 144 1 170 1 362 1 201 1 333 1 306 1 26 1 99 1 28 1 125 1 181 1 233 1 57 1 129 1 60 1 340 1 271 1 294 2 205 1 12 1 295 2 252 1 320 1 237 2 
193 3 213 1 355 1 322 3 42 1 92 1 1 1 166 1 214 2 170 1 43 1 199 2 362 2 201 1 286 1 333 1 123 1 306 1 365 2 26 1 99 1 28 1 125 1 233 1 57 1 129 1 60 1 340 1 271 1 341 2 294 5 205 1 12 1 295 4 275 5 252 2 136 1 320 1 237 4 376 3 161 1 300 1 
193 3 213 1 355 1 322 3 42 1 92 1 1 1 166 1 214 2 170 1 43 1 199 2 362 2 201 1 286 1 333 1 123 1 306 1 365 2 26 1 99 1 28 1 125 1 233 1 57 1 129 1 60 1 340 1 271 1 341 2 294 5 205 1 12 1 295 4 275 5 252 2 136 1 320 1 237 4 376 3 161 1 300 1 
213 1 355 1 356 1 42 1 92 1 1 1 166 1 170 1 362 1 201 1 333 1 306 1 26 1 99 1 125 1 28 1 233 1 57 1 129 1 60 1 340 1 294 2 205 1 12 1 295 2 252 1 320 1 237 2 
146 1 343 1 77 1 231 1 369 1 106 1 371 1 72 1 2 1 94 1 52 2 
164 1 353 1 196 6 2 2 324 11 198 1 94 2 219 1 285 3 121 2 265 1 48 1 266 1 72 2 226 3 179 1 150 1 52 4 77 1 29 1 79 1 290 2 184 11 207 8 14 14 343 2 104 1 235 2 191 1 34 2 106 2 65 4 378 1 
196 1 2 1 303 1 94 1 21 1 45 1 248 1 220 1 222 1 46 1 266 1 287 1 72 1 178 1 52 2 179 1 28 2 125 2 180 1 77 1 79 1 232 1 310 1 12 1 207 1 132 1 188 1 14 2 343 1 87 1 158 1 297 1 106 1 298 1 36 1 65 1 139 1 378 1 
242 2 91 2 196 10 93 2 2 3 324 7 94 3 146 1 45 1 148 2 46 1 48 4 52 6 290 3 12 1 207 10 14 20 343 3 158 2 297 2 106 3 253 1 65 7 163 1 353 3 164 4 114 1 66 1 260 2 262 1 303 2 21 1 121 2 222 2 266 2 305 1 72 3 267 1 178 2 179 1 125 3 28 3 180 3 77 3 29 2 79 1 232 2 369 1 310 1 313 1 184 7 188 2 132 2 235 2 87 3 34 8 36 1 139 3 378 1 
111 1 195 1 196 1 2 2 4 1 261 1 303 3 94 2 21 1 46 1 222 2 72 2 52 4 179 1 203 1 28 1 125 1 180 8 77 2 79 1 127 1 232 2 310 2 371 1 292 1 12 1 207 1 315 2 14 2 132 2 343 2 344 1 133 1 87 7 106 2 36 1 253 1 139 8 239 1 
353 1 196 2 324 1 2 1 94 1 21 1 121 1 46 1 48 1 72 1 288 1 52 2 125 1 28 1 77 1 29 1 290 1 184 1 12 1 207 1 14 3 343 1 235 1 190 1 34 1 106 1 65 1 378 1 281 1 
77 1 164 1 290 1 371 1 324 1 2 1 184 1 94 1 207 2 14 2 343 1 121 1 34 1 106 1 72 1 65 1 52 2 367 1 
77 1 29 1 353 1 196 2 371 1 324 1 2 1 184 1 94 1 14 2 343 1 34 1 48 1 106 1 346 1 72 1 65 1 52 2 
164 1 353 1 196 2 2 1 324 2 94 1 121 1 48 1 72 1 52 2 77 1 29 1 290 1 371 1 184 2 207 2 14 4 343 1 235 1 106 1 34 2 65 2 
77 1 164 1 290 1 324 1 2 1 184 1 261 1 94 1 207 2 14 2 343 1 121 1 34 1 106 1 72 1 65 1 52 2 367 1 
77 1 29 1 353 1 196 2 324 1 2 1 184 1 261 1 94 1 14 2 343 1 34 1 48 1 106 1 346 1 72 1 65 1 52 2 
164 1 353 1 196 2 2 1 324 2 261 1 94 1 121 1 48 1 72 1 52 2 77 1 29 1 290 1 184 2 207 2 14 4 343 1 235 1 106 1 34 2 65 2 
164 1 353 1 196 2 2 1 324 2 94 1 121 1 48 1 72 1 52 2 77 1 29 1 290 1 184 2 207 2 14 4 343 1 235 1 106 1 34 2 65 2 
196 1 2 1 303 1 94 1 148 1 222 1 266 1 72 1 178 1 52 2 179 1 125 1 28 1 180 1 77 1 79 1 232 1 310 1 207 1 14 2 132 1 188 1 343 1 87 1 158 1 297 1 106 1 139 1 
196 1 2 1 303 1 94 1 222 1 266 1 24 1 72 1 178 1 52 2 179 1 125 1 28 1 180 1 77 1 55 1 79 1 232 1 310 1 157 1 207 1 14 2 132 1 188 1 343 1 87 1 106 1 139 1 
164 1 353 1 196 2 2 1 324 2 94 1 121 1 48 1 72 1 52 2 77 1 29 1 290 1 184 2 207 2 14 4 343 1 235 1 106 1 34 2 65 2 378 1 
353 1 164 1 91 1 196 2 324 2 2 1 303 1 94 1 121 1 148 1 222 1 48 1 72 1 178 1 52 2 125 1 28 1 180 1 77 1 29 1 290 1 232 1 184 2 207 2 14 4 188 1 132 1 343 1 133 1 235 1 87 1 158 1 297 1 34 2 106 1 65 2 139 1 
353 1 164 1 196 1 2 1 324 1 94 1 21 1 330 1 121 1 46 1 72 1 288 1 52 2 125 1 28 1 77 1 29 1 290 1 184 1 12 1 207 2 14 3 343 1 235 1 34 1 106 1 65 1 378 1 281 1 
109 1 164 3 353 3 259 1 196 10 67 1 2 2 302 2 284 1 325 1 94 2 285 2 121 3 265 1 48 3 50 1 72 2 226 1 52 4 29 3 290 3 80 2 270 1 207 9 14 19 343 2 104 1 235 3 35 1 34 6 
16 2 194 1 109 2 164 2 353 2 196 12 259 1 67 1 2 3 302 4 325 1 94 3 285 2 121 3 48 2 49 1 72 3 226 2 52 6 53 1 29 2 290 3 80 1 270 1 373 1 207 14 14 26 343 3 318 1 104 2 235 3 34 4 35 2 105 1 
16 1 194 1 109 1 163 1 164 4 353 5 259 1 196 21 114 1 67 1 2 3 302 4 325 1 262 1 94 3 146 1 285 4 121 4 265 1 48 4 50 1 49 1 72 3 226 3 267 1 52 6 53 1 230 1 29 4 290 5 80 1 369 1 270 1 373 1 207 20 14 41 318 1 343 3 104 3 235 4 105 1 35 2 34 8 
16 2 194 1 109 1 163 1 164 3 353 4 259 1 196 18 114 1 67 1 2 4 302 4 325 1 262 1 94 4 146 1 285 4 121 4 265 1 48 4 50 1 49 1 72 4 226 3 267 1 52 8 53 1 230 1 29 3 290 5 80 1 369 1 270 1 373 1 207 20 14 38 318 1 343 4 104 3 235 4 105 1 35 2 34 7 
16 1 194 1 109 1 163 1 164 7 353 8 259 1 196 25 114 1 67 1 2 2 302 4 325 1 262 1 94 2 146 1 285 4 121 7 265 2 48 7 49 1 72 2 226 4 267 1 150 2 52 4 53 1 29 7 290 8 80 1 369 1 270 1 373 1 207 27 14 52 318 1 343 2 104 2 235 7 105 1 35 1 34 14 
257 1 5 1 23 1 176 1 238 1 98 1 277 1 61 1 299 1 379 1 
140 1 9 1 
352 1 257 1 5 1 23 1 102 1 238 1 61 1 299 1 51 1 
0 1 212 1 75 1 257 1 291 1 61 1 295 1 327 2 5 1 286 1 23 1 176 1 237 1 238 1 98 1 334 1 299 1 379 1 
0 1 212 1 75 1 257 1 291 1 61 1 295 1 327 2 5 1 286 1 23 1 176 1 237 1 238 1 98 1 334 1 299 1 379 1 
0 1 212 1 75 1 257 1 291 1 61 1 295 1 327 2 5 1 286 1 23 1 176 1 237 1 238 1 98 1 334 1 299 1 379 1 
69 1 33 1 187 1 
69 1 33 1 187 1 
296 1 172 1 
296 1 172 1 33 1 
27 1 256 1 
257 1 256 1 140 1 110 1 323 1 21 2 327 1 329 1 5 1 175 1 23 1 46 2 266 1 334 1 28 2 125 2 27 1 291 1 61 1 9 1 314 1 12 2 295 1 135 1 237 1 238 1 299 1 
69 1 187 1 
296 1 172 1 33 1 
195 1 196 1 2 1 303 1 94 1 145 1 120 1 222 1 72 1 336 1 52 2 179 1 76 1 28 2 125 2 289 1 180 2 77 1 79 1 127 1 232 1 12 2 207 1 315 2 132 1 14 2 343 1 87 2 106 1 139 2 378 1 
162 1 180 2 232 1 59 1 197 1 68 1 44 1 342 1 316 1 32 1 133 1 87 2 332 1 264 1 222 1 253 1 139 2 89 1 73 2 
162 1 180 1 108 1 232 1 59 1 197 1 68 1 342 1 32 1 87 1 332 1 264 1 222 1 253 1 139 1 89 1 73 2 
162 1 180 1 232 1 310 1 156 1 292 1 303 1 132 1 316 1 87 1 222 1 236 1 139 1 239 1 
162 1 180 1 232 1 59 1 197 1 68 1 44 1 342 1 316 1 32 1 87 1 332 1 264 1 222 1 253 1 139 1 89 1 73 2 
131 1 
20 1 231 1 206 1 
42 1 1 1 214 1 170 1 199 1 201 1 47 1 286 2 365 1 99 1 341 1 205 1 295 1 275 1 136 1 237 1 161 1 
243 2 42 8 1 9 282 6 143 2 199 3 247 1 147 2 250 2 201 4 47 12 286 8 6 6 7 2 99 4 152 2 290 2 57 2 205 4 206 1 295 5 251 1 347 1 161 2 353 2 258 2 260 2 170 4 214 6 171 3 303 10 215 2 20 1 70 2 121 2 222 4 364 2 178 3 227 1 180 3 29 2 232 3 310 1 182 1 84 1 132 3 275 5 133 1 235 2 87 3 237 5 278 1 377 2 139 3 
194 1 353 2 42 5 142 1 282 5 1 8 143 1 170 2 214 3 199 1 70 1 285 1 121 2 201 2 47 6 286 5 97 1 364 2 6 5 49 1 226 1 227 1 99 2 53 1 29 2 290 2 205 2 295 1 275 1 318 1 104 1 235 2 105 1 237 1 161 2 
163 1 353 1 42 2 114 1 1 2 143 1 170 1 262 1 21 1 201 1 46 1 364 2 223 1 225 1 99 1 28 1 125 1 56 1 290 2 129 1 185 1 205 1 12 1 295 1 208 1 237 1 300 1 281 1 
99 1 42 1 1 1 205 1 170 1 206 1 20 1 201 1 286 1 161 1 
29 2 353 2 290 2 42 5 282 5 1 5 143 1 260 1 214 5 235 2 121 2 47 10 286 5 364 2 6 5 
199 1 275 1 286 1 237 1 161 1 295 1 
141 1 42 2 358 1 1 2 170 2 303 1 199 2 249 1 70 2 201 1 222 1 227 2 99 2 180 4 234 1 232 1 310 2 292 1 205 2 295 3 132 1 276 1 275 4 87 4 237 3 278 2 347 1 139 4 239 1 
196 1 2 1 94 1 303 1 21 2 148 1 331 1 46 2 222 1 266 1 72 1 178 1 179 1 52 2 28 3 125 3 180 1 77 1 232 1 310 1 12 2 14 1 188 1 132 1 343 1 87 1 208 1 158 1 297 1 106 1 139 1 281 2 
99 1 42 2 282 2 1 1 214 2 205 1 170 1 70 1 201 1 47 4 286 4 6 2 267 1 161 2 227 1 
244 1 238 1 299 1 
244 1 238 1 299 1 
27 1 238 1 98 1 299 1 307 1 
244 1 238 1 299 1 
103 1 238 1 299 1 
103 1 238 1 299 1 
103 1 238 1 299 1 
238 1 299 1 
5 1 23 1 
16 1 353 1 164 1 163 1 290 1 196 4 369 1 114 1 2 2 262 1 207 4 94 2 146 1 14 8 343 2 34 3 48 2 72 2 267 1 52 4 
146 1 231 1 369 1 
353 1 29 1 164 1 290 1 196 2 2 1 94 1 207 2 361 1 14 4 343 1 235 1 121 1 48 1 34 2 72 1 52 2 
353 1 29 1 164 1 290 1 196 4 207 3 14 7 104 1 285 2 235 1 121 1 265 1 48 1 34 2 226 1 
16 2 163 2 164 4 353 3 196 12 114 2 2 2 262 1 198 1 94 2 146 1 121 2 285 2 265 1 48 5 72 2 226 2 267 1 150 1 52 4 29 2 290 3 369 1 207 11 14 23 343 2 235 2 319 1 34 9 
14 1 285 1 196 1 
14 1 226 1 207 1 
164 1 29 1 353 1 290 1 196 3 2 1 260 1 94 1 207 3 361 1 14 6 343 1 235 1 121 1 34 3 48 2 72 1 52 2 
194 1 164 1 353 2 196 6 259 1 2 1 94 1 285 1 121 2 48 1 49 1 72 1 226 1 52 2 53 1 29 2 290 2 207 6 14 12 318 1 343 1 104 1 235 2 105 1 34 2 
353 1 163 1 164 1 290 1 196 3 114 1 262 1 207 3 14 6 48 1 34 2 
16 1 164 1 163 1 196 2 114 1 369 1 2 1 207 1 94 1 146 1 14 3 343 1 319 1 34 2 48 1 72 1 52 2 
56 1 163 2 164 2 353 2 290 2 259 1 196 5 114 2 2 1 262 1 94 1 207 5 14 10 343 1 48 3 34 5 72 1 52 2 
164 1 290 1 259 1 2 1 94 1 207 2 14 2 343 1 121 1 34 1 72 1 52 2 
353 1 29 1 164 1 290 1 196 2 259 1 2 1 94 1 207 2 14 4 343 1 235 1 121 1 48 1 34 2 72 1 52 2 
16 1 163 1 164 1 196 2 259 1 114 1 2 3 94 3 207 1 14 3 343 3 319 1 48 1 34 2 50 1 72 3 52 6 
16 2 163 3 164 5 353 5 196 18 259 1 357 1 114 3 2 5 167 1 262 2 94 5 361 1 146 1 285 4 121 3 265 1 48 7 50 1 72 5 226 3 267 1 52 10 29 3 290 5 369 1 372 1 207 16 14 34 343 5 104 1 235 3 319 1 34 12 
353 1 163 1 196 4 259 1 114 1 2 1 262 1 94 1 146 1 285 1 48 2 72 1 226 1 267 1 52 2 290 1 369 1 207 4 14 8 318 1 343 1 104 1 34 2 
353 1 163 1 164 1 196 5 259 1 114 1 2 2 262 1 94 2 361 1 146 1 285 2 121 1 265 1 48 2 72 2 226 1 267 1 52 4 290 2 369 1 207 6 14 11 318 1 343 2 104 1 235 1 34 3 
16 1 194 1 163 1 164 1 353 3 196 10 259 1 114 1 2 3 262 1 94 3 361 1 146 1 285 1 121 2 48 3 49 1 72 3 226 1 267 1 52 6 53 1 29 2 290 3 369 1 207 9 14 19 318 1 343 3 104 1 235 2 105 1 34 4 
16 1 194 1 163 1 164 2 353 2 196 7 259 1 114 1 2 3 262 1 94 3 361 1 146 1 285 1 121 2 48 3 49 1 72 3 226 1 267 1 52 6 53 1 29 1 290 3 369 1 207 10 14 17 318 1 343 3 104 1 235 2 105 1 34 5 
353 1 163 1 196 4 259 1 114 1 2 1 262 1 94 1 146 1 285 1 48 2 72 1 226 1 267 1 52 2 290 1 369 1 207 4 14 8 318 1 343 1 104 1 34 2 
194 1 164 1 353 2 196 6 259 1 2 1 94 1 285 1 121 2 48 1 49 1 72 1 226 1 52 2 53 1 29 2 290 2 207 6 14 12 318 1 343 1 104 1 235 2 105 1 34 2 
16 2 194 1 163 1 164 2 353 2 196 8 259 1 114 1 2 4 262 1 94 4 361 1 146 1 285 1 121 2 48 3 49 1 72 4 226 1 267 1 52 8 53 1 29 1 290 3 369 1 207 10 14 18 318 1 343 4 104 1 235 2 105 1 34 5 
16 2 194 1 164 3 353 2 196 7 259 1 2 4 94 4 285 1 121 3 48 3 50 1 49 1 72 4 226 1 52 8 53 1 29 2 290 3 207 9 14 16 318 1 343 4 104 1 235 3 105 1 34 6 
353 1 163 3 164 3 290 1 196 4 369 1 114 3 262 1 207 3 146 2 14 7 48 3 34 6 
16 2 194 1 163 1 164 1 353 2 196 8 259 1 114 1 2 4 262 1 94 4 146 1 285 1 121 2 48 3 50 1 49 1 72 4 226 1 267 1 52 8 53 1 29 1 290 3 369 1 207 10 14 18 318 1 343 4 104 1 235 2 105 1 34 4 
28 1 125 1 54 1 320 1 266 1 375 1 12 1 
125 1 28 1 151 1 268 1 54 1 128 1 165 1 113 1 375 1 12 1 320 1 266 1 
180 1 87 1 231 1 310 1 239 1 139 1 
125 2 28 2 180 1 232 1 310 1 303 1 12 1 132 1 188 1 21 1 87 1 158 1 222 1 46 1 266 1 36 1 178 1 139 1 
303 3 21 1 250 1 46 2 222 1 333 1 266 1 26 1 178 2 28 2 125 2 180 1 232 1 129 1 12 2 188 1 132 2 87 1 158 1 36 1 278 1 377 1 139 1 
303 3 21 1 250 1 46 2 222 1 333 1 266 1 202 1 26 1 178 2 28 2 125 2 180 2 232 1 129 1 157 1 12 2 188 1 132 2 87 2 36 1 278 1 377 1 139 2 
180 3 337 1 232 1 57 1 310 1 171 1 303 4 215 1 295 2 132 1 275 1 250 1 87 3 286 1 222 1 209 1 237 2 278 1 202 1 161 1 178 1 377 1 139 3 
180 3 232 1 57 1 310 1 171 1 303 4 215 1 295 2 132 1 275 1 147 1 250 1 87 3 286 1 222 1 237 2 278 1 202 1 161 1 178 1 377 1 139 3 
180 1 87 1 111 1 222 1 232 1 139 1 
124 1 203 1 180 7 111 1 195 1 232 2 310 2 182 1 4 1 359 1 315 1 303 3 132 2 344 1 133 1 87 6 222 3 37 1 253 1 178 1 139 7 
242 1 353 1 163 1 91 1 196 3 114 1 324 1 2 2 262 1 303 1 94 2 146 1 21 1 148 1 222 1 46 1 48 2 266 2 72 2 267 1 178 1 52 4 76 1 28 2 125 2 77 2 180 1 290 1 232 1 369 1 184 1 207 3 12 1 14 6 132 1 188 1 343 2 133 1 87 1 158 1 297 1 34 2 106 2 36 1 65 1 378 1 139 1 
243 1 42 1 1 1 170 2 171 1 303 2 215 1 20 1 199 1 147 1 201 2 286 1 175 1 7 1 99 2 180 1 152 1 57 1 310 1 205 2 206 1 295 3 275 2 87 1 237 3 347 1 161 1 139 1 
180 2 111 1 232 1 182 1 215 1 303 2 84 1 132 1 133 1 87 2 222 2 178 1 139 2 
126 1 180 4 232 1 310 1 292 1 303 1 132 1 133 1 87 4 222 1 202 1 139 4 239 1 
180 2 232 1 313 1 359 1 303 1 132 1 200 1 87 2 222 2 15 1 37 1 278 1 178 1 139 2 
180 1 32 1 87 1 222 1 232 1 310 1 68 1 89 1 139 1 73 1 
180 2 289 1 195 1 232 1 303 1 132 1 133 1 87 2 222 1 253 1 139 2 
126 1 203 1 180 5 195 1 232 2 310 1 292 1 303 3 132 2 133 1 344 1 87 4 222 2 278 1 239 1 139 5 
126 1 203 1 180 5 195 1 232 2 310 1 292 1 303 3 263 1 132 2 133 1 87 4 222 2 278 1 239 1 139 5 
125 2 28 2 180 1 232 1 310 1 157 1 303 1 12 1 132 1 188 1 21 1 87 1 222 1 46 1 266 1 36 1 178 1 139 1 
124 1 180 1 232 1 182 1 359 1 303 1 132 1 87 1 222 2 37 1 278 1 178 1 139 1 
64 1 28 1 125 1 120 1 100 1 273 1 12 1 145 1 336 1 
100 1 11 1 240 1 
64 1 308 1 100 1 266 1 273 1 
100 1 308 2 213 1 57 1 129 1 273 2 11 1 18 1 295 2 64 2 286 1 333 1 175 1 237 2 266 1 26 1 161 1 240 1 351 1 
231 1 348 1 63 1 
81 1 293 1 348 1 335 1 168 1 63 1 211 1 
363 1 149 1 168 1 
90 1 81 1 293 1 168 3 63 1 246 2 137 1 321 1 348 1 335 1 210 1 211 3 
74 1 269 1 81 1 293 1 348 1 335 1 168 2 63 1 211 2 
19 1 32 1 40 1 332 1 81 1 137 1 293 1 335 1 168 1 73 1 211 1 
81 1 137 1 293 1 348 1 335 1 168 1 211 1 
81 1 137 1 293 1 348 2 168 1 63 1 211 1 
81 2 293 2 168 2 13 1 22 1 137 1 88 1 348 1 335 1 211 2 
74 2 81 1 112 1 311 1 293 1 168 3 63 1 19 1 174 1 137 1 348 1 335 2 211 3 
74 1 81 1 183 1 293 1 168 2 68 1 63 1 32 1 264 1 332 1 137 1 348 1 335 1 73 2 211 2 
74 2 269 1 309 1 81 2 311 1 293 2 168 4 63 1 19 1 137 1 348 1 335 2 211 4 
81 1 137 1 293 1 348 1 335 1 168 1 63 1 211 1 
74 2 81 1 311 1 293 1 168 4 63 2 19 1 246 1 119 1 321 1 348 2 335 3 210 1 211 4 
74 1 81 1 293 1 301 1 168 2 63 1 326 1 86 1 137 1 348 1 335 1 211 2 
228 1 81 1 293 1 168 3 63 1 246 2 137 1 321 2 348 1 335 1 210 1 211 3 
78 1 154 2 173 1 335 2 
81 1 137 1 293 1 168 1 39 1 211 1 
74 1 174 1 81 1 137 1 293 1 348 1 335 1 168 2 63 1 211 2 
221 1 
81 1 137 1 293 1 348 1 335 1 168 1 63 1 211 1 
74 1 81 1 293 1 168 3 63 1 246 1 174 1 137 1 348 1 335 1 211 3 
19 1 119 1 311 1 335 1 
348 1 335 1 

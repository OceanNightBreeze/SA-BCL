#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
280 1 281 1 28 1 285 1 287 3 57 2 5 1 313 2 333 2 361 5 40 1 106 6 14 1 268 2 362 2 222 1 107 1 181 1 133 2 183 1 184 1 154 9 347 1 349 1 377 9 300 1 190 2 161 4 
280 1 281 1 28 1 285 1 287 3 57 2 5 1 313 2 333 2 361 5 40 1 106 6 14 1 362 2 268 2 222 1 107 1 181 1 133 2 183 1 184 1 154 9 347 1 349 1 377 9 300 1 190 2 161 4 
280 1 281 1 28 1 285 1 287 4 57 2 5 1 313 2 333 2 361 6 40 1 106 7 14 1 362 2 268 2 222 1 107 1 181 1 133 2 183 1 184 1 154 10 347 1 349 1 377 10 300 1 190 2 161 5 
280 1 281 1 28 1 285 1 287 2 57 1 313 2 333 2 361 4 40 1 106 4 14 1 362 2 268 2 222 1 107 1 181 1 133 2 183 1 184 1 154 7 347 1 349 1 377 7 300 1 190 2 161 3 
361 3 281 1 106 3 107 1 14 1 362 1 28 1 133 1 183 1 154 4 287 1 57 2 5 1 313 1 377 4 333 1 190 1 161 2 
361 1 294 1 40 1 281 1 165 1 268 1 89 1 28 1 133 1 183 1 154 2 313 1 377 2 349 1 333 1 190 1 
280 1 361 2 281 1 106 1 268 1 28 1 183 1 154 3 287 1 313 2 377 3 190 2 161 1 
361 5 280 1 281 1 106 7 362 1 14 1 107 1 222 1 268 1 28 1 133 1 285 1 183 1 154 9 287 3 57 2 58 1 5 1 313 2 377 9 333 1 190 2 161 4 78 1 
361 5 280 1 281 1 106 7 362 1 14 1 107 1 222 1 268 1 28 1 133 1 285 1 183 1 154 9 287 3 57 2 58 1 5 1 313 2 377 9 333 1 190 2 161 4 78 1 
122 1 36 1 234 1 
141 1 147 2 122 1 
173 2 257 2 379 2 240 1 44 2 79 2 11 2 267 1 
164 2 257 2 2 1 53 1 101 2 82 1 308 1 355 1 171 1 235 1 173 2 236 1 6 1 33 1 63 2 34 1 240 1 198 1 66 1 290 1 11 2 267 1 108 1 270 1 187 2 343 1 44 3 138 1 20 1 346 1 47 1 48 1 379 3 114 1 25 2 98 1 79 2 
173 1 257 1 331 1 379 1 176 1 44 1 256 1 79 1 11 1 267 1 
100 1 257 1 259 1 234 1 309 1 44 1 156 1 59 1 122 1 379 1 176 1 126 1 140 1 360 1 
100 2 257 1 234 1 309 1 156 2 44 1 59 1 173 1 122 1 379 1 176 1 140 1 360 1 11 1 79 1 
100 1 366 1 289 1 156 1 278 1 
100 2 122 1 319 1 366 1 234 1 295 1 156 2 278 1 
100 1 156 1 278 1 
100 1 257 1 366 1 156 1 73 1 44 1 173 1 331 1 379 1 176 1 256 1 11 1 79 1 267 1 
122 1 
100 2 122 1 318 1 319 1 366 1 234 1 156 2 278 1 
100 5 319 1 54 1 366 2 234 1 370 1 156 5 356 1 372 1 4 1 122 1 237 1 315 1 91 2 37 1 303 1 278 2 380 2 212 2 
240 1 36 1 
257 2 269 1 44 2 173 1 379 2 125 1 240 2 11 1 79 1 
174 1 186 1 201 1 
53 1 108 1 308 1 286 1 187 1 44 1 343 1 235 1 346 1 379 1 63 1 34 1 240 1 25 1 290 1 98 1 
53 1 257 1 108 1 308 1 186 1 187 1 343 1 44 2 235 1 346 1 173 1 379 2 34 1 63 1 25 1 115 1 38 1 290 1 98 1 79 1 
173 3 257 3 379 3 240 1 38 1 44 3 11 1 79 3 
173 1 257 1 379 1 176 1 44 1 256 1 79 1 
173 1 257 1 379 1 176 1 269 1 125 1 44 1 79 1 11 1 
100 1 164 2 53 1 2 1 257 3 101 1 82 1 29 1 308 1 309 1 171 1 235 1 59 1 173 3 6 1 33 1 34 1 176 1 63 1 240 1 125 1 38 1 198 1 66 1 290 1 360 1 11 2 267 1 108 1 185 1 187 1 343 1 44 4 156 1 346 1 47 1 48 1 379 4 114 1 25 1 115 1 140 1 98 1 79 3 
173 1 257 2 379 2 240 1 38 1 126 1 44 2 88 1 79 1 
100 1 257 3 29 1 309 1 156 1 44 3 59 1 173 3 103 1 122 1 379 3 176 1 125 1 115 1 38 2 140 1 360 1 11 1 79 3 
173 2 257 2 379 2 125 1 38 1 186 1 44 2 79 2 11 1 201 1 
53 1 108 1 308 1 187 1 44 1 343 1 235 1 346 1 379 1 63 1 34 1 240 1 25 1 290 1 98 1 
317 1 53 1 108 1 308 1 187 1 44 1 343 1 371 1 346 1 379 1 63 1 34 1 240 1 25 1 290 1 
164 2 282 1 101 4 83 1 82 1 171 1 172 1 6 1 174 2 217 1 7 1 238 1 198 1 149 1 201 2 270 2 271 1 186 2 344 1 375 1 47 2 48 1 114 1 211 1 
173 1 257 1 379 1 324 1 176 1 44 1 360 1 79 1 
257 5 296 1 18 1 44 5 173 4 379 5 125 1 240 1 38 2 115 1 126 1 88 1 79 4 11 1 
173 2 257 2 324 1 379 2 176 1 44 2 256 1 79 2 
364 1 102 1 
364 1 102 1 
373 1 81 1 
373 1 81 1 
373 1 81 1 
194 1 364 1 102 1 
364 1 84 1 102 1 
373 1 81 1 132 1 364 2 160 1 102 2 
194 1 364 1 102 1 
194 1 364 1 102 1 
68 1 364 1 102 1 
68 1 364 1 102 1 
68 1 364 1 102 1 
100 2 105 2 168 1 364 2 182 1 169 1 297 1 156 2 119 2 274 1 74 1 102 2 122 1 378 2 239 1 160 1 93 2 92 2 266 3 
100 1 257 2 84 1 119 1 102 1 173 2 62 1 240 1 266 1 105 1 364 1 204 1 297 1 156 1 44 2 345 1 379 2 158 1 24 1 92 1 93 1 116 1 254 1 79 2 
362 1 333 1 133 1 
165 1 333 1 133 1 
197 1 165 1 362 2 109 1 133 3 111 1 
165 1 362 1 109 1 314 1 133 2 111 1 
165 1 362 1 109 1 133 2 111 2 
141 1 100 5 83 1 234 1 147 3 122 2 62 1 237 3 238 1 315 2 334 1 104 1 149 1 242 2 363 1 223 2 15 1 224 1 319 1 366 4 204 1 370 1 156 5 205 2 348 1 49 1 158 1 91 1 211 1 278 1 212 1 380 1 
141 3 100 9 83 3 234 1 120 1 147 9 86 5 61 1 122 5 237 8 238 3 315 6 37 1 149 3 289 5 242 6 293 1 13 1 363 1 223 6 15 3 224 2 319 1 366 7 204 4 156 9 370 1 206 1 348 2 91 2 305 1 211 3 278 6 380 2 212 2 
141 2 100 3 83 1 234 1 147 4 122 3 237 3 238 1 334 1 315 2 37 1 104 1 149 1 242 2 15 1 223 2 224 1 366 2 204 1 156 3 205 1 348 1 91 1 211 1 212 1 380 1 
141 3 100 4 83 2 234 1 120 1 147 7 61 1 122 4 237 5 238 2 334 1 315 4 37 1 104 1 149 2 242 4 223 4 15 2 224 1 366 3 204 2 156 4 205 2 348 1 91 1 305 1 211 2 212 1 380 1 
358 1 36 1 343 1 
21 1 343 1 
162 1 
290 1 343 1 
108 1 358 2 290 1 343 3 231 1 292 1 
108 1 290 1 343 1 
97 1 343 1 
101 7 83 1 322 1 270 4 170 1 344 3 56 2 145 1 172 2 146 1 121 1 47 3 248 1 75 1 149 1 336 1 150 1 
101 7 83 1 322 1 270 4 170 1 344 3 56 2 145 1 172 2 146 1 121 1 47 3 248 1 75 1 149 1 336 1 150 1 
130 1 101 7 83 1 322 1 270 4 170 1 344 3 56 2 145 1 172 2 146 1 121 1 47 3 75 1 248 1 149 1 336 1 150 1 
164 2 101 6 82 1 170 1 171 1 216 1 56 1 145 1 172 1 146 1 198 1 150 1 131 1 270 3 322 1 367 1 344 2 47 3 248 2 48 1 22 1 94 1 51 1 277 1 
164 4 101 9 83 1 82 2 214 1 170 1 171 2 56 2 172 3 146 1 121 1 198 2 149 1 336 1 150 1 9 1 270 5 322 1 344 4 248 1 47 4 75 1 48 2 22 1 
281 1 165 1 1 1 258 1 28 1 195 1 31 1 197 1 313 1 333 1 63 1 34 1 264 1 359 1 361 1 106 1 362 1 268 1 133 2 183 1 154 2 187 1 247 1 346 1 377 2 207 1 25 1 190 1 252 1 304 1 
165 1 1 1 258 1 28 1 195 1 31 1 197 1 313 1 333 1 148 1 63 1 34 1 264 1 178 1 359 1 361 1 128 1 106 2 362 1 268 1 133 2 183 1 154 3 187 1 247 1 346 1 377 3 25 1 190 1 252 1 
165 1 28 1 195 1 31 1 197 1 148 1 333 1 63 1 34 1 264 1 359 1 361 1 128 1 106 2 268 1 362 1 133 2 183 1 154 2 187 1 247 1 346 1 377 2 25 1 252 1 
215 1 308 1 118 1 313 1 34 1 63 1 264 2 290 1 178 1 337 1 268 2 154 1 187 1 19 1 343 1 247 2 346 1 377 1 76 1 189 1 25 1 190 1 252 2 
281 1 165 1 1 1 258 1 195 1 31 1 197 1 313 1 333 1 148 1 63 1 34 1 264 1 359 1 362 1 268 1 133 2 154 1 187 1 247 1 346 1 377 1 207 1 25 1 190 1 252 1 
310 1 
141 2 100 5 144 1 234 1 59 1 147 2 332 1 237 2 63 2 290 1 337 1 203 1 71 1 246 2 19 1 156 5 343 1 346 1 348 1 250 2 25 2 255 1 212 1 163 2 257 1 80 1 352 2 353 2 259 1 308 2 309 1 30 2 311 1 218 1 122 2 87 1 34 1 176 1 315 2 126 1 265 1 360 1 319 3 320 4 365 2 187 2 370 1 44 1 227 1 379 1 91 1 140 1 327 1 278 6 380 1 
100 3 257 1 259 1 309 1 311 1 59 1 176 1 126 1 265 1 360 1 203 1 71 1 318 1 320 2 319 1 44 1 156 3 227 1 379 1 140 1 278 2 163 1 
100 3 257 1 352 1 259 1 309 1 234 1 311 1 59 1 122 1 176 1 126 1 265 1 360 1 203 1 71 1 318 1 320 3 319 1 44 1 156 3 227 1 379 1 140 1 278 1 
100 3 257 1 352 1 259 1 309 1 234 1 311 1 59 1 122 1 176 1 126 1 265 1 360 1 203 1 318 1 71 1 319 1 320 3 365 1 44 1 156 3 227 1 379 1 140 1 278 2 163 1 
141 2 100 5 257 1 352 4 353 2 259 1 144 1 234 5 309 1 30 2 311 1 59 1 261 1 122 5 237 1 176 1 315 1 263 1 126 1 265 1 360 1 291 1 203 1 71 1 318 1 319 3 320 6 365 4 246 2 342 1 370 1 156 5 44 1 112 1 227 1 379 1 250 2 91 1 140 1 255 1 278 7 212 1 380 1 163 4 
100 4 141 2 144 1 234 1 59 1 147 2 237 1 203 1 71 1 246 2 156 4 250 2 255 1 212 1 163 2 257 1 352 2 353 2 259 1 309 1 311 1 30 2 122 2 176 1 315 1 126 1 360 1 265 1 320 4 319 2 365 2 44 1 370 1 227 1 379 1 91 1 140 1 327 1 278 4 380 1 
141 2 100 4 257 1 352 2 353 2 259 1 144 1 234 1 309 1 30 2 311 1 59 1 261 1 122 1 237 1 176 1 315 1 126 1 265 1 360 1 203 1 71 1 319 2 320 4 365 2 246 2 342 1 44 1 156 4 370 1 112 1 227 1 379 1 250 2 91 1 140 1 278 4 255 1 212 1 380 1 163 2 
141 2 100 4 257 1 352 2 353 2 259 1 144 1 234 1 309 1 30 2 311 1 59 1 261 1 122 1 237 1 176 1 315 1 126 1 265 1 360 1 203 1 71 1 319 2 320 4 365 2 246 2 342 1 44 1 156 4 370 1 112 1 227 1 379 1 250 2 91 1 140 1 278 4 255 1 212 1 380 1 163 2 
100 4 257 1 330 1 352 2 353 2 259 1 144 1 234 1 309 1 311 1 59 1 147 2 122 1 237 1 176 1 315 1 126 1 265 1 360 1 243 2 202 2 203 1 129 1 71 1 319 2 320 4 365 2 246 2 342 1 44 1 156 4 370 1 227 1 379 1 91 1 230 1 140 1 278 4 212 1 380 1 163 2 
100 2 257 2 352 1 259 1 234 1 309 1 311 1 59 1 173 1 331 1 122 1 176 2 126 1 263 1 265 1 360 1 11 1 267 1 203 1 71 1 320 3 365 1 73 1 44 2 156 2 227 1 379 2 140 1 278 1 256 1 79 1 163 1 
100 2 257 2 352 1 259 1 234 1 309 1 311 1 59 1 173 1 331 1 122 1 176 2 126 1 263 1 265 1 360 1 11 1 267 1 203 1 71 1 320 3 365 1 73 1 44 2 156 2 227 1 379 2 140 1 278 1 256 1 79 1 163 1 
100 4 330 1 144 1 234 1 59 1 147 2 237 1 243 2 203 1 202 2 71 1 246 2 156 4 212 1 163 2 257 1 352 2 353 2 259 1 309 1 311 1 122 1 176 1 315 1 126 1 360 1 265 1 320 4 319 2 365 2 44 1 370 1 227 1 379 1 91 1 140 1 327 1 278 4 380 1 
164 2 101 6 83 1 82 1 270 3 322 1 271 1 170 1 186 1 344 2 171 1 56 1 172 2 121 1 174 1 47 3 6 1 75 1 48 1 114 1 240 2 36 1 198 1 149 1 336 1 201 1 
164 4 52 1 101 11 82 2 83 1 171 2 216 2 172 1 6 2 174 8 33 1 176 1 123 1 238 1 240 1 198 2 149 2 150 1 201 3 15 2 270 6 367 2 226 1 186 8 344 2 47 5 48 2 114 1 23 1 302 1 210 1 326 1 211 2 
164 2 53 1 257 1 27 1 101 2 82 1 308 1 286 1 355 1 171 1 235 1 173 1 6 1 33 1 34 1 63 1 240 1 38 1 198 1 290 1 201 1 108 1 180 1 270 1 17 1 187 1 226 1 343 1 44 2 346 1 47 1 48 1 379 2 114 1 25 1 115 1 98 1 79 1 
2 2 53 2 193 1 101 20 55 1 56 1 235 2 6 3 148 1 63 3 238 2 240 2 198 3 336 1 149 3 290 2 150 4 201 7 339 2 340 2 108 2 15 2 343 2 344 8 346 2 75 1 114 3 25 3 115 1 211 2 79 1 164 6 257 1 83 3 82 3 308 1 170 1 355 1 171 3 357 2 172 4 173 1 121 1 174 7 33 1 34 2 38 1 41 1 322 1 270 10 187 3 226 1 186 7 44 3 45 2 47 10 48 3 379 3 98 2 
164 4 328 1 257 1 101 2 82 2 308 2 354 1 355 1 171 2 312 1 173 1 236 2 6 2 148 1 33 1 34 2 63 8 288 1 35 1 38 1 198 2 290 2 337 1 270 1 271 1 187 8 44 1 343 3 19 1 346 2 113 1 47 1 48 2 379 1 114 2 25 7 26 1 304 1 79 1 
164 2 257 1 101 3 82 1 83 1 171 1 172 1 173 1 174 1 6 1 238 1 125 1 198 1 39 1 149 1 11 1 201 1 15 1 270 1 186 1 226 1 44 1 344 1 47 2 48 1 379 1 114 1 211 1 79 1 
164 2 101 2 82 1 270 2 271 1 186 1 344 1 171 1 174 1 6 1 48 1 7 1 114 1 198 1 149 1 150 1 211 1 201 1 
164 2 101 2 82 1 83 1 271 1 186 1 344 1 171 1 172 1 375 1 174 1 6 1 47 2 48 1 114 1 238 1 198 1 201 1 
164 2 101 4 82 1 83 1 171 1 172 1 6 1 174 2 238 1 198 1 149 1 150 1 201 2 15 1 270 2 271 1 186 2 344 2 47 2 48 1 114 1 211 1 
164 2 101 2 82 1 270 2 186 1 344 1 171 1 174 1 6 1 48 1 7 1 114 1 35 1 198 1 149 1 150 1 211 1 201 1 
164 2 101 2 82 1 83 1 186 1 344 1 171 1 172 1 375 1 174 1 6 1 47 2 48 1 114 1 35 1 238 1 198 1 201 1 
164 2 101 4 82 1 83 1 171 1 172 1 6 1 174 2 35 1 238 1 198 1 149 1 150 1 201 2 15 1 270 2 186 2 344 2 47 2 48 1 114 1 211 1 
164 2 101 4 82 1 83 1 171 1 172 1 6 1 174 2 238 1 198 1 149 1 150 1 201 2 15 1 270 2 186 2 344 2 47 2 48 1 114 1 211 1 
164 2 53 1 2 1 101 2 82 1 308 1 355 1 171 1 235 1 6 1 33 1 34 1 63 1 240 1 198 1 290 1 108 1 270 1 187 1 343 1 44 1 346 1 47 1 48 1 379 1 114 1 25 1 98 1 
164 2 53 1 101 2 82 1 308 1 355 1 171 1 6 1 33 1 34 1 63 1 240 1 198 1 290 1 317 1 108 1 270 1 225 1 187 1 343 1 44 1 371 1 346 1 47 1 48 1 379 1 114 1 25 1 
164 2 101 4 82 1 83 1 171 1 172 1 6 1 174 2 238 1 198 1 149 1 150 1 201 2 15 1 270 2 226 1 186 2 344 2 47 2 48 1 114 1 211 1 
164 2 53 1 2 1 101 4 83 1 82 1 171 1 172 1 235 1 174 2 6 1 34 1 63 1 238 1 198 1 149 1 150 1 290 1 201 2 339 1 108 1 15 1 270 2 186 2 187 1 343 1 44 1 344 2 346 1 47 2 48 1 379 1 114 1 25 1 304 1 211 1 98 1 
164 2 329 1 257 1 101 3 83 1 82 1 171 1 173 1 6 1 174 1 238 1 125 1 198 1 149 1 150 1 11 1 201 1 15 1 270 2 226 1 186 1 44 1 344 1 47 1 48 1 379 1 114 1 211 1 79 1 
142 1 164 8 143 1 192 1 101 37 83 4 82 4 306 1 214 1 3 4 170 1 171 4 56 1 216 3 172 3 121 1 262 1 238 3 198 4 336 1 149 4 150 4 15 3 322 1 270 19 42 1 134 1 367 3 344 7 136 1 298 2 376 1 75 1 47 18 48 4 22 2 350 1 229 1 96 1 50 1 277 3 211 3 
142 1 164 8 143 1 192 1 101 35 83 4 82 4 306 1 214 1 3 4 170 1 171 4 56 1 216 2 172 2 121 1 262 1 238 3 198 4 336 1 149 4 150 3 15 3 322 1 270 18 134 1 367 2 344 5 136 1 298 1 376 1 75 1 47 17 48 4 22 2 350 1 229 1 96 1 50 1 277 2 211 3 
142 1 164 6 143 1 192 1 101 28 83 3 82 3 306 1 214 1 3 4 171 3 216 2 172 3 262 1 238 3 198 3 149 3 150 3 15 3 270 14 134 1 367 2 344 6 136 1 298 1 47 14 48 3 22 2 350 1 229 1 96 1 50 1 277 2 211 3 
164 8 143 1 192 1 101 33 213 1 83 4 82 4 306 1 214 1 3 3 170 1 171 4 56 1 216 2 172 3 121 1 262 1 238 3 198 4 336 1 149 4 150 3 15 3 322 1 270 17 134 1 367 2 344 6 136 1 298 1 376 1 75 1 47 16 48 4 22 2 350 1 229 1 96 1 50 1 277 2 211 3 
142 1 164 6 143 1 192 1 101 26 83 2 82 3 306 1 214 1 3 4 171 3 216 2 172 2 262 1 238 2 198 3 149 3 150 2 15 3 270 14 134 1 367 2 344 4 136 1 298 2 47 12 48 3 22 2 350 1 229 2 96 1 50 1 277 2 211 3 
105 1 364 1 160 1 92 1 93 1 169 1 119 1 74 1 152 1 102 1 
84 1 345 1 
0 1 105 1 69 1 177 1 364 1 92 1 93 1 119 1 102 1 
100 1 105 1 168 1 364 1 182 1 169 1 297 1 156 1 119 1 274 1 74 1 102 1 122 1 378 1 160 1 93 1 92 1 266 2 
100 1 105 1 168 1 364 1 182 1 169 1 297 1 156 1 119 1 274 1 74 1 102 1 122 1 378 1 160 1 93 1 92 1 266 2 
100 1 105 1 168 1 364 1 182 1 169 1 297 1 156 1 119 1 274 1 74 1 102 1 122 1 378 1 160 1 93 1 92 1 266 2 
132 1 194 1 85 1 
132 1 194 1 85 1 
68 1 321 1 
68 1 132 1 321 1 
254 1 116 1 
100 1 257 2 84 1 119 1 102 1 173 2 62 1 240 1 266 1 105 1 364 1 366 1 204 1 44 2 156 1 274 1 345 1 379 2 378 1 158 1 24 1 92 1 93 1 116 1 254 1 99 1 79 2 
194 1 85 1 
68 1 132 1 321 1 
164 2 257 2 101 2 82 1 354 1 355 1 171 1 312 1 236 2 6 1 33 1 34 1 63 2 219 1 198 1 199 1 290 1 244 1 270 1 187 2 226 1 343 1 44 2 346 1 374 1 47 1 48 1 379 2 114 1 25 2 251 1 
165 1 362 1 258 1 133 2 195 1 16 1 187 2 43 1 31 1 247 1 346 1 197 1 175 1 333 1 148 1 34 1 63 2 25 2 304 1 
165 1 362 1 283 1 258 1 133 2 195 1 16 1 187 1 31 1 247 1 346 1 197 1 333 1 148 1 63 1 34 1 25 1 
308 1 187 1 43 1 343 1 19 1 247 1 346 1 76 1 34 1 63 1 325 1 25 1 290 1 337 1 
165 1 362 1 258 1 133 2 195 1 16 1 187 1 43 1 31 1 247 1 346 1 197 1 175 1 333 1 148 1 34 1 63 1 25 1 
351 1 
122 1 237 1 315 1 36 1 54 1 234 1 372 1 
141 1 100 1 234 1 30 1 147 1 122 2 237 1 315 1 319 1 370 1 156 1 250 1 91 1 255 1 278 1 212 1 380 1 
100 5 141 6 233 1 54 1 234 2 147 12 237 9 63 3 238 2 149 2 290 3 338 2 242 6 151 1 340 2 153 2 108 3 15 2 245 2 343 10 156 5 21 3 346 3 348 2 25 3 301 1 304 1 211 2 212 4 117 1 83 2 307 2 308 1 309 2 87 1 122 8 34 4 358 2 315 8 223 6 319 3 187 3 370 4 275 2 135 1 372 1 188 2 91 4 95 2 97 2 191 2 231 1 278 5 380 4 
100 1 141 3 143 1 83 2 306 1 307 2 234 2 216 1 147 6 87 1 122 5 237 8 315 5 238 2 149 2 242 5 341 1 223 5 15 2 319 1 134 1 367 1 156 1 155 1 370 2 275 1 136 1 348 1 91 2 50 1 277 1 211 2 278 1 212 2 380 2 
100 1 257 1 83 1 307 2 170 1 173 1 261 1 331 1 176 1 237 2 315 2 336 1 149 2 11 1 267 1 322 1 44 1 370 1 156 1 73 1 275 1 299 1 379 1 91 1 256 1 212 1 380 1 79 1 
54 1 234 1 370 1 372 1 122 1 237 1 91 1 315 1 380 1 212 1 
340 1 141 5 15 2 223 5 83 2 307 2 275 1 147 10 122 5 237 5 315 5 238 2 149 2 211 2 242 5 
100 1 122 1 319 1 234 1 156 1 278 1 
100 3 233 2 308 2 218 1 332 1 87 2 34 1 63 4 237 2 315 2 37 1 290 1 337 1 70 1 319 2 187 4 343 1 370 1 156 3 19 1 135 1 346 1 348 2 91 2 25 4 279 1 278 4 212 2 380 2 
164 2 257 2 2 1 53 1 101 1 82 1 308 1 171 1 235 1 173 2 6 1 33 1 63 1 34 1 240 1 198 1 66 1 290 1 11 2 267 1 108 1 187 1 44 3 343 1 346 1 47 1 48 1 379 3 114 1 25 1 98 1 79 2 
141 2 223 2 234 2 370 1 56 1 147 4 348 1 122 4 87 1 237 1 315 2 91 1 242 2 380 1 212 1 
92 1 241 1 119 1 
92 1 169 1 110 1 254 1 119 1 
92 1 241 1 119 1 
92 1 241 1 119 1 
92 1 127 1 119 1 
92 1 127 1 119 1 
92 1 127 1 119 1 
92 1 119 1 
364 1 102 1 
164 4 143 1 101 24 82 2 83 4 214 1 306 1 170 2 171 2 56 1 216 1 172 5 121 1 238 1 198 2 336 2 149 5 150 4 15 2 322 2 270 14 134 1 367 1 344 9 136 1 75 1 47 10 299 1 48 2 22 1 50 1 277 1 211 2 
164 6 143 1 101 17 82 3 83 2 214 1 306 1 170 1 171 3 56 1 216 1 172 3 121 1 238 1 198 3 336 1 149 3 150 1 15 2 322 1 270 10 134 1 367 1 344 4 136 1 75 1 47 7 48 3 22 1 50 1 277 1 211 2 232 1 
164 6 143 1 101 19 82 3 83 3 214 1 306 1 170 1 171 3 56 1 216 1 172 3 121 1 238 2 198 3 336 1 149 3 150 1 15 2 322 1 270 9 134 1 367 1 344 4 136 1 75 1 47 10 48 3 22 1 50 1 277 1 211 2 232 1 
164 6 143 1 101 17 82 3 83 2 214 1 306 1 170 1 171 3 56 1 216 1 172 3 121 1 238 1 198 3 336 1 149 3 150 2 15 2 322 1 270 10 134 1 367 1 344 5 136 1 75 1 47 7 48 3 22 1 50 1 277 1 211 2 232 1 
164 4 143 1 101 24 82 2 83 4 214 1 306 1 170 2 171 2 56 1 216 1 172 5 121 1 238 1 198 2 336 2 149 5 150 4 15 2 322 2 270 14 134 1 367 1 344 9 136 1 75 1 47 10 299 1 48 2 22 1 50 1 277 1 211 2 
164 2 143 1 101 12 82 1 83 2 214 1 306 1 171 1 216 1 172 1 238 2 198 1 149 2 150 1 15 2 270 6 134 1 367 1 344 2 136 1 47 6 48 1 50 1 277 1 211 2 
164 8 143 1 101 18 82 4 83 2 306 1 214 1 170 1 171 4 56 1 216 1 172 3 121 1 238 1 198 4 336 1 149 3 150 2 15 2 322 1 270 10 134 1 367 1 344 5 136 1 75 1 47 8 48 4 22 2 50 1 277 1 211 2 232 1 
164 8 143 1 101 16 82 4 83 2 306 1 214 1 171 4 216 1 172 3 238 2 198 4 149 3 150 3 15 3 270 9 134 1 367 1 344 6 136 1 376 1 47 7 48 4 22 2 50 1 277 1 211 3 
101 7 83 1 322 3 270 3 170 3 344 6 172 3 121 1 47 4 75 2 336 1 149 1 150 3 
164 8 143 1 101 18 82 4 83 2 306 1 214 1 170 1 171 4 56 1 216 1 172 3 121 1 238 1 198 4 336 1 149 3 150 1 15 2 322 1 270 10 134 1 367 1 344 4 136 1 376 1 75 1 47 8 48 4 22 2 50 1 277 1 211 2 
164 4 101 8 83 1 82 2 270 4 322 1 170 1 344 3 171 2 56 1 172 2 121 1 47 4 75 1 48 2 22 1 198 2 149 1 336 1 150 1 
101 6 83 1 322 1 270 3 170 1 344 2 56 1 172 2 121 1 47 3 75 1 36 1 336 1 149 1 
164 2 15 1 101 4 83 1 82 1 270 2 344 2 171 1 172 1 47 2 48 1 238 1 198 1 149 1 150 1 211 1 232 1 
47 1 101 2 270 1 367 1 277 1 216 1 
164 2 101 25 83 5 82 1 170 2 171 1 56 1 216 2 172 4 121 1 123 1 238 2 198 1 336 2 149 5 150 4 15 2 322 2 270 13 367 2 344 8 75 1 47 12 299 1 48 1 22 1 302 1 326 1 211 2 
47 1 101 1 367 1 
101 1 270 1 216 1 
340 1 164 2 15 1 101 6 82 1 83 1 270 3 171 1 344 3 172 2 47 3 48 1 238 1 198 1 149 1 150 1 211 1 232 1 
164 2 143 1 101 12 82 1 83 2 214 1 306 1 171 1 216 1 172 1 238 2 198 1 149 2 150 1 15 2 270 6 134 1 367 1 344 2 136 1 47 6 48 1 50 1 277 1 211 2 
101 6 83 1 270 3 322 1 170 1 344 2 172 1 47 3 336 1 149 1 150 1 
164 2 101 3 82 1 270 1 322 1 170 1 344 2 171 1 172 1 121 1 75 1 47 2 48 1 22 1 198 1 150 1 51 1 
164 2 101 10 82 1 83 2 214 1 322 2 270 5 170 2 171 1 344 5 172 3 47 5 48 1 299 1 198 1 336 1 149 2 150 2 
164 2 101 2 82 1 214 1 270 2 171 1 344 1 48 1 198 1 149 1 150 1 211 1 
164 2 15 1 101 4 83 1 82 1 214 1 270 2 344 2 171 1 172 1 47 2 48 1 238 1 198 1 149 1 150 1 211 1 
164 6 101 3 82 3 214 1 322 1 270 1 170 1 171 3 344 2 172 1 376 1 47 2 48 3 22 1 198 3 51 1 150 1 
164 8 101 15 83 2 82 4 214 1 170 2 171 4 216 1 172 3 121 1 198 4 149 2 336 1 150 3 270 7 322 2 367 1 344 6 376 1 47 8 75 1 299 1 48 4 22 1 94 1 51 1 277 1 232 1 
257 1 379 1 240 1 126 1 316 1 44 1 88 1 
257 1 167 1 284 1 44 1 276 1 379 1 64 1 240 1 139 1 126 1 316 1 88 1 
346 1 34 1 63 1 36 1 25 1 308 1 290 1 187 1 343 1 19 1 337 1 
53 1 257 1 108 1 308 1 187 1 343 1 44 2 173 1 346 1 379 2 34 1 63 1 240 1 25 1 38 1 290 1 98 1 79 1 
257 2 53 1 233 1 59 1 173 1 63 1 34 1 176 1 240 1 38 1 290 2 360 1 153 1 108 2 187 1 44 2 343 3 346 1 379 2 25 1 97 1 98 1 79 2 
257 2 53 1 233 1 59 1 173 1 63 2 34 1 176 1 240 1 38 1 290 2 360 1 317 1 153 1 108 2 187 2 44 2 343 3 346 1 249 1 379 2 25 2 97 1 79 2 
100 2 153 1 108 1 233 1 308 1 234 1 309 1 187 3 156 2 343 4 137 1 21 1 346 1 249 1 122 1 34 1 63 3 358 1 25 3 97 1 253 1 290 1 278 1 
100 2 153 1 108 1 233 1 308 1 234 1 309 1 187 3 156 2 343 4 21 1 346 1 249 1 122 1 34 1 63 3 358 1 25 3 97 1 290 1 191 1 278 1 
346 1 113 1 34 1 63 1 25 1 187 1 
221 1 12 1 328 1 108 1 308 2 187 7 343 3 312 1 346 2 236 1 113 1 148 1 63 7 34 3 288 1 25 6 26 1 304 1 290 2 231 1 200 1 
164 4 53 1 257 1 2 1 101 6 83 1 82 2 170 1 171 2 357 1 56 1 172 2 235 1 173 1 121 1 174 1 6 2 34 1 63 1 240 2 219 1 38 1 198 2 149 1 336 1 290 1 201 1 339 1 108 1 270 3 322 1 186 1 226 1 187 1 343 1 44 2 344 2 346 1 47 3 75 1 48 2 379 2 114 2 25 1 304 1 98 1 79 1 
100 3 54 1 308 1 234 1 309 1 122 1 237 1 63 1 358 1 315 1 338 1 245 1 319 1 366 1 187 1 370 2 156 3 343 2 372 1 135 1 188 1 21 1 91 2 25 1 191 1 278 2 212 2 380 2 
108 1 187 2 343 2 346 1 113 1 358 1 63 2 34 2 25 2 301 1 304 1 290 1 231 1 
308 1 368 1 187 4 19 1 343 1 346 1 249 1 34 1 63 4 25 4 304 1 290 1 337 1 
221 1 12 1 108 1 193 1 233 1 187 2 369 1 343 1 346 1 63 2 34 2 25 2 290 1 67 1 
346 1 165 1 333 1 34 1 63 1 133 1 195 1 25 1 308 1 187 1 
346 1 148 1 34 1 63 2 25 2 251 1 290 1 187 2 304 1 343 1 312 1 
328 1 233 1 308 1 368 1 187 5 19 1 343 3 312 1 346 2 63 5 34 2 25 4 304 1 26 1 290 2 337 1 
328 1 233 1 308 1 368 1 187 5 19 1 343 3 312 1 346 2 63 5 34 2 25 4 304 1 290 2 337 1 10 1 
317 1 53 1 257 1 108 1 308 1 187 1 343 1 44 2 173 1 346 1 379 2 34 1 63 1 240 1 25 1 38 1 290 1 79 1 
221 1 12 1 108 1 233 1 187 1 343 1 346 1 63 1 34 2 25 1 290 1 231 1 200 1 
46 1 159 1 240 1 77 1 273 1 
100 2 29 1 366 1 234 1 309 1 156 2 273 2 59 1 46 1 60 1 122 1 176 1 228 1 159 2 240 1 77 2 8 1 140 1 360 1 
374 1 46 1 244 1 257 1 379 1 77 1 199 1 44 1 273 1 
46 1 60 1 8 1 
361 1 28 1 183 1 36 1 
361 1 377 1 313 1 28 1 183 1 190 1 154 1 
268 1 377 1 252 1 
361 1 281 1 40 2 28 1 183 1 154 3 157 1 313 1 377 3 190 1 335 1 220 1 
361 1 106 1 377 2 313 1 28 1 183 1 190 1 154 2 57 1 
361 1 281 1 14 1 362 1 133 1 154 1 313 1 377 1 333 1 190 1 161 1 
361 1 281 1 377 1 313 1 183 1 190 1 154 1 
281 1 377 1 313 1 28 1 183 2 190 1 154 1 
361 1 281 1 377 2 313 2 179 1 166 1 208 1 183 1 190 2 154 2 
361 2 281 1 106 2 222 1 28 1 285 1 183 1 154 3 287 1 313 1 377 3 190 1 161 1 
361 1 165 1 281 1 106 1 362 1 28 1 133 2 183 1 90 1 154 2 197 1 313 1 377 2 333 1 190 1 
361 2 281 1 106 2 28 1 183 1 154 4 287 1 57 1 5 1 313 2 377 4 190 2 161 1 
361 1 281 1 377 1 313 1 28 1 183 1 190 1 154 1 
361 3 40 1 106 2 28 2 183 2 154 4 287 1 377 4 313 1 124 1 335 1 190 1 161 1 220 1 
361 1 106 1 281 1 377 2 313 1 28 1 183 1 190 1 65 1 154 2 260 1 78 1 
361 1 40 2 281 1 377 3 313 1 28 1 183 1 335 2 190 1 154 3 272 1 220 1 
361 2 72 2 209 1 196 1 
32 1 281 1 377 1 313 1 190 1 154 1 
361 1 106 1 281 1 377 2 313 1 28 1 285 1 183 1 190 1 154 2 
323 1 
361 1 281 1 377 1 313 1 28 1 183 1 190 1 154 1 
361 1 106 1 281 1 40 1 28 1 285 1 183 1 154 3 313 1 377 3 190 1 
361 1 124 1 161 1 287 1 
361 1 183 1 

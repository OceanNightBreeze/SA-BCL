#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 230 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
267 9 289 2 290 1 71 1 269 2 25 6 98 1 196 1 197 1 153 1 11 2 158 2 159 1 182 1 323 1 324 1 279 4 258 5 371 1 261 9 207 3 173 1 188 1 121 2 68 1 234 1 174 2 148 2 
267 9 290 1 289 2 71 1 269 2 25 6 98 1 196 1 197 1 153 1 11 2 158 2 159 1 182 1 323 1 324 1 279 4 258 5 371 1 261 9 207 3 173 1 188 1 121 2 68 1 234 1 174 2 148 2 
267 10 290 1 289 2 71 1 269 2 25 7 98 1 196 1 197 1 153 1 11 2 158 2 159 1 182 1 323 1 324 1 279 5 258 6 371 1 261 10 207 4 173 1 188 1 121 2 68 1 234 1 174 2 148 2 
267 7 290 1 289 1 269 2 25 4 98 1 196 1 197 1 153 1 11 2 158 2 159 1 182 1 323 1 324 1 279 3 258 4 371 1 261 7 207 2 173 1 188 1 121 2 68 1 234 1 174 2 148 2 
267 4 289 2 71 1 324 1 269 1 279 2 25 3 258 3 371 1 261 4 207 1 173 1 11 1 121 1 68 1 158 1 234 1 174 1 
267 2 84 1 324 1 269 1 239 1 258 1 371 1 196 1 261 2 153 1 232 1 173 1 11 1 121 1 158 1 148 1 
267 3 324 1 269 2 279 1 25 1 258 2 371 1 261 3 207 1 173 1 188 1 158 2 148 1 
267 9 289 2 71 1 269 2 25 7 98 1 11 1 368 1 158 2 323 1 324 1 279 4 258 5 371 1 261 9 207 3 173 1 188 1 187 1 68 1 121 1 234 1 174 1 148 1 
267 9 289 2 71 1 269 2 25 7 98 1 11 1 368 1 158 2 323 1 324 1 279 4 258 5 371 1 261 9 207 3 173 1 188 1 187 1 68 1 121 1 234 1 174 1 148 1 
137 1 233 1 209 1 
209 1 296 2 103 1 
46 1 116 2 275 2 166 2 144 2 265 2 367 2 141 1 
176 1 192 1 193 1 24 1 151 1 2 1 367 3 244 1 31 1 12 1 130 1 275 2 320 1 202 1 370 1 163 2 133 1 255 1 256 2 205 1 166 3 111 1 229 2 141 1 169 1 327 2 353 1 46 1 116 2 332 1 208 1 144 2 265 2 67 2 122 1 378 1 266 1 
116 1 160 1 275 1 166 1 144 1 265 1 228 1 28 1 367 1 141 1 
124 1 360 1 309 1 137 1 166 1 228 1 367 1 284 1 30 1 79 1 119 1 209 1 144 1 221 1 
124 1 360 2 309 1 137 1 166 1 228 1 367 1 284 2 116 1 79 1 275 1 209 1 265 1 144 1 221 1 
360 1 126 1 143 1 334 1 284 1 
360 2 137 1 126 1 293 1 209 1 146 1 334 1 284 2 
360 1 126 1 284 1 
360 1 160 1 166 1 228 1 28 1 141 1 367 1 284 1 155 1 116 1 275 1 265 1 144 1 334 1 
209 1 
360 2 137 1 126 1 293 1 165 1 209 1 334 1 284 2 
360 5 125 1 268 1 137 1 293 1 126 2 257 1 167 1 168 1 284 5 54 1 65 2 89 2 7 2 118 1 209 1 69 1 345 1 334 2 
46 1 233 1 
166 2 367 2 340 1 46 2 116 1 120 1 275 1 144 2 265 1 
311 1 304 1 76 1 
0 1 24 1 255 1 151 1 166 1 2 1 229 1 367 1 327 1 46 1 332 1 130 1 67 1 320 1 378 1 122 1 
24 1 255 1 151 1 195 1 166 2 2 1 229 1 367 2 327 1 332 1 130 1 275 1 265 1 144 1 67 1 320 1 122 1 378 1 96 1 304 1 
213 1 195 1 166 5 367 5 218 1 46 1 116 1 119 1 120 1 275 4 265 4 144 5 251 1 96 2 
275 2 166 2 144 2 265 2 152 1 228 1 28 1 367 2 
46 1 116 1 275 3 166 3 144 3 265 3 96 1 367 3 
275 1 166 1 144 1 265 1 228 1 28 1 367 1 
340 1 116 1 120 1 275 1 166 1 144 1 265 1 228 1 367 1 
124 1 360 1 192 1 24 1 309 1 151 1 195 1 2 1 367 4 244 1 31 1 79 1 12 1 130 1 275 3 320 1 221 1 202 1 163 1 133 1 255 1 256 2 205 1 166 4 111 1 228 1 229 1 141 1 327 1 284 1 353 1 46 1 185 1 116 2 332 1 66 1 120 1 208 1 144 3 265 3 67 1 122 1 378 1 96 1 
46 1 119 1 275 1 166 2 144 2 265 1 251 1 96 1 367 2 
360 1 124 1 309 1 195 1 166 3 228 1 367 3 284 1 185 1 116 1 79 1 120 1 275 3 344 1 209 1 265 3 144 3 221 1 96 2 
311 1 166 2 367 2 116 1 120 1 275 2 265 2 144 2 96 1 304 1 
24 1 255 1 151 1 166 1 2 1 229 1 367 1 327 1 46 1 332 1 130 1 67 1 320 1 378 1 122 1 
24 1 255 1 310 1 151 1 166 1 2 1 229 1 367 1 327 1 285 1 46 1 130 1 67 1 378 1 122 1 
73 1 241 1 311 2 3 1 244 1 76 2 31 1 12 1 80 1 38 1 202 1 348 1 370 2 41 1 133 1 163 4 256 2 42 1 205 2 111 1 139 1 374 1 115 1 304 2 
275 1 166 1 144 1 265 1 221 1 152 1 228 1 367 1 
37 1 20 1 
37 1 20 1 
347 1 212 1 
347 1 212 1 
347 1 212 1 
37 1 217 1 20 1 
37 1 217 1 20 1 
216 1 37 1 20 1 
347 1 315 1 95 1 37 2 20 2 212 1 
37 1 217 1 20 1 
110 1 37 1 20 1 
110 1 37 1 20 1 
110 1 37 1 20 1 
360 1 361 1 85 1 166 2 100 1 216 1 281 1 367 2 284 1 339 1 300 1 46 1 32 1 314 1 246 1 34 1 275 2 144 2 265 2 355 1 37 1 20 1 60 1 288 1 
361 2 360 2 280 1 283 1 284 2 129 2 339 2 300 1 56 1 315 1 314 2 246 2 93 1 177 1 209 1 355 3 37 2 20 2 359 1 
11 1 121 1 174 1 
232 1 11 1 121 1 
232 1 247 1 365 1 121 3 174 2 223 1 
232 1 247 1 365 1 121 2 74 1 174 1 
232 1 247 2 365 1 121 2 174 1 
22 1 307 1 360 5 125 2 268 3 73 1 126 1 293 1 103 1 5 1 7 1 32 1 80 1 321 1 296 3 106 2 38 1 85 1 137 1 257 1 281 1 374 1 284 5 65 1 89 1 172 1 91 1 263 1 209 2 377 2 123 2 334 4 
307 2 360 9 125 6 268 8 73 3 292 5 126 6 293 1 215 1 103 3 29 1 5 1 7 2 80 3 321 3 345 1 296 9 106 6 38 3 254 1 161 1 137 1 257 1 281 4 374 3 284 9 231 1 65 2 89 2 114 1 263 2 143 5 209 5 123 6 334 7 
22 1 307 1 360 3 125 2 268 3 73 1 103 2 7 1 80 1 321 1 345 1 296 4 38 1 106 2 137 1 281 1 374 1 284 3 65 1 89 1 172 1 263 1 209 3 377 1 123 2 334 2 
22 1 307 1 360 4 125 4 268 5 73 2 215 1 103 3 29 1 7 1 80 2 321 2 296 7 345 1 106 4 38 2 254 1 137 1 281 2 374 2 284 4 65 1 89 1 172 1 263 1 209 4 377 2 123 4 334 3 
233 1 130 1 227 1 
57 1 130 1 
243 1 
255 1 130 1 122 1 
130 1 14 1 
130 1 122 1 
236 1 369 1 255 1 227 2 130 3 122 1 
348 3 15 1 370 4 163 7 73 1 164 1 205 3 3 2 43 1 329 1 45 1 338 1 9 1 186 1 38 1 346 2 305 1 
348 3 15 1 370 4 163 7 73 1 164 1 205 3 3 2 43 1 329 1 45 1 338 1 9 1 186 1 38 1 346 2 305 1 
348 3 15 1 370 4 163 7 73 1 164 1 205 3 3 2 43 1 326 1 338 1 329 1 45 1 9 1 186 1 38 1 346 2 305 1 
73 4 49 3 242 1 3 5 338 1 31 1 9 1 58 1 33 1 12 1 80 3 321 3 131 1 346 3 38 4 202 1 348 10 15 2 133 1 135 4 163 31 370 16 164 1 256 2 205 15 43 2 170 1 374 3 45 1 113 1 329 2 186 5 354 1 305 2 
291 1 73 1 3 3 338 1 31 2 9 1 12 2 38 1 346 2 202 2 348 4 15 1 133 2 163 9 370 5 256 4 205 4 43 1 170 1 328 1 329 1 45 1 186 1 305 1 
267 2 269 1 25 1 151 1 337 1 101 1 53 1 8 1 295 1 199 1 11 1 158 1 223 1 324 1 138 1 258 1 371 1 229 1 87 1 261 2 327 1 331 1 232 1 173 1 67 1 121 2 378 1 210 1 174 1 148 1 
267 3 269 1 25 2 151 1 337 1 101 1 295 1 199 1 11 1 156 1 178 1 158 1 223 1 138 1 258 1 371 1 229 1 87 1 261 3 327 1 331 1 232 1 173 1 67 1 121 2 378 1 210 1 174 1 358 1 148 1 
267 2 25 2 151 1 337 1 101 1 295 1 11 1 178 1 223 1 138 1 258 1 371 1 229 1 87 1 261 2 327 1 232 1 173 1 67 1 121 2 378 1 210 1 358 1 174 1 148 1 
267 1 240 1 269 1 151 1 2 1 295 2 220 1 130 1 156 1 158 1 82 1 229 1 87 2 261 1 327 1 64 1 67 1 94 1 122 1 378 1 210 2 335 1 148 2 
267 1 269 1 151 1 337 1 101 1 8 1 295 1 199 1 11 1 158 1 223 1 324 1 138 1 229 1 87 1 261 1 327 1 331 1 232 1 67 1 121 2 378 1 210 1 174 1 358 1 148 1 
190 1 
97 2 293 3 151 1 2 2 52 1 103 2 7 1 343 1 200 1 296 2 13 4 109 1 297 1 257 1 351 2 166 1 112 2 206 2 64 1 65 1 119 1 263 1 209 2 67 2 122 1 356 1 360 5 124 1 125 2 268 2 214 1 309 1 126 6 128 1 367 1 273 1 274 1 30 1 79 1 130 1 221 1 277 1 278 2 137 1 325 2 229 2 228 1 372 2 327 2 284 5 89 1 94 1 144 1 145 1 378 1 
124 1 360 3 109 1 297 1 214 1 309 1 293 1 126 2 165 1 166 1 228 1 206 1 128 1 367 1 284 3 30 1 79 1 119 1 144 1 221 1 356 1 13 2 
360 3 124 1 97 1 214 1 309 1 126 1 293 1 367 1 128 1 30 1 79 1 221 1 13 3 109 1 297 1 137 1 165 1 166 1 228 1 284 3 119 1 144 1 209 1 356 1 
360 3 124 1 97 1 214 1 309 1 293 1 126 2 367 1 128 1 30 1 79 1 221 1 13 3 109 1 297 1 137 1 165 1 166 1 228 1 372 1 206 1 284 3 119 1 144 1 209 1 356 1 
97 4 293 3 99 1 103 2 7 1 105 1 13 6 109 1 62 1 297 1 165 1 257 1 166 1 351 2 112 2 206 4 65 1 119 1 209 5 356 1 124 1 360 5 125 1 268 1 214 1 309 1 126 7 367 1 128 1 273 1 30 1 79 1 221 1 277 1 278 2 137 5 325 2 228 1 372 4 284 5 184 1 89 1 144 1 191 1 
97 2 293 2 103 2 7 1 296 2 13 4 109 1 297 1 257 1 166 1 351 2 112 2 206 2 65 1 119 1 209 2 356 1 124 1 360 4 125 1 268 1 214 1 309 1 126 4 367 1 128 1 273 1 30 1 79 1 221 1 277 1 278 2 325 2 137 1 228 1 372 2 284 4 89 1 144 1 145 1 
360 4 124 1 97 2 125 1 268 1 214 1 309 1 126 4 293 2 367 1 128 1 103 2 273 1 30 1 7 1 79 1 221 1 105 1 13 4 277 1 109 1 62 1 278 2 297 1 137 1 325 2 257 1 351 2 166 1 228 1 112 2 206 2 372 2 284 4 65 1 89 1 119 1 209 1 144 1 356 1 191 1 
360 4 124 1 97 2 125 1 268 1 214 1 309 1 126 4 293 2 367 1 128 1 103 2 273 1 30 1 7 1 79 1 221 1 105 1 13 4 277 1 109 1 62 1 278 2 297 1 137 1 325 2 257 1 351 2 166 1 228 1 112 2 206 2 372 2 284 4 65 1 89 1 119 1 209 1 144 1 356 1 191 1 
124 1 360 2 109 1 297 1 214 1 309 1 166 1 228 1 128 1 367 1 230 1 284 2 30 1 79 1 119 1 144 1 221 1 356 1 13 2 
360 4 124 1 125 1 97 3 268 1 214 1 309 1 293 2 126 5 99 1 367 1 128 1 103 2 273 1 30 1 7 1 79 1 221 1 105 1 13 5 277 1 109 1 62 1 278 2 297 1 137 1 325 2 257 1 351 2 166 1 228 1 112 2 372 3 206 3 284 4 65 1 89 1 119 1 209 1 144 1 356 1 191 1 
360 4 124 1 125 1 97 3 268 1 214 1 309 1 293 2 126 5 99 1 367 1 128 1 103 2 273 1 30 1 7 1 79 1 221 1 105 1 13 5 277 1 109 1 62 1 278 2 297 1 137 1 325 2 257 1 351 2 166 1 228 1 112 2 372 3 206 3 284 4 65 1 89 1 119 1 209 1 144 1 356 1 191 1 
360 2 124 1 1 1 125 1 268 1 214 1 309 1 128 1 367 1 273 1 30 1 7 1 79 1 221 1 13 2 109 1 297 1 325 1 257 1 351 1 166 1 228 1 284 2 65 1 89 1 119 1 144 1 356 1 
73 1 311 1 3 2 244 1 76 1 338 1 31 1 9 1 12 1 38 1 346 1 202 1 348 2 15 1 133 1 370 3 163 6 256 2 205 3 111 1 139 1 43 1 45 1 46 2 233 1 304 1 
73 1 49 3 311 4 3 1 244 2 76 11 198 1 31 2 58 1 12 2 80 2 321 2 249 1 38 2 202 2 39 1 348 2 135 3 133 2 163 14 370 8 256 4 205 6 111 1 86 1 374 1 113 1 46 1 186 1 92 1 208 1 304 11 266 1 
0 1 24 1 72 1 151 1 195 1 311 1 2 1 367 2 244 1 31 1 12 1 130 1 275 1 320 1 202 1 133 1 163 2 370 1 255 1 256 2 166 2 205 1 111 1 229 1 86 1 282 1 327 1 46 1 18 1 332 1 208 1 67 1 144 1 265 1 122 1 378 1 96 1 266 1 
192 2 195 1 151 2 3 4 2 1 244 3 338 1 294 2 9 1 12 3 248 1 346 1 202 3 348 8 15 1 163 20 255 2 256 6 205 10 166 3 111 3 208 1 67 3 265 1 122 2 303 1 358 1 304 7 266 1 24 2 73 3 311 7 75 2 367 3 76 7 31 3 80 2 275 1 130 2 320 2 321 2 38 3 179 2 83 2 133 3 370 10 43 1 229 3 86 1 327 3 374 2 45 1 46 2 186 4 332 2 144 1 378 2 96 1 147 1 
308 1 23 1 193 2 151 2 2 2 367 1 244 2 53 1 31 2 12 2 275 1 130 3 36 1 202 2 40 1 133 2 370 1 163 2 256 4 166 1 205 1 139 1 111 2 260 1 229 8 299 1 327 8 64 1 301 1 208 1 144 1 265 1 67 7 94 1 378 2 122 2 96 1 358 1 266 1 
73 1 311 1 3 1 367 1 244 1 76 1 31 1 12 1 80 1 275 1 321 1 38 1 202 1 348 1 133 1 370 1 163 3 256 2 166 1 205 2 111 1 86 1 259 1 374 1 116 1 120 1 265 1 144 1 304 1 
202 1 348 1 163 2 133 1 370 2 241 1 256 2 311 1 139 1 111 1 244 1 76 1 31 1 186 1 12 1 80 1 38 1 304 1 
202 1 348 1 163 2 133 1 41 1 73 1 256 2 311 1 205 2 3 1 139 1 111 1 244 1 76 1 374 1 31 1 12 1 304 1 
202 1 348 2 163 4 133 1 370 2 73 1 256 2 205 2 311 2 3 1 139 1 111 1 244 1 374 1 76 2 31 1 186 1 12 1 80 1 321 1 38 1 304 2 
202 1 348 1 40 1 163 2 133 1 370 2 241 1 256 2 311 1 111 1 244 1 76 1 31 1 186 1 12 1 80 1 38 1 304 1 
202 1 348 1 40 1 163 2 133 1 41 1 73 1 256 2 311 1 205 2 3 1 111 1 244 1 76 1 374 1 31 1 12 1 304 1 
202 1 348 2 40 1 163 4 133 1 370 2 73 1 256 2 205 2 311 2 3 1 111 1 244 1 374 1 76 2 31 1 186 1 12 1 80 1 321 1 38 1 304 2 
202 1 348 2 133 1 370 2 163 4 73 1 256 2 205 2 311 2 3 1 111 1 244 1 374 1 76 2 31 1 186 1 12 1 80 1 321 1 38 1 304 2 
192 1 24 1 151 1 2 1 367 1 244 1 31 1 12 1 130 1 320 1 202 1 370 1 163 2 133 1 255 1 256 2 166 1 205 1 111 1 229 1 327 1 46 1 332 1 208 1 67 1 122 1 378 1 266 1 
24 1 151 1 310 1 364 1 2 1 367 1 244 1 31 1 12 1 130 1 202 1 370 1 163 2 133 1 255 1 256 2 166 1 205 1 111 1 229 1 327 1 285 1 46 1 208 1 67 1 122 1 378 1 266 1 
202 1 348 2 163 4 133 1 370 2 73 1 256 2 205 2 311 2 3 1 111 1 86 1 244 1 374 1 76 2 31 1 186 1 12 1 80 1 321 1 38 1 304 2 
192 1 24 1 73 1 151 1 311 2 3 1 367 1 244 1 76 2 53 1 31 1 80 1 12 1 130 1 320 1 321 1 38 1 179 1 202 1 348 2 163 4 370 2 133 1 255 1 256 2 205 2 166 1 111 1 229 1 327 1 374 1 186 1 332 1 67 1 378 1 122 1 304 2 
175 1 73 1 311 1 367 1 244 1 76 1 31 1 12 1 80 1 275 1 321 1 38 1 202 1 348 1 133 1 370 2 163 3 256 2 205 1 166 1 111 1 86 1 374 1 116 1 186 1 120 1 265 1 144 1 304 1 
291 1 73 3 49 1 26 1 3 3 4 1 31 2 55 2 78 1 58 1 341 2 12 2 80 3 321 3 38 3 202 2 348 6 135 2 133 2 163 19 370 9 256 4 205 10 44 1 262 1 88 1 374 3 113 1 375 1 186 3 
149 1 291 1 73 2 49 2 27 1 3 2 4 2 31 3 55 1 77 1 104 1 58 2 10 1 341 4 12 3 80 3 321 3 38 3 202 3 348 4 133 3 163 26 370 14 135 2 256 6 205 12 44 1 262 1 170 2 88 2 374 2 375 1 186 2 211 1 
149 1 291 1 73 5 49 3 26 1 27 1 3 4 4 2 338 1 31 3 55 1 77 1 104 1 9 1 10 1 58 3 341 4 12 3 80 4 321 4 346 1 38 5 202 3 348 8 15 1 135 4 133 3 163 41 370 20 256 6 205 21 43 1 44 1 262 1 170 1 88 1 374 4 45 1 113 1 375 1 186 4 189 1 211 1 
149 1 291 1 73 4 49 3 26 1 27 1 3 4 4 2 338 1 31 4 55 1 77 1 104 1 9 1 10 1 58 3 341 4 12 4 80 4 321 4 346 1 38 5 202 4 348 7 15 1 135 4 133 4 163 38 370 20 256 8 205 18 43 1 44 1 262 1 170 2 88 1 374 3 45 1 113 1 375 1 186 3 189 1 211 1 
149 1 291 1 73 8 49 4 27 1 3 7 4 1 338 1 31 2 55 1 77 1 104 1 9 1 10 1 58 2 341 4 12 2 80 7 321 7 346 1 38 8 202 2 39 2 348 14 15 1 135 4 133 2 163 52 370 27 256 4 205 25 43 1 44 1 262 1 170 1 88 1 374 7 45 1 113 2 375 1 186 7 211 1 
339 1 361 1 56 1 315 1 314 1 246 1 270 1 37 1 283 1 20 1 
216 1 288 1 
339 1 361 1 314 1 316 1 246 1 250 1 37 1 20 1 352 1 
47 1 217 1 
95 1 110 1 102 1 
360 1 361 1 280 1 283 1 284 1 129 1 339 1 300 1 56 1 315 1 314 1 246 1 93 1 209 1 355 2 37 1 20 1 359 1 
360 1 361 1 280 1 283 1 284 1 129 1 339 1 300 1 56 1 315 1 314 1 246 1 93 1 209 1 355 2 37 1 20 1 359 1 
360 1 361 1 280 1 283 1 284 1 129 1 339 1 300 1 56 1 315 1 314 1 246 1 93 1 209 1 355 2 37 1 20 1 359 1 
47 1 95 1 217 1 
47 1 95 1 217 1 
110 1 102 1 
95 1 110 1 102 1 
34 1 60 1 
361 1 360 1 85 1 166 2 100 1 216 1 281 1 367 2 284 1 129 1 339 1 46 1 32 1 314 1 246 1 275 2 34 1 144 2 265 2 287 1 355 1 37 1 334 1 20 1 60 1 359 1 288 1 
23 1 193 2 151 1 367 2 244 1 31 1 219 1 12 1 130 1 276 1 180 1 181 1 202 1 133 1 370 1 163 2 256 2 166 2 205 1 111 1 229 2 86 1 299 1 327 2 208 1 144 2 67 2 378 1 122 1 302 1 266 1 
151 1 50 1 138 1 229 2 101 1 327 2 53 1 232 1 90 1 199 1 11 1 67 2 121 2 378 1 210 1 174 1 358 1 223 1 21 1 
350 1 50 1 151 1 138 1 229 1 101 1 327 1 232 1 199 1 11 1 67 1 121 2 378 1 210 1 174 1 358 1 223 1 
151 1 298 1 2 1 229 1 327 1 64 1 90 1 130 1 67 1 94 1 378 1 122 1 210 1 335 1 
151 1 50 1 138 1 229 1 101 1 327 1 232 1 90 1 199 1 11 1 67 1 121 2 378 1 210 1 174 1 358 1 223 1 21 1 
150 1 
54 1 125 1 268 1 137 1 233 1 209 1 167 1 
360 1 125 1 268 1 293 1 126 1 103 1 7 1 296 1 277 1 278 1 137 1 257 1 112 1 284 1 65 1 89 1 209 2 
236 1 194 2 293 3 151 4 2 1 103 6 53 1 54 1 6 1 7 4 57 3 157 2 296 12 106 6 14 2 255 3 257 4 167 1 65 4 19 2 263 2 67 3 209 8 122 3 123 6 357 2 306 1 360 5 362 2 125 8 268 9 309 2 73 2 126 5 274 1 312 2 317 1 80 2 130 10 321 2 35 2 38 2 83 2 322 2 224 1 137 2 227 2 229 3 327 3 284 5 374 2 89 4 376 1 378 3 
70 1 360 1 149 1 125 5 268 8 73 2 126 1 293 1 49 1 27 1 103 3 274 1 7 2 104 1 58 1 10 1 80 2 321 2 35 1 296 6 106 5 38 2 135 1 137 2 257 2 17 1 284 1 374 2 65 2 89 2 263 1 209 5 123 5 357 2 211 1 
360 1 125 2 268 2 73 1 28 1 367 1 7 1 155 1 9 1 275 1 35 1 105 1 38 2 107 1 15 1 160 1 257 1 166 1 43 1 228 1 141 1 284 1 65 1 89 1 116 1 265 1 144 1 357 2 
125 1 268 1 137 1 257 1 167 1 65 1 54 1 89 1 7 1 209 1 
125 5 268 5 73 2 103 5 374 2 80 2 209 5 321 2 35 1 123 5 296 10 357 2 38 2 106 5 83 1 
360 1 137 1 126 1 293 1 209 1 284 1 
360 3 125 2 268 2 126 4 293 2 151 1 2 2 51 1 52 1 274 2 6 1 7 2 317 2 130 1 200 1 345 1 225 1 257 1 229 4 327 4 64 1 284 3 65 2 89 2 263 2 67 4 94 1 378 1 122 1 
192 1 24 1 151 1 2 1 367 3 244 1 31 1 12 1 275 2 130 1 320 1 202 1 163 1 133 1 255 1 256 2 205 1 166 3 111 1 229 1 141 1 327 1 353 1 46 1 116 2 332 1 208 1 67 1 144 2 265 2 378 1 122 1 
125 2 268 1 137 2 257 1 103 2 274 1 65 1 89 1 7 1 263 1 209 4 296 4 123 2 346 1 106 2 
339 1 314 1 171 1 
339 1 314 1 171 1 
339 1 56 1 314 1 272 1 60 1 
339 1 314 1 171 1 
339 1 314 1 134 1 
339 1 314 1 134 1 
339 1 314 1 134 1 
339 1 314 1 
37 1 20 1 
202 2 348 3 15 1 163 8 370 4 133 2 73 1 256 4 205 4 3 2 43 1 170 1 45 1 338 1 31 2 9 1 186 1 12 2 346 1 38 1 
348 2 15 1 370 3 163 6 73 1 205 3 43 1 3 2 45 1 338 1 9 1 233 1 346 1 38 1 
202 1 348 2 133 1 370 2 163 4 73 1 136 1 256 2 205 2 3 1 374 1 31 1 186 1 12 1 80 1 321 1 38 1 
348 2 135 2 163 7 370 3 73 1 49 1 205 4 3 1 374 1 113 1 58 1 186 1 80 1 321 1 38 1 
73 3 49 2 3 5 127 1 338 1 198 1 31 2 9 1 80 2 12 2 321 2 346 1 38 3 202 2 348 9 39 1 15 2 370 11 163 23 135 2 133 2 256 4 205 12 43 2 170 2 374 2 45 1 113 1 186 4 
163 1 135 1 205 1 
163 1 370 1 49 1 
202 1 348 3 133 1 163 6 370 3 136 1 73 1 256 2 205 3 3 2 374 1 31 1 186 1 12 1 80 1 321 1 38 1 83 1 
149 1 291 1 73 2 49 1 27 1 3 1 31 1 104 1 58 1 10 1 12 1 80 2 321 2 38 2 202 1 348 2 163 12 135 1 133 1 370 6 256 2 205 6 374 2 186 1 211 1 
348 2 15 1 370 3 163 6 73 1 205 3 43 1 3 1 9 1 186 1 38 1 
202 1 348 2 15 1 370 1 163 3 133 1 256 2 205 2 3 1 43 1 127 1 170 1 338 1 45 1 31 1 186 1 12 1 
202 1 348 5 15 2 133 1 291 1 370 5 163 10 73 2 256 2 205 5 43 2 3 3 31 1 186 2 9 1 12 1 38 2 107 1 
202 1 348 1 291 1 133 1 370 2 163 2 256 2 31 1 186 1 12 1 80 1 38 1 
202 1 348 2 291 1 133 1 370 2 163 4 73 1 256 2 205 2 3 1 374 1 31 1 186 1 12 1 80 1 321 1 38 1 
202 3 348 2 15 1 163 3 291 1 133 3 370 1 26 1 256 6 205 2 43 1 3 1 127 1 170 1 31 3 186 1 12 3 
291 1 73 5 49 3 242 1 26 1 3 7 127 1 338 1 31 5 9 2 58 1 33 1 12 5 80 3 131 1 321 3 346 1 38 5 202 5 348 12 15 3 135 4 133 5 163 34 370 16 136 1 256 10 205 18 43 3 170 2 374 3 45 1 113 1 186 5 
149 1 291 1 73 1 49 1 3 2 338 1 31 1 58 1 9 1 12 1 346 1 38 1 202 1 348 2 15 1 163 8 135 1 133 1 370 4 256 2 205 4 43 1 45 1 
149 1 291 1 73 1 49 1 3 2 338 1 31 2 9 1 58 1 12 2 80 1 321 1 346 1 38 2 202 2 348 3 15 1 163 11 135 2 133 2 370 6 136 1 256 4 205 5 43 1 45 1 113 1 186 1 
149 1 291 1 73 3 49 1 27 1 3 3 338 1 31 3 104 1 9 1 58 1 10 1 12 3 80 2 321 2 346 1 38 3 202 3 348 4 15 1 163 19 135 1 133 3 370 9 136 1 256 6 205 10 43 1 170 1 374 2 45 1 186 1 211 1 
149 1 291 1 73 2 49 1 27 1 3 3 338 1 31 3 104 1 9 1 58 1 10 1 12 3 80 2 321 2 346 1 38 3 202 3 348 5 15 1 163 17 135 1 133 3 370 10 136 1 256 6 205 7 43 1 170 1 374 1 45 1 186 2 211 1 
149 1 291 1 73 1 49 1 3 2 338 1 31 1 58 1 9 1 12 1 346 1 38 1 202 1 348 2 15 1 163 8 135 1 133 1 370 4 256 2 205 4 43 1 45 1 
149 1 291 1 73 2 49 1 27 1 3 1 31 1 104 1 58 1 10 1 12 1 80 2 321 2 38 2 202 1 348 2 163 12 135 1 133 1 370 6 256 2 205 6 374 2 186 1 211 1 
149 1 291 1 73 2 49 1 27 1 3 3 338 1 31 4 104 1 9 1 58 1 10 1 12 4 80 2 321 2 346 1 38 3 202 4 348 5 15 1 163 18 135 1 133 4 370 10 136 1 256 8 205 8 43 1 170 2 374 1 45 1 186 2 211 1 
149 1 291 1 73 2 49 1 26 1 27 1 3 3 31 4 104 1 58 1 10 1 12 4 80 3 321 3 38 3 202 4 348 6 163 16 135 1 133 4 370 9 256 8 205 7 170 2 374 2 186 3 211 1 
348 6 15 3 163 7 370 3 73 1 205 4 43 3 3 3 45 1 338 2 186 3 9 1 38 1 
149 1 291 1 73 2 49 1 26 1 27 1 3 3 338 1 31 4 104 1 9 1 58 1 10 1 12 4 80 2 321 2 346 1 38 3 202 4 348 4 15 1 163 18 135 1 133 4 370 10 256 8 205 8 43 1 170 2 374 1 45 1 186 1 211 1 
46 1 119 1 166 1 144 1 251 1 367 1 59 1 
203 1 48 1 166 1 367 1 46 1 119 1 286 1 333 1 144 1 251 1 336 1 59 1 
233 1 151 1 130 1 94 1 67 1 2 1 378 1 122 1 229 1 64 1 327 1 
24 1 255 1 151 1 166 2 2 1 229 1 367 2 327 1 46 1 332 1 130 1 275 1 265 1 144 1 67 1 122 1 378 1 96 1 
124 1 24 1 194 1 255 2 151 1 166 2 228 1 229 1 367 2 327 1 46 1 317 1 332 1 130 3 275 1 265 2 144 2 67 1 221 1 122 2 378 1 96 1 14 1 
124 1 24 1 194 1 151 1 367 2 317 1 275 1 130 3 221 1 14 1 255 2 349 1 166 2 229 2 228 1 327 2 285 1 46 1 67 2 144 2 265 2 378 1 122 2 96 1 
360 2 309 1 126 1 194 1 151 1 2 1 57 1 317 1 130 4 253 1 14 1 255 1 137 1 349 1 227 1 229 3 327 3 284 2 330 1 67 3 209 1 378 1 122 1 
360 2 309 1 137 1 255 1 194 1 126 1 349 1 151 1 227 1 2 1 229 3 327 3 284 2 19 1 57 1 317 1 130 4 209 1 67 3 122 1 378 1 14 1 
301 1 151 1 67 1 378 1 229 1 327 1 
308 1 236 1 193 1 255 1 151 3 2 2 260 1 229 7 366 1 299 1 327 7 142 1 313 1 53 1 301 1 130 3 67 6 36 1 122 2 378 2 358 1 
192 1 24 1 73 1 151 1 311 1 3 2 75 1 367 2 244 2 76 1 338 1 53 1 31 2 9 1 12 2 130 1 275 1 320 1 346 1 38 1 179 1 202 2 348 2 15 1 163 6 370 3 133 2 255 1 256 4 205 3 166 2 43 1 111 2 86 1 229 1 327 1 45 1 46 2 332 1 144 1 265 1 67 1 122 1 378 1 302 1 96 1 304 1 
360 3 362 1 125 1 268 1 309 1 126 2 293 1 2 1 312 1 54 1 6 1 7 2 57 1 130 2 322 1 137 1 257 2 227 1 167 1 229 1 327 1 284 3 65 2 89 2 19 1 209 1 67 1 334 1 
236 1 224 1 255 1 227 1 151 2 229 2 327 2 53 1 301 1 130 2 67 2 122 1 378 1 
349 1 151 1 2 1 229 4 327 4 64 1 53 1 130 1 67 4 94 1 122 1 378 1 235 1 
61 1 237 1 255 1 151 2 229 2 366 1 327 2 313 1 317 1 130 1 67 2 122 1 378 1 147 1 
232 1 11 1 151 1 67 1 121 1 2 1 378 1 229 1 101 1 327 1 
181 1 151 1 229 2 299 1 327 2 53 1 130 1 67 2 122 1 378 1 358 1 
151 2 2 1 229 5 260 1 299 1 64 1 327 5 53 1 317 1 130 3 94 1 67 4 36 1 122 2 378 2 235 1 
151 2 2 1 229 5 260 1 299 1 64 1 327 5 53 1 317 1 130 3 94 1 67 4 319 1 122 2 378 2 235 1 
24 1 255 1 151 1 166 2 2 1 229 1 367 2 327 1 285 1 46 1 130 1 275 1 265 1 144 1 67 1 122 1 378 1 96 1 
236 1 255 1 151 2 229 1 366 1 327 1 142 1 313 1 317 1 130 1 67 1 122 1 378 1 
46 1 154 1 363 1 132 1 204 1 
124 1 360 2 204 1 132 2 363 2 309 1 137 1 183 1 228 1 245 1 284 2 46 1 154 2 185 1 79 1 209 1 221 1 334 1 81 1 
132 1 204 1 166 1 367 1 154 1 219 1 144 1 276 1 180 1 
204 1 81 1 245 1 
173 1 233 1 258 1 371 1 
267 1 173 1 269 1 258 1 371 1 158 1 261 1 
267 1 295 1 148 1 
267 3 324 1 269 1 271 1 258 1 196 2 371 1 261 3 318 1 173 1 201 1 158 1 
267 2 289 1 173 1 269 1 25 1 258 1 371 1 158 1 261 2 
267 1 324 1 11 1 279 1 269 1 121 1 258 1 234 1 158 1 174 1 261 1 
267 1 324 1 269 1 258 1 371 1 158 1 261 1 
267 1 324 1 173 1 269 1 371 2 158 1 261 1 
108 1 267 2 238 1 324 1 162 1 269 2 258 1 371 1 158 2 261 2 
267 3 323 1 324 1 269 1 279 1 25 2 98 1 258 2 371 1 261 3 207 1 173 1 158 1 
267 2 63 1 324 1 269 1 25 1 258 1 371 1 261 2 232 1 173 1 11 1 121 2 158 1 174 1 223 1 
267 4 289 1 324 1 71 1 269 2 279 1 25 2 258 2 371 1 261 4 207 1 173 1 158 2 
267 1 324 1 173 1 269 1 258 1 371 1 158 1 261 1 
267 4 269 1 279 1 25 2 258 3 196 1 371 2 261 4 207 1 318 1 173 2 201 1 158 1 222 1 
267 2 117 1 324 1 173 1 187 1 269 1 25 1 258 1 371 1 158 1 261 2 373 1 
267 3 324 1 269 1 258 1 196 2 371 1 261 3 318 2 173 1 264 1 201 1 158 1 
16 1 342 2 226 1 258 2 
267 1 324 1 269 1 140 1 158 1 261 1 
267 2 324 1 173 1 269 1 25 1 98 1 258 1 371 1 158 1 261 2 
252 1 
267 1 324 1 173 1 269 1 258 1 371 1 158 1 261 1 
267 3 324 1 173 1 269 1 25 1 98 1 258 1 371 1 196 1 158 1 261 3 
279 1 258 1 222 1 207 1 
258 1 371 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 342 (158,251,359) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
89 2 2 1 227 2 361 1 199 2 145 3 311 4 3 2 364 9 70 1 314 1 231 1 366 9 31 1 33 1 100 1 47 1 124 1 209 1 254 2 49 2 321 6 353 1 55 5 133 1 328 1 215 2 285 1 
89 2 2 1 227 2 361 1 199 2 145 3 311 4 3 2 364 9 70 1 314 1 231 1 366 9 31 1 33 1 100 1 47 1 124 1 209 1 254 2 49 2 321 6 353 1 55 5 133 1 328 1 215 2 285 1 
89 2 2 1 227 2 361 1 199 2 145 4 311 5 3 2 364 10 70 1 314 1 231 1 366 10 31 1 33 1 100 1 47 1 124 1 209 1 254 2 49 2 321 7 353 1 55 6 133 1 328 1 215 2 285 1 
89 2 2 1 227 1 361 1 199 2 145 2 311 3 3 2 364 7 70 1 314 1 231 1 366 7 31 1 33 1 100 1 47 1 124 1 209 1 254 2 49 2 321 4 353 1 55 4 133 1 215 2 285 1 
254 1 49 1 89 1 321 3 2 1 227 2 199 1 145 1 311 2 55 3 328 1 215 1 364 4 314 1 366 4 33 1 47 1 124 1 
254 1 89 1 88 1 2 1 132 1 199 1 55 1 3 1 215 1 364 2 70 1 314 1 231 1 366 2 368 1 124 1 
254 2 321 1 2 1 145 1 311 1 55 2 3 1 215 2 364 3 314 1 366 3 31 1 124 1 
89 1 2 1 227 2 361 1 199 1 145 3 311 4 3 1 364 9 314 1 366 9 31 1 100 1 33 1 47 1 124 1 254 2 49 1 321 7 129 1 55 5 328 1 215 2 162 1 
89 1 2 1 227 2 361 1 199 1 145 3 311 4 3 1 364 9 314 1 366 9 31 1 100 1 33 1 47 1 124 1 254 2 49 1 321 7 129 1 55 5 328 1 215 2 162 1 
267 1 343 1 14 1 
267 1 265 2 17 1 
309 2 193 1 218 2 194 2 272 1 357 2 40 2 176 2 
309 2 193 1 194 2 201 1 69 1 312 1 208 1 7 2 45 2 174 1 272 1 316 1 296 2 99 1 176 2 12 1 299 1 298 1 103 1 320 2 258 1 153 1 236 1 324 1 105 1 81 1 241 1 217 1 218 3 357 3 40 2 23 1 160 1 24 2 165 1 114 1 113 1 
309 1 193 1 218 1 194 1 357 1 40 1 176 1 170 1 78 1 151 1 
267 1 278 1 194 1 170 1 171 1 262 1 343 1 218 1 120 1 357 1 61 1 347 1 163 1 289 1 
267 1 309 1 278 2 194 1 170 1 262 1 343 1 218 1 120 2 176 1 40 1 357 1 61 1 163 1 289 1 
278 1 128 1 120 1 367 1 205 1 
267 1 278 2 343 1 128 1 120 2 179 1 4 1 205 1 
278 1 128 1 120 1 
309 1 56 1 193 1 278 1 218 1 194 1 120 1 357 1 40 1 176 1 170 1 78 1 151 1 205 1 
267 1 
267 1 278 2 343 1 128 1 120 2 305 1 179 1 205 1 
267 1 278 5 87 2 126 2 279 1 27 1 182 1 128 2 79 1 154 1 205 2 94 2 343 1 29 1 157 1 120 5 138 1 179 1 334 1 
14 1 272 1 
309 1 194 2 246 1 375 1 218 2 272 2 357 2 176 1 40 1 
6 1 257 1 372 1 
351 1 324 1 69 1 312 1 217 1 218 1 7 1 45 1 208 1 272 1 357 1 12 1 298 1 299 1 165 1 24 1 
194 1 372 1 324 1 69 1 312 1 217 1 218 2 208 1 7 1 45 1 12 1 176 1 40 1 357 2 299 1 122 1 298 1 165 1 24 1 41 1 
309 1 218 3 194 3 272 1 357 3 40 3 176 3 122 1 
218 1 194 1 357 1 40 1 176 1 170 1 78 1 
309 1 218 1 194 1 357 1 40 1 176 1 170 1 246 1 375 1 
309 2 193 1 194 3 201 1 246 1 170 1 69 1 312 1 208 1 7 1 45 1 272 1 120 1 296 1 99 1 12 1 176 3 299 1 298 1 122 1 103 1 278 1 320 2 258 1 236 1 238 1 324 1 81 1 262 1 217 1 218 4 357 4 40 3 23 1 284 1 160 1 61 1 163 1 165 1 24 1 114 1 113 1 289 1 41 1 
218 2 194 2 272 1 357 2 40 1 176 1 274 1 122 1 347 1 
309 1 267 1 278 1 194 3 53 1 238 1 246 1 170 1 262 1 218 3 120 1 176 3 40 3 357 3 122 2 61 1 163 1 41 1 289 1 
309 1 194 2 257 1 372 1 246 1 218 2 176 2 40 2 357 2 122 1 
324 1 69 1 312 1 217 1 218 1 7 1 45 1 208 1 272 1 357 1 12 1 298 1 299 1 165 1 24 1 
69 1 312 1 217 1 218 1 7 1 45 1 208 1 272 1 357 1 12 1 121 1 299 1 192 1 165 1 24 1 
225 1 90 1 293 1 6 2 174 2 99 1 296 4 276 1 320 2 257 2 258 1 372 2 106 1 80 1 186 1 240 1 81 1 332 1 23 2 60 1 160 1 286 1 114 1 113 1 
262 1 218 1 194 1 9 1 357 1 40 1 176 1 170 1 
309 1 142 1 194 5 246 1 218 5 232 1 272 1 176 4 40 4 357 5 274 1 122 2 347 1 41 1 
218 2 194 2 9 1 357 2 40 2 176 2 170 1 78 1 
36 1 251 1 
36 1 251 1 
158 1 342 1 
158 1 342 1 
158 1 342 1 
36 1 197 1 251 1 
36 1 197 1 251 1 
158 1 36 1 251 1 342 1 
359 1 36 1 251 1 
36 1 197 1 251 1 
26 1 36 1 251 1 
26 1 36 1 251 1 
26 1 36 1 251 1 
267 1 152 2 278 2 66 1 36 2 259 1 68 2 325 1 374 1 206 2 92 1 82 2 120 2 356 1 308 1 344 1 251 2 150 3 335 2 
0 1 194 2 359 1 360 1 67 1 196 1 68 1 272 1 120 1 176 2 344 1 251 1 150 1 178 1 152 1 278 1 36 1 18 1 134 1 82 1 218 2 40 2 357 2 335 1 
49 1 89 1 199 1 
89 1 199 1 368 1 
49 2 89 3 111 1 85 1 368 1 125 1 
49 1 89 2 300 1 111 1 368 1 125 1 
49 1 89 2 111 1 368 1 125 2 
267 2 0 1 87 1 27 2 225 1 90 1 67 1 228 1 146 1 205 4 94 1 343 1 120 5 276 1 179 1 101 1 126 1 278 5 52 1 279 3 128 1 37 1 17 1 183 1 18 1 260 2 185 1 265 3 60 1 381 2 334 1 244 2 
267 5 87 2 27 6 225 3 90 3 67 4 228 2 205 7 94 2 207 1 343 1 97 1 120 9 367 5 276 3 179 1 278 9 126 2 35 1 52 2 279 8 182 1 128 6 17 3 183 1 239 1 260 6 185 3 155 1 135 1 265 9 60 3 379 5 381 6 334 1 
267 3 87 1 27 2 225 1 90 1 67 1 228 1 205 2 146 1 94 1 343 1 120 3 276 1 101 1 126 1 278 3 52 1 279 3 182 1 17 2 185 1 260 2 265 4 60 1 244 1 381 2 
267 4 87 1 27 4 225 2 90 2 67 2 228 1 146 1 205 3 94 1 343 1 120 4 276 2 101 1 126 1 278 4 35 1 52 1 279 5 182 1 17 3 239 1 260 4 185 2 135 1 265 7 60 2 381 4 244 2 
14 1 253 1 69 1 
275 1 69 1 
131 1 
299 1 69 1 
263 1 208 1 303 1 299 1 253 2 69 3 
208 1 299 1 69 1 
117 1 69 1 
225 1 90 1 130 2 291 1 323 1 80 3 106 2 28 1 313 1 187 1 107 1 58 1 174 4 296 7 23 3 221 1 252 1 
225 1 90 1 130 2 291 1 323 1 80 3 106 2 28 1 313 1 187 1 107 1 58 1 174 4 296 7 23 3 221 1 252 1 
225 1 90 1 291 1 130 2 323 1 80 3 106 2 261 1 28 1 313 1 187 1 107 1 58 1 174 4 296 7 23 3 221 1 252 1 
225 4 90 4 291 1 198 4 28 1 313 1 30 1 174 16 296 31 318 1 276 3 252 5 34 1 320 2 350 1 130 3 323 2 327 3 185 3 80 10 106 5 282 1 81 1 264 1 187 2 107 2 58 1 188 1 23 15 60 3 221 2 160 1 114 1 113 1 
320 4 225 1 90 1 291 1 130 2 323 1 80 4 106 3 28 1 282 1 81 2 187 1 107 1 58 1 174 5 296 9 109 1 175 1 23 4 221 1 160 2 252 1 113 2 114 2 
310 1 89 2 2 1 166 1 339 1 199 1 362 1 3 1 116 1 364 2 314 1 45 1 7 1 366 2 12 1 297 1 277 1 368 1 124 1 254 1 49 1 321 1 55 1 215 1 217 1 376 1 108 1 85 1 62 1 24 1 
310 1 89 2 2 1 339 1 199 1 362 1 271 1 3 1 116 1 364 3 45 1 7 1 366 3 12 1 297 1 277 1 368 1 124 1 254 1 49 1 321 2 55 1 215 1 217 1 376 1 20 1 307 1 85 1 62 1 24 1 
310 1 89 2 2 1 199 1 271 1 3 1 116 1 364 2 45 1 7 1 366 2 12 1 297 1 277 1 368 1 124 1 49 1 321 2 55 1 217 1 376 1 307 1 85 1 62 1 24 1 
254 1 76 1 1 1 268 1 195 1 127 1 3 2 69 1 215 1 364 1 217 1 376 2 20 1 366 1 7 1 45 1 12 1 297 2 220 1 299 1 277 2 165 1 24 1 
310 1 89 2 339 1 199 1 362 1 271 1 3 1 116 1 364 1 314 1 45 1 7 1 366 1 12 1 297 1 277 1 368 1 254 1 49 1 215 1 217 1 376 1 108 1 85 1 62 1 24 1 
57 1 
141 1 87 1 1 1 194 1 248 1 94 1 5 1 95 1 343 1 7 2 45 2 249 1 12 1 299 1 346 2 347 1 13 4 52 1 15 2 301 2 17 2 214 2 262 1 217 1 218 1 21 1 306 1 265 2 357 1 22 1 61 1 63 1 165 2 24 2 163 1 267 2 27 2 170 1 171 1 69 1 230 1 120 5 179 3 278 5 126 1 76 1 279 2 128 6 322 1 136 2 378 2 190 1 287 2 334 1 289 1 
194 1 170 1 171 1 95 1 120 3 347 1 179 1 13 2 278 3 128 2 322 1 305 1 214 1 262 1 218 1 306 1 357 1 190 1 61 1 63 1 163 1 289 1 
267 1 194 1 170 1 171 1 95 1 343 1 120 3 347 1 179 1 13 3 278 3 128 1 322 1 305 1 262 1 218 1 306 1 357 1 190 1 61 1 287 1 63 1 163 1 289 1 
267 1 194 1 170 1 171 1 95 1 343 1 120 3 347 1 179 1 13 3 278 3 128 2 322 1 15 1 305 1 214 1 262 1 218 1 306 1 357 1 190 1 61 1 287 1 63 1 163 1 289 1 
267 5 87 1 27 1 194 1 168 1 170 1 171 1 94 1 5 1 95 1 343 5 120 5 345 1 346 2 347 1 179 3 13 6 126 1 278 5 279 1 128 7 301 2 16 1 322 1 15 4 17 2 305 1 214 4 262 1 329 1 136 2 218 1 21 1 242 1 306 1 378 2 357 1 190 1 287 4 61 1 63 1 163 1 334 1 289 1 
87 1 194 1 94 1 95 1 5 1 343 1 249 1 347 1 346 2 13 4 301 2 15 2 17 2 214 2 262 1 218 1 21 1 306 1 265 2 357 1 61 1 63 1 163 1 267 2 27 1 170 1 171 1 120 4 179 2 278 4 126 1 279 1 128 4 322 1 136 2 378 2 190 1 287 2 289 1 334 1 
267 1 87 1 27 1 194 1 170 1 171 1 94 1 5 1 95 1 343 1 120 4 345 1 346 2 347 1 179 2 13 4 126 1 278 4 279 1 128 4 15 2 301 2 322 1 16 1 17 2 214 2 262 1 136 2 218 1 21 1 242 1 306 1 378 2 357 1 190 1 287 2 61 1 63 1 163 1 289 1 334 1 
267 1 87 1 27 1 194 1 170 1 171 1 94 1 5 1 95 1 343 1 120 4 345 1 346 2 347 1 179 2 13 4 126 1 278 4 279 1 128 4 15 2 301 2 322 1 16 1 17 2 214 2 262 1 136 2 218 1 21 1 242 1 306 1 378 2 357 1 190 1 287 2 61 1 63 1 163 1 289 1 334 1 
267 1 42 1 87 1 27 1 194 1 169 1 170 1 171 1 93 2 94 1 5 1 95 1 343 1 120 4 345 1 347 1 179 2 13 4 126 1 278 4 279 1 256 1 128 4 15 2 301 2 322 1 214 2 262 1 136 2 218 1 306 1 243 2 265 2 357 1 190 1 287 2 61 1 63 1 163 1 289 1 334 1 
267 1 87 1 27 1 194 1 168 1 170 1 171 1 94 1 5 1 95 1 343 1 120 4 345 1 346 2 347 1 179 2 13 5 126 1 278 4 279 1 128 5 301 2 16 1 322 1 15 3 17 2 214 3 262 1 136 2 218 1 21 1 242 1 306 1 378 2 357 1 190 1 61 1 287 3 63 1 163 1 334 1 289 1 
267 1 87 1 27 1 194 1 168 1 170 1 171 1 94 1 5 1 95 1 343 1 120 4 345 1 346 2 347 1 179 2 13 5 126 1 278 4 279 1 128 5 301 2 16 1 322 1 15 3 17 2 214 3 262 1 136 2 218 1 21 1 242 1 306 1 378 2 357 1 190 1 61 1 287 3 63 1 163 1 334 1 289 1 
267 1 87 1 27 1 194 1 169 1 170 1 171 1 93 2 94 1 5 1 95 1 343 1 120 4 249 1 347 1 179 2 13 4 126 1 278 4 279 1 128 4 15 2 301 2 322 1 214 2 262 1 136 2 218 1 306 1 243 2 265 2 357 1 190 1 287 2 61 1 63 1 163 1 334 1 289 1 
225 1 90 1 291 1 28 1 6 1 174 3 272 2 99 1 296 6 14 1 320 2 257 1 258 1 130 1 372 1 106 2 80 2 81 1 187 1 58 1 23 3 160 1 286 1 221 1 114 1 113 1 
225 2 90 1 198 3 6 11 8 1 272 1 174 8 316 1 99 1 296 14 318 1 276 1 252 1 181 1 103 1 320 4 257 4 258 2 372 11 80 2 106 1 327 3 185 2 81 2 83 1 188 1 23 6 84 1 60 2 160 2 380 1 114 2 113 2 
194 1 172 1 69 1 312 1 148 1 208 1 45 1 7 1 8 1 272 1 174 1 99 1 296 2 316 1 12 1 176 1 299 1 298 1 122 1 103 1 320 2 257 1 370 1 258 1 351 1 324 1 81 1 217 1 218 2 357 2 40 1 23 1 160 1 24 1 165 1 41 1 113 1 114 1 
194 1 90 3 291 1 341 2 294 1 295 2 6 7 45 3 7 3 8 1 208 2 99 3 296 20 12 2 298 2 299 2 348 2 252 4 103 1 257 7 258 3 106 4 217 2 19 1 218 3 58 1 357 3 23 10 60 2 221 1 160 3 24 3 165 1 114 3 113 3 224 1 225 3 271 1 28 1 69 2 312 2 272 2 174 10 316 1 176 1 122 1 317 2 276 2 320 6 130 1 236 2 372 7 324 2 185 2 80 8 81 3 187 1 40 1 41 1 
194 1 1 1 166 1 270 1 200 1 271 1 69 3 365 1 45 8 7 7 98 1 174 1 99 2 316 1 296 2 176 1 12 2 122 1 299 2 103 1 320 4 76 1 235 1 258 2 326 1 81 2 241 2 217 2 218 1 357 1 40 1 333 1 23 1 286 1 160 2 24 8 165 2 114 2 113 2 
309 1 194 1 225 1 90 1 246 1 6 1 8 1 10 1 174 1 99 1 296 3 176 1 276 1 320 2 257 1 258 1 372 1 80 1 106 1 185 1 81 1 218 1 40 1 357 1 60 1 23 2 160 1 114 1 113 1 
320 2 257 1 225 1 258 1 372 1 80 1 186 1 81 1 6 1 174 2 296 2 99 1 60 1 286 1 160 1 252 1 113 1 114 1 
320 2 257 1 90 1 258 1 372 1 293 1 80 1 106 1 81 1 6 1 296 2 99 1 23 2 286 1 160 1 276 1 113 1 114 1 
225 1 90 1 6 2 174 2 99 1 296 4 276 1 252 1 320 2 257 2 258 1 372 2 185 1 80 2 106 1 81 1 60 1 23 2 160 1 286 1 114 1 113 1 
320 2 257 1 225 1 258 1 372 1 80 1 186 1 81 1 6 1 365 1 174 2 296 2 99 1 60 1 160 1 252 1 113 1 114 1 
320 2 257 1 90 1 258 1 372 1 293 1 80 1 106 1 81 1 6 1 365 1 296 2 99 1 23 2 160 1 276 1 113 1 114 1 
225 1 90 1 365 1 6 2 174 2 99 1 296 4 276 1 252 1 320 2 257 2 258 1 372 2 185 1 80 2 106 1 81 1 60 1 23 2 160 1 114 1 113 1 
225 1 90 1 6 2 174 2 296 4 99 1 276 1 252 1 320 2 257 2 258 1 372 2 185 1 80 2 106 1 81 1 60 1 23 2 160 1 114 1 113 1 
69 1 312 1 208 1 45 1 7 1 174 1 272 1 316 1 296 2 99 1 12 1 299 1 298 1 103 1 320 2 258 1 236 1 324 1 81 1 217 1 218 1 357 1 23 1 160 1 24 1 165 1 113 1 114 1 
44 1 69 1 312 1 208 1 45 1 7 1 174 1 272 1 316 1 296 2 99 1 12 1 121 1 299 1 103 1 320 2 258 1 81 1 217 1 218 1 357 1 23 1 160 1 192 1 24 1 165 1 113 1 114 1 
225 1 90 1 6 2 8 1 174 2 99 1 296 4 276 1 252 1 320 2 257 2 258 1 372 2 185 1 80 2 106 1 81 1 60 1 23 2 160 1 114 1 113 1 
225 1 90 1 166 1 69 1 312 1 6 2 208 1 45 1 7 1 174 2 296 4 99 1 12 1 276 1 298 1 317 1 299 1 252 1 320 2 257 2 258 1 236 1 372 2 324 1 106 1 80 2 185 1 81 1 217 1 218 1 357 1 23 2 60 1 160 1 24 1 113 1 114 1 
309 1 194 1 225 1 90 1 246 1 6 1 8 1 174 2 99 1 296 3 176 1 276 1 252 1 320 2 257 1 258 1 372 1 80 1 185 1 81 1 218 1 59 1 40 1 357 1 23 1 60 1 160 1 114 1 113 1 
225 3 90 3 198 2 174 9 296 19 250 1 318 1 276 3 252 3 320 4 280 1 302 1 237 1 104 1 106 3 327 1 185 3 80 6 81 2 377 1 188 1 109 1 23 10 60 3 160 2 266 2 164 2 288 1 114 2 113 2 
225 3 90 2 198 2 247 1 315 1 174 14 233 1 296 26 250 1 276 2 252 2 320 6 280 2 302 2 38 1 80 4 106 2 327 2 185 3 282 2 81 3 377 1 109 1 188 2 110 1 23 12 60 3 160 3 266 1 140 1 164 4 288 1 114 3 113 3 
225 5 90 5 291 1 198 4 247 1 28 1 315 1 233 1 174 20 296 41 250 1 318 1 276 4 252 4 50 1 320 6 280 2 302 1 130 1 104 1 38 1 106 4 327 3 185 4 80 8 282 1 81 3 187 1 377 1 58 1 110 1 188 3 109 1 23 21 60 4 221 1 160 3 266 1 140 1 164 4 288 1 114 3 113 3 
225 5 90 4 291 1 198 4 247 1 28 1 315 1 233 1 174 20 296 38 250 1 318 1 276 3 252 3 50 1 320 8 280 2 302 1 130 1 104 1 38 1 106 4 327 3 185 4 80 7 282 2 81 4 187 1 377 1 58 1 110 1 188 3 109 1 23 18 60 4 221 1 160 4 266 1 140 1 164 4 288 1 114 4 113 4 
225 8 90 8 291 1 198 4 247 1 28 1 315 1 233 1 174 27 296 52 250 1 318 2 276 7 252 7 320 4 280 1 302 1 130 1 38 1 106 7 327 4 185 7 80 14 282 1 81 2 187 1 377 1 58 1 83 2 110 1 188 2 109 1 23 25 60 7 221 1 160 2 266 1 140 1 164 4 288 1 114 2 113 2 
92 1 290 1 152 1 82 1 36 1 259 1 251 1 68 1 374 1 335 1 
359 1 196 1 
152 1 210 1 82 1 273 1 36 1 251 1 68 1 281 1 335 1 
267 1 152 1 278 1 66 1 36 1 259 1 68 1 325 1 374 1 206 1 92 1 82 1 120 1 356 1 344 1 251 1 150 2 335 1 
267 1 152 1 278 1 66 1 36 1 259 1 68 1 325 1 374 1 206 1 92 1 82 1 120 1 356 1 344 1 251 1 150 2 335 1 
267 1 152 1 278 1 66 1 36 1 259 1 68 1 325 1 374 1 206 1 92 1 82 1 120 1 356 1 344 1 251 1 150 2 335 1 
119 1 197 1 144 1 
119 1 197 1 144 1 
26 1 283 1 
26 1 119 1 283 1 
360 1 134 1 
0 1 359 1 194 2 360 1 67 1 196 1 68 1 206 1 205 1 272 1 120 1 176 2 251 1 150 1 178 1 319 1 152 1 278 1 36 1 18 1 325 1 134 1 218 2 82 1 357 2 40 2 335 1 
197 1 144 1 
26 1 119 1 283 1 
64 1 194 2 69 1 45 2 8 1 7 2 98 1 174 1 99 1 316 1 296 2 12 1 32 1 299 1 349 1 103 1 320 2 235 1 258 1 352 1 213 1 81 1 241 2 217 1 218 2 357 2 23 1 160 1 24 2 113 1 114 1 
49 1 358 1 89 2 43 1 166 1 199 1 362 1 271 1 116 1 217 1 7 2 45 2 12 1 177 1 85 1 62 1 277 1 368 1 24 2 
49 1 89 2 199 1 54 1 362 1 271 1 116 1 217 1 7 1 45 1 12 1 177 1 85 1 62 1 277 1 368 1 24 1 
358 1 268 1 1 1 76 1 69 1 217 1 147 1 7 1 45 1 12 1 299 1 277 1 165 1 24 1 
49 1 358 1 89 2 43 1 199 1 362 1 271 1 116 1 217 1 7 1 45 1 12 1 177 1 85 1 62 1 277 1 368 1 24 1 
74 1 
267 1 279 1 343 1 27 1 14 1 157 1 138 1 
267 2 87 1 27 1 94 1 343 1 120 1 346 1 179 1 126 1 278 1 279 1 128 1 17 1 21 1 378 1 265 1 334 1 
87 4 90 2 336 2 248 1 94 4 295 2 96 1 343 2 208 3 7 3 45 3 12 4 299 3 253 2 52 2 17 6 303 1 304 2 260 6 217 3 157 1 265 12 159 2 219 1 60 2 61 2 165 1 24 3 267 8 65 1 27 8 225 2 166 1 363 2 69 10 117 2 71 1 120 5 275 3 276 2 179 3 126 4 278 5 279 9 128 5 184 2 77 2 185 2 39 1 189 2 138 1 86 2 334 4 381 6 
267 5 87 2 27 5 225 2 90 2 198 1 248 1 247 1 173 1 94 2 343 2 120 1 233 1 276 2 179 1 278 1 126 2 52 1 279 8 128 1 17 3 373 1 38 1 260 5 327 1 185 2 159 1 265 6 188 1 110 1 60 2 86 2 140 1 381 5 334 2 
309 1 87 1 193 1 27 2 194 1 225 2 90 1 170 1 91 1 94 1 120 1 176 1 151 1 126 1 278 1 279 2 16 1 78 1 56 1 218 1 187 1 58 1 159 1 357 1 40 1 86 2 221 1 334 1 
267 1 87 1 126 1 27 1 279 1 94 1 343 1 157 1 138 1 334 1 
267 5 27 5 279 5 225 2 90 2 17 5 185 2 260 5 295 1 159 1 265 10 60 2 86 2 276 2 381 5 
267 1 278 1 343 1 120 1 128 1 179 1 
141 1 87 2 27 2 1 1 248 2 69 1 94 2 96 2 45 4 7 4 120 3 12 1 299 1 73 1 179 2 126 2 278 3 52 2 279 2 76 1 182 1 128 4 217 1 39 1 22 1 139 1 24 4 165 2 334 1 
309 2 193 1 194 2 201 1 69 1 312 1 45 1 7 1 208 1 272 1 296 1 99 1 176 2 12 1 298 1 299 1 103 1 320 2 258 1 236 1 324 1 81 1 217 1 218 3 357 3 40 2 23 1 160 1 24 1 165 1 114 1 113 1 
267 4 87 1 126 1 27 2 52 1 279 1 17 2 130 1 260 2 248 1 94 1 343 2 265 4 381 2 334 1 
25 1 82 1 335 1 
25 1 82 1 335 1 
92 1 82 1 360 1 123 1 335 1 
25 1 82 1 335 1 
82 1 161 1 335 1 
82 1 161 1 335 1 
82 1 161 1 335 1 
82 1 335 1 
36 1 251 1 
320 4 225 1 90 1 130 1 291 1 80 3 106 2 28 1 81 2 282 1 187 1 58 1 174 4 296 8 23 4 160 2 221 1 252 1 113 2 114 2 
14 1 225 1 90 1 130 1 291 1 106 2 80 2 28 1 187 1 58 1 174 3 296 6 23 3 221 1 
320 2 225 1 90 1 106 1 80 2 185 1 81 1 137 1 174 2 296 4 23 2 60 1 276 1 160 1 252 1 113 1 114 1 
225 1 90 1 198 2 106 1 327 1 185 1 80 2 174 3 296 7 188 1 23 4 60 1 276 1 318 1 252 1 
225 3 90 3 291 1 229 1 198 2 28 1 174 11 296 23 318 1 276 2 252 4 320 4 130 1 80 9 185 2 327 2 106 5 282 2 81 2 187 2 58 1 83 1 60 2 23 12 84 1 221 2 160 2 113 2 114 2 
296 1 23 1 198 1 
174 1 296 1 327 1 
320 2 225 1 90 1 185 1 80 3 106 2 81 1 295 1 137 1 174 3 296 6 23 3 60 1 160 1 276 1 252 1 114 1 113 1 
225 2 90 2 198 1 247 1 233 1 174 6 296 12 276 2 252 1 320 2 38 1 327 1 185 2 106 1 80 2 81 1 188 1 109 1 110 1 23 6 60 2 160 1 140 1 114 1 113 1 
225 1 90 1 106 1 80 2 187 1 58 1 174 3 296 6 23 3 221 1 252 1 
320 2 291 1 229 1 80 2 106 1 28 1 282 1 81 1 187 1 174 1 296 3 23 2 221 1 160 1 252 1 113 1 114 1 
320 2 225 2 90 2 91 1 106 3 80 5 81 1 187 2 58 1 174 5 296 10 109 1 23 5 160 1 221 2 252 2 114 1 113 1 
320 2 225 1 80 1 81 1 174 2 296 2 109 1 60 1 160 1 252 1 113 1 114 1 
320 2 225 1 90 1 106 1 80 2 185 1 81 1 174 2 296 4 109 1 23 2 60 1 276 1 160 1 252 1 113 1 114 1 
320 6 229 1 104 1 106 1 80 2 282 1 81 3 187 1 174 1 296 3 109 1 23 2 160 3 221 1 252 1 113 3 114 3 
225 5 90 5 291 1 229 1 198 4 28 1 30 1 174 16 296 34 318 1 276 3 252 5 34 1 320 10 130 1 104 1 327 3 185 3 80 12 106 7 282 2 81 5 264 1 187 3 137 1 58 2 188 1 109 1 23 18 60 3 221 3 160 5 114 5 113 5 
225 1 90 1 291 1 198 1 28 1 233 1 174 4 296 8 320 2 130 1 327 1 106 2 80 2 81 1 187 1 58 1 188 1 109 1 23 4 160 1 221 1 114 1 113 1 
225 2 90 1 291 1 198 2 28 1 233 1 174 6 296 11 318 1 252 1 320 4 130 1 106 2 327 1 185 1 80 3 81 2 187 1 137 1 58 1 188 1 109 1 23 5 60 1 221 1 160 2 114 2 113 2 
225 3 90 3 291 1 198 1 247 1 28 1 233 1 174 9 296 19 276 2 252 1 320 6 130 1 38 1 327 1 185 2 106 3 80 4 81 3 282 1 187 1 137 1 58 1 188 1 109 1 110 1 23 10 60 2 221 1 160 3 140 1 114 3 113 3 
225 3 90 2 291 1 198 1 247 1 28 1 233 1 174 10 296 17 276 1 252 2 320 6 130 1 38 1 327 1 185 2 106 3 80 5 282 1 81 3 187 1 137 1 58 1 188 1 109 1 110 1 23 7 60 2 221 1 160 3 140 1 114 3 113 3 
225 1 90 1 291 1 198 1 28 1 233 1 174 4 296 8 320 2 130 1 327 1 106 2 80 2 81 1 187 1 58 1 188 1 109 1 23 4 160 1 221 1 114 1 113 1 
225 2 90 2 198 1 247 1 233 1 174 6 296 12 276 2 252 1 320 2 38 1 327 1 185 2 106 1 80 2 81 1 188 1 109 1 110 1 23 6 60 2 160 1 140 1 114 1 113 1 
225 3 90 2 291 1 198 1 247 1 28 1 233 1 174 10 296 18 276 1 252 2 320 8 130 1 38 1 327 1 185 2 106 3 80 5 81 4 282 2 187 1 137 1 58 1 188 1 109 1 110 1 23 8 60 2 221 1 160 4 140 1 114 4 113 4 
225 3 90 2 198 1 247 1 233 1 174 9 296 16 276 2 252 3 320 8 104 1 38 1 327 1 185 3 106 3 80 6 81 4 282 2 188 1 109 1 110 1 23 7 60 3 160 4 140 1 114 4 113 4 
225 1 90 1 291 2 106 3 80 6 28 1 187 3 58 1 174 3 296 7 23 4 221 3 252 3 
225 3 90 2 291 1 198 1 247 1 28 1 233 1 174 10 296 18 276 1 252 1 320 8 130 1 104 1 38 1 327 1 185 2 106 3 80 4 81 4 282 2 187 1 58 1 188 1 109 1 110 1 23 8 60 2 221 1 160 4 140 1 114 4 113 4 
218 1 194 1 272 1 357 1 274 1 167 1 347 1 
156 1 355 1 143 1 11 1 338 1 
217 1 76 1 1 1 14 1 45 1 7 1 12 1 299 1 24 1 165 1 69 1 
194 1 324 1 69 1 312 1 217 1 218 2 208 1 7 1 45 1 272 1 12 1 176 1 40 1 357 2 299 1 122 1 165 1 24 1 
194 2 304 1 170 1 324 1 69 3 117 1 262 1 312 1 96 1 217 1 218 2 208 2 7 1 45 1 272 1 12 1 176 1 40 2 357 2 299 2 122 1 163 1 24 1 
194 2 170 1 203 1 69 3 312 1 117 1 96 1 45 2 7 2 208 2 272 1 176 1 12 1 121 1 122 1 299 2 304 1 262 1 217 1 218 2 357 2 40 2 24 2 163 1 
267 1 203 1 204 1 69 4 117 1 96 1 343 1 45 3 7 3 208 1 120 2 12 1 275 1 299 1 253 1 278 2 128 1 304 1 217 1 112 1 61 1 24 3 165 1 
267 1 278 2 128 1 304 1 203 1 363 1 69 4 117 1 96 1 217 1 343 1 208 1 7 3 45 3 120 2 12 1 299 1 275 1 61 1 165 1 24 3 253 1 
217 1 45 1 7 1 12 1 200 1 24 1 
235 1 245 1 166 1 270 1 303 1 200 1 271 1 326 1 69 3 241 1 217 2 7 6 45 7 208 1 118 1 12 3 333 1 234 1 299 2 165 2 24 7 
64 1 194 1 225 1 90 1 166 1 291 1 341 1 28 1 69 1 312 1 6 1 208 1 8 1 7 1 45 1 272 2 174 3 296 6 99 2 12 1 176 1 299 1 122 1 317 1 298 1 320 4 257 1 258 2 130 1 236 1 372 1 324 1 80 2 106 2 81 2 217 1 187 1 218 2 58 1 357 2 40 1 23 3 221 1 160 2 24 1 113 2 114 2 
267 1 87 2 27 1 336 1 363 1 205 1 69 2 94 2 343 1 7 1 45 1 120 3 275 1 253 1 179 1 126 2 278 3 279 1 128 2 77 1 39 1 157 1 189 1 138 1 61 1 24 1 165 1 334 2 
166 1 303 1 200 1 69 2 71 1 217 1 7 2 45 2 208 1 12 2 299 1 253 1 24 2 
1 1 76 1 166 1 340 1 203 1 69 1 217 1 7 4 45 4 12 1 299 1 165 1 24 4 
292 1 294 1 69 1 96 1 217 1 330 1 7 2 45 2 208 1 118 1 12 2 234 1 299 1 24 2 
217 1 89 1 45 1 7 1 12 1 199 1 116 1 368 1 24 1 165 1 
235 1 166 1 271 1 69 1 217 1 7 2 45 2 32 1 12 1 299 1 24 2 
76 1 1 1 235 1 166 1 270 1 340 1 69 3 96 1 217 2 7 4 45 5 12 2 333 1 299 2 165 1 24 5 
76 1 1 1 235 1 166 1 270 1 340 1 69 3 96 1 217 2 7 4 45 5 12 2 299 2 72 1 165 1 24 5 
194 1 69 1 312 1 217 1 218 2 208 1 7 1 45 1 272 1 12 1 176 1 40 1 357 2 121 1 299 1 122 1 165 1 24 1 
245 1 303 1 69 1 96 1 217 1 7 1 45 1 208 1 118 1 12 2 234 1 299 1 24 1 
223 1 349 1 194 1 352 1 213 1 354 1 218 1 149 1 357 1 
102 1 149 1 46 1 
354 1 223 1 149 1 272 1 191 1 
267 1 223 2 278 2 102 1 238 1 170 1 205 1 262 1 354 2 343 1 149 1 272 1 120 2 191 2 61 1 46 1 163 1 75 1 289 1 
14 1 2 1 55 1 124 1 
254 1 366 1 2 1 55 1 124 1 364 1 215 1 
376 1 366 1 3 1 
369 1 254 1 269 1 2 1 202 1 55 1 215 1 364 3 314 1 231 2 366 3 124 1 
254 1 321 1 366 2 2 1 227 1 55 1 124 1 364 2 215 1 
254 1 49 1 89 1 199 1 311 1 55 1 215 1 364 1 314 1 366 1 33 1 
254 1 314 1 366 1 2 1 55 1 364 1 215 1 
254 1 314 1 366 1 2 2 124 1 364 1 215 1 
254 2 2 1 337 1 212 1 371 1 55 1 215 2 364 2 314 1 366 2 
254 1 321 2 2 1 361 1 145 1 311 1 55 2 215 1 364 3 314 1 366 3 100 1 124 1 
254 1 49 1 89 2 321 1 2 1 199 1 55 1 215 1 364 2 314 1 366 2 85 1 222 1 368 1 124 1 
254 2 321 2 2 1 227 1 145 1 311 1 55 2 328 1 215 2 364 4 314 1 366 4 124 1 
254 1 314 1 366 1 2 1 55 1 124 1 364 1 215 1 
115 1 254 1 269 1 321 2 2 2 202 1 145 1 311 1 55 3 364 4 215 1 231 1 366 4 124 2 
254 1 226 1 321 1 2 1 129 1 55 1 215 1 364 2 314 1 366 2 180 1 124 1 
254 1 269 1 2 1 202 2 55 1 215 1 364 3 216 1 314 1 231 2 366 3 124 1 
255 1 331 2 211 1 55 2 
254 1 314 1 51 1 366 1 364 1 215 1 
254 1 314 1 321 1 366 2 2 1 100 1 55 1 124 1 364 2 215 1 
48 1 
254 1 314 1 366 1 2 1 55 1 124 1 364 1 215 1 
254 1 321 1 2 1 55 1 215 1 364 3 314 1 231 1 366 3 100 1 124 1 
115 1 145 1 55 1 311 1 
2 1 55 1 

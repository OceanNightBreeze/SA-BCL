#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 5 187 1 276 1 150 2 119 1 1 6 359 2 206 2 152 1 86 1 231 1 157 1 194 9 45 1 342 1 239 1 162 2 71 1 133 9 15 2 51 2 215 3 20 2 243 1 108 1 168 1 374 1 177 4 
116 5 187 1 276 1 150 2 119 1 1 6 359 2 206 2 152 1 86 1 231 1 157 1 194 9 45 1 342 1 239 1 162 2 71 1 15 2 133 9 51 2 215 3 20 2 243 1 108 1 168 1 374 1 177 4 
116 6 187 1 276 1 150 2 119 1 1 7 359 2 206 2 152 1 86 1 231 1 157 1 194 10 45 1 342 1 239 1 162 2 71 1 15 2 133 10 51 2 215 4 20 2 243 1 108 1 168 1 374 1 177 5 
116 4 187 1 276 1 150 2 1 4 359 1 206 2 152 1 86 1 231 1 157 1 194 7 45 1 342 1 239 1 162 2 71 1 15 2 133 7 51 2 215 2 20 2 243 1 108 1 168 1 374 1 177 3 
116 3 133 4 15 1 215 1 51 1 187 1 276 1 20 1 119 1 1 3 359 2 206 1 374 1 177 2 194 4 342 1 239 1 162 1 
116 1 71 1 133 2 51 1 187 1 276 1 20 1 150 1 64 1 243 1 206 1 351 1 24 1 194 2 239 1 162 1 
116 2 133 3 215 1 187 1 276 1 20 2 150 1 1 1 177 1 194 3 45 1 239 1 162 2 
116 5 252 1 187 1 276 1 150 1 119 1 1 7 359 2 206 1 152 1 157 1 194 9 45 1 342 1 239 1 162 2 50 1 133 9 15 1 215 3 51 1 20 2 374 1 177 4 
116 5 252 1 187 1 276 1 150 1 119 1 1 7 359 2 206 1 152 1 157 1 194 9 45 1 342 1 239 1 162 2 50 1 133 9 15 1 215 3 51 1 20 2 374 1 177 4 
78 1 300 1 258 1 
78 1 286 2 131 1 
94 2 27 2 32 2 317 1 35 2 2 2 197 1 153 2 
254 1 227 1 335 1 151 1 279 1 35 2 337 1 2 2 6 1 153 3 154 1 38 1 98 1 190 1 212 2 160 1 161 1 197 1 16 1 293 2 315 1 372 1 316 1 294 1 54 2 94 3 140 2 27 2 79 1 301 1 32 2 56 1 317 1 82 2 333 1 303 1 61 1 
39 1 94 1 27 1 378 1 32 1 317 1 35 1 2 1 264 1 153 1 
62 1 118 1 73 1 18 1 153 1 39 1 94 1 173 1 174 1 285 1 78 1 300 1 32 1 341 1 
62 1 118 1 18 2 35 1 2 1 153 1 39 1 94 1 27 1 173 2 285 1 78 1 300 1 32 1 341 1 
347 1 173 1 18 1 112 1 326 1 
204 1 173 2 78 1 18 2 300 1 112 1 326 1 148 1 
173 1 18 1 112 1 
18 1 35 1 2 1 153 1 39 1 94 1 27 1 173 1 376 1 378 1 326 1 32 1 317 1 264 1 
78 1 
173 2 78 1 348 1 18 2 300 1 112 1 326 1 148 1 
18 5 358 1 244 1 52 1 4 1 173 5 208 1 78 1 332 1 300 1 326 2 112 2 103 2 382 2 102 2 181 1 213 1 183 1 148 1 
258 1 197 1 
203 1 35 1 322 1 2 1 153 2 39 1 94 2 27 1 32 2 238 1 197 1 
363 1 242 1 193 1 
253 1 254 1 293 1 315 1 151 1 279 1 153 1 190 1 94 1 140 1 79 1 56 1 82 1 160 1 197 1 61 1 
224 1 254 1 293 1 315 1 151 1 279 1 35 1 153 2 190 1 94 2 140 1 27 1 363 1 79 1 32 1 56 1 82 1 160 1 48 1 61 1 
290 1 224 2 73 1 35 4 2 1 153 5 331 1 94 5 27 4 29 1 32 5 238 1 48 1 197 1 
39 1 94 2 27 2 378 1 159 1 32 2 35 2 153 2 
224 1 94 3 27 3 32 3 35 3 2 1 197 1 153 3 
39 1 94 1 27 1 378 1 32 1 35 1 153 1 
203 1 35 1 2 1 153 1 39 1 94 1 27 1 32 1 238 1 
224 1 62 1 254 1 227 1 118 1 320 1 335 1 151 1 279 1 35 3 337 1 2 2 6 1 38 1 153 4 98 1 190 1 39 1 285 1 341 1 238 1 212 2 160 1 48 1 197 1 16 1 293 1 315 1 18 1 372 1 316 1 110 1 54 1 94 4 140 1 27 3 173 1 79 1 32 3 56 1 317 1 82 1 303 1 61 1 
331 1 224 1 94 2 27 1 73 1 32 2 35 1 197 1 153 2 
224 2 62 1 118 1 18 1 230 1 35 3 2 1 110 1 153 3 39 1 94 3 27 3 173 1 285 1 78 1 341 1 32 3 238 1 48 1 
224 1 242 1 35 2 2 1 153 2 94 2 27 2 363 1 32 2 238 1 
254 1 293 1 315 1 151 1 279 1 153 1 190 1 94 1 140 1 79 1 56 1 82 1 160 1 197 1 61 1 
254 1 198 1 293 1 315 1 279 1 153 1 94 1 140 1 79 1 56 1 82 1 160 1 60 1 197 1 61 1 
227 2 228 1 277 1 6 1 98 1 325 1 363 2 67 1 193 2 364 1 212 2 69 1 132 1 16 1 17 1 242 2 372 1 316 1 166 1 54 4 77 1 375 1 333 2 303 1 
39 1 62 1 94 1 27 1 32 1 159 1 35 1 153 1 
260 1 249 1 
260 1 249 1 
355 1 31 1 
355 1 31 1 
355 1 31 1 
260 1 249 1 145 1 
260 1 249 1 145 1 
260 1 249 1 101 1 
313 1 346 1 260 2 355 1 249 2 31 1 
260 1 249 1 145 1 
260 1 226 1 249 1 
260 1 226 1 249 1 
260 1 226 1 249 1 
240 1 214 1 267 1 266 1 107 1 18 1 328 1 120 1 349 1 207 1 35 2 200 1 153 2 260 1 283 1 94 2 338 1 27 2 173 1 249 1 312 1 101 1 32 2 197 1 
313 1 240 1 214 3 164 1 229 1 328 2 18 2 120 2 111 2 260 2 338 2 249 2 173 2 175 1 78 1 312 2 42 1 380 1 251 1 
15 1 51 1 206 1 
24 1 51 1 206 1 
24 1 15 2 51 3 83 1 179 1 37 1 
24 1 247 1 15 1 51 2 83 1 37 1 
24 1 15 1 51 2 83 2 37 1 
228 1 4 1 125 1 67 1 40 1 364 1 326 4 286 3 365 2 102 1 103 1 196 1 368 2 131 1 267 1 107 1 17 1 18 5 200 1 218 1 141 1 248 1 173 5 332 2 78 2 300 1 112 1 382 1 319 1 183 3 184 2 148 1 
305 1 228 3 4 1 362 5 127 1 311 1 208 1 67 3 364 3 326 7 286 9 103 2 102 2 368 6 131 3 12 1 267 4 347 5 17 3 18 9 218 2 141 2 248 1 173 9 332 6 78 5 300 1 221 1 112 6 302 1 382 2 319 3 183 8 184 6 148 1 
228 1 125 1 67 1 208 1 326 2 364 1 286 4 365 1 196 1 102 1 103 1 368 2 131 2 267 1 18 3 17 1 218 1 141 1 173 3 78 3 332 2 300 1 382 1 183 3 319 1 184 2 
305 1 228 2 125 1 67 2 208 1 326 3 364 2 286 7 365 2 102 1 103 1 196 1 368 4 131 3 267 2 18 4 17 2 218 1 141 1 173 4 78 4 332 4 300 1 221 1 302 1 382 1 183 5 319 2 184 4 
258 1 43 1 279 1 
44 1 279 1 
250 1 
56 1 279 1 61 1 
279 1 274 1 
279 1 61 1 
43 2 56 1 211 1 279 3 61 1 5 1 
354 1 241 1 227 3 17 1 296 1 109 1 167 2 23 1 323 1 155 1 54 7 170 1 325 2 67 1 191 1 333 4 69 3 
354 1 241 1 227 3 17 1 296 1 109 1 167 2 23 1 323 1 155 1 54 7 170 1 325 2 67 1 191 1 333 4 69 3 
354 1 241 1 227 3 17 1 296 1 109 1 167 2 23 1 323 1 155 1 54 7 170 1 325 2 67 1 191 1 333 4 11 1 69 3 
149 4 354 2 227 15 228 3 189 1 323 2 98 1 155 2 325 5 191 1 67 4 234 1 364 3 212 2 69 10 241 2 16 1 17 4 372 1 136 1 165 1 316 1 296 1 167 3 109 5 23 1 299 1 54 31 170 1 272 1 176 1 114 3 333 16 319 3 
354 1 241 1 227 4 16 2 17 1 372 2 84 1 137 1 316 2 296 1 109 1 167 2 23 1 323 1 155 1 54 9 98 2 170 1 325 3 67 1 176 1 212 4 333 5 69 4 
116 1 187 1 256 1 276 1 255 1 150 1 1 1 206 1 282 1 99 1 128 1 194 2 160 1 130 1 239 1 162 1 369 1 15 1 133 2 293 1 51 2 20 1 140 1 24 1 79 1 179 1 82 1 57 1 58 1 147 1 
116 1 187 1 256 1 255 1 150 1 1 2 206 1 336 1 310 1 128 1 235 1 194 3 160 1 130 1 239 1 162 1 369 1 15 1 133 3 293 1 51 2 20 1 140 1 24 1 79 1 179 1 82 1 57 1 58 1 147 1 
116 1 187 1 256 1 255 1 150 1 1 2 336 1 206 1 128 1 235 1 194 2 160 1 130 1 239 1 133 2 15 1 293 1 51 2 140 1 24 1 79 1 179 1 82 1 58 1 147 1 
254 1 256 2 150 2 279 1 310 1 194 1 160 1 366 1 343 1 130 2 162 1 133 1 293 1 20 1 270 1 140 1 28 1 144 1 79 1 96 1 82 1 58 2 61 1 
256 1 276 1 255 1 150 1 206 1 336 1 282 1 128 1 194 1 160 1 130 1 162 1 369 1 15 1 133 1 293 1 51 2 20 1 140 1 24 1 79 1 179 1 82 1 57 1 58 1 147 1 
47 1 
62 1 254 2 63 1 3 2 4 1 153 1 261 2 340 1 341 1 103 1 102 1 160 1 263 1 163 1 72 2 106 1 18 5 73 1 216 1 218 1 173 5 28 1 174 1 78 2 79 1 112 6 32 1 82 2 183 2 118 1 279 1 361 1 39 1 285 1 88 1 286 2 46 2 131 2 289 1 292 1 293 2 135 2 91 2 139 1 140 2 94 1 144 1 332 2 300 1 379 2 382 1 381 1 59 4 61 1 148 3 
62 1 118 1 3 1 153 1 39 1 285 1 88 1 341 1 289 1 163 1 106 1 73 1 18 3 348 1 216 1 94 1 173 3 174 1 112 2 32 1 59 2 148 1 
62 1 118 1 153 1 39 1 285 1 88 1 341 1 46 1 289 1 163 1 106 1 73 1 18 3 348 1 216 1 94 1 173 3 174 1 78 1 300 1 112 1 32 1 59 3 148 1 
62 1 118 1 3 1 153 1 39 1 285 1 88 1 341 1 46 1 289 1 163 1 106 1 72 1 348 1 73 1 18 3 216 1 94 1 173 3 174 1 78 1 300 1 112 2 32 1 59 3 148 1 
62 1 3 4 4 1 153 1 261 2 100 1 340 1 341 1 103 1 102 1 163 1 105 1 72 4 106 1 18 5 348 1 73 1 216 1 350 1 173 5 174 1 78 5 112 7 32 1 183 1 118 1 39 1 285 1 88 1 46 4 289 1 131 2 135 2 91 2 92 1 245 1 139 1 94 1 332 1 300 5 379 2 382 1 59 6 148 3 
62 1 63 1 4 1 3 2 153 1 261 2 340 1 341 1 103 1 102 1 163 1 106 1 72 2 73 1 18 4 216 1 173 4 174 1 78 2 112 4 32 1 183 1 118 1 39 1 285 1 88 1 286 2 46 2 289 1 131 2 135 2 91 2 139 1 94 1 332 1 300 1 379 2 382 1 59 4 148 2 
62 1 118 1 3 2 4 1 153 1 39 1 261 2 285 1 88 1 100 1 340 1 341 1 46 2 102 1 103 1 131 2 289 1 163 1 105 1 72 2 106 1 135 2 73 1 18 4 216 1 91 2 92 1 139 1 94 1 173 4 174 1 78 1 332 1 300 1 112 4 379 2 32 1 382 1 183 1 59 4 148 2 
62 1 118 1 3 2 4 1 153 1 39 1 261 2 285 1 88 1 100 1 340 1 341 1 46 2 102 1 103 1 131 2 289 1 163 1 105 1 72 2 106 1 135 2 73 1 18 4 216 1 91 2 92 1 139 1 94 1 173 4 174 1 78 1 332 1 300 1 112 4 379 2 32 1 382 1 183 1 59 4 148 2 
62 1 118 1 280 2 3 2 4 1 153 1 39 1 261 2 285 1 88 1 286 2 288 1 341 1 8 1 46 2 102 1 103 1 289 1 163 1 105 1 72 2 106 1 135 2 73 1 18 4 216 1 199 1 139 1 94 1 173 4 174 1 78 1 332 1 300 1 112 4 32 1 318 2 382 1 183 1 59 4 148 2 
62 1 118 1 4 1 3 3 153 1 39 1 261 2 285 1 100 1 88 1 340 1 341 1 102 1 103 1 46 3 131 2 289 1 163 1 105 1 106 1 72 3 135 2 73 1 18 4 216 1 91 2 92 1 245 1 139 1 94 1 173 4 174 1 78 1 332 1 300 1 112 5 379 2 32 1 382 1 183 1 59 5 148 2 
62 1 118 1 4 1 3 3 153 1 39 1 261 2 285 1 100 1 88 1 340 1 341 1 102 1 103 1 46 3 131 2 289 1 163 1 105 1 106 1 72 3 135 2 73 1 18 4 216 1 91 2 92 1 245 1 139 1 94 1 173 4 174 1 78 1 332 1 300 1 112 5 379 2 32 1 382 1 183 1 59 5 148 2 
62 1 63 1 4 1 3 2 153 1 261 2 341 1 103 1 102 1 163 1 106 1 72 2 73 1 18 4 216 1 173 4 174 1 78 1 112 4 32 1 318 2 183 1 118 1 280 2 39 1 285 1 88 1 288 1 286 2 46 2 289 1 135 2 139 1 94 1 332 1 300 1 382 1 59 4 148 2 
354 1 227 3 258 1 6 1 98 1 323 1 325 2 363 1 67 1 193 1 212 2 69 2 197 2 16 1 242 1 17 1 372 1 316 1 296 1 167 1 23 1 54 6 77 1 170 1 303 1 333 3 
149 3 304 1 227 6 228 1 189 1 337 1 6 1 98 2 325 1 363 11 7 1 67 1 193 11 364 2 195 1 212 4 197 1 69 2 16 2 17 2 242 4 372 2 136 1 316 2 217 1 93 1 109 1 54 14 301 1 303 2 114 3 333 8 319 2 
224 1 253 1 254 1 227 1 151 1 279 1 35 1 337 1 6 1 153 2 190 1 98 1 195 1 212 2 160 1 104 1 48 1 197 1 14 1 293 1 16 1 315 1 242 1 372 1 316 1 54 2 140 1 94 2 27 1 143 1 79 1 301 1 32 1 56 1 82 1 303 1 333 1 61 1 
254 1 151 2 336 1 337 1 153 3 6 3 98 3 67 3 212 6 160 2 69 8 16 3 315 2 17 3 316 3 167 1 109 4 23 1 170 1 171 1 172 1 27 1 79 2 220 2 32 1 113 2 180 1 82 3 319 2 224 1 354 1 227 10 228 2 279 2 35 1 38 2 323 1 190 2 325 4 363 7 193 7 364 2 195 1 48 1 197 2 293 3 242 7 372 3 296 1 54 20 140 3 94 3 95 2 97 2 301 1 56 2 303 3 333 10 61 2 
224 1 254 2 227 1 85 1 279 3 336 1 35 1 337 1 153 1 6 2 98 2 324 1 99 1 66 1 210 1 68 1 212 4 160 2 161 2 370 1 293 8 16 2 372 2 316 2 54 2 77 1 94 1 140 8 27 1 28 1 79 2 144 1 178 1 301 1 32 1 82 7 303 2 333 1 61 2 
227 2 228 1 357 1 35 1 2 1 6 1 153 1 98 1 325 1 363 1 67 1 193 1 364 1 238 1 195 1 212 2 69 1 16 1 242 1 17 1 372 1 316 1 54 3 94 1 27 1 32 1 303 1 333 1 319 1 
16 1 242 1 17 1 372 1 316 1 166 1 109 1 6 1 54 2 98 1 77 1 363 1 193 1 364 1 212 2 303 1 333 2 69 1 
227 2 16 1 228 1 242 1 277 1 372 1 316 1 6 1 54 2 98 1 325 1 77 1 363 1 67 1 193 1 212 2 303 1 69 1 
227 2 228 1 6 1 98 1 325 1 363 2 67 1 193 2 364 1 212 2 69 2 16 1 17 1 242 2 372 1 316 1 109 1 54 4 77 1 333 2 303 1 319 1 
16 1 242 1 17 1 372 1 316 1 166 1 109 1 6 1 54 2 324 1 98 1 363 1 193 1 364 1 212 2 303 1 333 2 69 1 
227 2 16 1 228 1 242 1 277 1 372 1 316 1 6 1 54 2 324 1 98 1 325 1 363 1 67 1 193 1 212 2 303 1 69 1 
227 2 228 1 6 1 98 1 324 1 325 1 363 2 67 1 193 2 364 1 212 2 69 2 16 1 17 1 242 2 372 1 316 1 109 1 54 4 333 2 303 1 319 1 
227 2 228 1 6 1 98 1 325 1 363 2 67 1 193 2 364 1 212 2 69 2 16 1 17 1 242 2 372 1 316 1 109 1 54 4 333 2 303 1 319 1 
254 1 227 1 151 1 279 1 337 1 38 1 153 1 6 1 190 1 98 1 212 2 160 1 197 1 293 1 16 1 315 1 372 1 316 1 54 2 140 1 94 1 79 1 301 1 56 1 82 1 333 1 303 1 61 1 
254 1 227 1 279 1 337 1 281 1 153 1 6 1 98 1 212 2 160 1 197 1 198 1 293 1 16 1 315 1 372 1 316 1 54 2 140 1 94 1 79 1 301 1 56 1 82 1 333 1 303 1 60 1 61 1 
227 2 228 1 6 1 98 1 325 1 363 2 67 1 193 2 364 1 195 1 212 2 69 2 16 1 17 1 242 2 372 1 316 1 109 1 54 4 333 2 303 1 319 1 
227 2 228 1 151 1 279 1 38 1 153 1 6 1 190 1 98 1 325 1 99 1 363 2 67 1 193 2 364 1 212 2 160 1 69 2 293 1 16 1 242 2 17 1 315 1 372 1 316 1 109 1 54 4 140 1 94 1 79 1 220 1 56 1 82 1 333 2 303 1 319 1 61 1 
227 1 228 1 35 1 2 1 6 1 153 1 98 1 363 1 67 1 193 1 364 1 238 1 195 1 212 2 69 1 291 1 16 1 17 1 242 1 372 1 316 1 109 1 54 3 94 1 27 1 32 1 303 1 333 2 319 1 
149 2 117 1 227 10 228 3 189 1 98 2 232 2 325 3 156 1 192 1 67 3 364 3 158 2 212 4 69 6 268 1 16 2 17 3 372 2 136 1 295 1 316 2 137 1 109 3 297 1 54 19 377 1 114 1 333 9 319 3 
149 2 117 1 227 12 228 2 189 2 98 3 232 1 325 2 233 1 67 2 192 1 364 3 158 4 129 1 212 6 69 4 265 1 268 2 16 3 17 3 372 3 295 1 316 3 137 1 109 2 169 1 297 2 271 1 54 26 176 2 80 1 333 14 114 2 319 3 
149 4 306 1 98 3 67 5 158 4 212 6 69 8 265 1 268 1 16 3 17 5 316 3 109 4 167 1 169 1 271 1 23 1 170 1 176 1 80 1 114 3 319 4 354 1 117 1 227 21 228 4 189 3 323 1 325 4 232 1 233 1 192 1 364 4 129 1 372 3 136 1 137 1 295 1 296 1 297 2 54 41 377 1 333 20 
149 4 117 1 354 1 227 18 306 1 228 3 189 3 323 1 98 4 232 1 325 4 233 1 192 1 67 4 364 4 158 4 129 1 212 8 69 7 265 1 268 1 16 4 17 5 372 4 136 1 295 1 316 4 137 1 296 1 167 1 109 3 169 1 297 2 271 1 23 1 54 38 170 1 176 2 377 1 80 1 114 3 333 20 319 4 
149 4 117 1 354 1 227 25 228 7 189 2 323 1 98 2 232 1 325 7 233 1 7 2 192 1 67 8 364 7 158 4 129 1 212 4 69 14 265 1 268 1 16 2 17 8 372 2 136 2 295 1 316 2 137 1 296 1 167 1 109 7 169 1 297 1 271 1 23 1 54 52 170 1 176 1 80 1 114 4 333 27 319 7 
313 1 260 1 338 1 249 1 175 1 55 1 312 1 328 1 120 1 380 1 
101 1 207 1 
260 1 284 1 338 1 249 1 312 1 328 1 120 1 262 1 273 1 
30 1 145 1 
346 1 226 1 41 1 
313 1 240 1 214 2 164 1 229 1 18 1 328 1 120 1 111 1 260 1 338 1 173 1 249 1 175 1 78 1 312 1 42 1 380 1 
313 1 240 1 214 2 164 1 229 1 18 1 328 1 120 1 111 1 260 1 338 1 173 1 249 1 175 1 78 1 312 1 42 1 380 1 
313 1 240 1 214 2 164 1 229 1 18 1 328 1 120 1 111 1 260 1 338 1 173 1 249 1 175 1 78 1 312 1 42 1 380 1 
346 1 30 1 145 1 
346 1 30 1 145 1 
226 1 41 1 
346 1 226 1 41 1 
283 1 349 1 
120 1 207 1 35 2 153 2 260 1 283 1 338 1 312 1 326 1 101 1 197 1 164 1 214 1 266 1 267 1 18 1 328 1 107 1 349 1 111 1 200 1 94 2 142 1 27 2 173 1 249 1 32 2 
334 1 227 1 279 1 337 1 6 1 153 2 98 1 126 1 195 1 212 2 160 1 161 2 70 1 370 1 293 2 16 1 372 1 316 1 298 1 352 1 54 2 140 2 94 2 79 1 178 1 301 1 32 2 82 2 303 1 333 1 61 1 
223 1 369 1 15 1 51 2 293 2 255 1 321 1 206 1 336 1 76 1 24 1 140 2 99 1 79 1 128 1 179 1 82 2 160 1 58 1 
369 1 15 1 51 2 293 1 255 1 321 1 206 1 336 1 309 1 24 1 140 1 79 1 128 1 179 1 82 1 160 1 58 1 
223 1 254 1 293 1 188 1 279 1 140 1 28 1 79 1 144 1 96 1 82 1 160 1 58 1 61 1 
223 1 369 1 15 1 51 2 293 1 255 1 321 1 206 1 336 1 76 1 24 1 140 1 79 1 128 1 179 1 82 1 160 1 58 1 
353 1 
78 1 332 1 300 1 258 1 358 1 213 1 183 1 
4 1 340 1 286 1 102 1 103 1 131 1 18 1 91 1 173 1 332 1 78 2 300 1 112 1 379 1 382 1 183 1 148 1 
254 1 4 4 5 1 339 1 99 1 67 2 341 2 103 4 102 4 160 4 213 1 18 5 17 2 269 2 218 2 21 1 219 1 26 2 173 5 79 3 78 8 112 5 113 2 82 3 183 9 274 2 319 2 33 2 184 6 228 2 358 1 279 10 121 2 361 1 364 2 43 2 286 12 44 3 368 6 131 6 327 2 371 2 293 3 134 2 330 1 138 2 140 3 332 8 201 1 300 2 56 3 382 4 61 3 148 3 
149 1 275 1 228 2 205 1 189 1 4 2 361 1 233 1 67 2 364 2 286 6 129 1 102 2 103 2 368 5 131 3 265 1 327 2 269 1 18 1 17 2 218 1 271 1 173 1 78 5 332 5 300 2 112 1 80 1 382 2 114 1 183 8 319 2 148 1 184 5 
354 1 35 1 2 1 4 1 153 1 39 1 323 1 67 1 100 1 102 1 103 1 264 1 314 1 327 2 269 1 18 1 17 2 94 1 170 1 27 1 173 1 376 1 332 2 378 1 32 1 317 1 382 1 183 2 
358 1 4 1 332 1 78 1 300 1 103 1 382 1 102 1 213 1 183 1 
327 2 228 2 269 1 17 2 67 2 332 5 78 5 364 2 286 10 113 1 319 2 368 5 183 5 184 5 131 5 
173 1 78 1 18 1 300 1 112 1 148 1 
254 2 279 1 4 1 361 2 339 2 208 1 287 1 102 2 103 2 160 1 263 1 293 4 18 3 329 1 218 2 140 4 173 3 28 1 79 1 332 2 144 1 201 1 112 4 381 1 382 2 82 4 183 2 61 1 148 2 
254 1 227 1 335 1 151 1 279 1 35 2 337 1 2 2 153 3 38 1 6 1 98 1 190 1 212 2 160 1 197 1 16 1 293 1 315 1 372 1 316 1 54 1 140 1 94 3 27 2 79 1 32 2 317 1 56 1 82 1 303 1 61 1 
167 1 4 1 218 1 361 1 332 2 78 4 300 2 286 4 103 1 382 1 102 1 368 2 183 1 184 2 131 2 
312 1 356 1 120 1 
312 1 356 1 120 1 
312 1 120 1 380 1 349 1 182 1 
312 1 356 1 120 1 
209 1 312 1 120 1 
209 1 312 1 120 1 
209 1 312 1 120 1 
312 1 120 1 
260 1 249 1 
354 1 227 4 16 2 17 1 372 2 316 2 296 1 167 1 109 1 23 1 54 8 98 2 323 1 170 1 325 2 67 1 176 1 212 4 333 4 69 3 
23 1 54 6 323 1 170 1 325 2 354 1 227 3 67 1 17 1 258 1 296 1 333 3 167 1 69 2 
345 1 227 2 228 1 16 1 17 1 372 1 316 1 109 1 98 1 54 4 325 1 67 1 364 1 212 2 333 2 319 1 69 2 
149 2 227 4 228 1 17 1 136 1 189 1 109 1 54 7 325 1 67 1 364 1 114 1 333 3 319 1 69 2 
149 2 304 1 354 2 227 12 228 2 323 2 98 2 325 5 67 3 7 1 364 2 212 4 69 9 89 1 16 2 17 3 372 2 136 1 316 2 296 1 167 1 109 4 23 1 54 23 170 1 176 2 333 11 114 2 319 2 
149 1 54 1 227 1 
54 1 333 1 114 1 
345 1 227 3 16 1 228 1 17 1 372 1 316 1 109 1 98 1 54 6 325 2 67 1 364 1 113 1 212 2 333 3 319 1 69 3 
149 1 227 6 228 2 189 1 98 1 325 1 233 1 67 2 364 2 129 1 212 2 69 2 265 1 16 1 17 2 372 1 316 1 137 1 109 1 271 1 54 12 80 1 114 1 333 6 319 2 
354 1 227 3 17 1 109 1 54 6 323 1 170 1 325 1 67 1 333 3 69 2 
354 1 227 2 16 1 372 1 316 1 296 1 109 1 23 1 323 1 54 3 98 1 325 1 176 1 212 2 333 1 69 2 89 1 
354 2 314 1 227 5 16 1 17 2 372 1 316 1 137 1 109 2 98 1 323 2 54 10 325 3 170 1 67 2 212 2 333 5 69 5 
16 1 17 1 372 1 137 1 316 1 109 1 98 1 54 2 364 1 212 2 333 2 69 1 
227 2 228 1 16 1 17 1 372 1 137 1 316 1 109 1 98 1 54 4 325 1 67 1 364 1 212 2 333 2 319 1 69 2 
354 1 227 2 16 3 372 3 137 1 316 3 109 1 54 3 98 3 323 1 325 1 176 1 377 1 212 6 333 1 89 1 69 2 
149 4 354 3 227 18 228 3 189 1 323 3 98 5 325 7 234 1 67 5 364 3 212 10 89 1 69 12 345 1 16 5 17 5 372 5 136 1 165 1 316 5 137 1 296 1 167 1 109 5 23 1 54 34 170 2 272 1 176 2 377 1 114 3 333 16 319 3 
149 1 354 1 227 4 16 1 17 1 372 1 137 1 316 1 296 1 189 1 167 1 23 1 323 1 98 1 54 8 170 1 325 2 67 1 129 1 212 2 333 4 114 1 69 2 
149 2 354 1 227 5 189 1 323 1 98 2 325 2 67 1 364 1 129 1 212 4 69 3 345 1 16 2 17 2 372 2 136 1 137 1 316 2 296 1 167 1 109 1 23 1 54 11 170 1 114 1 333 6 319 1 
149 1 354 1 227 10 228 2 189 1 323 1 98 3 325 3 233 1 67 3 364 2 129 1 212 6 69 4 345 1 265 1 16 3 17 3 372 3 316 3 137 1 296 1 167 1 109 1 271 1 23 1 54 19 170 1 176 1 80 1 114 1 333 9 319 2 
149 1 354 1 227 7 228 1 189 1 323 1 98 3 325 3 233 1 67 2 364 2 129 1 212 6 69 5 345 1 265 1 16 3 17 3 372 3 316 3 137 1 296 1 167 1 109 2 271 1 23 1 54 17 170 1 176 1 80 1 114 1 333 10 319 2 
149 1 354 1 227 4 16 1 17 1 372 1 137 1 316 1 296 1 189 1 167 1 23 1 323 1 98 1 54 8 170 1 325 2 67 1 129 1 212 2 333 4 114 1 69 2 
149 1 227 6 228 2 189 1 98 1 325 1 233 1 67 2 364 2 129 1 212 2 69 2 265 1 16 1 17 2 372 1 316 1 137 1 109 1 271 1 54 12 80 1 114 1 333 6 319 2 
149 1 354 1 227 8 228 1 189 1 323 1 98 4 325 3 233 1 67 2 364 2 129 1 212 8 69 5 345 1 265 1 16 4 17 3 372 4 316 4 137 1 296 1 167 1 109 2 271 1 23 1 54 18 170 1 176 2 80 1 114 1 333 10 319 2 
149 1 227 7 228 2 189 1 98 4 325 3 233 1 67 2 364 3 129 1 212 8 69 6 265 1 16 4 17 3 372 4 137 1 316 4 109 3 271 1 54 16 176 2 377 1 80 1 114 1 333 9 319 3 
354 3 227 4 17 1 296 2 109 3 23 1 54 7 323 3 325 3 170 1 67 1 333 3 69 6 
149 1 354 1 227 8 228 1 189 1 323 1 98 4 325 3 233 1 67 2 364 2 129 1 212 8 69 4 265 1 16 4 17 3 372 4 137 1 316 4 296 1 167 1 109 1 271 1 23 1 54 18 170 1 176 2 377 1 80 1 114 1 333 10 319 2 
331 1 94 1 73 1 32 1 367 1 197 1 153 1 
73 1 0 1 75 1 122 1 153 1 53 1 331 1 94 1 222 1 32 1 367 1 197 1 
140 1 254 1 28 1 293 1 79 1 144 1 258 1 279 1 82 1 160 1 61 1 
224 1 254 1 293 1 315 1 279 1 35 1 153 2 190 1 94 2 140 1 27 1 79 1 32 1 56 1 82 1 160 1 197 1 61 1 
224 1 62 1 118 1 279 3 35 1 153 2 190 1 39 1 339 1 160 1 197 1 293 1 315 1 140 1 94 2 27 2 26 1 79 1 32 2 56 2 82 1 274 1 61 2 
224 1 62 1 118 1 279 3 35 1 153 2 39 1 339 1 160 1 197 1 293 2 315 1 140 2 94 2 27 2 26 1 79 1 32 2 56 2 81 1 82 2 60 1 274 1 61 2 
254 1 259 1 279 4 87 1 339 1 43 1 341 1 44 1 160 1 293 3 18 2 140 3 26 1 173 2 79 1 78 1 300 1 112 1 56 1 81 1 82 3 274 1 61 1 
254 1 293 3 18 2 279 4 140 3 26 1 339 1 173 2 78 1 79 1 300 1 112 1 341 1 43 1 56 1 44 1 81 1 82 3 160 1 274 1 61 1 33 1 
140 1 293 1 79 1 210 1 82 1 160 1 
254 2 293 7 257 1 278 1 85 1 279 3 336 1 373 1 5 1 140 7 99 1 66 1 79 2 210 1 178 1 68 1 56 1 82 6 160 3 161 1 61 2 
151 1 153 2 6 2 98 2 99 1 67 1 212 4 160 1 69 2 16 2 315 1 17 1 316 2 167 1 23 1 170 1 27 1 79 1 220 1 32 1 82 1 224 1 354 1 227 3 279 1 35 1 38 1 190 1 323 1 325 2 126 1 363 1 193 1 195 1 197 2 293 1 242 1 372 2 296 1 54 6 140 1 94 2 95 1 56 1 303 2 333 3 61 1 
254 1 358 1 279 2 121 1 4 2 326 1 43 1 341 1 44 1 102 2 103 2 213 1 293 1 371 1 18 3 138 1 140 1 173 3 78 1 332 1 300 1 201 1 112 2 82 1 382 2 183 1 33 1 148 1 
293 2 279 2 5 1 219 1 140 2 99 1 79 1 210 1 43 1 56 1 82 2 160 2 61 1 
254 1 293 4 307 1 279 1 140 4 99 1 28 1 144 1 79 1 81 1 82 4 160 1 61 1 
293 2 278 1 279 1 373 1 140 2 339 1 79 1 56 1 180 1 82 2 146 1 160 2 344 1 61 1 
24 1 140 1 254 1 51 1 293 1 79 1 128 1 82 1 206 1 160 1 
293 2 279 1 336 1 352 1 140 2 99 1 79 1 178 1 82 2 160 1 61 1 
254 1 293 5 307 1 85 1 279 3 140 5 339 1 99 1 28 1 66 1 144 1 79 2 178 1 82 4 160 2 61 2 
185 1 254 1 293 5 307 1 279 3 140 5 339 1 99 1 28 1 66 1 144 1 79 2 178 1 82 4 160 2 61 2 
224 1 254 1 293 1 315 1 279 1 35 1 153 2 94 2 140 1 27 1 79 1 32 1 56 1 82 1 160 1 60 1 197 1 61 1 
293 1 257 1 278 1 279 1 373 1 5 1 140 1 339 1 79 1 56 1 82 1 160 2 61 1 
186 1 9 1 10 1 197 1 65 1 
62 1 118 1 186 2 18 2 36 1 246 1 110 1 65 1 39 1 173 2 285 1 78 1 300 1 326 1 236 1 341 1 9 2 10 2 197 1 
334 1 70 1 298 1 65 1 153 1 94 1 32 1 9 1 10 1 
236 1 246 1 65 1 
116 1 187 1 258 1 239 1 
116 1 133 1 187 1 20 1 194 1 239 1 162 1 
133 1 256 1 150 1 
116 1 133 3 276 1 187 1 20 1 34 1 243 2 360 1 237 1 194 3 162 1 239 1 
116 1 133 2 187 1 20 1 194 2 1 1 359 1 239 1 162 1 
116 1 374 1 15 1 133 1 51 1 276 1 177 1 20 1 194 1 206 1 162 1 
116 1 133 1 187 1 276 1 20 1 194 1 162 1 
133 1 187 2 276 1 20 1 194 1 239 1 162 1 
116 1 133 2 187 1 276 1 20 2 123 1 22 1 194 2 49 1 162 2 
116 2 133 3 215 1 187 1 276 1 20 1 1 2 152 1 157 1 177 1 194 3 239 1 162 1 
116 1 133 2 15 1 51 2 187 1 276 1 20 1 19 1 1 1 206 1 24 1 179 1 194 2 239 1 162 1 
116 2 133 4 215 1 187 1 276 1 20 2 119 1 1 2 359 1 177 1 194 4 239 1 162 2 
116 1 133 1 187 1 276 1 20 1 194 1 239 1 162 1 
116 3 225 1 133 4 215 1 187 2 20 1 1 2 243 1 34 1 360 1 177 1 194 4 239 2 162 1 
116 1 50 1 13 1 133 2 187 1 276 1 20 1 74 1 1 1 194 2 162 1 239 1 
116 1 90 1 133 3 187 1 276 1 20 1 194 3 243 2 34 2 360 1 239 1 162 1 
124 1 116 2 202 2 115 1 
133 1 276 1 20 1 194 1 308 1 162 1 
116 1 157 1 133 2 187 1 276 1 20 1 194 2 1 1 239 1 162 1 
25 1 
116 1 133 1 187 1 276 1 20 1 194 1 239 1 162 1 
116 1 157 1 133 3 187 1 276 1 20 1 194 3 1 1 243 1 239 1 162 1 
116 1 225 1 215 1 177 1 
116 1 187 1 

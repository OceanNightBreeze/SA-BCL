#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
281 1 38 2 231 1 152 2 43 9 154 1 45 1 158 1 79 1 305 6 52 5 244 2 291 1 309 4 245 1 113 1 9 1 247 2 33 2 295 1 373 3 64 2 251 9 120 2 145 1 148 1 343 1 226 1 
281 1 38 2 231 1 152 2 43 9 154 1 45 1 158 1 79 1 305 6 52 5 244 2 291 1 309 4 245 1 113 1 247 2 9 1 33 2 295 1 373 3 64 2 251 9 120 2 145 1 148 1 343 1 226 1 
281 1 38 2 231 1 152 2 43 10 154 1 45 1 158 1 79 1 305 7 52 6 244 2 291 1 309 5 245 1 113 1 247 2 9 1 33 2 295 1 373 4 64 2 251 10 120 2 145 1 148 1 343 1 226 1 
281 1 38 2 231 1 152 2 43 7 154 1 45 1 79 1 305 4 52 4 244 1 291 1 309 3 245 1 113 1 247 2 9 1 33 2 295 1 373 2 64 2 251 7 120 2 145 1 148 1 343 1 226 1 
113 1 38 1 247 1 231 1 33 1 373 1 43 4 64 1 158 1 79 1 145 1 120 1 251 4 305 3 52 3 148 1 244 2 309 2 
59 1 38 1 231 1 152 1 33 1 73 1 43 2 45 1 64 1 145 1 120 1 251 2 52 1 147 1 148 1 291 1 
231 1 152 1 373 1 43 3 154 1 64 2 145 1 120 2 251 3 305 1 52 2 148 1 309 1 
18 1 38 1 231 1 152 1 154 1 43 9 158 1 79 1 305 7 52 5 133 1 244 2 309 4 113 1 247 1 33 1 295 1 373 3 64 2 251 9 120 2 145 1 148 1 226 1 
18 1 38 1 231 1 152 1 154 1 43 9 158 1 79 1 305 7 52 5 133 1 244 2 309 4 113 1 247 1 33 1 295 1 373 3 64 2 251 9 120 2 145 1 148 1 226 1 
316 1 178 1 104 1 
166 2 125 1 104 1 
34 2 378 1 116 2 204 2 138 1 337 2 290 2 202 2 
323 1 69 1 229 1 124 1 103 1 285 1 204 2 21 1 72 1 26 2 365 2 303 1 77 1 4 1 213 1 185 1 243 2 290 2 312 2 7 1 134 1 114 2 116 2 218 1 138 1 89 1 337 3 374 1 339 1 34 2 378 1 297 1 360 1 201 1 321 1 68 1 202 3 
34 1 160 1 116 1 97 1 204 1 138 1 153 1 337 1 290 1 202 1 
203 1 101 1 178 1 104 1 313 1 337 1 338 1 34 1 211 1 358 1 5 1 97 1 320 1 202 1 
203 2 101 1 178 1 104 1 116 1 204 1 337 1 338 1 34 1 211 2 358 1 5 1 97 1 290 1 202 1 
180 1 203 1 211 1 88 1 2 1 
180 1 119 1 203 2 122 1 178 1 211 2 104 1 88 1 
180 1 203 1 211 1 
203 1 88 1 116 1 204 1 138 1 153 1 337 1 34 1 211 1 160 1 97 1 187 1 290 1 202 1 
104 1 
180 1 119 1 203 2 178 1 211 2 104 1 61 1 88 1 
203 5 278 1 112 2 178 1 104 1 88 2 25 1 222 1 119 1 180 2 196 1 183 1 108 2 211 5 289 2 110 1 359 1 242 1 30 1 
316 1 378 1 
217 1 116 1 204 1 337 2 210 1 34 2 378 2 290 1 202 2 
191 1 221 1 164 1 
7 1 229 1 134 1 70 1 114 1 218 1 285 1 26 1 337 1 374 1 303 1 77 1 378 1 360 1 243 1 202 1 
7 1 229 1 134 1 114 1 218 1 285 1 137 1 204 1 105 1 26 1 221 1 374 1 337 2 303 1 77 1 34 1 360 1 243 1 290 1 202 2 
34 3 378 1 116 1 204 3 105 1 337 3 290 3 202 3 
34 1 97 1 204 1 153 1 337 1 290 1 202 1 
210 1 34 1 217 1 116 1 97 1 204 1 337 1 290 1 202 1 
203 1 323 1 101 1 229 1 285 1 204 3 21 1 72 1 105 1 26 1 365 2 303 1 210 1 77 1 211 1 213 1 5 1 243 1 290 3 312 1 265 1 7 1 333 1 134 1 114 1 218 1 116 2 137 1 138 1 89 1 374 1 337 4 338 1 339 1 34 3 378 1 297 1 358 1 97 1 360 1 201 1 321 1 68 1 202 4 
34 2 378 1 204 1 105 1 320 1 41 1 337 2 290 1 202 2 
203 1 265 1 101 1 39 1 116 1 104 1 137 1 204 3 105 2 338 1 337 3 210 1 34 3 211 1 358 1 97 1 5 1 290 3 202 3 
210 1 34 2 116 1 204 2 191 1 105 1 221 1 337 2 290 2 202 2 
7 1 229 1 134 1 114 1 218 1 285 1 26 1 337 1 374 1 303 1 77 1 378 1 360 1 243 1 202 1 
229 1 134 1 114 1 285 1 26 1 337 1 374 1 303 1 77 1 378 1 29 1 360 1 243 1 82 1 202 1 
323 1 362 1 363 1 72 1 365 2 4 2 369 1 56 1 216 1 164 2 370 1 312 4 267 1 191 2 89 1 271 1 221 2 172 1 318 1 297 2 98 1 201 1 321 1 68 1 
34 1 174 1 97 1 5 1 204 1 337 1 290 1 202 1 
116 1 204 4 137 1 105 2 41 1 337 5 75 1 210 1 34 5 378 1 320 1 276 1 290 4 202 5 
34 2 174 1 97 1 204 2 153 1 337 2 290 2 202 2 
121 1 141 1 
121 1 141 1 
144 1 259 1 
144 1 259 1 
144 1 259 1 
87 1 121 1 141 1 
87 1 121 1 141 1 
121 1 42 1 141 1 
144 1 121 2 184 1 259 1 296 1 141 2 
87 1 121 1 141 1 
121 1 140 1 141 1 
121 1 140 1 141 1 
121 1 140 1 141 1 
203 2 135 2 31 1 104 1 364 2 236 1 296 1 12 2 141 2 181 1 76 1 46 1 35 2 211 2 65 3 143 1 121 2 53 1 215 2 
203 1 135 1 364 1 204 2 258 1 42 1 169 1 337 2 12 1 141 1 44 1 181 1 3 1 34 2 349 1 211 1 65 1 378 1 50 1 121 1 16 1 215 1 290 2 202 2 
38 1 247 1 33 1 
59 1 38 1 33 1 
228 1 59 1 247 2 324 1 33 3 348 1 
59 1 247 1 324 1 33 2 348 1 237 1 
59 1 247 1 324 2 33 2 348 1 
227 2 203 5 283 1 178 1 125 1 104 2 207 2 180 1 157 1 327 1 183 1 108 1 289 1 211 5 212 1 50 1 110 2 369 1 56 1 240 1 216 1 112 1 166 3 190 2 88 4 63 1 168 1 169 1 271 1 119 1 196 3 16 1 
278 1 227 6 203 9 178 1 125 3 104 5 2 5 207 6 346 1 347 1 180 6 157 1 327 2 183 1 108 2 211 9 289 2 212 2 110 6 369 3 56 3 216 3 310 1 112 2 292 1 166 9 88 7 268 1 63 3 271 3 315 5 119 1 196 8 341 1 16 4 
203 3 278 1 227 2 178 1 283 1 125 2 104 3 207 2 327 1 108 1 289 1 211 3 212 1 110 2 369 1 240 1 56 1 216 1 112 1 190 1 166 4 88 2 63 1 271 1 196 3 16 1 
227 4 203 4 278 1 178 1 283 1 125 3 104 4 207 4 346 1 347 1 327 1 108 1 289 1 211 4 212 1 110 4 369 2 240 1 56 2 216 2 310 1 112 1 166 7 190 2 88 3 63 2 271 2 196 5 16 2 
316 1 134 1 20 1 
134 1 90 1 
96 1 
134 1 285 1 
134 3 20 2 285 1 167 1 22 1 303 1 
134 1 285 1 303 1 
134 1 175 1 
312 7 352 1 37 1 371 1 62 2 208 1 271 1 288 1 13 1 172 2 297 3 4 4 132 1 367 1 260 1 56 1 370 3 
312 7 352 1 37 1 371 1 62 2 208 1 271 1 288 1 13 1 172 2 297 3 4 4 132 1 367 1 260 1 56 1 370 3 
312 7 352 1 37 1 371 1 62 2 208 1 271 1 288 1 13 1 78 1 172 2 297 3 4 4 132 1 367 1 260 1 56 1 370 3 
323 1 19 1 37 1 282 1 72 1 208 2 365 2 288 1 47 1 4 16 132 2 367 2 260 1 262 4 369 3 55 1 56 4 216 3 370 10 312 31 352 1 62 3 371 5 63 3 269 1 271 4 13 2 14 1 172 5 95 3 297 15 67 1 201 1 321 1 
312 9 352 1 323 2 37 1 282 1 284 1 371 1 62 2 72 2 208 1 365 4 271 1 288 1 13 1 128 1 172 3 297 4 4 5 132 1 367 1 56 1 321 2 201 2 370 4 
228 1 257 1 38 1 231 1 152 1 26 1 43 2 77 1 305 1 52 1 307 1 162 1 330 1 243 1 189 1 59 1 114 1 60 1 247 1 335 1 11 1 33 2 64 1 251 2 120 1 145 1 319 1 176 1 360 1 148 1 
228 1 257 1 38 1 231 1 152 1 234 1 26 1 43 3 77 1 161 1 305 2 52 1 307 1 162 1 308 1 330 1 243 1 189 1 59 1 114 1 60 1 247 1 11 1 33 2 64 1 251 3 120 1 319 1 360 1 148 1 
228 1 38 1 231 1 152 1 234 1 26 1 43 2 77 1 305 2 52 1 162 1 308 1 330 1 243 1 189 1 59 1 114 1 60 1 247 1 11 1 33 2 251 2 319 1 360 1 148 1 
322 1 229 1 152 2 285 1 26 1 43 1 77 1 161 1 162 2 330 2 243 1 134 1 114 1 266 1 11 2 192 1 64 1 250 1 173 1 197 1 251 1 120 1 360 1 
228 1 257 1 38 1 152 1 234 1 26 1 43 1 77 1 307 1 162 1 330 1 243 1 189 1 59 1 114 1 60 1 247 1 11 1 33 2 64 1 251 1 120 1 145 1 319 1 176 1 360 1 
109 1 
149 2 255 2 203 5 101 1 102 1 104 2 345 1 209 1 108 1 211 5 110 2 5 1 165 1 112 1 166 2 114 2 354 1 313 1 118 1 119 3 223 2 358 1 224 1 360 1 320 1 322 1 229 2 178 1 125 2 71 2 127 1 285 1 286 1 326 2 26 2 180 6 287 1 327 1 183 1 77 1 289 1 243 2 246 2 134 1 136 2 337 1 338 1 250 1 196 2 34 1 340 1 377 1 97 1 198 4 202 1 
203 3 101 1 286 1 345 1 287 1 180 2 211 3 5 1 61 1 313 1 337 1 338 1 119 1 223 1 34 1 377 1 358 1 224 1 97 1 198 2 320 1 202 1 
203 3 101 1 178 1 104 1 286 1 326 1 345 1 180 1 287 1 211 3 5 1 61 1 313 1 337 1 338 1 119 1 34 1 377 1 358 1 224 1 97 1 198 3 320 1 202 1 
203 3 149 1 101 1 178 1 104 1 286 1 326 1 345 1 287 1 180 2 211 3 5 1 61 1 313 1 337 1 338 1 119 1 223 1 34 1 377 1 358 1 224 1 97 1 198 3 320 1 202 1 
255 2 203 5 149 4 123 1 101 1 178 5 125 2 71 2 151 1 104 5 286 1 326 4 209 1 345 1 180 7 287 1 183 1 108 1 289 1 211 5 131 1 110 1 5 1 163 1 112 1 246 2 353 1 61 1 136 2 313 1 337 1 338 1 119 3 196 1 223 4 34 1 340 1 377 1 358 1 224 1 97 1 198 6 320 1 202 1 
203 4 255 2 149 2 101 1 104 2 209 1 345 1 108 1 211 4 5 1 110 1 112 1 165 1 166 2 313 1 119 2 223 2 358 1 224 1 320 1 178 1 71 2 125 2 286 1 326 2 287 1 180 4 183 1 289 1 246 2 136 2 338 1 337 1 196 1 34 1 377 1 340 1 97 1 198 4 202 1 
149 2 255 2 203 4 101 1 123 1 178 1 125 2 71 2 104 1 286 1 326 2 209 1 345 1 180 4 287 1 183 1 108 1 211 4 289 1 131 1 110 1 5 1 163 1 112 1 246 2 136 2 313 1 337 1 338 1 119 2 223 2 196 1 34 1 340 1 377 1 358 1 224 1 97 1 198 4 320 1 202 1 
149 2 255 2 203 4 101 1 123 1 178 1 125 2 71 2 104 1 286 1 326 2 209 1 345 1 180 4 287 1 183 1 108 1 211 4 289 1 131 1 110 1 5 1 163 1 112 1 246 2 136 2 313 1 337 1 338 1 119 2 223 2 196 1 34 1 340 1 377 1 358 1 224 1 97 1 198 4 320 1 202 1 
149 2 255 2 203 4 279 2 101 1 178 1 71 2 104 1 23 2 286 1 206 1 326 2 345 1 180 4 287 1 106 1 183 1 108 1 211 4 289 1 110 1 5 1 163 1 112 1 166 2 313 1 337 1 338 1 119 2 223 2 196 1 34 1 340 1 377 1 358 1 224 1 97 1 198 4 320 1 202 1 277 1 
255 2 203 4 149 3 123 1 101 1 178 1 125 2 71 2 104 1 286 1 326 3 209 1 345 1 287 1 180 5 183 1 108 1 289 1 211 4 131 1 110 1 5 1 163 1 112 1 246 2 353 1 136 2 313 1 337 1 338 1 119 2 196 1 223 3 34 1 340 1 377 1 358 1 224 1 97 1 198 5 320 1 202 1 
255 2 203 4 149 3 123 1 101 1 178 1 125 2 71 2 104 1 286 1 326 3 209 1 345 1 287 1 180 5 183 1 108 1 289 1 211 4 131 1 110 1 5 1 163 1 112 1 246 2 353 1 136 2 313 1 337 1 338 1 119 2 196 1 223 3 34 1 340 1 377 1 358 1 224 1 97 1 198 5 320 1 202 1 
149 2 255 2 203 4 279 2 101 1 178 1 71 2 104 1 23 2 286 1 326 2 345 1 180 4 287 1 106 1 183 1 108 1 289 1 211 4 110 1 5 1 165 1 112 1 166 2 313 1 337 1 338 1 119 2 223 2 196 1 34 1 340 1 377 1 358 1 224 1 97 1 198 4 320 1 202 1 
323 1 37 1 362 1 72 1 365 2 288 1 4 3 132 1 367 1 56 1 370 2 164 1 312 6 352 1 62 1 191 1 89 1 221 1 271 1 316 1 172 2 378 2 297 3 201 1 321 1 68 1 
323 1 205 1 72 1 365 2 4 6 329 1 262 2 186 1 369 2 56 2 57 1 216 1 370 2 164 8 312 10 8 1 371 1 191 3 89 1 63 2 221 8 271 1 14 1 172 1 95 2 297 4 201 1 321 1 68 1 
323 1 229 1 70 1 126 1 285 1 204 1 72 1 105 1 26 1 365 2 303 1 77 1 130 1 213 1 4 1 329 1 185 1 243 1 290 1 312 2 7 1 134 1 114 1 218 1 137 1 191 1 89 1 374 1 337 2 170 1 34 1 378 1 297 1 360 1 321 1 201 1 68 1 202 2 
37 1 204 1 105 1 303 2 159 1 213 1 4 10 56 3 216 2 164 7 312 20 352 1 7 2 114 3 218 2 62 1 63 2 355 2 271 3 221 7 172 4 360 2 321 3 68 3 323 3 229 1 285 2 234 1 72 3 26 3 365 6 288 1 77 2 329 1 132 1 367 1 185 1 369 2 243 3 290 1 370 8 134 2 137 1 371 4 191 7 89 3 139 2 194 1 337 3 374 2 195 2 339 2 34 1 378 2 297 10 253 1 254 2 201 3 202 3 
322 1 323 2 229 2 362 1 103 2 233 1 204 1 285 2 234 1 72 2 40 1 105 1 26 8 365 4 77 2 4 1 213 1 214 1 185 1 331 1 243 8 290 1 312 2 134 3 114 7 335 1 89 2 372 1 249 1 337 1 250 1 34 1 171 1 297 1 360 2 201 2 321 2 202 1 68 2 
323 1 204 1 72 1 365 2 210 1 4 1 329 1 369 1 56 1 216 1 290 1 370 1 164 1 312 3 116 1 191 1 89 1 63 1 221 1 337 1 271 1 142 1 34 1 172 1 297 2 201 1 321 1 68 1 202 1 
312 2 323 1 362 1 363 1 371 1 191 1 89 1 72 1 365 2 221 1 4 2 369 1 56 1 321 1 201 1 370 1 164 1 68 1 
312 2 323 1 362 1 191 1 89 1 72 1 365 2 221 1 271 1 172 1 297 2 98 1 216 1 321 1 201 1 370 1 164 1 68 1 
312 4 323 1 362 1 371 1 191 2 89 1 72 1 63 1 365 2 271 1 221 2 172 1 297 2 4 2 369 1 56 1 216 1 321 1 201 1 370 2 164 2 68 1 
312 2 323 1 363 1 371 1 191 1 40 1 89 1 72 1 365 2 221 1 4 2 369 1 56 1 321 1 201 1 370 1 164 1 68 1 
312 2 323 1 191 1 40 1 89 1 72 1 365 2 221 1 271 1 172 1 297 2 98 1 216 1 321 1 201 1 370 1 164 1 68 1 
312 4 323 1 371 1 191 2 40 1 89 1 72 1 63 1 365 2 271 1 221 2 172 1 297 2 4 2 369 1 56 1 216 1 321 1 201 1 370 2 164 2 68 1 
312 4 323 1 371 1 191 2 89 1 72 1 63 1 365 2 271 1 221 2 172 1 297 2 4 2 369 1 56 1 216 1 321 1 201 1 370 2 164 2 68 1 
323 1 229 1 285 1 72 1 26 1 365 2 303 1 77 1 4 1 213 1 185 1 243 1 312 2 7 1 134 1 114 1 218 1 89 1 374 1 337 1 339 1 378 1 297 1 360 1 321 1 201 1 202 1 68 1 
323 1 229 1 285 1 72 1 26 1 365 2 303 1 77 1 4 1 213 1 185 1 29 1 82 1 243 1 312 2 134 1 114 1 89 1 374 1 337 1 378 1 297 1 360 1 199 1 321 1 201 1 202 1 68 1 
312 4 323 1 371 1 191 2 89 1 72 1 63 1 365 2 271 1 221 2 172 1 297 2 4 2 329 1 369 1 56 1 216 1 321 1 201 1 370 2 164 2 68 1 
323 1 285 1 72 1 26 1 365 2 303 1 77 1 4 2 369 1 56 1 216 1 243 1 370 2 164 2 312 4 7 1 134 1 114 1 218 1 335 1 371 1 191 2 89 1 63 1 271 1 221 2 374 1 337 1 195 1 339 1 172 1 297 2 360 1 321 1 201 1 202 1 68 1 
323 1 204 1 72 1 365 2 210 1 4 2 329 1 369 1 56 1 216 1 290 1 370 1 164 1 312 3 116 1 371 1 191 1 89 1 63 1 271 1 337 1 221 1 34 1 297 1 274 1 201 1 321 1 68 1 202 1 
323 2 230 1 284 1 325 1 72 2 365 4 155 1 47 1 4 9 262 2 369 3 56 3 241 2 81 2 216 3 370 6 264 1 312 19 58 1 371 3 63 3 270 1 271 3 14 1 172 3 95 1 297 10 201 2 321 2 36 1 
323 3 150 1 282 2 230 2 284 1 72 3 365 6 155 1 47 2 238 1 4 14 262 2 369 3 263 1 56 3 241 1 81 4 216 2 370 4 312 26 58 1 371 2 63 3 270 1 314 1 271 2 172 2 95 2 297 12 252 1 275 1 201 3 321 3 36 2 
150 1 37 1 155 1 47 3 4 20 262 4 56 5 263 1 216 4 312 41 264 1 58 1 352 1 62 1 63 4 270 1 314 1 271 5 14 1 172 4 275 1 321 3 323 3 230 1 282 1 284 1 72 3 365 6 288 1 238 1 132 1 367 1 369 4 81 4 241 1 370 8 84 1 371 4 95 3 297 21 252 1 201 3 36 2 
150 1 323 4 37 1 282 2 230 1 284 1 72 4 365 8 155 1 288 1 47 3 238 1 4 20 132 1 367 1 262 4 369 4 263 1 56 5 241 1 81 4 216 3 370 7 264 1 312 38 84 1 352 1 58 1 62 1 371 3 63 4 270 1 314 1 271 4 14 1 172 4 95 3 297 18 252 1 275 1 201 4 321 4 36 2 
150 1 323 2 37 1 282 1 230 1 284 1 72 2 365 4 155 1 288 1 47 2 238 1 4 27 132 1 367 1 262 4 369 7 263 1 56 8 241 1 81 4 57 2 216 7 370 14 312 52 352 1 58 1 62 1 371 7 63 7 270 1 314 1 271 8 14 2 172 7 95 4 297 25 252 1 275 1 201 2 321 2 36 1 
135 1 364 1 121 1 53 1 193 1 236 1 215 1 296 1 141 1 12 1 
349 1 42 1 
135 1 364 1 121 1 117 1 336 1 235 1 215 1 141 1 12 1 
203 1 135 1 104 1 364 1 236 1 296 1 12 1 141 1 181 1 76 1 46 1 35 1 211 1 65 2 143 1 121 1 53 1 215 1 
203 1 135 1 104 1 364 1 236 1 296 1 12 1 141 1 181 1 76 1 46 1 35 1 211 1 65 2 143 1 121 1 53 1 215 1 
203 1 135 1 104 1 364 1 236 1 296 1 12 1 141 1 181 1 76 1 46 1 35 1 211 1 65 2 143 1 121 1 53 1 215 1 
188 1 87 1 184 1 
188 1 87 1 184 1 
32 1 140 1 
32 1 184 1 140 1 
258 1 44 1 
203 1 364 1 204 2 258 1 42 1 44 1 3 1 211 1 349 1 50 1 215 1 290 2 135 1 88 1 169 1 337 2 141 1 12 1 34 2 35 1 15 1 143 1 65 1 378 1 121 1 16 1 202 2 
188 1 87 1 
32 1 184 1 140 1 
323 1 177 1 103 2 285 1 233 1 24 1 72 1 26 2 365 2 77 1 4 1 213 1 329 1 185 1 243 2 312 2 83 1 134 1 114 2 10 1 89 1 337 2 34 2 171 1 297 1 360 1 99 1 321 1 201 1 68 1 202 2 
228 1 59 1 38 1 114 2 60 1 247 1 335 1 33 2 234 1 26 2 179 1 77 1 376 1 319 1 307 1 360 1 6 1 330 1 243 2 
228 1 59 1 38 1 114 1 60 1 247 1 33 2 234 1 1 1 26 1 77 1 376 1 319 1 307 1 330 1 360 1 243 1 
322 1 229 1 134 1 114 1 285 1 192 1 26 1 250 1 77 1 298 1 360 1 6 1 330 1 243 1 
228 1 59 1 38 1 114 1 60 1 247 1 33 2 234 1 26 1 179 1 77 1 376 1 319 1 307 1 360 1 6 1 330 1 243 1 
366 1 
196 1 316 1 178 1 104 1 110 1 242 1 222 1 
203 1 178 1 125 1 104 2 209 1 180 1 183 1 108 1 289 1 211 1 110 1 112 1 246 1 166 1 136 1 119 1 196 1 
203 5 104 8 207 6 303 3 108 4 211 5 49 2 306 1 110 8 261 1 351 1 56 2 216 2 112 4 166 12 114 3 219 1 167 1 63 2 118 1 271 2 222 1 119 3 273 2 175 2 360 4 227 6 229 1 280 2 178 2 125 6 20 2 285 3 74 2 26 3 180 5 327 2 182 2 77 3 183 4 289 4 80 2 369 2 242 1 243 3 85 2 134 10 334 1 335 1 90 3 139 2 338 2 196 9 93 2 
203 1 227 5 150 1 178 2 125 3 104 5 301 1 207 5 180 1 327 1 183 2 47 1 108 2 211 1 289 2 238 1 110 5 262 1 369 2 263 1 56 2 216 2 112 2 85 2 166 6 63 2 118 1 314 1 271 2 119 1 93 1 196 8 272 1 95 1 275 1 
256 1 203 1 123 1 204 1 153 1 288 1 183 1 108 1 289 1 211 1 160 1 132 1 110 2 367 1 56 2 187 1 290 1 112 1 85 2 116 1 138 1 337 1 271 1 93 1 196 2 34 1 97 1 202 1 
112 1 178 1 104 1 222 1 196 1 183 1 108 1 289 1 110 1 242 1 
227 5 85 2 166 10 125 5 104 5 139 1 63 2 207 5 271 2 93 1 196 5 110 5 369 2 56 2 216 2 
203 1 180 1 119 1 178 1 211 1 104 1 
278 1 203 3 322 1 229 2 127 1 285 1 302 1 26 4 180 4 327 2 77 1 183 1 108 2 289 2 211 3 306 1 110 2 261 2 243 4 332 1 112 2 134 1 114 4 354 1 118 2 119 2 250 1 196 2 360 1 
323 1 229 1 204 2 21 1 285 1 72 1 26 1 365 2 303 1 77 1 213 1 243 1 290 2 312 1 7 1 134 1 114 1 116 2 218 1 138 1 89 1 337 3 374 1 339 1 34 2 378 1 297 1 360 1 201 1 321 1 202 3 68 1 
227 2 112 1 166 4 178 2 125 2 104 4 62 1 207 2 118 1 327 1 196 1 183 1 108 1 289 1 110 2 
135 1 364 1 17 1 
135 1 364 1 17 1 
135 1 364 1 236 1 342 1 44 1 
135 1 364 1 17 1 
48 1 135 1 364 1 
48 1 135 1 364 1 
48 1 135 1 364 1 
135 1 364 1 
121 1 141 1 
312 8 323 2 352 1 282 1 37 1 62 1 371 1 72 2 365 4 271 1 288 1 172 2 297 4 4 4 132 1 367 1 56 1 321 2 201 2 370 3 
312 6 352 1 37 1 62 1 271 1 288 1 316 1 172 2 297 3 4 3 132 1 367 1 56 1 370 2 
312 4 323 1 371 1 72 1 63 1 365 2 271 1 172 1 297 2 66 1 4 2 369 1 56 1 216 1 321 1 201 1 370 2 
312 7 371 1 63 1 271 1 14 1 172 1 47 1 95 1 297 4 4 3 262 2 369 1 56 1 216 1 370 2 
323 2 37 1 282 2 205 1 72 2 365 4 288 1 4 11 132 2 367 2 369 2 262 2 56 3 216 2 57 1 370 9 312 23 352 1 62 1 371 4 63 2 220 1 271 3 14 1 172 5 95 2 297 12 321 2 201 2 
312 1 297 1 262 1 
312 1 95 1 4 1 
312 6 323 1 371 1 72 1 139 1 63 1 365 2 271 1 172 2 66 1 297 3 4 3 369 1 56 1 216 1 201 1 321 1 370 3 
323 1 150 1 284 1 72 1 365 2 47 1 4 6 238 1 262 1 369 2 263 1 56 2 216 2 370 2 312 12 371 1 63 2 314 1 271 2 172 1 95 1 297 6 275 1 201 1 321 1 
312 6 371 1 271 1 288 1 172 1 4 3 297 3 132 1 367 1 56 1 370 2 
312 3 352 1 323 1 282 1 37 1 371 1 72 1 220 1 365 2 172 1 4 1 297 2 132 1 367 1 321 1 201 1 370 2 
256 1 312 10 323 1 284 1 371 2 72 1 365 2 271 2 288 1 172 3 4 5 297 5 132 2 367 2 56 2 201 1 321 1 370 5 
312 2 323 1 284 1 371 1 72 1 365 2 4 2 369 1 56 1 321 1 201 1 370 1 
312 4 323 1 284 1 371 1 72 1 63 1 365 2 271 1 172 1 297 2 4 2 369 1 56 1 216 1 321 1 201 1 370 2 
264 1 312 3 323 3 282 1 284 1 371 1 72 3 220 1 365 6 172 1 297 2 4 1 132 1 367 1 321 3 201 3 370 2 
19 1 323 5 37 1 282 2 284 1 72 5 365 10 288 2 47 1 4 16 132 3 367 3 55 1 262 4 369 3 56 5 216 3 370 12 264 1 312 34 352 1 62 1 371 5 63 3 220 1 271 5 14 1 172 7 95 3 297 18 66 1 67 1 201 5 321 5 
323 1 37 1 284 1 72 1 365 2 288 1 47 1 4 4 132 1 367 1 262 1 56 1 263 1 370 2 312 8 352 1 62 1 271 1 172 2 95 1 297 4 201 1 321 1 
323 2 37 1 284 1 72 2 365 4 288 1 47 1 4 6 132 1 367 1 262 2 369 1 263 1 56 2 370 3 312 11 352 1 62 1 371 1 63 1 271 1 14 1 172 2 95 1 297 5 66 1 201 2 321 2 
323 3 150 1 37 1 282 1 284 1 72 3 365 6 288 1 47 1 238 1 4 9 132 1 367 1 262 1 369 2 263 1 56 3 216 2 370 4 312 19 352 1 62 1 371 1 63 2 314 1 271 3 172 3 95 1 66 1 297 10 275 1 201 3 321 3 
323 3 150 1 37 1 282 1 284 1 72 3 365 6 288 1 47 1 4 10 238 1 132 1 367 1 262 1 369 2 263 1 56 3 216 1 370 5 312 17 352 1 62 1 371 2 63 2 314 1 271 2 172 3 95 1 66 1 297 7 275 1 201 3 321 3 
323 1 37 1 284 1 72 1 365 2 288 1 47 1 4 4 132 1 367 1 262 1 56 1 263 1 370 2 312 8 352 1 62 1 271 1 172 2 95 1 297 4 201 1 321 1 
323 1 150 1 284 1 72 1 365 2 47 1 4 6 238 1 262 1 369 2 263 1 56 2 216 2 370 2 312 12 371 1 63 2 314 1 271 2 172 1 95 1 297 6 275 1 201 1 321 1 
323 4 150 1 37 1 282 2 284 1 72 4 365 8 288 1 47 1 238 1 4 10 132 1 367 1 262 1 369 2 263 1 56 3 216 1 370 5 312 18 352 1 62 1 371 2 63 2 314 1 271 2 172 3 95 1 297 8 66 1 275 1 201 4 321 4 
323 4 150 1 282 2 284 1 72 4 365 8 47 1 238 1 4 9 262 1 369 3 263 1 56 3 216 2 370 6 312 16 264 1 371 3 63 3 314 1 271 2 172 3 95 1 297 7 275 1 201 4 321 4 
312 7 352 2 37 1 371 3 271 1 288 1 172 3 297 4 4 3 132 3 367 3 56 1 370 6 
323 4 150 1 37 1 282 2 284 1 72 4 365 8 288 1 47 1 238 1 4 10 132 1 367 1 262 1 369 2 263 1 56 3 216 1 370 4 312 18 264 1 352 1 62 1 371 1 63 2 314 1 271 2 172 3 95 1 297 8 275 1 201 4 321 4 
34 1 378 1 380 1 320 1 41 1 337 1 202 1 
344 1 41 1 337 1 317 1 34 1 378 1 368 1 380 1 320 1 361 1 200 1 202 1 
250 1 322 1 316 1 77 1 229 1 134 1 114 1 285 1 360 1 26 1 243 1 
229 1 134 1 114 1 218 1 285 1 204 1 105 1 26 1 374 1 337 2 303 1 34 1 77 1 378 1 360 1 243 1 290 1 202 2 
101 1 204 2 285 2 105 1 26 1 303 2 77 1 49 1 5 1 261 1 243 1 290 1 134 3 114 1 218 1 337 2 374 1 34 2 378 1 175 1 97 1 360 1 202 2 
101 1 204 2 285 2 105 1 26 2 303 2 77 1 49 1 5 1 261 1 82 1 243 2 290 1 134 3 114 2 337 2 374 1 375 1 34 2 378 1 175 1 97 1 360 1 202 2 
203 2 229 1 178 1 20 1 104 1 285 1 26 3 303 1 180 1 77 1 328 1 211 2 49 1 28 1 261 1 243 3 134 4 114 3 90 1 338 1 375 1 175 1 360 1 
203 2 229 1 178 1 134 4 114 3 104 1 20 1 285 1 90 1 74 1 26 3 338 1 303 1 180 1 375 1 77 1 49 1 211 2 175 1 261 1 360 1 243 3 
77 1 114 1 214 1 360 1 26 1 243 1 
229 2 134 3 114 6 103 1 335 1 115 1 233 1 167 1 285 2 234 1 372 1 26 7 248 1 249 1 303 1 77 2 27 1 214 1 360 3 331 1 243 7 
323 2 37 1 285 1 204 1 72 2 105 1 26 1 365 4 303 1 288 1 77 1 4 3 329 1 132 1 367 1 56 1 243 1 290 1 164 1 370 2 312 6 352 1 7 1 134 1 114 1 335 1 218 1 10 1 62 1 191 1 89 2 221 1 271 1 374 1 337 2 195 1 339 1 34 1 172 2 378 2 297 3 360 1 254 1 321 2 201 2 68 2 202 2 
203 3 229 1 178 1 104 1 20 1 74 1 26 1 180 2 182 1 183 2 108 2 289 2 211 3 80 1 306 1 110 1 242 1 243 1 112 2 134 2 114 1 88 1 90 1 338 1 222 1 119 1 196 1 273 1 
134 2 114 2 334 1 335 1 20 1 167 1 285 1 26 2 303 1 77 1 214 1 360 2 243 2 
322 1 229 1 134 1 114 4 335 1 285 1 26 4 250 1 107 1 375 1 77 1 360 1 243 4 
293 1 134 1 114 2 115 1 285 1 26 2 248 1 303 1 77 1 159 1 54 1 261 1 360 2 243 2 
77 1 229 1 59 1 38 1 60 1 114 1 33 1 360 1 26 1 243 1 
177 1 134 1 114 2 335 1 233 1 285 1 234 1 26 2 77 1 360 1 243 2 
322 1 229 1 134 3 114 4 335 1 233 1 285 2 26 5 249 1 250 1 107 1 77 2 261 1 360 2 243 5 331 1 
322 1 229 1 134 3 114 4 335 1 233 1 285 2 26 5 356 1 250 1 107 1 77 2 261 1 360 2 243 5 331 1 
229 1 134 1 114 1 285 1 204 1 105 1 26 1 374 1 337 2 303 1 34 1 77 1 378 1 360 1 243 1 82 1 290 1 202 2 
134 1 114 1 115 1 167 1 285 1 26 1 248 1 303 1 77 1 27 1 261 1 360 2 243 1 
83 1 294 1 24 1 337 1 34 1 239 1 99 1 111 1 202 1 
129 1 94 1 111 1 
311 1 378 1 294 1 239 1 111 1 
203 2 311 2 265 1 101 1 178 1 104 1 88 1 294 2 338 1 156 1 129 1 211 2 94 1 378 1 358 1 97 1 5 1 239 2 111 1 
316 1 52 1 231 1 148 1 
64 1 251 1 120 1 52 1 231 1 148 1 43 1 
251 1 152 1 11 1 
45 2 64 1 350 1 251 3 120 1 145 1 52 1 231 1 232 1 146 1 148 1 43 3 
64 1 305 1 251 2 120 1 52 1 231 1 148 1 244 1 43 2 
64 1 79 1 38 1 247 1 251 1 120 1 145 1 52 1 33 1 43 1 309 1 
64 1 251 1 120 1 145 1 52 1 148 1 43 1 
64 1 251 1 120 1 145 1 231 1 148 2 43 1 
0 1 43 2 64 2 145 1 120 2 251 2 52 1 100 1 225 1 148 1 
231 1 295 1 373 1 43 3 64 1 145 1 120 1 251 3 305 2 52 2 148 1 226 1 309 1 
228 1 59 1 86 1 38 1 247 1 231 1 33 2 43 2 64 1 145 1 120 1 251 2 305 1 52 1 148 1 
231 1 373 1 43 4 64 2 158 1 145 1 120 2 251 4 305 2 52 2 148 1 244 1 309 1 
64 1 251 1 120 1 145 1 52 1 231 1 148 1 43 1 
232 1 231 2 373 1 43 4 45 1 64 1 350 1 305 2 251 4 120 1 52 3 148 2 381 1 309 1 
18 1 231 1 43 2 64 1 357 1 145 1 120 1 251 2 51 1 305 1 52 1 148 1 
300 1 232 2 231 1 43 3 64 1 45 2 350 1 145 1 120 1 251 3 52 1 148 1 
52 2 299 1 92 1 91 2 
64 1 304 1 251 1 120 1 145 1 43 1 
64 1 305 1 251 2 120 1 145 1 52 1 231 1 148 1 226 1 43 2 
379 1 
64 1 251 1 120 1 145 1 52 1 231 1 148 1 43 1 
231 1 43 3 64 1 45 1 305 1 145 1 120 1 251 3 52 1 148 1 226 1 
52 1 373 1 381 1 309 1 
52 1 148 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (122,172) 107 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (122,172) 107 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 5 363 1 225 2 51 1 122 1 146 1 295 1 252 1 312 1 152 2 299 1 30 2 78 1 101 4 130 2 318 1 302 2 103 9 132 1 104 2 262 6 19 1 323 1 47 1 172 1 359 3 116 2 327 9 
67 5 363 1 225 2 51 1 122 1 146 1 295 1 252 1 312 1 152 2 299 1 30 2 78 1 101 4 130 2 318 1 302 2 103 9 132 1 104 2 262 6 19 1 323 1 47 1 172 1 359 3 327 9 116 2 
67 6 363 1 225 2 51 1 122 1 146 1 295 1 252 1 312 1 152 2 299 1 30 2 78 1 101 5 130 2 318 1 302 2 103 10 132 1 104 2 262 7 19 1 323 1 47 1 172 1 359 4 327 10 116 2 
67 4 363 1 225 2 51 1 122 1 146 1 295 1 252 1 152 2 299 1 30 2 78 1 101 3 130 2 318 1 302 2 103 7 132 1 104 2 262 4 19 1 323 1 47 1 172 1 359 2 327 7 116 1 
78 1 101 2 67 3 130 1 225 1 103 4 132 1 104 1 252 1 312 1 262 3 152 1 299 1 30 1 47 1 359 1 327 4 116 2 
78 1 67 1 363 1 130 1 302 1 225 1 103 2 252 1 272 1 337 1 152 1 30 1 47 1 323 1 325 1 327 2 
78 1 101 1 67 2 302 1 225 2 103 3 122 1 252 1 262 1 30 2 47 1 359 1 327 3 
103 1 225 1 30 1 122 1 47 1 107 1 327 1 
103 1 225 1 30 1 122 1 47 1 107 1 327 1 
48 1 27 1 37 1 
54 2 37 1 308 1 
288 2 374 2 142 2 292 2 218 2 69 1 163 2 340 1 
288 2 22 1 142 2 143 2 50 1 247 1 292 3 249 1 69 1 145 1 228 1 197 1 71 1 336 1 125 1 370 1 57 1 340 1 236 1 208 2 374 2 319 1 354 2 163 2 41 1 18 2 355 1 321 1 187 1 284 1 242 1 263 1 379 1 83 1 218 3 20 2 85 1 
288 1 374 1 34 1 142 1 253 1 292 1 293 1 218 1 69 1 163 1 
288 1 161 1 292 1 37 1 131 1 293 1 40 1 3 1 229 1 27 1 6 1 218 1 243 1 8 1 
374 1 288 1 161 1 142 1 292 1 37 1 131 1 293 1 163 1 40 1 3 2 229 2 27 1 6 1 218 1 
102 1 221 1 223 1 3 1 229 1 
102 1 193 1 27 1 223 1 37 1 44 1 3 2 229 2 
102 1 3 1 229 1 
374 1 288 1 34 1 142 1 223 1 36 1 292 1 293 1 69 1 163 1 3 1 229 1 253 1 218 1 
37 1 
102 1 193 1 27 1 223 1 37 1 2 1 3 2 229 2 
193 1 237 1 102 2 79 2 13 1 257 1 35 2 223 2 185 1 353 1 37 1 3 5 196 1 229 5 95 1 109 1 297 2 27 1 55 1 
48 1 340 1 
288 2 374 1 142 1 292 2 163 1 111 1 53 1 218 2 340 2 
215 1 204 1 89 1 
50 1 247 1 292 1 354 1 228 1 355 1 321 1 336 1 52 1 83 1 218 1 20 1 57 1 340 1 236 1 208 1 
374 1 288 3 142 3 112 1 292 3 218 3 163 3 340 1 
288 1 34 1 142 1 292 1 293 1 218 1 163 1 
288 1 374 1 111 1 142 1 53 1 292 1 293 1 218 1 163 1 
288 3 142 3 143 2 247 1 50 1 292 4 293 1 69 1 145 1 3 1 228 1 197 1 71 1 229 1 336 1 73 1 125 1 370 1 6 1 53 1 57 1 340 1 341 1 9 1 236 1 208 1 374 2 161 1 131 1 354 1 163 3 40 1 18 1 355 1 321 1 187 1 284 1 242 1 263 1 112 1 379 1 83 1 218 4 20 1 
288 2 142 1 292 2 112 1 218 2 163 1 340 1 8 1 157 1 
374 1 288 3 161 1 142 3 292 3 37 1 293 1 131 1 163 3 3 1 40 1 229 1 73 1 53 1 6 1 112 2 356 1 218 3 341 1 
288 1 374 1 215 1 142 1 53 1 292 1 218 1 163 1 
50 1 247 1 292 1 354 1 228 1 355 1 321 1 336 1 83 1 218 1 20 1 57 1 340 1 236 1 208 1 
375 1 50 1 247 1 292 1 354 1 228 1 108 1 321 1 336 1 83 1 218 1 20 1 57 1 340 1 208 1 
143 2 194 1 145 1 175 1 38 1 197 1 18 2 71 2 215 1 242 1 370 1 263 1 204 1 379 1 371 1 235 1 
288 1 117 1 161 1 142 1 292 1 293 1 218 1 163 1 
288 1 142 1 247 1 50 1 292 2 354 1 163 1 228 1 355 1 321 1 336 1 215 1 73 1 112 1 83 1 218 2 20 1 57 1 236 1 208 1 
288 5 374 1 209 1 142 4 292 5 163 4 105 1 73 1 53 1 112 2 218 5 340 1 8 1 157 1 
117 1 288 2 34 1 142 2 292 2 293 1 218 2 163 2 
219 1 198 1 
219 1 198 1 
366 1 136 1 
366 1 136 1 
366 1 136 1 
174 1 219 1 198 1 
174 1 219 1 198 1 
241 1 219 1 198 1 
278 1 366 1 136 1 251 1 219 2 198 2 
174 1 219 1 198 1 
333 1 219 1 198 1 
333 1 219 1 198 1 
333 1 219 1 198 1 
159 1 129 1 352 2 37 1 376 3 3 2 251 1 164 1 198 2 176 2 229 2 188 2 74 1 216 2 113 1 219 2 268 2 88 1 139 1 
288 2 142 2 292 2 311 1 3 1 176 1 198 1 229 1 181 1 340 1 207 1 352 1 376 1 163 2 320 1 188 1 214 1 241 1 218 2 46 1 21 1 219 1 268 1 139 1 
130 1 152 1 104 1 
272 1 130 1 152 1 
272 1 330 1 65 1 152 3 58 1 104 2 
272 1 330 1 348 1 152 2 58 1 104 1 
272 1 330 1 152 2 58 2 104 1 
193 1 49 1 223 4 144 1 194 1 3 5 229 5 25 1 200 2 95 1 201 1 297 1 27 1 54 3 338 1 29 1 102 1 349 1 79 1 35 1 14 2 15 1 185 2 304 1 37 2 353 3 38 1 320 1 308 1 21 1 46 1 324 2 
193 1 221 5 223 7 144 2 195 1 194 3 3 9 229 9 25 1 200 6 95 1 296 5 297 2 27 1 54 9 28 1 29 3 128 1 237 1 102 6 349 3 79 2 35 2 15 2 185 6 304 3 37 5 353 8 38 3 217 1 308 3 170 1 46 4 324 6 326 1 
223 2 144 1 194 1 3 3 229 3 200 2 201 1 297 1 27 1 54 4 338 1 29 1 237 1 79 1 349 1 35 1 15 1 14 1 304 1 185 2 37 3 353 3 38 1 308 2 46 1 324 2 
223 3 144 1 195 1 194 2 3 4 229 4 200 4 201 1 297 1 27 1 54 7 338 1 29 2 237 1 79 1 349 2 35 1 15 1 14 2 304 2 185 4 37 4 353 5 38 2 308 3 170 1 46 2 324 4 326 1 
321 1 48 1 168 1 
321 1 309 1 
250 1 
321 1 336 1 
321 3 336 1 168 2 350 1 83 1 226 1 
321 1 336 1 83 1 
321 1 282 1 
184 1 349 1 90 1 246 1 22 4 280 3 38 1 365 1 106 2 71 3 199 1 18 7 203 1 45 1 137 2 183 1 358 1 
184 1 349 1 90 1 246 1 22 4 280 3 38 1 365 1 106 2 71 3 199 1 18 7 203 1 45 1 137 2 183 1 358 1 
328 1 184 1 349 1 90 1 246 1 22 4 280 3 38 1 365 1 106 2 71 3 199 1 18 7 203 1 45 1 137 2 183 1 358 1 
90 1 246 2 22 16 143 2 194 3 365 2 93 1 197 1 71 15 199 2 97 1 203 1 370 1 298 1 275 3 233 1 29 3 183 1 343 1 32 1 184 5 349 4 238 1 304 3 280 10 38 4 305 4 106 3 18 31 242 1 45 2 379 1 137 5 358 1 
290 1 246 1 90 1 22 5 143 4 365 1 197 2 148 1 199 1 71 4 370 2 298 1 183 1 184 1 349 1 280 4 38 1 106 2 18 9 242 2 379 2 45 1 137 3 358 1 
67 1 310 1 247 1 225 1 228 1 252 1 272 1 152 2 254 1 30 1 234 1 277 1 208 1 78 1 344 1 130 1 302 1 317 1 103 2 104 1 354 1 165 1 262 1 166 1 65 1 264 1 20 1 286 1 47 1 327 2 
67 1 310 1 247 1 225 1 228 1 252 1 272 1 152 2 254 1 154 1 30 1 234 1 208 1 78 1 33 1 130 1 302 1 317 1 103 3 104 1 354 1 62 1 165 1 166 1 262 2 65 1 264 1 20 1 286 1 327 3 
67 1 247 1 228 1 252 1 272 1 152 2 254 1 234 1 208 1 78 1 33 1 130 1 302 1 317 1 103 2 354 1 104 1 62 1 165 1 166 1 262 2 65 1 20 1 286 1 327 2 
50 1 247 1 225 1 228 1 336 1 254 2 126 1 154 1 99 1 30 1 208 1 315 1 212 1 302 2 103 1 354 1 281 1 321 1 166 2 110 1 20 1 286 2 327 1 
310 1 247 1 225 1 228 1 272 1 152 2 254 1 30 1 234 1 208 1 344 1 33 1 130 1 302 1 317 1 103 1 104 1 354 1 165 1 166 1 65 1 264 1 20 1 286 1 47 1 327 1 
210 1 
141 1 193 3 245 1 288 1 332 1 50 2 247 1 292 1 293 1 3 5 95 1 336 1 5 2 297 1 98 2 6 1 54 2 300 1 342 2 8 1 100 1 208 2 102 6 345 1 161 1 15 1 212 1 303 1 162 1 353 2 59 1 354 2 110 1 308 2 20 2 218 1 265 1 228 1 229 5 124 2 27 1 179 2 182 1 79 1 35 1 185 2 37 2 131 1 40 1 134 2 80 4 81 1 321 1 322 2 243 1 
193 1 102 2 245 1 288 1 345 1 161 1 292 1 2 1 293 1 131 1 40 1 3 3 80 2 229 3 124 1 6 1 182 1 300 1 218 1 243 1 8 1 100 1 
288 1 245 1 193 1 292 1 293 1 2 1 3 3 229 3 27 1 6 1 300 1 182 1 8 1 100 1 102 1 345 1 161 1 37 1 131 1 40 1 134 1 80 3 218 1 243 1 
193 1 288 1 245 1 292 1 2 1 293 1 3 3 229 3 124 1 27 1 6 1 98 1 300 1 182 1 8 1 100 1 102 2 345 1 161 1 37 1 131 1 40 1 134 1 80 3 218 1 243 1 
288 1 245 1 193 3 292 1 2 1 293 1 3 5 94 1 229 5 95 1 26 1 5 2 297 1 124 4 27 5 179 2 6 1 98 4 300 1 182 1 342 2 8 1 100 1 102 7 345 1 161 1 79 1 35 1 303 1 185 1 353 1 37 5 131 1 40 1 134 4 80 6 322 2 285 1 308 2 114 1 265 1 218 1 243 1 190 1 
141 1 193 2 245 1 288 1 292 1 293 1 3 4 229 4 95 1 124 2 5 2 297 1 27 1 98 2 179 2 6 1 54 2 300 1 182 1 342 2 8 1 100 1 102 4 345 1 161 1 79 1 35 1 303 1 185 1 37 2 353 1 131 1 40 1 134 2 80 4 322 2 308 2 218 1 265 1 243 1 
193 2 288 1 245 1 292 1 293 1 3 4 94 1 229 4 26 1 95 1 124 2 5 2 297 1 27 1 98 2 179 2 6 1 300 1 182 1 342 2 8 1 100 1 102 4 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 2 80 4 322 2 285 1 308 2 265 1 218 1 243 1 
193 2 288 1 245 1 292 1 293 1 3 4 94 1 229 4 26 1 95 1 124 2 5 2 297 1 27 1 98 2 179 2 6 1 300 1 182 1 342 2 8 1 100 1 102 4 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 2 80 4 322 2 285 1 308 2 265 1 218 1 243 1 
193 2 288 1 245 1 292 1 91 1 293 1 3 4 147 1 94 1 229 4 95 1 124 2 297 1 27 1 369 1 98 2 6 1 54 2 300 1 182 1 77 2 342 2 8 1 100 1 102 4 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 2 80 4 167 2 322 2 218 1 243 1 
193 2 288 1 245 1 292 1 293 1 3 4 94 1 229 4 95 1 26 1 5 2 297 1 124 3 27 1 179 2 6 1 98 3 300 1 182 1 342 2 8 1 100 1 102 5 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 3 80 5 322 2 285 1 308 2 265 1 218 1 243 1 190 1 
193 2 288 1 245 1 292 1 293 1 3 4 94 1 229 4 95 1 26 1 5 2 297 1 124 3 27 1 179 2 6 1 98 3 300 1 182 1 342 2 8 1 100 1 102 5 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 3 80 5 322 2 285 1 308 2 265 1 218 1 243 1 190 1 
141 1 193 2 245 1 288 1 292 1 293 1 3 4 147 1 229 4 95 1 124 2 297 1 27 1 98 2 6 1 54 2 300 1 182 1 77 2 342 2 8 1 100 1 102 4 345 1 161 1 79 1 35 1 303 1 185 1 37 1 353 1 131 1 40 1 134 2 80 4 167 2 322 2 218 1 243 1 
48 1 349 1 90 1 246 1 22 3 143 2 280 2 38 1 145 1 197 1 106 1 71 3 18 6 215 1 242 1 370 1 263 1 204 1 379 1 45 1 137 2 340 2 371 1 183 1 358 1 89 1 
22 6 143 4 120 1 23 1 293 1 145 1 197 2 71 3 367 1 125 1 370 2 204 7 275 2 29 2 340 1 31 1 184 1 349 2 211 1 238 1 304 2 280 1 305 2 18 9 64 1 215 7 242 2 263 2 379 2 89 6 
288 1 222 1 142 1 22 1 247 1 50 1 143 2 23 1 292 2 145 1 228 1 197 1 71 1 336 1 52 1 73 1 125 1 370 1 57 1 340 1 236 1 208 1 354 1 163 1 41 1 355 1 18 2 321 1 242 1 263 1 112 1 83 1 379 1 20 1 218 2 287 1 89 1 244 1 
288 1 142 1 50 1 143 4 247 1 292 2 145 2 197 2 336 1 204 2 57 1 208 1 349 1 304 1 354 1 163 1 18 5 355 1 215 2 112 1 263 2 20 1 218 2 22 3 23 1 224 1 228 1 71 2 73 1 125 1 370 2 29 1 236 1 280 1 377 1 378 1 321 1 284 1 242 2 379 2 83 1 137 1 191 1 86 1 89 1 
0 1 288 1 142 1 22 1 247 2 50 2 143 4 292 1 145 2 228 2 197 2 71 1 336 2 125 1 370 2 56 1 277 1 371 1 10 1 208 7 11 1 33 1 212 1 319 2 354 8 163 1 261 1 41 1 18 2 321 3 110 1 242 2 112 1 263 2 135 1 379 2 218 1 20 8 138 1 
288 1 142 1 22 1 143 2 23 1 292 1 194 1 145 1 197 1 71 2 53 1 370 1 204 1 76 1 29 1 374 1 349 1 304 1 280 1 163 1 38 1 18 3 215 1 242 1 263 1 379 1 137 1 218 1 89 1 
349 1 22 2 143 2 145 1 197 1 283 1 18 2 215 1 242 1 370 1 263 1 204 1 379 1 29 1 371 1 
143 2 194 1 145 1 175 1 38 1 197 1 18 2 71 2 215 1 242 1 370 1 263 1 204 1 379 1 371 1 
349 1 22 2 143 2 304 1 145 1 197 1 18 2 215 1 242 1 370 1 263 1 204 1 379 1 29 1 371 1 
349 1 22 2 143 2 145 1 197 1 283 1 18 2 215 1 242 1 370 1 135 1 263 1 204 1 379 1 29 1 
143 2 194 1 145 1 175 1 38 1 197 1 18 2 71 2 215 1 242 1 370 1 135 1 263 1 204 1 379 1 
349 1 22 2 143 2 304 1 145 1 197 1 18 2 215 1 242 1 370 1 135 1 263 1 204 1 379 1 29 1 
349 1 22 2 143 2 304 1 145 1 197 1 18 2 215 1 242 1 370 1 263 1 204 1 379 1 29 1 
22 1 247 1 50 1 143 2 292 1 145 1 228 1 197 1 71 1 336 1 125 1 370 1 57 1 340 1 236 1 208 1 354 1 41 1 18 2 355 1 321 1 284 1 242 1 263 1 83 1 379 1 20 1 218 1 
22 1 247 1 50 1 143 2 292 1 145 1 228 1 197 1 71 1 336 1 125 1 370 1 57 1 340 1 208 1 375 1 351 1 354 1 41 1 18 2 108 1 321 1 242 1 263 1 83 1 379 1 20 1 218 1 
349 1 22 2 143 2 23 1 304 1 145 1 197 1 18 2 215 1 242 1 370 1 263 1 204 1 379 1 29 1 
22 2 247 1 143 2 292 1 145 1 228 1 197 1 336 1 370 1 204 1 29 1 57 1 277 1 236 1 208 1 349 1 304 1 354 1 377 1 18 2 355 1 321 1 284 1 215 1 242 1 263 1 83 1 379 1 20 1 218 1 
288 1 142 1 22 2 143 2 23 1 292 1 145 1 197 1 4 1 53 1 370 1 204 1 29 1 374 1 184 1 349 1 304 1 280 1 163 1 18 2 215 1 242 1 263 1 379 1 218 1 89 1 
22 9 143 4 364 1 194 3 197 2 148 1 71 10 231 1 370 2 7 2 233 1 255 1 275 1 29 3 184 3 349 3 316 2 238 1 304 3 280 6 38 3 61 1 305 2 18 19 239 1 42 1 189 1 242 2 379 2 137 3 
329 1 269 1 22 14 143 6 364 1 194 2 197 3 148 1 71 12 123 1 370 3 298 2 7 4 255 2 233 2 275 2 29 3 373 1 184 2 349 3 316 1 304 3 280 4 38 2 17 1 133 1 61 1 305 2 18 26 239 2 42 1 242 3 379 3 137 2 
329 1 246 1 90 1 143 6 194 4 148 1 197 3 149 1 298 1 7 4 255 2 349 5 304 4 17 1 61 1 305 4 106 1 18 41 358 1 269 1 22 20 364 1 71 21 123 1 231 1 370 3 275 3 233 3 29 4 183 1 373 1 184 4 238 1 316 1 280 8 38 5 133 1 239 1 42 1 242 3 379 3 45 1 137 4 
329 1 269 1 90 1 246 1 22 20 143 8 364 1 194 3 197 4 148 1 149 1 71 18 123 1 231 1 370 4 298 2 7 4 233 3 255 2 275 3 29 4 183 1 373 1 184 3 349 5 316 1 238 1 304 4 280 7 38 4 17 1 133 1 61 1 305 4 106 1 18 38 239 1 42 1 242 4 45 1 379 4 137 4 358 1 
329 1 269 1 90 1 246 1 22 27 143 4 364 1 194 7 197 2 148 1 71 25 123 1 367 2 370 2 298 1 7 4 233 2 255 1 275 4 29 7 183 1 373 1 184 7 349 8 316 1 238 2 304 7 280 14 38 8 17 1 133 1 61 1 305 4 106 1 18 52 239 1 42 1 242 2 45 1 379 2 137 7 358 1 
346 1 188 1 352 1 251 1 219 1 164 1 176 1 198 1 268 1 88 1 
241 1 181 1 
96 1 188 1 352 1 115 1 219 1 176 1 198 1 268 1 307 1 
129 1 352 1 37 1 376 2 3 1 251 1 164 1 198 1 176 1 229 1 188 1 74 1 216 1 113 1 219 1 268 1 88 1 139 1 
129 1 352 1 37 1 376 2 3 1 251 1 164 1 198 1 176 1 229 1 188 1 74 1 216 1 113 1 219 1 268 1 88 1 139 1 
129 1 352 1 37 1 376 2 3 1 251 1 164 1 198 1 176 1 229 1 188 1 74 1 216 1 113 1 219 1 268 1 88 1 139 1 
278 1 331 1 174 1 
278 1 331 1 174 1 
333 1 177 1 
278 1 333 1 177 1 
214 1 207 1 
118 1 288 2 142 2 223 1 292 2 311 1 3 1 176 1 198 1 229 1 74 1 181 1 340 1 207 1 352 1 376 1 163 2 320 1 188 1 214 1 241 1 216 1 218 2 46 1 21 1 219 1 268 1 
331 1 174 1 
278 1 333 1 177 1 
288 2 22 1 247 1 143 2 23 1 292 2 145 1 228 1 197 1 71 1 336 1 335 1 125 1 370 1 232 1 10 1 206 1 158 1 208 2 11 1 319 2 354 2 41 1 18 2 321 1 242 1 263 1 379 1 20 2 357 1 218 2 
33 1 310 1 130 1 247 1 317 1 104 1 354 2 228 1 230 1 272 1 165 1 166 1 65 1 368 1 152 2 20 2 277 1 192 1 208 2 
33 1 310 1 130 1 247 1 317 1 104 1 354 1 228 1 272 1 165 1 166 1 65 1 152 2 20 1 339 1 192 1 208 1 
220 1 247 1 50 1 212 1 354 1 228 1 230 1 321 1 336 1 166 1 110 1 20 1 99 1 208 1 
33 1 310 1 130 1 247 1 317 1 104 1 354 1 228 1 230 1 272 1 165 1 166 1 65 1 368 1 152 2 20 1 192 1 208 1 
153 1 
48 1 257 1 27 1 185 1 353 1 37 1 55 1 
193 1 3 1 229 1 95 1 5 1 297 1 27 1 179 1 54 1 102 1 79 1 35 1 185 1 353 1 37 2 308 1 265 1 
140 2 193 3 247 3 50 1 194 2 3 5 334 2 95 4 150 2 200 6 336 3 297 4 54 12 55 1 156 2 208 3 102 5 349 2 257 1 15 2 162 1 304 2 353 9 354 3 63 1 168 2 308 6 20 3 267 1 309 3 226 1 227 1 228 4 229 5 72 1 273 2 178 2 27 2 29 2 277 1 79 4 35 4 185 8 37 8 38 2 40 2 378 2 282 2 321 10 82 1 83 3 84 2 324 6 87 2 
193 1 329 1 269 1 194 2 3 1 229 1 200 5 95 2 123 1 273 2 297 2 27 2 75 1 54 6 233 1 275 1 29 2 373 1 102 1 79 2 349 2 15 1 35 2 162 1 185 5 304 2 353 8 37 5 38 2 133 1 305 1 306 1 308 3 324 5 87 1 
288 1 362 1 246 1 90 1 142 1 292 1 293 1 69 1 3 1 229 1 95 1 273 2 297 1 253 1 374 1 79 1 349 2 34 1 35 1 185 2 36 1 353 2 38 1 163 1 285 1 45 1 218 1 87 1 
79 1 35 1 257 1 185 1 37 1 353 1 95 1 297 1 27 1 55 1 
349 2 304 2 185 5 37 5 353 5 194 2 38 2 378 1 200 5 273 2 54 10 308 5 29 2 324 5 87 1 
102 1 193 1 27 1 37 1 3 1 229 1 
193 2 247 1 50 2 3 3 228 1 229 3 95 1 72 1 336 1 202 1 297 2 314 1 208 4 237 1 102 4 79 2 35 2 15 2 212 1 162 2 185 2 353 2 59 1 354 4 63 2 321 1 81 1 110 1 20 4 
288 2 142 2 143 2 50 1 247 1 292 3 69 1 145 1 228 1 197 1 71 1 336 1 125 1 370 1 57 1 340 1 236 1 208 1 374 2 354 1 163 2 18 1 355 1 187 1 321 1 284 1 242 1 263 1 379 1 83 1 20 1 218 3 
79 1 35 1 15 1 185 2 162 1 353 1 37 4 106 1 200 2 95 1 297 1 27 2 54 4 308 2 324 2 
372 1 176 1 268 1 
372 1 176 1 268 1 
214 1 119 1 176 1 268 1 88 1 
372 1 176 1 268 1 
294 1 176 1 268 1 
294 1 176 1 268 1 
294 1 176 1 268 1 
176 1 268 1 
219 1 198 1 
184 1 349 1 90 1 246 1 22 4 143 4 280 3 38 1 197 2 106 1 71 4 18 8 242 2 370 2 298 1 379 2 45 1 137 2 183 1 358 1 
48 1 246 1 90 1 349 1 22 3 280 2 38 1 106 1 71 3 18 6 45 1 137 2 183 1 358 1 
184 1 349 1 22 2 143 2 304 1 280 2 92 1 194 1 38 1 197 1 71 2 18 4 242 1 370 1 379 1 137 1 29 1 
184 1 349 1 22 3 238 1 304 1 280 2 194 1 38 1 305 2 71 4 18 7 137 1 233 1 275 1 29 1 
90 1 246 2 22 11 143 4 194 2 197 2 71 12 367 1 370 2 298 2 127 1 275 2 29 2 183 1 31 1 184 4 349 3 238 1 304 2 280 9 38 3 305 2 106 1 18 23 242 2 45 2 379 2 137 5 358 1 
305 1 18 1 71 1 
22 1 275 1 18 1 
184 1 349 1 22 3 143 2 304 1 92 1 280 3 194 1 38 1 378 1 197 1 71 3 18 6 370 1 242 1 379 1 137 2 29 1 
269 1 329 1 22 6 143 2 194 2 197 1 148 1 71 6 123 1 370 1 275 1 233 1 29 2 373 1 184 1 349 2 304 2 280 2 38 2 133 1 305 1 18 12 242 1 379 1 137 1 
184 1 90 1 349 1 246 1 22 3 280 2 38 1 18 6 71 3 45 1 137 1 
184 1 246 1 22 1 143 2 280 2 197 1 71 2 18 3 242 1 370 1 298 1 45 1 127 1 379 1 137 1 183 1 358 1 
362 1 184 2 246 2 90 1 349 2 22 5 143 2 280 5 38 2 197 1 148 1 18 10 71 5 370 1 242 1 379 1 45 2 137 3 
184 1 349 1 22 2 143 2 280 1 148 1 197 1 18 2 242 1 370 1 379 1 29 1 
184 1 349 1 22 2 143 2 304 1 280 2 194 1 38 1 148 1 197 1 71 2 18 4 242 1 370 1 379 1 137 1 29 1 
184 1 246 1 22 1 143 6 280 2 148 1 197 3 71 2 18 3 231 1 242 3 370 3 298 1 127 1 379 3 45 1 137 1 
90 2 246 3 22 16 143 10 92 1 194 3 197 5 148 1 71 18 231 1 97 1 370 5 298 2 127 1 233 1 275 3 29 3 183 1 343 1 32 1 184 5 349 5 238 1 304 3 280 12 38 5 305 4 106 1 18 34 242 5 45 3 379 5 137 7 358 1 
246 1 90 1 22 4 143 2 197 1 148 1 71 4 370 1 275 1 233 1 183 1 373 1 349 1 280 2 38 1 305 1 106 1 18 8 242 1 379 1 45 1 137 2 358 1 
90 1 246 1 22 6 143 4 92 1 148 1 197 2 71 5 370 2 233 1 275 1 29 1 183 1 373 1 184 1 349 2 238 1 304 1 280 3 38 1 305 2 106 1 18 11 242 2 45 1 379 2 137 2 358 1 
329 1 269 1 90 1 246 1 22 9 143 6 92 1 194 2 197 3 148 1 71 10 123 1 370 3 298 1 275 1 233 1 29 2 183 1 373 1 184 1 349 3 304 2 280 4 38 3 133 1 305 1 106 1 18 19 242 3 45 1 379 3 137 3 358 1 
269 1 329 1 90 1 246 1 22 10 143 6 92 1 194 1 197 3 148 1 71 7 123 1 370 3 298 1 275 1 233 1 29 2 183 1 373 1 184 2 349 3 304 2 280 5 38 2 133 1 305 1 106 1 18 17 242 3 45 1 379 3 137 3 358 1 
246 1 90 1 22 4 143 2 197 1 148 1 71 4 370 1 275 1 233 1 183 1 373 1 349 1 280 2 38 1 305 1 106 1 18 8 242 1 379 1 45 1 137 2 358 1 
269 1 329 1 22 6 143 2 194 2 197 1 148 1 71 6 123 1 370 1 275 1 233 1 29 2 373 1 184 1 349 2 304 2 280 2 38 2 133 1 305 1 18 12 242 1 379 1 137 1 
329 1 269 1 90 1 246 1 22 10 143 8 92 1 194 1 197 4 148 1 71 8 123 1 370 4 298 2 233 1 275 1 29 2 183 1 373 1 184 2 349 3 304 2 280 5 38 2 133 1 305 1 106 1 18 18 242 4 45 1 379 4 137 3 358 1 
329 1 269 1 22 9 143 8 194 2 148 1 197 4 71 7 123 1 231 1 370 4 298 2 233 1 275 1 29 3 373 1 184 3 349 3 304 3 280 6 38 2 133 1 305 1 18 16 242 4 379 4 137 3 
184 3 246 3 90 1 349 1 22 3 280 6 38 1 71 4 18 7 45 3 137 3 183 2 358 1 
329 1 269 1 90 1 246 1 22 10 143 8 194 1 148 1 197 4 71 8 123 1 231 1 370 4 298 2 233 1 275 1 29 2 183 1 373 1 184 1 349 3 304 2 280 4 38 2 133 1 305 1 106 1 18 18 242 4 45 1 379 4 137 3 358 1 
288 1 292 1 218 1 340 1 39 1 8 1 157 1 
289 1 288 1 12 1 256 1 68 1 301 1 292 1 39 1 218 1 340 1 8 1 157 1 
321 1 336 1 48 1 110 1 247 1 212 1 50 1 354 1 20 1 228 1 208 1 
288 1 142 1 50 1 247 1 292 2 354 1 163 1 228 1 355 1 321 1 336 1 112 1 83 1 218 2 20 1 57 1 340 1 208 1 
288 2 161 1 142 2 247 1 292 2 293 1 131 1 354 1 163 1 228 1 282 1 63 1 355 1 321 3 336 2 178 1 112 1 83 2 218 2 20 1 57 1 340 1 208 1 
288 2 142 2 247 1 292 2 293 1 228 1 336 2 178 1 180 1 57 1 340 1 208 2 161 1 354 2 131 1 163 1 282 1 108 1 63 1 321 3 112 1 83 2 20 2 218 2 
102 1 309 1 50 1 247 1 37 1 354 3 40 1 3 2 228 1 282 1 229 2 63 1 321 4 336 1 178 1 168 1 27 1 180 1 83 1 20 3 266 1 171 1 208 3 
102 1 309 1 50 1 247 1 37 1 354 3 40 1 3 2 228 1 282 1 229 2 63 1 321 4 336 1 178 1 168 1 27 1 180 1 83 1 20 3 156 1 208 3 
247 1 354 1 20 1 228 1 138 1 208 1 
0 1 11 1 33 1 347 1 50 2 247 2 319 1 226 1 354 7 271 1 228 3 261 1 321 3 336 2 43 1 83 1 56 1 20 7 277 1 138 1 208 6 
288 1 90 1 246 1 22 3 142 1 247 1 143 4 23 1 292 2 145 2 228 1 197 2 71 3 336 1 370 2 232 1 204 1 57 1 340 2 277 1 183 1 236 1 208 1 349 1 280 2 354 1 38 1 163 1 377 1 106 1 18 6 355 1 321 1 284 1 215 1 242 2 263 2 112 1 45 1 83 1 379 2 137 2 218 2 20 1 191 1 358 1 89 1 
140 1 193 1 309 1 50 1 223 1 3 3 229 3 95 2 72 1 150 1 297 2 27 1 55 1 156 1 208 1 102 2 79 2 257 1 35 2 185 1 353 1 37 1 354 1 40 1 321 2 168 1 20 1 84 1 
321 2 336 1 168 1 247 1 82 1 83 1 226 1 354 2 20 2 277 1 228 2 138 1 208 2 
50 1 212 1 247 1 270 1 354 4 228 1 321 1 336 1 110 1 180 1 20 4 277 1 208 4 
1 1 247 1 354 2 70 1 271 1 228 2 63 1 321 1 336 1 43 1 169 1 83 1 20 2 208 2 
272 1 130 1 152 1 247 1 50 1 317 1 354 1 20 1 228 1 208 1 
321 1 11 1 336 1 33 1 247 1 354 2 20 2 277 1 228 1 206 1 208 2 
11 1 0 1 212 1 50 1 247 2 270 1 354 5 228 2 261 1 63 1 321 3 336 2 110 1 20 5 277 1 208 4 
160 1 11 1 0 1 212 1 50 1 247 2 270 1 354 5 228 2 63 1 321 3 336 2 110 1 20 5 277 1 208 4 
288 1 142 1 50 1 247 1 292 2 354 1 163 1 228 1 108 1 321 1 336 1 112 1 83 1 218 2 20 1 57 1 340 1 208 1 
347 1 247 1 226 1 354 1 271 1 228 2 63 1 321 1 336 1 43 1 83 1 20 1 208 1 
288 1 173 1 213 1 292 1 151 1 335 1 357 1 218 1 158 1 
213 1 276 1 24 1 
151 1 173 1 16 1 213 1 340 1 
161 1 223 1 173 2 16 2 213 1 37 1 293 1 131 1 40 1 3 2 24 1 229 2 151 2 27 1 6 1 276 1 340 1 341 1 361 1 
78 1 252 1 67 1 48 1 
78 1 252 1 67 1 103 1 225 1 30 1 327 1 
302 1 254 1 327 1 
78 1 67 1 363 2 248 1 225 1 103 3 121 1 313 1 252 1 30 1 47 1 327 3 
78 1 252 1 67 1 262 1 103 2 225 1 30 1 116 1 327 2 
101 1 67 1 130 1 225 1 103 1 132 1 104 1 152 1 30 1 47 1 327 1 
78 1 67 1 103 1 225 1 30 1 47 1 327 1 
78 2 252 1 103 1 225 1 30 1 47 1 327 1 
78 1 67 1 103 2 225 2 155 1 30 2 66 1 205 1 47 1 327 2 
78 1 101 1 67 2 225 1 103 3 51 1 252 1 19 1 262 2 30 1 47 1 359 1 327 3 
78 1 67 1 130 1 225 1 103 2 279 1 104 1 252 1 272 1 262 1 65 1 152 2 30 1 47 1 327 2 
78 1 101 1 67 2 225 2 103 4 252 1 312 1 262 2 30 2 47 1 359 1 327 4 116 1 
78 1 252 1 67 1 103 1 225 1 30 1 47 1 327 1 
78 2 101 1 67 3 363 1 248 1 103 4 225 1 313 1 252 2 262 2 30 1 359 1 360 1 327 4 
78 1 67 1 291 1 225 1 103 2 259 1 252 1 262 1 30 1 380 1 47 1 327 2 
78 1 252 1 313 2 67 1 363 2 248 1 103 3 225 1 30 1 47 1 260 1 327 3 
67 2 240 1 274 2 60 1 
103 1 225 1 258 1 30 1 47 1 327 1 
78 1 252 1 67 1 262 1 19 1 103 2 225 1 30 1 47 1 327 2 
186 1 
78 1 252 1 67 1 103 1 225 1 30 1 47 1 327 1 
78 1 67 1 363 1 225 1 103 3 252 1 262 1 19 1 30 1 47 1 327 3 
101 1 67 1 359 1 360 1 
78 1 67 1 

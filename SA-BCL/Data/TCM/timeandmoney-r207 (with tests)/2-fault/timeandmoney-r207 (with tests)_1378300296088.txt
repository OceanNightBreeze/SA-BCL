#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 15 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 106 1 359 1 29 2 199 9 334 1 14 2 63 1 1 1 2 1 34 1 7 4 92 9 342 5 21 1 113 1 9 2 217 2 218 2 220 1 347 3 186 6 241 2 23 1 225 1 262 2 248 1 324 1 
194 1 106 1 359 1 29 2 199 9 334 1 14 2 63 1 1 1 2 1 34 1 7 4 92 9 342 5 21 1 113 1 217 2 9 2 218 2 220 1 347 3 186 6 241 2 23 1 225 1 262 2 248 1 324 1 
194 1 106 1 359 1 29 2 199 10 334 1 14 2 63 1 1 1 2 1 34 1 7 5 92 10 342 6 21 1 113 1 217 2 9 2 218 2 220 1 347 4 186 7 241 2 23 1 225 1 262 2 248 1 324 1 
194 1 106 1 359 1 29 2 199 7 14 2 63 1 1 1 2 1 34 1 7 3 92 7 342 4 21 1 113 1 217 2 9 1 218 2 220 1 347 2 186 4 241 2 23 1 225 1 262 2 248 1 324 1 
21 1 113 1 9 2 217 1 218 1 29 1 199 4 334 1 14 1 347 1 186 3 241 1 225 1 1 1 7 2 92 4 248 1 342 3 
113 1 218 1 359 1 29 1 199 2 14 1 241 1 225 1 1 1 320 1 27 1 191 1 262 1 274 1 92 2 342 1 324 1 
113 1 218 2 199 3 347 1 186 1 241 2 225 1 1 1 34 1 262 1 7 1 92 3 342 2 
194 1 249 1 29 1 199 9 334 1 14 1 1 1 34 1 7 4 92 9 342 5 21 1 113 1 9 2 217 1 282 1 218 2 347 3 186 7 241 2 23 1 225 1 262 1 248 1 
194 1 249 1 29 1 199 9 334 1 14 1 1 1 34 1 7 4 92 9 342 5 21 1 113 1 9 2 217 1 282 1 218 2 347 3 186 7 241 2 23 1 225 1 262 1 248 1 
331 1 259 1 372 1 
345 1 378 2 331 1 
101 1 183 1 94 2 364 2 346 2 65 2 355 2 228 2 
235 1 200 1 61 1 268 2 296 2 86 1 298 1 155 1 35 1 36 1 237 1 364 2 156 1 65 2 303 1 183 1 94 3 311 1 100 1 346 3 314 1 260 2 285 1 43 1 287 1 45 1 185 1 223 1 224 1 101 1 119 1 292 1 53 2 192 1 355 2 228 2 171 2 
183 1 327 1 94 1 110 1 364 1 346 1 65 1 355 1 228 1 50 1 
94 1 40 1 110 1 98 1 331 1 259 1 346 1 10 1 315 1 188 1 244 1 306 1 228 1 265 1 
94 1 40 2 98 2 110 1 331 1 259 1 346 1 10 1 364 1 244 1 65 1 306 1 355 1 228 1 265 1 
40 1 98 1 376 1 93 1 126 1 
297 1 40 2 98 2 331 1 5 1 259 1 376 1 93 1 
40 1 98 1 93 1 
183 1 327 1 40 1 94 1 110 1 98 1 346 1 376 1 50 1 364 1 65 1 264 1 355 1 228 1 
331 1 
297 1 40 2 98 2 331 1 259 1 376 1 93 1 288 1 
40 5 98 5 330 2 216 1 331 1 358 1 259 1 336 1 72 1 376 2 316 2 297 1 206 1 11 1 120 2 245 1 322 1 67 1 93 2 
101 1 372 1 
94 2 346 2 101 2 364 1 65 1 355 1 228 2 212 1 231 1 
3 1 253 1 77 1 
94 1 311 1 346 1 268 1 285 1 43 1 185 1 45 1 49 1 296 1 101 1 298 1 292 1 53 1 35 1 156 1 
94 2 160 1 311 1 346 2 268 1 285 1 43 1 203 1 45 1 185 1 296 1 292 1 298 1 35 1 53 1 364 1 156 1 65 1 77 1 228 1 
101 1 94 3 364 3 346 3 65 3 203 1 355 1 228 3 
327 1 94 1 110 1 364 1 346 1 65 1 228 1 
94 1 110 1 364 1 346 1 65 1 355 1 228 1 212 1 231 1 
235 1 61 1 200 1 268 1 203 1 296 1 298 1 155 1 35 1 36 1 237 1 364 3 156 1 65 3 306 1 212 1 183 1 94 4 40 1 96 1 160 1 110 1 98 1 311 1 100 1 283 1 346 4 314 1 10 1 260 1 285 1 43 1 287 1 45 1 185 1 101 1 119 1 292 1 53 1 244 1 355 2 228 3 171 2 265 1 
101 1 94 2 364 1 346 2 65 1 203 1 277 1 228 2 188 1 
40 1 94 3 98 1 110 1 160 1 96 1 331 1 346 3 10 1 203 2 364 3 244 1 65 3 306 1 355 1 212 1 228 3 19 1 265 1 
94 2 3 1 364 2 346 2 65 2 77 1 203 1 355 1 228 2 212 1 
94 1 311 1 346 1 268 1 43 1 285 1 185 1 45 1 296 1 101 1 298 1 292 1 53 1 35 1 156 1 
94 1 312 1 311 1 346 1 268 1 43 1 285 1 185 1 45 1 296 1 101 1 290 1 298 1 53 1 35 1 
195 1 266 1 62 1 235 1 269 1 155 2 3 2 36 1 237 1 253 2 95 1 100 1 314 1 145 1 260 4 117 1 147 1 223 2 119 1 261 1 77 2 124 1 171 2 172 1 
94 1 110 1 364 1 346 1 65 1 337 1 228 1 265 1 
94 5 160 1 346 5 203 2 188 1 101 1 364 4 65 4 277 1 355 1 308 1 18 1 228 5 212 1 
327 1 94 2 110 1 364 2 346 2 65 2 337 1 228 2 
307 1 289 1 
307 1 289 1 
4 1 275 1 
4 1 275 1 
4 1 275 1 
73 1 307 1 289 1 
305 1 307 1 289 1 
370 1 4 1 367 1 275 1 307 2 289 2 
73 1 307 1 289 1 
73 1 307 1 289 1 
300 1 307 1 289 1 
300 1 307 1 289 1 
300 1 307 1 289 1 
70 2 40 2 98 2 344 1 331 1 373 3 335 2 31 2 375 1 289 2 137 1 54 2 301 1 367 1 307 2 139 1 68 1 174 1 380 2 
335 1 202 1 364 2 65 2 305 1 181 1 307 1 69 1 70 1 40 1 94 2 98 1 344 1 8 1 373 1 346 2 286 1 289 1 187 1 101 1 189 1 54 1 228 2 380 1 
217 1 29 1 14 1 
29 1 274 1 14 1 
217 2 56 1 179 1 76 1 274 1 14 3 
217 1 56 1 366 1 76 1 274 1 14 2 
217 1 56 1 76 2 274 1 14 2 
330 1 331 2 178 1 336 1 297 1 206 2 209 2 157 1 93 1 69 1 278 1 309 1 40 5 8 1 345 1 98 5 313 1 259 1 145 1 163 1 286 1 316 1 376 4 117 1 118 1 52 2 120 1 378 3 246 2 322 3 124 1 172 1 
330 2 234 1 331 5 332 1 361 5 336 1 32 1 270 1 297 1 206 6 157 2 93 6 69 4 40 9 345 3 98 9 313 2 259 1 143 1 145 3 163 3 376 7 316 2 117 3 118 1 25 1 11 1 52 6 120 2 378 9 246 6 322 8 124 3 126 5 172 3 
330 1 331 3 206 2 157 1 209 1 69 1 278 1 309 1 40 3 345 2 98 3 313 1 259 1 145 1 163 1 376 2 316 1 117 1 120 1 11 1 52 2 378 4 246 2 322 3 124 1 172 1 
330 1 331 4 32 1 206 4 157 1 209 2 69 2 278 1 309 1 40 4 345 3 98 4 313 1 259 1 143 1 145 2 163 2 316 1 376 3 117 2 25 1 52 4 120 1 11 1 378 7 246 4 322 5 124 2 172 2 
372 1 333 1 285 1 
285 1 229 1 
258 1 
285 1 45 1 
198 1 333 2 341 1 285 3 45 1 185 1 
285 1 45 1 185 1 
89 1 285 1 
105 1 197 2 97 1 266 2 260 7 146 1 117 1 147 3 44 1 242 1 223 4 363 1 155 3 252 1 124 1 354 1 125 1 
105 1 197 2 97 1 266 2 260 7 146 1 117 1 147 3 44 1 242 1 223 4 363 1 155 3 252 1 124 1 354 1 125 1 
105 1 197 2 97 1 266 2 260 7 146 1 117 1 147 3 44 1 242 1 223 4 363 1 155 3 252 1 124 1 354 1 37 1 125 1 
105 1 197 3 266 5 235 1 30 1 338 1 363 5 252 1 155 15 36 1 88 1 368 1 254 1 97 1 100 1 184 4 114 1 314 1 260 31 163 3 145 3 146 2 44 2 147 10 117 4 242 2 223 16 24 1 122 3 354 1 124 4 125 2 171 2 172 3 
105 1 197 2 266 3 235 2 363 1 155 4 36 2 16 1 368 1 97 1 100 2 314 2 260 9 146 1 117 1 44 1 147 4 223 5 242 1 263 1 124 1 354 1 125 1 171 4 
29 1 199 2 268 1 131 1 14 2 33 1 296 1 205 1 1 1 107 1 179 1 274 1 92 2 211 1 342 1 214 1 279 1 215 1 113 1 217 1 311 1 218 1 43 1 186 1 241 1 225 1 12 1 53 1 262 1 326 1 
29 1 199 3 268 1 14 2 33 1 296 1 107 1 179 1 274 1 208 1 92 3 211 1 342 1 38 1 369 1 214 1 279 1 215 1 113 1 217 1 311 1 218 1 43 1 186 2 241 1 225 1 12 1 53 1 262 1 326 1 
29 1 199 2 268 1 14 2 33 1 296 1 107 1 179 1 274 1 92 2 342 1 38 1 369 1 214 1 279 1 113 1 311 1 217 1 43 1 186 2 225 1 12 1 53 1 262 1 326 1 
28 1 279 2 214 2 311 1 218 1 41 1 199 1 268 1 43 1 285 1 45 1 241 1 296 1 102 1 298 1 53 1 75 1 107 2 340 1 262 2 208 1 58 1 92 1 
29 1 199 1 268 1 14 2 33 1 296 1 205 1 1 1 107 1 179 1 274 1 92 1 211 1 38 1 214 1 279 1 215 1 217 1 311 1 218 1 43 1 241 1 12 1 53 1 262 1 326 1 
362 1 
176 1 175 1 330 1 329 1 331 2 268 2 336 1 84 1 236 1 238 2 340 1 239 1 343 2 93 6 40 5 94 1 345 2 98 5 346 1 10 1 285 1 43 1 45 1 349 2 188 1 102 1 350 1 53 2 244 1 55 1 353 2 357 2 251 1 296 2 297 3 206 2 298 2 365 1 64 2 306 1 108 1 110 1 311 1 313 1 259 1 374 2 219 1 315 1 316 1 319 4 120 1 378 2 322 2 228 1 265 1 
251 1 84 1 236 1 297 1 306 1 239 1 343 1 93 2 94 1 40 3 98 3 110 1 346 1 10 1 315 1 188 1 288 1 319 2 244 1 55 1 228 1 265 1 
331 1 251 1 84 1 236 1 297 1 306 1 239 1 93 1 94 1 40 3 98 3 110 1 346 1 259 1 10 1 315 1 188 1 288 1 319 3 244 1 55 1 228 1 265 1 357 1 
331 1 251 1 84 1 236 1 297 1 306 1 239 1 343 1 93 2 94 1 40 3 98 3 110 1 346 1 259 1 10 1 315 1 288 1 188 1 319 3 244 1 55 1 353 1 228 1 265 1 357 1 
176 1 232 1 330 1 329 1 331 5 336 1 84 1 236 1 238 2 6 1 239 1 343 4 93 7 94 1 40 5 98 5 345 2 346 1 10 1 349 2 288 1 188 1 103 1 244 1 55 1 353 4 247 1 357 4 251 1 297 3 206 1 64 2 306 1 110 1 259 5 374 2 315 1 316 1 319 6 120 1 123 1 322 1 228 1 265 1 
176 1 329 1 330 1 331 2 336 1 84 1 236 1 238 2 239 1 93 4 343 2 94 1 40 4 98 4 345 2 346 1 10 1 349 2 188 1 244 1 55 1 353 2 357 2 251 1 297 2 206 1 365 1 64 2 306 1 110 1 374 2 259 1 315 1 316 1 319 4 120 1 378 2 322 1 228 1 265 1 
176 1 329 1 330 1 331 1 251 1 336 1 84 1 236 1 297 2 206 1 238 2 64 2 6 1 306 1 239 1 343 2 93 4 94 1 40 4 345 2 98 4 110 1 259 1 374 2 346 1 10 1 315 1 316 1 349 2 188 1 319 4 120 1 244 1 55 1 353 2 322 1 247 1 123 1 228 1 357 2 265 1 
176 1 329 1 330 1 331 1 251 1 336 1 84 1 236 1 297 2 206 1 238 2 64 2 6 1 306 1 239 1 343 2 93 4 94 1 40 4 345 2 98 4 110 1 259 1 374 2 346 1 10 1 315 1 316 1 349 2 188 1 319 4 120 1 244 1 55 1 353 2 322 1 247 1 123 1 228 1 357 2 265 1 
40 2 94 1 110 1 98 2 346 1 10 1 251 1 315 1 84 1 236 1 15 1 188 1 319 2 244 1 55 1 306 1 239 1 228 1 265 1 
176 1 329 1 330 1 331 1 251 1 336 1 84 1 236 1 297 2 206 1 238 2 64 2 6 1 306 1 239 1 343 3 93 5 94 1 40 4 345 2 98 4 110 1 259 1 374 2 346 1 10 1 315 1 316 1 349 2 188 1 319 5 120 1 103 1 244 1 55 1 322 1 123 1 353 3 247 1 228 1 265 1 357 3 
176 1 329 1 330 1 331 1 251 1 336 1 84 1 236 1 297 2 206 1 238 2 64 2 6 1 306 1 239 1 343 3 93 5 94 1 40 4 345 2 98 4 110 1 259 1 374 2 346 1 10 1 315 1 316 1 349 2 188 1 319 5 120 1 103 1 244 1 55 1 322 1 123 1 353 3 247 1 228 1 265 1 357 3 
176 1 330 1 331 1 336 1 84 1 236 1 272 2 238 2 276 1 239 1 93 4 343 2 94 1 40 4 98 4 346 1 10 1 188 1 244 1 55 1 353 2 357 2 251 1 297 2 206 1 365 1 306 1 110 1 111 2 374 2 259 1 315 1 316 1 319 4 120 1 378 2 322 1 228 1 265 1 
105 1 197 1 266 2 235 1 3 1 155 3 36 1 237 1 253 1 95 1 97 1 100 1 372 1 314 1 260 6 146 1 147 2 117 1 242 1 223 3 119 1 101 2 77 1 354 1 124 1 171 2 
266 1 294 1 235 2 295 1 338 1 87 1 339 1 363 1 155 6 3 4 36 2 237 2 88 1 253 11 100 2 184 3 314 2 260 14 163 2 145 1 287 1 147 2 117 1 223 8 101 1 166 1 119 1 122 3 192 1 77 11 124 2 171 4 172 2 
60 1 294 1 235 1 268 1 203 1 296 1 298 1 35 1 3 1 155 1 237 1 364 1 36 1 156 1 65 1 94 2 160 1 311 1 100 1 346 2 314 1 285 1 43 1 260 2 287 1 45 1 185 1 46 1 223 1 49 1 101 1 119 1 292 1 53 1 192 1 356 1 228 1 171 2 
266 4 235 3 268 3 136 1 35 2 3 7 36 3 237 3 38 1 94 3 39 2 97 1 100 3 346 3 43 2 285 2 145 2 146 1 287 1 185 2 45 2 147 8 242 1 243 1 101 2 292 2 53 3 192 1 354 1 105 1 197 1 294 1 61 2 203 1 296 3 298 1 363 4 155 10 364 1 156 2 65 1 253 7 304 2 257 1 160 1 311 2 314 3 260 20 163 2 117 3 223 10 119 3 77 7 78 2 124 3 228 1 171 6 173 2 172 2 
81 1 235 2 131 1 268 8 132 1 135 1 203 1 296 8 298 2 155 1 364 1 36 2 237 2 65 1 340 1 213 1 38 1 95 1 94 1 281 1 311 2 100 2 346 1 71 1 314 2 43 2 285 3 260 2 287 1 45 2 223 1 224 2 119 2 102 1 53 7 352 1 192 1 228 1 171 4 
266 1 83 1 294 1 235 1 3 1 155 2 36 1 237 1 364 1 253 1 65 1 212 1 94 1 100 1 346 1 314 1 163 1 260 3 145 1 147 1 117 1 223 1 119 1 77 1 355 1 124 1 228 1 171 2 172 1 
95 1 195 1 100 1 314 1 235 1 260 2 147 1 223 2 119 1 363 1 3 1 237 1 36 1 253 1 77 1 124 1 171 2 172 1 
95 1 266 1 100 1 314 1 235 1 260 2 145 1 147 1 117 1 119 1 3 1 155 2 237 1 36 1 261 1 253 1 77 1 171 2 
266 1 235 1 363 1 3 2 155 2 36 1 237 1 253 2 95 1 100 1 314 1 163 1 260 4 145 1 147 2 117 1 223 2 119 1 77 2 124 1 171 2 172 1 
195 1 100 1 314 1 235 1 260 2 135 1 147 1 223 2 119 1 363 1 3 1 237 1 36 1 253 1 77 1 124 1 171 2 172 1 
266 1 100 1 314 1 235 1 260 2 145 1 135 1 147 1 117 1 119 1 3 1 155 2 237 1 36 1 261 1 253 1 77 1 171 2 
266 1 235 1 135 1 363 1 3 2 155 2 36 1 237 1 253 2 100 1 314 1 163 1 260 4 145 1 147 2 117 1 223 2 119 1 77 2 124 1 171 2 172 1 
266 1 100 1 314 1 235 1 145 1 163 1 260 4 117 1 147 2 223 2 119 1 363 1 155 2 3 2 237 1 36 1 253 2 77 2 124 1 171 2 172 1 
61 1 235 1 268 1 296 1 298 1 35 1 155 1 237 1 36 1 156 1 94 1 311 1 100 1 346 1 314 1 260 2 43 1 285 1 287 1 45 1 185 1 223 1 101 1 119 1 292 1 53 1 192 1 171 2 
235 1 268 1 296 1 298 1 35 1 155 1 237 1 36 1 94 1 311 1 312 1 141 1 100 1 346 1 314 1 260 2 43 1 285 1 287 1 45 1 185 1 223 1 101 1 290 1 119 1 53 1 192 1 171 2 
266 1 294 1 235 1 363 1 3 2 155 2 36 1 237 1 253 2 100 1 314 1 163 1 260 4 145 1 147 2 117 1 223 2 119 1 77 2 124 1 171 2 172 1 
266 1 61 1 235 1 268 1 131 1 296 1 363 1 155 2 3 2 35 1 237 1 36 1 156 1 253 2 304 1 94 1 311 1 100 1 346 1 314 1 145 1 260 4 43 1 285 1 163 1 117 1 147 2 185 1 45 1 223 2 119 1 292 1 53 1 77 2 124 1 171 2 172 1 
294 1 235 1 363 1 155 1 3 1 36 1 237 1 364 1 65 1 253 1 212 1 94 1 100 1 346 1 314 1 145 1 163 1 260 3 116 1 117 1 147 1 223 2 119 1 77 1 355 1 124 1 228 1 171 2 172 1 
0 1 128 2 266 4 235 3 133 1 338 3 88 1 36 3 138 1 97 1 100 3 184 4 145 4 146 1 147 8 242 1 354 1 105 1 196 1 197 1 201 1 152 1 363 4 155 21 207 1 16 1 17 1 368 1 256 4 112 1 314 3 162 1 163 4 260 41 117 5 223 20 165 1 122 3 167 1 226 1 124 5 171 6 172 4 
105 1 197 1 0 1 196 1 266 4 128 2 235 4 201 1 133 1 338 3 152 1 363 3 155 18 36 4 88 1 207 1 138 1 16 1 17 1 368 2 256 4 97 1 112 1 100 4 184 4 314 4 162 1 260 38 163 4 145 3 146 1 147 7 117 4 242 1 223 20 165 1 167 1 122 3 226 1 354 1 124 5 171 8 172 4 
105 1 197 1 0 1 196 1 266 7 128 1 235 2 201 1 133 1 338 2 152 1 87 2 363 7 155 25 36 2 88 2 138 1 16 1 17 1 368 1 256 4 97 1 112 1 100 2 184 4 314 2 162 1 260 52 163 7 145 7 146 1 147 14 117 8 242 1 223 27 165 1 122 4 226 1 354 1 124 8 171 4 172 7 
196 1 266 3 128 1 235 2 201 1 134 1 338 1 363 3 155 10 36 2 88 1 138 1 16 1 256 2 112 1 100 2 184 2 314 2 162 2 260 19 163 3 145 3 147 6 117 3 223 9 167 1 122 1 124 3 171 4 172 3 
0 1 196 2 266 2 128 2 235 3 201 1 133 1 338 2 152 1 363 2 155 12 36 3 138 1 16 1 17 1 368 2 256 4 112 1 100 3 184 2 314 3 162 1 260 26 163 3 145 2 147 4 117 2 223 14 165 1 122 2 226 1 124 3 171 6 172 3 
70 1 137 1 233 1 54 1 367 1 335 1 307 1 139 1 380 1 289 1 
202 1 305 1 
70 1 148 1 273 1 54 1 335 1 169 1 307 1 380 1 289 1 
40 1 70 1 344 1 98 1 331 1 373 2 335 1 31 1 375 1 289 1 137 1 54 1 301 1 367 1 307 1 139 1 68 1 380 1 
40 1 70 1 344 1 98 1 331 1 373 2 335 1 31 1 375 1 289 1 137 1 54 1 301 1 367 1 307 1 139 1 68 1 380 1 
40 1 70 1 344 1 98 1 331 1 373 2 335 1 31 1 375 1 289 1 137 1 54 1 301 1 367 1 307 1 139 1 68 1 380 1 
370 1 57 1 73 1 
370 1 57 1 73 1 
300 1 91 1 
370 1 300 1 91 1 
189 1 181 1 
31 1 335 1 202 1 364 2 301 1 65 2 305 1 181 1 307 1 69 1 94 2 40 1 70 1 280 1 98 1 8 1 346 2 373 1 376 1 286 1 289 1 187 1 101 1 189 1 54 1 228 2 380 1 
57 1 73 1 
370 1 300 1 91 1 
294 1 235 1 268 2 151 1 204 1 271 1 296 2 155 1 237 1 36 1 140 1 94 2 311 1 100 1 346 2 71 1 314 1 43 1 285 1 260 2 287 1 45 1 223 1 224 2 119 1 53 2 321 1 352 1 192 1 228 2 171 2 
217 1 311 1 29 1 142 1 268 2 131 1 14 2 43 1 74 1 296 2 12 1 53 2 299 1 107 1 179 1 274 1 211 1 38 1 326 1 
217 1 311 1 29 1 142 1 268 1 14 2 43 1 296 1 85 1 12 1 53 1 107 1 179 1 274 1 211 1 38 1 326 1 
311 1 41 1 268 1 43 1 285 1 45 1 296 1 298 1 102 1 53 1 299 1 107 1 190 1 340 1 
217 1 311 1 29 1 142 1 268 1 14 2 43 1 74 1 296 1 12 1 53 1 299 1 107 1 179 1 274 1 211 1 38 1 326 1 
221 1 
206 1 331 1 358 1 245 1 259 1 372 1 322 1 
329 1 330 1 331 2 336 1 297 1 206 1 64 1 93 1 40 1 345 1 98 1 259 1 316 1 349 1 120 1 378 1 322 1 
328 1 330 4 331 8 333 2 131 1 268 3 336 4 180 2 89 2 93 5 40 5 98 5 345 6 43 3 285 10 145 2 45 3 185 3 348 1 48 2 350 1 52 6 53 3 244 2 245 1 246 6 193 1 149 1 59 2 198 1 358 1 296 3 153 2 297 3 298 1 206 8 302 2 66 2 158 2 22 2 311 4 313 2 259 2 163 2 316 4 117 2 120 4 378 12 322 9 78 2 170 1 124 2 229 3 172 2 
59 1 0 1 330 2 331 5 133 1 336 2 338 1 297 1 152 1 206 5 302 2 93 1 40 1 98 1 345 3 313 1 184 1 259 2 163 2 145 2 316 2 117 2 318 1 165 1 350 1 52 5 120 2 378 6 122 1 226 1 246 5 168 1 322 8 124 2 172 2 
59 1 327 1 330 1 267 1 336 1 206 2 364 1 65 1 302 2 183 1 94 1 40 1 110 1 98 1 346 1 146 1 316 1 117 1 242 1 50 1 120 1 123 1 322 2 354 1 124 2 264 1 355 1 228 1 
330 1 358 1 331 1 259 1 336 1 316 1 120 1 206 1 245 1 322 1 
59 1 345 5 331 5 163 2 145 2 117 2 206 5 52 5 378 10 246 5 302 2 78 1 322 5 124 2 172 2 
297 1 40 1 98 1 331 1 259 1 93 1 
175 1 330 2 268 4 336 1 296 4 297 2 298 2 206 2 340 1 255 1 93 4 40 3 98 3 311 1 313 2 219 1 43 1 285 1 316 2 45 1 47 1 11 1 120 2 350 2 102 1 53 4 193 1 322 2 170 2 
235 1 200 1 61 1 268 1 296 1 298 1 155 1 35 1 36 1 364 2 237 1 156 1 65 2 183 1 94 3 311 1 100 1 346 3 314 1 260 1 43 1 285 1 287 1 185 1 45 1 101 1 119 1 292 1 53 1 355 2 228 2 171 2 
197 1 345 2 330 1 313 1 331 4 259 2 336 1 316 1 52 2 206 2 120 1 350 1 378 4 246 2 322 1 
54 1 42 1 380 1 
250 1 54 1 181 1 139 1 380 1 
54 1 42 1 380 1 
54 1 42 1 380 1 
54 1 210 1 380 1 
54 1 210 1 380 1 
54 1 210 1 380 1 
54 1 380 1 
307 1 289 1 
105 1 197 1 266 2 235 1 338 1 155 4 36 1 16 1 97 1 100 1 184 1 314 1 260 8 146 1 117 1 147 2 223 4 242 1 165 1 122 1 124 1 354 1 171 2 
105 1 197 1 266 2 235 2 338 1 363 1 155 5 36 2 88 1 16 1 97 1 100 2 184 2 314 2 240 1 260 11 163 1 146 1 117 1 147 3 242 1 223 6 165 1 122 1 354 1 124 2 171 4 172 1 
105 1 197 1 0 1 266 3 235 3 133 1 338 1 152 1 363 1 155 10 36 3 16 1 368 1 97 1 100 3 184 1 240 1 314 3 260 19 163 2 145 2 146 1 117 3 147 4 242 1 223 9 165 1 122 1 226 1 354 1 124 3 171 6 172 2 
105 1 197 1 0 1 266 3 235 3 133 1 338 1 152 1 363 2 155 7 36 3 16 1 368 1 97 1 100 3 184 1 240 1 314 3 260 17 163 2 145 1 146 1 117 2 147 5 242 1 223 10 165 1 122 1 226 1 354 1 124 3 171 6 172 2 
105 1 197 1 266 2 235 1 338 1 155 4 36 1 16 1 97 1 100 1 184 1 314 1 260 8 146 1 117 1 147 2 223 4 242 1 165 1 122 1 124 1 354 1 171 2 
0 1 266 1 235 1 133 1 338 1 152 1 363 1 155 6 36 1 16 1 100 1 184 1 314 1 260 12 163 2 145 2 117 2 147 2 223 6 165 1 122 1 226 1 124 2 171 2 172 2 
105 1 197 1 0 1 266 3 235 4 133 1 338 1 152 1 363 2 155 8 36 4 16 1 368 2 97 1 100 4 184 1 240 1 314 4 260 18 163 2 145 1 146 1 117 2 147 5 242 1 223 10 165 1 122 1 226 1 354 1 124 3 171 8 172 2 
0 1 266 3 235 4 133 1 338 1 152 1 363 3 155 7 36 4 16 1 368 2 100 4 184 1 314 4 260 16 163 3 145 2 117 2 147 6 223 9 165 1 167 1 122 1 226 1 124 3 171 8 172 3 
105 2 97 1 266 3 260 7 146 3 117 1 147 6 242 3 223 3 363 3 155 4 354 1 124 1 
105 1 197 1 0 1 266 3 235 4 133 1 338 1 152 1 363 1 155 8 36 4 16 1 368 2 97 1 100 4 184 1 314 4 260 18 163 2 145 1 146 1 117 2 147 4 242 1 223 10 165 1 167 1 122 1 226 1 354 1 124 3 171 8 172 2 
105 1 197 1 97 1 266 2 100 2 314 2 235 2 260 8 146 1 117 1 147 3 223 4 242 1 363 1 155 4 36 2 368 1 124 1 354 1 171 4 
105 1 197 1 97 1 266 2 372 1 260 6 146 1 147 2 117 1 242 1 223 3 155 3 354 1 124 1 
266 1 100 1 240 1 314 1 235 1 145 1 163 1 260 4 117 1 147 2 223 2 363 1 155 2 36 1 124 1 171 2 172 1 
266 1 184 2 145 1 260 7 163 1 338 1 117 1 147 2 223 3 363 1 155 4 88 1 122 1 124 1 172 1 
105 1 197 1 266 5 235 2 295 1 87 1 363 4 155 12 88 1 36 2 368 2 97 1 100 2 184 2 314 2 163 2 260 23 145 2 146 2 147 9 117 3 242 2 223 11 122 2 354 1 124 3 323 1 171 4 172 2 
155 1 184 1 260 1 
122 1 260 1 223 1 
266 2 100 1 235 1 314 1 240 1 260 6 163 1 145 1 147 3 117 1 223 3 363 1 155 3 36 1 78 1 124 1 171 2 172 1 
0 1 266 1 235 1 133 1 338 1 152 1 363 1 155 6 36 1 16 1 100 1 184 1 314 1 260 12 163 2 145 2 117 2 147 2 223 6 165 1 122 1 226 1 124 2 171 2 172 2 
266 1 260 6 146 1 117 1 147 2 223 3 242 1 363 1 155 3 354 1 124 1 
105 1 97 1 266 1 100 1 314 1 235 1 260 3 146 1 147 2 223 1 242 1 363 1 155 2 36 1 368 1 323 1 171 2 
266 3 100 1 267 1 235 1 314 1 260 10 146 2 147 5 117 2 242 2 223 5 363 2 155 5 36 1 16 1 354 1 124 2 171 2 
100 1 314 1 235 1 260 2 147 1 223 2 363 1 36 1 16 1 124 1 171 2 172 1 
266 1 100 1 314 1 235 1 145 1 163 1 260 4 117 1 147 2 223 2 363 1 155 2 36 1 16 1 124 1 171 2 172 1 
266 1 100 3 314 3 235 3 260 3 146 1 147 2 242 1 223 1 363 1 155 2 36 3 167 1 16 1 368 1 323 1 171 6 
105 1 197 1 266 7 30 1 235 5 338 1 363 5 155 18 36 5 88 1 16 1 368 2 97 1 100 5 114 1 184 4 240 1 314 5 260 34 163 3 145 3 146 3 147 12 117 5 242 3 24 1 223 16 167 1 122 3 354 2 124 5 323 1 171 10 172 3 
101 1 94 1 310 1 346 1 277 1 228 1 188 1 
177 1 94 1 310 1 346 1 115 1 222 1 188 1 101 1 104 1 277 1 228 1 230 1 
102 1 298 1 53 1 311 1 372 1 340 1 268 1 43 1 285 1 45 1 296 1 
94 2 311 1 346 2 268 1 285 1 43 1 203 1 45 1 185 1 296 1 101 1 298 1 292 1 35 1 53 1 364 1 65 1 228 1 
94 2 22 1 110 1 311 1 346 2 10 1 268 1 285 3 43 1 203 1 45 2 185 2 296 1 101 1 292 1 35 1 53 1 364 2 65 1 89 1 170 1 228 2 265 1 
268 2 203 1 296 2 35 1 364 2 65 1 89 1 90 1 94 2 110 1 22 1 312 1 311 1 346 2 10 1 43 1 285 3 185 2 45 2 101 1 53 2 170 1 228 2 265 1 
331 1 333 1 268 3 296 3 298 1 89 1 90 1 93 1 40 2 98 2 22 1 311 1 161 1 259 1 43 1 285 4 185 1 45 1 53 3 244 1 170 1 229 1 325 1 
40 2 22 1 98 2 311 1 331 1 259 1 333 1 268 3 285 4 43 1 45 1 185 1 296 3 298 1 53 3 244 1 180 1 89 1 90 1 170 1 93 1 229 1 
53 1 311 1 268 1 43 1 132 1 296 1 
81 1 281 1 198 1 129 1 99 1 311 3 131 1 268 7 132 1 285 3 43 2 185 1 45 2 224 1 296 7 298 2 53 6 352 1 293 1 213 1 38 1 
266 2 235 2 268 1 131 1 3 1 35 1 36 2 237 2 39 1 94 2 97 1 100 2 346 2 43 1 285 1 146 1 185 1 45 1 147 2 242 1 101 2 292 1 53 1 354 1 105 1 197 1 294 1 61 1 203 1 296 1 155 3 364 1 156 1 65 1 253 1 304 1 311 1 314 2 260 6 117 1 223 3 119 2 321 1 77 1 124 1 228 1 171 4 
330 2 331 1 358 1 333 1 268 1 336 2 296 1 153 1 297 1 206 1 298 1 180 1 93 2 158 1 40 3 98 3 259 1 285 2 316 2 376 1 48 1 120 2 53 1 244 1 245 1 193 1 322 1 229 1 
198 1 311 2 333 1 131 1 268 2 132 1 285 2 43 1 348 1 185 1 45 1 296 2 53 2 
311 1 268 4 131 1 285 1 43 1 45 1 296 4 291 1 298 1 102 1 53 4 340 1 90 1 
257 1 129 1 311 2 268 2 285 1 43 1 185 1 45 1 296 2 154 1 53 2 121 1 293 1 170 1 
298 1 53 1 311 1 29 1 274 1 268 1 14 1 43 1 296 1 326 1 
53 2 311 1 352 1 268 2 131 1 43 1 285 1 45 1 204 1 296 2 38 1 
281 1 311 2 268 5 131 1 285 3 43 2 45 2 296 5 291 1 102 1 298 1 53 4 340 1 352 1 170 1 213 1 
281 1 311 2 268 5 131 1 285 3 43 2 45 2 296 5 291 1 102 1 298 1 53 4 340 1 352 1 170 1 159 1 
94 2 311 1 312 1 346 2 268 1 285 1 43 1 203 1 45 1 185 1 296 1 101 1 298 1 35 1 53 1 364 1 65 1 228 1 
198 1 129 1 99 1 311 2 268 1 285 1 43 1 185 1 45 1 296 1 53 1 293 1 170 1 
101 1 377 1 13 1 80 1 20 1 
40 2 110 1 98 2 96 1 371 1 331 1 259 1 10 1 376 1 317 1 101 1 377 2 26 1 244 1 13 2 306 1 265 1 20 1 80 2 
94 1 346 1 151 1 271 1 13 1 228 1 140 1 80 1 20 1 
26 1 371 1 20 1 
113 1 372 1 342 1 225 1 
113 1 218 1 199 1 92 1 342 1 241 1 225 1 
214 1 262 1 92 1 
127 1 113 1 218 1 199 3 144 1 241 1 225 1 1 1 92 3 79 1 342 1 324 2 
113 1 9 1 218 1 199 2 186 1 92 2 342 1 241 1 225 1 
21 1 217 1 218 1 29 1 199 1 14 1 241 1 1 1 7 1 92 1 342 1 
1 1 218 1 199 1 92 1 342 1 241 1 225 1 
1 1 113 1 218 1 199 1 92 1 241 1 225 2 
218 2 150 1 199 2 241 2 225 1 1 1 351 1 227 1 92 2 342 1 
194 1 113 1 218 1 199 3 347 1 186 2 241 1 23 1 225 1 1 1 7 1 92 3 342 2 
109 1 113 1 217 1 218 1 29 1 199 2 14 2 186 1 241 1 225 1 1 1 179 1 274 1 92 2 342 1 
113 1 9 1 218 2 199 4 334 1 347 1 186 2 241 2 225 1 1 1 7 1 92 4 342 2 
1 1 113 1 218 1 199 1 92 1 342 1 241 1 225 1 
113 2 218 1 199 4 144 1 347 1 186 2 241 1 225 2 27 1 7 1 79 1 92 4 342 3 324 1 
130 1 113 1 218 1 249 1 199 2 186 1 241 1 225 1 1 1 92 2 342 1 182 1 
113 1 218 1 199 3 144 1 284 1 241 1 225 1 1 1 92 3 79 2 342 1 324 2 
51 2 82 1 342 2 379 1 
1 1 218 1 360 1 199 1 92 1 241 1 
194 1 1 1 113 1 218 1 199 2 186 1 92 2 342 1 241 1 225 1 
164 1 
1 1 113 1 218 1 199 1 92 1 342 1 241 1 225 1 
194 1 113 1 218 1 199 3 186 1 241 1 225 1 1 1 92 3 342 1 324 1 
27 1 7 1 347 1 342 1 
342 1 225 1 

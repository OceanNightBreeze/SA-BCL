#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 325 276 204 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 325 276 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 325 276 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
317 9 237 2 266 2 137 1 138 2 51 1 53 6 363 9 364 2 271 4 80 1 369 1 35 1 15 5 124 1 294 1 371 2 372 1 59 1 19 2 170 1 303 1 374 1 147 1 150 3 177 2 380 1 178 1 
317 9 237 2 266 2 137 1 138 2 51 1 53 6 363 9 364 2 271 4 80 1 369 1 35 1 15 5 124 1 294 1 371 2 372 1 59 1 19 2 170 1 303 1 374 1 147 1 150 3 177 2 380 1 178 1 
317 10 237 2 266 2 137 1 138 2 51 1 53 7 363 10 364 2 271 5 80 1 369 1 35 1 15 6 124 1 294 1 371 2 372 1 59 1 19 2 170 1 303 1 374 1 147 1 150 4 177 2 380 1 178 1 
317 7 237 2 266 2 137 1 138 2 51 1 53 4 363 7 364 2 271 3 80 1 369 1 35 1 15 4 294 1 371 2 372 1 59 1 19 2 170 1 303 1 374 1 147 1 150 2 177 1 380 1 178 1 
371 1 317 4 266 1 138 1 19 1 53 3 363 4 374 1 364 1 147 1 271 2 80 1 150 1 369 1 177 2 15 3 124 1 294 1 
371 1 317 2 237 1 40 1 266 1 19 1 202 1 138 1 162 1 363 2 80 1 369 1 35 1 15 1 178 1 294 1 
371 2 317 3 237 1 137 1 19 2 53 1 363 3 271 1 80 1 150 1 369 1 15 2 294 1 
317 9 237 1 137 1 266 1 138 1 53 7 363 9 364 1 271 4 80 1 12 1 369 1 15 5 294 1 124 1 371 2 372 1 19 2 170 1 374 1 147 1 150 3 260 1 177 2 
317 9 237 1 137 1 266 1 138 1 53 7 363 9 364 1 271 4 80 1 12 1 369 1 15 5 294 1 124 1 371 2 372 1 19 2 170 1 374 1 147 1 150 3 260 1 177 2 
118 1 203 1 156 1 
222 1 105 2 118 1 
321 2 4 2 32 2 354 1 349 2 143 1 184 2 114 2 
24 1 179 2 4 2 75 1 267 1 161 1 184 2 7 1 9 1 121 1 321 3 223 1 32 2 165 1 34 1 370 2 90 1 198 1 126 1 201 2 41 1 42 1 329 1 349 2 143 1 110 1 306 1 333 2 308 2 148 1 257 1 354 1 357 1 95 1 313 1 284 1 114 3 
321 1 4 1 32 1 354 1 103 1 128 1 349 1 184 1 114 1 58 1 
167 1 301 1 118 1 239 1 349 1 341 1 187 1 321 1 79 1 280 1 156 1 114 1 264 1 58 1 
167 1 4 1 301 1 118 1 239 2 349 1 184 1 187 1 280 2 321 1 79 1 32 1 156 1 114 1 58 1 
365 1 280 1 239 1 87 1 293 1 
280 2 118 1 239 2 87 1 156 1 252 1 315 1 293 1 
280 1 239 1 87 1 
4 1 239 1 128 1 349 1 184 1 331 1 280 1 321 1 354 1 32 1 103 1 114 1 293 1 58 1 
118 1 
280 2 118 1 111 1 239 2 87 1 156 1 252 1 293 1 
236 2 199 1 118 1 239 5 350 1 229 1 109 2 252 1 101 1 256 1 280 5 378 2 367 1 56 1 261 1 87 2 156 1 293 2 246 1 
198 1 24 1 126 1 4 1 349 1 9 1 221 1 333 1 308 1 321 2 148 1 345 1 223 1 32 1 95 1 166 1 370 1 313 1 114 2 90 1 
203 1 143 1 
4 1 349 2 184 1 143 2 188 1 321 2 32 1 114 2 235 1 
135 1 360 1 345 1 
24 1 198 1 126 1 60 1 143 1 9 1 333 1 308 1 321 1 148 1 223 1 95 1 370 1 313 1 114 1 90 1 
4 4 349 5 341 1 184 1 143 1 221 1 321 5 32 4 193 1 234 1 166 2 114 5 36 1 235 1 
321 2 4 2 243 1 32 2 103 1 349 2 114 2 58 1 
321 3 4 3 32 3 349 3 166 1 184 1 143 1 114 3 
321 1 4 1 32 1 103 1 349 1 114 1 58 1 
188 1 321 1 4 1 32 1 349 1 184 1 114 1 235 1 58 1 
24 1 179 1 4 3 75 1 267 1 239 1 269 1 184 2 187 1 9 1 221 1 121 1 321 4 79 1 223 1 32 3 34 1 166 1 370 1 90 1 58 1 167 1 198 1 126 1 201 2 301 1 42 1 329 1 349 3 143 1 306 1 333 1 308 1 334 1 280 1 148 1 257 1 354 1 357 1 95 1 313 1 284 1 114 4 235 1 
321 2 4 1 32 1 349 2 193 1 166 1 143 1 341 1 114 2 
167 1 4 3 301 1 118 1 239 1 349 3 269 1 184 1 187 1 221 1 280 1 79 1 321 3 32 3 212 1 166 2 114 3 235 1 58 1 
360 1 4 2 349 2 184 1 321 2 345 1 32 2 166 1 114 2 235 1 
24 1 198 1 126 1 143 1 9 1 333 1 308 1 321 1 148 1 223 1 95 1 370 1 313 1 114 1 90 1 
24 1 198 1 126 1 250 1 143 1 209 1 9 1 333 1 308 1 321 1 148 1 223 1 370 1 313 1 114 1 
316 1 135 2 117 1 179 4 360 2 75 1 267 1 120 1 7 2 345 2 344 1 224 1 11 1 86 1 300 1 227 1 201 2 42 1 329 1 375 1 257 1 69 1 357 1 284 2 
321 1 4 1 32 1 243 1 349 1 114 1 58 1 187 1 
230 1 255 1 
230 1 255 1 
274 1 210 1 
274 1 210 1 
274 1 210 1 
230 1 328 1 255 1 
230 1 339 1 255 1 
230 2 190 1 311 1 274 1 210 1 255 2 
230 1 328 1 255 1 
230 1 328 1 255 1 
230 1 44 1 255 1 
230 1 44 1 255 1 
230 1 44 1 255 1 
4 2 339 1 107 1 239 1 349 2 139 1 143 1 352 1 343 1 29 1 255 1 8 1 230 1 319 1 320 1 321 2 280 1 132 1 273 1 32 2 83 1 13 1 37 1 114 2 
287 1 118 1 239 2 206 1 54 1 343 2 352 1 255 2 8 3 332 2 230 2 190 1 319 2 320 2 280 2 94 1 83 2 368 1 196 1 
364 1 266 1 138 1 
266 1 138 1 202 1 
364 2 238 1 10 1 138 3 202 1 174 1 
364 1 10 1 138 2 202 1 289 1 174 1 
364 1 10 1 138 2 202 1 174 2 
236 1 180 1 118 2 239 5 120 1 222 1 272 1 292 1 224 1 273 1 13 1 56 2 87 1 293 4 227 1 105 3 107 1 229 1 109 1 252 1 304 1 146 1 130 2 375 1 256 3 376 2 280 5 378 1 155 1 312 2 156 1 23 1 
236 2 180 1 3 1 118 5 239 9 119 1 120 3 101 1 365 5 220 5 222 3 292 2 224 3 273 4 56 6 87 6 293 7 39 1 227 3 105 9 229 1 109 2 279 1 252 1 304 2 130 6 375 3 256 8 376 6 280 9 378 2 259 1 156 1 23 3 214 1 
236 1 118 3 239 3 120 1 101 1 222 2 272 1 292 1 224 1 273 1 56 2 293 2 227 1 105 4 109 1 304 1 130 2 256 3 375 1 376 2 280 3 378 1 155 1 312 1 156 1 23 1 
236 1 3 1 118 4 239 4 120 2 101 1 222 3 272 1 292 1 224 2 273 2 56 4 293 3 39 1 227 2 105 7 109 1 304 1 130 4 256 5 375 2 376 4 280 4 378 1 155 1 312 2 156 1 23 2 214 1 
223 1 203 1 157 1 
223 1 305 1 
302 1 
9 1 198 1 223 1 
223 1 97 1 
198 1 223 1 
9 1 198 1 223 3 85 1 213 1 157 2 
17 1 116 1 275 1 179 7 106 1 216 1 7 4 375 1 344 2 224 1 11 3 81 1 84 2 96 1 113 1 284 3 265 1 
17 1 116 1 275 1 179 7 106 1 216 1 7 4 375 1 344 2 224 1 11 3 81 1 84 2 96 1 113 1 284 3 265 1 
17 1 116 1 275 1 179 7 106 1 216 1 7 4 375 1 344 2 224 1 11 3 81 1 84 2 96 1 113 1 284 3 265 1 16 1 
116 5 179 31 75 1 216 1 267 1 183 4 361 1 120 3 7 16 344 5 81 1 11 10 224 4 84 3 245 1 194 1 17 2 275 1 168 1 227 3 201 2 106 2 42 1 253 1 375 4 258 1 357 1 282 3 22 1 96 2 113 1 23 3 284 15 265 2 
116 1 179 9 74 1 75 2 267 2 185 1 7 5 344 3 224 1 11 4 81 1 84 2 17 1 275 1 201 4 106 1 42 2 253 1 375 1 357 2 96 1 113 1 284 4 265 1 
72 1 317 2 237 1 238 1 266 1 138 2 50 1 290 1 53 1 362 1 30 1 363 2 364 1 291 1 80 1 164 1 369 1 370 1 15 1 295 1 294 1 296 1 298 1 371 1 126 1 19 1 202 1 308 1 333 1 313 1 
72 1 317 3 238 1 237 1 266 1 138 2 50 1 290 1 53 2 362 1 363 3 364 1 80 1 164 1 369 1 57 1 370 1 15 1 295 1 296 1 248 1 298 1 371 1 126 1 19 1 327 1 202 1 308 1 333 1 313 1 
296 1 72 1 298 1 317 2 238 1 126 1 237 1 266 1 138 2 202 1 327 1 50 1 362 1 53 2 363 2 364 1 333 1 308 1 80 1 369 1 57 1 370 1 313 1 15 1 295 1 
317 1 237 2 73 1 50 2 363 1 241 1 223 1 192 1 370 1 295 2 296 2 248 1 371 1 198 1 126 1 19 1 207 1 308 1 333 1 148 1 151 1 310 1 313 1 
296 1 72 1 298 1 371 1 317 1 238 1 126 1 237 1 266 1 138 2 202 1 19 1 50 1 290 1 362 1 363 1 364 1 333 1 308 1 291 1 164 1 57 1 370 1 313 1 294 1 295 1 
175 1 
0 1 236 1 336 2 5 2 239 5 341 1 100 1 187 1 240 2 241 1 292 1 102 1 56 2 14 1 58 1 197 1 198 1 200 1 105 2 301 1 349 1 109 1 66 2 207 1 252 3 256 2 308 2 148 2 309 2 156 1 313 1 115 1 114 1 264 1 118 2 218 2 219 1 222 2 366 2 163 1 321 1 79 1 223 1 87 6 370 2 324 1 167 1 126 1 229 1 171 4 333 2 231 1 280 5 378 1 47 1 
197 1 167 1 301 1 239 3 349 1 66 1 341 1 100 1 252 1 171 2 187 1 231 1 163 1 79 1 280 3 321 1 111 1 87 2 115 1 114 1 264 1 58 1 
197 1 167 1 301 1 118 1 239 3 349 1 341 1 100 1 252 1 171 3 218 1 187 1 231 1 163 1 79 1 280 3 321 1 111 1 87 1 156 1 115 1 114 1 264 1 58 1 
336 1 118 1 239 3 341 1 100 1 187 1 218 1 163 1 321 1 79 1 87 2 58 1 167 1 197 1 301 1 349 1 66 1 252 1 171 3 231 1 280 3 111 1 156 1 114 1 115 1 264 1 
336 2 239 3 341 1 100 1 187 1 163 1 321 1 79 1 87 3 325 1 58 1 167 1 197 1 301 1 276 1 349 1 204 1 66 2 252 1 171 2 231 1 280 3 111 1 115 1 114 1 264 1 
0 1 236 1 336 2 118 2 5 2 239 4 341 1 100 1 218 2 187 1 222 2 366 2 240 2 163 1 321 1 79 1 56 1 87 4 324 1 58 1 167 1 197 1 200 1 105 2 301 1 229 1 349 1 109 1 66 2 252 2 171 4 256 1 231 1 280 4 309 2 378 1 156 1 115 1 114 1 264 1 
197 1 167 1 301 1 239 2 349 1 341 1 100 1 171 2 187 1 231 1 163 1 79 1 280 2 321 1 115 1 114 1 264 1 325 1 58 1 
197 1 167 1 301 1 239 2 349 1 341 1 100 1 171 2 187 1 231 1 163 1 79 1 280 2 321 1 115 1 114 1 264 1 325 1 58 1 
0 1 236 1 336 2 118 1 5 2 288 1 239 4 341 1 100 1 218 2 186 2 187 1 240 2 163 1 321 1 79 1 56 1 87 4 58 1 167 1 197 1 105 2 301 1 64 2 349 1 229 1 109 1 66 2 252 2 171 4 256 1 231 1 280 4 378 1 379 1 211 1 154 1 156 1 114 1 115 1 264 1 
336 1 197 1 167 1 301 1 276 1 239 2 349 1 66 1 341 1 100 1 171 3 218 1 187 1 231 1 163 1 79 1 280 2 321 1 87 1 115 1 114 1 264 1 325 1 58 1 
336 1 197 1 167 1 301 1 276 1 239 2 349 1 66 1 341 1 100 1 171 3 218 1 187 1 231 1 163 1 79 1 280 2 321 1 87 1 115 1 114 1 264 1 325 1 58 1 
0 1 236 1 336 2 118 1 5 2 239 4 341 1 100 1 218 2 186 2 187 1 240 2 163 1 321 1 79 1 56 1 87 4 58 1 167 1 197 1 200 1 105 2 301 1 64 2 229 1 349 1 109 1 66 2 252 2 171 4 256 1 231 1 280 4 378 1 379 1 156 1 115 1 114 1 264 1 
316 1 135 1 360 1 179 6 75 1 267 1 7 3 345 1 344 2 81 1 11 2 224 1 84 1 17 1 275 1 201 2 203 1 42 1 329 1 143 2 375 1 257 1 357 1 113 1 284 3 265 1 
1 1 135 11 116 1 179 14 360 4 99 1 75 2 267 2 183 3 361 1 120 1 7 8 344 1 345 11 11 2 224 1 244 1 34 1 88 1 194 1 227 2 201 4 42 2 329 1 143 1 110 1 375 2 257 2 357 2 282 3 23 2 284 6 283 1 
24 1 215 1 360 1 179 2 4 1 99 1 75 1 267 1 342 1 7 1 9 1 221 1 321 2 223 1 32 1 34 1 370 1 166 1 90 1 198 1 126 1 60 1 201 2 42 1 329 1 349 1 143 1 172 1 110 1 308 1 333 1 148 1 257 1 95 1 357 1 313 1 114 2 284 1 
135 7 179 20 4 1 99 1 6 2 340 1 7 10 9 2 344 4 345 7 11 8 57 1 17 1 198 2 201 6 349 1 143 2 144 2 351 1 110 1 306 2 308 3 148 1 257 3 357 3 113 1 313 2 23 2 114 3 265 1 24 2 116 4 360 7 75 3 267 3 76 2 217 2 120 2 221 1 321 3 81 1 224 3 223 2 32 1 84 1 34 1 370 3 166 1 90 2 38 1 275 1 126 2 227 2 42 3 329 3 333 3 375 3 95 2 284 10 
316 1 181 1 179 2 4 1 338 1 75 2 267 2 161 2 30 1 7 1 78 1 241 1 321 1 223 3 32 1 34 1 57 1 166 1 370 8 198 2 126 2 201 4 228 1 42 2 43 1 349 1 329 2 277 1 207 1 110 1 308 8 333 7 148 2 257 2 355 1 357 2 313 2 114 1 284 1 
135 1 360 1 179 3 4 1 99 1 182 1 75 1 267 1 184 1 120 1 7 1 321 1 344 1 345 1 11 1 224 1 32 1 227 1 201 2 42 1 329 1 349 1 375 1 257 1 357 1 23 1 114 1 284 2 235 1 
135 1 316 1 116 1 360 1 179 2 227 1 201 2 75 1 267 1 42 1 329 1 7 2 375 1 345 1 11 1 257 1 69 1 357 1 
135 1 316 1 360 1 179 2 300 1 201 2 75 1 267 1 42 1 329 1 120 1 344 1 345 1 11 1 257 1 224 1 357 1 284 2 
316 1 135 2 116 1 179 4 360 2 75 1 267 1 120 1 7 2 345 2 344 1 11 2 224 1 227 1 201 2 42 1 329 1 375 1 257 1 357 1 23 1 284 2 
135 1 116 1 360 1 179 2 227 1 201 2 75 1 267 1 42 1 329 1 277 1 7 2 375 1 345 1 11 1 257 1 69 1 357 1 
135 1 360 1 179 2 300 1 201 2 75 1 267 1 42 1 329 1 277 1 120 1 344 1 345 1 11 1 257 1 224 1 357 1 284 2 
135 2 116 1 179 4 360 2 75 1 267 1 120 1 7 2 345 2 344 1 11 2 224 1 227 1 201 2 42 1 329 1 277 1 375 1 257 1 357 1 23 1 284 2 
135 2 116 1 360 2 179 4 227 1 201 2 75 1 267 1 42 1 329 1 120 1 7 2 375 1 344 1 345 2 224 1 11 2 257 1 357 1 23 1 284 2 
24 1 179 2 75 1 267 1 7 1 9 1 321 1 223 1 34 1 370 1 90 1 198 1 126 1 201 2 42 1 329 1 143 1 110 1 306 1 308 1 333 1 148 1 257 1 95 1 357 1 313 1 114 1 284 1 
24 1 179 2 49 1 75 1 267 1 7 1 9 1 321 1 223 1 34 1 370 1 198 1 126 1 201 2 250 1 42 1 329 1 143 1 209 1 110 1 308 1 333 1 148 1 257 1 357 1 313 1 114 1 284 1 
135 2 116 1 179 4 360 2 99 1 75 1 267 1 120 1 7 2 345 2 344 1 11 2 224 1 227 1 201 2 42 1 329 1 375 1 257 1 357 1 23 1 284 2 
135 2 116 1 24 1 360 2 179 4 75 1 267 1 120 1 7 2 30 1 9 1 321 1 344 1 345 2 224 1 11 2 223 1 370 1 90 1 198 1 126 1 227 1 201 2 42 1 329 1 144 1 306 1 375 1 308 1 333 1 257 1 95 1 357 1 313 1 23 1 284 2 114 1 
135 1 116 1 179 3 360 1 4 1 99 1 75 1 267 1 120 1 184 1 52 1 7 2 321 1 345 1 224 1 11 1 32 1 227 1 201 2 42 1 329 1 349 1 375 1 257 1 357 1 23 1 284 1 114 1 235 1 
116 3 179 19 75 2 267 2 183 2 361 1 77 1 120 3 185 1 7 9 189 1 344 3 11 6 224 3 89 1 194 1 227 3 18 1 201 4 62 2 42 2 173 2 375 3 377 1 21 1 357 2 282 1 23 3 284 10 285 1 
48 1 116 2 179 26 75 3 267 3 183 2 77 1 361 2 120 2 185 1 7 14 189 1 344 2 11 4 224 2 297 1 227 3 18 2 201 6 142 1 62 4 42 3 173 1 373 1 253 2 375 3 377 2 353 1 21 1 357 3 282 2 23 3 284 12 381 1 
48 1 158 1 116 4 179 41 75 3 267 3 183 4 361 3 77 1 120 4 185 1 7 20 189 1 344 4 81 1 11 8 224 5 84 1 89 1 194 1 17 1 297 1 275 1 227 4 18 1 201 6 142 1 62 4 42 3 173 1 373 1 253 1 375 5 377 2 353 1 21 1 357 3 282 3 113 1 23 4 284 21 265 1 381 1 
48 1 158 1 116 3 179 38 75 4 267 4 183 4 361 3 77 1 120 3 185 1 7 20 189 1 344 4 81 1 11 7 224 4 84 1 89 1 194 1 17 1 297 1 275 1 227 4 18 1 201 8 142 1 62 4 42 4 173 1 373 1 253 2 375 5 377 2 353 1 21 1 357 4 282 3 113 1 23 4 284 18 265 1 381 1 
48 1 116 7 179 52 75 2 267 2 183 4 361 2 77 1 120 7 185 1 7 27 189 1 344 7 81 1 11 14 224 8 84 1 88 2 194 2 17 1 297 1 275 1 227 7 18 1 201 4 142 1 62 4 42 2 173 1 253 1 373 1 375 8 377 1 353 1 21 1 357 2 282 4 113 1 23 7 284 25 265 1 381 1 
230 1 190 1 320 1 319 1 122 1 83 1 206 1 343 1 196 1 255 1 
132 1 339 1 
230 1 320 1 319 1 83 1 322 1 28 1 133 1 343 1 255 1 
232 1 328 1 
2 1 44 1 311 1 
118 1 239 1 206 1 54 1 352 1 343 1 255 1 8 2 332 1 230 1 190 1 319 1 320 1 280 1 94 1 83 1 368 1 196 1 
118 1 239 1 206 1 54 1 352 1 343 1 255 1 8 2 332 1 230 1 190 1 319 1 320 1 280 1 94 1 83 1 368 1 196 1 
118 1 239 1 206 1 54 1 352 1 343 1 255 1 8 2 332 1 230 1 190 1 319 1 320 1 280 1 94 1 83 1 368 1 196 1 
232 1 328 1 311 1 
232 1 328 1 311 1 
2 1 44 1 
2 1 44 1 311 1 
139 1 29 1 
286 1 4 2 339 1 239 1 139 1 343 1 8 1 29 1 320 1 319 1 321 2 273 1 32 2 83 1 368 1 13 1 37 1 293 1 107 1 349 2 143 1 332 1 255 1 230 1 280 1 132 1 114 2 
179 2 99 1 338 1 159 1 75 1 267 1 161 2 7 1 321 2 223 1 33 1 34 1 370 2 198 1 126 1 201 2 228 1 42 1 329 1 349 2 110 1 308 2 333 2 176 1 257 1 20 1 335 1 357 1 313 1 114 2 284 1 
298 1 72 1 238 1 126 1 127 1 266 1 138 2 202 1 30 1 307 1 364 1 333 2 308 2 164 1 57 1 370 2 313 1 70 1 295 1 
298 1 72 1 238 1 126 1 266 1 138 2 202 1 364 1 333 1 308 1 346 1 164 1 57 1 370 1 313 1 70 1 295 1 
198 1 126 1 127 1 207 1 333 1 308 1 241 1 148 1 223 1 310 1 152 1 370 1 313 1 295 1 
298 1 72 1 238 1 126 1 127 1 266 1 138 2 202 1 307 1 364 1 333 1 308 1 164 1 57 1 370 1 313 1 70 1 295 1 
233 1 
256 1 199 1 118 1 56 1 203 1 350 1 156 1 
236 1 105 1 118 2 239 1 229 1 109 1 252 1 256 1 366 1 222 1 280 1 309 1 378 1 56 1 87 1 156 1 324 1 
134 1 236 4 239 5 140 1 55 2 9 3 292 2 242 2 56 8 14 1 195 2 198 3 199 1 105 12 350 1 109 4 252 3 305 3 256 9 308 3 148 1 68 1 356 2 112 1 213 1 156 2 263 2 313 3 157 2 314 2 23 2 118 8 268 1 217 2 120 2 30 1 222 6 79 2 223 10 224 2 87 5 370 3 126 4 227 2 169 2 229 4 130 6 333 3 375 2 131 2 376 6 280 5 378 4 97 2 
236 2 359 1 118 5 239 1 183 1 361 1 120 2 222 3 292 1 224 2 242 2 56 5 14 1 87 1 297 1 227 2 105 6 169 1 142 1 229 2 109 2 252 1 373 1 130 5 256 8 375 2 376 5 280 1 378 2 353 1 46 1 282 1 156 2 23 2 381 1 
236 1 4 1 239 1 184 1 321 1 224 1 242 2 32 1 103 1 56 2 58 1 17 1 249 1 347 1 169 1 128 1 229 1 349 1 109 1 331 1 375 2 256 2 280 1 378 1 354 1 113 1 114 1 265 1 
236 1 199 1 118 1 229 1 350 1 109 1 256 1 378 1 56 1 156 1 
227 2 105 10 169 1 118 5 217 1 120 2 130 5 375 2 222 5 256 5 376 5 224 2 242 2 56 5 23 2 
280 1 118 1 239 1 87 1 156 1 252 1 
236 2 25 1 239 3 140 2 101 1 219 1 241 1 292 2 102 1 223 1 56 2 14 2 87 4 370 4 198 1 126 1 229 1 109 2 207 1 252 2 92 1 308 4 333 4 256 2 148 2 280 3 378 2 112 1 313 1 
24 1 179 1 4 2 75 1 267 1 184 2 9 1 121 1 321 3 223 1 32 2 34 1 370 1 90 1 198 1 126 1 201 2 42 1 349 2 329 1 143 1 306 1 308 1 333 1 148 1 257 1 354 1 357 1 95 1 313 1 284 1 114 3 
236 1 105 4 118 4 229 1 109 1 130 2 222 2 256 1 376 2 292 1 378 1 84 1 56 2 14 1 156 2 
83 1 27 1 343 1 
149 1 83 1 343 1 196 1 29 1 
83 1 27 1 343 1 
83 1 27 1 343 1 
83 1 208 1 343 1 
83 1 208 1 343 1 
83 1 208 1 343 1 
83 1 343 1 
230 1 255 1 
17 1 116 1 275 1 179 8 201 4 75 2 267 2 42 2 7 4 253 1 375 1 344 2 224 1 11 3 81 1 84 1 357 2 113 1 284 4 265 1 
17 1 375 1 275 1 179 6 344 2 224 1 11 2 81 1 84 1 203 1 113 1 284 3 265 1 7 3 
116 1 179 4 227 1 201 2 75 1 267 1 42 1 120 1 7 2 375 1 344 1 224 1 11 2 357 1 23 1 284 2 123 1 
116 1 179 7 227 1 183 2 120 1 361 1 7 3 375 1 344 1 224 1 11 2 282 1 23 1 284 4 194 1 
116 4 179 23 75 2 267 2 183 2 120 2 7 11 344 5 81 1 11 9 224 3 84 1 141 1 88 1 194 1 17 2 275 1 227 2 201 4 42 2 253 2 375 3 357 2 282 2 113 1 23 2 284 12 283 1 265 2 
179 1 183 1 284 1 
179 1 282 1 7 1 
116 1 179 6 227 1 201 2 75 1 42 1 267 1 217 1 120 1 7 3 375 1 344 2 11 3 224 1 357 1 23 1 284 3 123 1 
116 1 179 12 75 1 267 1 183 1 361 1 120 2 185 1 7 6 344 1 224 2 11 2 297 1 227 2 201 2 142 1 42 1 373 1 375 2 353 1 357 1 282 1 23 2 284 6 381 1 
17 1 116 1 179 6 7 3 375 1 344 1 224 1 11 2 113 1 284 3 265 1 
17 1 116 1 275 1 179 3 201 2 75 1 267 1 42 1 7 1 253 1 344 1 11 2 81 1 357 1 141 1 284 2 265 1 
17 2 249 1 116 2 179 10 201 2 75 1 42 1 267 1 185 1 7 5 375 2 344 3 11 5 224 2 357 1 113 1 284 5 265 2 
116 1 179 2 227 1 201 2 75 1 267 1 42 1 185 1 7 2 375 1 11 1 357 1 
116 1 179 4 227 1 201 2 75 1 267 1 42 1 120 1 185 1 7 2 375 1 344 1 224 1 11 2 357 1 23 1 284 2 
17 1 116 1 179 3 201 6 75 3 267 3 42 3 185 1 253 1 7 1 344 1 11 2 357 3 141 1 89 1 284 2 265 1 
116 5 179 34 75 5 267 5 183 4 361 1 120 3 185 1 7 16 344 7 81 1 11 12 224 5 84 1 141 1 89 1 194 1 123 1 17 3 275 1 168 1 227 3 201 10 42 5 253 2 375 5 258 1 357 5 22 1 282 3 113 2 23 3 284 18 265 3 
179 8 75 1 267 1 183 1 361 1 185 1 7 4 344 2 224 1 81 1 11 2 84 1 17 1 275 1 201 2 42 1 375 1 357 1 282 1 113 1 284 4 265 1 381 1 
116 1 179 11 75 2 267 2 183 2 361 1 185 1 7 6 344 2 224 1 81 1 11 3 84 1 194 1 123 1 17 1 275 1 227 1 201 4 42 2 375 2 357 2 282 1 113 1 23 1 284 5 265 1 381 1 
116 1 179 19 75 3 267 3 183 1 361 1 120 2 185 1 7 9 344 3 81 1 224 3 11 4 84 1 123 1 17 1 297 1 275 1 227 2 201 6 142 1 42 3 373 1 253 1 375 3 353 1 357 3 282 1 113 1 23 2 284 10 265 1 381 1 
116 2 179 17 75 3 267 3 183 1 361 1 120 1 185 1 7 10 344 3 81 1 224 2 11 5 84 1 123 1 17 1 297 1 275 1 227 2 201 6 142 1 42 3 253 1 373 1 375 3 353 1 357 3 282 1 113 1 23 2 284 7 265 1 381 1 
179 8 75 1 267 1 183 1 361 1 185 1 7 4 344 2 224 1 81 1 11 2 84 1 17 1 275 1 201 2 42 1 375 1 357 1 282 1 113 1 284 4 265 1 381 1 
116 1 179 12 75 1 267 1 183 1 361 1 120 2 185 1 7 6 344 1 224 2 11 2 297 1 227 2 201 2 142 1 42 1 373 1 375 2 353 1 357 1 282 1 23 2 284 6 381 1 
116 2 179 18 75 4 267 4 183 1 361 1 120 1 185 1 7 10 344 3 81 1 224 2 11 5 84 1 123 1 17 1 297 1 275 1 227 2 201 8 142 1 42 4 373 1 253 2 375 3 353 1 357 4 282 1 113 1 23 2 284 8 265 1 381 1 
116 3 179 16 75 4 267 4 183 1 361 1 120 2 185 1 7 9 344 3 224 2 11 6 89 1 297 1 227 3 201 8 142 1 42 4 373 1 253 2 375 3 353 1 357 4 282 1 23 3 284 7 381 1 
17 3 275 1 116 3 179 7 7 3 375 1 344 3 224 1 81 2 11 6 113 1 284 4 265 3 
116 1 179 18 75 4 267 4 183 1 361 1 120 1 185 1 7 10 344 3 81 1 224 2 11 4 84 1 89 1 17 1 297 1 275 1 227 2 201 8 142 1 42 4 373 1 253 2 375 3 353 1 357 4 282 1 113 1 23 2 284 8 265 1 381 1 
31 1 321 1 349 1 193 1 143 1 341 1 114 1 
318 1 205 1 349 1 143 1 129 1 341 1 254 1 31 1 321 1 358 1 193 1 114 1 
308 1 333 1 198 1 241 1 126 1 148 1 223 1 203 1 370 1 313 1 207 1 
198 1 24 1 126 1 4 1 349 1 143 1 9 1 333 1 308 1 321 2 148 1 223 1 32 1 95 1 166 1 370 1 313 1 114 2 
198 2 24 1 126 1 4 2 301 1 349 2 143 1 140 1 187 1 9 2 333 1 308 1 321 2 223 3 32 1 95 1 166 1 370 1 313 1 114 2 97 1 195 1 58 1 
198 2 24 1 126 1 4 2 301 1 61 1 349 2 143 1 140 1 209 1 187 1 9 2 333 2 308 2 321 2 223 3 32 1 166 1 370 2 313 1 114 2 97 1 195 1 58 1 
118 1 239 2 140 1 9 1 79 1 223 4 87 1 370 3 195 1 198 1 126 1 104 1 61 1 65 1 305 1 308 3 333 3 280 2 148 1 156 1 313 1 157 1 97 1 
198 1 126 1 118 1 61 1 239 2 140 1 55 1 305 1 9 1 333 3 308 3 148 1 79 1 280 2 223 4 87 1 156 1 370 3 157 1 313 1 97 1 195 1 
308 1 333 1 126 1 43 1 370 1 313 1 
125 1 136 1 198 2 181 1 126 3 228 1 348 1 161 1 43 1 30 1 78 1 9 1 333 6 308 7 148 2 223 3 355 1 57 1 213 1 370 7 313 2 
135 1 179 6 4 1 99 1 7 3 9 1 344 2 345 1 11 2 17 1 198 1 201 4 349 1 143 2 144 1 306 1 308 1 257 2 357 2 313 1 113 1 114 2 265 1 24 1 360 1 75 2 267 2 76 1 30 1 321 2 223 1 81 1 224 1 32 1 33 1 84 1 370 1 166 1 90 1 275 1 126 1 42 2 329 2 333 1 375 1 95 1 284 3 
236 2 118 1 239 3 55 1 79 1 223 2 56 1 87 2 370 1 293 1 199 1 350 1 229 2 109 2 252 1 305 1 256 1 333 1 308 1 131 1 148 1 280 3 378 2 356 1 112 1 156 1 263 1 157 1 
198 1 126 2 268 1 43 1 30 1 9 1 333 2 308 2 223 2 213 1 370 2 157 1 313 1 
198 1 126 1 61 1 207 1 30 1 333 4 308 4 241 1 148 1 223 1 370 4 313 1 226 1 
125 1 198 1 126 2 348 1 140 1 351 1 145 1 9 1 333 2 308 2 223 1 82 1 370 2 313 1 
72 1 308 1 333 1 126 1 148 1 266 1 138 1 202 1 370 1 313 1 
198 1 126 1 228 1 30 1 333 2 308 2 176 1 223 1 57 1 370 2 313 1 
198 2 126 2 228 1 207 1 140 1 30 1 78 1 333 4 308 5 241 1 148 1 223 3 355 1 370 5 313 2 226 1 
198 2 126 2 228 1 207 1 140 1 30 1 333 4 308 5 241 1 148 1 223 3 355 1 153 1 370 5 313 2 226 1 
198 1 24 1 126 1 4 1 349 1 143 1 209 1 9 1 333 1 308 1 321 2 148 1 223 1 32 1 166 1 370 1 313 1 114 2 
125 1 136 1 198 1 126 2 348 1 140 1 9 1 333 1 308 1 223 1 213 1 370 1 313 1 
337 1 26 1 323 1 330 1 143 1 
167 1 337 2 301 1 26 2 118 1 239 2 251 1 330 2 269 1 143 1 187 1 79 1 280 2 323 1 156 1 262 1 293 1 58 1 247 1 
26 1 159 1 330 1 349 1 321 1 20 1 335 1 323 1 114 1 
251 1 323 1 247 1 
80 1 203 1 369 1 15 1 
317 1 371 1 80 1 19 1 369 1 15 1 363 1 
237 1 50 1 363 1 
98 1 371 1 317 3 19 1 91 1 363 3 281 1 80 1 369 1 35 2 15 1 294 1 
317 2 371 1 80 1 19 1 369 1 177 1 15 1 53 1 363 2 
364 1 271 1 147 1 317 1 371 1 266 1 138 1 19 1 15 1 363 1 294 1 
317 1 371 1 80 1 19 1 15 1 363 1 294 1 
317 1 371 1 80 2 19 1 369 1 363 1 294 1 
299 1 317 2 371 2 80 1 19 2 108 1 270 1 15 1 363 2 294 1 
371 1 317 3 372 1 19 1 170 1 53 2 363 3 271 1 80 1 150 1 369 1 15 2 294 1 
371 1 317 2 238 1 266 1 202 1 138 2 19 1 53 1 363 2 364 1 80 1 93 1 369 1 15 1 294 1 
371 2 317 4 19 2 53 2 363 4 271 1 80 1 150 1 369 1 177 1 15 2 294 1 124 1 
317 1 371 1 80 1 19 1 369 1 15 1 363 1 294 1 
71 1 317 4 371 1 91 1 19 1 53 2 363 4 271 1 281 1 80 2 150 1 369 2 35 1 15 3 
371 1 317 2 19 1 67 1 278 1 53 1 363 2 80 1 260 1 369 1 15 1 294 1 
371 1 317 3 91 1 19 1 63 1 363 3 281 2 80 1 369 1 35 2 15 1 294 1 
326 2 191 1 225 1 15 2 
317 1 371 1 45 1 19 1 363 1 294 1 
317 2 371 1 80 1 372 1 19 1 369 1 15 1 53 1 363 2 294 1 
160 1 
317 1 371 1 80 1 19 1 369 1 15 1 363 1 294 1 
371 1 317 3 372 1 19 1 53 1 363 3 80 1 369 1 35 1 15 1 294 1 
71 1 271 1 150 1 15 1 
80 1 15 1 

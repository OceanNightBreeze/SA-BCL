#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (214,347) (202,263) (202,263) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 268 338 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (214,347) (214,347) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 268 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 323 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (214,347) (202,263) (202,263) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (214,347) (202,263) (202,263) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (214,347) (202,263) (202,263) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 348 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 348 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 268 338 357 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 348 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 46 2 105 2 294 4 106 1 349 1 84 1 4 1 157 9 320 1 204 1 160 5 88 1 206 6 209 1 89 1 190 1 141 3 70 1 91 1 334 2 364 2 123 1 76 2 218 2 40 1 261 9 292 2 
22 1 46 2 105 2 294 4 106 1 349 1 84 1 4 1 157 9 320 1 204 1 160 5 88 1 206 6 209 1 89 1 190 1 141 3 70 1 91 1 334 2 364 2 123 1 76 2 218 2 40 1 261 9 292 2 
22 1 46 2 105 2 294 5 106 1 349 1 84 1 4 1 157 10 320 1 204 1 160 6 88 1 206 7 209 1 89 1 190 1 141 4 70 1 91 1 334 2 364 2 123 1 76 2 218 2 40 1 261 10 292 2 
22 1 46 1 105 2 294 3 106 1 349 1 84 1 4 1 157 7 320 1 204 1 160 4 88 1 206 4 209 1 89 1 141 2 70 1 91 1 334 2 364 2 123 1 76 2 218 2 40 1 261 7 292 2 
22 1 46 2 105 1 294 2 106 1 349 1 334 1 157 4 160 3 76 1 206 3 218 1 89 1 190 1 141 1 261 4 70 1 292 1 
21 1 45 1 105 1 106 1 349 1 4 1 334 1 157 2 364 1 160 1 88 1 76 1 67 1 218 1 261 2 70 1 
105 2 294 1 106 1 349 1 334 2 157 3 364 1 204 1 160 2 206 1 141 1 261 3 70 1 
22 1 46 2 105 2 294 4 106 1 266 1 349 1 334 2 157 9 364 1 320 1 151 1 160 5 204 1 76 1 206 7 218 1 89 1 190 1 141 3 40 1 261 9 70 1 292 1 
22 1 46 2 105 2 294 4 106 1 266 1 349 1 334 2 157 9 364 1 320 1 151 1 160 5 204 1 76 1 206 7 218 1 89 1 190 1 141 3 40 1 261 9 70 1 292 1 
330 1 101 1 56 1 
255 1 203 2 56 1 
229 2 57 2 65 1 259 1 240 2 184 2 179 2 336 2 
200 1 2 1 107 2 65 1 184 2 350 1 158 1 186 2 161 1 229 3 115 1 354 1 278 1 57 2 38 1 58 1 304 2 39 1 196 1 305 1 122 2 150 1 336 3 284 2 306 1 217 1 339 1 309 1 289 1 260 1 259 1 240 2 79 1 179 2 20 1 100 1 102 1 
6 1 163 1 229 1 57 1 224 1 259 1 240 1 184 1 179 1 336 1 
330 1 293 1 163 1 283 1 164 1 362 1 184 1 169 1 336 1 187 1 229 1 18 1 358 1 56 1 
330 1 293 2 57 1 163 1 283 1 184 1 169 1 336 1 187 1 229 1 240 1 18 1 358 2 179 1 56 1 
293 1 16 1 7 1 358 1 54 1 
330 1 293 2 16 1 97 1 7 1 145 1 358 2 56 1 
293 1 7 1 358 1 
293 1 163 1 57 1 224 1 184 1 336 1 16 1 6 1 229 1 259 1 240 1 358 1 19 1 179 1 
56 1 
330 1 293 2 16 1 7 1 145 1 358 2 56 1 30 1 
103 1 330 1 24 1 293 5 235 1 270 2 16 2 365 1 124 2 287 1 7 2 239 1 52 1 145 1 311 1 358 5 213 1 56 1 344 2 
65 1 101 1 
57 1 65 2 184 2 149 1 336 2 229 2 286 1 240 1 179 1 
104 1 189 1 244 1 
200 1 81 1 38 1 58 1 304 1 65 1 122 1 158 1 336 1 186 1 229 1 289 1 20 1 100 1 79 1 102 1 
200 1 38 1 58 1 304 1 244 1 184 1 122 1 158 1 336 2 186 1 229 2 289 1 342 1 240 1 79 1 100 1 242 1 179 1 20 1 102 1 
57 1 229 3 65 1 342 1 240 3 184 3 179 3 336 3 
163 1 229 1 224 1 240 1 184 1 179 1 336 1 
163 1 229 1 57 1 286 1 240 1 184 1 149 1 179 1 336 1 
200 1 293 1 107 1 65 1 350 1 184 3 158 1 186 1 187 1 161 1 229 4 115 1 354 1 358 1 57 2 163 1 38 1 283 1 58 1 304 1 39 1 149 1 122 1 169 1 150 1 336 4 284 2 306 1 217 1 309 1 257 1 289 1 260 1 342 1 259 1 18 1 240 3 262 1 79 1 100 1 20 1 179 3 242 1 102 1 
229 2 68 1 164 1 65 1 342 1 240 1 184 2 179 1 336 2 
293 1 57 1 163 1 283 1 181 1 149 1 184 3 169 1 336 3 187 1 229 3 257 1 342 2 240 3 18 1 358 1 242 1 179 3 56 1 
57 1 244 1 149 1 184 2 336 2 189 1 229 2 342 1 240 2 179 2 
200 1 38 1 304 1 58 1 65 1 122 1 158 1 336 1 186 1 229 1 289 1 20 1 100 1 79 1 102 1 
200 1 38 1 304 1 58 1 65 1 122 1 158 1 336 1 186 1 139 1 229 1 289 1 126 1 100 1 79 1 
104 2 107 4 3 1 244 2 136 1 161 1 189 2 140 1 354 2 210 1 247 1 117 1 39 1 196 2 284 2 15 1 171 1 306 1 217 1 309 1 290 1 260 1 61 1 178 1 
187 1 163 1 229 1 240 1 60 1 184 1 179 1 336 1 
57 1 164 1 65 1 184 5 149 1 252 1 336 5 229 5 68 1 342 2 240 4 343 1 179 4 242 1 
163 1 229 2 224 1 60 1 240 2 184 2 179 2 336 2 
281 1 
281 1 
0 1 120 1 
0 1 120 1 
0 1 120 1 
281 1 
281 1 
281 1 
0 1 281 2 120 1 
281 1 
281 1 
281 1 
281 1 
293 2 281 2 264 2 347 1 297 2 202 1 318 2 137 1 253 2 321 2 238 1 358 2 263 1 34 1 56 1 
293 1 281 1 264 1 297 1 318 1 184 1 268 1 336 1 253 1 321 1 238 1 229 1 32 1 338 1 240 1 212 1 358 1 44 1 179 1 
76 1 218 1 292 1 
76 1 67 1 218 1 
67 1 77 1 218 3 33 1 183 1 292 2 
222 1 67 1 218 2 33 1 183 1 292 1 
67 1 218 2 33 2 183 1 292 1 
103 2 293 5 3 1 108 1 66 1 203 3 270 1 32 1 230 2 7 1 277 2 212 1 145 1 117 1 358 5 213 1 56 2 330 1 302 1 15 1 16 4 124 1 366 1 255 1 153 1 341 1 290 1 98 2 41 1 239 3 44 1 344 1 
103 6 293 9 315 1 3 3 66 2 156 1 5 5 203 9 270 2 32 4 7 6 277 6 145 1 117 3 358 9 54 5 213 1 56 5 330 1 331 1 302 3 361 1 59 1 15 3 16 7 124 2 366 2 287 1 255 3 153 1 125 1 290 3 98 6 239 8 344 2 
103 2 293 3 3 1 108 1 66 1 203 4 270 1 32 1 230 1 277 2 117 1 358 3 56 3 330 1 302 1 16 2 15 1 124 1 366 1 255 2 287 1 290 1 41 1 239 3 98 2 344 1 
103 4 293 4 3 2 108 1 66 1 156 1 203 7 270 1 32 2 230 2 277 4 117 2 358 4 56 4 330 1 302 2 361 1 16 3 15 2 124 1 366 1 255 3 287 1 125 1 290 2 98 4 41 1 239 5 344 1 
58 1 319 1 101 1 
301 1 58 1 
231 1 
58 1 158 1 
58 3 109 1 90 1 158 1 319 2 79 1 
58 1 158 1 79 1 
243 1 58 1 
23 1 249 1 107 7 303 2 317 1 72 1 196 4 85 1 136 3 138 1 254 1 140 2 354 3 290 1 298 1 117 1 55 1 
23 1 249 1 107 7 303 2 317 1 72 1 196 4 85 1 136 3 138 1 254 1 140 2 354 3 290 1 298 1 117 1 55 1 
23 1 249 1 107 7 303 2 317 1 72 1 196 4 85 1 136 3 138 1 254 1 140 2 354 3 368 1 290 1 298 1 117 1 55 1 
155 1 23 2 107 31 3 3 317 2 85 1 49 1 136 10 138 5 205 1 161 1 245 1 140 5 354 15 50 4 275 1 298 1 117 4 55 1 249 2 302 3 303 3 39 1 196 16 72 2 363 3 215 1 284 2 15 3 254 1 256 1 309 1 290 4 260 1 
23 1 249 1 107 9 332 1 303 2 317 1 39 2 72 1 196 5 85 1 28 1 136 4 138 1 161 2 284 4 254 1 140 3 354 4 275 1 309 2 290 1 260 2 298 1 117 1 
200 1 105 1 106 1 349 1 47 1 157 2 160 1 186 1 86 1 206 1 67 1 356 1 70 1 93 1 38 1 304 1 334 1 74 1 122 1 364 1 335 1 170 1 76 1 77 1 218 2 172 1 310 1 261 2 127 1 292 1 
200 1 105 1 349 1 47 1 26 1 157 3 160 1 186 1 206 2 67 1 356 1 70 1 93 1 38 1 304 1 334 1 74 1 122 1 237 1 364 1 335 1 76 1 77 1 218 2 172 1 310 1 261 3 127 1 154 1 292 1 
200 1 349 1 47 1 157 2 160 1 186 1 206 2 67 1 70 1 38 1 304 1 364 1 74 1 122 1 237 1 335 1 76 1 77 1 218 2 172 1 310 1 261 2 127 1 154 1 292 1 
328 1 200 1 105 1 38 1 333 1 58 1 304 1 26 1 47 2 334 1 157 1 185 1 364 2 74 2 122 1 158 1 335 2 186 1 322 1 246 1 289 1 143 1 261 1 
200 1 105 1 38 1 93 1 106 1 304 1 47 1 334 1 157 1 364 1 237 1 122 1 74 1 335 1 170 1 186 1 76 1 67 1 77 1 218 2 172 1 310 1 127 1 356 1 261 1 292 1 
69 1 
133 2 185 1 184 1 269 1 271 1 270 1 186 2 187 1 229 1 7 6 145 3 56 2 10 2 233 2 330 1 92 1 12 1 333 1 283 1 58 1 13 1 197 1 198 2 336 1 289 2 239 2 18 1 199 1 344 1 103 2 293 5 200 1 158 1 203 2 112 1 207 1 358 5 213 1 300 1 36 1 163 1 38 1 304 2 164 1 166 4 73 2 362 1 122 2 169 1 366 1 124 1 255 2 219 2 308 2 128 1 
293 3 163 1 92 1 12 1 283 1 133 1 164 1 166 2 362 1 184 1 169 1 30 1 336 1 187 1 207 1 229 1 7 2 18 1 145 1 358 3 300 1 36 1 
330 1 293 3 163 1 92 1 12 1 283 1 164 1 166 3 362 1 184 1 169 1 30 1 336 1 187 1 207 1 229 1 219 1 7 1 18 1 145 1 358 3 300 1 56 1 36 1 
293 3 133 1 184 1 30 1 187 1 229 1 207 1 7 2 145 1 358 3 300 1 36 1 10 1 56 1 330 1 92 1 163 1 12 1 283 1 164 1 166 3 362 1 169 1 336 1 219 1 18 1 
226 1 133 4 184 1 269 1 270 1 187 1 229 1 7 7 145 3 10 4 56 5 233 2 330 5 146 1 92 1 12 1 283 1 147 1 336 1 198 2 18 1 239 1 344 1 103 1 293 5 296 1 30 1 207 1 358 5 359 1 213 1 300 1 36 1 163 1 164 1 166 6 362 1 73 2 169 1 124 1 255 2 219 4 308 2 128 1 
133 2 184 1 269 1 270 1 187 1 229 1 7 4 145 2 10 2 56 2 233 2 330 1 92 1 12 1 283 1 336 1 198 2 18 1 239 1 199 1 344 1 103 1 293 4 203 2 207 1 358 4 213 1 300 1 36 1 163 1 164 1 166 4 362 1 73 2 169 1 124 1 255 2 219 2 308 2 128 1 
103 1 293 4 133 2 296 1 184 1 269 1 270 1 187 1 229 1 207 1 7 4 145 2 358 4 213 1 300 1 56 1 10 2 36 1 233 2 330 1 146 1 92 1 163 1 12 1 283 1 164 1 166 4 73 2 362 1 147 1 169 1 198 2 336 1 124 1 255 2 219 2 308 2 239 1 18 1 128 1 344 1 
103 1 293 4 133 2 296 1 184 1 269 1 270 1 187 1 229 1 207 1 7 4 145 2 358 4 213 1 300 1 56 1 10 2 36 1 233 2 330 1 146 1 92 1 163 1 12 1 283 1 164 1 166 4 73 2 362 1 147 1 169 1 198 2 336 1 124 1 255 2 219 2 308 2 239 1 18 1 128 1 344 1 
103 1 293 4 225 1 133 2 27 2 184 1 203 2 269 1 270 1 187 1 229 1 207 1 7 4 8 1 145 2 358 4 193 1 213 1 300 1 56 1 10 2 36 1 232 2 330 1 92 1 163 1 12 1 283 1 164 1 166 4 362 1 147 1 169 1 198 2 336 1 124 1 219 2 308 2 239 1 18 1 344 1 
103 1 293 4 296 1 133 3 184 1 269 1 270 1 187 1 229 1 207 1 7 5 145 2 358 4 213 1 359 1 300 1 56 1 36 1 10 3 233 2 330 1 146 1 92 1 163 1 12 1 283 1 164 1 166 5 73 2 362 1 147 1 169 1 198 2 336 1 124 1 255 2 219 3 308 2 239 1 18 1 128 1 344 1 
103 1 293 4 296 1 133 3 184 1 269 1 270 1 187 1 229 1 207 1 7 5 145 2 358 4 213 1 359 1 300 1 56 1 36 1 10 3 233 2 330 1 146 1 92 1 163 1 12 1 283 1 164 1 166 5 73 2 362 1 147 1 169 1 198 2 336 1 124 1 255 2 219 3 308 2 239 1 18 1 128 1 344 1 
103 1 293 4 133 2 27 2 184 1 203 2 269 1 270 1 187 1 207 1 229 1 7 4 8 1 145 2 358 4 213 1 300 1 56 1 10 2 36 1 232 2 330 1 92 1 163 1 12 1 283 1 164 1 166 4 362 1 169 1 198 2 336 1 124 1 219 2 308 2 239 1 18 1 199 1 344 1 
23 1 104 1 107 6 65 2 244 1 85 1 136 2 161 1 189 1 140 2 354 3 298 1 117 1 249 1 303 1 39 1 196 3 284 2 254 1 306 1 217 1 309 1 290 1 260 1 61 1 101 1 
104 11 314 1 2 1 107 14 3 1 65 1 244 11 49 1 136 2 138 1 161 2 189 4 140 1 354 6 50 3 117 1 302 2 39 2 196 8 363 3 150 1 337 1 94 1 284 4 15 2 78 1 306 2 217 1 256 1 309 2 369 1 290 2 260 2 
200 1 314 1 2 1 81 1 107 2 65 1 184 1 158 1 186 1 161 1 189 1 229 2 208 1 354 1 38 1 194 1 58 1 304 1 39 1 196 1 122 1 150 1 336 2 284 2 306 1 217 1 289 1 309 1 342 1 260 1 240 1 291 1 79 1 100 1 20 1 179 1 242 1 102 1 
314 1 2 1 3 2 85 1 184 1 186 3 136 8 138 4 229 3 189 7 140 4 53 1 58 2 196 10 237 1 150 1 336 3 95 1 284 6 15 2 289 1 290 3 342 1 240 1 242 1 20 2 100 2 102 2 23 1 200 2 104 7 107 20 295 2 65 2 244 7 350 2 158 2 161 3 116 2 354 10 298 1 117 3 249 1 38 2 302 2 303 1 304 3 39 3 122 3 216 2 254 1 217 3 306 3 309 3 260 3 174 2 370 1 179 1 79 2 
200 2 2 1 107 2 134 1 184 1 185 1 158 2 86 1 186 7 161 2 229 1 354 1 355 1 11 1 38 2 333 1 58 3 304 8 39 2 196 1 148 1 237 1 122 8 150 1 336 1 284 4 307 1 306 2 217 2 340 1 339 2 289 2 309 2 342 1 260 2 240 1 61 1 241 1 179 1 
104 1 314 1 107 3 3 1 244 1 184 1 136 1 161 1 189 1 229 1 140 1 354 2 117 1 57 1 302 1 39 1 196 1 149 1 336 1 284 2 15 1 285 1 306 1 217 1 309 1 290 1 260 1 240 1 179 1 
104 1 107 2 39 1 196 2 244 1 136 1 138 1 161 1 284 2 15 1 189 1 217 1 306 1 309 1 210 1 290 1 260 1 61 1 
104 1 107 2 3 1 39 1 244 1 136 1 161 1 284 2 189 1 171 1 217 1 306 1 140 1 354 2 309 1 260 1 61 1 117 1 
104 2 107 4 3 1 244 2 136 2 138 1 161 1 189 2 140 1 354 2 117 1 302 1 39 1 196 2 15 1 284 2 306 1 217 1 309 1 290 1 260 1 61 1 
104 1 11 1 107 2 39 1 196 2 244 1 136 1 138 1 161 1 284 2 15 1 189 1 217 1 306 1 309 1 210 1 290 1 260 1 
104 1 11 1 107 2 3 1 39 1 244 1 136 1 161 1 284 2 189 1 171 1 217 1 306 1 140 1 354 2 309 1 260 1 117 1 
104 2 107 4 3 1 244 2 136 2 138 1 161 1 189 2 140 1 354 2 117 1 11 1 302 1 39 1 196 2 15 1 284 2 306 1 217 1 309 1 290 1 260 1 
104 2 107 4 3 1 302 1 39 1 196 2 244 2 136 2 138 1 161 1 284 2 15 1 189 2 217 1 306 1 140 1 354 2 309 1 290 1 260 1 117 1 
200 1 2 1 107 2 65 1 350 1 158 1 186 1 161 1 229 1 354 1 38 1 304 1 58 1 39 1 196 1 122 1 150 1 336 1 284 2 217 1 306 1 289 1 309 1 260 1 79 1 100 1 20 1 102 1 
200 1 2 1 107 2 65 1 158 1 186 1 139 1 161 1 229 1 354 1 144 1 38 1 304 1 58 1 39 1 196 1 122 1 150 1 336 1 284 2 217 1 306 1 289 1 309 1 260 1 126 1 79 1 100 1 
104 2 314 1 107 4 3 1 244 2 136 2 138 1 161 1 189 2 140 1 354 2 117 1 302 1 39 1 196 2 15 1 284 2 306 1 217 1 309 1 290 1 260 1 
104 2 200 1 107 4 295 1 3 1 244 2 350 1 158 1 136 2 186 1 86 1 138 1 161 1 189 2 229 1 140 1 354 2 117 1 38 1 302 1 304 1 58 1 39 1 196 2 122 1 336 1 15 1 284 2 217 1 306 1 309 1 290 1 260 1 79 1 100 1 20 1 102 1 
104 1 314 1 107 3 3 1 244 1 184 1 136 1 87 1 138 1 161 1 229 1 189 1 354 1 117 1 57 1 302 1 39 1 196 2 149 1 336 1 284 2 15 1 306 1 217 1 309 1 290 1 260 1 240 1 179 1 
80 1 107 19 3 3 267 1 49 1 159 1 28 1 136 6 138 3 272 2 161 2 31 1 140 3 354 10 50 2 142 1 117 3 119 1 37 1 302 3 165 2 39 2 196 9 363 1 284 4 15 3 256 1 309 2 290 3 260 2 
130 1 107 26 82 1 3 2 267 1 159 2 28 1 136 4 138 2 272 1 188 1 161 3 31 2 140 2 354 12 275 2 50 2 117 2 119 1 37 1 302 3 165 4 39 3 196 14 195 1 363 2 284 6 15 3 256 2 309 3 290 3 260 3 371 1 43 1 
130 1 82 1 3 4 267 1 85 1 49 1 136 8 138 4 188 1 272 1 140 4 50 4 275 1 142 1 196 20 195 1 15 4 284 6 290 5 23 1 107 41 28 1 159 1 161 3 31 2 354 21 298 1 211 1 117 5 119 1 249 1 37 1 302 4 303 1 39 3 165 4 363 3 254 1 256 3 309 3 260 3 371 1 43 1 
23 1 130 1 107 38 82 1 3 3 267 1 85 1 49 1 159 1 28 1 136 7 138 3 272 1 188 1 161 4 31 2 140 4 354 18 275 2 50 4 142 1 211 1 298 1 117 4 119 1 249 1 37 1 302 4 303 1 165 4 39 4 195 1 196 20 363 3 284 8 15 4 254 1 256 3 309 4 290 5 260 4 371 1 43 1 
23 1 130 1 107 52 82 1 3 7 267 1 85 1 49 2 159 1 28 1 136 14 138 7 272 1 188 1 161 2 31 1 140 7 354 25 275 1 50 4 298 1 117 8 119 1 249 1 37 1 302 7 303 1 165 4 39 2 195 1 196 27 363 4 284 4 15 7 254 1 256 2 309 2 369 2 290 8 260 2 371 1 43 1 
321 1 253 1 281 1 214 1 347 1 297 1 318 1 
268 1 
321 1 253 1 323 1 281 1 297 1 318 1 
293 1 281 1 264 2 347 1 297 1 202 1 318 1 137 1 253 1 321 1 238 1 358 1 263 1 34 1 56 1 
293 1 281 1 264 2 347 1 297 1 202 1 318 1 137 1 253 1 321 1 238 1 358 1 263 1 34 1 56 1 
293 1 281 1 264 2 347 1 297 1 202 1 318 1 137 1 253 1 321 1 238 1 358 1 263 1 34 1 56 1 
162 1 
162 1 
348 1 
348 1 
99 1 14 1 
293 1 281 1 264 1 297 1 318 1 268 1 137 1 253 1 321 1 16 1 32 1 338 1 212 1 358 1 357 1 44 1 34 1 
162 1 
348 1 
200 1 314 1 129 1 132 1 2 1 107 2 134 1 184 2 158 1 186 2 161 1 229 2 324 1 354 1 280 1 38 1 282 1 58 1 304 2 39 1 196 1 122 2 150 1 336 2 284 2 307 1 306 1 217 1 339 2 309 1 260 1 
200 1 38 1 93 1 25 1 304 2 237 1 122 2 74 1 186 2 86 1 76 1 67 1 77 1 218 2 326 1 172 1 310 1 175 1 292 1 
200 1 93 1 38 1 304 1 237 1 122 1 74 1 111 1 186 1 76 1 67 1 77 1 218 2 326 1 172 1 310 1 292 1 
328 1 200 1 38 1 333 1 58 1 304 1 122 1 74 1 185 1 158 1 186 1 289 1 175 1 17 1 
200 1 93 1 38 1 25 1 304 1 237 1 122 1 74 1 186 1 76 1 67 1 77 1 218 2 326 1 172 1 310 1 175 1 292 1 
367 1 
103 1 330 1 24 1 235 1 239 1 101 1 56 1 
103 1 293 1 203 1 270 1 7 1 145 1 358 1 213 1 56 2 233 1 330 1 73 1 124 1 255 1 239 1 128 1 344 1 
131 2 1 2 3 2 319 2 86 1 271 1 270 4 186 3 7 5 327 1 276 2 277 6 145 3 56 8 330 2 235 1 58 10 15 2 96 2 289 1 290 2 239 9 98 6 344 4 103 8 24 1 200 4 293 5 243 2 346 1 109 1 158 3 203 12 352 2 358 5 117 2 213 4 301 3 71 2 38 3 302 2 304 3 251 1 167 1 122 3 169 2 75 2 366 2 124 4 255 6 173 1 174 2 312 2 79 3 
103 5 293 1 131 2 82 1 3 2 203 6 271 1 270 2 188 1 7 1 50 1 276 1 277 5 145 1 358 1 118 1 117 2 9 1 213 2 56 5 330 2 302 2 195 1 363 1 15 2 366 1 124 2 255 3 256 1 290 2 98 5 239 8 371 1 43 1 344 2 
103 2 23 1 293 1 131 2 224 1 296 1 184 1 270 1 6 1 229 1 276 1 298 1 358 1 117 1 213 1 163 1 249 1 57 1 336 1 124 1 290 2 259 1 239 2 240 1 19 1 221 1 179 1 344 1 
103 1 24 1 330 1 235 1 270 1 124 1 239 1 213 1 344 1 56 1 
103 5 131 2 302 2 3 2 203 10 15 2 255 5 290 2 276 1 174 1 98 5 277 5 239 5 117 2 56 5 
330 1 293 1 7 1 145 1 358 1 56 1 
103 2 200 1 293 3 346 1 316 1 185 1 158 1 112 1 270 2 186 4 271 2 7 4 327 2 145 2 358 3 213 1 38 1 333 1 58 1 304 4 121 1 122 4 197 1 124 2 366 2 287 1 289 2 239 2 344 2 
200 1 107 1 65 1 184 2 350 1 158 1 186 1 161 1 229 3 115 1 354 1 57 2 38 1 304 1 58 1 39 1 122 1 150 1 336 3 284 2 217 1 306 1 289 1 309 1 260 1 259 1 240 2 179 2 20 1 100 1 79 1 102 1 
103 2 330 2 303 1 203 4 270 1 271 1 124 1 366 1 255 2 98 2 277 2 239 1 213 1 344 1 56 4 
321 1 318 1 42 1 
321 1 318 1 42 1 
223 1 321 1 318 1 14 1 113 1 
321 1 318 1 42 1 
321 1 318 1 48 1 
321 1 318 1 48 1 
321 1 318 1 48 1 
321 1 318 1 
281 1 
23 1 249 1 107 8 303 1 39 2 196 4 85 1 136 3 138 1 161 2 284 4 254 1 140 2 354 4 309 2 275 1 290 1 260 2 298 1 117 1 
23 1 249 1 107 6 303 1 196 3 85 1 136 2 254 1 140 2 354 3 290 1 298 1 117 1 101 1 
107 4 3 1 302 1 39 1 196 2 168 1 136 2 138 1 161 1 284 2 15 1 140 1 354 2 309 1 290 1 260 1 117 1 
107 7 3 1 302 1 196 3 363 1 49 1 136 2 138 1 15 1 140 1 256 1 354 4 50 2 290 1 117 1 
23 2 107 23 3 2 85 1 49 1 136 9 138 4 161 2 140 5 354 12 50 2 275 2 298 1 117 3 249 2 234 1 302 2 303 1 39 2 196 11 363 2 15 2 94 1 284 4 254 1 309 2 290 3 369 1 260 2 
107 1 354 1 50 1 
107 1 196 1 363 1 
107 6 302 1 3 1 39 1 196 3 168 1 136 3 138 1 284 2 161 1 15 1 140 2 354 3 309 1 290 1 260 1 174 1 117 1 
107 12 82 1 3 2 28 1 136 2 138 1 161 1 188 1 140 1 354 6 50 1 117 2 302 2 39 1 196 6 195 1 363 1 284 2 15 2 256 1 309 1 290 2 260 1 371 1 43 1 
23 1 249 1 107 6 196 3 136 2 138 1 140 1 354 3 290 1 298 1 117 1 
23 1 249 1 234 1 107 3 39 1 196 1 85 1 136 2 138 1 161 1 284 2 254 1 140 1 354 2 275 1 309 1 260 1 
23 2 249 2 107 10 39 1 196 5 28 1 136 5 138 2 284 2 161 1 140 3 354 5 309 1 290 2 260 1 298 1 117 2 221 1 
107 2 39 1 196 2 28 1 136 1 138 1 161 1 284 2 15 1 309 1 290 1 260 1 
107 4 3 1 302 1 39 1 196 2 28 1 136 2 138 1 161 1 284 2 15 1 140 1 354 2 309 1 290 1 260 1 117 1 
23 1 249 1 234 1 107 3 39 3 196 1 28 1 136 2 138 1 161 3 284 6 140 1 354 2 275 1 309 3 142 1 260 3 
155 1 23 3 107 34 3 3 85 1 49 1 28 1 136 12 205 1 138 5 245 1 161 5 140 7 354 18 275 2 50 4 142 1 298 2 117 5 249 3 234 1 302 3 303 1 39 5 196 16 363 3 168 1 284 10 15 3 254 1 256 1 309 5 290 5 260 5 
23 1 107 8 82 1 85 1 28 1 136 2 161 1 140 2 354 4 50 1 298 1 117 1 249 1 303 1 39 1 196 4 363 1 284 2 254 1 256 1 309 1 290 1 260 1 
23 1 107 11 82 1 85 1 49 1 28 1 136 3 138 1 161 2 140 2 354 5 50 2 298 1 117 1 249 1 302 1 303 1 39 2 196 6 363 1 168 1 284 4 15 1 254 1 256 1 309 2 290 2 260 2 
23 1 107 19 82 1 3 2 85 1 28 1 136 4 138 1 161 3 188 1 140 3 354 10 50 1 275 1 298 1 117 3 249 1 302 2 303 1 39 3 196 9 195 1 363 1 168 1 284 6 15 2 254 1 256 1 309 3 290 3 260 3 371 1 43 1 
23 1 107 17 82 1 3 1 85 1 28 1 136 5 138 2 161 3 188 1 140 3 354 7 275 1 50 1 298 1 117 2 249 1 302 2 303 1 39 3 196 10 195 1 363 1 168 1 284 6 15 2 254 1 256 1 309 3 290 3 260 3 371 1 43 1 
23 1 107 8 82 1 85 1 28 1 136 2 161 1 140 2 354 4 50 1 298 1 117 1 249 1 303 1 39 1 196 4 363 1 284 2 254 1 256 1 309 1 290 1 260 1 
107 12 82 1 3 2 28 1 136 2 138 1 161 1 188 1 140 1 354 6 50 1 117 2 302 2 39 1 196 6 195 1 363 1 284 2 15 2 256 1 309 1 290 2 260 1 371 1 43 1 
23 1 107 18 82 1 3 1 85 1 28 1 136 5 138 2 188 1 161 4 140 3 354 8 50 1 275 2 298 1 117 2 249 1 302 2 303 1 39 4 196 10 195 1 363 1 168 1 284 8 15 2 254 1 256 1 309 4 290 3 260 4 371 1 43 1 
107 16 82 1 3 2 28 1 136 6 138 3 188 1 161 4 140 3 354 7 50 1 275 2 142 1 117 2 302 3 39 4 196 9 195 1 363 1 284 8 15 3 256 1 309 4 290 3 260 4 371 1 43 1 
23 3 249 3 107 7 196 3 85 1 136 6 138 3 254 2 140 3 354 4 290 1 298 1 117 1 
23 1 107 18 82 1 3 1 85 1 28 1 136 4 138 1 188 1 161 4 140 3 354 8 50 1 275 2 142 1 298 1 117 2 249 1 302 2 303 1 39 4 196 10 195 1 363 1 284 8 15 2 254 1 256 1 309 4 290 3 260 4 371 1 43 1 
229 1 68 1 164 1 65 1 184 1 220 1 336 1 
164 1 65 1 182 1 184 1 29 1 336 1 229 1 288 1 68 1 176 1 62 1 220 1 
200 1 38 1 333 1 289 1 58 1 304 1 185 1 122 1 158 1 101 1 186 1 
200 1 38 1 58 1 304 1 65 1 184 1 122 1 158 1 336 2 186 1 229 2 289 1 342 1 240 1 79 1 100 1 179 1 102 1 
200 1 163 1 243 1 38 1 283 1 58 3 304 1 65 1 184 2 122 1 75 1 158 2 336 2 186 1 187 1 229 2 327 1 342 1 240 1 79 2 100 1 179 2 102 1 
200 1 313 1 243 1 65 1 184 2 158 2 186 2 187 1 139 1 229 2 327 1 163 1 38 1 283 1 304 2 58 3 122 2 75 1 336 2 342 1 240 1 179 2 100 1 79 2 
301 1 330 1 200 1 293 2 313 1 243 1 38 1 304 3 58 4 122 3 169 1 158 1 75 1 319 1 186 3 273 1 289 1 7 1 327 1 358 2 79 1 372 1 56 1 
301 1 330 1 200 1 293 2 313 1 243 1 38 1 304 3 58 4 122 3 169 1 158 1 75 1 319 1 186 3 96 1 289 1 7 1 327 1 358 2 79 1 56 1 
200 1 38 1 304 1 122 1 148 1 186 1 
345 1 200 3 38 2 304 7 58 3 64 1 109 1 227 1 148 1 237 1 122 7 158 2 86 1 186 6 307 1 339 1 340 1 289 2 355 1 241 1 79 1 
314 1 132 1 85 1 184 1 186 1 86 1 136 2 189 1 229 2 140 2 58 1 196 3 336 2 284 4 290 1 342 1 240 1 20 1 100 1 102 1 200 1 23 1 104 1 295 1 107 6 65 2 244 1 350 1 158 1 161 2 116 1 354 3 298 1 117 1 249 1 38 1 304 1 303 1 39 2 122 1 217 2 306 2 254 1 309 2 260 2 179 1 79 1 
103 1 24 1 293 3 1 1 346 1 319 1 186 1 270 2 352 1 7 2 145 1 358 3 213 2 56 1 301 1 330 1 71 1 235 1 304 1 58 2 122 1 169 1 16 1 124 2 96 1 289 1 239 1 344 2 
200 2 38 1 304 2 58 2 109 1 148 1 122 2 158 1 319 1 86 1 186 2 173 1 79 1 
200 1 313 1 38 1 333 1 304 4 58 1 122 4 185 1 158 1 186 4 86 1 289 1 192 1 
345 1 200 2 38 1 304 2 58 1 64 1 201 1 110 1 122 2 158 1 186 2 327 1 370 1 79 1 
76 1 67 1 200 1 218 1 38 1 289 1 310 1 304 1 122 1 186 1 
200 1 38 1 304 2 58 1 122 2 237 1 158 1 86 1 186 2 307 1 280 1 
200 2 38 2 333 1 304 5 58 3 185 1 122 5 158 2 186 4 86 1 307 1 340 1 289 1 327 1 355 1 192 1 
200 2 38 2 333 1 265 1 304 5 58 3 185 1 122 5 158 2 186 4 86 1 307 1 340 1 289 1 327 1 192 1 
200 1 38 1 58 1 304 1 65 1 184 1 122 1 158 1 336 2 186 1 139 1 229 2 289 1 342 1 240 1 79 1 100 1 179 1 
345 1 200 2 38 1 304 1 58 1 64 1 109 1 227 1 122 1 158 1 186 1 327 1 79 1 
248 1 329 1 65 1 279 1 135 1 
329 1 248 2 330 1 293 2 360 1 163 1 283 1 65 1 169 1 135 2 114 1 187 1 16 1 274 1 257 1 279 2 18 1 358 2 56 1 
329 1 248 1 229 1 129 1 324 1 282 1 184 1 135 1 336 1 
329 1 360 1 114 1 
349 1 70 1 101 1 160 1 
105 1 349 1 261 1 70 1 157 1 334 1 160 1 
47 1 261 1 364 1 
88 2 105 1 106 1 250 1 51 1 349 1 261 3 70 1 157 3 334 1 351 1 160 1 
206 1 46 1 105 1 349 1 261 2 70 1 157 2 334 1 160 1 
76 1 22 1 218 1 294 1 105 1 106 1 261 1 157 1 334 1 292 1 160 1 
105 1 106 1 261 1 70 1 157 1 334 1 160 1 
105 1 106 1 349 1 261 1 70 2 157 1 334 1 
105 2 106 1 180 1 334 2 157 2 160 1 325 1 177 1 261 2 70 1 
105 1 294 1 106 1 349 1 334 1 157 3 320 1 160 2 206 2 141 1 40 1 261 3 70 1 
105 1 106 1 349 1 334 1 157 2 160 1 76 1 206 1 67 1 77 1 218 2 261 2 70 1 292 1 35 1 
46 1 105 2 294 1 106 1 349 1 334 2 157 4 160 2 206 2 190 1 141 1 261 4 70 1 
105 1 106 1 349 1 261 1 70 1 157 1 334 1 160 1 
105 1 294 1 250 1 349 2 157 4 334 1 160 3 88 1 206 2 141 1 51 1 258 1 261 4 70 2 
105 1 106 1 349 1 334 1 157 2 236 1 151 1 160 1 206 1 228 1 261 2 70 1 
88 2 105 1 106 1 250 2 63 1 51 1 349 1 261 3 70 1 157 3 334 1 160 1 
152 2 83 1 191 1 160 2 
105 1 106 1 261 1 157 1 334 1 299 1 
206 1 105 1 106 1 349 1 40 1 261 2 70 1 157 2 334 1 160 1 
353 1 
105 1 106 1 349 1 261 1 70 1 157 1 334 1 160 1 
105 1 106 1 349 1 334 1 157 3 160 1 206 1 88 1 40 1 261 3 70 1 
294 1 141 1 258 1 160 1 
70 1 160 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 343 199 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 207 6 56 1 161 1 125 2 57 2 164 5 6 2 166 3 141 1 307 9 113 1 335 1 170 2 145 2 339 1 118 9 368 1 289 1 97 1 369 1 25 4 179 1 26 1 215 2 121 2 183 1 77 1 
0 1 207 6 56 1 161 1 125 2 57 2 164 5 6 2 166 3 141 1 307 9 113 1 335 1 170 2 145 2 339 1 118 9 368 1 289 1 97 1 369 1 25 4 179 1 26 1 215 2 121 2 183 1 77 1 
0 1 207 7 56 1 161 1 125 2 57 2 164 6 6 2 166 4 141 1 307 10 113 1 335 1 170 2 145 2 339 1 118 10 368 1 289 1 97 1 369 1 25 5 179 1 26 1 215 2 121 2 183 1 77 1 
0 1 207 4 56 1 161 1 125 2 57 2 164 4 6 2 166 2 141 1 307 7 113 1 335 1 170 2 145 1 339 1 118 7 368 1 289 1 369 1 25 3 179 1 26 1 215 2 121 2 183 1 77 1 
170 1 145 2 56 1 207 3 339 1 125 1 118 4 368 1 57 1 164 3 97 1 369 1 6 1 25 2 166 1 215 1 307 4 183 1 
170 1 339 1 125 1 118 2 368 1 164 1 6 1 26 1 215 1 141 1 307 2 121 1 248 1 66 1 183 1 237 1 
170 2 207 1 339 1 161 1 125 2 118 3 368 1 164 2 25 1 166 1 307 3 121 1 183 1 
207 7 56 1 161 1 125 2 57 1 164 5 6 1 166 3 307 9 335 1 170 2 145 2 339 1 23 1 118 9 368 1 289 1 369 1 97 1 25 4 373 1 215 1 121 1 183 1 
207 7 56 1 161 1 125 2 57 1 164 5 6 1 166 3 307 9 335 1 170 2 145 2 339 1 23 1 118 9 368 1 289 1 369 1 97 1 25 4 373 1 215 1 121 1 183 1 
184 1 345 1 362 1 
184 1 329 1 210 2 
258 2 172 2 208 2 324 2 76 1 331 2 314 2 250 1 
324 2 2 1 127 1 129 1 302 2 4 1 359 1 328 1 280 1 266 1 208 2 140 1 167 1 331 3 308 2 250 1 364 1 17 1 115 1 90 1 173 1 172 2 253 1 176 1 312 2 45 1 47 2 94 1 314 3 230 1 212 2 370 1 258 2 372 1 100 1 76 1 30 1 
258 1 172 1 292 1 208 1 324 1 331 1 96 1 314 1 250 1 262 1 
238 1 184 1 323 1 353 1 287 1 314 1 131 1 258 1 52 1 292 1 331 1 362 1 154 1 14 1 
238 1 184 1 172 1 324 1 353 2 287 1 131 2 314 1 258 1 52 1 208 1 292 1 331 1 362 1 154 1 
169 1 74 1 274 1 353 1 131 1 
169 1 184 1 315 1 41 1 274 1 353 2 362 1 131 2 
274 1 353 1 131 1 
169 1 172 1 324 1 353 1 96 1 131 1 24 1 314 1 258 1 292 1 208 1 331 1 262 1 250 1 
184 1 
169 1 184 1 315 1 274 1 353 2 362 1 313 1 131 2 
156 1 169 2 184 1 158 1 274 2 222 1 353 5 196 1 131 5 132 1 342 1 86 1 315 1 10 2 153 1 245 2 362 1 363 1 225 2 
258 3 172 1 208 3 324 3 76 1 331 3 28 1 314 3 
258 1 292 1 208 1 324 1 331 1 96 1 314 1 
258 1 172 1 32 1 374 1 292 1 208 1 324 1 331 1 314 1 
238 1 32 1 2 1 324 3 353 1 127 1 129 1 131 1 302 1 4 1 359 1 328 1 265 1 280 1 208 3 140 1 167 1 331 4 308 1 250 1 115 1 90 1 173 1 172 2 253 1 287 1 45 1 312 1 288 1 47 2 230 1 314 4 370 1 212 1 258 3 372 1 52 1 100 1 180 1 292 1 76 1 154 1 28 1 30 1 
323 1 72 1 258 2 208 1 324 1 76 1 331 2 28 1 314 2 
238 1 184 1 172 1 32 1 324 3 353 1 287 1 105 1 288 1 131 1 314 3 258 3 52 1 292 1 180 1 208 3 331 3 154 1 28 2 
251 1 32 1 172 1 324 2 314 2 258 2 208 2 331 2 28 1 168 1 
173 1 253 1 2 1 45 1 312 1 129 1 314 1 230 1 212 1 370 1 359 1 328 1 76 1 331 1 308 1 
123 1 173 1 253 1 2 1 45 1 312 1 129 1 314 1 212 1 370 1 359 1 76 1 331 1 54 1 308 1 
157 1 352 1 127 1 83 1 302 4 87 1 280 2 167 1 168 2 251 2 89 1 115 1 90 1 69 1 365 1 176 2 268 2 229 1 47 2 100 1 235 1 234 1 293 1 30 1 
258 1 52 1 292 1 208 1 324 1 281 1 331 1 314 1 
76 1 345 1 
32 1 172 1 324 1 314 2 258 2 374 1 208 1 331 2 76 2 
251 1 268 1 168 1 
173 1 253 1 2 1 45 1 312 1 129 1 314 1 230 1 212 1 370 1 359 1 328 1 76 1 331 1 308 1 67 1 
251 1 173 1 253 1 2 1 324 1 45 1 312 1 129 1 314 2 230 1 359 1 370 1 212 1 328 1 258 1 180 1 208 1 331 2 28 1 308 1 
323 1 32 1 172 1 324 4 59 1 314 5 72 1 258 5 36 1 208 4 180 1 331 5 76 1 28 2 
258 2 281 1 292 1 208 2 324 2 331 2 96 1 314 2 
227 1 203 1 189 1 
227 1 224 1 189 1 
227 1 224 1 189 1 
227 1 224 1 189 1 
227 1 189 1 
227 1 189 1 
263 1 3 1 
263 1 3 1 
263 1 3 1 
227 1 203 1 189 1 
227 1 203 1 189 1 
219 1 227 1 189 1 
263 1 227 2 277 1 3 1 300 1 189 2 
184 1 19 1 227 2 1 1 187 1 353 2 355 1 300 1 211 2 189 2 326 2 85 1 131 2 197 1 108 2 135 2 9 3 75 1 182 2 
219 1 347 1 324 2 353 1 189 1 326 1 131 1 135 1 137 1 9 1 208 2 331 2 361 1 37 1 192 1 227 1 211 1 197 1 314 2 255 1 258 2 76 1 322 1 182 1 
6 1 215 1 57 1 
6 1 215 1 237 1 
6 3 202 1 57 2 218 1 244 1 237 1 
6 2 279 1 202 1 57 1 218 1 237 1 
6 2 202 1 57 1 218 2 237 1 
156 2 184 2 157 1 352 1 275 2 274 1 222 1 353 5 301 1 131 5 132 3 61 2 329 1 10 1 361 1 245 1 362 1 13 2 249 1 192 1 225 1 169 4 89 1 116 1 21 1 210 3 229 1 95 1 119 1 315 1 31 1 322 1 
156 6 184 5 157 3 352 3 275 6 274 6 353 9 222 1 58 1 301 2 131 9 132 8 303 1 61 6 329 3 10 2 245 2 362 1 192 4 209 1 225 2 169 7 89 3 194 5 21 1 210 9 229 3 119 3 73 1 315 1 74 5 317 1 153 1 216 1 31 2 
156 2 184 3 157 1 352 1 275 2 353 3 301 1 131 3 132 3 61 2 329 2 10 1 245 1 362 1 13 1 192 1 225 1 169 2 89 1 116 1 210 4 229 1 95 1 119 1 153 1 31 1 
156 4 184 4 157 2 352 2 275 4 353 4 58 1 301 1 131 4 132 5 303 1 61 4 329 3 10 1 245 1 362 1 13 2 192 2 225 1 169 3 89 2 116 1 210 7 229 2 95 1 119 2 317 1 153 1 31 1 
173 1 253 1 
359 1 336 2 173 3 253 1 11 1 320 1 
336 1 173 1 345 1 
173 1 273 1 
12 1 
359 1 173 1 253 1 
173 1 84 1 
89 1 352 1 338 1 176 4 83 3 298 1 241 1 302 7 87 2 280 3 291 1 181 1 64 2 379 1 246 1 380 1 381 1 
89 1 352 1 338 1 176 4 83 3 298 1 241 1 302 7 87 2 280 3 291 1 181 1 64 2 379 1 246 1 380 1 381 1 
89 1 352 1 338 1 176 4 83 3 298 1 128 1 241 1 302 7 87 2 280 3 291 1 181 1 64 2 379 1 246 1 380 1 381 1 
297 1 157 3 352 4 298 2 127 1 83 10 241 2 302 31 87 5 280 15 360 1 167 1 64 3 246 2 16 4 115 1 89 4 90 1 338 1 22 1 117 1 195 3 176 16 366 1 47 2 229 3 119 3 291 1 344 1 181 5 379 1 381 1 380 2 294 1 
352 1 127 2 83 4 298 1 241 1 302 9 87 3 136 1 280 4 167 2 64 2 246 1 89 1 115 2 90 2 174 1 176 5 366 1 47 4 291 1 181 1 379 1 380 1 381 1 
206 1 55 1 207 1 2 1 125 1 34 1 240 1 57 1 223 1 164 1 129 1 244 1 6 2 306 1 308 1 307 2 170 1 42 1 228 1 339 1 118 2 312 1 368 1 212 1 371 1 316 1 215 1 121 1 183 1 237 1 
206 1 349 1 55 1 207 2 2 1 125 1 34 1 240 1 57 1 164 1 129 1 244 1 6 2 306 1 308 1 307 3 112 1 170 1 42 1 228 1 339 1 118 3 312 1 212 1 316 1 215 1 121 1 183 1 205 1 237 1 
206 1 349 1 55 1 207 2 2 1 34 1 240 1 57 1 164 1 129 1 244 1 6 2 308 1 307 2 112 1 42 1 228 1 339 1 118 2 312 1 212 1 215 1 121 1 183 1 237 1 
170 1 173 1 55 2 253 1 42 2 2 1 125 1 118 1 240 2 45 1 312 1 48 1 129 1 212 1 133 1 305 1 377 1 121 2 307 1 308 1 204 1 309 1 205 1 
206 1 170 1 55 1 228 1 42 1 2 1 125 1 118 1 34 1 368 1 312 1 240 1 57 1 223 1 129 1 244 1 6 2 212 1 316 1 215 1 306 1 121 1 307 1 308 1 112 1 237 1 
142 1 
156 2 238 1 323 1 159 2 274 6 2 1 242 1 329 2 10 1 245 1 331 1 334 1 14 1 337 1 173 1 253 1 175 1 210 2 287 1 212 2 341 2 258 1 292 1 122 2 184 2 124 1 79 1 82 2 353 5 222 1 299 1 301 1 129 1 131 5 190 1 132 2 191 2 35 1 305 1 362 1 308 2 88 2 225 1 45 2 312 2 149 2 314 1 200 1 315 3 52 1 99 1 53 4 377 1 154 1 102 1 
238 1 323 1 175 1 274 2 353 3 287 1 313 1 131 3 190 1 314 1 341 1 200 1 258 1 315 1 52 1 53 2 99 1 292 1 331 1 154 1 102 1 14 1 
238 1 184 1 323 1 175 1 274 1 353 3 287 1 313 1 131 3 190 1 314 1 200 1 258 1 315 1 52 1 53 3 99 1 292 1 331 1 362 1 154 1 102 1 14 1 122 1 
238 1 184 1 323 1 274 2 353 3 190 1 131 3 331 1 362 1 14 1 88 1 175 1 287 1 313 1 314 1 341 1 258 1 200 1 315 1 52 1 99 1 53 3 292 1 154 1 102 1 122 1 
156 1 238 1 184 5 323 1 79 1 159 2 33 1 274 7 82 2 222 1 353 5 190 1 131 5 132 1 191 2 329 2 139 1 10 1 245 1 331 1 362 5 334 1 14 1 225 1 88 4 144 1 267 1 175 1 340 1 287 1 149 2 313 1 314 1 341 4 258 1 200 1 315 3 52 1 99 1 53 6 292 1 154 1 102 1 122 4 
238 1 156 1 323 1 159 2 274 4 329 2 10 1 331 1 245 1 334 1 14 1 175 1 287 1 210 2 341 2 258 1 292 1 122 2 184 2 124 1 79 1 353 4 222 1 82 2 131 4 190 1 132 1 191 2 362 1 225 1 88 2 149 2 314 1 200 1 315 2 52 1 53 4 99 1 154 1 102 1 
156 1 238 1 184 1 323 1 79 1 159 2 274 4 33 1 82 2 353 4 222 1 190 1 131 4 132 1 191 2 329 2 10 1 245 1 331 1 362 1 334 1 14 1 88 2 225 1 144 1 175 1 340 1 287 1 149 2 314 1 341 2 258 1 200 1 315 2 52 1 99 1 53 4 292 1 154 1 102 1 122 2 
156 1 238 1 184 1 323 1 79 1 159 2 274 4 33 1 82 2 353 4 222 1 190 1 131 4 132 1 191 2 329 2 10 1 245 1 331 1 362 1 334 1 14 1 88 2 225 1 144 1 175 1 340 1 287 1 149 2 314 1 341 2 258 1 200 1 315 2 52 1 99 1 53 4 292 1 154 1 102 1 122 2 
156 1 238 1 184 1 323 1 274 4 82 2 353 4 222 1 190 1 131 4 132 1 191 2 134 2 165 2 10 1 245 1 331 1 282 1 362 1 334 1 247 1 14 1 88 2 225 1 144 1 175 1 210 2 287 1 147 1 314 1 341 2 258 1 200 1 315 2 52 1 99 1 53 4 292 1 154 1 102 1 122 2 
156 1 238 1 184 1 323 1 79 1 159 2 274 5 33 1 82 2 222 1 353 4 190 1 131 4 132 1 191 2 329 2 139 1 10 1 245 1 331 1 362 1 334 1 14 1 225 1 88 3 144 1 175 1 340 1 287 1 149 2 314 1 341 3 258 1 200 1 315 2 52 1 99 1 53 5 292 1 154 1 102 1 122 3 
156 1 238 1 184 1 323 1 79 1 159 2 274 5 33 1 82 2 222 1 353 4 190 1 131 4 132 1 191 2 329 2 139 1 10 1 245 1 331 1 362 1 334 1 14 1 225 1 88 3 144 1 175 1 340 1 287 1 149 2 314 1 341 3 258 1 200 1 315 2 52 1 99 1 53 5 292 1 154 1 102 1 122 3 
156 1 238 1 184 1 124 1 323 1 274 4 82 2 222 1 353 4 190 1 131 4 132 1 191 2 134 2 165 2 10 1 245 1 331 1 362 1 334 1 14 1 88 2 225 1 175 1 210 2 287 1 147 1 314 1 341 2 258 1 200 1 315 2 52 1 99 1 53 4 292 1 154 1 102 1 122 2 
251 1 90 1 115 1 157 1 69 1 352 1 365 1 176 2 83 1 127 1 268 1 47 2 302 2 181 1 100 1 167 1 30 1 168 1 
251 1 90 1 115 1 89 1 69 1 83 1 127 1 268 1 47 2 229 1 302 2 87 1 280 2 100 1 167 1 235 1 30 1 168 1 
157 1 352 1 127 1 83 2 302 4 87 1 280 2 167 1 168 2 251 2 115 1 90 1 89 1 69 1 176 2 268 2 47 2 229 1 119 1 100 1 181 1 30 1 
251 1 90 1 115 1 157 1 352 1 365 1 176 2 83 1 188 1 127 1 268 1 47 2 302 2 181 1 100 1 167 1 30 1 168 1 
251 1 90 1 115 1 89 1 83 1 188 1 127 1 268 1 47 2 229 1 302 2 87 1 280 2 100 1 167 1 235 1 30 1 168 1 
157 1 352 1 127 1 188 1 83 2 302 4 87 1 280 2 167 1 168 2 251 2 115 1 90 1 89 1 176 2 268 2 47 2 229 1 119 1 100 1 181 1 30 1 
251 2 89 1 90 1 115 1 157 1 352 1 176 2 83 2 127 1 268 2 229 1 47 2 302 4 119 1 87 1 280 2 181 1 100 1 167 1 30 1 168 2 
2 1 127 1 129 1 302 2 359 1 328 1 280 1 331 1 167 1 140 1 308 1 17 1 90 1 115 1 173 1 253 1 176 1 312 1 45 1 47 2 230 1 314 1 370 1 212 1 372 1 100 1 76 1 30 1 
123 1 2 1 127 1 129 1 302 2 359 1 280 1 331 1 167 1 140 1 308 1 17 1 90 1 115 1 173 1 253 1 176 1 312 1 45 1 47 2 314 1 370 1 212 1 50 1 100 1 76 1 54 1 30 1 
157 1 352 1 127 1 83 2 302 4 87 1 280 2 167 1 168 2 251 2 115 1 90 1 89 1 176 2 268 2 47 2 229 1 119 1 100 1 181 1 318 1 30 1 
157 1 352 1 2 1 83 2 127 1 129 1 302 4 359 1 328 1 87 1 280 2 331 1 167 1 308 1 168 2 251 2 89 1 90 1 115 1 173 1 253 1 176 2 312 1 268 2 229 1 47 2 230 1 314 1 370 1 212 1 119 1 371 1 372 1 181 1 100 1 30 1 261 1 
32 1 157 1 352 1 324 1 83 1 127 1 302 3 280 1 208 1 167 1 331 1 168 1 251 1 89 1 115 1 90 1 172 1 176 2 268 1 229 1 47 2 314 1 198 1 119 1 258 1 181 1 100 1 318 1 30 1 
251 1 89 1 90 1 115 1 69 1 352 1 176 3 83 2 127 1 298 1 268 1 47 2 302 6 87 2 280 3 291 1 100 1 76 2 167 1 64 1 345 1 379 1 246 1 30 1 381 1 168 1 
157 2 352 2 354 1 83 2 127 2 302 14 87 1 280 6 140 1 167 2 16 3 168 4 40 1 251 11 17 1 115 2 90 2 89 1 117 1 22 1 195 3 176 8 268 11 47 4 229 1 269 1 119 2 181 1 100 1 76 1 101 1 318 1 30 2 
2 1 324 1 127 1 129 1 302 2 359 1 328 1 280 1 330 1 208 1 167 1 331 2 140 1 308 1 168 1 67 1 17 1 90 1 115 1 173 1 253 1 176 1 312 1 45 1 47 2 230 1 314 2 290 1 370 1 212 1 258 1 270 1 100 1 180 1 76 1 318 1 28 1 30 1 
157 2 324 1 2 2 328 2 280 10 208 1 331 3 167 3 64 1 246 1 112 1 168 7 251 7 17 1 252 1 115 3 173 2 253 2 176 10 70 1 212 3 119 2 258 1 213 2 291 1 180 1 181 4 76 2 28 1 30 3 261 2 352 3 221 1 298 1 127 3 83 8 129 2 302 20 359 2 87 4 140 1 308 3 226 2 89 3 90 3 312 3 45 1 268 7 47 6 229 2 314 3 230 2 370 2 372 2 201 2 100 3 318 1 379 1 381 1 
103 1 162 1 160 1 324 1 2 2 127 2 188 1 129 2 302 2 280 1 305 1 63 1 208 1 331 1 167 2 140 1 65 1 308 8 112 1 39 1 17 1 115 2 90 2 173 3 69 1 253 2 176 1 312 7 45 2 47 4 94 2 314 1 212 8 371 1 258 1 100 2 377 1 28 1 30 2 
32 1 157 1 352 1 324 1 83 1 127 1 302 3 87 1 280 2 208 1 167 1 331 1 168 1 251 1 115 1 90 1 89 1 172 1 176 1 268 1 47 2 49 1 229 1 314 1 119 1 258 1 100 1 318 1 30 1 
157 4 60 1 110 1 280 21 167 3 64 1 246 1 15 1 16 4 115 3 22 1 117 3 176 20 119 4 291 1 181 4 217 1 346 2 295 1 352 5 126 1 83 8 127 3 298 1 357 1 302 41 358 1 87 4 136 1 89 5 90 3 195 3 366 1 367 1 229 4 47 6 150 4 232 1 51 1 378 1 319 1 379 1 381 1 
157 4 352 5 126 1 298 1 127 4 83 7 357 1 60 1 358 1 302 38 110 1 87 4 136 1 280 18 167 4 64 1 246 1 15 1 16 4 115 4 90 4 89 4 117 3 22 1 366 2 195 3 176 20 367 1 47 8 229 3 150 4 232 1 119 4 51 1 291 1 181 3 378 1 379 1 319 1 217 1 381 1 295 1 346 2 
157 7 352 8 126 1 298 1 127 2 83 14 357 1 60 1 302 52 110 1 87 7 136 1 280 25 167 2 64 1 246 1 15 1 16 4 40 2 115 2 90 2 89 8 117 2 22 2 366 1 195 4 176 27 367 1 47 4 229 7 150 4 232 1 119 7 51 1 291 1 181 7 379 1 319 1 217 1 381 1 295 1 346 1 
157 3 352 3 127 2 83 6 60 2 358 1 302 19 110 1 87 3 136 1 280 10 167 2 16 2 115 2 90 2 89 3 117 1 22 1 195 1 176 9 367 1 47 4 229 3 177 1 150 2 232 1 119 3 181 3 217 1 346 1 
157 3 352 3 126 1 83 4 127 3 357 1 60 1 302 26 110 1 87 2 280 12 136 1 167 3 15 1 16 2 89 2 115 3 90 3 117 2 366 2 176 14 195 2 367 2 47 6 229 2 150 4 232 1 119 3 51 1 181 2 319 1 217 1 295 1 346 2 
184 1 19 1 227 1 187 1 353 1 355 1 300 1 211 1 189 1 326 1 85 1 197 1 131 1 108 1 135 1 9 2 75 1 182 1 
184 1 19 1 227 1 187 1 353 1 355 1 300 1 211 1 189 1 326 1 85 1 197 1 131 1 108 1 135 1 9 2 75 1 182 1 
184 1 19 1 227 1 187 1 353 1 355 1 300 1 211 1 189 1 326 1 85 1 197 1 131 1 108 1 135 1 9 2 75 1 182 1 
277 1 203 1 321 1 
277 1 203 1 321 1 
224 1 44 1 
224 1 277 1 44 1 
347 1 255 1 
219 1 347 1 324 2 353 1 355 1 189 1 326 1 131 1 108 1 135 1 137 1 9 1 208 2 331 2 361 1 37 1 192 1 169 1 227 1 211 1 314 2 255 1 98 1 258 2 76 1 322 1 182 1 
68 1 135 1 227 1 75 1 187 1 300 1 189 1 211 1 326 1 182 1 
219 1 37 1 
185 1 348 1 135 1 227 1 189 1 211 1 326 1 130 1 182 1 
203 1 321 1 
224 1 277 1 44 1 
2 1 127 1 129 1 302 2 107 1 304 1 280 1 138 1 63 1 331 2 167 1 140 1 308 2 284 1 38 1 39 1 17 1 90 1 115 1 173 1 253 1 176 1 312 2 47 2 94 2 314 2 212 2 258 2 100 1 318 1 30 1 
350 1 228 1 2 1 34 1 312 2 240 1 57 1 129 1 244 1 6 2 212 2 371 1 215 1 306 1 308 2 29 1 112 1 237 1 143 1 
228 1 2 1 34 1 312 1 240 1 57 1 129 1 244 1 6 2 212 1 214 1 215 1 306 1 308 1 29 1 112 1 237 1 
173 1 253 1 2 1 45 1 312 1 240 1 48 1 129 1 212 1 305 1 333 1 377 1 308 1 143 1 
350 1 228 1 2 1 34 1 312 1 240 1 57 1 129 1 244 1 6 2 212 1 215 1 306 1 308 1 29 1 112 1 237 1 143 1 
285 1 
156 1 184 1 342 1 345 1 362 1 196 1 132 1 
156 1 184 2 79 1 159 1 274 1 222 1 353 1 131 1 132 1 329 1 10 1 245 1 362 1 225 1 210 1 149 1 315 1 
156 8 157 2 239 2 325 2 2 4 274 5 275 6 276 2 163 1 243 2 61 6 8 1 329 6 62 2 10 4 245 4 336 2 173 10 253 3 254 2 287 2 210 12 212 3 119 2 342 1 184 8 80 2 352 2 222 4 353 5 84 2 301 2 129 3 131 5 132 9 359 3 35 1 362 2 308 3 225 4 89 2 91 1 92 1 45 1 312 3 196 1 229 2 371 1 315 3 201 2 155 1 273 3 236 2 320 1 
156 5 184 5 81 1 157 2 352 2 276 1 274 1 275 5 353 1 222 2 126 1 301 1 131 1 357 1 132 8 35 1 61 5 329 3 62 2 10 2 245 2 362 2 15 1 16 1 225 2 89 2 117 1 195 1 210 6 229 2 119 2 51 1 315 1 152 1 295 1 
156 2 352 2 276 1 324 1 222 1 353 1 298 1 131 1 132 2 62 2 10 1 208 1 331 1 245 1 246 1 225 1 250 1 89 1 172 1 340 1 96 1 314 1 24 1 258 1 292 1 272 1 379 1 262 1 
156 1 184 1 222 1 196 1 132 1 342 1 10 1 245 1 362 1 225 1 
156 5 184 5 89 2 157 2 352 2 276 1 275 5 210 10 229 2 132 5 119 2 61 5 201 1 329 5 62 2 
184 1 315 1 274 1 353 1 362 1 131 1 
156 2 2 1 274 4 222 1 353 3 299 1 301 2 163 2 129 1 131 3 132 2 35 2 305 1 10 2 245 2 308 4 225 2 18 1 173 1 337 1 91 1 253 1 286 1 312 4 45 2 212 4 315 2 153 1 377 1 
324 2 2 1 127 1 129 1 302 1 4 1 359 1 328 1 280 1 208 2 140 1 167 1 331 3 308 1 250 1 115 1 90 1 172 2 173 1 253 1 312 1 45 1 47 2 314 3 230 1 212 1 370 1 258 2 372 1 100 1 76 1 30 1 
156 2 184 4 275 2 222 1 210 4 301 1 132 1 35 1 61 2 329 2 10 1 245 1 64 1 362 2 225 1 
171 1 135 1 326 1 
135 1 260 1 326 1 
135 1 260 1 326 1 
135 1 260 1 326 1 
135 1 326 1 
227 1 189 1 
171 1 135 1 326 1 
171 1 135 1 326 1 
186 1 347 1 135 1 75 1 326 1 
352 1 127 1 298 1 83 2 357 1 302 8 87 2 280 4 136 1 167 1 64 1 246 1 16 1 89 1 115 1 90 1 117 1 195 1 176 4 47 2 291 1 379 1 381 1 
157 1 352 2 298 1 127 2 83 3 357 1 302 11 87 2 280 5 136 1 167 2 64 1 246 1 16 2 89 1 115 2 90 2 310 1 117 1 22 1 195 1 176 6 47 4 119 1 291 1 181 1 379 1 381 1 
157 2 352 3 126 1 298 1 127 3 83 4 357 1 302 19 87 3 280 10 136 1 167 3 64 1 246 1 15 1 16 1 310 1 115 3 90 3 89 3 117 1 195 1 176 9 366 1 47 6 229 2 119 2 51 1 291 1 181 1 379 1 381 1 295 1 
157 2 352 3 126 1 298 1 127 3 83 5 357 1 302 17 87 3 280 7 136 1 167 3 64 1 246 1 15 1 16 1 310 1 115 3 90 3 89 2 117 1 366 1 195 1 176 10 47 6 229 1 119 2 51 1 291 1 181 2 379 1 381 1 295 1 
352 1 127 1 298 1 83 2 357 1 302 8 87 2 280 4 136 1 167 1 64 1 246 1 16 1 89 1 115 1 90 1 117 1 195 1 176 4 47 2 291 1 379 1 381 1 
157 2 352 2 126 1 127 1 83 2 357 1 302 12 87 1 280 6 136 1 167 1 15 1 16 1 115 1 90 1 89 2 117 1 195 1 176 6 47 2 229 2 119 2 51 1 181 1 295 1 
157 2 352 3 126 1 298 1 127 4 83 5 357 1 302 18 87 3 280 8 136 1 167 4 64 1 246 1 15 1 16 1 310 1 115 4 90 4 89 2 117 1 195 1 176 10 366 2 47 8 229 1 119 2 51 1 291 1 181 2 379 1 381 1 295 1 
157 3 352 3 126 1 127 4 83 6 357 1 302 16 358 1 87 3 280 7 136 1 167 4 15 1 16 1 115 4 90 4 89 2 117 1 195 1 176 9 366 2 47 8 229 2 119 3 51 1 181 3 295 1 
89 1 352 1 176 3 298 3 83 6 302 7 87 3 280 4 291 2 181 3 246 3 379 1 381 1 
157 2 352 3 126 1 298 1 127 4 83 4 357 1 302 18 358 1 87 3 280 8 136 1 167 4 64 1 246 1 15 1 16 1 115 4 90 4 89 2 117 1 195 1 176 10 366 2 47 8 229 1 119 2 51 1 291 1 181 1 379 1 381 1 295 1 
89 1 90 2 115 2 352 1 176 4 366 1 83 3 127 2 298 1 47 4 302 8 87 2 280 4 291 1 181 1 167 2 64 1 379 1 246 1 381 1 
89 1 352 1 176 3 298 1 83 2 302 6 87 2 280 3 291 1 64 1 345 1 246 1 379 1 381 1 
89 1 310 1 90 1 115 1 157 1 352 1 176 2 83 2 127 1 229 1 47 2 302 4 119 1 87 1 280 2 181 1 167 1 
89 1 157 1 352 1 117 1 22 1 195 1 176 3 83 2 229 1 302 7 119 1 87 1 280 4 181 1 16 2 
157 2 352 3 298 2 83 9 127 2 302 23 87 5 280 12 167 2 64 1 246 2 16 2 40 1 89 3 90 2 115 2 20 1 22 1 176 11 195 2 366 2 229 2 47 4 269 1 119 2 291 1 181 4 379 1 381 1 
280 1 16 1 302 1 
176 1 195 1 302 1 
115 1 90 1 310 1 89 1 157 1 352 1 176 3 127 1 83 3 47 2 229 1 302 6 119 1 87 2 201 1 280 3 181 1 167 1 
157 2 352 2 126 1 127 1 83 2 357 1 302 12 87 1 280 6 136 1 167 1 15 1 16 1 115 1 90 1 89 2 117 1 195 1 176 6 47 2 229 2 119 2 51 1 181 1 295 1 
89 1 352 1 176 3 298 1 83 2 302 6 87 1 280 3 181 1 379 1 246 1 
90 1 115 1 20 1 176 1 366 1 83 2 298 1 127 1 47 2 302 3 87 1 291 1 280 2 181 1 167 1 246 1 381 1 
115 1 90 1 89 2 352 2 176 5 127 1 298 2 83 5 47 2 302 10 87 3 136 1 280 5 181 2 167 1 272 1 246 2 379 1 
90 1 115 1 157 1 352 1 176 2 127 1 83 1 47 2 302 2 136 1 181 1 167 1 
89 1 90 1 115 1 157 1 352 1 176 2 83 2 127 1 229 1 47 2 302 4 119 1 87 1 280 2 136 1 181 1 167 1 
90 3 115 3 20 1 366 1 176 1 127 3 298 1 83 2 47 6 358 1 302 3 87 1 280 2 136 1 181 1 167 3 246 1 
157 3 352 5 298 3 127 5 83 12 358 1 302 34 87 7 360 1 280 18 136 1 167 5 64 1 246 3 16 4 310 1 115 5 90 5 89 5 20 1 117 1 22 1 366 2 195 3 176 16 47 10 229 3 119 3 291 1 344 1 181 5 379 2 381 1 294 1 
258 1 323 1 72 1 343 1 76 1 331 1 314 1 
78 1 199 1 311 1 351 1 343 1 327 1 
212 1 173 1 253 1 305 1 2 1 345 1 377 1 312 1 45 1 308 1 129 1 
173 1 253 1 2 1 324 1 45 1 312 1 129 1 314 2 359 1 370 1 212 1 258 1 328 1 208 1 76 1 331 2 28 1 308 1 
324 1 2 1 84 1 129 1 163 1 359 2 328 1 208 2 331 2 308 1 173 3 253 2 312 1 314 2 212 1 370 1 258 2 52 1 292 1 76 1 154 1 28 1 236 1 
123 1 104 1 324 1 2 1 84 1 129 1 163 1 359 2 208 2 331 2 308 2 173 3 253 2 312 2 314 2 212 2 370 1 258 2 52 1 292 1 76 1 154 1 28 1 236 1 
184 1 336 1 173 4 253 1 104 1 2 1 274 1 353 2 45 1 287 1 84 1 312 3 163 1 129 1 131 2 359 1 212 3 151 1 332 1 362 1 308 3 236 1 273 1 
184 1 336 1 80 1 173 4 253 1 104 1 2 1 274 1 353 2 45 1 287 1 84 1 312 3 163 1 129 1 131 2 359 1 212 3 362 1 308 3 236 1 273 1 
212 1 2 1 312 1 308 1 65 1 129 1 
103 1 173 3 253 2 162 1 160 1 2 3 45 2 312 6 94 1 129 2 231 1 212 7 359 1 371 1 7 1 271 1 65 1 308 7 112 1 39 1 320 1 
352 1 2 1 324 1 83 2 298 1 127 2 129 1 302 6 359 1 107 1 328 1 87 2 280 3 208 1 167 2 331 2 64 1 246 1 308 1 168 1 251 1 89 1 90 2 115 2 173 1 253 1 176 3 312 1 268 1 47 4 314 2 230 1 370 1 212 1 371 1 258 1 213 1 372 1 291 1 100 2 76 2 318 1 379 1 28 1 381 1 30 2 261 1 
156 1 184 1 80 1 239 1 325 1 274 2 222 2 353 3 131 3 132 1 10 2 245 2 362 1 308 1 225 2 169 1 336 1 91 1 173 2 254 1 312 1 45 1 287 1 196 1 212 1 342 1 315 1 273 1 
336 1 173 2 253 1 2 2 312 2 129 1 212 2 359 1 371 1 155 1 65 1 308 2 320 1 
173 1 253 1 104 1 2 1 45 1 312 4 129 1 212 4 371 1 305 1 377 1 283 1 308 4 
220 1 173 1 253 1 2 2 70 1 312 2 163 1 129 1 212 2 278 1 359 1 7 1 271 1 308 2 
6 1 212 1 215 1 2 1 34 1 312 1 45 1 308 1 129 1 237 1 
212 2 371 1 173 1 304 1 253 1 2 1 312 2 308 2 129 1 39 1 112 1 
173 3 103 1 253 2 162 1 2 2 45 1 312 4 163 1 129 2 212 5 371 1 305 1 377 1 283 1 308 5 39 1 
173 3 103 1 253 2 2 2 45 1 312 4 163 1 129 2 212 5 371 1 259 1 305 1 377 1 283 1 308 5 39 1 
123 1 173 1 253 1 2 1 324 1 45 1 312 1 129 1 314 2 359 1 370 1 212 1 258 1 208 1 76 1 331 2 28 1 308 1 
173 1 253 1 2 2 312 1 163 1 129 1 231 1 212 1 359 1 7 1 271 1 308 1 320 1 
193 1 314 1 5 1 258 1 138 1 331 1 111 1 284 1 38 1 
233 1 43 1 5 1 
193 1 76 1 93 1 111 1 5 1 
169 1 238 1 184 1 193 2 353 2 43 1 287 1 93 2 288 1 131 2 5 1 120 1 233 1 52 1 292 1 76 1 362 1 154 1 111 2 
339 1 345 1 164 1 183 1 
170 1 339 1 118 1 125 1 307 1 164 1 183 1 
42 1 121 1 307 1 
170 1 339 1 375 1 118 3 125 1 264 1 141 2 368 1 307 3 148 1 164 1 183 1 
170 1 145 1 207 1 339 1 118 2 125 1 307 2 164 1 183 1 
6 1 25 1 170 1 215 1 118 1 125 1 368 1 57 1 307 1 164 1 369 1 
170 1 118 1 125 1 368 1 307 1 164 1 183 1 
170 1 339 1 118 1 125 1 368 1 307 1 183 2 
256 1 257 1 170 2 118 2 125 2 146 1 368 1 307 2 164 1 183 1 
25 1 335 1 170 1 166 1 207 2 339 1 118 3 125 1 368 1 307 3 164 2 289 1 183 1 
170 1 207 1 339 1 125 1 118 2 368 1 57 1 164 1 244 1 6 2 215 1 376 1 307 2 183 1 237 1 
170 2 145 1 207 2 339 1 125 2 118 4 368 1 164 2 97 1 25 1 166 1 307 4 183 1 
170 1 339 1 118 1 125 1 368 1 307 1 164 1 183 1 
170 1 207 2 339 2 118 4 125 1 148 1 164 3 106 1 25 1 166 1 375 1 141 1 307 4 183 2 
170 1 207 1 339 1 23 1 125 1 118 2 368 1 356 1 164 1 307 2 183 1 114 1 
170 1 339 1 375 2 118 3 125 1 141 2 368 1 46 1 307 3 148 1 164 1 183 1 
109 2 27 1 71 1 164 2 
170 1 178 1 118 1 125 1 368 1 307 1 
170 1 207 1 339 1 118 2 125 1 368 1 307 2 164 1 289 1 183 1 
296 1 
170 1 339 1 118 1 125 1 368 1 307 1 164 1 183 1 
170 1 207 1 339 1 118 3 125 1 141 1 368 1 307 3 164 1 289 1 183 1 
25 1 166 1 164 1 106 1 
164 1 183 1 

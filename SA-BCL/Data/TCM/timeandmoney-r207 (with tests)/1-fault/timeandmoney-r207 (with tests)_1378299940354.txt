#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 3 166 1 167 1 38 1 283 1 104 2 134 3 176 2 327 1 316 1 371 1 225 1 25 2 
242 1 117 1 64 9 65 1 166 2 167 1 38 3 143 1 326 1 349 2 327 1 371 6 225 1 226 2 25 2 127 1 229 1 283 4 104 2 160 2 161 1 134 9 176 5 313 1 314 1 316 1 208 1 238 2 
242 1 117 1 64 9 65 1 166 2 167 1 38 3 143 1 326 1 349 2 327 1 371 6 225 1 226 2 25 2 127 1 229 1 283 4 104 2 160 2 161 1 134 9 176 5 313 1 314 1 316 1 208 1 238 2 
242 1 117 1 64 10 65 1 166 2 167 1 38 4 143 1 326 1 349 2 327 1 371 7 225 1 226 2 25 2 127 1 229 1 283 5 104 2 160 2 161 1 134 10 176 6 313 1 314 1 316 1 208 1 238 2 
242 1 117 1 64 7 65 1 166 2 167 1 38 2 143 1 326 1 349 1 327 1 371 4 225 1 226 2 25 2 127 1 283 3 104 2 160 2 161 1 134 7 176 4 313 1 314 1 316 1 208 1 238 2 
64 4 229 1 38 1 283 2 104 1 160 1 134 4 176 3 349 2 327 1 314 1 316 1 208 1 371 3 238 1 225 1 25 1 226 1 
64 2 317 1 309 1 166 1 143 1 104 1 160 1 176 1 134 2 326 1 312 1 327 1 316 1 225 1 238 1 25 1 
185 1 64 9 65 1 166 1 20 1 38 3 167 1 349 2 327 1 371 7 225 1 25 2 226 1 127 1 229 1 283 4 104 2 160 1 134 9 176 5 314 1 316 1 208 1 238 1 
185 1 64 9 65 1 166 1 20 1 38 3 167 1 349 2 327 1 371 7 225 1 25 2 226 1 127 1 229 1 283 4 104 2 160 1 134 9 176 5 314 1 316 1 208 1 238 1 
342 1 241 1 305 1 345 1 155 1 219 1 175 1 249 1 323 1 204 1 135 1 107 1 222 1 126 1 
256 1 
158 1 256 1 323 2 345 1 273 1 379 1 219 2 381 1 
256 1 62 1 345 2 154 1 269 2 27 1 100 1 219 5 246 1 158 1 323 5 377 2 205 1 273 2 380 1 381 1 369 2 125 1 292 1 
256 1 206 1 381 1 
256 1 118 2 53 1 
342 2 249 2 90 1 135 2 107 2 175 1 222 2 126 2 
342 2 240 1 216 1 364 2 365 1 90 1 346 1 295 1 121 1 249 3 71 1 325 1 193 1 253 1 222 3 126 2 370 2 172 1 8 1 198 1 374 1 128 1 257 2 175 1 202 1 29 1 31 1 85 1 57 1 135 2 107 2 16 1 338 2 112 1 341 2 290 1 113 1 
342 1 249 1 241 1 204 1 135 1 107 1 155 1 175 1 222 1 126 1 
354 1 256 1 9 1 155 1 219 1 3 1 249 1 323 1 32 1 135 1 44 1 381 1 222 1 276 1 
342 1 256 1 9 1 155 1 219 2 3 1 249 1 323 2 32 1 135 1 107 1 381 1 222 1 126 1 276 1 
84 1 323 1 345 1 273 1 219 1 
158 1 256 1 323 2 345 1 273 1 162 1 219 2 381 1 
323 1 273 1 219 1 
342 1 267 1 90 2 230 1 249 2 135 2 107 1 222 2 126 1 
94 1 45 1 331 1 
364 1 374 1 365 1 90 1 128 1 202 1 29 1 21 1 121 1 249 1 325 1 193 1 253 1 222 1 338 1 370 1 
342 1 364 1 374 1 365 1 128 1 174 1 348 1 202 1 29 1 121 1 249 2 325 1 135 1 107 1 193 1 253 1 222 2 338 1 331 1 370 1 
90 1 206 1 
342 3 249 3 90 1 135 3 107 3 348 1 222 3 126 1 
342 1 249 1 241 1 135 1 107 1 155 1 222 1 
342 1 267 1 249 1 135 1 107 1 155 1 222 1 126 1 230 1 
240 1 342 3 364 1 365 1 90 1 219 1 348 1 295 1 121 1 3 1 249 4 323 1 325 1 41 1 193 1 253 1 222 4 126 2 370 1 276 1 172 1 8 1 198 1 374 1 9 1 128 1 174 1 257 1 155 1 175 1 202 1 29 1 230 1 31 1 159 1 57 1 32 1 135 3 107 3 16 1 338 1 341 2 290 1 113 1 
354 1 342 1 249 2 293 1 90 1 135 2 107 1 348 1 222 2 
342 3 256 1 9 1 174 1 219 1 155 1 348 2 230 1 3 1 249 3 159 1 323 1 105 1 32 1 135 3 107 3 222 3 126 1 276 1 
342 2 348 1 230 1 249 2 94 1 135 2 107 2 222 2 126 1 331 1 
364 1 374 1 365 1 90 1 128 1 202 1 29 1 121 1 249 1 325 1 193 1 253 1 222 1 338 1 370 1 
364 1 365 1 90 1 128 1 202 1 120 1 29 1 121 1 249 1 325 1 193 1 222 1 338 1 17 1 370 1 
216 2 63 1 295 1 122 1 94 2 147 1 45 2 191 1 329 1 331 2 171 1 8 2 80 1 198 1 279 1 101 1 257 4 201 1 31 1 57 1 340 1 341 2 290 1 113 1 
342 1 249 1 9 1 135 1 107 1 155 1 222 1 321 1 
354 1 342 4 293 1 90 1 174 1 348 2 230 1 249 5 135 5 107 4 207 1 222 5 126 1 214 1 
342 2 249 2 241 1 135 2 107 2 155 1 222 2 321 1 
144 1 251 1 60 1 
10 1 144 2 28 1 358 1 60 2 23 1 
144 1 60 1 
144 1 60 1 
28 1 23 1 
28 1 23 1 
28 1 23 1 
144 1 60 1 333 1 
144 1 60 1 333 1 
144 1 60 1 333 1 
59 1 144 1 60 1 
59 1 144 1 60 1 
59 1 144 1 60 1 
215 3 164 1 277 1 256 1 183 2 184 1 153 1 319 1 219 2 358 1 359 1 323 2 250 1 144 2 378 2 15 2 234 2 60 2 98 2 
342 2 215 1 164 1 183 1 90 1 219 1 2 1 249 2 323 1 144 1 251 1 74 1 73 1 222 2 6 1 334 1 51 1 103 1 135 2 107 2 378 1 15 1 234 1 60 1 
160 2 309 1 200 2 196 1 226 1 
160 1 238 1 226 1 
160 1 309 1 238 1 
160 3 309 1 200 1 196 1 332 1 226 2 
160 2 168 1 309 1 200 1 196 1 226 1 
345 4 269 1 118 3 219 5 2 1 246 1 4 1 323 5 147 1 273 1 75 2 329 1 369 1 330 1 125 3 171 1 152 1 256 2 154 2 334 1 51 1 53 1 158 1 231 1 58 2 377 1 14 1 289 1 381 1 110 1 340 1 363 2 
343 1 89 1 345 7 269 2 118 9 219 9 246 1 4 1 323 9 147 3 273 6 329 3 369 2 330 2 125 8 171 3 304 1 152 3 256 5 154 6 334 4 53 3 157 5 84 5 158 1 203 1 376 1 58 6 377 2 264 1 381 1 110 2 340 3 363 6 292 1 
345 2 269 1 118 4 219 3 323 3 147 1 75 1 329 1 369 1 330 1 125 3 171 1 152 1 256 3 154 2 334 1 53 2 58 2 377 1 14 1 381 1 289 1 110 1 340 1 363 2 292 1 
89 1 345 3 269 1 118 7 219 4 323 4 147 2 75 2 329 2 369 1 330 1 125 5 171 2 304 1 152 2 256 4 154 4 334 2 53 3 203 1 58 4 377 1 14 1 381 1 289 1 110 1 340 2 363 4 292 1 
287 1 
372 1 206 1 29 1 
360 1 29 1 
202 1 29 1 
372 2 128 1 192 1 202 1 29 3 54 1 
128 1 202 1 29 1 
260 1 29 1 
8 3 80 2 216 4 61 1 63 3 165 1 217 1 257 7 367 1 13 1 123 1 299 1 146 1 329 1 111 1 340 1 236 2 224 1 
61 1 216 16 63 10 217 2 1 1 320 1 295 1 367 5 123 2 299 2 146 2 147 3 72 1 329 4 224 1 171 3 8 15 152 3 80 5 198 1 81 1 257 31 258 1 131 4 375 1 13 1 57 1 177 1 163 3 111 1 341 2 236 3 340 4 290 1 
216 5 63 4 217 1 1 1 295 2 367 1 123 1 299 1 146 1 329 1 149 1 224 1 8 4 80 3 306 1 198 2 257 9 57 2 13 1 111 1 340 1 341 4 236 2 290 2 
8 3 80 2 216 4 61 1 63 3 217 1 257 7 367 1 13 1 123 1 299 1 146 1 329 1 111 1 340 1 236 2 224 1 
8 3 80 2 216 4 61 1 63 3 217 1 257 7 367 1 13 1 123 1 299 1 146 1 329 1 111 1 340 1 236 2 224 1 
364 1 365 1 35 2 64 1 129 1 166 2 142 2 202 1 29 1 104 1 40 1 361 1 134 1 325 1 300 1 263 1 193 1 338 1 370 1 33 2 78 1 25 1 291 1 
364 1 35 1 64 1 166 1 142 1 347 1 325 1 301 1 193 1 370 1 225 1 332 1 226 1 25 1 308 1 309 1 104 1 160 2 134 1 262 1 136 1 338 1 237 1 362 1 238 1 33 1 
364 1 35 1 64 2 166 1 66 1 142 1 325 1 327 1 301 1 193 1 371 1 370 1 225 1 332 1 226 1 25 1 308 1 309 1 104 1 160 2 176 1 134 2 262 1 136 1 316 1 338 1 237 1 362 1 238 1 33 1 
364 1 35 1 64 3 166 1 142 1 347 1 325 1 327 1 301 1 193 1 370 1 371 2 332 1 226 1 25 1 78 1 308 1 309 1 281 1 104 1 160 2 176 1 134 3 262 1 136 1 316 1 338 1 362 1 238 1 33 1 
364 1 35 1 64 2 166 1 142 1 347 1 325 1 327 1 301 1 193 1 370 1 371 2 332 1 226 1 309 1 281 1 160 2 176 1 134 2 136 1 316 1 338 1 362 1 33 1 238 1 
178 1 
182 1 37 1 141 2 246 1 3 1 91 1 248 1 249 1 40 1 95 2 300 1 44 1 193 1 148 2 352 2 5 1 354 1 256 2 9 1 307 2 154 2 53 2 155 1 202 1 158 3 311 2 210 1 211 1 212 1 364 2 365 2 269 1 118 2 219 5 272 2 323 5 325 1 273 6 330 1 369 1 222 1 125 2 370 2 276 1 24 1 29 1 30 1 32 1 285 4 377 1 135 1 288 1 381 1 338 2 138 1 
354 1 9 1 307 1 37 1 155 1 219 3 3 1 158 1 248 1 30 1 249 1 323 3 285 2 32 1 135 1 379 1 273 2 44 1 288 1 222 1 276 1 212 1 
37 1 219 3 3 1 248 1 249 1 323 3 95 1 273 1 44 1 222 1 276 1 354 1 256 1 9 1 155 1 30 1 158 1 32 1 285 3 135 1 379 1 288 1 381 1 212 1 
37 1 219 3 3 1 248 1 249 1 323 3 95 1 44 1 273 2 222 1 276 1 354 1 256 1 9 1 307 1 155 1 158 1 30 1 32 1 285 3 135 1 311 1 379 1 288 1 381 1 212 1 
243 1 37 1 141 2 3 1 246 1 248 1 91 1 249 1 297 1 42 1 95 4 44 1 195 1 148 2 352 2 354 1 256 5 9 1 307 4 154 1 155 1 53 2 158 3 311 4 212 1 269 1 219 5 272 2 323 5 273 7 222 1 369 1 76 1 125 1 276 1 30 1 285 6 32 1 377 1 135 1 379 1 288 1 381 5 138 1 
182 1 37 1 141 2 3 1 246 1 248 1 91 1 249 1 95 2 44 1 148 2 352 2 354 1 256 2 9 1 307 2 154 1 155 1 53 2 158 2 311 2 212 1 269 1 118 2 219 4 272 2 323 4 273 4 222 1 369 1 125 1 276 1 30 1 285 4 32 1 377 1 135 1 288 1 381 1 138 1 
269 1 37 1 141 2 219 4 272 2 3 1 246 1 91 1 248 1 249 1 323 4 297 1 42 1 95 2 273 4 44 1 195 1 148 2 369 1 222 1 352 2 125 1 276 1 354 1 256 1 9 1 307 2 154 1 53 2 155 1 158 2 30 1 32 1 285 4 377 1 135 1 311 2 288 1 381 1 138 1 212 1 
269 1 37 1 141 2 219 4 272 2 3 1 246 1 91 1 248 1 249 1 323 4 297 1 42 1 95 2 273 4 44 1 195 1 148 2 369 1 222 1 352 2 125 1 276 1 354 1 256 1 9 1 307 2 154 1 53 2 155 1 158 2 30 1 32 1 285 4 377 1 135 1 311 2 288 1 381 1 138 1 212 1 
269 1 37 1 118 2 219 4 272 2 3 1 246 1 91 1 248 1 249 1 323 4 42 1 95 2 273 4 44 1 369 1 222 1 352 2 125 1 276 1 354 1 256 1 9 1 307 2 154 1 278 1 173 2 155 1 284 1 158 2 30 1 310 1 32 1 285 4 377 1 135 1 311 2 109 2 288 1 381 1 212 1 
269 1 37 1 141 2 219 4 272 2 246 1 3 1 91 1 248 1 249 1 297 1 323 4 42 1 95 3 44 1 273 5 195 1 148 2 369 1 222 1 352 2 125 1 76 1 276 1 354 1 256 1 9 1 307 3 154 1 53 2 155 1 158 2 30 1 32 1 285 5 377 1 135 1 311 3 288 1 381 1 138 1 212 1 
269 1 37 1 141 2 219 4 272 2 246 1 3 1 91 1 248 1 249 1 297 1 323 4 42 1 95 3 44 1 273 5 195 1 148 2 369 1 222 1 352 2 125 1 76 1 276 1 354 1 256 1 9 1 307 3 154 1 53 2 155 1 158 2 30 1 32 1 285 5 377 1 135 1 311 3 288 1 381 1 138 1 212 1 
182 1 37 1 3 1 246 1 248 1 91 1 249 1 95 2 44 1 352 2 354 1 256 1 9 1 307 2 154 1 155 1 158 2 311 2 109 2 212 1 269 1 118 2 219 4 272 2 323 4 273 4 222 1 369 1 125 1 276 1 278 1 173 2 30 1 285 4 32 1 377 1 135 1 288 1 381 1 
342 1 216 1 364 7 365 2 36 1 346 2 66 1 347 1 348 1 295 2 70 1 249 1 40 1 325 2 300 1 193 2 350 1 222 1 370 8 151 1 8 1 198 2 257 2 82 1 201 1 202 2 29 3 31 2 133 1 85 1 57 2 135 1 107 1 16 1 338 8 235 1 341 4 290 2 113 2 
342 1 216 1 63 1 295 1 249 1 94 1 145 1 45 1 147 1 329 1 222 1 331 1 126 1 171 1 80 1 152 1 8 2 198 1 257 3 230 1 31 1 57 1 106 1 135 1 107 1 341 2 340 1 290 1 113 1 
216 3 63 2 90 2 217 1 295 1 94 1 146 1 45 1 329 1 331 1 224 1 80 2 8 3 198 1 257 6 201 1 31 1 13 1 57 1 206 1 111 1 341 2 340 1 236 1 290 1 113 1 
216 8 63 2 90 1 295 2 68 1 367 1 94 4 43 1 145 1 45 11 147 1 274 1 329 1 331 11 171 2 80 1 8 6 152 2 198 2 257 14 81 1 131 3 83 1 31 2 85 1 57 2 177 1 16 1 163 3 341 4 340 2 290 2 113 1 
342 1 216 1 364 1 365 1 90 1 348 1 295 1 21 1 121 1 249 2 94 1 325 1 145 1 193 1 253 1 302 1 328 1 222 2 370 1 8 1 374 1 198 1 128 1 174 1 257 2 202 1 29 1 31 1 85 1 57 1 135 1 107 1 108 1 16 1 338 1 341 2 290 1 113 1 
342 1 240 2 90 2 347 1 348 1 295 3 249 3 94 7 145 1 146 1 45 7 147 2 193 2 253 2 8 10 152 2 198 3 257 20 357 1 202 2 13 1 57 3 107 1 16 1 111 1 113 3 216 10 364 3 63 8 365 1 217 1 119 2 121 2 367 4 221 2 325 2 169 1 329 3 222 3 224 1 370 3 331 7 171 2 80 4 374 2 373 2 128 2 174 1 282 1 29 2 31 3 85 1 286 2 135 1 338 3 236 1 341 6 340 3 290 3 
216 2 63 1 198 1 257 2 201 1 295 1 367 1 31 1 122 1 57 1 94 1 45 1 331 1 341 2 171 1 340 1 290 1 113 1 
80 1 8 2 63 1 198 1 257 2 101 1 201 1 295 1 31 1 57 1 94 1 45 1 147 1 329 1 331 1 341 2 290 1 113 1 
216 2 63 2 295 1 367 1 94 2 45 2 147 1 329 1 171 1 331 2 152 1 8 2 80 1 198 1 257 4 201 1 31 1 57 1 340 1 341 2 290 1 113 1 
216 2 63 1 198 1 36 1 257 2 295 1 367 1 31 1 122 1 57 1 94 1 45 1 331 1 341 2 171 1 340 1 290 1 113 1 
80 1 8 2 63 1 198 1 36 1 257 2 101 1 295 1 31 1 57 1 94 1 45 1 147 1 329 1 331 1 341 2 290 1 113 1 
216 2 63 2 36 1 295 1 367 1 94 2 45 2 147 1 329 1 171 1 331 2 152 1 8 2 80 1 198 1 257 4 31 1 57 1 340 1 341 2 290 1 113 1 
216 2 63 2 295 1 367 1 94 2 45 2 147 1 329 1 171 1 331 2 152 1 8 2 80 1 198 1 257 4 31 1 57 1 340 1 341 2 290 1 113 1 
240 1 216 1 364 1 365 1 90 1 295 1 121 1 249 1 325 1 193 1 253 1 222 1 370 1 8 1 374 1 198 1 128 1 257 2 202 1 29 1 31 1 85 1 57 1 16 1 338 1 341 2 290 1 113 1 
216 1 364 1 365 1 90 1 295 1 120 1 121 1 249 1 325 1 124 1 193 1 222 1 370 1 8 1 198 1 128 1 257 2 202 1 29 1 31 1 85 1 57 1 16 1 338 1 17 1 341 2 290 1 113 1 
216 2 63 2 295 1 367 1 94 2 145 1 45 2 147 1 329 1 171 1 331 2 152 1 8 2 80 1 198 1 257 4 31 1 57 1 340 1 341 2 290 1 113 1 
240 1 216 2 63 2 364 1 66 1 295 1 121 1 367 1 221 1 249 1 94 2 325 1 147 1 45 2 193 1 329 1 253 1 222 1 331 2 171 1 370 1 80 1 8 2 152 1 374 1 198 1 128 1 257 4 202 1 29 1 31 1 57 1 338 1 340 1 341 2 290 1 113 1 
342 1 216 2 63 1 268 1 295 1 367 1 249 1 94 1 145 1 147 1 45 1 329 1 222 1 126 1 171 1 331 1 8 1 152 1 198 1 257 3 230 1 31 1 57 1 135 1 107 1 341 2 340 1 290 1 113 1 
216 9 63 6 366 1 295 2 367 3 147 3 46 1 329 3 97 2 170 1 149 1 171 3 353 1 80 3 8 10 152 3 198 2 49 1 257 19 81 1 131 2 57 2 177 1 137 1 337 1 163 1 341 4 340 3 290 2 213 2 
216 14 63 4 116 1 1 2 244 1 366 1 295 3 367 2 147 2 329 2 223 1 97 1 170 2 149 1 171 3 303 1 353 2 80 2 8 12 152 3 198 3 49 1 199 1 257 26 131 2 336 1 57 3 177 2 137 1 163 2 341 6 340 3 290 3 213 4 
1 1 244 1 295 3 147 4 146 1 46 1 97 1 149 1 303 1 353 2 152 4 8 21 198 3 49 1 199 1 257 41 57 3 13 1 163 3 111 1 213 4 216 20 63 8 116 1 217 1 366 1 367 4 329 5 223 1 171 4 170 1 224 1 275 1 80 4 81 1 131 4 336 1 177 3 137 1 340 5 341 6 236 1 290 3 
216 20 63 7 116 1 217 1 1 2 244 1 366 1 295 4 367 3 146 1 147 3 46 1 329 4 223 1 97 1 224 1 170 1 149 1 171 4 275 1 303 1 353 2 80 4 8 18 152 4 198 4 199 1 49 1 257 38 81 1 131 4 13 1 336 1 57 4 177 3 137 1 163 3 111 1 236 1 341 8 340 5 290 4 213 4 
216 27 63 14 116 1 217 1 1 1 244 1 366 1 295 2 367 7 146 1 147 7 274 2 329 8 223 1 97 1 224 1 170 1 149 1 171 7 303 1 353 1 80 7 8 25 152 7 198 2 199 1 49 1 257 52 81 2 131 4 13 1 336 1 57 2 177 2 137 1 163 4 111 1 236 1 341 4 340 8 290 2 213 4 
255 1 277 1 183 1 184 1 144 1 378 1 15 1 234 1 358 1 60 1 
251 1 74 1 
261 1 183 1 144 1 378 1 15 1 234 1 187 1 60 1 197 1 
215 2 164 1 277 1 256 1 183 1 184 1 153 1 219 1 358 1 359 1 323 1 250 1 144 1 378 1 15 1 234 1 60 1 98 1 
215 2 164 1 277 1 256 1 183 1 184 1 153 1 219 1 358 1 359 1 323 1 250 1 144 1 378 1 15 1 234 1 60 1 98 1 
215 2 164 1 277 1 256 1 183 1 184 1 153 1 219 1 358 1 359 1 323 1 250 1 144 1 378 1 15 1 234 1 60 1 98 1 
10 1 333 1 139 1 
10 1 333 1 139 1 
59 1 39 1 
59 1 10 1 39 1 
73 1 6 1 
215 1 342 2 183 1 345 1 90 1 219 1 2 1 249 2 323 1 144 1 251 1 74 1 73 1 222 2 98 1 6 1 153 1 334 1 51 1 103 1 135 2 107 2 378 1 15 1 234 1 60 1 239 1 
333 1 139 1 
59 1 10 1 39 1 
114 1 216 1 364 2 346 2 295 1 249 2 325 1 145 1 193 1 350 1 222 2 370 2 8 1 198 1 257 2 11 1 356 1 130 1 82 1 12 1 202 1 29 1 31 1 85 1 57 1 135 2 16 1 338 2 341 2 290 1 113 1 
344 1 364 1 365 1 129 1 202 1 132 1 29 1 40 1 325 1 300 1 193 1 338 1 370 1 33 1 
364 1 308 1 309 1 347 1 245 1 132 1 160 2 93 1 325 1 301 1 193 1 338 1 370 1 362 1 238 1 332 1 33 1 226 1 
364 2 308 1 309 1 66 1 347 1 245 1 132 1 160 2 93 1 325 1 193 1 301 1 338 2 370 2 362 1 238 1 332 1 33 1 226 1 
364 1 308 1 309 1 347 1 160 2 93 1 325 1 315 1 301 1 193 1 338 1 370 1 362 1 238 1 332 1 33 1 226 1 
67 1 
62 1 256 1 154 1 269 1 27 1 246 1 377 1 369 1 381 1 125 1 
152 2 256 5 115 1 373 1 154 5 118 10 53 5 58 5 252 2 147 2 329 2 125 5 171 2 340 2 363 5 
158 1 256 1 323 1 273 1 219 1 381 1 
364 4 365 2 269 2 219 3 296 1 246 1 323 3 40 1 325 1 300 1 273 4 194 1 193 1 369 2 330 2 125 2 5 1 370 4 150 1 26 2 154 2 202 1 29 1 158 2 377 2 338 4 210 1 211 2 292 1 
256 1 62 1 154 1 27 1 206 1 381 1 125 1 
269 1 118 1 141 1 219 1 246 1 323 1 273 1 369 1 148 1 125 1 256 2 154 1 53 1 158 1 377 1 381 1 138 1 
0 1 294 2 296 1 247 1 246 4 3 2 252 2 147 2 193 3 192 1 152 2 256 8 154 8 102 2 260 2 53 6 202 3 158 3 360 3 56 1 58 6 211 1 363 6 62 1 364 3 115 2 365 1 19 2 269 4 66 1 118 12 219 5 322 2 323 5 325 4 273 5 329 2 330 2 369 4 125 9 370 3 171 2 26 1 372 2 373 2 228 2 128 3 27 1 29 10 232 2 377 4 381 2 338 3 340 2 
115 1 116 1 269 2 118 6 219 1 244 1 246 2 323 1 252 2 273 1 147 2 329 2 330 1 369 2 96 1 125 8 171 2 303 1 152 2 256 5 199 1 154 5 131 1 53 3 158 1 336 1 58 5 377 2 177 1 163 1 381 2 181 1 340 2 211 1 363 5 
342 1 241 1 115 1 269 1 217 1 219 1 246 1 249 1 297 1 323 1 252 2 146 1 329 1 222 1 369 1 125 2 126 1 305 1 154 2 155 1 175 1 156 1 204 1 377 1 135 1 107 1 111 1 340 2 
342 2 240 1 364 1 365 1 90 1 295 1 121 1 249 3 325 1 193 1 253 1 222 3 370 1 126 2 172 1 8 1 198 1 374 1 128 1 257 1 175 1 202 1 29 1 31 1 57 1 135 2 107 2 16 1 338 1 341 2 290 1 113 1 
256 4 154 2 269 1 118 4 53 2 246 1 58 2 377 1 369 1 330 1 381 2 125 1 236 1 363 2 211 1 
184 1 378 1 234 1 266 1 6 1 
34 1 378 1 234 1 
34 1 378 1 234 1 
34 1 378 1 234 1 
355 1 378 1 234 1 
355 1 378 1 234 1 
355 1 378 1 234 1 
378 1 234 1 
144 1 60 1 
80 3 8 5 216 5 198 1 63 5 217 2 257 10 295 1 156 1 367 2 57 1 146 2 329 2 111 1 341 2 149 1 340 2 290 1 
216 2 198 1 63 1 257 2 295 1 367 1 57 1 149 1 341 2 171 1 340 1 290 1 
80 1 8 2 152 1 216 2 63 2 198 1 257 4 295 1 367 1 57 1 147 1 329 1 149 1 341 2 171 1 340 1 290 1 
8 2 80 1 216 1 198 3 63 2 217 1 1 1 257 3 295 3 367 1 57 3 324 1 146 1 46 1 149 1 341 6 290 3 
216 16 63 12 217 3 1 2 320 1 295 5 367 5 324 1 146 3 72 1 147 3 46 1 329 5 224 1 149 1 171 3 8 18 152 3 80 7 198 5 258 1 257 34 81 1 131 4 13 1 57 5 177 1 179 1 163 3 111 2 236 1 341 10 340 5 290 5 
8 4 80 2 216 4 63 3 198 2 217 1 257 8 1 1 295 2 367 1 57 2 13 1 146 1 329 1 111 1 236 1 340 1 341 4 224 1 290 2 
8 3 80 2 216 3 63 2 217 1 257 6 13 1 206 1 146 1 329 1 111 1 236 1 224 1 340 1 
80 1 8 2 152 1 216 2 63 2 198 1 257 4 295 1 367 1 57 1 147 1 329 1 179 1 341 2 171 1 340 1 290 1 
80 1 8 4 152 1 216 3 63 2 257 7 81 1 131 2 367 1 177 1 147 1 329 1 163 1 171 1 340 1 
216 11 63 9 217 2 1 2 295 2 367 4 324 1 43 1 146 2 147 2 329 3 274 1 224 1 171 2 152 2 8 12 80 5 198 2 81 1 257 23 131 2 13 1 57 2 163 2 111 1 236 1 340 3 341 4 290 2 
8 1 257 1 131 1 
216 1 257 1 163 1 
8 3 152 1 80 2 216 3 198 1 373 1 63 3 257 6 295 1 367 1 57 1 147 1 179 1 329 1 341 2 171 1 340 1 290 1 
216 6 63 2 116 1 244 1 295 1 367 1 147 2 329 2 149 1 171 2 303 1 8 6 152 2 80 1 198 1 199 1 257 12 131 1 57 1 336 1 177 1 163 1 341 2 340 2 290 1 
8 3 80 1 216 3 63 2 217 1 257 6 367 1 146 1 329 1 111 1 340 1 
80 1 8 2 216 1 63 2 198 1 217 1 257 3 1 1 295 1 367 1 13 1 57 1 324 1 146 1 341 2 224 1 290 1 
216 7 63 2 116 1 1 1 244 1 295 2 367 1 147 1 329 1 149 1 171 2 303 1 8 4 152 2 80 1 198 2 199 1 257 11 131 1 57 2 336 1 177 1 163 1 341 4 340 2 290 2 
216 9 63 3 116 1 1 1 244 1 295 3 367 2 147 1 329 1 149 1 171 3 303 1 80 1 8 5 152 3 198 3 199 1 257 14 81 1 131 2 336 1 57 3 177 1 179 1 163 1 341 6 340 3 290 3 
216 9 63 4 116 1 217 1 1 1 244 1 295 3 367 1 146 1 147 2 329 3 224 1 149 1 171 2 303 1 8 10 152 2 80 3 198 3 199 1 257 19 131 1 13 1 57 3 336 1 177 1 179 1 163 1 111 1 236 1 341 6 340 3 290 3 
216 10 63 5 116 1 217 1 1 1 244 1 295 3 367 2 146 1 147 1 329 2 224 1 149 1 171 2 303 1 8 7 152 2 80 3 198 3 199 1 257 17 131 1 13 1 57 3 336 1 177 1 179 1 163 1 111 1 236 1 341 6 340 3 290 3 
216 7 63 2 116 1 1 1 244 1 295 2 367 1 147 1 329 1 149 1 171 2 303 1 8 4 152 2 80 1 198 2 199 1 257 11 131 1 57 2 336 1 177 1 163 1 341 4 340 2 290 2 
216 6 63 2 116 1 244 1 295 1 367 1 147 2 329 2 149 1 171 2 303 1 8 6 152 2 80 1 198 1 199 1 257 12 131 1 57 1 336 1 177 1 163 1 341 2 340 2 290 1 
216 10 63 5 116 1 217 1 1 2 244 1 295 4 367 2 146 1 147 1 329 2 224 1 149 1 171 2 303 1 8 8 152 2 80 3 198 4 199 1 257 18 131 1 13 1 336 1 57 4 177 1 179 1 163 1 111 1 236 1 341 8 340 3 290 4 
216 9 63 6 116 1 1 2 244 1 295 4 367 3 147 2 46 1 329 2 149 1 171 3 303 1 8 7 152 3 80 3 198 4 199 1 257 16 131 1 336 1 57 4 177 1 163 1 341 8 340 3 290 4 
8 4 80 3 216 3 63 6 217 3 257 7 367 3 13 2 146 3 329 1 111 1 224 1 340 1 
216 10 63 4 116 1 217 1 1 2 244 1 295 4 367 1 146 1 147 1 46 1 329 2 224 1 149 1 171 2 303 1 8 8 152 2 80 3 198 4 199 1 257 18 131 1 13 1 336 1 57 4 177 1 163 1 111 1 236 1 341 8 340 3 290 4 
354 1 249 1 293 1 90 1 135 1 222 1 69 1 
354 1 293 1 50 1 90 1 69 1 249 1 135 1 368 1 189 1 222 1 87 1 254 1 
364 4 365 1 66 1 202 1 188 1 29 1 40 1 298 1 325 1 300 1 193 1 338 4 370 4 
26 1 47 1 364 2 128 1 280 1 218 1 282 1 202 1 29 1 92 1 325 2 193 1 338 2 370 2 
160 1 364 1 365 1 325 1 309 1 193 1 301 1 338 1 370 1 238 1 
364 2 325 1 66 1 193 1 82 1 12 1 347 1 338 2 202 1 370 2 29 1 
26 1 364 4 365 1 66 1 82 1 202 2 29 3 70 1 133 1 40 1 298 1 325 2 300 1 193 2 338 5 370 5 
26 1 364 4 365 1 66 1 271 1 82 1 202 2 29 3 70 1 40 1 298 1 325 2 300 1 193 2 338 5 370 5 
40 1 364 1 365 1 325 1 300 1 206 1 193 1 338 1 202 1 370 1 29 1 
342 1 364 1 365 1 90 1 128 1 348 1 202 1 29 1 121 1 249 2 325 1 135 1 107 1 193 1 253 1 222 2 338 1 370 1 
342 1 364 1 19 1 90 1 348 1 121 1 249 2 325 1 193 1 253 1 222 2 370 1 26 1 9 1 128 2 155 1 260 1 202 2 29 3 32 1 135 2 107 2 338 1 
342 1 364 2 19 1 90 1 348 1 188 1 121 1 249 2 325 1 193 1 222 2 370 2 26 1 9 1 128 2 155 1 260 1 202 2 29 3 32 1 135 2 107 2 338 2 17 1 
26 1 372 1 256 1 364 3 365 1 19 1 128 1 260 1 219 2 202 1 188 1 29 4 3 1 360 1 323 2 233 1 325 1 273 1 193 1 381 1 338 3 370 3 7 1 
26 1 372 1 256 1 364 3 365 1 19 1 228 1 128 1 260 1 219 2 202 1 188 1 29 4 3 1 360 1 323 2 325 1 273 1 193 1 381 1 338 3 370 3 
364 1 325 1 193 1 338 1 235 1 370 1 
151 1 88 1 364 6 365 2 346 1 128 1 66 1 280 1 218 1 347 1 82 1 202 2 70 1 29 3 133 1 325 3 192 1 193 2 338 7 235 1 370 7 
342 1 240 1 216 3 63 2 364 1 90 2 217 1 66 1 348 1 295 2 119 1 121 1 249 2 221 1 94 1 325 1 145 1 45 1 146 1 193 1 329 1 253 1 222 2 331 1 224 1 370 1 8 3 80 2 198 2 374 1 128 1 257 6 11 1 202 1 29 1 31 2 13 1 57 2 135 1 107 1 338 1 111 1 236 1 340 1 341 4 290 2 113 2 
62 1 294 1 364 1 365 1 345 1 269 2 219 3 296 1 246 2 3 1 322 1 323 3 273 2 369 2 125 1 370 1 372 1 256 1 228 1 154 1 27 1 102 1 29 2 158 1 360 1 377 2 381 1 338 1 
372 1 0 1 364 2 128 1 66 1 202 1 29 2 325 2 192 1 193 1 338 2 235 1 370 2 
342 1 364 1 365 1 90 1 128 1 348 1 202 1 29 1 121 1 249 2 325 1 135 1 107 1 193 1 222 2 338 1 17 1 370 1 
26 1 88 1 364 1 128 1 280 1 218 1 202 1 29 1 325 2 192 1 193 1 338 1 370 1 
55 1 86 1 90 1 99 1 270 1 
256 1 9 1 345 1 227 1 90 1 99 2 335 1 155 1 219 2 270 2 3 1 55 2 86 1 159 1 323 2 32 1 381 1 209 1 276 1 
249 1 114 1 86 1 135 1 99 1 356 1 130 1 270 1 222 1 
86 1 227 1 335 1 
176 1 134 1 64 1 327 1 316 1 225 1 104 1 25 1 
48 1 64 4 259 1 38 1 283 1 104 1 134 4 176 3 326 1 327 2 316 2 351 1 371 2 25 1 
64 2 185 1 52 1 104 1 176 1 134 2 327 1 316 1 180 1 371 1 225 1 25 1 
79 1 64 3 259 2 104 1 176 1 134 3 326 2 327 1 316 1 351 1 225 1 25 1 
176 2 140 1 265 1 220 2 
134 1 64 1 318 1 225 1 104 1 25 1 
176 1 134 2 65 1 64 2 327 1 316 1 371 1 225 1 104 1 25 1 
339 1 
176 1 134 1 64 1 327 1 316 1 225 1 104 1 25 1 
176 1 206 1 327 1 316 1 
176 1 134 1 64 1 327 1 316 1 104 1 25 1 
35 1 64 1 166 1 
64 3 259 1 104 1 176 1 134 3 326 2 327 1 22 1 316 1 351 1 225 1 25 1 
176 1 134 2 64 2 349 1 327 1 316 1 371 1 104 1 25 1 
160 1 176 1 134 1 64 1 314 1 283 1 238 1 225 1 226 1 104 1 25 1 
176 1 134 1 64 1 316 1 225 1 104 1 25 1 
134 1 64 1 327 1 316 2 225 1 104 1 25 1 
64 2 186 1 104 2 176 1 134 2 190 1 316 1 225 1 77 1 25 2 
127 1 64 3 65 1 38 1 283 1 104 1 134 3 176 2 327 1 316 1 371 2 225 1 25 1 
64 2 309 1 104 1 160 2 176 1 134 2 327 1 316 1 18 1 371 1 225 1 332 1 238 1 25 1 226 1 
64 4 229 1 38 1 283 1 104 2 134 4 176 2 349 1 327 1 316 1 371 2 225 1 25 2 
176 1 134 3 65 1 326 1 64 3 327 1 316 1 371 1 225 1 104 1 25 1 
48 1 176 1 38 1 283 1 
176 1 316 1 

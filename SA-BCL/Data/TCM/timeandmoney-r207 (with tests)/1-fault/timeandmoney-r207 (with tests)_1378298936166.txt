#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
336 4 338 1 311 1 194 1 47 2 265 1 197 6 270 2 131 1 175 2 219 1 104 2 82 1 321 2 178 9 181 1 142 2 250 1 112 5 253 1 328 1 357 9 164 1 92 1 261 1 165 2 189 1 188 3 
336 4 338 1 311 1 194 1 47 2 265 1 197 6 270 2 131 1 175 2 219 1 321 2 82 1 104 2 178 9 181 1 142 2 250 1 112 5 253 1 328 1 357 9 164 1 92 1 261 1 165 2 189 1 188 3 
336 5 338 1 311 1 194 1 47 2 265 1 197 7 270 2 131 1 175 2 219 1 321 2 82 1 104 2 178 10 181 1 142 2 250 1 112 6 253 1 328 1 357 10 164 1 92 1 261 1 165 2 189 1 188 4 
336 3 338 1 311 1 194 1 47 2 265 1 197 4 270 2 131 1 175 2 219 1 321 2 82 1 104 1 178 7 181 1 142 2 250 1 112 4 253 1 328 1 357 7 92 1 261 1 165 2 189 1 188 2 
142 1 336 2 47 1 253 1 112 3 197 3 357 4 131 1 175 1 164 1 219 1 104 2 321 1 261 1 188 1 189 1 165 1 178 4 
60 1 142 1 250 1 112 1 47 1 303 1 270 1 377 1 357 2 175 1 219 1 92 1 261 1 189 1 165 1 178 2 
336 1 47 2 112 2 197 1 270 1 328 1 357 3 219 1 261 1 189 1 165 2 188 1 178 3 
336 4 311 1 47 2 265 1 213 1 197 7 270 1 131 1 175 1 219 1 104 2 321 1 178 9 142 1 112 5 253 1 328 1 116 1 357 9 164 1 261 1 188 3 165 2 189 1 
336 4 311 1 47 2 265 1 213 1 197 7 270 1 131 1 175 1 219 1 104 2 321 1 178 9 142 1 112 5 253 1 328 1 116 1 357 9 164 1 261 1 188 3 165 2 189 1 
11 1 246 1 98 1 
115 2 117 1 246 1 
187 2 134 2 274 1 26 2 345 1 214 2 173 2 33 2 
237 1 26 2 48 1 50 1 214 3 173 3 367 1 174 1 80 1 245 2 101 1 272 1 29 2 134 2 5 1 274 1 223 1 345 1 108 2 33 2 323 1 349 1 61 2 10 1 281 1 229 1 113 1 354 1 376 1 286 1 187 2 305 1 119 1 360 1 19 2 307 1 95 1 
187 1 134 1 170 1 26 1 345 1 238 1 268 1 214 1 173 1 33 1 
11 1 337 1 170 1 151 1 26 1 259 1 173 1 214 1 130 1 246 1 155 1 191 1 182 1 125 1 
11 1 337 1 170 1 26 1 259 1 173 1 214 1 187 1 130 1 134 1 246 1 191 2 33 1 125 2 182 1 
227 1 99 1 191 1 125 1 381 1 
11 1 227 1 246 1 23 1 191 2 59 1 125 2 381 1 
227 1 191 1 125 1 
170 1 26 1 238 1 268 1 173 1 214 1 187 1 54 1 134 1 345 1 191 1 33 1 381 1 125 1 
246 1 
11 1 227 1 246 1 23 1 206 1 191 2 125 2 381 1 
162 1 11 1 227 2 23 1 252 1 144 2 28 2 41 1 154 2 231 1 246 1 83 1 191 5 138 1 158 1 35 1 381 2 125 5 139 1 
274 1 98 1 
26 2 173 2 214 2 187 1 134 1 274 2 343 1 222 1 33 1 
87 1 143 1 184 1 
323 1 61 1 10 1 48 1 214 1 173 1 354 1 286 1 274 1 119 1 305 1 147 1 19 1 307 1 108 1 95 1 
323 1 61 1 279 1 10 1 26 1 184 1 48 1 354 1 173 2 214 2 286 1 187 1 134 1 305 1 119 1 18 1 19 1 307 1 108 1 95 1 
187 3 134 3 274 1 18 1 26 3 214 3 173 3 33 1 
187 1 134 1 170 1 26 1 238 1 214 1 173 1 
187 1 134 1 170 1 343 1 222 1 26 1 214 1 173 1 33 1 
237 1 337 1 170 1 26 3 48 1 214 4 173 4 367 1 174 1 130 1 80 1 245 2 272 1 29 1 134 3 274 1 343 1 223 1 345 1 108 1 33 2 182 1 323 1 349 1 61 1 279 1 10 1 281 1 113 1 259 1 354 1 230 1 286 1 187 3 305 1 119 1 360 1 18 1 19 1 191 1 307 1 95 1 124 1 125 1 
187 1 233 1 134 1 274 1 151 1 18 1 26 2 214 2 173 2 
279 1 337 1 170 1 26 3 259 1 173 3 214 3 230 1 216 1 187 3 130 1 134 3 246 1 343 1 18 2 191 1 33 1 125 1 182 1 
26 2 184 1 173 2 214 2 87 1 187 2 134 2 18 1 343 1 33 1 
323 1 61 1 10 1 48 1 214 1 173 1 354 1 286 1 274 1 119 1 305 1 19 1 307 1 108 1 95 1 
61 1 10 1 38 1 48 1 214 1 173 1 354 1 81 1 274 1 119 1 305 1 19 1 307 1 108 1 95 1 
237 1 211 1 75 1 315 1 294 1 367 1 245 2 272 2 29 4 5 2 6 1 275 1 344 1 9 1 349 1 143 2 281 1 184 2 113 1 327 1 87 2 304 1 90 1 360 1 
187 1 337 1 134 1 170 1 26 1 257 1 214 1 173 1 
279 1 151 1 282 1 26 5 173 5 214 5 340 1 187 4 233 1 134 4 274 1 18 2 343 1 33 1 
187 2 134 2 170 1 26 2 238 1 257 1 214 2 173 2 
132 1 368 1 
132 1 368 1 
126 1 320 1 
126 1 320 1 
126 1 320 1 
132 1 242 1 368 1 
132 1 242 1 368 1 
374 1 132 1 368 1 
126 1 132 2 320 1 255 1 361 1 368 2 
132 1 242 1 368 1 
132 1 30 1 368 1 
132 1 30 1 368 1 
132 1 30 1 368 1 
85 1 251 2 284 1 368 2 4 1 86 2 14 1 132 2 246 1 91 2 166 1 179 2 191 2 346 1 234 3 297 1 361 1 380 2 125 2 
169 1 374 1 309 1 251 1 264 1 26 2 240 1 284 1 214 2 173 2 186 1 77 1 368 1 187 2 16 1 132 1 134 2 91 1 274 1 179 1 191 1 234 1 125 1 380 1 
142 1 175 1 321 1 
377 1 142 1 175 1 
377 1 342 1 175 3 321 2 25 1 285 1 
377 1 342 1 175 2 321 1 312 1 285 1 
377 1 342 2 175 2 321 1 285 1 
169 1 23 1 314 1 24 1 74 2 315 1 294 1 129 1 316 1 369 2 28 1 77 1 154 1 246 2 102 1 275 1 344 1 138 3 35 1 11 1 227 1 300 1 252 2 254 1 144 1 115 3 16 1 117 1 191 5 123 2 125 5 381 4 
23 1 24 2 99 5 171 1 315 3 294 3 129 3 366 1 316 1 78 1 369 6 77 4 28 2 154 2 246 5 102 2 105 1 275 3 344 3 372 1 138 8 158 1 35 1 11 1 227 6 252 6 144 2 329 1 115 9 42 5 117 3 191 9 123 6 125 9 381 7 
24 1 74 1 315 1 129 1 294 1 28 1 77 1 369 2 154 1 246 3 102 1 275 1 344 1 138 3 158 1 11 1 300 1 252 2 254 1 144 1 115 4 117 2 191 3 123 2 381 2 125 3 
24 1 74 2 315 2 129 2 294 2 366 1 369 4 78 1 28 1 77 2 154 1 246 4 102 1 275 2 344 2 138 5 158 1 11 1 300 1 252 4 254 1 144 1 329 1 115 7 117 3 191 4 123 4 125 4 381 3 
96 1 98 1 307 1 
307 1 53 1 
199 1 
307 1 354 1 
96 2 305 1 307 3 348 1 354 1 52 1 
305 1 307 1 354 1 
79 1 307 1 
9 2 36 1 161 1 299 1 1 2 315 1 76 1 294 1 244 1 217 1 272 3 29 7 5 4 6 3 120 1 156 1 94 1 
9 2 36 1 161 1 299 1 1 2 315 1 76 1 294 1 244 1 217 1 272 3 29 7 5 4 6 3 120 1 156 1 94 1 
9 2 36 1 161 1 299 1 1 2 315 1 76 1 294 1 100 1 244 1 217 1 272 3 29 7 5 4 6 3 120 1 156 1 94 1 
21 4 237 1 193 1 263 1 1 3 76 2 315 4 129 3 294 4 367 1 244 2 217 2 245 2 272 15 29 31 103 1 5 16 6 10 275 3 156 1 344 3 226 3 8 1 36 1 9 5 161 1 299 1 281 1 256 1 113 1 330 1 120 2 69 1 94 5 
237 2 263 1 1 2 315 1 76 1 294 1 367 2 244 1 217 1 245 4 272 4 29 9 5 5 177 1 6 4 9 3 36 1 161 1 299 1 281 2 185 1 113 2 120 1 94 1 
22 1 127 1 47 1 25 1 197 1 270 1 175 2 219 1 321 1 178 2 108 1 298 1 373 1 159 1 142 1 61 1 228 1 350 1 351 1 112 1 377 1 357 2 119 1 261 1 165 1 189 1 19 1 190 1 192 1 95 1 
22 1 127 1 47 1 25 1 197 2 270 1 175 2 219 1 321 1 178 3 57 1 137 1 108 1 298 1 373 1 142 1 61 1 228 1 350 1 351 1 112 1 377 1 357 3 119 1 261 1 165 1 19 1 332 1 190 1 95 1 
22 1 127 1 25 1 197 2 270 1 175 2 219 1 321 1 178 2 137 1 108 1 298 1 373 1 61 1 142 1 350 1 351 1 112 1 377 1 357 2 119 1 261 1 19 1 332 1 95 1 
61 1 10 1 22 2 127 2 47 1 354 1 270 2 357 1 15 1 201 1 119 1 165 1 19 1 178 1 121 1 208 1 307 1 57 1 108 1 58 1 95 1 235 1 373 2 
22 1 127 1 47 1 25 1 270 1 175 2 321 1 178 1 108 1 298 1 373 1 142 1 61 1 228 1 350 1 351 1 377 1 357 1 119 1 165 1 189 1 19 1 332 1 190 1 192 1 95 1 
283 1 
335 1 337 1 339 1 151 1 291 1 152 1 154 1 246 2 202 1 155 1 107 2 109 2 108 2 61 2 10 2 62 4 11 1 249 2 252 2 204 2 353 1 12 1 259 1 354 1 13 1 115 2 117 2 17 1 306 2 119 1 19 2 121 1 208 1 307 1 125 5 23 3 170 1 24 1 266 1 26 1 267 2 172 1 173 1 214 1 28 1 130 1 138 2 224 2 35 1 182 1 227 6 144 1 93 1 191 5 95 1 
335 1 62 2 337 1 227 2 23 1 170 1 339 1 151 1 26 1 172 1 259 1 12 1 173 1 214 1 130 1 206 1 202 1 155 1 191 3 109 1 125 3 182 1 
335 1 337 1 170 1 23 1 151 1 339 1 26 1 172 1 214 1 173 1 130 1 202 1 246 1 155 1 182 1 62 3 11 1 227 1 12 1 259 1 206 1 306 1 191 3 125 3 
335 1 337 1 23 1 170 1 151 1 339 1 26 1 172 1 214 1 173 1 130 1 202 1 246 1 155 1 107 1 109 1 182 1 62 3 11 1 227 2 12 1 259 1 206 1 306 1 191 3 125 3 
335 1 97 1 337 1 339 1 151 1 291 1 154 1 202 1 246 5 155 1 56 1 107 4 109 4 62 6 11 5 249 2 252 1 204 2 259 1 12 1 117 2 206 1 306 4 68 1 125 5 170 1 23 3 26 1 267 2 172 1 214 1 173 1 28 1 130 1 138 1 224 2 182 1 35 1 37 1 227 7 280 1 144 1 93 1 191 5 
335 1 337 1 23 2 170 1 339 1 151 1 291 1 26 1 267 2 172 1 173 1 214 1 28 1 154 1 130 1 246 2 202 1 155 1 107 2 138 1 109 2 224 2 35 1 182 1 62 4 11 1 227 4 249 2 252 1 204 2 144 1 353 1 12 1 259 1 115 2 117 2 306 2 93 1 191 4 125 4 
335 1 337 1 23 2 170 1 151 1 339 1 291 1 26 1 267 2 172 1 214 1 173 1 28 1 154 1 130 1 246 1 202 1 155 1 56 1 107 2 138 1 109 2 224 2 182 1 35 1 37 1 62 4 11 1 227 4 249 2 280 1 252 1 204 2 144 1 12 1 259 1 117 2 306 2 93 1 191 4 125 4 
335 1 337 1 23 2 170 1 151 1 339 1 291 1 26 1 267 2 172 1 214 1 173 1 28 1 154 1 130 1 246 1 202 1 155 1 56 1 107 2 138 1 109 2 224 2 182 1 35 1 37 1 62 4 11 1 227 4 249 2 280 1 252 1 204 2 144 1 12 1 259 1 117 2 306 2 93 1 191 4 125 4 
335 1 337 1 23 2 170 1 151 1 339 1 291 1 26 1 195 1 128 1 172 1 214 1 173 1 28 1 154 1 130 1 246 1 202 1 155 1 107 2 276 2 138 1 109 2 224 2 182 1 35 1 140 2 37 1 62 4 11 1 227 4 249 2 252 1 144 1 12 1 259 1 115 2 232 1 306 2 191 4 125 4 
335 1 97 1 337 1 23 2 170 1 151 1 339 1 291 1 26 1 267 2 172 1 214 1 173 1 28 1 154 1 130 1 246 1 202 1 155 1 56 1 138 1 107 3 109 3 224 2 35 1 182 1 37 1 62 5 11 1 249 2 227 5 280 1 252 1 204 2 144 1 12 1 259 1 117 2 306 3 93 1 191 4 125 4 
335 1 97 1 337 1 23 2 170 1 151 1 339 1 291 1 26 1 267 2 172 1 214 1 173 1 28 1 154 1 130 1 246 1 202 1 155 1 56 1 138 1 107 3 109 3 224 2 35 1 182 1 37 1 62 5 11 1 249 2 227 5 280 1 252 1 204 2 144 1 12 1 259 1 117 2 306 3 93 1 191 4 125 4 
335 1 337 1 23 2 170 1 339 1 151 1 291 1 26 1 195 1 172 1 173 1 214 1 28 1 154 1 130 1 246 1 202 1 155 1 107 2 276 2 138 1 109 2 224 2 35 1 182 1 140 2 62 4 11 1 227 4 249 2 252 1 144 1 353 1 12 1 259 1 115 2 306 2 191 4 125 4 
9 2 36 1 349 1 161 1 237 1 143 1 299 1 281 1 1 1 98 1 184 1 113 1 315 1 294 1 327 1 367 1 244 1 87 1 245 2 272 3 29 6 274 2 5 3 6 2 360 1 120 1 
21 3 237 2 193 1 315 1 129 2 294 2 367 2 80 1 245 4 272 6 318 1 29 14 274 1 5 8 6 2 275 1 344 2 226 3 9 1 141 1 349 2 143 11 281 2 184 11 113 2 376 1 87 4 43 1 358 1 360 1 69 1 333 1 94 1 
237 1 26 1 48 1 214 2 173 2 367 1 245 2 80 1 370 1 272 1 134 1 29 2 274 1 5 1 108 1 323 1 61 1 349 1 10 1 279 1 248 1 281 1 301 1 113 1 354 1 376 1 286 1 87 1 187 1 305 1 119 1 147 1 360 1 18 1 19 1 307 1 333 1 95 1 
150 2 237 3 1 1 48 2 294 3 244 1 245 6 5 10 6 8 344 2 108 3 9 4 61 3 349 3 161 1 10 1 299 1 113 3 354 2 119 2 305 2 18 1 360 3 19 3 120 1 307 2 26 1 315 3 173 3 214 3 129 2 367 3 174 2 80 1 272 10 273 1 134 1 29 20 274 2 275 2 136 2 36 1 323 2 183 2 279 1 324 1 143 7 281 3 184 7 325 2 376 1 286 2 187 1 87 7 89 1 332 1 333 1 95 2 94 4 
237 2 46 1 290 1 26 1 50 2 214 1 173 1 367 2 271 1 245 4 80 1 272 1 134 1 29 2 176 1 5 1 108 8 159 1 61 8 349 2 10 2 281 2 66 1 113 2 354 2 327 1 376 1 187 1 118 1 119 2 18 1 360 2 19 7 332 1 208 1 121 1 20 1 307 3 95 2 
187 1 134 1 133 1 343 1 26 1 214 1 173 1 33 1 
349 1 237 1 143 1 211 1 281 1 184 1 113 1 294 1 327 1 367 1 87 1 245 2 29 2 5 2 6 1 360 1 344 1 94 1 
9 1 349 1 237 1 143 1 281 1 184 1 113 1 315 1 327 1 367 1 87 1 245 2 272 2 29 2 304 1 6 1 360 1 275 1 
9 1 349 1 237 1 143 2 281 1 184 2 113 1 315 1 129 1 294 1 327 1 367 1 87 2 245 2 272 2 29 4 5 2 6 2 360 1 275 1 344 1 94 1 
349 1 237 1 143 1 211 1 281 1 184 1 113 1 294 1 367 1 87 1 245 2 29 2 118 1 5 2 6 1 360 1 344 1 94 1 
9 1 349 1 237 1 143 1 281 1 184 1 113 1 315 1 367 1 87 1 245 2 272 2 29 2 118 1 304 1 6 1 360 1 275 1 
9 1 349 1 237 1 143 2 281 1 184 2 113 1 315 1 129 1 294 1 367 1 87 2 245 2 272 2 29 4 118 1 5 2 6 2 360 1 275 1 344 1 94 1 
9 1 349 1 237 1 143 2 281 1 184 2 113 1 315 1 129 1 294 1 367 1 87 2 245 2 272 2 29 4 5 2 6 2 360 1 275 1 344 1 94 1 
237 1 48 1 173 1 214 1 174 1 367 1 245 2 80 1 272 1 29 2 5 1 274 1 108 1 323 1 61 1 349 1 10 1 281 1 113 1 354 1 376 1 286 1 305 1 119 1 360 1 19 1 307 1 95 1 
237 1 48 1 212 1 173 1 214 1 367 1 245 2 80 1 272 1 29 2 81 1 5 1 274 1 108 1 61 1 349 1 10 1 281 1 38 1 113 1 354 1 376 1 305 1 119 1 360 1 19 1 307 1 95 1 
9 1 349 1 237 1 143 2 281 1 184 2 113 1 315 1 129 1 294 1 367 1 87 2 245 2 272 2 29 4 5 2 6 2 360 1 275 1 344 1 333 1 94 1 
237 1 48 1 315 1 294 1 173 1 214 1 129 1 174 1 367 1 245 2 272 2 29 4 5 2 6 2 275 1 344 1 108 1 159 1 9 1 323 1 61 1 349 1 143 2 281 1 184 2 325 1 113 1 354 1 286 1 87 2 305 1 119 1 360 1 19 1 307 1 94 1 95 1 
237 1 26 1 315 1 173 1 214 1 129 1 294 1 367 1 245 2 272 1 134 1 29 3 5 2 6 1 343 1 275 1 344 1 157 1 33 1 349 1 143 1 281 1 184 1 113 1 187 1 87 1 360 1 333 1 94 1 
237 3 193 3 1 1 49 1 241 1 294 5 153 1 244 1 245 6 200 1 5 20 6 8 344 4 9 4 161 1 63 2 299 1 113 3 120 1 69 1 209 1 70 1 21 4 71 1 262 1 263 1 315 5 269 4 129 4 367 3 272 21 29 41 275 4 31 1 226 3 36 1 281 3 185 1 378 1 44 1 287 1 94 4 288 1 
71 1 21 4 237 4 262 1 193 3 263 2 1 1 49 1 241 1 269 4 315 4 129 4 294 5 153 1 367 4 244 1 245 8 272 18 200 1 29 38 5 20 6 7 275 3 344 4 31 1 226 3 36 1 9 4 161 1 63 2 299 1 281 4 185 1 113 4 378 1 120 1 44 1 287 1 69 1 209 1 94 3 70 1 288 1 
71 1 21 4 237 2 262 1 193 2 263 1 1 1 241 1 269 4 315 8 129 7 294 8 153 1 367 2 244 1 245 4 272 25 200 1 29 52 5 27 6 14 275 7 344 7 31 1 226 4 36 1 9 7 141 2 161 1 63 1 299 1 281 2 185 1 113 2 120 1 44 1 287 1 69 2 209 1 94 7 70 1 288 1 
21 2 237 2 193 1 49 1 241 1 269 2 315 3 129 3 294 3 367 2 245 4 272 10 29 19 5 9 6 6 275 3 344 3 31 1 226 1 84 1 9 3 63 1 281 2 185 1 113 2 287 1 69 1 209 2 94 3 288 1 
71 1 21 2 237 3 262 1 193 2 263 2 241 1 315 2 269 4 129 3 294 3 153 1 367 3 245 6 272 12 29 26 200 1 5 14 6 4 275 2 344 3 31 1 226 2 9 2 63 2 281 3 185 1 113 3 44 1 287 1 209 1 94 2 70 1 288 2 
14 1 132 1 251 1 91 1 148 1 179 1 297 1 361 1 380 1 368 1 
374 1 186 1 
289 1 132 1 251 1 91 1 179 1 180 1 160 1 380 1 368 1 
251 1 284 1 368 1 4 1 86 1 14 1 132 1 246 1 91 1 166 1 179 1 191 1 346 1 234 2 297 1 361 1 125 1 380 1 
251 1 284 1 368 1 4 1 86 1 14 1 132 1 246 1 91 1 166 1 179 1 191 1 346 1 234 2 297 1 361 1 125 1 380 1 
251 1 284 1 368 1 4 1 86 1 14 1 132 1 246 1 91 1 166 1 179 1 191 1 346 1 234 2 297 1 361 1 125 1 380 1 
356 1 255 1 242 1 
356 1 255 1 242 1 
352 1 30 1 
352 1 255 1 30 1 
264 1 240 1 
169 1 309 1 264 1 26 2 240 1 214 2 173 2 368 1 77 1 132 1 134 2 274 1 179 1 296 1 374 1 251 1 186 1 86 1 187 2 16 1 91 1 166 1 191 1 234 1 125 1 381 1 380 1 
356 1 242 1 
352 1 255 1 30 1 
237 1 26 2 51 1 50 2 3 1 214 2 173 2 367 1 271 1 245 2 80 1 272 1 55 1 29 2 176 1 5 1 108 2 61 2 349 1 281 1 113 1 354 1 376 1 119 1 360 1 19 2 167 1 307 1 333 1 308 1 95 1 
210 1 142 1 61 2 310 1 228 1 350 1 25 1 377 1 175 2 321 1 119 1 19 2 332 1 379 1 108 2 298 1 95 1 373 1 159 1 
142 1 61 1 228 1 350 1 25 1 215 1 377 1 175 2 321 1 119 1 19 1 332 1 379 1 108 1 298 1 95 1 373 1 
210 1 61 1 10 1 293 1 354 1 201 1 119 1 19 1 208 1 121 1 307 1 108 1 95 1 373 1 
210 1 142 1 61 1 310 1 228 1 350 1 25 1 377 1 175 2 321 1 119 1 19 1 332 1 379 1 108 1 298 1 95 1 373 1 
106 1 
162 1 11 1 246 1 252 1 83 1 98 1 138 1 
23 1 267 1 28 1 154 1 246 2 138 1 35 1 11 1 227 1 252 1 144 1 204 1 115 1 117 1 93 1 191 1 125 1 
334 1 96 2 2 2 196 1 152 1 294 2 53 3 198 2 154 4 246 8 344 2 108 3 348 1 159 1 61 3 162 1 10 1 203 1 11 2 252 8 65 2 302 2 258 2 259 2 354 3 163 2 115 12 117 6 119 4 305 3 19 3 307 10 123 6 125 5 23 3 24 2 364 2 315 2 129 2 28 4 369 6 79 2 371 2 83 1 275 2 138 9 35 4 183 2 227 5 144 4 331 1 191 5 149 1 95 3 
21 1 262 1 23 1 193 1 24 1 364 2 315 2 152 1 129 2 294 2 153 1 369 5 28 2 154 2 341 1 200 1 246 5 221 1 275 2 344 2 138 8 226 1 35 2 11 2 227 1 252 5 144 2 163 1 115 6 117 3 191 1 44 1 123 5 70 1 125 1 
170 1 364 2 26 1 238 1 268 1 315 1 214 1 173 1 294 2 244 1 28 1 154 1 54 1 134 1 345 1 138 2 277 1 33 1 35 1 161 1 280 1 252 2 144 1 163 1 187 1 120 1 191 1 125 1 
162 1 11 1 252 1 144 1 28 1 154 1 246 1 83 1 138 1 35 1 
183 1 252 5 364 2 315 2 129 2 294 2 163 1 369 5 115 10 117 5 246 5 275 2 344 2 138 5 123 5 
11 1 227 1 246 1 23 1 191 1 125 1 
334 1 236 1 23 2 24 2 266 1 239 1 152 2 28 2 154 2 138 2 108 4 158 1 35 1 61 4 10 2 227 4 252 2 144 2 354 1 17 1 331 2 119 1 19 4 191 3 208 1 121 1 307 1 95 1 125 3 
237 1 26 2 48 1 214 3 173 3 174 1 367 1 80 1 245 2 272 1 29 1 134 2 274 1 223 1 345 1 108 1 33 2 323 1 61 1 349 1 10 1 281 1 113 1 354 1 286 1 187 2 119 1 305 1 360 1 19 1 307 1 95 1 
11 2 252 2 24 1 1 1 144 1 152 1 369 2 28 1 154 1 115 4 117 2 246 4 138 1 123 2 35 1 
179 1 135 1 380 1 
179 1 135 1 380 1 
179 1 240 1 347 1 297 1 380 1 
179 1 135 1 380 1 
179 1 40 1 380 1 
179 1 40 1 380 1 
179 1 40 1 380 1 
179 1 380 1 
132 1 368 1 
9 2 36 1 21 1 161 1 237 1 299 1 193 1 281 1 1 1 185 1 113 1 315 1 294 1 367 1 244 1 245 2 272 4 29 8 5 4 6 2 120 1 44 1 226 1 
21 2 237 2 193 1 1 1 315 1 129 1 294 2 367 2 244 1 245 4 272 5 29 11 5 6 6 3 295 1 344 1 226 1 9 2 36 1 161 1 299 1 281 2 185 1 113 2 120 1 44 1 69 1 94 1 
21 1 237 3 262 1 193 1 263 1 1 1 315 3 129 2 294 3 153 1 367 3 244 1 245 6 272 10 29 19 200 1 5 9 6 4 275 2 295 1 344 2 226 1 36 1 9 3 161 1 299 1 281 3 185 1 113 3 120 1 44 1 94 1 70 1 
21 1 237 3 262 1 193 1 263 1 1 1 315 2 129 2 294 3 367 3 153 1 244 1 245 6 272 7 29 17 200 1 5 10 6 5 275 1 295 1 344 2 226 1 36 1 9 3 161 1 299 1 281 3 185 1 113 3 120 1 44 1 94 2 70 1 
9 2 36 1 21 1 161 1 237 1 299 1 193 1 281 1 1 1 185 1 113 1 315 1 294 1 367 1 244 1 245 2 272 4 29 8 5 4 6 2 120 1 44 1 226 1 
21 1 237 1 262 1 193 1 315 2 129 2 294 2 367 1 153 1 245 2 272 6 29 12 200 1 5 6 6 2 275 2 344 2 226 1 9 1 281 1 185 1 113 1 44 1 94 1 70 1 
21 1 237 4 262 1 193 1 263 2 1 1 315 2 129 2 294 3 153 1 367 4 244 1 245 8 272 8 29 18 200 1 5 10 6 5 275 1 295 1 344 2 226 1 36 1 9 3 161 1 299 1 281 4 185 1 113 4 120 1 44 1 94 2 70 1 
21 1 237 4 262 1 193 1 263 2 49 1 315 2 129 3 294 3 153 1 367 4 245 8 272 7 29 16 200 1 5 9 6 6 275 2 344 3 226 1 9 3 281 4 185 1 113 4 44 1 94 3 70 1 
36 1 9 3 161 1 299 2 315 1 294 1 244 3 272 4 29 7 5 3 6 6 120 3 94 3 
21 1 237 4 262 1 193 1 263 2 1 1 49 1 315 2 129 2 294 3 153 1 367 4 244 1 245 8 272 8 29 18 200 1 5 10 6 4 275 1 344 2 226 1 36 1 9 3 161 1 299 1 281 4 185 1 113 4 120 1 44 1 94 1 70 1 
9 2 36 1 161 1 237 2 299 1 281 2 263 1 1 1 113 2 315 1 294 1 367 2 244 1 245 4 272 4 29 8 5 4 6 3 120 1 94 1 
36 1 9 2 161 1 299 1 1 1 98 1 315 1 294 1 244 1 272 3 29 6 5 3 6 2 120 1 
9 1 237 1 281 1 113 1 315 1 129 1 294 1 367 1 245 2 272 2 29 4 5 2 6 2 275 1 295 1 344 1 94 1 
9 1 21 2 193 1 315 1 129 1 294 1 272 4 29 7 5 3 6 2 275 1 344 1 69 1 226 1 94 1 
21 2 237 2 263 2 1 1 315 3 294 3 129 2 367 2 244 2 245 4 272 12 29 23 5 11 6 9 275 2 344 2 226 2 36 1 9 5 141 1 161 1 299 1 281 2 113 2 375 1 358 1 120 2 69 1 94 4 
21 1 272 1 29 1 
29 1 5 1 226 1 
183 1 9 2 237 1 281 1 113 1 315 1 129 1 294 1 367 1 245 2 272 3 29 6 5 3 6 3 275 1 295 1 344 1 94 1 
21 1 237 1 262 1 193 1 315 2 129 2 294 2 367 1 153 1 245 2 272 6 29 12 200 1 5 6 6 2 275 2 344 2 226 1 9 1 281 1 185 1 113 1 44 1 94 1 70 1 
9 1 161 1 315 1 294 1 244 1 272 3 29 6 5 3 6 2 120 1 94 1 
9 1 36 1 237 1 299 1 263 1 281 1 375 1 113 1 367 1 244 1 245 2 272 2 29 3 5 1 6 2 120 1 94 1 
9 3 161 1 237 1 281 1 185 1 113 1 315 2 294 2 367 1 244 2 245 2 272 5 29 10 5 5 6 5 120 2 277 1 94 2 
237 1 281 1 185 1 113 1 294 1 367 1 245 2 29 2 5 2 6 1 344 1 94 1 
9 1 237 1 281 1 185 1 113 1 315 1 129 1 294 1 367 1 245 2 272 2 29 4 5 2 6 2 275 1 344 1 94 1 
9 1 237 3 263 1 281 3 49 1 185 1 375 1 113 3 367 3 244 1 245 6 272 2 29 3 5 1 6 2 120 1 94 1 
21 4 237 5 193 1 263 2 1 1 49 1 315 5 129 3 294 5 367 5 244 3 245 10 272 18 29 34 5 16 6 12 275 3 295 1 344 3 226 3 8 1 36 1 9 7 161 2 299 1 281 5 256 1 185 1 375 1 113 5 330 1 120 3 69 1 94 5 
355 1 233 1 274 1 151 1 26 1 214 1 173 1 
110 1 168 1 111 1 151 1 26 1 173 1 214 1 355 1 233 1 274 1 247 1 32 1 
61 1 10 1 119 1 98 1 19 1 121 1 208 1 307 1 108 1 354 1 95 1 
323 1 61 1 10 1 26 1 48 1 354 1 173 2 214 2 187 1 134 1 274 1 305 1 119 1 18 1 19 1 307 1 108 1 95 1 
337 1 170 1 26 2 48 1 214 2 173 2 79 1 130 1 134 2 274 1 108 1 323 1 61 1 258 1 354 2 187 1 331 1 119 1 305 2 18 1 19 1 307 3 95 1 
337 1 170 1 26 2 48 1 214 2 173 2 79 1 130 1 134 2 274 1 108 2 61 2 38 1 258 1 354 2 187 1 331 1 146 1 119 1 305 2 18 1 19 2 307 3 95 1 
96 1 365 1 243 1 53 1 79 1 246 1 108 3 61 3 10 1 11 1 227 1 258 1 259 1 354 1 331 1 146 1 119 1 305 1 19 3 191 2 307 4 95 1 125 2 
61 3 96 1 10 1 11 1 227 1 258 1 259 1 354 1 53 1 198 1 79 1 331 1 146 1 246 1 305 1 119 1 19 3 191 2 307 4 108 3 95 1 125 2 
61 1 119 1 290 1 19 1 108 1 95 1 
72 1 61 7 10 2 46 1 64 1 290 1 66 1 50 1 354 2 176 1 305 1 119 3 19 6 332 1 207 1 20 1 307 3 108 7 348 1 95 2 159 1 
150 1 237 2 1 1 48 1 294 1 244 1 245 4 5 3 6 2 108 1 159 1 9 2 61 1 349 2 161 1 299 1 113 2 354 1 119 1 305 1 18 1 360 2 19 1 120 1 307 1 308 1 26 1 315 1 173 2 214 2 174 1 367 2 272 3 134 1 29 6 274 2 323 1 36 1 143 1 281 2 184 1 325 1 286 1 87 1 187 1 333 1 95 1 
334 1 96 1 23 1 2 1 53 1 28 2 198 1 154 2 246 1 371 1 83 1 138 1 108 1 35 2 61 1 162 1 10 1 11 1 227 2 252 1 144 2 302 1 259 1 19 1 191 3 307 2 125 3 381 1 
96 1 61 2 290 1 196 1 354 1 305 1 119 2 19 2 307 2 108 2 348 1 95 1 159 1 
61 4 10 1 354 1 146 1 119 1 19 4 208 1 121 1 307 1 108 4 95 1 278 1 159 1 
72 1 61 2 0 1 324 1 326 1 354 1 331 1 305 1 119 2 19 2 207 1 307 1 108 2 95 1 
377 1 142 1 61 1 10 1 175 1 119 1 19 1 108 1 298 1 95 1 
61 2 354 1 176 1 119 1 19 2 332 1 167 1 307 1 108 2 95 1 159 1 
61 5 10 1 46 1 354 2 331 1 176 1 119 2 19 4 121 1 208 1 307 3 20 1 108 5 95 2 278 1 159 1 
61 5 10 1 354 2 331 1 205 1 176 1 119 2 19 4 121 1 208 1 307 3 20 1 108 5 95 2 278 1 159 1 
61 1 10 1 26 1 48 1 38 1 354 1 173 2 214 2 187 1 134 1 274 1 305 1 119 1 18 1 19 1 307 1 108 1 95 1 
72 1 61 1 64 1 354 1 331 1 305 1 119 2 19 1 207 1 307 1 108 1 348 1 95 1 
55 1 260 1 218 1 26 1 51 1 3 1 214 1 173 1 27 1 
363 1 260 1 292 1 
274 1 218 1 260 1 122 1 27 1 
11 1 337 1 170 1 363 1 292 1 259 1 39 1 230 1 27 2 130 1 246 1 274 1 260 1 218 2 191 2 122 2 381 1 125 2 182 1 
219 1 112 1 261 1 98 1 
357 1 219 1 112 1 261 1 165 1 47 1 178 1 
127 1 178 1 270 1 
250 2 112 1 47 1 357 3 219 1 189 1 165 1 261 1 178 3 322 1 45 1 34 1 
357 2 219 1 104 1 112 1 261 1 165 1 47 1 178 2 197 1 
336 1 142 1 47 1 112 1 357 1 131 1 175 1 321 1 189 1 165 1 178 1 
357 1 219 1 112 1 165 1 47 1 189 1 178 1 
357 1 219 2 261 1 165 1 47 1 189 1 178 1 
112 1 47 2 357 2 319 1 145 1 219 1 220 1 189 1 165 2 178 2 
336 1 311 1 47 1 265 1 112 2 197 2 357 3 219 1 261 1 189 1 165 1 188 1 178 3 
142 1 362 1 112 1 47 1 25 1 197 1 377 1 357 2 175 2 219 1 321 1 261 1 189 1 165 1 178 2 
336 1 47 2 112 2 197 2 357 4 164 1 219 1 104 1 261 1 189 1 165 2 188 1 178 4 
357 1 219 1 112 1 261 1 165 1 47 1 189 1 178 1 
336 1 250 1 47 1 112 3 197 2 357 4 88 1 219 2 261 2 165 1 188 1 178 4 322 1 45 1 
112 1 47 1 213 1 197 1 317 1 357 2 219 1 189 1 165 1 261 1 178 2 225 1 
250 2 112 1 47 1 357 3 219 1 189 1 165 1 261 1 178 3 322 1 45 2 7 1 
114 2 67 1 112 2 313 1 
357 1 73 1 165 1 47 1 189 1 178 1 
357 2 219 1 112 1 261 1 265 1 165 1 47 1 189 1 178 2 197 1 
359 1 
357 1 219 1 112 1 261 1 165 1 47 1 189 1 178 1 
357 3 250 1 219 1 265 1 112 1 261 1 165 1 47 1 189 1 178 3 197 1 
336 1 88 1 112 1 188 1 
219 1 112 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 106 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 305 1 138 2 164 1 98 6 197 3 125 1 27 1 263 1 50 2 341 5 31 2 32 1 217 1 316 1 276 1 347 9 131 2 110 2 83 1 349 9 85 1 377 4 285 1 183 2 115 1 137 1 381 2 
21 1 305 1 138 2 164 1 98 6 197 3 125 1 27 1 263 1 50 2 341 5 31 2 32 1 217 1 316 1 276 1 347 9 131 2 110 2 83 1 349 9 85 1 377 4 285 1 183 2 115 1 137 1 381 2 
21 1 305 1 138 2 164 1 98 7 197 4 125 1 27 1 263 1 50 2 341 6 31 2 32 1 217 1 316 1 276 1 347 10 131 2 110 2 83 1 349 10 85 1 377 5 285 1 183 2 115 1 137 1 381 2 
305 1 138 2 164 1 98 4 197 2 125 1 27 1 263 1 50 1 341 4 31 2 32 1 217 1 316 1 276 1 347 7 131 2 110 2 83 1 349 7 85 1 377 3 285 1 183 2 115 1 137 1 381 2 
21 1 138 1 276 1 347 4 98 3 110 1 197 1 349 4 125 1 27 1 377 2 50 2 341 3 31 1 183 1 115 1 137 1 381 1 
138 1 334 1 96 1 347 2 131 1 349 2 125 1 27 1 39 1 341 1 32 1 31 1 183 1 285 1 137 1 381 1 
347 3 98 1 131 1 349 3 197 1 125 1 27 1 263 1 377 1 341 2 31 2 183 2 137 1 
21 1 138 1 98 7 197 3 125 1 27 1 263 1 50 2 341 5 267 1 31 2 217 1 316 1 301 1 276 1 347 9 131 1 110 1 349 9 377 4 183 2 115 1 137 1 381 1 
21 1 138 1 98 7 197 3 125 1 27 1 263 1 50 2 341 5 267 1 31 2 217 1 316 1 301 1 276 1 347 9 131 1 110 1 349 9 377 4 183 2 115 1 137 1 381 1 
106 1 
333 1 284 2 34 1 
270 2 307 2 161 2 220 2 321 2 36 2 323 1 311 1 
0 1 355 1 306 2 307 2 231 1 161 3 188 1 99 1 311 1 25 1 124 1 46 1 101 1 364 1 71 1 243 1 7 1 168 1 53 1 201 1 10 2 298 1 270 2 220 3 175 1 300 2 275 1 320 1 321 2 36 2 279 2 281 1 376 1 323 1 132 2 17 1 113 1 
270 1 307 1 161 1 220 1 81 1 277 1 321 1 205 1 36 1 311 1 
173 1 220 1 161 1 221 1 149 1 67 1 14 1 36 1 205 1 177 1 238 1 134 1 329 1 34 1 
307 1 270 1 67 2 220 1 161 1 221 1 149 2 321 1 36 1 205 1 177 1 238 1 134 1 329 1 34 1 
67 1 149 1 79 1 256 1 245 1 
90 1 28 1 67 2 149 2 256 1 329 1 34 1 245 1 
67 1 149 1 256 1 
307 1 270 1 149 1 67 1 220 1 161 1 81 1 277 1 321 1 205 1 36 1 311 1 59 1 245 1 
34 1 
90 1 67 2 149 2 344 1 256 1 329 1 34 1 245 1 
160 1 90 1 269 1 9 2 315 2 1 1 299 2 149 5 67 5 255 1 256 2 13 1 237 1 313 1 329 1 368 1 34 1 245 2 170 1 
298 1 10 1 270 1 220 2 161 2 188 1 300 1 321 1 36 1 279 1 210 1 376 1 25 1 239 1 46 1 113 1 168 1 53 1 304 1 201 1 
106 1 
307 1 270 1 220 2 161 2 373 1 321 1 36 2 323 2 102 1 
365 1 176 1 210 1 
298 1 10 1 161 1 220 1 188 1 273 1 300 1 279 1 376 1 323 1 25 1 46 1 113 1 168 1 53 1 201 1 
65 1 270 4 307 1 220 5 161 5 321 4 14 1 36 5 193 1 323 1 143 1 239 1 102 1 304 2 
111 1 270 2 161 2 220 2 277 1 321 2 205 1 36 2 
307 1 270 3 161 3 220 3 321 3 36 3 304 1 323 1 
270 1 161 1 220 1 277 1 321 1 205 1 36 1 
270 1 307 1 161 1 220 1 102 1 373 1 321 1 205 1 36 1 
0 1 306 1 307 2 188 1 161 4 67 1 99 1 311 1 25 1 239 1 238 1 124 1 46 1 101 1 102 1 71 1 243 1 127 1 168 1 53 1 201 1 298 1 10 1 270 3 220 4 221 1 149 1 175 1 300 1 275 1 320 1 321 3 36 3 205 1 177 1 279 1 376 1 323 1 132 2 325 1 17 1 134 1 113 1 304 1 
65 1 270 1 161 2 220 2 321 1 14 1 36 2 304 1 323 1 
307 1 270 3 67 1 149 1 220 3 161 3 221 1 321 3 177 1 205 1 36 3 239 1 238 1 102 1 295 1 127 1 134 1 34 1 304 2 
307 1 270 2 220 2 161 2 321 2 36 2 210 1 365 1 102 1 304 1 
298 1 10 1 161 1 220 1 188 1 300 1 279 1 376 1 323 1 25 1 46 1 113 1 168 1 53 1 201 1 
298 1 10 1 161 1 220 1 92 1 300 1 279 1 24 1 376 1 323 1 25 1 46 1 168 1 53 1 201 1 
0 1 306 4 121 1 257 1 233 1 99 1 210 2 124 2 47 1 365 2 71 1 246 1 314 1 175 1 176 2 274 1 275 1 320 1 281 2 178 1 132 2 182 1 330 1 45 1 
238 1 270 1 111 1 161 1 220 1 321 1 205 1 36 1 
11 1 204 1 
11 1 204 1 
194 1 202 1 
194 1 202 1 
194 1 202 1 
11 1 204 1 135 1 
11 1 204 1 135 1 
11 1 204 1 375 1 
11 2 2 1 204 2 163 1 194 1 202 1 
11 1 204 1 135 1 
11 1 296 1 204 1 
11 1 296 1 204 1 
11 1 296 1 204 1 
22 1 67 1 161 2 312 1 293 1 72 1 167 1 242 1 172 1 270 2 11 1 371 1 149 1 220 2 272 1 204 1 321 2 36 2 55 1 375 1 323 1 16 1 354 1 118 1 
11 2 371 1 189 1 149 2 67 2 204 2 163 1 3 2 16 2 4 1 224 1 126 1 167 2 242 2 41 1 215 1 34 1 354 2 118 3 
138 1 110 1 381 1 
138 1 334 1 381 1 
338 1 138 3 334 1 54 1 294 1 110 2 
338 1 138 2 334 1 54 1 52 1 110 1 
338 2 138 2 334 1 54 1 110 1 
22 1 160 1 90 1 333 1 1 3 67 5 255 2 121 1 256 1 208 1 233 1 259 2 312 1 339 2 146 1 72 1 34 2 245 4 9 1 369 2 315 1 299 1 149 5 274 1 152 1 374 1 178 1 155 1 303 1 284 3 329 1 380 1 
90 1 160 1 333 3 1 8 67 9 255 6 121 3 256 6 233 3 259 6 144 1 339 6 146 2 72 4 216 1 200 1 34 5 245 7 269 1 9 2 370 5 315 2 299 2 149 9 79 5 274 3 152 3 374 1 178 3 326 1 284 9 351 1 352 1 329 1 380 2 
333 2 1 3 67 3 255 2 208 1 121 1 233 1 259 2 339 2 146 1 72 1 34 3 245 2 269 1 9 1 369 1 315 1 299 1 149 3 274 1 152 1 178 1 303 1 284 4 329 1 380 1 
333 3 1 5 67 4 255 4 208 1 121 2 233 2 259 4 144 1 339 4 146 1 72 2 216 1 34 4 245 3 269 1 9 1 369 2 315 1 299 1 149 4 274 2 152 2 178 2 303 1 284 7 351 1 329 1 380 1 
106 1 
280 1 376 1 
108 1 
53 1 376 1 201 1 
361 1 376 1 
376 1 201 1 
198 2 43 1 53 1 376 3 201 1 332 1 
129 1 306 7 271 1 162 1 121 1 318 1 302 1 82 1 233 1 281 4 124 3 47 3 180 1 84 2 182 2 207 1 116 1 
129 1 306 7 271 1 162 1 121 1 318 1 302 1 82 1 233 1 281 4 124 3 47 3 180 1 84 2 182 2 207 1 116 1 
129 1 306 7 271 1 162 1 121 1 318 1 302 1 82 1 233 1 281 4 124 3 47 3 180 1 84 2 181 1 182 2 116 1 207 1 
0 1 306 31 230 1 162 2 336 1 121 4 99 1 233 4 69 1 124 15 47 10 74 3 30 1 8 4 35 1 129 1 219 1 271 2 175 1 318 2 275 1 274 3 302 1 152 3 82 5 281 16 178 3 132 2 84 3 180 2 379 1 182 5 116 1 207 1 
0 2 306 9 162 1 121 1 233 1 99 2 124 4 47 4 48 1 219 1 271 1 175 2 275 2 318 1 302 1 82 1 281 5 132 4 84 2 180 1 182 3 207 1 116 1 117 1 
138 2 288 1 334 1 98 1 165 1 211 1 25 1 125 1 27 1 46 1 294 1 104 1 366 1 103 1 341 1 31 1 77 1 10 1 300 1 279 1 347 2 130 1 131 1 110 1 349 2 158 1 183 1 137 1 381 1 185 1 
138 2 288 1 334 1 98 2 165 1 234 1 211 1 25 1 125 1 46 1 212 1 294 1 103 1 341 1 31 1 77 1 10 1 300 1 279 1 347 3 130 1 131 1 109 1 110 1 349 3 158 1 183 1 137 1 381 1 185 1 
138 2 288 1 334 1 98 2 165 1 234 1 211 1 25 1 125 1 46 1 294 1 103 1 341 1 10 1 300 1 279 1 347 2 130 1 131 1 109 1 110 1 349 2 137 1 185 1 381 1 
89 1 298 1 10 1 288 2 300 1 12 1 347 1 279 1 131 2 165 2 348 1 376 1 25 1 260 1 349 1 46 1 212 1 159 1 31 1 183 1 201 1 228 1 185 2 
138 2 288 1 334 1 165 1 234 1 211 1 25 1 27 1 46 1 294 1 366 1 103 1 31 1 77 1 10 1 300 1 279 1 347 1 130 1 131 1 110 1 349 1 158 1 183 1 381 1 185 1 
262 1 
90 3 333 2 1 2 94 1 93 1 335 1 141 1 236 1 337 1 238 1 46 1 199 1 147 1 297 1 201 1 9 1 298 2 10 2 299 1 149 5 300 2 14 1 205 1 250 4 253 1 61 2 114 2 159 1 62 1 160 1 254 2 67 5 161 1 255 2 256 6 309 2 261 1 25 1 73 2 34 2 315 1 173 1 220 1 221 1 279 2 36 1 177 1 376 1 284 2 134 1 329 1 227 2 44 2 380 1 228 1 
90 1 161 1 67 3 335 1 256 2 141 1 238 1 199 1 147 1 173 1 220 1 149 3 221 1 344 1 36 1 14 1 205 1 177 1 250 2 134 1 62 1 227 1 
90 1 161 1 67 3 256 1 335 1 141 1 238 1 199 1 73 1 147 1 34 1 173 1 220 1 149 3 221 1 344 1 36 1 14 1 205 1 177 1 250 3 134 1 62 1 329 1 
90 1 161 1 67 3 335 1 256 2 141 1 238 1 199 1 73 1 147 1 34 1 173 1 220 1 149 3 221 1 344 1 36 1 14 1 205 1 177 1 250 3 134 1 62 1 329 1 227 1 44 1 
90 3 333 2 1 1 93 1 335 1 141 1 236 1 238 1 199 1 147 1 9 1 299 1 149 5 344 1 205 1 14 1 250 6 252 1 61 2 114 2 62 1 160 1 356 1 254 2 161 1 67 5 255 1 256 7 309 2 73 4 34 5 173 1 315 1 221 1 220 1 372 1 177 1 36 1 38 1 133 1 134 1 329 5 227 4 44 4 
90 2 333 2 1 1 93 1 335 1 141 1 236 1 238 1 199 1 147 1 9 1 299 1 149 4 205 1 14 1 250 4 253 1 61 2 114 2 62 1 160 1 254 2 161 1 67 4 255 1 256 4 309 2 73 2 34 2 315 1 173 1 221 1 220 1 177 1 36 1 284 2 134 1 329 1 227 2 44 2 
90 2 160 1 333 2 254 2 1 1 161 1 67 4 93 1 255 1 256 4 335 1 309 2 141 1 236 1 238 1 199 1 73 2 34 1 147 1 9 1 173 1 315 1 299 1 220 1 149 4 221 1 372 1 36 1 14 1 205 1 177 1 250 4 133 1 252 1 61 2 134 1 114 2 329 1 62 1 227 2 44 2 
90 2 160 1 333 2 254 2 1 1 161 1 67 4 93 1 255 1 256 4 335 1 309 2 141 1 236 1 238 1 199 1 73 2 34 1 147 1 9 1 173 1 315 1 299 1 220 1 149 4 221 1 372 1 36 1 14 1 205 1 177 1 250 4 133 1 252 1 61 2 134 1 114 2 329 1 62 1 227 2 44 2 
90 2 160 1 1 1 161 1 67 4 190 1 255 1 256 4 335 1 309 2 141 1 209 1 236 1 238 1 199 1 73 2 6 2 34 1 147 1 9 1 173 1 315 1 299 1 220 1 149 4 221 1 372 1 36 1 14 1 205 1 177 1 250 4 223 2 86 1 284 2 134 1 114 2 329 1 62 1 227 2 44 2 
90 2 160 1 333 2 254 2 356 1 1 1 161 1 67 4 93 1 255 1 335 1 256 5 309 2 141 1 236 1 238 1 199 1 73 3 34 1 147 1 9 1 315 1 173 1 299 1 220 1 149 4 221 1 372 1 36 1 14 1 205 1 177 1 250 5 133 1 252 1 61 2 134 1 114 2 329 1 62 1 227 3 44 3 
90 2 160 1 333 2 254 2 356 1 1 1 161 1 67 4 93 1 255 1 335 1 256 5 309 2 141 1 236 1 238 1 199 1 73 3 34 1 147 1 9 1 315 1 173 1 299 1 220 1 149 4 221 1 372 1 36 1 14 1 205 1 177 1 250 5 133 1 252 1 61 2 134 1 114 2 329 1 62 1 227 3 44 3 
90 2 1 1 335 1 141 1 236 1 238 1 199 1 6 2 147 1 9 1 299 1 149 4 205 1 14 1 250 4 253 1 114 2 62 1 160 1 161 1 67 4 255 1 256 4 309 2 73 2 34 1 315 1 173 1 221 1 220 1 177 1 36 1 223 2 86 1 284 2 134 1 329 1 227 2 44 2 
106 1 246 1 132 2 0 1 71 1 175 1 275 1 320 1 99 1 
0 2 306 14 231 1 291 1 121 2 99 2 233 1 210 11 124 6 47 2 365 4 71 1 74 3 243 1 35 1 8 3 169 1 175 2 176 11 275 2 274 1 152 2 82 1 320 2 281 8 323 1 178 2 132 4 60 1 206 1 182 1 379 1 226 1 
0 1 306 2 188 1 161 2 231 1 291 1 99 1 25 1 239 1 46 1 124 1 365 1 49 1 71 1 29 1 243 1 168 1 53 1 201 1 76 1 10 1 298 1 270 1 220 2 300 1 273 1 175 1 275 1 320 1 321 1 279 1 36 1 376 1 281 1 323 1 132 2 113 1 304 1 
0 3 231 1 188 2 291 1 192 2 233 3 99 3 234 1 239 1 46 2 47 8 243 1 244 1 53 2 201 2 10 3 298 1 151 2 300 3 302 1 152 2 17 2 113 2 304 1 116 1 207 1 306 20 161 3 162 1 121 3 210 7 25 2 124 10 365 7 71 3 168 2 270 1 220 3 175 3 176 7 318 1 275 3 274 2 321 1 320 3 82 4 279 3 36 1 222 2 376 2 281 10 323 2 178 2 132 6 84 1 40 1 182 4 286 1 88 2 
0 2 355 2 306 2 161 1 231 1 95 1 97 1 99 2 234 1 258 1 360 1 25 2 46 2 124 1 71 2 104 1 243 1 214 1 201 2 246 1 10 8 298 2 270 1 220 1 300 7 175 2 275 2 153 1 321 1 320 2 36 1 279 8 376 3 281 1 132 4 58 1 159 1 304 1 228 1 
0 1 307 1 306 3 161 1 291 1 121 1 99 1 233 1 210 1 124 2 47 1 365 1 102 1 241 1 71 1 270 1 220 1 176 1 175 1 275 1 274 1 152 1 320 1 321 1 36 1 281 1 178 1 132 2 182 1 
246 1 0 1 306 2 176 1 175 1 275 1 121 1 82 1 320 1 257 1 99 1 210 1 281 2 178 1 47 1 132 2 365 1 71 1 
246 1 314 1 0 1 306 2 176 1 175 1 275 1 274 1 320 1 99 1 233 1 210 1 124 2 47 1 132 2 365 1 71 1 182 1 
0 1 306 4 121 1 99 1 233 1 210 2 124 2 47 2 365 2 71 1 246 1 175 1 176 2 275 1 274 1 152 1 320 1 82 1 281 2 178 1 132 2 182 1 
0 1 306 2 176 1 175 1 275 1 121 1 82 1 320 1 257 1 99 1 210 1 258 1 281 2 178 1 47 1 132 2 365 1 71 1 
314 1 0 1 306 2 176 1 175 1 275 1 274 1 320 1 99 1 233 1 210 1 258 1 124 2 47 1 132 2 365 1 71 1 182 1 
0 1 306 4 121 1 99 1 233 1 258 1 210 2 124 2 47 2 365 2 71 1 175 1 176 2 275 1 274 1 152 1 320 1 82 1 281 2 178 1 132 2 182 1 
0 1 306 4 176 2 175 1 274 1 275 1 121 1 152 1 82 1 320 1 233 1 99 1 210 2 281 2 178 1 124 2 47 2 132 2 365 2 71 1 182 1 
0 1 306 2 231 1 188 1 161 1 99 1 25 1 46 1 124 1 71 1 243 1 168 1 53 1 201 1 10 1 298 1 220 1 300 1 175 1 275 1 320 1 279 1 281 1 376 1 323 1 132 2 17 1 113 1 
0 1 306 2 231 1 92 1 161 1 99 1 24 1 25 1 46 1 124 1 71 1 243 1 168 1 53 1 201 1 10 1 298 1 342 1 220 1 300 1 175 1 275 1 320 1 279 1 281 1 376 1 323 1 132 2 
0 1 306 4 291 1 121 1 99 1 233 1 210 2 124 2 47 2 365 2 71 1 175 1 176 2 275 1 274 1 152 1 320 1 82 1 281 2 178 1 132 2 182 1 
0 1 306 4 188 1 161 1 121 1 233 1 99 1 210 2 25 1 124 2 46 1 47 2 365 2 71 1 104 1 168 1 53 1 201 1 10 1 220 1 176 2 300 1 175 1 274 1 275 1 152 1 82 1 320 1 279 1 281 2 376 1 178 1 132 2 17 1 182 1 113 1 88 1 
0 1 307 1 306 3 161 1 68 1 291 1 121 1 233 1 99 1 210 1 124 1 47 1 365 1 102 1 71 1 270 1 220 1 175 1 176 1 274 1 275 1 152 1 82 1 320 1 321 1 36 1 281 2 178 1 132 2 
287 1 119 1 91 1 0 3 66 1 306 41 289 1 162 1 121 5 123 1 99 3 233 5 195 1 196 1 166 1 124 21 47 8 74 3 8 4 35 3 219 1 175 3 318 1 275 3 274 4 302 1 319 1 152 4 154 1 82 4 281 20 178 4 132 6 84 1 283 4 182 4 379 1 18 2 331 1 116 1 207 1 184 1 117 1 
287 1 119 1 91 1 0 4 66 1 306 38 289 1 162 1 121 5 123 1 99 4 233 4 195 1 196 1 166 1 124 18 47 7 74 3 8 4 35 3 219 2 175 4 318 1 275 4 274 3 302 1 319 1 152 4 154 1 82 3 281 20 178 4 132 8 84 1 283 4 182 4 379 1 18 2 331 1 116 1 207 1 184 1 117 1 
287 1 119 1 91 1 0 2 66 1 306 52 162 1 121 8 123 1 99 2 233 8 195 1 166 1 124 25 47 14 74 4 8 4 35 2 219 1 175 2 318 1 275 2 274 7 302 1 319 1 152 7 154 1 82 7 281 27 178 7 132 4 84 1 283 4 182 7 379 2 18 1 226 2 331 1 116 1 207 1 184 1 117 1 
119 1 0 2 66 1 306 19 289 1 121 3 123 2 99 2 233 3 124 10 47 6 74 1 8 2 35 1 175 2 275 2 274 3 319 1 152 3 278 1 154 1 82 3 281 9 178 3 132 4 283 2 182 3 379 1 18 1 117 1 
287 1 119 1 0 3 91 1 66 1 306 26 121 3 123 1 233 2 99 3 195 1 124 12 166 1 47 4 74 2 35 2 8 2 219 2 175 3 275 3 274 2 319 2 152 3 82 2 154 1 281 14 178 3 132 6 283 4 182 2 18 2 331 1 184 1 117 1 
16 1 363 1 11 1 126 1 167 1 242 1 204 1 163 1 215 1 354 1 
172 1 375 1 
16 1 11 1 80 1 167 1 242 1 204 1 33 1 354 1 15 1 
350 1 135 1 
2 1 213 1 296 1 
371 1 11 1 189 1 149 1 67 1 204 1 163 1 3 1 16 1 4 1 126 1 167 1 242 1 41 1 215 1 34 1 354 1 118 2 
371 1 11 1 189 1 149 1 67 1 204 1 163 1 3 1 16 1 4 1 126 1 167 1 242 1 41 1 215 1 34 1 354 1 118 2 
371 1 11 1 189 1 149 1 67 1 204 1 163 1 3 1 16 1 4 1 126 1 167 1 242 1 41 1 215 1 34 1 354 1 118 2 
2 1 350 1 135 1 
2 1 350 1 135 1 
213 1 296 1 
2 1 213 1 296 1 
272 1 293 1 
22 1 161 2 67 1 3 1 100 1 312 1 293 1 72 1 167 1 242 1 245 1 172 1 11 1 270 2 220 2 149 1 272 1 204 1 321 2 55 1 36 2 375 1 323 1 16 1 41 1 354 1 118 1 
0 1 355 2 306 2 161 2 232 1 231 1 95 1 291 1 310 1 99 1 360 1 25 1 46 1 124 1 71 1 243 1 201 1 10 2 220 2 175 1 300 2 275 1 203 1 320 1 279 2 36 2 376 1 281 1 56 1 132 2 42 1 
138 2 10 2 334 1 358 1 300 2 279 2 165 1 234 1 110 1 211 1 25 1 46 1 26 1 294 1 104 1 103 1 158 1 381 1 268 1 
138 2 10 1 334 1 120 1 300 1 279 1 165 1 234 1 110 1 211 1 25 1 26 1 46 1 294 1 103 1 158 1 381 1 
298 1 10 1 300 1 292 1 279 1 165 1 376 1 25 1 260 1 46 1 159 1 201 1 228 1 268 1 
138 2 10 1 334 1 358 1 300 1 279 1 165 1 234 1 110 1 211 1 25 1 46 1 26 1 294 1 103 1 158 1 381 1 268 1 
107 1 
106 1 
160 1 90 1 333 1 254 1 1 1 67 1 93 1 255 1 256 1 34 2 9 1 315 1 299 1 149 1 284 1 61 1 329 1 
90 3 333 6 1 9 94 1 290 1 192 2 233 2 235 2 46 4 198 2 339 6 104 1 53 3 201 3 9 4 298 1 10 3 148 2 299 4 149 5 300 3 346 1 152 2 160 4 67 5 357 1 23 2 255 8 256 5 121 2 122 2 259 6 25 3 361 2 313 1 266 1 368 1 75 2 34 8 218 2 315 4 274 2 279 3 177 2 280 3 376 10 178 2 378 2 284 12 225 1 329 2 87 2 380 2 332 1 
287 1 90 1 160 2 333 3 91 1 1 8 67 1 94 1 23 1 255 5 256 1 121 2 233 2 195 1 259 5 362 1 166 1 339 5 240 1 74 1 34 5 8 1 35 1 9 2 315 2 299 2 149 1 274 2 152 2 178 2 378 2 284 6 329 2 380 1 184 1 
160 1 229 1 1 2 307 1 161 1 67 1 23 1 162 1 255 2 121 2 233 1 311 1 9 1 315 1 299 1 270 1 220 1 149 1 318 1 81 1 302 1 277 1 321 1 205 1 36 1 252 1 59 1 378 2 
160 1 9 1 315 1 299 1 1 1 255 1 313 1 368 1 329 1 34 1 
333 5 1 5 23 1 255 5 121 2 274 2 152 2 192 1 233 2 259 5 178 2 339 5 378 2 284 10 34 5 
90 1 67 1 149 1 256 1 329 1 34 1 
160 1 90 2 1 2 67 3 94 2 255 2 290 2 256 4 337 1 25 1 261 1 46 1 201 1 269 1 9 2 315 2 10 4 298 2 299 2 149 3 300 4 345 1 279 4 376 1 225 1 159 1 380 2 228 1 20 1 
0 1 306 1 307 2 161 3 188 1 99 1 311 1 25 1 124 1 46 1 101 1 71 1 243 1 168 1 53 1 201 1 10 1 298 1 270 2 220 3 175 1 300 1 275 1 321 2 320 1 279 1 36 2 376 1 323 1 132 2 17 1 113 1 
160 1 9 1 333 2 315 1 299 1 1 1 94 1 255 2 259 2 339 2 84 1 284 4 329 2 34 4 380 1 
16 1 167 1 142 1 
16 1 167 1 142 1 
16 1 272 1 343 1 126 1 167 1 
16 1 167 1 142 1 
16 1 187 1 167 1 
16 1 187 1 167 1 
16 1 187 1 167 1 
16 1 167 1 
11 1 204 1 
0 1 306 8 162 1 121 1 233 1 99 1 124 4 166 1 47 2 74 1 8 1 35 1 175 1 275 1 318 1 302 1 281 4 132 2 84 1 182 2 207 1 116 1 117 1 
0 2 306 11 162 1 121 2 233 1 99 2 124 5 166 1 47 3 74 1 265 1 8 2 35 1 175 2 318 1 275 2 302 1 152 1 82 1 281 6 178 1 132 4 84 1 182 2 379 1 116 1 207 1 117 1 
287 1 0 3 91 1 306 19 162 1 121 3 99 3 233 3 195 1 124 10 166 1 47 4 74 1 265 1 8 1 35 1 219 1 175 3 318 1 275 3 274 2 302 1 152 2 82 1 281 9 178 2 132 6 84 1 182 3 116 1 207 1 184 1 117 1 
287 1 0 3 91 1 306 17 162 1 121 3 99 3 233 2 195 1 124 7 166 1 47 5 74 1 265 1 8 1 35 1 219 1 175 3 318 1 275 3 274 1 302 1 152 2 82 2 281 10 178 2 132 6 84 1 182 3 116 1 207 1 184 1 117 1 
0 1 306 8 162 1 121 1 233 1 99 1 124 4 166 1 47 2 74 1 8 1 35 1 175 1 275 1 318 1 302 1 281 4 132 2 84 1 182 2 207 1 116 1 117 1 
287 1 91 1 0 1 306 12 175 1 274 2 121 2 275 1 152 2 82 1 233 2 99 1 195 1 281 6 178 2 166 1 124 6 47 2 132 2 74 1 182 1 35 1 8 1 184 1 117 1 
287 1 0 4 91 1 306 18 162 1 121 3 99 4 233 2 195 1 124 8 166 1 47 5 74 1 265 1 8 1 35 1 219 2 175 4 318 1 275 4 274 1 302 1 152 2 82 2 281 10 178 2 132 8 84 1 182 3 116 1 207 1 184 1 117 1 
287 1 0 4 91 1 306 16 289 1 121 3 99 4 233 2 195 1 124 7 166 1 47 6 74 1 8 1 35 1 219 2 175 4 275 4 274 2 152 3 82 3 281 9 178 3 132 8 182 3 184 1 117 1 
306 7 162 3 318 3 121 1 302 1 82 3 233 1 281 3 124 4 47 6 182 3 207 1 116 2 
287 1 0 4 91 1 306 18 289 1 162 1 121 3 99 4 233 2 195 1 124 8 166 1 47 4 74 1 8 1 35 1 219 2 175 4 318 1 275 4 274 1 302 1 152 2 82 1 281 10 178 2 132 8 84 1 182 3 116 1 207 1 184 1 117 1 
0 2 306 8 219 1 162 1 175 2 121 1 275 2 318 1 302 1 82 1 233 1 99 2 281 4 124 4 47 3 132 4 84 1 182 2 207 1 116 1 
106 1 
0 1 306 4 175 1 274 1 275 1 121 1 152 1 82 1 233 1 99 1 281 2 178 1 124 2 47 2 132 2 182 1 265 1 
306 7 274 1 121 1 152 1 82 1 233 1 281 3 178 1 124 4 47 2 74 1 182 1 379 1 35 1 8 2 
0 2 306 23 162 2 121 3 233 3 99 2 124 12 47 9 74 2 8 2 169 1 219 2 175 2 318 2 274 2 275 2 302 1 152 2 82 4 281 11 178 2 132 4 84 1 156 1 379 1 182 5 226 1 116 1 207 1 
124 1 306 1 8 1 
306 1 74 1 281 1 
0 1 306 6 175 1 275 1 121 1 274 1 152 1 192 1 82 1 99 1 233 1 281 3 178 1 124 3 132 2 47 3 265 1 182 2 
287 1 91 1 0 1 306 12 175 1 274 2 121 2 275 1 152 2 82 1 233 2 99 1 195 1 281 6 178 2 166 1 124 6 47 2 132 2 74 1 182 1 35 1 8 1 184 1 117 1 
306 6 162 1 121 1 318 1 302 1 82 1 233 1 281 3 124 3 47 2 182 1 
0 1 306 3 219 1 162 1 175 1 318 1 275 1 82 1 99 1 281 1 124 2 47 2 132 2 156 1 182 1 116 1 207 1 
0 1 229 1 306 10 162 2 175 1 275 1 318 2 121 2 302 1 82 2 99 1 233 2 281 5 124 5 132 2 47 5 182 3 117 1 
0 1 306 2 175 1 275 1 121 1 82 1 99 1 281 2 178 1 132 2 47 1 117 1 
0 1 306 4 175 1 274 1 275 1 121 1 152 1 82 1 233 1 99 1 281 2 178 1 124 2 47 2 132 2 182 1 117 1 
0 3 219 1 306 3 289 1 162 1 175 3 275 3 318 1 82 1 99 3 281 1 124 2 132 6 47 2 156 1 182 1 117 1 
0 5 306 34 230 1 289 1 162 3 336 1 121 5 99 5 233 5 69 1 124 18 47 12 74 3 265 1 8 4 35 1 219 2 175 5 318 3 275 5 274 3 302 2 152 3 82 5 281 16 178 3 132 10 84 1 156 1 379 1 182 7 116 1 207 1 117 1 
251 1 65 1 161 1 220 1 36 1 14 1 323 1 
186 1 65 1 220 1 161 1 14 1 36 1 323 1 251 1 112 1 327 1 128 1 136 1 
106 1 10 1 298 1 300 1 279 1 
298 1 10 1 270 1 220 2 161 2 300 1 321 1 36 1 279 1 376 1 323 1 25 1 46 1 113 1 168 1 53 1 304 1 201 1 
10 1 270 1 221 1 220 2 161 2 290 1 300 1 321 2 205 1 36 2 279 1 376 3 323 1 238 1 25 1 361 1 46 1 113 1 168 1 53 2 304 1 218 1 201 2 
92 1 161 2 290 1 25 1 238 1 145 1 46 1 361 1 168 1 53 2 201 2 218 1 10 2 270 1 220 2 221 1 300 2 321 2 279 2 36 2 205 1 376 3 323 1 304 1 
67 2 290 1 256 1 25 1 145 1 46 1 361 1 198 1 5 1 53 1 34 1 218 1 201 1 10 3 298 1 149 2 300 3 279 3 177 1 280 1 376 4 57 1 329 1 
298 1 10 3 149 2 67 2 290 1 300 3 256 1 177 1 279 3 280 1 235 1 376 4 25 1 145 1 361 1 46 1 198 1 329 1 34 1 53 1 201 1 218 1 
25 1 46 1 10 1 300 1 97 1 279 1 
355 1 298 2 10 7 64 1 95 1 300 6 359 1 97 1 153 1 279 7 234 1 376 3 25 2 46 3 70 1 58 1 104 1 214 1 53 1 201 2 332 1 
0 2 306 6 161 2 188 1 162 1 291 1 121 1 310 1 233 1 99 2 210 1 25 1 124 3 46 1 47 2 365 1 71 2 104 1 168 1 53 1 201 1 10 1 270 1 220 2 176 1 175 2 300 1 318 1 275 2 302 1 320 2 321 1 36 1 279 1 281 3 376 1 222 1 323 2 132 4 84 1 17 1 182 2 113 1 304 1 116 1 207 1 88 1 
160 2 90 1 1 1 67 3 255 1 256 2 122 1 235 1 198 1 313 1 368 1 34 1 245 1 9 2 298 1 315 2 10 1 299 2 148 1 149 3 300 1 279 1 177 1 280 1 376 2 225 1 329 1 87 1 
10 2 300 2 97 1 279 2 376 2 25 1 46 2 198 1 104 1 266 1 53 1 201 1 332 1 
298 1 10 4 300 4 279 4 376 1 25 1 145 1 46 1 104 1 159 1 353 1 228 1 201 1 
10 2 64 1 317 1 290 1 300 2 279 2 322 1 376 1 25 1 46 2 70 1 53 1 286 1 201 1 
25 1 138 1 46 1 10 1 298 1 334 1 300 1 279 1 381 1 211 1 
10 2 300 2 95 1 279 2 234 1 376 1 25 1 46 1 104 1 42 1 201 1 
298 1 10 5 290 1 300 4 95 1 153 1 279 5 376 3 25 2 46 2 104 1 214 1 159 1 353 1 228 1 201 2 
298 1 10 5 78 1 290 1 300 4 95 1 153 1 279 5 376 3 25 2 46 2 104 1 159 1 353 1 228 1 201 2 
298 1 10 1 270 1 220 2 161 2 92 1 300 1 321 1 36 1 279 1 376 1 323 1 25 1 46 1 168 1 53 1 304 1 201 1 
10 1 64 1 290 1 300 1 359 1 279 1 376 1 25 1 46 2 70 1 53 1 201 1 332 1 
179 1 324 1 157 1 328 1 323 1 
221 1 150 1 149 2 67 2 249 1 177 1 205 1 323 1 238 1 179 1 324 2 157 2 328 2 127 1 134 1 329 1 34 1 19 1 245 1 
179 1 324 1 161 1 220 1 232 1 157 1 203 1 36 1 56 1 
179 1 249 1 19 1 
106 1 
349 1 125 1 341 1 347 1 31 1 183 1 137 1 
288 1 347 1 131 1 
171 1 174 1 347 3 349 3 27 1 125 1 340 1 341 1 31 1 32 2 183 1 137 1 
349 2 125 1 50 1 341 1 98 1 347 2 31 1 183 1 137 1 
138 1 347 1 110 1 349 1 27 1 377 1 341 1 31 1 183 1 115 1 381 1 
349 1 125 1 27 1 341 1 347 1 31 1 183 1 
349 1 125 2 27 1 347 1 31 1 183 1 137 1 
308 1 140 1 347 2 349 2 125 1 27 1 341 1 367 1 31 2 183 2 
316 1 347 3 98 2 349 3 197 1 125 1 27 1 377 1 341 2 31 1 183 1 217 1 137 1 
138 2 334 1 347 2 98 1 110 1 349 2 125 1 27 1 294 1 105 1 341 1 31 1 183 1 137 1 381 1 
21 1 347 4 98 2 349 4 197 1 125 1 27 1 377 1 50 1 341 2 31 2 183 2 137 1 
349 1 125 1 27 1 341 1 347 1 31 1 183 1 137 1 
171 1 174 1 98 2 347 4 349 4 197 1 125 2 377 1 51 1 341 3 32 1 31 1 183 1 137 2 
248 1 347 2 98 1 349 2 125 1 27 1 341 1 31 1 267 1 183 1 63 1 137 1 
171 1 174 2 347 3 349 3 27 1 282 1 125 1 341 1 31 1 32 2 183 1 137 1 
247 1 139 2 341 2 37 1 
349 1 27 1 191 1 347 1 31 1 183 1 
349 2 125 1 27 1 316 1 341 1 98 1 347 2 31 1 183 1 137 1 
264 1 
349 1 125 1 27 1 341 1 347 1 31 1 183 1 137 1 
316 1 98 1 347 3 349 3 27 1 125 1 341 1 31 1 32 1 183 1 137 1 
197 1 377 1 51 1 341 1 
125 1 341 1 

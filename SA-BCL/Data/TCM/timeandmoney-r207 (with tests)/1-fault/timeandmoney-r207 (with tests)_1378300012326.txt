#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 2 74 1 144 6 263 1 181 2 95 9 334 1 97 1 12 1 13 1 311 1 203 2 130 9 273 4 189 3 340 1 314 1 373 5 343 1 47 1 192 2 252 1 165 2 234 2 323 1 108 1 88 1 347 2 
328 2 74 1 144 6 263 1 181 2 95 9 334 1 97 1 12 1 13 1 311 1 203 2 130 9 273 4 189 3 340 1 314 1 373 5 343 1 47 1 192 2 252 1 234 2 165 2 323 1 108 1 88 1 347 2 
328 2 74 1 144 7 263 1 181 2 95 10 334 1 97 1 12 1 13 1 311 1 203 2 130 10 273 5 189 4 340 1 314 1 373 6 343 1 47 1 192 2 252 1 234 2 165 2 323 1 108 1 88 1 347 2 
328 2 74 1 144 4 263 1 181 2 95 7 334 1 97 1 12 1 13 1 311 1 203 2 130 7 273 3 189 2 340 1 314 1 373 4 343 1 47 1 192 2 252 1 234 2 165 1 108 1 88 1 347 2 
328 1 130 4 74 1 144 3 273 2 189 1 373 3 263 1 343 1 181 1 95 4 192 1 334 1 234 1 165 2 323 1 13 1 347 1 
0 1 328 1 130 2 74 1 373 1 263 1 343 1 181 1 95 2 265 1 252 1 234 1 108 1 347 1 203 1 326 1 
130 3 74 1 273 1 144 1 189 1 340 1 373 2 263 1 343 1 95 3 234 2 347 2 203 1 
328 1 74 1 144 7 263 1 181 1 95 9 334 1 13 1 311 1 203 1 312 1 130 9 273 4 189 3 340 1 40 1 373 5 343 1 47 1 192 1 234 2 165 2 323 1 347 2 
328 1 74 1 144 7 263 1 181 1 95 9 334 1 13 1 311 1 203 1 312 1 130 9 273 4 189 3 340 1 40 1 373 5 343 1 47 1 192 1 234 2 165 2 323 1 347 2 
94 1 239 1 331 1 
229 1 160 2 331 1 
69 1 300 2 274 2 59 2 303 1 75 2 161 2 66 2 
171 1 1 1 58 1 145 2 59 3 303 1 30 1 146 1 2 1 75 2 332 1 60 1 291 1 222 1 241 1 152 1 7 1 98 1 99 2 228 1 66 2 338 1 156 2 248 1 159 1 274 3 161 2 231 1 376 1 211 1 104 2 69 1 300 2 48 1 324 1 90 1 382 2 
59 1 274 1 303 1 75 1 161 1 292 1 300 1 71 1 66 1 237 1 
247 1 59 1 274 1 275 1 354 1 331 1 94 1 86 1 6 1 96 1 15 1 337 1 66 1 237 1 
59 2 274 2 275 1 303 1 75 2 331 1 161 2 84 1 292 1 94 1 86 1 300 2 6 1 96 2 71 1 15 1 337 2 66 2 237 2 
96 1 309 1 153 1 337 1 333 1 
62 1 94 1 214 1 96 2 309 1 331 1 337 2 333 1 
96 1 337 1 333 1 
59 1 274 1 303 1 75 1 161 1 84 1 292 1 300 1 96 1 309 1 71 1 337 1 66 1 237 1 
331 1 
62 1 94 1 96 2 224 1 309 1 331 1 337 2 333 1 
195 1 176 1 276 1 331 1 212 1 333 2 162 2 62 1 191 1 94 1 87 1 215 1 164 2 96 5 309 2 270 1 35 2 301 1 337 5 
327 1 59 2 274 2 161 2 131 1 69 1 300 2 66 2 237 1 
292 1 300 1 274 1 59 1 161 1 66 1 237 1 
56 1 59 1 274 1 75 1 161 1 115 1 300 1 66 1 237 1 
171 1 327 1 56 1 1 1 58 1 174 1 145 2 59 4 2 1 146 1 30 1 303 1 75 2 332 1 60 1 6 1 96 1 7 1 226 1 98 1 99 1 15 1 337 1 228 1 66 3 338 1 156 1 248 1 159 1 274 4 275 1 161 3 231 1 376 1 211 1 104 1 69 1 86 1 300 3 322 1 324 1 90 1 237 1 382 1 
327 1 247 1 102 1 59 2 274 2 161 1 131 1 69 1 300 1 66 2 237 1 
327 2 350 1 56 1 174 1 275 1 59 3 274 3 75 1 331 1 161 3 86 1 300 3 6 1 96 1 322 1 15 1 337 1 66 3 237 1 
327 1 56 1 59 2 274 2 75 1 161 2 149 1 300 2 66 2 73 1 
156 1 171 1 248 1 274 1 59 1 30 1 146 1 2 1 60 1 211 1 376 1 104 1 69 1 90 1 382 1 
156 1 171 1 248 1 274 1 59 1 30 1 146 1 2 1 60 1 83 1 376 1 104 1 69 1 17 1 382 1 
286 1 259 1 58 1 1 2 145 2 304 1 332 1 291 2 180 1 149 2 61 1 63 1 98 1 99 4 338 1 159 1 21 1 372 2 210 1 231 1 321 1 73 2 52 1 284 1 
59 1 274 1 161 1 147 1 300 1 15 1 66 1 237 1 
69 1 239 1 
56 1 59 2 274 2 75 1 161 1 115 1 131 1 69 1 300 1 66 2 237 1 
149 1 372 1 73 1 
171 1 156 1 248 1 274 1 59 1 30 1 146 1 2 1 60 1 211 1 376 1 104 1 69 1 109 1 90 1 382 1 
171 1 327 1 156 1 248 1 174 1 59 2 274 2 2 1 146 1 30 1 161 1 60 1 376 1 211 1 104 1 300 1 73 1 66 1 90 1 382 1 
247 1 327 2 102 1 56 1 174 1 59 5 274 5 75 1 161 4 356 1 131 1 69 1 300 4 110 1 66 5 237 1 
292 1 300 1 274 1 59 1 161 1 66 1 237 1 
361 1 133 1 367 1 
361 1 225 1 133 1 
361 1 225 1 133 1 
361 1 225 1 133 1 
361 1 133 1 
361 1 133 1 
188 1 379 1 
188 1 379 1 
188 1 379 1 
361 1 133 1 367 1 
361 1 133 1 367 1 
361 1 133 1 232 1 
24 1 188 1 361 2 379 1 133 2 170 1 
217 3 351 2 341 2 290 1 331 1 92 1 67 2 5 1 251 2 361 2 96 2 65 1 133 2 345 1 269 2 14 1 337 2 50 1 170 1 
217 1 351 1 59 2 114 1 179 1 306 1 361 1 96 1 268 1 366 1 335 1 337 1 66 2 38 1 274 2 341 1 161 2 67 1 232 1 69 1 300 2 251 1 133 1 345 1 
181 1 328 1 192 1 
181 1 328 1 326 1 
328 3 192 2 193 1 9 1 28 1 326 1 
328 2 192 1 193 1 380 1 28 1 326 1 
328 2 192 1 193 2 28 1 326 1 
176 1 114 1 262 2 331 2 3 1 333 1 80 1 61 1 62 1 119 2 94 1 122 2 63 1 307 1 96 5 309 4 335 1 35 1 337 5 155 1 38 1 20 1 229 1 160 3 210 1 318 1 162 1 191 3 215 2 164 1 284 1 285 1 
176 1 76 5 262 6 330 1 331 5 355 1 333 6 61 3 62 1 94 1 122 6 63 3 96 9 309 7 153 5 335 4 101 1 35 2 337 9 155 1 128 1 20 3 371 1 229 3 160 9 210 3 318 2 212 1 162 2 191 8 23 1 215 6 164 2 284 3 285 2 
262 2 331 3 3 1 119 1 61 1 94 1 122 2 63 1 307 1 96 3 309 2 335 1 35 1 337 3 20 1 229 2 160 4 210 1 318 1 212 1 162 1 191 3 164 1 215 2 284 1 285 1 
262 4 331 4 355 1 3 1 119 2 61 2 94 1 122 4 63 2 307 1 96 4 309 3 335 2 101 1 35 1 337 4 20 2 229 3 160 7 210 2 318 1 212 1 162 1 191 5 23 1 164 1 215 4 284 2 285 1 
171 1 376 1 
171 3 200 1 248 1 143 2 376 1 51 1 
171 1 239 1 143 1 
171 1 4 1 
358 1 
171 1 248 1 376 1 
171 1 177 1 
207 1 286 3 57 1 142 1 1 3 21 2 210 1 42 1 291 4 360 1 105 1 63 1 320 1 364 1 267 1 25 2 99 7 
207 1 286 3 57 1 142 1 1 3 21 2 210 1 42 1 291 4 360 1 105 1 63 1 320 1 364 1 267 1 25 2 99 7 
207 1 286 3 57 1 142 1 1 3 21 2 210 1 42 1 291 4 93 1 360 1 105 1 63 1 320 1 364 1 267 1 25 2 99 7 
173 1 286 10 57 2 142 2 58 1 1 15 329 1 145 2 332 1 91 1 291 16 61 3 150 1 360 1 266 4 63 4 267 1 364 2 64 1 244 1 98 1 99 31 20 3 207 5 21 5 210 4 42 2 231 1 281 1 105 1 320 1 167 3 25 3 284 3 
286 4 142 1 57 1 58 2 1 4 145 4 332 2 91 1 291 5 63 1 267 1 364 1 11 1 98 2 99 9 207 1 21 3 210 1 42 1 231 2 105 1 320 1 25 2 111 1 
349 1 328 2 258 1 141 1 74 1 144 1 194 1 30 1 146 1 261 1 220 1 263 1 181 1 242 1 95 2 124 1 9 1 125 1 203 1 156 1 130 2 373 1 343 1 104 1 192 1 234 1 253 1 347 1 382 1 326 1 
349 1 328 2 258 1 74 1 144 2 194 1 30 1 146 1 261 1 220 1 263 1 79 1 181 1 95 3 124 1 183 1 9 1 125 1 203 1 156 1 18 1 130 3 373 1 104 1 192 1 234 1 253 1 347 1 382 1 326 1 
328 2 258 1 74 1 144 2 194 1 30 1 146 1 261 1 220 1 263 1 79 1 181 1 95 2 124 1 183 1 9 1 203 1 156 1 130 2 373 1 104 1 192 1 253 1 382 1 326 1 
171 1 258 2 219 1 146 1 30 1 261 2 60 1 116 1 148 1 95 1 124 2 203 2 156 1 206 1 18 1 130 1 376 1 104 1 234 1 106 1 135 1 347 1 382 1 
349 1 328 2 258 1 194 1 30 1 146 1 261 1 220 1 79 1 181 1 242 1 95 1 124 1 9 1 125 1 203 1 156 1 130 1 343 1 104 1 192 1 234 1 253 1 347 1 382 1 326 1 
346 1 
287 1 59 1 146 1 331 2 60 2 148 1 333 6 62 3 94 1 6 1 96 5 15 1 337 5 66 1 206 1 205 1 156 2 247 1 157 2 160 2 162 1 104 2 215 2 164 1 168 2 348 2 171 1 256 1 260 2 176 1 30 1 354 1 35 1 36 1 369 1 187 1 370 1 229 2 274 1 275 1 41 1 278 4 376 1 318 1 44 1 85 1 191 2 86 1 49 2 134 2 138 1 139 2 282 1 237 1 382 2 
369 1 256 1 247 1 157 1 275 1 59 1 274 1 278 2 41 1 354 1 333 2 85 1 62 1 86 1 6 1 96 3 224 1 15 1 337 3 66 1 282 1 237 1 
256 1 59 1 354 1 331 1 333 1 62 1 94 1 6 1 96 3 224 1 15 1 337 3 66 1 247 1 369 1 274 1 275 1 41 1 278 3 85 1 86 1 282 1 348 1 237 1 
369 1 256 1 247 1 157 1 260 1 275 1 59 1 274 1 278 3 41 1 354 1 331 1 333 2 85 1 62 1 94 1 86 1 6 1 96 3 224 1 15 1 337 3 66 1 348 1 282 1 237 1 
59 1 331 5 333 7 62 3 94 5 6 1 96 5 15 1 337 5 66 1 247 1 157 4 158 1 208 1 162 1 164 1 215 1 216 1 168 2 348 4 256 1 260 4 176 1 354 1 31 1 118 1 224 1 35 1 369 1 370 1 275 1 274 1 229 2 278 6 41 1 85 1 44 1 86 1 191 1 134 2 49 2 282 1 139 2 237 1 
59 1 331 2 333 4 62 2 94 1 6 1 96 4 15 1 337 4 66 1 247 1 157 2 160 2 162 1 164 1 215 1 168 2 348 2 256 1 260 2 176 1 354 1 35 1 369 1 370 1 275 1 274 1 229 2 278 4 41 1 85 1 44 1 86 1 191 1 134 2 49 2 138 1 282 1 139 2 237 1 
256 1 260 2 59 1 176 1 354 1 331 1 31 1 333 4 62 2 118 1 94 1 6 1 96 4 35 1 15 1 337 4 66 1 247 1 369 1 370 1 157 2 208 1 229 2 274 1 275 1 41 1 278 4 44 1 85 1 162 1 191 1 86 1 215 1 164 1 49 2 134 2 168 2 348 2 139 2 282 1 237 1 
256 1 260 2 59 1 176 1 354 1 331 1 31 1 333 4 62 2 118 1 94 1 6 1 96 4 35 1 15 1 337 4 66 1 247 1 369 1 370 1 157 2 208 1 229 2 274 1 275 1 41 1 278 4 44 1 85 1 162 1 191 1 86 1 215 1 164 1 49 2 134 2 168 2 348 2 139 2 282 1 237 1 
256 1 260 2 59 1 176 1 354 1 331 1 333 4 62 2 118 1 94 1 6 1 96 4 35 1 15 1 337 4 16 2 66 1 247 1 369 1 157 2 274 1 275 1 209 1 160 2 41 1 278 4 279 2 230 1 44 1 85 1 162 1 191 1 86 1 215 1 164 1 168 2 348 2 139 2 282 1 27 1 237 1 
256 1 59 1 260 3 176 1 354 1 331 1 31 1 333 5 62 2 118 1 94 1 6 1 96 4 35 1 15 1 337 4 66 1 247 1 369 1 370 1 208 1 157 3 229 2 274 1 275 1 41 1 278 5 44 1 85 1 162 1 191 1 86 1 215 1 164 1 216 1 49 2 134 2 168 2 139 2 282 1 348 3 237 1 
256 1 59 1 260 3 176 1 354 1 331 1 31 1 333 5 62 2 118 1 94 1 6 1 96 4 35 1 15 1 337 4 66 1 247 1 369 1 370 1 208 1 157 3 229 2 274 1 275 1 41 1 278 5 44 1 85 1 162 1 191 1 86 1 215 1 164 1 216 1 49 2 134 2 168 2 139 2 282 1 348 3 237 1 
256 1 260 2 59 1 176 1 354 1 331 1 333 4 62 2 94 1 6 1 96 4 35 1 15 1 337 4 16 2 66 1 369 1 247 1 157 2 274 1 275 1 209 1 160 2 41 1 278 4 279 2 44 1 85 1 162 1 191 1 86 1 215 1 164 1 168 2 138 1 348 2 139 2 282 1 237 1 
338 1 207 1 286 1 159 1 58 1 372 1 145 2 304 1 332 1 210 1 231 1 291 2 180 1 149 1 61 1 98 1 99 2 73 1 
338 1 286 1 259 1 21 1 159 1 58 1 1 2 372 1 145 2 304 1 332 1 231 1 149 1 63 1 98 1 99 2 73 1 284 1 
286 2 58 1 1 2 145 2 304 1 332 1 291 2 61 1 149 2 63 1 98 1 99 4 338 1 20 1 207 1 159 1 21 1 372 2 210 1 231 1 73 2 284 1 
338 1 207 1 286 1 159 1 58 1 372 1 145 2 352 1 332 1 210 1 231 1 291 2 180 1 149 1 61 1 98 1 99 2 73 1 
338 1 286 1 259 1 21 1 159 1 58 1 1 2 372 1 145 2 352 1 332 1 231 1 149 1 63 1 98 1 99 2 73 1 284 1 
286 2 58 1 1 2 145 2 352 1 332 1 291 2 61 1 149 2 63 1 98 1 99 4 338 1 20 1 207 1 159 1 21 1 372 2 210 1 231 1 73 2 284 1 
338 1 207 1 20 1 286 2 21 1 1 2 159 1 58 1 372 2 145 2 332 1 210 1 231 1 291 2 149 2 61 1 63 1 98 1 99 4 73 2 284 1 
171 1 58 1 1 1 59 1 145 2 2 1 146 1 30 1 60 1 332 1 291 1 241 1 98 1 99 2 228 1 156 1 338 1 248 1 159 1 274 1 231 1 376 1 211 1 104 1 69 1 324 1 90 1 382 1 
171 1 58 1 1 1 59 1 145 2 2 1 146 1 30 1 60 1 332 1 291 1 241 1 98 1 99 2 228 1 17 1 156 1 338 1 248 1 159 1 274 1 83 1 231 1 376 1 104 1 69 1 137 1 382 1 
286 2 58 1 1 2 145 2 332 1 291 2 61 1 149 2 63 1 98 1 99 4 338 1 20 1 207 1 159 1 21 1 372 2 210 1 231 1 68 1 73 2 284 1 
171 1 286 2 141 1 1 2 58 1 59 1 145 2 2 1 146 1 30 1 178 1 332 1 291 2 149 2 61 1 63 1 98 1 99 4 156 1 338 1 207 1 248 1 20 1 21 1 159 1 372 2 274 1 210 1 231 1 211 1 376 1 104 1 324 1 73 2 284 1 90 1 382 1 
286 1 56 1 1 1 58 1 145 2 59 1 75 1 332 1 291 2 61 1 149 1 63 1 98 1 99 3 66 1 338 1 207 1 20 1 159 1 274 1 372 1 161 1 210 1 250 1 231 1 68 1 300 1 73 1 284 1 
286 2 57 1 239 1 58 1 1 3 145 2 304 1 332 1 291 3 149 1 63 1 267 1 364 1 98 1 99 6 338 1 159 1 21 2 372 1 210 1 231 1 69 2 105 1 320 1 25 1 73 1 
173 1 113 1 286 2 1 6 58 2 145 4 332 2 291 8 241 1 61 2 149 4 266 3 63 1 201 1 64 1 98 2 99 14 202 1 228 1 297 1 338 2 207 1 20 2 21 1 159 1 372 11 210 2 231 2 68 1 69 1 167 3 73 11 284 1 
171 1 327 1 174 1 58 1 1 1 59 2 145 2 2 1 146 1 30 1 60 1 332 1 291 1 241 1 149 1 293 1 33 1 98 1 99 2 66 1 228 1 156 1 338 1 248 1 159 1 274 2 161 1 231 1 316 1 376 1 211 1 104 1 68 1 69 1 300 1 109 1 90 1 382 1 
327 1 140 2 286 8 57 1 1 10 58 3 145 6 59 3 146 2 2 2 60 1 332 3 291 10 241 1 149 7 61 2 63 3 98 3 99 20 66 1 156 3 338 3 248 2 20 2 207 4 21 4 159 3 161 1 210 3 22 2 211 2 104 3 68 1 69 2 105 1 344 1 300 1 25 1 73 7 171 2 174 1 218 1 30 2 178 2 79 1 364 1 267 1 228 1 126 1 274 3 372 7 231 3 375 2 376 2 320 1 324 2 90 2 284 2 382 3 
327 1 171 3 141 1 58 2 1 1 59 1 145 4 146 2 30 2 352 1 304 1 79 1 60 2 332 2 291 1 241 1 148 1 123 1 98 2 99 2 100 1 66 1 228 1 156 8 338 2 206 1 159 2 274 1 161 1 231 2 317 1 376 2 190 1 104 8 298 1 300 1 48 2 255 1 382 7 
286 1 56 1 58 1 1 2 145 2 59 1 75 1 332 1 305 1 291 1 149 1 61 1 63 1 98 1 99 3 66 1 338 1 20 1 21 1 159 1 372 1 274 1 161 1 210 1 231 1 68 1 300 1 73 1 284 1 
55 2 173 1 286 6 58 2 1 10 145 4 289 1 221 1 332 2 291 9 61 3 266 2 151 1 63 3 64 1 11 1 98 2 99 19 184 2 127 1 186 1 20 3 207 3 21 3 210 3 231 2 45 1 167 1 169 1 284 3 
55 4 173 2 286 4 29 1 1 12 58 3 240 1 145 6 289 1 221 1 197 1 353 1 91 2 332 3 291 14 61 3 151 2 266 2 63 2 182 1 11 1 98 3 99 26 184 1 127 1 246 1 207 2 20 3 21 2 210 3 231 3 167 2 169 2 284 2 
55 4 173 3 29 1 286 8 57 1 240 1 58 3 1 21 145 6 289 1 221 1 197 1 353 1 91 1 332 3 291 20 61 4 266 4 151 1 182 1 63 5 364 1 267 1 64 1 11 1 98 3 99 41 184 1 127 1 186 1 246 1 37 1 20 4 207 4 21 4 210 5 231 3 105 1 320 1 25 1 167 3 169 2 284 4 
55 4 173 3 29 1 286 7 57 1 240 1 58 4 1 18 145 8 289 1 221 1 197 1 353 1 91 2 332 4 291 20 61 4 266 4 151 1 182 1 63 4 364 1 267 1 64 1 11 1 98 4 99 38 184 1 127 1 186 1 246 1 37 1 20 4 207 3 21 4 210 5 231 4 105 1 320 1 25 1 167 3 169 2 284 3 
55 4 173 2 29 1 113 2 286 14 57 1 240 1 58 2 1 25 145 4 289 1 221 1 197 1 353 1 91 1 332 2 291 27 61 7 266 4 151 1 182 1 63 8 364 1 267 1 64 2 11 1 98 2 99 52 184 1 127 1 246 1 20 7 207 7 21 7 210 8 231 2 105 1 320 1 25 1 167 4 169 1 284 7 
217 2 351 1 341 1 290 1 331 1 92 1 67 1 251 1 96 1 361 1 65 1 345 1 133 1 269 1 14 1 337 1 50 1 170 1 
217 2 351 1 341 1 290 1 331 1 92 1 67 1 251 1 96 1 361 1 65 1 345 1 133 1 269 1 14 1 337 1 50 1 170 1 
217 2 351 1 341 1 290 1 331 1 92 1 67 1 251 1 96 1 361 1 65 1 345 1 133 1 269 1 14 1 337 1 50 1 170 1 
53 1 24 1 367 1 
53 1 24 1 367 1 
225 1 235 1 
24 1 225 1 235 1 
306 1 268 1 
217 1 351 1 59 2 290 1 114 1 179 1 306 1 96 1 361 1 268 1 269 1 309 1 366 1 335 1 337 1 66 2 38 1 274 2 341 1 161 2 67 1 232 1 69 1 251 1 300 2 133 1 236 1 
251 1 351 1 361 1 362 1 133 1 341 1 14 1 170 1 92 1 67 1 
179 1 232 1 
204 1 251 1 351 1 361 1 133 1 341 1 227 1 325 1 67 1 
53 1 367 1 
24 1 225 1 235 1 
171 1 54 1 58 1 1 1 59 2 145 2 146 1 30 1 332 1 357 1 291 1 241 1 123 1 98 1 99 2 154 1 100 1 66 2 228 1 156 2 338 1 159 1 274 2 231 1 376 1 104 2 68 1 70 1 48 2 381 1 382 2 
328 2 156 2 257 1 141 1 146 1 30 1 261 1 220 1 79 1 104 2 181 1 243 1 192 1 9 1 336 1 125 1 253 1 326 1 382 2 
328 2 156 1 30 1 146 1 261 1 220 1 79 1 104 1 181 1 243 1 192 1 9 1 34 1 125 1 253 1 326 1 382 1 
171 1 156 1 206 1 272 1 257 1 219 1 146 1 30 1 261 1 60 1 376 1 148 1 104 1 382 1 
328 2 156 1 257 1 146 1 30 1 261 1 220 1 79 1 104 1 181 1 243 1 192 1 9 1 336 1 125 1 253 1 326 1 382 1 
302 1 
191 1 94 1 215 1 239 1 195 1 331 1 301 1 
176 1 331 2 333 1 62 1 94 1 96 1 35 1 337 1 370 1 229 1 160 1 162 1 191 1 215 1 164 1 134 1 49 1 
238 1 141 1 143 2 195 1 146 4 60 1 331 8 4 3 333 5 200 1 62 3 61 2 94 2 63 2 294 1 96 5 337 5 205 1 156 3 19 1 248 3 339 2 20 2 160 12 210 2 22 2 162 4 104 3 299 2 164 4 215 8 26 2 301 1 171 10 30 3 176 4 177 2 78 2 262 6 223 2 120 1 122 6 35 4 185 2 368 2 275 2 229 6 318 2 376 3 191 9 319 2 136 1 284 2 382 3 
173 1 29 1 240 1 176 2 77 1 197 1 353 1 262 5 331 5 333 1 62 1 61 2 94 2 122 5 266 1 182 1 63 2 96 1 35 2 337 1 205 1 20 2 229 3 160 6 249 1 210 2 318 1 162 2 299 1 191 8 319 2 164 2 215 5 167 1 284 2 
57 1 59 1 176 1 303 1 75 1 292 1 63 1 96 1 364 1 35 1 337 1 66 1 271 1 208 1 274 1 210 2 161 1 84 1 162 1 299 1 191 2 319 2 300 1 164 1 320 1 215 2 71 1 237 1 
195 1 176 1 331 1 162 1 94 1 191 1 164 1 215 1 35 1 301 1 
20 2 229 5 262 5 160 10 210 2 331 5 22 1 299 1 61 2 191 5 319 2 122 5 215 5 63 2 284 2 
62 1 94 1 96 1 331 1 337 1 333 1 
171 1 146 1 30 1 176 1 60 2 333 4 148 1 359 1 62 2 294 2 96 3 35 2 337 3 36 1 156 4 205 2 206 1 187 1 376 1 318 2 212 1 162 2 104 4 191 2 164 2 215 2 233 1 136 1 382 4 
171 1 1 1 58 1 145 2 59 3 303 1 30 1 146 1 2 1 75 2 332 1 60 1 7 1 98 1 99 1 228 1 66 2 156 1 338 1 248 1 159 1 274 3 161 2 231 1 211 1 376 1 104 1 69 1 300 2 324 1 90 1 382 1 
205 1 229 2 176 1 160 4 262 2 331 4 318 1 162 1 191 1 94 2 122 2 215 2 164 1 25 1 35 1 
251 1 341 1 277 1 
251 1 341 1 254 1 
251 1 341 1 254 1 
251 1 341 1 254 1 
251 1 341 1 
361 1 133 1 
251 1 341 1 277 1 
251 1 341 1 277 1 
306 1 251 1 341 1 198 1 92 1 
207 1 286 3 57 1 1 4 21 2 58 2 145 4 210 1 332 2 91 1 291 4 231 2 105 1 63 1 320 1 267 1 364 1 25 1 98 2 99 8 
286 2 239 1 57 1 1 3 21 2 210 1 291 3 105 1 320 1 63 1 267 1 364 1 25 1 99 6 
20 1 207 1 286 2 21 1 1 2 58 1 145 2 332 1 210 1 231 1 291 2 61 1 63 1 166 1 98 1 99 4 284 1 
173 1 20 1 207 1 286 2 21 1 1 4 210 1 291 3 61 1 266 2 63 1 64 1 167 1 99 7 284 1 
286 9 113 1 57 2 1 12 58 2 145 4 91 2 332 2 291 11 61 2 266 2 63 3 364 2 267 1 64 1 98 2 99 23 202 1 129 1 207 4 20 2 21 5 210 3 231 2 105 1 320 1 25 1 167 2 284 2 
266 1 1 1 99 1 
167 1 99 1 291 1 
20 1 207 1 286 3 58 1 1 3 21 2 145 2 332 1 210 1 231 1 22 1 291 3 61 1 63 1 166 1 98 1 99 6 284 1 
173 1 29 1 286 2 1 6 58 1 240 1 145 2 353 1 197 1 332 1 291 6 61 2 266 1 182 1 63 2 11 1 98 1 99 12 207 1 20 2 21 1 210 2 231 1 167 1 284 2 
207 1 286 2 57 1 1 3 21 1 210 1 291 3 320 1 63 1 364 1 99 6 
129 1 207 1 286 2 57 1 21 1 1 2 58 1 145 2 91 1 332 1 291 1 231 1 105 1 364 1 267 1 98 1 99 3 
207 2 286 5 57 2 58 1 21 3 1 5 145 2 332 1 210 2 231 1 291 5 320 1 63 2 364 2 11 1 98 1 99 10 271 1 
207 1 286 1 58 1 145 2 332 1 210 1 231 1 291 2 61 1 11 1 98 1 99 2 
20 1 207 1 286 2 21 1 1 2 58 1 145 2 332 1 210 1 231 1 291 2 61 1 63 1 11 1 98 1 99 4 284 1 
129 1 207 1 286 2 57 1 1 2 58 3 21 1 145 6 91 1 332 3 231 3 291 1 364 1 11 1 98 3 99 3 186 1 
173 1 286 12 57 3 1 18 329 1 58 5 145 10 91 2 332 5 291 16 150 1 61 3 266 4 63 5 364 3 267 1 64 1 11 1 244 1 98 5 99 34 186 1 129 1 20 3 207 5 21 7 210 5 231 5 105 1 320 2 166 1 25 1 167 3 284 3 
173 1 29 1 286 2 57 1 1 4 58 1 145 2 332 1 291 4 266 1 63 1 267 1 364 1 11 1 98 1 99 8 21 2 210 1 231 1 105 1 320 1 25 1 167 1 
173 1 29 1 286 3 57 1 1 5 58 2 145 4 332 2 291 6 61 1 266 2 63 1 364 1 267 1 64 1 11 1 98 2 99 11 20 1 207 1 21 2 210 2 231 2 105 1 320 1 166 1 25 1 167 1 
173 1 29 1 286 4 57 1 1 10 58 3 240 1 145 6 197 1 353 1 332 3 91 1 291 9 61 2 266 1 182 1 63 3 364 1 267 1 11 1 98 3 99 19 207 1 20 2 21 3 210 3 231 3 105 1 320 1 166 1 25 1 167 1 284 2 
173 1 29 1 286 5 57 1 1 7 58 3 240 1 145 6 353 1 197 1 91 1 332 3 291 10 61 2 266 1 182 1 63 2 364 1 267 1 11 1 98 3 99 17 207 2 20 2 21 3 210 3 231 3 105 1 320 1 166 1 25 1 167 1 284 1 
173 1 29 1 286 2 57 1 1 4 58 1 145 2 332 1 291 4 266 1 63 1 267 1 364 1 11 1 98 1 99 8 21 2 210 1 231 1 105 1 320 1 25 1 167 1 
173 1 29 1 286 2 1 6 58 1 240 1 145 2 353 1 197 1 332 1 291 6 61 2 266 1 182 1 63 2 11 1 98 1 99 12 207 1 20 2 21 1 210 2 231 1 167 1 284 2 
173 1 29 1 286 5 57 1 1 8 58 4 240 1 145 8 197 1 353 1 332 4 91 2 291 10 61 2 266 1 182 1 63 2 364 1 267 1 11 1 98 4 99 18 207 2 20 2 21 3 210 3 231 4 105 1 320 1 166 1 25 1 167 1 284 1 
173 1 29 1 286 6 1 7 58 4 240 1 145 8 197 1 353 1 332 4 91 2 291 9 61 3 266 1 182 1 63 2 11 1 98 4 99 16 186 1 207 3 20 3 21 3 210 3 231 4 167 1 284 2 
207 3 286 6 57 3 1 4 21 3 210 1 291 3 105 1 63 1 320 1 267 2 364 3 99 7 
173 1 29 1 286 4 57 1 1 8 58 4 240 1 145 8 197 1 353 1 332 4 91 2 291 10 61 2 266 1 182 1 63 2 364 1 267 1 11 1 98 4 99 18 186 1 207 1 20 2 21 3 210 3 231 4 105 1 320 1 25 1 167 1 284 1 
69 1 247 1 102 1 274 1 59 1 288 1 66 1 
172 1 247 1 102 1 59 1 274 1 288 1 315 1 69 1 32 1 363 1 66 1 283 1 
171 1 206 1 156 1 239 1 146 1 30 1 60 1 376 1 148 1 104 1 382 1 
171 1 327 1 156 1 248 1 59 2 274 2 2 1 146 1 30 1 161 1 60 1 376 1 104 1 69 1 300 1 66 1 90 1 382 1 
327 1 171 3 59 2 30 1 146 1 2 1 177 1 6 1 294 1 15 1 66 2 156 1 248 2 339 1 274 2 161 1 376 2 131 1 104 1 69 1 300 2 90 1 237 2 382 1 
327 1 171 3 59 2 30 1 146 1 2 1 177 1 6 1 294 1 15 1 66 2 156 1 248 2 339 1 274 2 161 1 83 1 376 2 131 1 104 1 69 1 300 2 237 2 382 1 
171 4 143 1 175 1 30 1 146 1 177 1 331 1 60 1 4 1 333 1 94 1 294 1 96 2 337 2 156 3 339 1 248 1 275 1 103 1 376 1 104 3 46 1 382 3 
156 3 171 4 248 1 339 1 143 1 175 1 275 1 146 1 30 1 177 1 60 1 331 1 4 1 376 1 333 1 104 3 94 1 96 2 294 1 337 2 185 1 382 3 
156 1 146 1 30 1 255 1 104 1 382 1 
156 7 171 3 248 1 141 1 30 2 146 3 79 1 60 2 280 1 317 1 376 2 190 1 104 7 298 1 200 1 377 1 123 1 48 1 296 1 255 1 382 6 
171 1 327 1 286 2 57 1 141 1 1 3 58 2 59 2 145 4 2 1 146 1 30 1 178 1 332 2 291 3 149 1 63 1 364 1 267 1 98 2 99 6 154 1 66 1 338 2 156 1 248 1 21 2 159 2 372 1 274 2 210 1 161 1 231 2 375 1 376 1 211 1 68 1 104 1 69 2 105 1 300 1 320 1 25 1 324 1 73 1 90 1 382 1 
171 2 143 1 195 1 176 2 78 1 331 1 60 1 4 1 333 2 62 1 94 1 96 3 309 1 35 2 337 3 185 1 368 1 156 1 275 1 162 2 104 1 191 1 215 1 164 2 26 1 136 1 301 1 382 1 
171 2 200 1 238 1 156 2 248 1 141 1 143 1 146 2 30 1 376 1 255 1 104 2 382 2 
156 4 206 1 171 1 141 1 175 1 146 1 30 1 60 1 376 1 148 1 104 4 132 1 382 4 
156 2 171 1 248 1 30 1 146 2 280 1 376 1 199 1 104 2 294 1 10 1 296 1 126 1 382 2 
181 1 328 1 156 1 146 1 30 1 220 1 60 1 326 1 104 1 382 1 
171 1 156 2 123 1 70 1 141 1 146 1 30 1 79 1 376 1 104 2 382 2 
206 1 156 5 171 3 141 1 30 2 146 2 60 1 376 2 317 1 148 1 104 5 298 1 123 1 294 1 132 1 382 4 
206 1 156 5 171 3 141 1 30 2 146 2 60 1 342 1 376 2 317 1 148 1 104 5 123 1 294 1 132 1 382 4 
171 1 327 1 156 1 248 1 59 2 274 2 2 1 146 1 30 1 161 1 60 1 83 1 376 1 104 1 69 1 300 1 66 1 382 1 
156 1 171 1 248 1 30 1 146 2 280 1 376 1 104 1 200 1 377 1 294 1 296 1 382 1 
54 1 39 1 121 1 295 1 274 1 59 1 66 1 357 1 381 1 
121 1 107 1 112 1 
69 1 39 1 121 1 295 1 365 1 
59 1 303 1 75 1 331 1 292 1 94 1 121 1 6 1 96 2 295 1 365 1 309 1 15 1 337 2 66 1 39 1 274 1 275 1 161 1 84 1 86 1 300 1 107 1 322 1 71 1 89 1 112 1 237 2 
239 1 74 1 373 1 263 1 
95 1 130 1 74 1 234 1 373 1 263 1 347 1 
258 1 130 1 203 1 
130 3 74 1 373 1 263 1 343 1 95 3 378 1 234 1 81 1 82 1 108 2 347 1 
95 2 130 2 74 1 144 1 165 1 234 1 373 1 263 1 347 1 
181 1 328 1 95 1 192 1 334 1 130 1 273 1 234 1 373 1 347 1 343 1 
95 1 130 1 234 1 373 1 263 1 347 1 343 1 
95 1 130 1 74 1 234 1 263 2 347 1 343 1 
130 2 373 1 263 1 343 1 213 1 95 2 163 1 308 1 234 2 347 2 
130 3 74 1 144 2 273 1 189 1 373 2 263 1 343 1 95 3 47 1 234 1 311 1 347 1 
328 2 130 2 74 1 144 1 373 1 263 1 343 1 181 1 95 2 192 1 234 1 9 1 310 1 347 1 326 1 
130 4 74 1 144 2 273 1 189 1 373 2 263 1 343 1 95 4 234 2 165 1 323 1 347 2 
95 1 130 1 74 1 234 1 373 1 263 1 347 1 343 1 
130 4 74 2 144 2 273 1 189 1 373 3 263 2 43 1 95 4 81 1 234 1 82 1 108 1 347 1 
130 2 144 1 74 1 373 1 40 1 263 1 343 1 95 2 264 1 234 1 245 1 347 1 
130 3 74 1 373 1 374 1 263 1 343 1 95 3 81 1 234 1 82 2 108 2 347 1 
8 1 373 2 72 2 117 1 
313 1 95 1 130 1 234 1 347 1 343 1 
47 1 95 2 130 2 74 1 144 1 234 1 373 1 263 1 347 1 343 1 
196 1 
95 1 130 1 74 1 234 1 373 1 263 1 347 1 343 1 
130 3 144 1 74 1 373 1 263 1 343 1 95 3 47 1 234 1 108 1 347 1 
273 1 189 1 373 1 43 1 
373 1 263 1 

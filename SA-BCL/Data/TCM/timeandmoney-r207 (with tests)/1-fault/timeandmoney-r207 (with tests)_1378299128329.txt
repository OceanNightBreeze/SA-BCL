#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 101 5 270 1 339 1 232 1 316 3 343 1 317 1 275 2 274 4 105 1 188 1 320 2 169 2 86 1 118 2 13 1 66 9 120 2 309 1 173 1 69 1 93 2 333 2 334 1 358 1 312 6 98 9 
43 1 101 5 270 1 339 1 232 1 316 3 343 1 317 1 275 2 274 4 105 1 188 1 320 2 169 2 86 1 118 2 13 1 66 9 120 2 309 1 173 1 69 1 93 2 333 2 334 1 358 1 312 6 98 9 
43 1 101 6 270 1 339 1 232 1 316 4 343 1 317 1 275 2 274 5 105 1 188 1 320 2 169 2 86 1 118 2 13 1 66 10 120 2 309 1 173 1 69 1 93 2 333 2 334 1 358 1 312 7 98 10 
43 1 101 4 270 1 339 1 316 2 343 1 317 1 275 2 274 3 105 1 188 1 320 1 169 2 86 1 118 2 13 1 66 7 120 2 309 1 173 1 69 1 93 2 333 2 334 1 358 1 312 4 98 7 
101 3 169 1 86 1 339 1 232 1 316 1 13 1 317 1 120 1 66 4 274 2 275 1 93 1 333 1 105 1 312 3 98 4 320 2 
101 1 169 1 86 1 373 1 192 1 118 1 13 1 343 1 317 1 120 1 66 2 93 1 262 1 334 1 333 1 98 2 
43 1 101 2 169 2 86 1 118 1 316 1 13 1 317 1 120 2 66 3 274 1 312 1 98 3 
101 5 43 1 169 2 86 1 339 1 232 1 118 1 316 3 13 1 317 1 275 1 120 2 66 9 274 4 172 1 173 1 93 1 333 1 105 1 335 1 188 1 312 7 320 2 98 9 
101 5 43 1 169 2 86 1 339 1 232 1 118 1 316 3 13 1 317 1 275 1 120 2 66 9 274 4 172 1 173 1 93 1 333 1 105 1 335 1 188 1 312 7 320 2 98 9 
260 1 25 1 121 1 
338 1 260 1 251 2 
227 2 311 2 35 2 245 2 285 1 194 1 40 2 295 2 
227 2 128 1 127 1 45 1 273 1 253 1 53 1 206 1 295 2 23 1 278 1 79 1 282 2 299 1 56 1 370 1 168 1 85 1 214 1 63 2 35 2 144 1 245 3 285 1 246 1 194 1 328 1 40 3 330 1 311 2 222 2 288 1 356 1 264 2 95 1 377 1 381 2 
227 1 311 1 35 1 245 1 22 1 285 1 157 1 138 1 40 1 295 1 
227 1 292 1 315 1 374 1 49 1 245 1 22 1 205 1 40 1 260 1 25 1 68 1 162 1 187 1 
227 1 292 1 315 1 35 1 245 1 22 1 205 2 295 1 40 1 260 1 25 1 68 1 311 1 162 2 187 1 
162 1 379 1 156 1 205 1 58 1 
125 1 260 1 25 1 174 1 162 2 379 1 205 2 58 1 
162 1 205 1 58 1 
227 1 189 1 35 1 245 1 22 1 205 1 285 1 157 1 295 1 40 1 311 1 162 1 379 1 138 1 
260 1 
125 1 260 1 25 1 162 2 379 1 205 2 58 1 103 1 
149 1 125 1 250 1 178 1 44 1 271 1 115 2 205 5 260 1 25 1 353 1 104 2 4 2 279 1 162 5 106 1 379 2 31 1 58 2 
121 1 194 1 
227 2 35 1 245 2 39 1 194 2 40 2 295 1 311 1 176 1 
191 1 142 1 64 1 
85 1 245 1 273 1 253 1 246 1 194 1 206 1 40 1 222 1 288 1 356 1 264 1 95 1 377 1 226 1 381 1 
227 5 130 2 374 1 35 4 51 1 245 5 215 1 259 1 39 1 194 1 40 5 295 1 311 4 263 1 
227 2 160 1 311 2 35 2 245 2 22 1 138 1 40 2 
227 1 85 1 130 1 35 1 64 1 273 1 215 1 245 2 253 1 246 1 206 1 40 2 311 1 288 1 222 1 356 1 264 1 377 1 95 1 381 1 
227 3 311 3 130 1 35 3 245 3 194 1 295 1 40 3 
227 1 311 1 35 1 245 1 22 1 138 1 40 1 
227 1 311 1 35 1 245 1 22 1 39 1 176 1 40 1 295 1 
227 3 128 1 127 1 45 1 130 1 292 1 315 1 273 1 22 1 205 1 253 1 53 1 206 1 295 2 23 1 162 1 79 1 282 1 187 1 370 1 168 1 322 1 85 1 62 1 214 1 63 2 35 3 245 4 215 1 285 1 246 1 194 1 39 1 40 4 330 1 68 1 311 3 288 1 222 1 356 1 264 1 377 1 95 1 381 1 
227 2 311 1 130 1 374 1 35 1 245 2 259 1 194 1 40 2 
227 3 322 1 292 1 130 2 315 1 35 3 215 1 245 3 205 1 22 1 39 1 295 1 40 3 260 1 68 1 277 1 311 3 162 1 187 1 
227 2 311 2 130 1 142 1 35 2 64 1 245 2 39 1 40 2 295 1 
85 1 245 1 273 1 253 1 246 1 194 1 206 1 40 1 222 1 288 1 356 1 264 1 95 1 377 1 381 1 
85 1 245 1 273 1 253 1 194 1 206 1 40 1 159 1 222 1 288 1 356 1 264 1 224 1 377 1 381 1 
127 1 128 2 45 1 272 1 23 1 364 1 26 1 208 1 367 1 282 4 368 1 209 1 370 1 59 1 9 1 214 1 63 2 191 2 142 2 144 2 64 2 330 1 124 1 225 1 
227 1 68 1 311 1 160 1 35 1 245 1 22 1 40 1 
223 1 107 1 
223 1 107 1 
137 1 203 1 
137 1 203 1 
137 1 203 1 
223 1 107 1 216 1 
284 1 223 1 107 1 
21 1 223 2 29 1 107 2 137 1 203 1 
223 1 107 1 216 1 
223 1 107 1 216 1 
20 1 223 1 107 1 
20 1 223 1 107 1 
20 1 223 1 107 1 
227 2 48 1 231 1 205 1 135 1 236 1 162 1 107 1 301 1 33 1 284 1 243 1 114 1 35 2 245 2 258 1 194 1 40 2 15 1 261 1 311 2 331 1 223 1 122 1 
302 1 61 1 34 1 228 2 243 2 48 1 21 1 258 2 205 2 135 3 236 2 260 1 289 1 162 2 265 1 223 2 107 2 301 2 167 1 
93 1 333 1 275 1 
93 1 333 1 192 1 
93 3 204 1 147 1 192 1 337 1 275 2 
93 2 147 1 340 1 192 1 337 1 275 1 
93 2 147 2 192 1 275 1 337 1 
338 1 125 1 0 1 250 3 251 3 271 2 180 2 205 5 134 1 234 2 25 1 364 1 4 1 104 1 162 5 106 1 367 1 368 1 209 1 58 1 33 1 115 1 116 2 247 1 260 2 261 1 195 1 331 1 71 1 379 4 199 1 360 1 
338 3 125 1 178 1 0 1 250 8 47 1 251 9 230 1 271 6 180 6 156 5 182 5 205 9 134 2 234 6 25 1 364 3 104 2 4 2 162 9 106 1 367 3 368 3 209 3 58 6 113 1 87 1 115 2 247 3 261 4 16 1 260 5 379 7 199 2 202 1 
338 2 178 1 250 3 251 4 271 2 180 2 205 3 134 1 234 2 25 1 364 1 4 1 104 1 162 3 367 1 368 1 209 1 115 1 116 1 247 1 260 3 261 1 71 1 379 2 199 1 360 1 
338 3 178 1 250 5 47 1 251 7 271 4 180 4 205 4 134 1 234 4 25 1 364 2 4 1 104 1 162 4 367 2 368 2 209 2 113 1 87 1 115 1 116 2 247 2 260 4 261 2 71 1 379 3 199 1 360 1 
121 1 349 1 206 1 
380 1 206 1 
357 1 
356 1 273 1 206 1 
8 1 206 1 
273 1 206 1 
356 1 349 2 273 1 72 1 206 3 235 1 
83 2 128 2 84 1 362 1 9 2 350 1 144 4 52 1 287 1 364 1 332 1 282 6 298 1 359 1 225 3 209 1 347 1 
83 2 84 1 128 3 362 1 9 2 350 1 144 4 52 1 287 1 364 1 332 1 282 7 298 1 359 1 225 3 209 1 347 1 
83 2 128 2 84 1 362 1 9 2 350 1 144 4 52 1 287 1 364 1 332 1 55 1 282 6 298 1 359 1 225 3 209 1 347 1 
128 19 127 1 45 1 362 3 153 1 52 1 364 5 281 3 282 38 367 2 368 2 298 5 209 5 370 1 210 1 347 2 83 3 84 1 213 1 9 8 190 1 214 1 63 2 350 2 144 19 89 1 287 3 247 2 332 1 376 1 290 1 225 13 359 2 99 3 
83 2 84 1 128 5 127 2 291 1 45 2 362 1 190 1 9 4 214 2 63 4 350 1 144 5 233 1 287 1 364 1 332 1 282 10 298 1 359 1 225 5 209 1 370 2 347 1 
101 1 229 1 204 1 317 1 275 1 280 1 136 1 211 1 212 1 169 1 85 1 170 1 86 1 372 1 88 1 171 1 118 1 192 1 13 1 66 2 120 1 222 1 288 1 93 2 333 1 264 1 312 1 381 1 98 2 269 1 
101 1 1 1 204 1 317 1 275 1 280 1 136 1 211 1 212 1 169 1 85 1 170 1 86 1 372 1 88 1 171 1 118 1 192 1 66 3 120 1 222 1 288 1 93 2 333 1 264 1 198 1 312 2 381 1 98 3 361 1 
212 1 101 1 85 1 1 1 86 1 372 1 204 1 171 1 88 1 192 1 118 1 317 1 275 1 66 2 93 2 288 1 222 1 333 1 280 1 264 1 312 2 98 2 381 1 361 1 211 1 
273 1 253 1 206 1 296 1 280 2 81 1 319 1 110 1 211 2 169 1 85 1 88 2 118 2 90 1 66 1 120 1 288 1 222 1 264 1 123 1 198 1 381 1 98 1 
1 1 204 1 275 1 280 1 136 1 211 1 212 1 169 1 85 1 170 1 372 1 88 1 171 1 118 1 192 1 13 1 66 1 120 1 222 1 288 1 93 2 333 1 264 1 381 1 98 1 269 1 
102 1 
338 2 250 2 100 4 251 2 292 1 49 1 205 5 253 2 206 1 104 1 4 1 162 5 106 1 255 1 164 1 300 1 110 1 166 1 58 6 115 1 14 2 65 2 119 1 67 2 219 1 260 2 68 1 222 2 70 1 264 2 123 1 17 1 74 2 125 3 227 1 271 2 315 1 273 1 22 1 134 1 25 1 24 1 365 1 366 2 187 1 283 1 85 1 140 2 374 1 245 1 40 1 91 1 288 1 97 2 381 2 
227 1 125 1 100 2 292 1 315 1 49 1 205 3 22 1 103 1 24 1 365 1 162 3 255 1 187 1 166 1 58 2 374 1 245 1 119 1 40 1 67 1 68 1 
227 1 125 1 100 3 292 1 315 1 49 1 205 3 22 1 103 1 24 1 25 1 365 1 162 3 255 1 187 1 166 1 58 1 374 1 245 1 119 1 40 1 68 1 260 1 97 1 
125 1 227 1 100 3 292 1 315 1 49 1 205 3 22 1 103 1 24 1 25 1 365 1 162 3 255 1 366 1 187 1 166 1 58 2 374 1 245 1 119 1 40 1 67 1 68 1 260 1 97 1 
338 2 100 6 250 1 154 1 292 1 294 1 49 1 205 5 103 1 104 1 4 1 162 5 255 1 106 1 54 1 164 1 166 1 58 7 115 1 14 2 65 2 119 1 67 4 68 1 260 5 74 2 125 3 227 1 315 1 271 1 75 1 22 1 24 1 25 5 365 1 366 4 187 1 283 1 140 2 374 1 245 1 375 1 40 1 97 4 
125 2 338 2 227 1 250 1 100 4 251 2 292 1 271 1 315 1 49 1 205 4 22 1 25 1 24 1 365 1 4 1 104 1 162 4 255 1 106 1 366 2 187 1 164 1 300 1 166 1 58 4 283 1 140 2 115 1 374 1 245 1 14 2 65 2 119 1 67 2 40 1 260 2 68 1 74 2 97 2 
125 2 338 2 227 1 250 1 100 4 292 1 271 1 315 1 294 1 49 1 75 1 205 4 22 1 25 1 24 1 365 1 104 1 4 1 162 4 255 1 106 1 366 2 187 1 164 1 166 1 58 4 283 1 140 2 115 1 374 1 245 1 14 2 375 1 65 2 119 1 67 2 40 1 260 1 68 1 74 2 97 2 
125 2 338 2 227 1 250 1 100 4 292 1 271 1 315 1 294 1 49 1 75 1 205 4 22 1 25 1 24 1 365 1 104 1 4 1 162 4 255 1 106 1 366 2 187 1 164 1 166 1 58 4 283 1 140 2 115 1 374 1 245 1 14 2 375 1 65 2 119 1 67 2 40 1 260 1 68 1 74 2 97 2 
125 2 227 1 250 1 100 4 251 2 292 1 271 1 315 1 294 1 133 1 49 1 205 4 22 1 77 2 25 1 24 1 365 1 104 1 4 1 162 4 255 1 27 1 106 1 366 2 187 1 164 1 108 2 166 1 58 4 140 2 115 1 374 1 11 1 245 1 65 2 119 1 67 2 40 1 260 1 68 1 97 2 
125 2 338 2 227 1 250 1 100 5 154 1 292 1 271 1 315 1 294 1 49 1 75 1 205 4 22 1 25 1 24 1 4 1 104 1 365 1 162 4 106 1 255 1 366 3 187 1 164 1 166 1 58 5 283 1 140 2 115 1 374 1 245 1 14 2 375 1 65 2 119 1 40 1 67 3 260 1 68 1 74 2 97 3 
125 2 338 2 227 1 250 1 100 5 154 1 292 1 271 1 315 1 294 1 49 1 75 1 205 4 22 1 25 1 24 1 4 1 104 1 365 1 162 4 106 1 255 1 366 3 187 1 164 1 166 1 58 5 283 1 140 2 115 1 374 1 245 1 14 2 375 1 65 2 119 1 40 1 67 3 260 1 68 1 74 2 97 3 
125 2 227 1 250 1 100 4 251 2 292 1 271 1 315 1 49 1 205 4 22 1 77 2 25 1 24 1 365 1 4 1 104 1 162 4 255 1 106 1 366 2 187 1 164 1 108 2 300 1 166 1 58 4 140 2 115 1 374 1 11 1 245 1 65 2 119 1 67 2 40 1 260 1 68 1 97 2 
127 1 128 2 45 1 362 1 23 1 364 1 282 5 209 1 370 1 59 1 347 1 83 1 84 1 9 1 214 1 63 2 191 1 142 1 64 1 144 3 194 2 287 1 330 1 332 1 121 1 225 1 
128 6 127 2 46 1 45 2 252 1 53 1 363 1 344 1 23 2 364 2 281 3 282 14 367 1 368 2 298 1 209 1 210 1 370 2 9 1 214 2 63 4 191 11 142 4 64 11 144 8 326 1 194 1 328 1 247 2 330 1 225 2 175 1 99 3 
227 1 127 1 128 1 45 1 130 1 273 1 155 1 253 1 344 1 53 1 3 1 206 1 23 1 282 2 370 1 85 1 63 2 214 1 142 1 35 1 144 1 245 2 215 1 246 1 194 1 40 2 328 1 330 1 311 1 288 1 222 1 356 1 264 1 146 1 377 1 95 1 226 1 381 1 
45 3 152 2 1 1 253 1 53 1 344 1 206 2 298 4 209 3 168 2 347 1 7 1 9 3 214 3 63 6 64 7 215 1 305 2 311 1 222 3 356 2 264 3 225 7 227 1 128 9 127 3 362 1 130 1 273 2 23 3 364 3 78 2 282 19 367 2 368 2 370 3 83 1 84 1 85 2 324 1 191 7 142 7 35 1 144 10 245 3 246 2 194 2 287 1 328 1 40 3 92 2 247 2 330 3 248 1 288 2 332 1 95 2 377 2 381 3 
227 1 127 2 128 1 45 2 1 1 229 1 130 1 273 2 253 2 53 1 206 3 276 1 23 2 238 1 28 1 5 1 282 2 299 2 370 2 110 1 59 1 85 2 214 2 63 4 35 1 144 1 245 1 37 1 40 1 328 1 330 2 311 1 355 1 288 2 222 7 264 8 196 1 123 1 381 8 
227 1 127 1 128 2 45 1 344 1 295 1 23 1 364 1 282 3 367 1 368 1 209 1 370 1 9 1 214 1 63 2 191 1 142 1 35 1 64 1 144 1 245 1 39 1 40 1 247 1 330 1 311 1 266 1 225 1 
127 1 45 1 63 2 214 1 191 1 142 1 64 1 144 2 23 1 330 1 364 1 124 1 282 2 368 1 298 1 225 1 370 1 59 1 
127 1 128 2 45 1 9 1 63 2 214 1 191 1 272 1 142 1 64 1 23 1 330 1 282 2 367 1 225 1 209 1 370 1 59 1 
127 1 128 2 45 1 23 1 364 1 282 4 367 1 368 1 298 1 209 1 370 1 59 1 9 1 214 1 63 2 191 2 142 2 144 2 64 2 247 1 330 1 225 2 
127 1 45 1 63 2 214 1 191 1 142 1 64 1 144 2 23 1 330 1 364 1 5 1 124 1 282 2 368 1 298 1 225 1 370 1 
127 1 128 2 45 1 9 1 63 2 214 1 191 1 272 1 142 1 64 1 23 1 330 1 5 1 282 2 367 1 225 1 209 1 370 1 
127 1 128 2 45 1 23 1 364 1 5 1 282 4 367 1 368 1 298 1 209 1 370 1 9 1 214 1 63 2 191 2 142 2 144 2 64 2 247 1 330 1 225 2 
127 1 128 2 45 1 23 1 364 1 282 4 367 1 368 1 298 1 209 1 370 1 9 1 214 1 63 2 191 2 142 2 144 2 64 2 247 1 330 1 225 2 
127 1 128 1 45 1 273 1 253 1 53 1 206 1 23 1 282 2 370 1 168 1 85 1 63 2 214 1 144 1 245 1 246 1 194 1 328 1 40 1 330 1 288 1 222 1 356 1 264 1 377 1 95 1 381 1 
127 1 128 1 45 1 341 1 273 1 253 1 53 1 206 1 23 1 159 1 282 2 370 1 85 1 63 2 214 1 144 1 245 1 194 1 328 1 40 1 330 1 288 1 222 1 356 1 264 1 377 1 224 1 381 1 
127 1 128 2 45 1 344 1 23 1 364 1 282 4 367 1 368 1 298 1 209 1 370 1 9 1 214 1 63 2 191 2 142 2 144 2 64 2 247 1 330 1 225 2 
128 2 127 1 152 1 45 1 229 1 273 1 206 1 23 1 364 1 367 1 282 4 368 1 298 1 209 1 370 1 168 1 85 1 9 1 63 2 214 1 191 2 142 2 64 2 144 2 245 1 246 1 40 1 247 1 330 1 288 1 222 1 356 1 264 1 377 1 95 1 225 2 381 1 
227 1 128 1 127 1 45 1 344 1 295 1 23 1 364 1 367 1 282 3 368 1 298 1 209 1 370 1 256 1 214 1 63 2 191 1 142 1 35 1 144 2 64 1 245 1 39 1 40 1 247 1 330 1 311 1 225 1 
127 2 128 10 45 2 252 1 233 1 364 3 281 1 163 1 282 19 367 3 368 3 298 3 6 1 209 3 210 1 370 2 111 1 371 1 9 3 214 2 63 4 117 2 144 9 286 1 308 1 247 3 225 6 200 1 249 2 99 2 
128 12 127 3 45 3 181 1 342 1 233 1 364 3 281 2 163 1 282 26 367 2 368 3 298 2 209 2 6 2 370 3 210 2 111 1 139 1 190 2 9 2 214 3 63 6 117 1 144 14 351 1 286 1 352 1 308 2 247 3 225 4 313 1 249 4 99 2 
45 3 252 1 342 1 163 1 298 4 209 5 6 1 210 3 347 1 111 1 9 5 63 6 214 3 117 1 351 1 308 2 352 1 225 9 313 1 128 21 127 3 362 1 131 1 181 1 233 1 364 5 281 3 367 4 282 41 368 4 370 3 139 1 83 1 84 1 371 1 190 1 144 20 286 1 287 1 247 4 332 1 249 4 99 4 
127 4 128 19 45 4 362 1 131 1 252 1 181 1 342 1 233 1 364 5 281 3 163 1 282 39 367 3 368 4 298 3 6 1 209 4 210 3 370 4 347 1 83 1 139 1 111 1 84 1 371 1 190 2 9 5 214 4 63 8 117 1 351 1 144 20 286 1 287 1 352 1 308 2 247 4 332 1 225 8 313 1 249 4 99 4 
127 2 128 26 46 2 45 2 362 1 252 2 181 1 342 1 233 1 364 8 281 4 163 1 282 53 367 7 368 7 298 7 6 1 209 8 210 2 370 2 347 1 83 1 139 1 111 1 84 1 190 1 9 8 214 2 63 4 117 1 351 1 144 27 286 1 287 1 352 1 308 1 247 7 332 1 225 15 313 1 249 4 99 4 
34 1 220 1 243 1 265 1 21 1 223 1 107 1 258 1 301 1 236 1 
284 1 114 1 
321 1 243 1 223 1 325 1 107 1 258 1 38 1 301 1 236 1 
216 1 304 1 
158 1 20 1 29 1 
61 1 34 1 228 1 48 1 243 1 21 1 205 1 258 1 135 2 236 1 260 1 289 1 162 1 265 1 223 1 107 1 301 1 167 1 
61 1 34 1 228 1 48 1 243 1 21 1 205 1 258 1 135 2 236 1 260 1 289 1 162 1 265 1 223 1 107 1 301 1 167 1 
61 1 34 1 228 1 48 1 243 1 21 1 205 1 258 1 135 2 236 1 260 1 289 1 162 1 265 1 223 1 107 1 301 1 167 1 
29 1 216 1 304 1 
29 1 216 1 304 1 
158 1 20 1 
158 1 20 1 29 1 
231 1 122 1 
227 2 228 1 231 1 205 1 135 1 236 1 345 1 162 1 107 1 301 1 167 1 33 1 284 1 243 1 114 1 35 2 245 2 258 1 194 1 40 2 15 1 261 1 311 2 331 1 223 1 122 1 379 1 
227 2 150 1 127 1 128 1 45 1 129 1 273 1 344 1 53 1 206 1 276 1 23 1 282 2 299 2 370 1 323 1 85 1 63 2 214 1 144 1 245 2 217 1 40 2 328 1 330 1 288 1 222 2 264 2 196 1 381 2 201 1 
85 1 1 1 229 1 372 1 204 1 171 1 192 1 275 1 207 1 93 2 288 1 222 2 333 1 264 2 197 1 136 1 267 1 381 2 211 1 
85 1 1 1 372 1 204 1 171 1 192 1 275 1 239 1 93 2 222 1 288 1 333 1 264 1 136 1 267 1 381 1 211 1 
85 1 273 1 193 1 253 1 206 1 296 1 288 1 222 1 264 1 197 1 123 1 381 1 110 1 211 1 
85 1 1 1 372 1 204 1 171 1 192 1 275 1 207 1 93 2 288 1 222 1 333 1 264 1 197 1 136 1 267 1 381 1 211 1 
112 1 
149 1 250 1 260 1 25 1 353 1 271 1 121 1 
125 1 283 1 338 1 250 1 251 1 115 1 271 1 205 1 14 1 25 1 260 2 104 1 4 1 162 1 106 1 74 1 58 1 
149 1 338 6 250 9 251 12 292 2 205 5 253 1 206 10 254 2 104 4 4 4 162 5 106 4 165 2 57 1 209 2 58 5 8 2 115 4 349 2 305 2 218 2 307 2 260 8 353 1 222 3 356 3 264 3 17 1 72 1 73 1 125 3 229 1 271 8 180 6 273 3 134 2 234 6 25 2 364 2 184 2 241 1 80 2 367 2 368 2 85 3 247 2 288 4 94 2 378 1 380 3 381 3 148 2 41 1 
125 1 338 3 42 1 250 8 251 6 271 5 180 5 181 1 205 1 134 1 234 5 25 2 364 2 4 2 104 2 162 1 106 2 281 1 367 2 368 2 209 2 210 1 58 1 139 1 115 2 351 1 306 1 307 2 352 1 247 2 260 5 17 1 94 1 313 1 99 1 
227 1 250 2 362 1 271 2 22 1 205 1 157 1 295 1 364 2 4 1 104 1 162 1 106 1 209 1 138 1 347 1 189 1 115 1 35 1 245 1 375 1 285 1 307 2 40 1 287 1 311 1 94 1 290 1 
149 1 250 1 115 1 271 1 25 1 260 1 353 1 104 1 4 1 106 1 
338 5 250 5 251 10 271 5 180 5 305 1 307 2 234 5 247 2 260 5 364 2 94 1 367 2 368 2 209 2 
125 1 260 1 25 1 162 1 205 1 58 1 
125 2 178 1 250 2 271 2 273 1 205 3 253 2 134 2 206 1 4 2 104 2 162 3 106 1 241 2 110 1 58 4 60 1 85 1 303 1 115 2 219 1 288 1 222 4 70 1 264 4 123 1 17 2 378 1 381 4 
227 2 128 1 127 1 45 1 273 1 253 1 53 1 206 1 295 2 23 1 79 1 282 1 370 1 168 1 85 1 214 1 63 2 35 2 245 3 285 1 246 1 194 1 40 3 330 1 311 2 222 1 288 1 356 1 264 1 95 1 377 1 381 1 
338 2 250 2 251 4 271 2 180 2 134 1 234 2 25 2 4 1 104 1 106 1 83 1 115 1 307 1 260 4 17 1 
243 1 186 1 258 1 
243 1 265 1 122 1 76 1 258 1 
243 1 186 1 258 1 
243 1 186 1 258 1 
243 1 50 1 258 1 
243 1 50 1 258 1 
243 1 50 1 258 1 
243 1 258 1 
223 1 107 1 
83 1 128 3 127 2 84 1 45 2 362 1 9 1 190 1 63 4 214 2 144 4 287 1 364 1 332 1 282 7 298 1 225 2 209 1 370 2 347 1 
83 1 128 2 84 1 362 1 9 1 144 3 287 1 364 1 332 1 121 1 282 5 225 1 209 1 347 1 
128 2 127 1 45 1 9 1 63 2 214 1 144 2 247 1 364 1 354 1 367 1 282 4 368 1 298 1 225 2 209 1 370 1 
128 4 9 1 252 1 144 3 247 1 364 1 281 1 367 1 282 7 368 1 298 1 225 2 209 1 210 1 99 2 
128 11 127 2 46 1 45 2 362 2 252 1 363 1 364 3 281 2 282 22 367 2 368 2 298 4 209 3 370 2 347 1 83 1 84 1 9 4 190 2 63 4 214 2 144 11 287 2 247 2 332 1 225 8 99 2 19 1 
128 1 282 1 99 1 
281 1 282 1 144 1 
127 1 128 3 45 1 9 2 214 1 63 2 144 3 305 1 247 1 364 1 354 1 282 6 367 1 368 1 298 1 225 3 209 1 370 1 
128 6 127 1 45 1 181 1 233 1 364 2 281 1 282 12 367 2 368 2 298 1 209 2 210 1 370 1 139 1 9 1 214 1 63 2 144 6 351 1 352 1 247 2 225 2 313 1 99 1 
128 3 362 1 9 1 144 3 287 1 364 1 282 6 298 1 225 2 209 1 347 1 
84 1 128 2 127 1 45 1 362 1 9 1 190 1 63 2 214 1 144 1 287 1 332 1 282 3 298 1 225 2 370 1 19 1 
127 1 128 5 45 1 362 2 9 3 214 1 63 2 144 5 233 1 287 2 364 2 282 10 290 1 298 2 225 5 209 2 370 1 347 1 
127 1 45 1 63 2 214 1 144 2 233 1 364 1 282 2 368 1 298 1 225 1 370 1 
128 2 127 1 45 1 9 1 63 2 214 1 144 2 233 1 247 1 364 1 367 1 282 4 368 1 298 1 225 2 209 1 370 1 
128 2 127 3 371 1 45 3 362 1 190 1 9 1 63 6 214 3 144 1 233 1 287 1 282 3 298 1 225 2 370 3 19 1 
128 17 127 5 45 5 362 3 153 1 252 1 233 1 364 5 281 3 282 33 367 3 368 3 298 5 209 5 210 1 370 5 347 2 83 1 84 1 213 1 371 1 190 2 9 6 214 5 63 10 144 16 287 3 247 3 354 1 332 1 376 1 225 11 99 4 19 1 
83 1 84 1 127 1 128 3 45 1 362 1 9 1 63 2 214 1 144 4 181 1 233 1 287 1 364 1 332 1 281 1 282 7 225 1 209 1 370 1 210 1 99 1 347 1 
128 4 127 2 45 2 362 1 252 1 181 1 233 1 364 2 281 1 282 10 368 1 298 1 209 1 210 1 370 2 347 1 83 1 84 1 9 1 214 2 63 4 144 6 287 1 247 1 354 1 332 1 225 2 99 2 
128 9 127 3 45 3 362 1 181 1 233 1 364 3 281 1 282 18 367 2 368 2 298 1 209 3 210 1 370 3 347 1 83 1 139 1 84 1 9 2 190 1 214 3 63 6 144 9 351 1 287 1 352 1 247 2 354 1 332 1 225 3 313 1 99 1 
128 6 127 3 45 3 362 1 181 1 233 1 364 3 281 1 282 16 367 1 368 2 298 2 209 2 210 1 370 3 347 1 83 1 139 1 84 1 190 1 9 2 214 3 63 6 144 10 351 1 287 1 352 1 247 2 354 1 332 1 225 4 313 1 99 1 
83 1 84 1 127 1 128 3 45 1 362 1 9 1 63 2 214 1 144 4 181 1 233 1 287 1 364 1 332 1 281 1 282 7 225 1 209 1 370 1 210 1 99 1 347 1 
128 6 127 1 45 1 181 1 233 1 364 2 281 1 282 12 367 2 368 2 298 1 209 2 210 1 370 1 139 1 9 1 214 1 63 2 144 6 351 1 352 1 247 2 225 2 313 1 99 1 
128 7 127 4 45 4 362 1 181 1 233 1 364 3 281 1 282 17 367 1 368 2 298 2 209 2 210 1 370 4 347 1 83 1 139 1 84 1 9 2 190 2 214 4 63 8 144 10 351 1 287 1 352 1 247 2 354 1 332 1 225 4 313 1 99 1 
128 7 127 4 45 4 181 1 233 1 364 3 281 1 282 16 367 2 368 3 298 3 209 2 210 1 370 4 139 1 371 1 9 3 190 2 214 4 63 8 144 9 351 1 352 1 247 3 225 6 313 1 99 1 
128 4 84 2 362 3 9 3 144 3 287 3 364 1 332 1 282 7 298 3 225 6 209 1 347 1 
128 7 127 4 45 4 362 1 181 1 233 1 364 3 281 1 282 17 367 1 368 2 298 1 209 2 210 1 370 4 347 1 83 1 139 1 84 1 371 1 9 2 190 2 214 4 63 8 144 10 351 1 287 1 352 1 247 2 332 1 225 3 313 1 99 1 
227 1 374 1 245 1 259 1 145 1 194 1 40 1 
227 1 151 1 10 1 257 1 374 1 245 1 145 1 259 1 194 1 329 1 40 1 177 1 
85 1 288 1 222 1 121 1 264 1 123 1 273 1 253 1 110 1 381 1 206 1 
227 1 85 1 130 1 35 1 273 1 245 2 253 1 194 1 206 1 40 2 311 1 288 1 222 1 356 1 264 1 377 1 95 1 381 1 
227 2 130 1 273 2 22 1 206 3 254 1 241 1 187 1 8 1 85 1 35 1 245 2 194 1 40 2 68 1 311 2 222 1 288 1 356 2 264 1 95 1 377 1 381 1 
227 2 130 1 273 2 22 1 206 3 254 1 159 1 241 1 187 1 8 1 85 1 35 1 245 2 194 1 40 2 68 1 310 1 311 2 222 2 288 1 356 2 264 2 377 1 381 2 
8 1 85 1 292 1 349 1 143 1 273 1 205 2 253 1 2 1 254 1 206 4 260 1 25 1 310 1 288 1 162 2 222 3 356 1 264 3 241 1 380 1 381 3 58 1 
8 1 85 1 292 1 349 1 273 1 205 2 253 1 254 1 206 4 260 1 25 1 310 1 288 1 162 2 222 3 356 1 264 3 241 1 80 1 380 1 381 3 58 1 
85 1 288 1 222 1 264 1 28 1 381 1 
85 2 1 1 229 1 132 1 273 2 37 1 253 2 206 3 276 1 238 1 355 1 222 6 288 3 356 1 28 1 264 7 299 1 72 1 369 1 381 7 96 1 
227 1 128 2 127 2 150 1 45 2 152 1 362 1 130 1 229 1 273 1 344 1 206 1 23 2 364 1 78 1 282 5 209 1 370 2 168 1 347 1 83 1 84 1 85 1 9 1 63 4 214 2 191 1 142 1 35 1 64 1 144 3 245 2 246 1 194 2 287 1 40 2 330 2 311 1 288 1 222 1 332 1 356 1 264 1 377 1 95 1 225 1 381 1 
149 1 125 1 250 1 292 1 271 1 205 3 253 1 206 2 25 1 4 2 104 2 162 3 184 1 106 2 80 1 165 1 58 2 115 2 349 1 218 1 260 1 353 1 222 1 264 1 378 1 379 1 380 1 381 1 
85 1 229 1 349 1 273 1 206 2 222 2 288 2 356 1 28 1 264 2 72 1 57 1 381 2 
85 1 229 1 273 1 253 1 318 1 206 1 310 1 288 1 222 4 264 4 123 1 381 4 110 1 
348 1 85 1 132 1 273 1 206 1 183 1 248 1 222 2 288 2 356 1 264 2 241 1 369 1 381 2 
85 1 93 1 288 1 222 1 333 1 171 1 264 1 192 1 253 1 381 1 
276 1 323 1 85 1 1 1 288 1 222 2 229 1 264 2 273 1 381 2 206 1 
85 2 229 1 273 2 253 1 37 1 318 1 206 3 276 1 222 4 288 2 355 1 264 5 241 1 123 1 110 1 381 5 
85 2 229 1 273 2 253 1 318 1 206 3 276 1 222 4 288 2 355 1 264 5 241 1 123 1 297 1 110 1 381 5 
227 1 85 1 130 1 35 1 273 1 245 2 253 1 194 1 206 1 40 2 159 1 311 1 288 1 222 1 356 1 264 1 377 1 381 1 
85 1 132 1 273 1 206 1 222 1 288 2 356 1 264 1 241 1 72 1 369 1 381 1 96 1 
126 1 227 1 129 1 245 1 217 1 40 1 161 1 240 1 201 1 
237 1 161 1 336 1 
126 1 221 1 161 1 240 1 194 1 
126 2 322 1 179 1 292 1 315 1 22 1 205 2 194 1 237 1 260 1 25 1 68 1 161 1 162 2 221 2 240 2 187 1 379 1 336 1 
101 1 86 1 121 1 317 1 
101 1 169 1 86 1 317 1 98 1 66 1 120 1 
280 1 118 1 98 1 
101 1 169 1 86 1 314 1 13 1 317 1 120 1 66 3 334 2 185 1 268 1 98 3 
101 1 169 1 86 1 312 1 317 1 320 1 98 2 66 2 120 1 
101 1 169 1 13 1 120 1 66 1 274 1 275 1 93 1 105 1 333 1 98 1 
101 1 169 1 86 1 13 1 98 1 66 1 120 1 
169 1 86 2 13 1 317 1 98 1 66 1 120 1 
101 1 169 2 86 1 346 1 244 1 13 1 98 2 82 1 66 2 120 2 
101 2 169 1 86 1 316 1 13 1 317 1 120 1 66 3 274 1 173 1 188 1 312 2 98 3 
101 1 32 1 169 1 86 1 204 1 192 1 13 1 317 1 120 1 66 2 275 1 93 2 333 1 312 1 98 2 
101 2 169 2 86 1 232 1 316 1 13 1 317 1 120 2 66 4 274 1 312 2 98 4 320 1 
101 1 169 1 86 1 13 1 317 1 98 1 66 1 120 1 
101 3 169 1 86 2 141 1 316 1 317 2 66 4 120 1 274 1 334 1 185 1 268 1 312 2 98 4 
101 1 169 1 86 1 293 1 13 1 36 1 317 1 120 1 66 2 172 1 312 1 98 2 
101 1 169 1 86 1 334 2 185 1 12 1 268 2 13 1 317 1 98 3 66 3 120 1 
101 2 18 1 109 2 242 1 
169 1 13 1 98 1 327 1 66 1 120 1 
101 1 173 1 169 1 86 1 13 1 312 1 317 1 98 2 66 2 120 1 
30 1 
101 1 169 1 86 1 13 1 317 1 98 1 66 1 120 1 
101 1 173 1 169 1 86 1 334 1 13 1 312 1 317 1 98 3 66 3 120 1 
101 1 141 1 316 1 274 1 
101 1 86 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
341 2 85 2 298 1 1 9 364 1 323 1 158 3 139 4 228 1 202 6 95 1 256 1 116 1 73 1 373 9 351 1 261 2 13 1 234 2 338 1 16 1 238 2 287 2 19 1 81 2 379 1 129 5 48 1 
341 2 85 2 298 1 1 9 364 1 323 1 158 3 139 4 228 1 202 6 95 1 256 1 116 1 73 1 373 9 351 1 261 2 13 1 234 2 338 1 16 1 287 2 238 2 19 1 81 2 379 1 129 5 48 1 
341 2 85 2 298 1 1 10 364 1 323 1 158 4 139 5 228 1 202 7 95 1 256 1 116 1 73 1 373 10 351 1 261 2 13 1 234 2 338 1 16 1 287 2 238 2 19 1 81 2 379 1 129 6 48 1 
341 2 85 2 298 1 1 7 323 1 158 2 139 3 228 1 202 4 95 1 256 1 116 1 73 1 373 7 351 1 261 2 13 1 234 2 338 1 16 1 287 2 238 1 19 1 81 2 379 1 129 4 48 1 
341 1 373 4 351 1 261 1 234 1 1 4 364 1 338 1 287 1 238 2 158 1 19 1 139 2 202 3 95 1 81 1 256 1 129 3 
341 1 73 1 373 2 351 1 261 1 85 1 1 2 234 1 211 1 338 1 287 1 19 1 228 1 129 1 170 1 71 1 
341 2 373 3 351 1 85 1 1 3 338 1 16 1 287 2 19 1 158 1 139 1 202 1 129 2 
341 2 85 1 1 9 364 1 139 4 158 3 202 7 95 1 256 1 371 1 116 1 373 9 351 1 261 1 234 1 338 1 16 1 287 2 238 2 125 1 19 1 81 1 129 5 48 1 
341 2 85 1 1 9 364 1 139 4 158 3 202 7 95 1 256 1 371 1 116 1 373 9 351 1 261 1 234 1 338 1 16 1 287 2 238 2 125 1 19 1 81 1 129 5 48 1 
276 1 224 1 306 1 
276 1 148 2 361 1 
197 1 109 2 83 2 132 2 24 2 140 2 282 1 156 2 
50 1 357 2 244 1 52 1 0 1 83 2 132 2 24 2 59 1 250 1 252 1 156 3 366 1 197 1 324 1 109 3 199 1 3 1 326 2 70 2 140 2 161 1 257 1 350 1 330 1 231 1 375 2 282 1 265 1 236 2 311 1 312 1 289 1 21 1 168 1 45 1 216 1 
197 1 22 1 109 1 83 1 132 1 24 1 10 1 140 1 27 1 156 1 
276 1 22 1 173 1 56 1 83 1 281 1 57 1 156 1 109 1 136 1 306 1 381 1 307 1 34 1 
276 1 22 1 173 1 56 2 132 1 83 1 24 1 57 1 156 1 109 1 306 1 140 1 381 1 34 2 307 1 
56 1 352 1 363 1 353 1 34 1 
276 1 253 1 56 2 352 1 93 1 306 1 353 1 34 2 
56 1 353 1 34 1 
22 1 328 1 56 1 132 1 83 1 24 1 10 1 352 1 27 1 156 1 197 1 109 1 140 1 34 1 
276 1 
276 1 253 1 56 2 352 1 84 1 306 1 353 1 34 2 
276 1 56 5 352 2 100 1 334 2 14 2 353 2 76 1 4 1 138 1 253 1 91 1 147 1 348 1 306 1 273 1 46 1 34 5 382 2 
224 1 282 1 
22 1 83 2 132 1 24 1 282 1 156 2 109 2 294 1 140 1 267 1 380 1 
374 1 12 1 196 1 
357 1 375 1 231 1 330 1 209 1 59 1 282 1 156 1 366 1 109 1 312 1 289 1 326 1 168 1 161 1 257 1 
357 1 36 1 132 1 83 1 330 1 231 1 375 1 59 1 12 1 156 2 310 1 366 1 109 2 312 1 289 1 326 1 168 1 140 1 257 1 161 1 
109 3 36 1 83 3 132 3 24 1 140 3 282 1 156 3 
22 1 109 1 83 1 132 1 10 1 140 1 156 1 
22 1 132 1 83 1 24 1 156 1 109 1 140 1 267 1 380 1 
357 1 244 1 22 1 52 1 0 1 173 1 56 1 83 3 132 3 24 2 59 1 57 1 252 1 156 4 366 1 135 1 197 1 198 1 109 4 199 1 326 1 70 1 140 3 257 1 161 1 307 1 34 1 350 1 36 1 330 1 231 1 375 1 282 1 310 1 265 1 236 2 311 1 312 1 289 1 168 1 45 1 216 1 380 1 381 1 
109 2 136 1 36 1 83 2 132 1 140 1 282 1 275 1 156 2 
276 1 22 1 173 1 56 1 36 2 132 3 83 3 24 1 57 1 156 3 310 1 135 1 109 3 140 3 203 1 380 1 381 1 34 1 307 1 
109 2 36 1 83 2 132 2 24 1 12 1 140 2 156 2 380 1 196 1 
357 1 375 1 231 1 330 1 59 1 282 1 156 1 366 1 109 1 312 1 289 1 326 1 168 1 161 1 257 1 
357 1 162 1 220 1 375 1 231 1 330 1 59 1 282 1 156 1 109 1 312 1 289 1 326 1 168 1 257 1 
50 2 244 1 221 1 359 1 133 1 86 1 343 1 252 1 196 2 70 4 350 1 374 2 12 2 264 1 265 2 77 1 236 2 311 1 104 1 45 1 106 1 216 1 315 1 242 1 
22 1 109 1 83 1 132 1 140 1 240 1 381 1 156 1 
36 2 132 4 83 5 24 1 282 1 156 5 310 1 109 5 136 1 29 1 327 1 140 4 275 1 380 1 
22 1 109 2 83 2 132 2 10 1 240 1 140 2 156 2 
146 1 313 1 
146 1 313 1 
123 1 20 1 
123 1 20 1 
123 1 20 1 
146 1 313 1 99 1 
146 1 313 1 99 1 
146 1 313 1 5 1 
53 1 123 1 89 1 146 2 313 2 20 1 
146 1 313 1 99 1 
146 1 313 1 164 1 
146 1 313 1 164 1 
146 1 313 1 164 1 
276 1 143 1 9 2 56 2 74 3 144 2 362 2 212 1 64 1 89 1 146 2 213 2 313 2 111 1 126 1 205 1 204 1 34 2 115 2 
56 1 132 2 83 2 297 1 177 1 362 1 156 2 109 2 5 1 140 2 34 1 143 1 9 1 74 1 144 1 282 1 15 1 146 1 213 1 42 1 313 1 288 1 103 1 47 1 
261 1 81 1 234 1 
211 1 261 1 234 1 
121 1 211 1 163 1 225 1 261 3 81 2 
211 1 163 1 225 1 31 1 261 2 81 1 
211 1 163 2 225 1 261 2 81 1 
82 1 154 2 359 1 56 5 361 1 86 1 322 1 325 1 253 1 306 1 34 5 276 2 7 1 352 4 98 1 165 2 100 1 334 1 264 1 14 1 353 1 76 2 42 1 288 1 189 1 103 1 148 3 169 1 296 2 46 3 315 1 382 1 
316 1 219 5 82 3 359 3 56 9 319 1 361 3 86 3 363 5 253 1 67 1 370 1 306 1 34 9 276 5 206 1 278 1 7 1 352 7 98 2 165 6 100 1 334 2 264 3 14 2 353 6 76 6 42 4 189 2 147 1 148 9 296 6 46 8 315 3 382 2 
154 1 82 1 56 3 359 1 361 2 86 1 322 1 306 1 34 3 276 3 352 2 98 1 165 2 334 1 14 1 264 1 76 2 42 1 189 1 147 1 148 4 169 1 46 3 296 2 315 1 382 1 
154 2 82 2 56 4 359 2 319 1 361 3 86 2 322 1 67 1 306 1 34 4 276 4 206 1 352 3 98 1 165 4 334 1 14 1 264 2 76 4 42 2 189 1 148 7 147 1 169 1 296 4 46 5 315 2 382 1 
90 1 224 1 59 1 
59 1 336 1 
190 1 
330 1 59 1 
178 1 90 2 330 1 231 1 59 3 127 1 
330 1 231 1 59 1 
354 1 59 1 
50 4 6 1 119 1 226 1 86 1 195 1 264 1 265 3 77 3 17 1 237 2 166 1 214 1 69 1 70 7 242 2 172 1 
50 4 6 1 119 1 226 1 86 1 195 1 264 1 265 3 77 3 17 1 237 2 166 1 214 1 69 1 70 7 242 2 172 1 
50 4 6 1 119 1 184 1 226 1 86 1 195 1 264 1 265 3 77 3 17 1 237 2 166 1 214 1 69 1 70 7 242 2 172 1 
50 16 244 1 82 3 359 3 226 1 58 1 246 1 249 1 86 4 195 5 252 1 201 1 69 1 70 31 350 1 6 2 280 3 182 1 119 2 97 4 264 4 265 15 77 10 236 2 17 2 237 3 166 1 18 1 214 2 79 1 216 1 315 3 172 1 242 5 
50 5 244 2 226 1 86 1 195 1 252 2 201 1 69 1 70 9 142 1 350 2 6 1 259 1 119 1 264 1 265 4 77 4 236 4 17 1 237 2 214 1 216 2 242 3 172 1 
357 1 341 1 54 1 85 1 1 2 202 1 326 1 179 1 257 1 277 1 373 2 35 1 351 1 375 1 261 2 377 1 234 1 121 1 337 1 211 1 338 1 287 1 312 1 19 1 293 1 356 1 81 1 129 1 171 1 49 1 
357 1 341 1 317 1 54 1 85 1 1 3 30 1 326 1 202 2 179 1 257 1 277 1 373 3 35 1 351 1 375 1 261 2 234 1 121 1 337 1 211 1 338 1 287 1 312 1 293 1 239 1 81 1 129 1 171 1 49 1 
357 1 317 1 54 1 85 1 1 2 30 1 326 1 202 2 179 1 257 1 277 1 373 2 351 1 375 1 261 2 234 1 121 1 337 1 211 1 338 1 312 1 81 1 129 1 171 1 49 1 
357 1 341 1 277 2 373 1 330 1 375 1 59 1 85 2 107 1 283 1 284 1 1 1 235 1 345 1 337 2 312 1 287 1 112 1 239 1 326 1 168 1 179 2 257 1 
357 1 341 1 54 1 85 1 1 1 30 1 326 1 179 1 257 1 277 1 373 1 35 1 375 1 261 2 234 1 121 1 337 1 211 1 287 1 312 1 19 1 293 1 356 1 81 1 171 1 49 1 
286 1 
55 1 56 5 59 1 57 1 156 1 299 2 157 2 109 1 65 1 253 3 302 1 112 1 113 1 306 1 160 2 257 1 307 1 263 1 11 1 14 1 353 6 76 2 312 1 168 2 357 2 22 1 173 1 223 1 269 1 83 1 361 2 271 1 134 2 26 4 136 1 368 1 326 2 34 5 276 2 181 1 329 2 330 1 375 2 281 1 98 1 100 1 334 1 145 1 283 1 148 2 150 2 46 2 152 2 381 1 382 1 
22 1 173 1 223 1 56 3 83 1 57 1 84 1 26 2 156 1 109 1 136 1 65 1 253 1 113 1 160 1 307 1 34 3 181 1 281 1 11 1 353 2 381 1 
22 1 173 1 223 1 56 3 83 1 57 1 84 1 26 3 134 1 156 1 109 1 136 1 65 1 253 1 113 1 306 1 307 1 34 3 276 1 181 1 281 1 11 1 353 1 381 1 
22 1 173 1 223 1 56 3 83 1 84 1 57 1 26 3 134 1 156 1 109 1 136 1 65 1 253 1 113 1 306 1 160 1 307 1 34 3 276 1 181 1 281 1 11 1 353 2 150 1 381 1 
55 1 56 5 57 1 156 1 299 2 109 1 157 2 65 1 253 3 113 1 306 5 160 4 307 1 262 1 11 1 14 1 353 7 76 1 22 1 358 1 173 1 223 1 83 1 361 2 84 1 26 6 134 4 28 1 136 1 137 1 368 1 34 5 276 5 181 1 329 2 281 1 100 1 334 1 150 4 44 1 46 1 381 1 152 2 382 1 
55 1 56 4 57 1 156 1 299 2 109 1 157 2 65 1 253 2 113 1 306 1 160 2 307 1 263 1 11 1 14 1 353 4 76 1 22 1 173 1 223 1 83 1 361 2 26 4 134 2 136 1 368 1 34 4 276 2 181 1 329 2 281 1 100 1 334 1 148 2 150 2 46 1 381 1 152 2 382 1 
22 1 55 1 173 1 223 1 56 4 83 1 361 2 57 1 134 2 26 4 156 1 299 2 157 2 28 1 109 1 136 1 65 1 137 1 253 2 368 1 113 1 306 1 160 2 307 1 34 4 276 1 181 1 329 2 281 1 11 1 100 1 334 1 14 1 353 4 76 1 150 2 44 1 46 1 152 2 381 1 382 1 
22 1 55 1 173 1 223 1 56 4 83 1 361 2 57 1 134 2 26 4 156 1 299 2 157 2 28 1 109 1 136 1 65 1 137 1 253 2 368 1 113 1 306 1 160 2 307 1 34 4 276 1 181 1 329 2 281 1 11 1 100 1 334 1 14 1 353 4 76 1 150 2 44 1 46 1 152 2 381 1 382 1 
22 1 55 1 173 1 223 1 56 4 83 1 57 1 134 2 26 4 156 1 299 2 28 1 109 1 136 1 65 1 253 2 347 2 113 1 306 1 160 2 307 1 34 4 276 1 181 1 208 2 281 1 11 1 38 1 100 1 334 1 14 1 353 4 101 1 76 1 148 2 150 2 46 1 152 2 381 1 218 1 382 1 
22 1 55 1 173 1 223 1 56 4 83 1 361 2 57 1 26 5 134 3 156 1 299 2 157 2 28 1 109 1 136 1 65 1 137 1 253 2 368 1 113 1 306 1 160 3 307 1 34 4 276 1 181 1 329 2 281 1 262 1 100 1 11 1 334 1 14 1 353 5 76 1 44 1 150 3 46 1 152 2 381 1 382 1 
22 1 55 1 173 1 223 1 56 4 83 1 361 2 57 1 26 5 134 3 156 1 299 2 157 2 28 1 109 1 136 1 65 1 137 1 253 2 368 1 113 1 306 1 160 3 307 1 34 4 276 1 181 1 329 2 281 1 262 1 100 1 11 1 334 1 14 1 353 5 76 1 44 1 150 3 46 1 152 2 381 1 382 1 
55 1 56 4 57 1 156 1 299 2 109 1 65 1 253 2 347 2 113 1 306 1 160 2 307 1 208 2 263 1 11 1 14 1 353 4 76 1 22 1 173 1 223 1 83 1 26 4 134 2 136 1 34 4 276 1 181 1 281 1 100 1 334 1 101 1 148 2 150 2 46 1 381 1 152 2 382 1 
50 3 244 1 224 1 226 1 86 1 252 1 196 1 69 1 70 6 350 1 6 1 374 1 12 1 282 2 264 1 77 2 265 3 236 2 17 1 311 1 237 1 104 1 45 1 216 1 172 1 242 2 
50 8 244 2 0 1 82 2 359 2 174 1 58 1 227 1 86 1 195 1 252 2 196 4 255 1 70 14 350 2 8 1 280 3 374 11 97 3 12 11 75 1 282 1 264 2 77 2 265 6 236 4 311 2 79 1 21 1 45 1 216 2 315 1 242 1 
357 1 50 1 244 1 0 1 83 1 132 1 59 1 227 1 252 1 156 2 366 1 196 1 109 2 367 1 326 1 140 1 70 2 257 1 161 1 350 1 180 1 36 1 330 1 231 1 375 1 209 1 282 1 310 1 265 1 236 2 311 1 312 1 289 1 21 1 168 1 151 1 45 1 216 1 
50 10 244 3 0 1 59 2 194 2 195 4 252 3 156 3 196 7 109 3 199 2 110 1 69 1 70 20 161 2 257 2 350 3 6 1 118 2 12 7 264 3 310 1 265 10 77 8 17 1 311 3 124 2 312 2 21 1 168 1 216 3 315 2 172 1 357 3 82 2 359 2 132 1 83 1 226 1 86 3 227 1 365 2 366 2 30 1 326 3 140 1 374 7 36 1 375 3 231 2 330 2 232 1 282 2 236 6 237 1 41 1 289 2 45 3 242 4 
357 8 50 1 244 2 130 1 0 1 83 1 132 1 248 1 59 3 252 2 156 1 109 1 324 2 30 1 112 1 326 7 140 1 70 2 257 2 350 2 230 1 36 1 375 8 330 2 309 1 376 1 377 1 283 1 185 1 265 1 236 4 311 2 312 2 104 1 21 1 168 2 128 1 45 2 216 2 
50 1 244 1 82 1 359 1 132 1 83 1 24 1 227 1 86 1 252 1 156 1 196 1 109 1 140 1 70 3 350 1 374 1 12 1 264 1 77 1 265 2 236 2 311 1 45 1 216 1 217 1 380 1 315 1 242 1 
50 2 350 1 244 1 374 1 359 1 12 1 195 1 252 1 264 1 196 1 77 1 236 2 311 1 104 1 70 2 45 1 106 1 216 1 
350 1 244 1 374 1 221 1 12 1 86 1 252 1 196 1 77 1 265 2 236 2 311 1 104 1 70 2 45 1 216 1 315 1 242 1 
50 2 244 1 82 1 359 1 86 1 195 1 252 1 196 2 70 4 350 1 374 2 12 2 264 1 77 2 265 2 236 2 311 1 104 1 45 1 216 1 315 1 242 1 
50 2 350 1 244 1 374 1 359 1 12 1 195 1 376 1 252 1 264 1 196 1 77 1 236 2 311 1 70 2 45 1 106 1 216 1 
350 1 244 1 374 1 221 1 12 1 86 1 376 1 252 1 196 1 77 1 265 2 236 2 311 1 70 2 45 1 216 1 315 1 242 1 
50 2 244 1 82 1 359 1 86 1 195 1 252 1 196 2 70 4 350 1 374 2 12 2 376 1 264 1 77 2 265 2 236 2 311 1 45 1 216 1 315 1 242 1 
50 2 244 1 82 1 359 1 86 1 195 1 252 1 196 2 70 4 350 1 374 2 12 2 264 1 77 2 265 2 236 2 311 1 45 1 216 1 315 1 242 1 
50 1 357 1 244 1 0 1 59 1 252 1 156 1 366 1 109 1 199 1 326 1 70 2 257 1 161 1 350 1 330 1 231 1 375 1 282 1 265 1 236 2 311 1 312 1 289 1 21 1 168 1 45 1 216 1 
50 1 357 1 244 1 220 1 0 1 59 1 252 1 156 1 109 1 326 1 70 2 257 1 162 1 350 1 330 1 231 1 375 1 282 1 265 1 236 2 311 1 312 1 289 1 21 1 168 1 191 1 45 1 216 1 
50 2 244 1 82 1 359 1 227 1 86 1 195 1 252 1 196 2 70 4 350 1 374 2 12 2 264 1 77 2 265 2 236 2 311 1 45 1 216 1 315 1 242 1 
50 2 357 1 244 1 82 1 359 1 59 1 86 1 195 1 252 1 156 1 196 2 366 1 109 1 199 1 326 1 70 4 257 1 161 1 350 1 374 2 231 1 375 1 330 1 12 2 377 1 264 1 265 2 77 2 236 2 311 1 312 1 124 1 289 1 45 1 216 1 315 1 242 1 
50 2 244 1 318 1 82 1 359 1 132 1 83 1 24 1 86 1 227 1 195 1 252 1 156 1 196 1 109 1 140 1 70 3 350 1 374 1 12 1 264 1 265 1 77 1 236 2 311 1 45 1 216 1 315 1 380 1 
50 20 244 3 51 1 245 1 58 1 247 1 195 4 252 3 63 1 346 1 201 1 159 1 68 4 69 1 70 41 114 1 350 3 6 1 264 5 77 8 265 21 17 1 79 3 215 1 80 1 216 3 315 4 172 1 82 4 359 4 175 1 226 1 86 5 32 1 142 1 372 2 280 3 279 1 97 4 236 6 237 1 290 1 242 4 
50 20 51 1 244 4 82 4 359 4 175 1 226 1 245 1 247 1 58 1 86 4 195 3 252 4 63 1 346 1 201 2 159 1 68 4 69 1 32 1 114 1 70 38 142 1 372 2 350 4 6 1 279 1 280 3 97 4 264 5 265 18 77 7 236 8 17 1 237 1 290 1 79 3 215 1 80 1 216 4 315 3 172 1 242 4 
50 27 51 1 244 2 82 7 359 7 175 1 226 1 245 1 247 1 58 2 86 8 195 7 252 2 63 1 346 1 201 1 255 2 68 4 69 1 32 1 114 1 70 52 142 1 372 1 350 2 6 1 279 1 280 4 97 4 264 8 265 25 77 14 236 4 17 1 237 1 79 2 215 1 80 1 216 2 315 7 172 1 242 7 
50 9 244 2 82 3 359 3 245 1 58 1 86 3 195 3 252 2 63 2 305 1 68 2 114 1 70 19 142 1 372 1 350 2 279 1 280 1 97 2 264 3 265 10 77 6 236 4 290 1 79 1 80 1 216 2 315 3 242 3 
50 14 244 3 51 1 82 3 359 3 175 1 245 1 247 1 86 2 195 2 252 3 63 1 346 1 201 2 68 4 32 1 114 1 70 26 142 1 372 2 350 3 279 2 280 2 97 2 264 3 77 4 265 12 236 6 79 2 215 1 80 1 216 3 315 2 242 2 
212 1 89 1 146 1 96 1 213 1 313 1 9 1 111 1 144 1 362 1 
5 1 297 1 
2 1 146 1 213 1 313 1 9 1 144 1 233 1 362 1 349 1 
276 1 143 1 56 1 9 1 74 2 144 1 362 1 212 1 64 1 89 1 146 1 213 1 313 1 111 1 126 1 204 1 34 1 115 1 
276 1 143 1 56 1 9 1 74 2 144 1 362 1 212 1 64 1 89 1 146 1 213 1 313 1 111 1 126 1 204 1 34 1 115 1 
276 1 143 1 56 1 9 1 74 2 144 1 362 1 212 1 64 1 89 1 146 1 213 1 313 1 111 1 126 1 204 1 34 1 115 1 
53 1 99 1 295 1 
53 1 99 1 295 1 
186 1 164 1 
53 1 186 1 164 1 
15 1 47 1 
56 1 132 2 83 2 297 1 177 1 156 2 362 1 109 2 64 1 5 1 140 2 115 1 34 1 9 1 352 1 74 1 144 1 282 1 335 1 15 1 146 1 213 1 42 1 313 1 288 1 103 1 47 1 
99 1 295 1 
53 1 186 1 164 1 
357 2 50 1 340 1 244 1 0 1 83 2 59 1 248 1 227 1 60 1 252 1 156 2 108 1 109 2 324 2 326 2 70 2 257 1 350 1 207 1 330 1 375 2 185 1 39 1 265 1 236 2 311 1 312 1 21 1 45 1 216 1 
357 2 375 2 261 2 37 1 270 1 377 1 234 1 62 1 121 1 211 1 337 1 312 1 30 1 293 1 326 2 81 1 257 1 171 1 49 1 
357 1 375 1 261 2 234 1 62 1 121 1 211 1 337 1 312 1 30 1 291 1 293 1 326 1 81 1 171 1 257 1 49 1 
357 1 23 1 330 1 375 1 37 1 59 1 283 1 337 1 345 1 312 1 112 1 326 1 168 1 257 1 
357 1 375 1 261 2 37 1 270 1 234 1 62 1 121 1 211 1 337 1 312 1 30 1 293 1 326 1 81 1 257 1 171 1 49 1 
304 1 
276 1 76 1 138 1 224 1 348 1 306 1 46 1 
56 1 361 1 157 1 253 1 368 1 306 1 34 1 276 2 329 1 100 1 334 1 14 1 353 1 76 1 148 1 46 1 382 1 
56 5 59 10 57 2 344 1 253 3 302 1 348 1 306 2 257 4 72 1 260 2 118 2 165 6 210 1 14 4 264 2 353 5 354 2 76 8 355 2 312 3 168 1 315 2 357 3 82 2 359 2 360 2 361 6 86 2 178 1 138 1 90 2 369 2 92 2 326 3 274 1 34 5 276 8 330 3 231 3 375 3 98 2 100 4 377 1 334 4 336 3 102 2 40 2 188 2 292 1 148 12 46 9 296 6 382 4 
51 1 82 2 56 1 359 2 175 1 361 3 86 2 346 1 253 1 302 1 369 2 32 1 306 2 34 1 276 5 280 1 331 1 97 1 98 1 165 5 100 2 334 2 14 2 264 2 353 1 76 5 102 1 78 1 148 6 79 1 215 1 296 5 46 8 315 2 382 2 
22 1 222 1 56 1 132 1 83 1 24 1 226 1 86 1 27 1 156 1 197 1 109 1 369 2 140 1 34 1 6 1 328 1 10 1 100 1 334 1 14 1 264 2 76 2 102 1 17 1 44 1 46 2 382 1 
276 1 100 1 334 1 14 1 76 1 138 1 348 1 306 1 46 1 382 1 
276 5 82 2 118 1 359 2 361 5 165 5 86 2 264 2 76 5 102 1 369 2 148 10 296 5 46 5 315 2 
276 1 56 1 253 1 306 1 34 1 353 1 
357 4 56 3 59 1 271 1 344 1 253 2 302 2 112 1 326 4 257 1 34 3 330 1 375 4 98 2 100 1 333 1 210 2 145 1 334 2 14 2 283 1 353 4 76 2 122 1 312 1 147 1 168 2 46 2 382 2 
357 1 244 1 52 1 0 1 83 2 132 2 24 2 59 1 252 1 156 3 366 1 197 1 109 3 199 1 326 1 70 1 140 2 161 1 257 1 350 1 375 1 231 1 330 1 282 1 265 1 236 2 311 1 312 1 289 1 168 1 45 1 216 1 
276 4 361 2 98 1 165 2 100 1 334 1 14 1 76 2 237 1 302 1 148 4 306 2 296 2 46 1 382 1 
213 1 303 1 144 1 
213 1 303 1 144 1 
212 1 213 1 144 1 25 1 47 1 
213 1 303 1 144 1 
300 1 213 1 144 1 
300 1 213 1 144 1 
300 1 213 1 144 1 
213 1 144 1 
146 1 313 1 
50 4 51 1 244 1 226 1 86 1 252 1 69 1 70 8 142 1 350 1 6 1 280 1 97 1 264 1 265 4 77 2 236 2 17 1 237 1 79 1 216 1 172 1 242 2 
50 6 51 1 244 2 82 1 359 1 226 1 58 1 86 1 195 1 252 2 69 1 70 11 142 1 350 2 6 1 280 1 97 2 332 1 264 2 265 5 77 3 236 4 17 1 237 1 79 1 216 2 242 2 172 1 
50 9 51 1 244 3 82 2 359 2 175 1 226 1 86 3 195 1 252 3 346 1 201 1 69 1 32 1 70 19 142 1 350 3 6 1 280 1 332 1 97 1 264 3 265 10 77 4 236 6 17 1 237 1 79 1 215 1 216 3 315 2 172 1 242 3 
50 10 51 1 244 3 82 2 359 2 175 1 226 1 86 2 195 2 252 3 346 1 201 1 69 1 70 17 32 1 142 1 350 3 6 1 280 1 332 1 97 1 264 3 265 7 77 5 236 6 17 1 237 1 79 1 215 1 216 3 315 1 172 1 242 3 
50 4 51 1 244 1 226 1 86 1 252 1 69 1 70 8 142 1 350 1 6 1 280 1 97 1 264 1 265 4 77 2 236 2 17 1 237 1 79 1 216 1 172 1 242 2 
50 6 51 1 244 1 82 2 359 2 175 1 86 2 195 1 252 1 346 1 70 12 32 1 142 1 350 1 280 1 97 1 264 2 265 6 77 2 236 2 79 1 215 1 216 1 315 2 242 1 
50 10 51 1 244 4 82 2 359 2 175 1 226 1 86 2 195 2 252 4 346 1 201 2 69 1 32 1 70 18 142 1 350 4 6 1 280 1 97 1 332 1 264 3 265 8 77 5 236 8 17 1 237 1 79 1 215 1 216 4 315 1 172 1 242 3 
50 9 51 1 244 4 82 3 359 3 175 1 86 2 195 3 252 4 346 1 201 2 32 1 70 16 142 1 350 4 280 1 97 1 264 3 265 7 77 6 236 8 290 1 79 1 215 1 216 4 315 2 242 3 
50 3 6 3 226 1 86 1 195 3 264 1 265 4 77 6 17 3 69 1 70 7 172 2 242 3 
50 10 51 1 244 4 82 2 359 2 175 1 226 1 86 2 195 1 252 4 346 1 201 2 69 1 32 1 70 18 142 1 350 4 6 1 280 1 97 1 264 3 265 8 77 4 236 8 17 1 237 1 290 1 79 1 215 1 216 4 315 1 172 1 242 3 
50 4 350 2 244 2 6 1 226 1 86 1 195 1 252 2 264 1 265 4 77 3 236 4 17 1 237 1 201 1 69 1 70 8 216 2 242 2 172 1 
50 3 6 1 224 1 226 1 86 1 264 1 265 3 77 2 17 1 237 1 69 1 70 6 172 1 242 2 
50 2 350 1 244 1 82 1 359 1 332 1 86 1 195 1 252 1 264 1 265 2 77 2 236 2 70 4 216 1 315 1 242 1 
50 3 280 1 82 1 359 1 97 2 58 1 86 1 195 1 264 1 265 4 77 2 79 1 70 7 315 1 242 1 
50 11 244 2 82 2 359 2 174 1 226 1 58 1 86 3 195 4 252 2 200 1 201 2 255 1 69 1 70 23 350 2 6 2 280 2 97 2 264 3 77 9 265 12 236 4 17 2 237 1 216 2 315 2 172 1 242 5 
265 1 97 1 70 1 
50 1 280 1 70 1 
50 3 244 1 350 1 82 1 118 1 359 1 332 1 86 1 195 1 252 1 264 1 265 3 77 3 236 2 70 6 216 1 315 1 242 2 
50 6 51 1 244 1 82 2 359 2 175 1 86 2 195 1 252 1 346 1 70 12 32 1 142 1 350 1 280 1 97 1 264 2 265 6 77 2 236 2 79 1 215 1 216 1 315 2 242 1 
50 3 6 1 226 1 86 1 195 1 264 1 265 3 77 2 17 1 70 6 242 1 
50 1 350 1 244 1 6 1 195 1 252 1 77 2 265 2 236 2 17 1 200 1 201 1 69 1 70 3 216 1 242 1 172 1 
142 1 50 5 244 1 350 1 6 2 222 1 226 1 86 2 195 2 252 1 264 2 77 5 265 5 236 2 17 2 70 10 216 1 242 3 
142 1 50 2 350 1 244 1 359 1 195 1 252 1 264 1 77 1 236 2 70 2 216 1 
142 1 50 2 350 1 244 1 82 1 359 1 86 1 195 1 252 1 264 1 265 2 77 2 236 2 70 4 216 1 315 1 242 1 
142 1 50 1 350 3 244 3 6 1 195 1 252 3 265 2 77 2 236 6 17 1 200 1 201 1 290 1 70 3 216 3 242 1 
50 16 244 5 82 3 359 3 226 2 58 1 249 1 86 5 195 5 252 5 200 1 201 2 69 1 70 34 142 1 350 5 6 3 280 3 182 1 97 4 332 1 264 5 265 18 77 12 236 10 17 3 237 1 18 1 290 1 79 1 216 5 315 3 172 1 242 7 
109 1 136 1 192 1 83 1 282 1 156 1 275 1 
258 1 192 1 193 1 308 1 83 1 282 1 156 1 109 1 136 1 241 1 275 1 243 1 
357 1 312 1 224 1 330 1 375 1 112 1 326 1 59 1 168 1 257 1 283 1 
357 1 36 1 132 1 83 1 330 1 231 1 375 1 59 1 282 1 156 2 109 2 312 1 289 1 326 1 168 1 140 1 257 1 161 1 
357 1 22 1 173 1 83 2 132 1 59 3 156 2 109 2 92 1 326 1 140 2 161 1 257 1 36 1 375 1 231 2 330 2 282 1 210 1 354 1 312 1 289 1 381 1 
357 2 22 1 220 1 173 1 83 2 132 1 59 3 156 2 109 2 92 1 326 2 140 2 257 1 229 1 36 1 375 2 231 2 330 2 282 1 210 1 354 1 312 1 289 1 381 1 
357 3 268 1 56 2 59 4 57 1 90 1 92 1 326 3 306 1 257 1 34 2 229 1 276 1 375 3 231 1 330 1 210 1 336 1 353 1 354 1 312 1 378 1 168 1 
229 1 276 1 357 3 56 2 330 1 231 1 375 3 57 1 59 4 210 1 336 1 353 1 354 1 355 1 312 1 90 1 92 1 326 3 168 1 306 1 257 1 34 2 
357 1 312 1 375 1 326 1 128 1 257 1 
357 7 130 1 230 1 375 7 231 1 330 2 248 1 120 1 59 3 320 1 309 1 377 1 87 1 324 1 178 1 312 2 30 1 326 6 168 2 128 1 257 3 
50 3 340 1 244 2 59 1 252 2 156 2 196 1 109 2 199 1 69 1 70 6 161 1 257 1 350 2 6 1 12 1 264 1 77 2 265 3 311 2 17 1 124 1 312 1 216 2 172 1 357 1 132 1 83 1 226 1 227 1 86 1 366 1 365 1 326 1 140 1 374 1 36 1 375 1 231 1 330 1 377 1 282 2 236 4 237 1 289 1 45 2 242 2 
357 1 56 3 59 2 57 1 344 1 138 1 90 1 253 1 348 1 326 1 306 1 34 3 276 1 260 1 375 1 352 1 100 2 334 2 14 2 336 1 353 2 76 1 40 1 355 1 188 1 168 1 46 1 382 2 
357 2 72 1 375 2 231 1 330 1 59 2 377 1 178 1 312 1 90 1 326 2 128 1 257 2 
229 1 357 4 375 4 330 1 59 1 377 1 283 1 312 1 167 1 112 1 326 4 168 1 257 1 
357 2 375 2 231 1 330 1 232 1 59 1 320 1 210 1 251 1 87 1 312 1 326 2 94 1 257 2 
357 1 211 1 312 1 375 1 261 1 326 1 168 1 234 1 257 1 171 1 
357 2 375 2 330 1 248 1 59 1 377 1 108 1 312 1 30 1 326 2 257 1 
357 5 130 1 230 1 375 5 330 2 248 1 59 3 210 1 377 1 283 1 312 2 167 1 112 1 326 4 168 1 257 2 
357 5 230 1 375 5 330 2 248 1 59 3 210 1 377 1 283 1 312 2 167 1 254 1 112 1 326 4 168 1 257 2 
357 1 220 1 36 1 132 1 83 1 330 1 231 1 375 1 59 1 282 1 156 2 109 2 312 1 289 1 326 1 168 1 140 1 257 1 
357 1 375 1 231 1 330 1 120 1 59 1 320 1 210 1 87 1 178 1 312 1 326 1 257 2 
207 1 83 1 60 1 156 1 39 1 109 1 88 1 149 1 314 1 
117 1 88 1 155 1 
88 1 266 1 149 1 282 1 314 1 
276 1 22 1 117 1 173 1 56 2 352 1 57 1 282 1 155 1 135 1 88 1 266 2 149 2 43 1 306 1 381 1 314 2 34 2 307 1 
338 1 224 1 351 1 129 1 
338 1 341 1 373 1 287 1 351 1 129 1 1 1 
85 1 179 1 1 1 
153 1 338 1 341 1 373 3 287 1 19 1 351 1 228 2 129 1 141 1 61 1 1 3 
338 1 341 1 238 1 373 2 287 1 351 1 202 1 129 1 1 2 
341 1 373 1 287 1 139 1 19 1 261 1 81 1 95 1 129 1 234 1 1 1 
341 1 373 1 287 1 19 1 351 1 129 1 1 1 
338 1 341 1 373 1 287 1 19 1 351 2 1 1 
341 2 373 2 351 1 1 2 287 2 187 1 19 1 66 1 129 1 33 1 
116 1 341 1 373 3 351 1 1 3 338 1 287 1 19 1 158 1 139 1 202 2 129 2 48 1 
341 1 373 2 351 1 176 1 261 2 1 2 234 1 121 1 211 1 338 1 287 1 19 1 202 1 81 1 129 1 
341 2 373 4 351 1 1 4 364 1 338 1 287 2 238 1 19 1 158 1 139 1 202 2 129 2 
338 1 341 1 373 1 287 1 19 1 351 1 129 1 1 1 
341 1 373 4 351 2 61 1 1 4 338 2 287 1 272 1 158 1 139 1 228 1 202 2 129 3 141 1 
371 1 338 1 341 1 301 1 373 2 287 1 339 1 19 1 351 1 202 1 129 1 1 2 
341 1 373 3 351 1 321 1 61 1 1 3 338 1 287 1 19 1 228 2 129 1 141 2 
131 1 342 2 129 2 285 1 
341 1 373 1 287 1 19 1 183 1 1 1 
116 1 338 1 341 1 373 2 287 1 19 1 351 1 202 1 129 1 1 2 
105 1 
338 1 341 1 373 1 287 1 19 1 351 1 129 1 1 1 
116 1 341 1 373 3 351 1 1 3 338 1 287 1 19 1 228 1 202 1 129 1 
272 1 139 1 158 1 129 1 
351 1 129 1 

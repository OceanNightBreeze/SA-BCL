#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 2 286 5 85 1 178 2 9 1 61 1 365 2 143 1 295 1 345 1 321 1 123 1 124 1 147 6 99 1 214 4 149 1 167 1 307 3 329 1 48 2 152 1 271 2 50 2 153 2 79 1 357 9 228 9 
112 2 286 5 85 1 178 2 9 1 61 1 365 2 143 1 295 1 345 1 321 1 123 1 124 1 147 6 99 1 214 4 149 1 167 1 307 3 48 2 329 1 152 1 50 2 271 2 153 2 79 1 357 9 228 9 
112 2 286 6 85 1 178 2 9 1 61 1 365 2 143 1 295 1 345 1 321 1 123 1 124 1 147 7 99 1 214 5 149 1 167 1 307 4 48 2 329 1 152 1 50 2 271 2 153 2 79 1 357 10 228 10 
112 2 286 4 85 1 178 2 9 1 61 1 365 2 143 1 295 1 345 1 123 1 124 1 147 4 99 1 214 3 149 1 167 1 307 2 48 2 329 1 152 1 50 2 271 1 153 2 79 1 357 7 228 7 
321 1 147 3 286 3 214 2 149 1 307 1 178 1 61 1 365 1 48 1 50 1 271 2 153 1 143 1 295 1 357 4 345 1 228 4 
123 1 286 1 112 1 8 1 178 1 61 1 365 1 329 1 50 1 143 1 153 1 337 1 357 2 145 1 345 1 228 2 
147 1 112 1 286 2 214 1 307 1 61 1 365 2 152 1 50 2 143 1 357 3 345 1 228 3 
321 1 124 1 147 7 286 5 233 1 112 1 214 4 149 1 178 1 307 3 9 1 61 1 365 2 48 1 152 1 378 1 271 2 50 2 153 1 143 1 295 1 357 9 345 1 228 9 
321 1 124 1 147 7 286 5 233 1 112 1 214 4 149 1 178 1 307 3 9 1 61 1 365 2 48 1 152 1 378 1 271 2 50 2 153 1 143 1 295 1 357 9 345 1 228 9 
262 1 225 1 303 1 
74 2 303 1 169 1 
154 2 308 2 188 2 67 1 37 2 304 2 243 1 80 2 
154 3 231 1 173 1 82 1 288 1 289 2 340 2 203 1 37 2 180 1 181 1 88 1 369 1 318 1 342 2 89 1 92 1 297 2 346 1 267 1 188 2 347 2 211 1 65 1 67 1 213 1 27 1 304 2 243 1 217 1 308 2 248 1 132 1 227 1 80 3 339 1 34 1 
154 1 201 1 308 1 188 1 46 1 185 1 37 1 304 1 243 1 80 1 
154 1 98 1 46 1 114 1 303 1 37 1 86 1 159 1 262 1 368 1 62 1 75 1 80 1 237 1 
154 1 188 1 98 2 46 1 114 2 303 1 304 1 37 1 86 1 159 1 308 1 262 1 368 1 75 1 80 1 
253 1 98 1 114 1 209 1 306 1 
253 1 97 1 262 1 98 2 141 1 114 2 303 1 306 1 
98 1 114 1 306 1 
154 1 253 1 201 1 308 1 188 1 98 1 46 1 185 1 114 1 37 1 304 1 243 1 80 1 259 1 
303 1 
253 1 97 1 262 1 98 2 114 2 303 1 172 1 306 1 
253 2 54 1 97 1 57 2 98 5 114 5 256 1 362 1 102 2 303 1 191 1 306 2 151 1 262 1 376 1 332 1 40 2 381 1 32 1 
67 1 225 1 
154 2 188 1 67 2 37 2 304 1 308 1 208 1 251 1 80 2 
193 1 266 1 363 1 
154 1 173 1 267 1 347 1 82 1 211 1 288 1 67 1 217 1 342 1 132 1 296 1 297 1 80 1 346 1 34 1 
154 2 173 1 267 1 347 1 211 1 82 1 288 1 304 1 37 1 217 1 193 1 308 1 342 1 132 1 19 1 297 1 346 1 80 2 95 1 34 1 
154 3 188 1 308 3 67 1 37 3 304 3 80 3 95 1 
154 1 201 1 308 1 46 1 37 1 304 1 80 1 
154 1 308 1 188 1 46 1 208 1 37 1 304 1 251 1 80 1 
154 4 231 1 173 1 135 1 82 1 288 1 289 2 114 1 340 1 203 1 37 3 86 1 159 1 180 1 181 1 88 1 369 1 368 1 342 1 19 1 92 1 297 1 346 1 95 1 267 1 188 2 347 1 211 1 98 1 65 1 46 1 67 1 304 3 243 1 217 1 281 1 308 3 248 1 75 1 132 1 251 1 80 4 339 1 34 1 
154 2 308 1 67 1 37 2 304 1 80 2 237 1 105 1 95 1 
154 3 188 1 135 1 98 1 46 1 114 1 303 1 304 3 37 3 159 1 86 1 308 3 39 1 368 1 75 1 19 1 251 1 80 3 95 2 
193 1 154 2 266 1 308 2 188 1 37 2 304 2 251 1 80 2 95 1 
154 1 173 1 267 1 347 1 82 1 211 1 288 1 67 1 217 1 342 1 132 1 297 1 80 1 346 1 34 1 
154 1 173 1 347 1 82 1 211 1 288 1 67 1 351 1 217 1 292 1 342 1 132 1 297 1 80 1 346 1 
231 1 158 1 289 2 115 1 340 4 36 1 203 1 363 2 275 1 204 1 180 1 369 1 18 1 266 2 65 1 66 1 242 1 27 2 371 1 352 1 193 2 330 1 248 1 339 2 
154 1 308 1 222 1 46 1 37 1 304 1 80 1 86 1 
154 5 188 1 67 1 69 1 116 1 304 4 37 5 105 1 308 4 19 1 251 1 80 5 237 1 95 2 
154 2 201 1 222 1 308 2 46 1 37 2 304 2 80 2 
106 1 175 1 
106 1 175 1 
312 1 315 1 
312 1 315 1 
312 1 315 1 
106 1 175 1 334 1 
106 1 175 1 291 1 
56 1 312 1 127 1 106 2 175 2 315 1 
106 1 175 1 334 1 
106 1 175 1 334 1 
106 1 175 1 171 1 
106 1 175 1 171 1 
106 1 175 1 171 1 
56 1 2 2 98 2 278 1 175 2 114 2 101 2 303 1 70 2 47 1 316 1 140 1 366 2 106 2 282 1 197 2 186 1 52 1 358 3 
154 2 155 1 175 1 114 1 257 1 37 2 291 1 366 1 121 1 348 1 98 1 67 1 101 1 304 2 70 1 125 1 308 2 106 1 282 1 375 1 197 1 358 1 80 2 109 1 
48 1 153 1 178 1 
153 1 145 1 178 1 
48 2 28 1 145 1 163 1 103 1 178 3 
48 1 136 1 28 1 145 1 163 1 178 2 
48 1 28 1 145 1 163 2 178 2 
253 4 0 1 57 1 158 1 114 5 115 1 359 1 36 1 262 1 142 1 40 1 348 1 97 1 98 5 66 1 216 1 102 1 303 2 169 1 327 1 306 1 150 2 328 1 125 1 220 2 375 1 74 3 355 2 376 3 333 1 381 1 32 2 
54 1 253 7 35 1 57 2 158 3 59 1 114 9 115 3 359 2 36 3 274 1 262 1 40 2 209 5 97 1 98 9 302 1 66 3 166 1 102 2 303 5 169 3 327 3 306 6 150 6 125 4 328 1 74 9 355 6 356 1 376 8 379 5 333 2 381 1 32 6 
253 2 0 1 54 1 57 1 158 1 114 3 115 1 359 1 36 1 262 1 142 1 40 1 98 3 66 1 102 1 303 3 169 2 327 1 125 1 150 2 220 1 355 2 74 4 376 3 333 1 32 2 
54 1 0 1 253 3 35 1 57 1 158 2 59 1 114 4 115 2 359 1 36 2 262 1 142 1 40 1 98 4 302 1 66 2 102 1 303 4 169 3 327 2 150 4 125 2 220 2 74 7 355 4 376 5 333 1 32 4 
128 1 225 1 217 1 
133 1 217 1 
250 1 
173 1 217 1 
173 1 71 1 211 1 128 2 38 1 217 3 
173 1 211 1 217 1 
240 1 217 1 
254 1 202 2 340 14 36 3 7 2 183 1 317 1 14 2 17 1 301 1 350 1 66 3 27 8 371 4 352 5 72 1 195 2 339 6 
254 1 202 2 340 14 36 3 7 2 183 3 317 1 14 2 17 1 301 1 350 1 66 3 27 8 371 4 352 7 72 1 195 2 339 6 
254 1 202 2 340 14 36 3 7 2 183 1 317 1 14 2 17 1 301 1 350 1 66 3 27 8 371 4 352 5 373 1 72 1 195 2 339 6 
231 1 254 1 202 3 158 3 289 2 84 1 115 3 6 1 340 40 36 6 7 2 234 1 180 1 183 7 317 1 14 3 16 1 17 2 301 1 24 3 65 1 350 2 66 6 27 21 371 7 327 3 352 14 72 1 374 1 49 1 195 3 248 1 309 4 339 19 252 1 
231 2 254 1 202 2 289 4 340 16 36 3 7 2 180 2 183 2 317 1 14 2 17 1 65 2 350 1 66 3 325 1 27 9 371 5 352 7 245 1 72 1 195 2 248 2 339 7 252 1 
134 1 156 1 286 1 112 1 288 1 178 2 118 1 61 1 293 1 365 1 342 1 143 1 277 1 297 1 145 1 345 1 346 1 147 1 347 1 190 1 280 1 103 1 218 1 48 1 50 1 153 1 284 1 357 2 310 1 228 2 
156 1 286 1 112 1 288 1 178 2 118 1 61 1 293 1 365 1 342 1 277 1 297 1 265 1 145 1 345 1 346 1 347 1 147 2 190 1 280 1 103 1 218 1 48 1 30 1 50 1 283 1 153 1 357 3 310 1 228 3 
286 1 112 1 288 1 178 2 118 1 61 1 293 1 342 1 277 1 297 1 265 1 145 1 345 1 346 1 347 1 147 2 190 1 280 1 103 1 218 1 48 1 30 1 153 1 357 2 228 2 
173 1 174 1 96 1 347 1 268 1 112 2 82 1 239 1 288 1 217 1 218 2 118 2 261 1 365 1 246 1 283 1 50 1 342 1 277 2 357 1 297 1 346 1 228 1 
156 1 112 1 288 1 178 2 118 1 293 1 365 1 342 1 143 1 277 1 297 1 145 1 346 1 347 1 190 1 280 1 103 1 218 1 48 1 30 1 50 1 153 1 284 1 357 1 310 1 228 1 
230 1 
154 1 57 1 4 2 58 2 288 1 114 5 258 2 290 1 159 1 205 1 261 1 262 1 342 2 62 1 297 2 346 1 298 1 347 2 268 1 303 2 169 2 306 6 217 1 29 1 74 2 75 1 77 1 32 2 80 1 173 1 232 2 82 2 37 1 179 1 138 1 86 1 182 2 368 1 40 1 41 4 320 2 93 1 237 1 43 1 97 3 98 5 46 1 324 1 102 1 376 2 333 1 335 2 381 1 198 1 53 1 
154 1 97 1 98 3 46 1 114 3 37 1 306 2 138 1 159 1 86 1 29 1 205 1 368 1 62 1 75 1 335 1 41 2 198 1 172 1 80 1 53 1 237 1 
154 1 4 1 114 3 37 1 138 1 86 1 159 1 205 1 262 1 368 1 62 1 41 3 237 1 97 1 98 3 46 1 303 1 306 1 29 1 75 1 198 1 172 1 80 1 53 1 
154 1 4 1 114 3 258 1 37 1 138 1 86 1 159 1 205 1 262 1 368 1 62 1 41 3 237 1 97 1 98 3 46 1 303 1 306 2 29 1 75 1 198 1 335 1 172 1 80 1 53 1 
154 1 232 2 57 1 58 2 4 4 114 5 258 4 37 1 138 1 86 1 159 1 364 1 205 1 182 2 262 5 368 1 62 1 40 1 41 6 320 2 298 1 237 1 23 1 97 3 25 1 98 5 46 1 215 1 102 1 303 5 169 2 306 7 29 1 376 1 75 1 381 1 198 1 335 4 77 1 32 1 172 1 199 1 80 1 53 1 
154 1 57 1 58 2 4 2 114 4 258 2 159 1 205 1 262 1 62 1 298 1 303 2 169 2 306 4 29 1 74 2 75 1 77 1 32 1 80 1 232 2 37 1 138 1 86 1 182 2 368 1 40 1 41 4 320 2 237 1 97 2 98 4 46 1 324 1 102 1 376 1 381 1 198 1 335 2 53 1 
154 1 232 2 57 1 4 2 58 2 114 4 258 2 37 1 138 1 86 1 159 1 205 1 364 1 182 2 262 1 368 1 62 1 40 1 41 4 320 2 298 1 237 1 97 2 23 1 98 4 46 1 215 1 102 1 303 1 306 4 169 2 29 1 376 1 75 1 335 2 198 1 381 1 77 1 32 1 80 1 53 1 
154 1 232 2 57 1 4 2 58 2 114 4 258 2 37 1 138 1 86 1 159 1 205 1 364 1 182 2 262 1 368 1 62 1 40 1 41 4 320 2 298 1 237 1 97 2 23 1 98 4 46 1 215 1 102 1 303 1 306 4 169 2 29 1 376 1 75 1 335 2 198 1 381 1 77 1 32 1 80 1 53 1 
154 1 57 1 4 2 114 4 258 2 37 1 138 1 137 1 86 1 159 1 205 1 182 2 262 1 161 2 368 1 62 1 40 1 41 4 320 2 237 1 97 2 23 1 98 4 370 1 46 1 102 1 303 1 306 4 353 2 29 1 74 2 376 1 331 1 75 1 335 2 198 1 381 1 77 1 32 1 80 1 53 1 
154 1 232 2 57 1 58 2 4 3 114 4 258 3 37 1 138 1 86 1 159 1 364 1 205 1 182 2 262 1 368 1 62 1 40 1 41 5 320 2 298 1 237 1 97 2 23 1 98 4 25 1 46 1 215 1 102 1 303 1 169 2 306 5 29 1 376 1 75 1 381 1 198 1 335 3 77 1 32 1 80 1 53 1 
154 1 232 2 57 1 58 2 4 3 114 4 258 3 37 1 138 1 86 1 159 1 364 1 205 1 182 2 262 1 368 1 62 1 40 1 41 5 320 2 298 1 237 1 97 2 23 1 98 4 25 1 46 1 215 1 102 1 303 1 169 2 306 5 29 1 376 1 75 1 381 1 198 1 335 3 77 1 32 1 80 1 53 1 
154 1 57 1 4 2 114 4 258 2 159 1 205 1 161 2 262 1 62 1 303 1 306 4 353 2 29 1 74 2 75 1 77 1 32 1 80 1 37 1 138 1 86 1 182 2 368 1 40 1 41 4 320 2 237 1 97 2 98 4 46 1 324 1 102 1 376 1 331 1 381 1 198 1 335 2 53 1 
231 1 254 1 202 1 65 1 289 2 67 2 340 5 66 1 36 1 203 1 27 3 7 1 371 2 352 2 180 1 72 1 195 1 330 1 369 1 14 1 248 1 225 1 339 2 
231 2 158 2 289 4 84 1 115 1 340 14 203 1 36 1 363 11 180 2 183 1 88 1 369 2 16 1 21 1 266 4 44 1 349 1 24 3 65 2 67 1 66 2 26 1 371 1 27 8 352 2 327 2 104 1 193 11 248 2 309 3 227 1 339 6 
154 2 173 1 231 1 82 1 288 1 289 2 340 2 203 1 37 1 180 1 342 1 369 1 88 1 19 1 297 1 296 1 346 1 94 1 21 1 95 1 266 1 267 1 347 1 211 1 65 1 100 1 67 1 27 1 304 1 217 1 308 1 224 1 248 1 132 1 227 1 80 2 34 1 339 1 
154 3 254 1 202 2 288 2 158 2 289 6 115 2 340 27 203 3 7 2 342 1 14 1 19 1 297 1 346 2 21 1 266 6 267 2 347 1 211 2 65 3 165 2 67 3 66 5 27 14 304 1 352 7 217 2 72 1 308 1 131 1 132 2 227 1 80 3 34 2 231 3 173 2 82 1 36 5 363 6 37 1 276 1 180 3 181 2 183 1 317 1 88 1 369 3 144 2 95 1 46 1 371 6 326 2 327 2 193 6 107 2 195 2 248 3 382 1 339 13 
154 1 231 2 173 2 134 1 82 2 3 1 273 1 157 1 288 2 289 4 360 1 340 2 203 2 37 1 180 2 261 1 342 8 369 2 88 1 120 1 89 2 297 8 346 2 95 1 122 1 347 7 268 1 65 2 27 1 304 1 217 3 308 1 223 1 330 1 30 1 248 2 227 1 80 1 339 1 
154 1 231 1 158 1 289 2 115 1 340 3 203 1 36 1 363 1 37 1 180 1 369 1 21 1 266 1 188 1 65 1 66 1 371 1 27 1 304 1 352 1 327 1 193 1 308 1 248 1 78 1 251 1 80 1 339 2 
266 1 231 1 65 1 158 1 289 2 340 2 66 1 203 1 363 1 27 2 352 1 193 1 180 1 183 1 330 1 369 1 248 1 18 1 
266 1 231 1 65 1 289 2 115 1 340 2 203 1 242 1 36 1 371 1 363 1 352 1 193 1 180 1 330 1 369 1 248 1 339 2 
231 1 158 1 289 2 115 1 340 4 203 1 36 1 363 2 180 1 183 1 369 1 266 2 65 1 66 1 27 2 371 1 327 1 352 2 193 2 330 1 248 1 339 2 
266 1 231 1 65 1 158 1 289 2 340 2 360 1 66 1 203 1 363 1 27 2 352 1 193 1 180 1 183 1 369 1 248 1 18 1 
266 1 231 1 65 1 289 2 115 1 340 2 360 1 203 1 242 1 36 1 371 1 363 1 352 1 193 1 180 1 369 1 248 1 339 2 
231 1 158 1 289 2 115 1 360 1 340 4 203 1 36 1 363 2 180 1 183 1 369 1 266 2 65 1 66 1 27 2 371 1 327 1 352 2 193 2 248 1 339 2 
231 1 158 1 289 2 115 1 340 4 203 1 36 1 363 2 180 1 183 1 369 1 266 2 65 1 66 1 27 2 371 1 327 1 352 2 193 2 248 1 339 2 
154 1 173 1 231 1 82 1 288 1 289 2 340 2 203 1 180 1 181 1 342 1 369 1 88 1 297 1 346 1 267 1 347 1 211 1 65 1 67 1 27 1 217 1 248 1 132 1 227 1 80 1 34 1 339 1 
154 1 173 1 231 1 82 1 288 1 289 2 340 2 203 1 292 1 180 1 342 1 369 1 88 1 294 1 297 1 346 1 347 1 211 1 65 1 67 1 351 1 27 1 217 1 248 1 132 1 227 1 80 1 339 1 
231 1 158 1 289 2 115 1 340 4 203 1 36 1 363 2 180 1 183 1 369 1 21 1 266 2 65 1 66 1 27 2 371 1 327 1 352 2 193 2 248 1 339 2 
154 1 173 1 231 1 134 1 158 1 288 1 289 2 115 1 340 4 36 1 203 1 363 2 180 1 181 1 183 1 342 1 369 1 144 1 297 1 346 1 266 2 267 1 347 1 211 1 65 1 66 1 371 1 27 2 352 2 327 1 217 1 193 2 248 1 132 1 80 1 339 2 34 1 
154 1 231 1 158 1 289 2 115 1 340 3 36 1 203 1 363 1 37 1 180 1 183 1 369 1 21 1 266 1 188 1 65 1 66 1 27 2 304 1 352 1 327 1 193 1 308 1 248 1 226 1 251 1 80 1 339 1 
231 2 158 3 289 4 84 1 115 3 60 1 340 19 36 3 180 2 206 2 183 3 319 1 16 1 24 1 322 1 65 2 325 1 66 3 371 3 27 9 269 1 192 1 327 3 352 6 126 1 247 1 248 2 309 2 249 2 339 10 
231 3 158 3 289 6 115 2 60 2 340 26 36 2 160 1 180 3 183 2 206 4 319 1 16 2 162 1 187 1 300 1 24 2 65 3 279 1 325 1 66 3 371 2 27 14 269 1 192 1 352 4 327 3 129 1 247 2 248 3 309 2 249 1 252 2 339 12 
254 1 202 1 158 4 289 6 5 1 115 4 340 41 60 2 7 1 160 1 206 4 14 1 16 3 162 1 300 1 24 3 65 3 66 5 27 20 269 1 352 8 126 1 72 1 129 1 309 4 231 3 84 1 36 5 180 3 183 4 319 1 187 1 279 1 325 1 371 4 192 1 327 4 195 1 247 1 248 3 249 1 339 21 252 1 
231 4 254 1 202 1 158 4 5 1 289 8 84 1 115 3 60 2 340 38 36 4 7 1 160 1 180 4 206 4 183 3 14 1 319 1 16 3 162 1 187 1 300 1 24 3 65 4 279 1 325 1 66 5 371 4 27 20 269 1 192 1 327 4 352 7 126 1 72 1 129 1 195 1 247 1 248 4 309 4 249 1 252 2 339 18 
231 2 254 1 202 1 158 7 289 4 84 2 115 7 60 1 340 52 36 8 7 1 160 1 180 2 206 4 183 7 14 1 319 1 16 2 162 1 187 1 300 1 24 4 65 2 279 1 325 1 66 8 371 7 27 27 269 1 192 1 327 7 352 14 104 2 72 1 129 1 195 1 247 1 248 2 309 4 249 1 252 1 339 25 
56 1 106 1 366 1 197 1 175 1 186 1 52 1 336 1 101 1 70 1 
257 1 291 1 
22 1 106 1 366 1 270 1 197 1 175 1 101 1 311 1 70 1 
56 1 2 1 98 1 278 1 114 1 175 1 101 1 303 1 70 1 47 1 140 1 366 1 106 1 282 1 197 1 186 1 52 1 358 2 
56 1 2 1 98 1 278 1 114 1 175 1 101 1 303 1 70 1 47 1 140 1 366 1 106 1 282 1 197 1 186 1 52 1 358 2 
56 1 2 1 98 1 278 1 114 1 175 1 101 1 303 1 70 1 47 1 140 1 366 1 106 1 282 1 197 1 186 1 52 1 358 2 
127 1 334 1 117 1 
127 1 334 1 117 1 
299 1 171 1 
299 1 127 1 171 1 
121 1 109 1 
154 2 253 1 155 1 2 1 114 1 175 1 257 1 37 2 291 1 366 1 210 1 121 1 348 1 98 1 278 1 67 1 101 1 304 2 70 1 125 1 106 1 308 2 375 1 197 1 358 1 80 2 109 1 
334 1 117 1 
299 1 127 1 171 1 
154 2 173 1 231 1 273 1 288 1 157 1 289 2 176 1 340 2 203 1 37 2 180 1 342 2 369 1 88 1 15 1 13 1 89 2 297 2 346 1 21 1 347 2 65 1 241 1 27 1 217 1 377 1 248 1 227 1 80 2 339 1 
134 1 146 1 347 2 156 1 288 1 280 1 103 1 178 2 218 1 139 1 293 1 48 1 30 1 342 2 153 1 297 2 145 1 346 1 285 1 
55 1 347 1 156 1 288 1 280 1 103 1 178 2 218 1 293 1 48 1 30 1 342 1 153 1 297 1 145 1 285 1 346 1 
173 1 174 1 347 1 82 1 268 1 288 1 217 1 218 1 139 1 87 1 261 1 342 1 297 1 346 1 
146 1 347 1 156 1 288 1 280 1 103 1 178 2 218 1 139 1 293 1 48 1 30 1 342 1 153 1 297 1 145 1 346 1 285 1 
1 1 
262 1 376 1 256 1 225 1 362 1 303 1 32 1 
232 1 57 1 58 1 114 1 262 1 40 1 298 1 97 1 98 1 102 1 303 2 169 1 306 1 74 1 376 1 381 1 32 1 
57 4 288 3 158 2 255 1 114 5 256 1 115 2 159 2 262 2 10 1 342 3 64 1 297 3 344 2 346 4 347 3 211 3 66 2 303 8 306 5 169 6 217 10 354 2 355 6 74 12 128 2 76 2 32 8 133 3 173 3 134 1 82 1 362 1 36 2 38 1 179 1 314 1 235 1 184 2 40 4 97 3 98 5 323 2 240 2 189 2 102 4 327 2 150 6 376 9 107 2 333 2 381 4 51 2 338 2 
57 2 158 2 114 1 115 2 36 2 177 1 179 1 160 1 262 2 184 2 16 1 40 2 162 1 187 1 97 1 300 1 98 1 24 1 66 2 102 2 303 5 306 1 169 3 327 2 150 5 74 6 355 5 376 8 129 1 333 1 76 1 309 1 381 2 32 5 229 1 
154 1 201 1 57 1 202 1 114 1 36 1 7 1 37 1 259 1 364 1 317 1 184 2 185 1 40 1 188 1 98 1 46 1 66 2 102 1 243 1 304 1 308 1 376 2 195 1 76 1 381 1 32 2 80 1 
57 1 256 1 362 1 102 1 303 1 262 1 376 1 40 1 381 1 32 1 
158 2 115 2 66 2 36 2 303 5 327 2 169 5 150 5 355 5 74 10 107 1 184 2 376 5 76 1 32 5 
97 1 262 1 98 1 114 1 303 1 306 1 
54 1 173 1 57 2 82 2 288 1 255 1 114 3 290 1 179 2 235 2 260 1 261 1 341 1 342 4 40 2 297 4 346 1 43 1 347 4 97 2 268 1 98 3 102 2 306 4 217 1 376 2 333 2 381 1 32 2 
154 3 231 1 173 1 82 1 288 1 289 2 340 1 203 1 37 2 180 1 181 1 88 1 342 1 369 1 297 1 92 1 346 1 267 1 347 1 188 2 211 1 65 1 67 1 304 2 243 1 217 1 308 2 248 1 132 1 80 3 339 1 34 1 
57 1 102 1 303 4 169 2 179 1 150 2 74 4 355 2 262 2 376 1 14 1 333 1 40 1 381 1 32 2 
164 1 101 1 70 1 
52 1 101 1 109 1 70 1 33 1 
164 1 101 1 70 1 
164 1 101 1 70 1 
113 1 101 1 70 1 
113 1 101 1 70 1 
113 1 101 1 70 1 
101 1 70 1 
106 1 175 1 
231 2 254 1 202 2 289 4 340 17 36 3 7 2 180 2 183 3 317 1 14 1 65 2 66 3 371 4 27 9 352 7 72 1 195 2 248 2 252 1 339 8 
254 1 72 1 202 1 195 1 14 1 340 5 66 1 225 1 36 1 27 3 7 1 371 2 352 2 339 2 
231 1 65 1 158 1 289 2 115 1 66 1 340 4 36 1 371 1 27 2 352 2 327 1 180 1 183 1 108 1 248 1 339 2 
24 1 158 1 115 1 84 1 340 7 66 1 36 1 371 1 27 3 327 1 352 2 183 1 16 1 309 2 339 4 
231 1 254 1 202 2 158 2 289 2 115 2 84 1 340 25 36 5 7 2 180 1 183 2 317 1 14 1 24 2 65 1 66 5 26 1 27 13 371 5 327 2 352 7 104 1 72 1 195 2 248 1 309 2 339 12 252 1 
340 1 309 1 339 1 
24 1 340 1 27 1 
231 1 65 1 158 1 289 2 115 1 340 6 66 1 36 1 27 3 371 2 327 1 352 3 180 1 183 1 107 1 248 1 108 1 339 3 
231 1 158 2 289 2 115 2 340 12 36 2 160 1 180 1 183 1 16 1 162 1 187 1 300 1 24 1 65 1 325 1 66 2 27 6 371 1 327 2 352 2 129 1 248 1 309 1 339 6 
202 1 66 1 340 6 36 1 7 1 27 3 371 1 352 2 183 1 195 1 339 3 
231 1 254 1 202 1 65 1 289 2 340 3 27 1 371 1 352 2 180 1 244 1 183 1 72 1 195 1 248 1 339 2 252 1 
231 1 202 2 65 1 289 2 325 1 340 10 66 2 36 2 371 3 27 5 7 1 352 5 180 1 183 2 317 1 195 2 248 1 339 5 
231 1 65 1 158 1 289 2 325 1 66 1 340 2 27 2 352 1 180 1 183 1 248 1 
231 1 65 1 158 1 289 2 115 1 325 1 66 1 340 4 36 1 371 1 27 2 352 2 327 1 180 1 183 1 248 1 339 2 
231 3 202 1 65 3 289 6 340 3 325 1 371 1 27 1 352 2 180 3 126 1 244 1 183 1 195 1 248 3 252 1 339 2 
231 4 254 1 202 2 158 2 289 8 115 2 6 1 340 31 36 5 7 2 234 1 180 4 183 4 317 1 14 1 16 1 24 3 65 4 325 1 66 5 371 5 27 16 327 2 352 9 126 1 72 1 49 1 195 2 108 1 248 4 309 3 252 1 339 15 
231 1 254 1 202 2 289 2 340 15 36 3 7 2 180 1 183 1 317 1 14 1 16 1 187 1 24 1 65 1 66 3 325 1 27 8 371 4 352 5 72 1 195 2 248 1 309 1 339 7 
231 2 254 1 202 2 158 1 289 4 84 1 340 18 36 3 7 2 180 2 183 2 317 1 14 1 16 1 187 1 24 1 65 2 325 1 66 4 371 4 27 10 327 1 352 6 72 1 195 2 248 2 108 1 309 2 339 8 
231 3 254 1 202 2 158 2 289 6 115 2 340 26 36 5 7 2 160 1 180 3 183 2 317 1 14 1 16 1 162 1 187 1 300 1 24 1 65 3 325 1 66 5 27 13 371 5 327 2 352 7 72 1 129 1 195 2 108 1 248 3 309 1 339 13 252 1 
231 3 254 1 202 2 158 2 289 6 115 1 340 24 36 4 7 2 160 1 180 3 183 4 317 1 14 1 16 1 162 1 187 1 300 1 24 1 65 3 325 1 66 5 27 14 371 5 327 2 352 9 72 1 129 1 195 2 108 1 248 3 309 1 252 1 339 10 
231 1 254 1 202 2 289 2 340 15 36 3 7 2 180 1 183 1 317 1 14 1 16 1 187 1 24 1 65 1 66 3 325 1 27 8 371 4 352 5 72 1 195 2 248 1 309 1 339 7 
231 1 158 2 289 2 115 2 340 12 36 2 160 1 180 1 183 1 16 1 162 1 187 1 300 1 24 1 65 1 325 1 66 2 27 6 371 1 327 2 352 2 129 1 248 1 309 1 339 6 
231 4 254 1 202 2 158 2 289 8 115 1 340 25 36 4 7 2 160 1 180 4 183 2 317 1 14 1 16 1 162 1 187 1 300 1 24 1 65 4 325 1 66 5 27 14 371 5 327 2 352 7 72 1 129 1 195 2 108 1 248 4 309 1 339 11 252 2 
231 4 158 3 289 8 115 2 340 16 36 2 160 1 180 4 183 3 16 1 162 1 187 1 300 1 24 1 65 4 325 1 66 3 27 9 371 3 327 3 352 6 126 1 129 1 248 4 309 1 339 7 252 2 
254 2 202 3 340 7 66 1 36 1 371 3 7 1 27 3 352 6 72 1 183 3 195 3 339 4 
231 4 254 1 202 2 158 2 289 8 115 1 340 25 36 4 7 2 160 1 180 4 183 2 317 1 14 1 16 1 162 1 187 1 300 1 24 1 65 4 325 1 66 5 27 14 371 5 327 2 352 7 126 1 72 1 129 1 195 2 248 4 309 1 339 11 252 2 
154 1 63 1 67 1 37 1 80 1 237 1 105 1 
154 1 111 1 83 1 287 1 67 1 68 1 37 1 105 1 263 1 63 1 80 1 237 1 
173 1 261 1 347 1 268 1 82 1 288 1 342 1 225 1 297 1 346 1 217 1 
154 2 173 1 267 1 347 1 211 1 82 1 288 1 67 1 304 1 37 1 217 1 308 1 342 1 132 1 297 1 346 1 80 2 95 1 
154 2 173 2 267 1 347 1 211 2 46 1 288 1 240 1 67 1 304 2 37 2 86 1 217 3 235 1 354 1 308 1 342 1 75 1 132 1 297 1 346 1 80 2 95 1 
154 2 173 2 347 2 211 2 46 1 288 1 240 1 67 1 351 1 304 2 37 2 86 1 217 3 235 1 354 1 308 1 367 1 342 2 75 1 132 1 297 2 346 1 80 2 95 1 
133 1 173 1 82 1 288 1 114 2 159 1 235 1 367 1 262 1 342 3 297 3 346 1 347 3 211 1 98 2 240 1 303 1 306 1 217 4 170 1 354 1 128 1 272 1 
173 1 133 1 347 3 82 1 211 1 98 2 288 1 240 1 114 2 303 1 306 1 159 1 217 4 235 1 354 1 367 1 262 1 128 1 342 3 297 3 344 1 346 1 
122 1 347 1 288 1 342 1 297 1 346 1 
173 2 122 1 134 1 347 6 82 2 211 1 3 1 157 1 288 2 38 1 217 3 219 1 223 1 11 1 30 1 342 7 89 1 120 1 380 1 297 7 346 3 
154 2 254 1 202 2 288 1 289 4 340 13 203 2 7 2 342 1 14 1 297 1 346 1 21 1 267 1 347 1 211 1 65 2 165 1 66 3 67 3 27 7 304 1 352 5 217 1 308 1 72 1 131 1 132 1 80 2 34 1 231 2 173 1 134 1 176 1 36 3 37 1 180 2 181 1 183 1 317 1 369 2 144 1 95 1 46 1 371 4 195 2 248 2 339 6 
253 1 133 1 82 1 57 2 255 1 114 3 256 1 362 1 159 1 262 1 342 1 40 2 297 1 344 1 347 1 97 1 98 3 323 1 189 1 102 2 303 1 306 2 217 2 376 1 128 1 381 2 51 1 32 1 
173 1 134 1 122 1 347 2 211 1 288 1 38 1 217 2 128 1 10 1 342 2 297 2 346 2 
173 1 134 1 347 4 82 1 268 1 288 1 217 1 261 1 367 1 342 4 236 1 297 4 346 1 
42 1 173 1 347 2 238 1 211 1 288 1 217 1 235 1 219 1 73 1 342 2 380 1 297 2 346 2 
347 1 82 1 288 1 342 1 153 1 297 1 145 1 280 1 178 1 346 1 
173 1 134 1 347 2 157 1 288 1 241 1 217 1 342 2 30 1 297 2 346 1 
173 2 134 1 347 4 268 1 82 1 3 1 157 1 288 2 217 3 235 1 261 1 223 1 342 5 236 1 297 5 346 2 
173 2 134 1 347 4 268 1 82 1 3 1 157 1 288 2 217 3 235 1 261 1 119 1 342 5 236 1 297 5 346 2 
154 2 173 1 347 1 211 1 82 1 288 1 67 1 351 1 304 1 37 1 217 1 308 1 342 1 132 1 297 1 346 1 80 2 95 1 
173 1 347 1 211 1 288 1 38 1 217 1 235 1 219 1 11 1 342 1 380 1 297 1 346 2 
154 1 313 1 361 1 37 1 377 1 13 1 15 1 80 1 20 1 
313 1 45 1 372 1 
313 1 196 1 67 1 361 1 20 1 
253 1 313 1 135 1 98 2 45 1 46 1 114 2 67 1 361 2 303 1 159 1 86 1 372 1 262 1 264 1 196 2 368 1 75 1 20 2 
61 1 286 1 225 1 345 1 
61 1 365 1 286 1 50 1 357 1 345 1 228 1 
112 1 277 1 228 1 
123 2 286 1 61 1 365 1 130 1 50 1 143 1 91 1 357 3 345 1 228 3 110 1 
61 1 365 1 147 1 286 1 271 1 50 1 357 2 345 1 228 2 
286 1 214 1 149 1 178 1 365 1 48 1 50 1 143 1 153 1 357 1 228 1 
61 1 365 1 286 1 50 1 143 1 357 1 228 1 
61 2 365 1 50 1 143 1 357 1 345 1 228 1 
286 1 148 1 61 1 365 2 50 2 143 1 357 2 81 1 228 2 200 1 
124 1 147 2 286 2 214 1 307 1 9 1 61 1 365 1 50 1 143 1 357 3 345 1 228 3 
147 1 286 1 212 1 178 2 103 1 61 1 365 1 48 1 50 1 143 1 153 1 357 2 145 1 345 1 228 2 
321 1 147 2 286 2 214 1 307 1 61 1 365 2 50 2 271 1 143 1 357 4 345 1 228 4 
61 1 365 1 286 1 50 1 143 1 357 1 345 1 228 1 
123 1 147 2 286 3 214 1 307 1 61 2 365 1 130 1 50 1 357 4 343 1 345 2 110 1 228 4 
147 1 286 1 233 1 168 1 61 1 365 1 207 1 50 1 143 1 357 2 345 1 228 2 
61 1 123 2 365 1 286 1 130 1 50 1 143 1 90 1 357 3 345 1 110 2 228 3 
221 1 286 2 31 2 305 1 
365 1 194 1 50 1 143 1 357 1 228 1 
61 1 124 1 365 1 147 1 286 1 50 1 143 1 357 2 345 1 228 2 
12 1 
61 1 365 1 286 1 50 1 143 1 357 1 345 1 228 1 
61 1 124 1 123 1 365 1 147 1 286 1 50 1 143 1 357 3 345 1 228 3 
286 1 214 1 343 1 307 1 
61 1 286 1 

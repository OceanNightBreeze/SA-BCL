#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 160 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
113 2 138 1 362 9 264 1 19 1 211 1 115 1 97 2 98 1 304 1 25 1 120 1 280 2 29 2 250 9 370 4 282 3 35 2 338 6 314 5 37 1 109 1 204 2 85 1 84 2 186 1 289 1 159 1 
138 1 113 2 362 9 264 1 19 1 211 1 115 1 97 2 98 1 304 1 25 1 120 1 280 2 29 2 250 9 370 4 282 3 35 2 338 6 314 5 37 1 109 1 204 2 85 1 84 2 186 1 289 1 159 1 
138 1 113 2 362 10 264 1 19 1 211 1 115 1 97 2 98 1 304 1 25 1 120 1 280 2 29 2 250 10 370 5 282 4 35 2 338 7 314 6 37 1 109 1 204 2 85 1 84 2 186 1 289 1 159 1 
138 1 113 1 362 7 19 1 211 1 115 1 97 2 98 1 304 1 25 1 120 1 280 2 29 2 250 7 370 3 282 2 35 2 338 4 314 4 37 1 109 1 204 2 85 1 84 2 186 1 289 1 159 1 
29 1 250 4 113 2 362 4 264 1 211 1 370 2 115 1 97 1 282 1 35 1 338 3 314 3 98 1 204 1 85 1 186 1 280 1 
29 1 250 2 362 2 19 1 115 1 97 1 314 1 98 1 152 1 83 1 204 1 85 1 84 1 176 1 289 1 280 1 
250 3 362 3 370 1 115 1 97 2 282 1 338 1 314 2 98 1 85 1 84 1 280 2 159 1 
138 1 113 2 362 9 211 1 264 1 115 1 97 2 219 1 98 1 120 1 280 2 29 1 250 9 370 4 282 3 35 1 338 7 314 5 340 1 204 1 85 1 84 1 186 1 159 1 
138 1 113 2 362 9 211 1 264 1 115 1 97 2 219 1 98 1 120 1 280 2 29 1 250 9 370 4 282 3 35 1 338 7 314 5 340 1 204 1 85 1 84 1 186 1 159 1 
136 1 375 1 160 1 
375 1 171 1 334 2 
316 2 18 2 351 2 205 1 364 2 88 2 34 1 366 2 
210 1 18 2 212 2 266 1 213 1 217 1 95 1 364 2 72 1 50 1 325 1 366 2 74 2 326 2 51 2 169 1 119 1 351 3 150 1 253 1 180 1 59 1 34 1 33 1 129 2 358 1 259 1 316 3 285 1 376 1 111 1 205 1 241 1 242 1 157 1 88 2 90 1 
310 1 316 1 18 1 351 1 205 1 9 1 364 1 88 1 67 1 366 1 
136 1 178 1 101 1 234 1 364 1 114 1 375 1 316 1 117 1 306 1 351 1 87 1 9 1 135 1 
136 1 178 1 18 1 234 1 364 1 114 2 366 1 375 1 117 2 316 1 306 1 351 1 9 1 88 1 135 1 
52 1 117 1 116 1 114 1 124 1 
136 1 375 1 117 2 318 1 226 1 116 1 114 2 124 1 
117 1 116 1 114 1 
310 1 18 1 297 1 114 1 364 1 366 1 117 1 316 1 351 1 205 1 9 1 67 1 88 1 124 1 
375 1 
136 1 375 1 292 1 117 2 226 1 116 1 114 2 124 1 
136 1 296 2 58 1 114 5 116 2 48 1 269 1 375 1 82 1 75 1 117 5 23 1 274 1 329 1 249 2 226 1 54 1 172 2 124 2 
160 1 34 1 
199 1 323 1 18 1 364 2 34 2 366 1 316 2 351 2 88 1 
356 1 181 1 283 1 
210 1 17 1 180 1 95 1 34 1 33 1 74 1 326 1 51 1 358 1 316 1 285 1 351 1 111 1 157 1 242 1 
210 1 18 1 356 1 180 1 95 1 364 1 33 1 335 1 74 1 326 1 358 1 51 1 195 1 316 2 285 1 351 2 111 1 242 1 157 1 88 1 
199 1 18 4 101 1 364 5 34 1 335 2 73 1 366 1 223 1 316 5 195 1 351 5 359 1 88 4 
310 1 316 2 18 2 351 2 9 1 121 1 364 2 88 2 
316 3 18 3 351 3 364 3 88 3 34 1 335 1 366 1 
310 1 316 1 18 1 351 1 9 1 364 1 88 1 
199 1 323 1 316 1 18 1 351 1 9 1 364 1 88 1 366 1 
210 1 44 1 18 3 212 1 217 1 95 1 364 3 114 1 72 1 325 1 366 2 74 1 326 1 51 1 169 1 195 1 117 1 306 1 351 4 9 1 174 1 199 1 178 1 150 1 253 1 180 1 59 1 234 1 34 1 33 1 335 1 129 2 358 1 259 1 285 1 316 4 376 1 111 1 205 1 242 1 157 1 88 3 90 1 135 1 
316 2 18 1 351 2 101 1 364 2 88 1 34 1 335 1 73 1 
199 1 178 1 18 3 234 1 114 1 364 3 335 2 366 1 375 1 117 1 195 1 316 3 306 1 351 3 9 1 174 1 88 3 243 1 135 1 
199 1 18 2 356 1 181 1 364 2 335 1 366 1 316 2 351 2 88 2 
210 1 180 1 95 1 34 1 33 1 74 1 326 1 51 1 358 1 316 1 285 1 351 1 111 1 157 1 242 1 
210 1 180 1 95 1 34 1 74 1 326 1 339 1 51 1 358 1 316 1 351 1 111 1 157 1 242 1 277 1 
163 1 212 4 72 1 50 2 325 1 303 1 27 1 354 1 251 1 150 1 356 2 59 1 181 2 255 1 283 2 36 1 61 1 129 2 237 1 259 1 130 1 376 2 261 1 90 1 
316 1 18 1 351 1 9 1 234 1 364 1 88 1 121 1 
328 1 275 1 
328 1 275 1 
201 1 188 1 
201 1 188 1 
201 1 188 1 
355 1 328 1 275 1 
21 1 328 1 275 1 
293 1 201 1 328 2 188 1 275 2 128 1 
355 1 328 1 275 1 
355 1 328 1 275 1 
328 1 275 1 43 1 
328 1 275 1 43 1 
328 1 275 1 43 1 
209 1 322 1 18 2 2 1 114 1 364 2 349 1 117 1 146 1 21 1 328 1 351 2 53 1 77 1 275 1 353 1 100 1 281 1 34 1 316 2 185 1 88 2 158 1 321 1 
209 2 293 1 281 1 31 1 311 1 216 1 191 1 114 2 193 1 375 1 40 1 117 2 305 2 328 2 185 2 77 2 275 2 321 3 353 2 
29 1 204 1 35 1 
29 1 204 1 176 1 
29 3 76 1 258 1 176 1 125 1 35 2 
29 2 65 1 258 1 176 1 125 1 35 1 
29 2 258 1 176 1 125 2 35 1 
136 1 296 1 2 1 69 1 164 1 116 1 114 5 71 1 349 1 117 5 350 1 23 2 274 3 171 1 249 1 226 1 172 1 54 1 308 2 124 4 27 1 28 2 198 1 354 1 251 1 252 2 334 3 375 2 237 1 153 1 360 1 158 1 
136 1 296 2 69 1 190 1 246 1 116 6 114 9 71 2 270 1 349 4 52 5 117 9 350 2 23 6 274 8 171 3 249 2 226 1 54 1 172 2 308 6 309 1 124 7 27 3 354 3 251 3 252 6 58 1 334 9 374 5 375 5 237 3 64 1 153 3 89 1 
136 1 296 1 164 1 114 3 71 1 349 1 117 3 350 1 23 2 274 3 171 2 249 1 172 1 308 2 124 2 27 1 28 1 354 1 251 1 252 2 58 1 334 4 375 3 237 1 153 1 360 1 
136 1 296 1 164 1 114 4 71 1 270 1 349 2 117 4 350 1 23 4 274 5 171 3 249 1 172 1 308 4 124 3 27 2 28 2 354 2 251 2 252 4 58 1 334 7 375 4 237 2 64 1 153 2 360 1 89 1 
160 1 111 1 279 1 
111 1 49 1 
93 1 
111 1 95 1 242 1 
111 1 247 1 
111 1 95 1 
291 1 111 3 95 1 242 1 279 2 337 1 
228 1 0 1 251 1 232 1 1 1 212 7 244 1 255 2 12 1 50 4 367 1 237 1 239 1 130 3 376 3 196 2 123 1 
228 1 0 1 251 1 232 1 1 1 212 7 244 1 255 2 12 1 50 4 367 1 237 1 239 1 130 3 376 3 196 2 123 1 
228 1 0 1 251 1 232 1 1 1 212 7 244 1 255 2 12 1 50 4 367 1 237 1 239 1 130 3 155 1 376 3 196 2 123 1 
0 2 1 1 161 4 212 31 244 1 189 1 72 1 325 1 50 16 347 1 367 2 145 1 273 1 196 3 123 2 27 3 228 2 354 3 232 1 251 4 148 3 59 1 255 5 12 1 129 2 108 1 237 4 259 1 239 5 153 3 130 10 110 1 376 15 14 1 
0 1 263 1 1 1 212 9 244 1 72 2 325 2 50 5 367 1 99 1 196 2 123 1 228 1 251 1 232 1 59 2 255 3 129 4 237 1 259 2 239 1 130 4 110 1 376 4 
68 1 362 2 92 1 324 1 115 1 97 1 365 1 221 1 74 1 326 1 51 1 98 1 6 1 76 1 55 1 176 1 280 1 10 1 29 2 250 2 104 1 35 1 338 1 314 1 358 1 204 1 85 1 84 1 377 1 157 1 
68 1 362 3 92 1 115 1 97 1 365 1 221 1 74 1 326 1 51 1 6 1 76 1 55 1 56 1 176 1 280 1 10 1 29 2 250 3 372 1 35 1 338 2 314 1 358 1 204 1 317 1 85 1 84 1 377 1 157 1 
68 1 362 2 115 1 221 1 74 1 326 1 51 1 6 1 76 1 55 1 56 1 176 1 10 1 29 2 250 2 372 1 35 1 338 2 314 1 358 1 204 1 85 1 84 1 377 1 157 1 
362 1 70 1 95 2 97 1 166 1 74 1 326 1 248 1 51 1 6 2 55 2 280 1 10 2 250 1 331 1 30 1 180 1 103 1 105 1 63 1 358 1 260 1 317 1 286 1 84 2 111 2 206 1 157 2 242 1 320 1 
68 1 362 1 92 1 324 1 97 1 365 1 221 1 74 1 326 1 51 1 98 1 6 1 76 1 55 1 176 1 280 1 10 1 29 2 250 1 372 1 35 1 358 1 204 1 84 1 377 1 157 1 
168 1 
296 1 70 1 95 2 141 1 114 2 116 2 166 1 267 1 74 2 326 2 248 1 51 2 117 2 350 1 23 1 274 1 249 1 226 1 172 1 54 1 30 1 180 2 203 1 358 1 111 2 206 1 157 2 242 1 320 1 
292 1 364 1 114 3 116 2 117 3 306 1 351 1 7 1 226 1 9 1 178 1 200 2 101 1 234 1 238 1 316 1 87 1 112 1 378 1 342 1 42 1 135 1 
136 1 292 1 116 1 364 1 114 3 117 3 306 1 351 1 7 1 9 1 226 1 178 1 200 3 101 1 234 1 184 1 375 1 238 1 316 1 87 1 378 1 342 1 42 1 135 1 
136 1 292 1 364 1 114 3 116 2 117 3 306 1 351 1 7 1 226 1 9 1 178 1 200 3 101 1 234 1 184 1 375 1 238 1 316 1 86 1 87 1 112 1 378 1 342 1 42 1 135 1 
136 5 292 1 296 1 302 2 306 1 351 1 7 1 249 1 9 1 54 1 200 6 101 1 202 1 151 2 316 1 112 4 114 5 116 7 364 1 225 1 117 5 23 1 274 1 171 2 226 3 172 1 278 2 229 1 178 1 332 1 179 1 127 1 234 1 184 4 375 5 238 1 131 2 86 4 87 1 342 1 378 1 42 1 187 1 135 1 
136 1 296 1 302 2 306 1 351 1 249 1 7 1 9 1 54 1 200 4 101 1 202 1 151 2 316 1 154 1 112 2 364 1 114 4 116 4 117 4 23 1 274 1 171 2 226 2 172 1 278 2 178 1 234 1 334 2 184 2 375 2 238 1 131 2 86 2 87 1 342 1 378 1 187 1 42 1 135 1 
136 1 296 1 116 4 364 1 114 4 225 1 302 2 117 4 23 1 306 1 274 1 351 1 171 2 249 1 7 1 226 2 9 1 54 1 172 1 278 2 229 1 178 1 200 4 179 1 101 1 234 1 202 1 184 2 151 2 375 1 238 1 131 2 316 1 86 2 87 1 112 2 378 1 342 1 187 1 42 1 135 1 
136 1 296 1 116 4 364 1 114 4 225 1 302 2 117 4 23 1 306 1 274 1 351 1 171 2 249 1 7 1 226 2 9 1 54 1 172 1 278 2 229 1 178 1 200 4 179 1 101 1 234 1 202 1 184 2 151 2 375 1 238 1 131 2 316 1 86 2 87 1 112 2 378 1 342 1 187 1 42 1 135 1 
136 1 91 1 296 1 116 4 299 1 364 1 114 4 117 4 271 2 23 1 306 1 274 1 351 1 249 1 7 1 226 2 9 1 54 1 172 1 278 2 178 1 200 4 179 1 101 1 234 1 334 2 182 1 257 2 202 1 184 2 375 1 238 1 131 2 316 1 86 2 87 1 112 2 378 1 342 1 42 1 135 1 
136 1 296 1 364 1 114 4 116 5 225 1 302 2 117 4 23 1 306 1 274 1 351 1 171 2 249 1 7 1 226 2 9 1 172 1 54 1 278 2 229 1 178 1 200 5 332 1 179 1 101 1 234 1 202 1 184 3 151 2 375 1 238 1 131 2 316 1 86 3 87 1 112 3 378 1 342 1 187 1 42 1 135 1 
136 1 296 1 364 1 114 4 116 5 225 1 302 2 117 4 23 1 306 1 274 1 351 1 171 2 249 1 7 1 226 2 9 1 172 1 54 1 278 2 229 1 178 1 200 5 332 1 179 1 101 1 234 1 202 1 184 3 151 2 375 1 238 1 131 2 316 1 86 3 87 1 112 3 378 1 342 1 187 1 42 1 135 1 
136 1 296 1 299 1 306 1 351 1 249 1 7 1 9 1 54 1 200 4 101 1 257 2 202 1 316 1 154 1 112 2 364 1 114 4 116 4 117 4 23 1 271 2 274 1 226 2 172 1 278 2 178 1 234 1 334 2 184 2 375 1 238 1 131 2 86 2 87 1 342 1 378 1 42 1 135 1 
160 1 1 1 212 6 244 1 72 1 325 1 50 3 367 1 303 1 196 1 228 1 232 1 251 1 150 1 356 1 59 1 181 1 255 2 34 2 283 1 129 2 237 1 259 1 130 2 376 3 90 1 
161 3 212 14 94 1 189 1 72 2 325 2 50 8 22 1 119 1 122 1 27 2 354 1 251 1 150 2 148 3 356 11 253 1 357 1 59 2 255 1 181 4 34 1 283 11 108 1 129 4 237 2 239 1 259 2 130 2 153 2 376 6 288 1 90 1 
210 1 17 1 18 1 212 2 95 1 94 1 364 1 72 1 325 1 50 1 74 1 326 1 301 1 51 1 195 1 351 2 119 1 24 1 150 1 253 1 180 1 59 1 181 1 34 1 33 1 335 1 235 1 129 2 358 1 259 1 285 1 316 2 376 1 111 1 242 1 157 1 88 1 90 1 
45 1 1 1 244 1 94 1 95 2 50 10 51 3 195 1 351 3 196 1 354 2 251 3 150 3 57 1 356 7 253 1 102 2 254 1 59 3 255 4 256 2 358 2 259 3 316 3 153 2 156 2 111 2 157 2 210 2 18 1 212 20 215 2 364 1 72 3 325 3 74 3 367 1 326 3 169 2 119 1 27 2 228 1 232 1 372 1 180 1 181 7 34 2 33 2 335 1 283 7 129 6 237 3 239 4 285 2 130 8 376 10 242 2 88 1 90 3 
212 2 70 1 95 2 72 1 166 1 325 1 50 1 74 2 224 1 326 2 248 1 51 2 119 1 30 1 150 1 253 1 180 1 59 1 129 2 358 1 259 1 376 1 111 2 206 1 241 1 157 2 242 1 320 1 379 1 90 1 
18 1 212 3 94 1 364 1 72 1 366 1 325 1 50 1 170 1 351 1 27 1 354 1 199 1 251 1 150 1 356 1 59 1 255 1 181 1 283 1 129 2 237 1 259 1 130 1 316 1 153 1 376 2 88 1 90 1 
150 1 356 1 212 2 59 1 181 1 72 1 283 1 325 1 50 2 61 1 129 2 237 1 239 1 303 1 259 1 130 1 90 1 27 1 
354 1 251 1 150 1 356 1 212 2 163 1 59 1 255 1 181 1 72 1 283 1 325 1 129 2 303 1 259 1 130 1 376 2 90 1 
212 4 72 1 50 2 325 1 303 1 27 1 354 1 251 1 150 1 356 2 59 1 181 2 255 1 283 2 129 2 237 1 259 1 239 1 153 1 130 2 376 2 90 1 
150 1 356 1 212 2 59 1 181 1 72 1 283 1 325 1 50 2 224 1 61 1 129 2 237 1 239 1 259 1 130 1 90 1 27 1 
354 1 251 1 150 1 356 1 212 2 163 1 59 1 255 1 181 1 72 1 283 1 325 1 224 1 129 2 259 1 130 1 376 2 90 1 
212 4 72 1 50 2 325 1 224 1 27 1 354 1 251 1 150 1 356 2 59 1 181 2 255 1 283 2 129 2 237 1 259 1 239 1 153 1 130 2 376 2 90 1 
212 4 72 1 50 2 325 1 27 1 354 1 251 1 150 1 356 2 59 1 181 2 255 1 283 2 129 2 237 1 259 1 239 1 153 1 130 2 376 2 90 1 
210 1 212 2 95 1 72 1 50 1 325 1 74 1 326 1 51 1 169 1 119 1 351 1 150 1 253 1 180 1 59 1 34 1 33 1 129 2 358 1 259 1 285 1 316 1 376 1 111 1 242 1 157 1 90 1 
210 1 212 2 214 1 95 1 72 1 50 1 325 1 74 1 326 1 51 1 119 1 351 1 277 1 150 1 253 1 180 1 59 1 34 1 339 1 129 2 358 1 259 1 316 1 376 1 111 1 242 1 157 1 90 1 
212 4 94 1 72 1 50 2 325 1 27 1 354 1 251 1 150 1 356 2 59 1 181 2 255 1 283 2 129 2 237 1 259 1 239 1 153 1 130 2 376 2 90 1 
210 1 212 4 95 1 72 1 50 2 325 1 74 1 326 1 51 1 169 1 351 1 27 1 354 1 251 1 150 1 356 2 102 1 104 1 59 1 255 1 181 2 33 1 283 2 129 2 237 1 358 1 239 1 259 1 130 2 285 1 316 1 153 1 376 2 111 1 242 1 157 1 90 1 
18 1 212 3 94 1 364 1 72 1 366 1 325 1 144 1 50 2 351 1 27 1 354 1 199 1 251 1 150 1 356 1 59 1 181 1 283 1 129 2 237 1 239 1 259 1 130 1 316 1 153 1 376 1 88 1 90 1 
263 1 161 2 212 19 189 1 192 1 96 1 72 2 325 2 50 9 4 1 272 1 307 2 27 3 354 3 251 3 148 1 373 1 59 2 255 3 60 1 13 1 236 2 108 1 129 4 237 3 259 2 239 3 153 3 130 6 376 10 
263 1 161 2 212 26 192 1 72 3 325 3 50 14 4 1 194 1 272 2 307 1 26 1 27 3 354 2 251 2 148 2 373 1 59 3 255 2 81 1 13 2 236 4 129 6 108 2 237 3 239 2 259 3 130 4 153 3 110 2 376 12 287 1 208 1 134 1 
1 1 189 1 244 1 192 1 50 20 4 1 194 1 307 1 196 1 354 4 251 5 148 3 59 3 255 4 60 1 13 2 108 3 259 3 153 4 110 1 208 1 361 1 263 1 161 4 212 41 72 3 325 3 367 1 272 1 26 1 27 4 228 1 232 1 373 1 81 1 236 4 129 6 237 5 239 4 130 8 376 21 287 1 134 1 
361 1 263 1 1 1 161 4 212 38 244 1 189 1 192 1 72 4 325 4 50 20 367 1 4 1 194 1 272 1 307 1 196 1 26 1 27 4 228 1 354 3 232 1 251 4 148 3 373 1 59 4 255 4 60 1 81 1 13 2 236 4 108 3 129 8 237 5 259 4 239 3 153 4 130 7 110 2 376 18 287 1 208 1 134 1 
263 1 1 1 161 4 212 52 244 1 189 2 192 1 72 2 325 2 50 27 367 1 4 1 194 1 272 1 307 1 196 1 26 1 27 7 228 1 354 7 232 1 251 8 148 4 373 1 59 2 255 7 81 1 13 1 236 4 108 2 129 4 237 8 259 2 239 7 153 7 130 14 110 1 376 25 287 1 288 2 208 1 134 1 
193 1 209 1 293 1 311 1 328 1 185 1 77 1 275 1 165 1 353 1 
322 1 21 1 
209 1 327 1 328 1 41 1 185 1 363 1 77 1 275 1 353 1 
5 1 355 1 
336 1 128 1 43 1 
209 1 293 1 281 1 311 1 216 1 191 1 114 1 193 1 375 1 40 1 117 1 305 1 328 1 185 1 77 1 275 1 321 2 353 1 
209 1 293 1 281 1 311 1 216 1 191 1 114 1 193 1 375 1 40 1 117 1 305 1 328 1 185 1 77 1 275 1 321 2 353 1 
209 1 293 1 281 1 311 1 216 1 191 1 114 1 193 1 375 1 40 1 117 1 305 1 328 1 185 1 77 1 275 1 321 2 353 1 
5 1 355 1 128 1 
5 1 355 1 128 1 
336 1 43 1 
336 1 128 1 43 1 
53 1 100 1 
209 1 322 1 18 2 2 1 216 1 114 1 364 2 142 1 349 1 305 1 117 1 146 1 21 1 351 2 328 1 53 1 77 1 275 1 124 1 353 1 100 1 34 1 316 2 185 1 88 2 158 1 321 1 
262 1 46 1 212 2 95 1 94 1 364 2 72 1 222 1 325 1 50 1 74 2 326 2 51 2 351 2 119 1 78 1 197 1 150 1 253 1 59 1 129 2 358 1 259 1 316 2 376 1 111 1 241 2 157 1 15 1 379 1 90 1 
68 1 29 2 295 1 372 1 104 1 365 1 35 1 74 2 326 2 107 1 358 1 51 2 204 1 6 1 76 1 319 1 157 1 377 1 176 1 
68 1 29 2 295 1 372 1 365 1 35 1 74 1 326 1 167 1 51 1 358 1 204 1 6 1 76 1 377 1 157 1 176 1 
95 2 70 1 166 1 74 1 326 1 248 1 51 1 6 1 333 1 30 1 180 1 63 1 358 1 260 1 111 2 319 1 206 1 320 1 242 1 157 2 
68 1 29 2 295 1 372 1 365 1 35 1 74 1 326 1 107 1 51 1 358 1 204 1 6 1 76 1 319 1 157 1 377 1 176 1 
106 1 
136 1 269 1 375 1 160 1 23 1 274 1 329 1 
136 1 296 1 116 1 114 1 302 1 117 1 23 1 274 1 171 1 249 1 226 1 172 1 54 1 334 1 151 1 375 2 187 1 
136 2 296 4 140 2 95 3 141 1 346 2 143 2 49 3 247 2 51 3 350 2 249 4 54 4 352 1 308 6 354 2 251 2 252 6 104 1 256 2 358 3 153 2 111 10 157 4 16 1 116 5 114 5 74 3 269 1 326 3 117 5 23 8 118 2 274 9 329 1 171 6 226 3 172 4 279 2 177 1 27 2 178 2 231 1 180 1 233 2 334 12 337 1 375 8 284 2 237 2 341 2 132 2 133 1 242 3 
136 2 161 1 296 2 141 1 114 1 116 1 220 1 194 1 350 1 117 1 23 5 274 8 249 2 171 3 226 1 172 2 54 2 26 1 308 5 27 2 354 2 251 2 148 1 252 5 334 6 108 1 375 5 237 2 341 2 153 2 132 1 287 1 208 1 134 1 290 1 
296 1 18 1 297 1 114 1 364 1 366 1 367 1 117 1 23 2 351 1 274 2 249 1 9 1 173 1 172 1 54 1 310 1 228 1 229 1 232 1 251 1 237 2 316 1 341 2 132 1 205 1 67 1 88 1 
136 1 296 1 269 1 375 1 23 1 274 1 249 1 329 1 54 1 172 1 
354 2 251 2 252 5 256 1 334 10 375 5 237 2 341 2 153 2 23 5 132 1 274 5 171 5 308 5 27 2 
136 1 375 1 117 1 226 1 114 1 116 1 
296 1 70 1 95 2 141 1 116 2 114 1 166 1 267 1 74 2 326 2 248 1 51 2 350 1 117 1 23 1 274 1 249 1 226 1 172 1 54 1 30 1 231 1 180 2 203 1 358 1 111 2 206 1 157 2 242 1 320 1 
210 1 18 2 212 1 217 1 95 1 364 2 72 1 325 1 366 2 74 1 326 1 51 1 169 1 351 3 150 1 253 1 180 1 59 1 34 1 33 1 129 2 358 1 259 1 316 3 285 1 376 1 205 1 111 1 157 1 242 1 88 2 90 1 
136 2 296 1 252 2 141 1 334 4 375 4 350 1 23 2 274 1 171 2 249 1 196 1 54 1 172 1 308 2 
209 1 371 1 185 1 
209 1 311 1 185 1 345 1 100 1 
209 1 371 1 185 1 
209 1 371 1 185 1 
315 1 209 1 185 1 
315 1 209 1 185 1 
315 1 209 1 185 1 
209 1 185 1 
328 1 275 1 
228 1 251 1 232 1 1 1 212 8 244 1 59 2 255 2 72 2 50 4 325 2 367 1 129 4 237 1 239 1 259 2 130 3 110 1 376 4 196 1 
228 1 160 1 1 1 232 1 251 1 212 6 244 1 255 2 50 3 367 1 237 1 130 2 376 3 196 1 
354 1 251 1 162 1 212 4 59 1 255 1 72 1 325 1 50 2 129 2 237 1 259 1 239 1 130 2 153 1 376 2 27 1 
354 1 251 1 161 2 148 1 212 7 189 1 255 1 50 3 108 1 237 1 239 1 153 1 130 2 376 4 27 1 
1 1 161 2 212 23 244 1 189 1 72 2 50 11 325 2 367 2 196 1 175 1 27 2 228 2 354 2 232 1 251 3 148 2 357 1 59 2 255 5 129 4 237 3 239 4 259 2 130 9 153 2 110 2 376 12 288 1 
161 1 212 1 376 1 
148 1 212 1 50 1 
354 1 251 1 162 1 212 6 59 1 256 1 255 2 72 1 325 1 50 3 129 2 237 1 259 1 239 1 153 1 130 3 376 3 27 1 
263 1 161 1 212 12 72 1 325 1 50 6 194 1 26 1 27 2 354 2 251 2 148 1 59 1 255 1 108 1 129 2 237 2 239 1 259 1 153 2 130 2 376 6 287 1 134 1 208 1 
228 1 232 1 251 1 212 6 255 1 50 3 367 1 237 1 239 1 130 2 376 3 
228 1 1 1 212 3 244 1 59 1 255 1 72 1 50 1 325 1 367 1 129 2 239 1 259 1 130 2 110 1 376 2 175 1 
228 2 263 1 232 1 251 2 212 10 59 1 255 3 72 1 325 1 50 5 367 2 129 2 237 2 259 1 239 2 130 5 376 5 173 1 
263 1 212 2 59 1 72 1 325 1 50 2 129 2 237 1 259 1 239 1 130 1 27 1 
354 1 263 1 251 1 212 4 59 1 255 1 72 1 325 1 50 2 129 2 237 1 259 1 239 1 130 2 153 1 376 2 27 1 
228 1 263 1 212 3 59 3 255 1 72 3 60 1 325 3 50 1 367 1 129 6 259 3 239 1 130 2 110 1 376 2 175 1 
263 1 1 1 161 4 162 1 212 34 244 1 189 1 72 5 347 1 325 5 50 16 367 3 145 1 196 1 175 1 27 3 228 3 354 3 232 2 251 5 148 3 59 5 255 7 60 1 108 1 129 10 237 5 259 5 239 5 153 3 130 12 110 2 376 18 14 1 
263 1 161 1 1 1 212 8 244 1 72 1 325 1 50 4 367 1 196 1 26 1 228 1 251 1 232 1 148 1 59 1 255 2 108 1 129 2 237 1 259 1 130 2 376 4 
263 1 1 1 161 2 162 1 212 11 244 1 189 1 72 2 325 2 50 6 367 1 196 1 26 1 27 1 228 1 251 1 232 1 148 1 59 2 255 2 108 1 129 4 237 2 259 2 239 1 153 1 130 3 376 5 
263 1 1 1 161 1 162 1 212 19 244 1 72 3 325 3 50 9 367 1 194 1 196 1 26 1 27 2 228 1 354 2 232 1 251 3 148 1 59 3 255 3 108 1 129 6 237 3 239 1 259 3 153 2 130 4 110 1 376 10 287 1 134 1 208 1 
263 1 1 1 161 1 162 1 212 17 244 1 72 3 325 3 50 10 367 1 194 1 196 1 26 1 27 2 228 1 354 1 232 1 251 2 148 1 59 3 255 3 108 1 129 6 237 3 239 2 259 3 153 2 130 5 110 1 376 7 287 1 134 1 208 1 
263 1 161 1 1 1 212 8 244 1 72 1 325 1 50 4 367 1 196 1 26 1 228 1 251 1 232 1 148 1 59 1 255 2 108 1 129 2 237 1 259 1 130 2 376 4 
263 1 161 1 212 12 72 1 325 1 50 6 194 1 26 1 27 2 354 2 251 2 148 1 59 1 255 1 108 1 129 2 237 2 239 1 259 1 153 2 130 2 376 6 287 1 134 1 208 1 
263 1 1 1 161 1 162 1 212 18 244 1 72 4 325 4 50 10 367 1 194 1 196 1 26 1 27 2 228 1 354 1 232 1 251 2 148 1 59 4 255 3 108 1 129 8 237 3 239 2 259 4 153 2 130 5 110 2 376 8 287 1 208 1 134 1 
263 1 161 1 212 16 72 4 325 4 50 9 194 1 26 1 27 3 354 2 251 2 148 1 59 4 255 3 60 1 108 1 129 8 237 3 239 3 259 4 153 3 130 6 110 2 376 7 287 1 208 1 134 1 
228 3 251 1 1 2 232 1 212 7 244 1 255 3 50 3 367 3 237 1 239 3 130 6 376 4 
263 1 1 1 161 1 212 18 244 1 72 4 325 4 50 10 367 1 194 1 196 1 26 1 27 2 228 1 354 1 232 1 251 2 148 1 59 4 255 3 60 1 108 1 129 8 237 3 239 1 259 4 153 2 130 4 110 2 376 8 287 1 208 1 134 1 
316 1 351 1 101 1 8 1 364 1 34 1 73 1 
101 1 245 1 312 1 364 1 34 1 313 1 73 1 62 1 80 1 316 1 351 1 8 1 
326 1 248 1 51 1 160 1 111 1 180 1 95 1 320 1 74 1 
210 1 18 1 180 1 95 1 364 1 34 1 33 1 335 1 74 1 326 1 51 1 358 1 316 2 351 2 111 1 242 1 157 1 88 1 
16 1 210 1 18 2 140 1 95 2 364 2 74 1 247 1 326 1 51 1 351 2 9 1 234 1 34 1 33 1 335 1 358 1 316 2 111 3 157 1 242 2 88 1 135 1 
16 1 210 1 18 2 140 1 95 2 364 2 74 2 247 1 326 2 51 2 351 2 9 1 234 1 34 1 335 1 339 1 358 1 39 1 316 2 111 3 157 1 242 2 88 1 135 1 
136 1 16 1 140 1 95 1 116 1 114 2 49 1 268 1 74 3 247 1 326 3 51 3 117 2 279 1 330 1 178 1 180 1 375 1 358 1 39 1 111 4 157 1 242 1 
136 1 16 1 178 1 180 1 140 1 95 1 114 2 116 1 49 1 247 1 74 3 326 3 375 1 51 3 284 1 358 1 39 1 117 2 111 4 242 1 157 1 279 1 
326 1 358 1 51 1 157 1 32 1 74 1 
126 1 46 1 30 1 372 1 139 1 180 2 218 1 95 2 104 1 32 1 337 1 74 7 326 7 51 6 358 2 111 3 147 1 206 1 241 1 242 1 157 3 
1 1 94 1 95 1 244 1 50 3 51 1 351 2 196 1 251 1 150 2 356 1 102 1 104 1 59 2 255 2 358 1 259 2 316 2 156 1 111 1 157 1 210 1 18 1 212 6 364 1 72 2 222 1 325 2 74 1 326 1 367 1 169 1 228 1 232 1 181 1 33 1 34 2 335 1 283 1 129 4 237 1 285 1 130 2 376 3 242 1 88 1 90 2 
136 1 296 2 114 3 116 2 346 1 143 1 49 1 74 1 269 1 326 1 51 1 117 3 23 1 274 1 118 1 329 1 249 2 226 1 172 2 54 2 279 1 124 1 178 1 231 1 180 1 375 1 284 1 111 2 
95 1 104 1 32 1 337 1 74 2 326 2 51 2 358 1 111 2 133 1 242 1 157 2 279 1 
30 1 180 1 70 1 95 2 104 1 166 1 74 2 326 2 248 1 358 1 51 2 111 2 206 1 157 2 242 1 320 1 
16 1 45 1 30 1 70 1 95 1 166 1 74 2 326 2 51 2 358 1 111 1 206 1 242 1 157 2 
68 1 326 1 29 1 358 1 51 1 204 1 180 1 157 1 176 1 74 1 
46 1 372 1 95 1 104 1 74 2 326 2 51 2 358 1 111 1 78 1 157 1 
46 1 95 3 70 1 166 1 74 3 326 3 248 1 51 2 147 1 126 1 30 1 180 1 104 1 358 2 111 4 206 1 157 3 320 1 242 1 
46 1 95 3 70 1 166 1 74 3 326 3 248 1 51 2 126 1 30 1 180 1 104 1 358 2 240 1 111 4 206 1 157 3 320 1 242 1 
210 1 18 1 180 1 95 1 364 1 34 1 335 1 74 1 326 1 339 1 51 1 358 1 316 2 351 2 111 1 242 1 157 1 88 1 
16 1 30 1 218 1 95 1 337 1 74 1 326 1 51 1 358 1 111 1 206 1 242 1 157 2 
227 1 137 1 230 1 344 1 34 1 
136 1 137 1 227 2 178 1 230 2 11 1 265 1 344 2 234 1 114 2 34 1 375 1 117 2 306 1 9 1 174 1 276 1 124 1 135 1 
137 1 227 1 262 1 316 1 344 1 351 1 15 1 364 1 197 1 
137 1 265 1 276 1 
314 1 160 1 85 1 115 1 
314 1 250 1 362 1 85 1 115 1 97 1 280 1 
250 1 84 1 55 1 
314 1 250 3 98 1 362 3 19 2 85 1 149 1 66 1 115 1 97 1 280 1 348 1 
338 1 314 1 113 1 250 2 362 2 85 1 115 1 97 1 280 1 
29 1 250 1 362 1 370 1 97 1 35 1 314 1 98 1 204 1 186 1 280 1 
314 1 250 1 98 1 362 1 115 1 97 1 280 1 
250 1 98 1 362 1 85 1 115 2 97 1 280 1 
343 1 250 2 362 2 115 1 97 2 183 1 314 1 98 1 369 1 280 2 
250 3 138 1 362 3 370 1 115 1 97 1 282 1 338 2 314 2 98 1 85 1 120 1 280 1 
29 2 250 2 362 2 115 1 97 1 300 1 35 1 338 1 314 1 98 1 204 1 85 1 76 1 176 1 280 1 
250 4 113 1 362 4 264 1 370 1 115 1 97 2 282 1 338 2 314 2 98 1 85 1 280 2 
314 1 250 1 98 1 362 1 85 1 115 1 97 1 280 1 
250 4 362 4 19 1 370 1 149 1 47 1 115 2 97 1 282 1 348 1 338 2 314 3 85 2 280 1 
250 2 362 2 115 1 97 1 3 1 219 1 338 1 314 1 98 1 20 1 85 1 280 1 
250 3 362 3 19 2 149 2 79 1 97 1 115 1 348 1 314 1 98 1 85 1 280 1 
314 2 368 2 298 1 207 1 
38 1 250 1 98 1 362 1 97 1 280 1 
338 1 314 1 250 2 98 1 362 2 85 1 120 1 115 1 97 1 280 1 
294 1 
314 1 250 1 98 1 362 1 85 1 115 1 97 1 280 1 
338 1 314 1 250 3 98 1 362 3 19 1 85 1 120 1 115 1 97 1 280 1 
314 1 370 1 47 1 282 1 
314 1 115 1 

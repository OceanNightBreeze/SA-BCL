#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 103 225 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 103 225 238 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 103 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 1 161 1 60 2 86 2 314 1 191 1 316 1 342 3 80 3 335 1 226 1 269 2 299 1 
252 1 76 1 4 1 304 2 322 2 181 1 342 9 211 2 80 9 98 1 113 1 187 1 351 1 161 1 60 2 86 5 328 1 314 1 191 6 316 3 44 1 221 1 358 2 197 1 335 2 226 1 269 2 299 4 
252 1 76 1 4 1 304 2 322 2 181 1 342 9 211 2 80 9 98 1 113 1 187 1 351 1 161 1 60 2 86 5 328 1 314 1 191 6 316 3 44 1 221 1 358 2 197 1 335 2 226 1 269 2 299 4 
252 1 76 1 4 1 304 2 322 2 181 1 342 10 211 2 80 10 98 1 113 1 187 1 351 1 161 1 60 2 86 6 328 1 314 1 191 7 316 4 44 1 221 1 358 2 197 1 335 2 226 1 269 2 299 5 
252 1 76 1 4 1 304 2 322 2 342 7 211 2 80 7 98 1 113 1 187 1 351 1 161 1 60 2 86 4 328 1 314 1 191 4 316 2 44 1 221 1 358 1 197 1 335 2 226 1 269 2 299 3 
187 1 351 1 60 1 86 3 314 1 191 3 316 1 322 1 304 1 181 1 342 4 80 4 358 2 211 1 197 1 226 1 269 1 299 2 
351 1 135 1 76 1 60 1 86 1 314 1 304 1 322 1 65 1 342 2 80 2 335 1 226 1 269 1 258 1 98 1 
187 1 351 1 161 1 60 2 262 1 328 1 86 5 314 1 191 7 316 3 322 1 304 1 181 1 342 9 211 1 358 2 221 1 80 9 197 1 335 1 226 1 269 2 94 1 299 4 
187 1 351 1 161 1 60 2 262 1 328 1 86 5 314 1 191 7 316 3 322 1 304 1 181 1 342 9 211 1 358 2 221 1 80 9 197 1 335 1 226 1 269 2 94 1 299 4 
206 1 192 1 150 1 66 1 182 1 324 1 183 1 45 1 279 1 348 1 239 1 284 1 286 1 259 1 
132 1 
111 1 182 2 183 1 149 1 192 2 132 1 125 1 310 1 
312 2 288 1 192 5 149 2 125 1 256 1 8 1 53 1 182 5 323 2 183 2 156 1 132 1 15 2 308 1 272 1 310 1 350 1 134 1 
315 1 132 1 125 1 
132 1 33 1 283 2 
0 1 324 2 279 2 45 2 348 2 239 2 284 1 66 2 
0 1 168 1 28 2 171 1 169 2 321 1 3 1 210 1 97 1 154 1 11 1 324 2 279 3 112 1 348 2 36 2 326 1 239 2 284 1 309 1 311 1 99 2 41 1 193 1 293 1 265 1 245 1 67 1 66 2 68 1 248 1 45 3 165 1 270 1 297 1 200 1 72 2 
324 1 279 1 45 1 206 1 348 1 239 1 284 1 150 1 66 1 259 1 
320 1 214 1 192 1 125 1 32 1 126 1 66 1 182 1 128 1 45 1 279 1 222 1 132 1 259 1 
320 1 192 2 125 1 32 1 126 1 66 1 182 2 324 1 45 1 279 1 222 1 132 1 348 1 239 1 259 1 
182 1 183 1 149 1 192 1 292 1 
182 2 183 1 149 1 192 2 132 1 125 1 107 1 310 1 
182 1 149 1 192 1 
0 2 5 1 66 2 324 1 45 2 279 2 348 1 239 1 16 1 
105 1 235 1 77 1 
0 1 28 1 171 1 169 1 293 1 193 1 100 1 3 1 245 1 68 1 97 1 279 1 45 1 165 1 112 1 36 1 
0 1 315 1 
28 1 171 1 169 1 105 1 290 1 193 1 293 1 3 1 245 1 66 1 68 1 180 1 97 1 45 2 279 2 165 1 112 1 348 1 36 1 239 1 
0 1 324 1 290 1 279 3 45 3 348 3 239 3 66 3 
279 1 45 1 206 1 348 1 239 1 66 1 259 1 
324 1 279 1 45 1 348 1 239 1 5 1 16 1 66 1 259 1 
0 1 168 1 320 1 28 1 171 1 169 1 321 1 207 1 3 1 32 1 5 1 126 1 210 1 180 1 97 1 182 1 11 1 12 1 324 2 279 4 112 1 348 3 36 1 239 3 284 1 309 1 311 1 259 1 99 2 290 1 192 1 193 1 293 1 245 1 66 3 68 1 248 1 45 4 222 1 165 1 270 1 297 1 200 1 72 1 
0 1 214 1 279 2 45 2 290 1 184 1 348 1 239 1 66 2 
320 1 290 2 192 1 207 1 174 1 32 1 5 1 126 1 66 3 180 1 182 1 324 1 222 1 45 3 279 3 132 1 348 3 239 3 259 1 
290 1 105 1 5 1 235 1 66 2 324 1 45 2 279 2 348 2 239 2 
0 1 28 1 169 1 171 1 293 1 193 1 3 1 245 1 68 1 97 1 279 1 45 1 165 1 112 1 36 1 
0 1 28 1 169 1 171 1 193 1 245 1 68 1 267 1 97 1 279 1 45 1 165 1 13 1 112 1 36 1 
168 2 105 2 29 1 47 1 31 1 77 2 235 2 210 1 341 1 11 1 346 1 130 1 309 1 159 1 99 2 242 1 329 1 67 2 248 1 143 1 270 1 297 1 166 1 72 4 
279 1 45 1 348 1 81 1 239 1 126 1 66 1 259 1 
145 1 0 1 214 1 340 1 290 2 5 1 66 5 180 1 324 1 45 5 279 5 184 1 348 4 239 4 
279 2 45 2 206 1 348 2 81 1 239 2 66 2 259 1 
333 1 43 1 73 1 
96 1 333 2 34 1 129 1 43 2 74 1 
333 1 43 1 
333 1 43 1 
96 1 129 1 
96 1 129 1 
96 1 129 1 
333 1 43 1 327 1 
333 1 43 1 327 1 
333 1 43 1 327 1 
333 1 43 1 208 1 
333 1 43 1 208 1 
333 1 43 1 208 1 
333 1 217 1 54 1 225 1 43 1 103 1 
333 1 182 1 238 1 217 1 54 1 225 1 192 1 43 1 103 1 
211 1 114 1 135 1 223 2 304 2 
211 1 322 1 304 1 
135 1 322 1 304 1 
114 1 211 2 135 1 223 1 142 1 304 3 
114 1 211 1 135 1 223 1 19 1 304 2 
167 1 172 1 47 1 149 1 31 1 125 1 33 1 8 1 127 2 341 1 182 5 323 1 183 4 280 1 132 2 281 2 15 1 283 3 310 1 134 2 312 1 288 3 329 1 331 1 192 5 63 1 64 2 266 1 195 1 196 1 141 1 203 1 
1 1 2 1 47 3 149 6 31 3 125 1 33 3 8 1 9 1 127 6 53 1 341 3 182 9 323 2 183 7 280 1 132 5 15 2 283 9 310 1 134 6 312 2 288 8 329 3 192 9 292 5 64 6 195 4 196 2 219 1 334 5 141 3 203 2 231 1 75 1 
47 1 125 1 31 1 33 2 127 2 341 1 53 1 182 3 323 1 183 2 132 3 281 1 15 1 283 4 134 2 312 1 288 3 329 1 331 1 192 3 63 1 64 2 195 1 196 1 141 1 203 1 
47 2 125 1 31 2 33 3 9 1 127 4 341 2 53 1 182 4 323 1 183 3 132 4 281 2 15 1 283 7 134 4 312 1 288 5 329 2 331 1 192 4 63 1 64 4 195 2 196 1 141 2 203 1 231 1 75 1 
339 1 
40 1 171 1 315 1 
171 1 178 1 
171 1 193 1 
40 2 171 3 253 1 193 1 83 1 245 1 
171 1 193 1 245 1 
171 1 58 1 
168 3 313 1 329 1 29 2 353 1 51 1 138 1 354 2 67 4 341 1 305 1 343 1 199 1 307 1 338 1 57 1 72 7 159 3 
204 1 168 15 29 5 47 3 31 3 51 1 275 1 210 1 305 1 341 4 343 2 278 1 11 1 307 2 282 1 57 2 159 10 59 1 99 2 313 2 329 4 353 1 354 3 67 16 295 1 23 4 198 1 90 3 199 1 141 3 270 1 297 1 338 5 72 31 
168 4 170 1 29 3 51 1 210 2 341 1 343 1 11 2 307 1 282 1 57 1 159 4 99 4 243 1 313 1 329 1 353 1 354 2 67 5 199 1 270 2 297 2 338 1 72 9 
168 3 313 1 329 1 29 2 353 1 51 1 354 2 67 4 341 1 305 1 343 1 199 1 307 1 338 1 57 1 72 7 159 3 
168 3 313 1 329 1 29 2 353 1 51 1 354 2 67 4 341 1 305 1 343 1 199 1 307 1 338 1 57 1 72 7 159 3 
300 1 28 1 169 1 171 1 342 1 97 1 80 1 35 2 112 1 36 1 188 2 60 1 352 1 218 1 291 2 193 1 118 1 101 1 165 1 335 2 269 1 144 1 25 1 
28 1 169 1 173 1 50 1 322 1 176 1 304 2 342 1 211 1 80 1 97 1 35 1 306 1 112 1 36 1 240 1 188 1 351 1 135 1 60 1 291 1 21 1 356 1 335 1 269 1 142 1 
28 1 169 1 173 1 50 1 322 1 176 1 304 2 342 2 211 1 80 2 97 1 35 1 112 1 14 1 36 1 240 1 188 1 351 1 135 1 60 1 86 1 314 1 191 1 291 1 21 1 356 1 335 1 226 1 269 1 142 1 
300 1 28 1 169 1 173 1 322 1 176 1 304 2 342 3 211 1 80 3 97 1 35 1 306 1 55 1 112 1 36 1 240 1 188 1 135 1 60 1 86 1 314 1 191 2 291 1 21 1 356 1 335 1 226 1 142 1 269 1 
28 1 169 1 176 1 304 2 322 1 342 2 80 2 97 1 211 1 35 1 306 1 55 1 112 1 36 1 240 1 188 1 135 1 86 1 314 1 191 2 291 1 21 1 335 1 226 1 142 1 
163 1 
319 2 320 1 169 2 171 1 125 1 49 1 234 1 126 1 8 1 182 5 97 1 128 1 323 1 279 1 132 2 56 1 15 1 283 2 134 2 288 2 289 1 136 2 18 1 330 1 137 1 192 5 20 1 193 1 332 2 66 1 101 1 139 1 144 1 202 2 203 1 28 2 301 1 149 6 33 2 32 1 112 1 36 2 310 3 260 2 259 1 312 1 215 1 214 1 42 4 216 1 116 2 88 2 165 2 45 1 222 1 
320 1 215 1 289 1 214 1 136 1 42 2 149 2 192 3 20 1 234 1 32 1 126 1 66 1 111 1 139 1 182 3 128 1 222 1 45 1 279 1 310 1 259 1 
320 1 149 1 125 1 234 1 32 1 126 1 111 1 182 3 128 1 279 1 132 1 310 1 259 1 214 1 289 1 215 1 42 3 192 3 20 1 66 1 139 1 45 1 222 1 202 1 
320 1 149 2 125 1 234 1 32 1 126 1 111 1 182 3 128 1 279 1 132 1 310 1 259 1 260 1 214 1 289 1 215 1 42 3 136 1 192 3 20 1 66 1 139 1 45 1 222 1 202 1 
319 2 320 1 149 7 125 5 234 1 33 2 32 1 126 1 8 1 209 1 111 1 182 5 128 1 323 1 279 1 155 1 132 5 15 1 310 3 38 1 134 1 259 1 260 4 312 1 288 1 214 1 289 1 215 1 18 1 216 1 42 6 136 4 192 5 20 1 116 2 332 2 88 2 66 1 139 1 164 1 45 1 222 1 250 1 202 4 
319 2 320 1 125 1 234 1 126 1 8 1 182 4 128 1 323 1 279 1 132 2 15 1 56 1 283 2 134 1 288 1 289 1 18 1 136 2 192 4 20 1 332 2 66 1 139 1 202 2 149 4 32 1 33 2 310 2 259 1 260 2 312 1 214 1 215 1 216 1 42 4 116 2 88 2 222 1 45 1 
319 2 320 1 149 4 125 1 234 1 33 2 32 1 126 1 209 1 8 1 182 4 128 1 323 1 279 1 132 1 15 1 310 2 38 1 260 2 134 1 259 1 312 1 288 1 214 1 289 1 215 1 136 2 18 1 216 1 42 4 192 4 20 1 116 2 332 2 88 2 66 1 139 1 45 1 222 1 250 1 202 2 
319 2 320 1 149 4 125 1 234 1 33 2 32 1 126 1 209 1 8 1 182 4 128 1 323 1 279 1 132 1 15 1 310 2 38 1 260 2 134 1 259 1 312 1 288 1 214 1 289 1 215 1 136 2 18 1 216 1 42 4 192 4 20 1 116 2 332 2 88 2 66 1 139 1 45 1 222 1 250 1 202 2 
320 1 149 4 125 1 234 1 32 1 7 2 126 1 8 1 182 4 128 1 323 1 279 1 132 1 15 1 283 2 310 2 260 2 134 1 259 1 312 1 288 1 214 1 289 1 215 1 136 2 18 1 42 4 61 1 192 4 20 1 115 1 332 2 88 2 66 1 357 1 139 1 45 1 222 1 249 2 250 1 202 2 
319 2 320 1 149 5 125 1 234 1 33 2 32 1 126 1 8 1 209 1 182 4 128 1 323 1 279 1 155 1 132 1 15 1 310 2 38 1 134 1 259 1 260 3 312 1 288 1 214 1 289 1 215 1 18 1 216 1 42 5 136 3 192 4 20 1 116 2 332 2 88 2 66 1 139 1 45 1 222 1 250 1 202 3 
319 2 320 1 149 5 125 1 234 1 33 2 32 1 126 1 8 1 209 1 182 4 128 1 323 1 279 1 155 1 132 1 15 1 310 2 38 1 134 1 259 1 260 3 312 1 288 1 214 1 289 1 215 1 18 1 216 1 42 5 136 3 192 4 20 1 116 2 332 2 88 2 66 1 139 1 45 1 222 1 250 1 202 3 
320 1 149 4 125 1 234 1 32 1 7 2 126 1 8 1 182 4 128 1 323 1 279 1 132 1 56 1 15 1 283 2 310 2 260 2 134 1 259 1 312 1 288 1 289 1 215 1 214 1 136 2 18 1 42 4 192 4 20 1 332 2 88 2 66 1 357 1 139 1 45 1 222 1 249 2 202 2 
28 8 168 1 171 3 169 7 273 1 175 1 210 2 179 1 344 1 97 2 154 1 11 2 279 1 306 1 112 2 14 1 348 1 36 8 239 1 241 1 309 2 311 1 99 4 41 2 290 1 162 1 190 1 193 2 66 1 67 1 101 1 248 2 45 1 165 2 166 1 270 2 297 2 144 1 72 2 
168 2 104 1 105 1 29 1 47 1 31 1 5 1 235 1 77 1 210 1 341 1 151 1 324 1 11 1 279 1 348 1 239 1 309 1 159 1 99 2 329 1 66 1 67 1 248 1 45 1 141 1 270 1 297 1 72 3 
0 2 168 3 105 1 29 2 51 1 235 1 77 1 210 1 341 1 343 1 11 1 57 1 309 1 159 2 99 2 329 1 315 1 353 1 354 1 67 3 248 1 199 1 270 1 297 1 166 1 72 6 
0 1 204 1 168 6 123 1 105 11 29 1 232 1 47 2 31 1 77 11 235 4 210 2 341 1 151 1 154 1 11 2 309 2 311 1 159 2 99 4 329 2 67 8 89 1 23 3 248 1 198 1 90 3 227 1 141 2 270 2 297 2 338 1 72 14 
0 1 28 1 168 1 171 1 169 1 3 1 235 1 6 1 210 1 151 1 180 1 97 1 154 1 11 1 279 2 112 1 36 1 348 1 239 1 133 1 309 1 311 1 99 2 290 1 193 1 293 1 100 1 245 1 66 1 67 1 68 1 248 1 165 1 45 2 46 1 297 1 270 1 72 2 
0 2 168 10 169 3 171 2 321 2 47 2 51 1 3 2 236 1 235 7 180 1 97 2 11 3 279 3 239 1 57 1 99 6 290 1 329 3 293 2 193 2 245 2 66 1 67 10 68 2 248 3 296 2 199 1 141 2 297 3 337 2 338 4 72 20 28 3 105 7 29 4 31 2 77 7 255 1 210 3 109 1 341 3 151 1 343 1 154 1 306 1 112 2 36 3 348 1 37 2 309 3 311 1 159 8 353 1 354 1 165 1 45 3 270 3 92 2 
99 2 105 1 329 1 47 1 235 1 77 1 210 1 67 2 248 1 11 1 346 1 166 1 297 1 270 1 338 1 72 2 309 1 159 1 
99 2 168 2 242 1 105 1 29 1 31 1 235 1 77 1 210 1 341 1 248 1 11 1 166 1 297 1 270 1 72 2 309 1 159 1 
168 2 105 2 29 1 47 1 31 1 77 2 235 2 210 1 341 1 11 1 309 1 159 2 99 2 329 1 67 2 248 1 141 1 270 1 297 1 166 1 338 1 72 4 
99 2 105 1 329 1 190 1 47 1 235 1 77 1 210 1 67 2 248 1 11 1 346 1 297 1 270 1 338 1 72 2 309 1 159 1 
99 2 168 2 242 1 105 1 29 1 190 1 31 1 235 1 77 1 210 1 341 1 248 1 11 1 297 1 270 1 72 2 309 1 159 1 
168 2 105 2 29 1 47 1 31 1 77 2 235 2 210 1 341 1 11 1 309 1 159 2 99 2 329 1 190 1 67 2 248 1 141 1 270 1 297 1 338 1 72 4 
168 2 105 2 29 1 47 1 31 1 77 2 235 2 210 1 341 1 11 1 309 1 159 2 99 2 329 1 67 2 248 1 141 1 270 1 297 1 338 1 72 4 
0 1 28 1 168 1 169 1 171 1 321 1 3 1 210 1 97 1 154 1 11 1 279 1 112 1 36 1 309 1 311 1 99 2 193 1 293 1 245 1 67 1 68 1 248 1 165 1 45 1 297 1 270 1 72 2 
0 1 28 1 168 1 169 1 171 1 210 1 97 1 154 1 11 1 279 1 13 1 112 1 36 1 285 1 309 1 311 1 99 2 193 1 245 1 67 1 68 1 267 1 248 1 165 1 45 1 297 1 270 1 72 2 
168 2 105 2 29 1 47 1 31 1 77 2 235 2 210 1 341 1 151 1 11 1 309 1 159 2 99 2 329 1 67 2 248 1 141 1 270 1 297 1 338 1 72 4 
168 2 28 1 169 1 171 1 105 2 29 1 47 1 321 1 31 1 3 1 235 2 77 2 210 1 341 1 97 1 11 1 279 1 112 1 14 1 36 1 309 1 159 2 99 2 329 1 293 1 193 1 245 1 67 2 68 1 248 1 296 1 45 1 141 1 297 1 270 1 338 1 72 4 
168 1 147 1 105 1 47 1 31 1 5 1 77 1 235 1 210 1 341 1 151 1 324 1 11 1 279 1 348 1 239 1 309 1 159 1 99 2 329 1 66 1 67 2 248 1 45 1 141 1 270 1 297 1 338 1 72 3 
204 1 168 10 29 3 47 3 31 3 108 1 210 2 341 3 11 2 157 1 159 6 160 1 99 4 85 1 243 1 329 3 87 1 67 9 120 2 23 2 69 1 198 1 90 1 141 3 270 2 297 2 338 3 271 1 26 2 72 19 
168 12 148 1 29 2 47 3 31 2 177 1 108 1 210 3 341 2 11 3 282 2 158 1 159 4 160 2 99 6 243 1 329 3 87 1 62 1 355 1 67 14 120 1 23 2 69 2 268 1 198 2 90 2 141 3 270 3 297 3 338 2 271 1 26 4 72 26 
168 21 124 1 47 4 51 1 177 1 11 3 282 1 57 1 99 6 243 1 329 5 62 1 67 20 23 4 69 2 198 3 141 4 199 1 297 3 338 4 72 41 26 4 204 1 148 1 29 4 31 4 108 1 210 3 341 5 343 1 158 1 159 8 160 1 85 1 87 1 353 1 354 1 355 1 120 1 268 1 90 3 270 3 271 1 
204 1 168 18 148 1 124 1 29 4 47 4 31 3 51 1 177 1 108 1 210 4 341 4 343 1 11 4 282 2 158 1 57 1 159 7 160 1 99 8 85 1 243 1 329 5 87 1 353 1 354 1 62 1 355 1 67 20 120 1 23 4 268 1 69 2 198 3 90 3 199 1 141 4 270 4 297 4 338 3 271 1 26 4 72 38 
204 2 168 25 148 1 29 7 47 7 31 7 51 1 177 1 108 1 210 2 341 8 343 1 11 2 282 1 158 1 57 1 159 14 160 1 99 4 243 1 329 8 87 1 353 1 354 1 62 1 355 1 67 27 120 1 23 4 268 1 69 1 198 2 90 4 199 1 227 2 141 7 270 2 297 2 338 7 271 1 26 4 72 52 
28 2 168 1 171 1 169 2 210 1 151 1 97 1 344 1 154 1 11 1 279 2 112 1 36 2 185 1 309 1 311 1 287 1 99 2 41 2 162 1 193 1 194 1 66 2 67 1 248 1 45 2 224 1 297 1 270 1 229 1 72 2 
28 1 171 1 169 1 193 1 118 1 101 1 97 1 35 1 165 1 112 1 36 1 228 1 144 1 349 1 
28 1 135 1 169 1 233 1 21 1 322 1 304 2 176 1 110 1 356 1 211 1 97 1 35 1 306 1 142 1 112 1 36 1 228 1 
28 2 135 1 169 2 233 1 21 1 322 1 304 2 176 1 110 1 356 1 211 1 97 1 35 1 306 1 142 1 112 1 14 1 36 2 228 1 
28 1 135 1 169 1 233 1 21 1 322 1 304 2 176 1 356 1 211 1 97 1 35 1 306 1 142 1 112 1 131 1 36 1 
78 1 
312 1 288 1 125 1 8 1 256 1 323 1 132 1 15 1 350 1 134 1 
288 5 329 2 47 2 264 1 31 2 33 5 64 5 127 5 341 2 141 2 132 5 318 2 92 1 283 10 134 5 
182 1 192 1 149 1 132 1 125 1 310 1 
28 4 171 1 169 4 301 1 149 4 254 1 49 1 8 1 52 1 53 1 97 1 182 3 323 2 112 1 36 4 15 2 310 2 134 2 312 2 288 2 137 2 192 3 193 1 246 2 101 1 24 1 165 2 144 1 203 2 
288 1 315 1 132 1 125 1 256 1 350 1 134 1 
319 1 149 1 125 1 33 1 8 1 182 1 323 1 132 2 15 1 283 1 310 1 134 1 312 1 288 1 216 1 192 1 116 1 
171 10 169 3 47 2 125 2 274 2 178 3 52 1 8 4 127 6 97 4 182 5 323 4 14 1 132 8 15 4 283 12 58 2 134 8 288 9 329 2 137 1 192 5 193 3 64 6 245 3 246 1 70 2 71 2 141 2 203 2 28 3 205 2 149 5 106 2 31 2 33 6 256 1 341 2 79 2 112 3 36 3 212 1 82 1 83 1 310 3 350 1 312 4 40 2 264 2 317 1 165 1 222 2 318 2 92 2 
47 2 149 1 31 2 125 2 33 3 177 1 8 2 127 5 341 2 182 1 323 2 347 1 132 5 15 2 283 6 158 1 310 1 134 5 312 2 288 8 329 2 137 1 192 1 264 1 62 1 64 5 355 1 23 1 268 1 198 1 90 1 141 2 359 1 318 2 203 1 
206 1 51 1 8 1 209 1 150 1 341 1 343 1 182 1 323 1 324 1 279 1 348 1 15 1 239 1 284 1 57 1 286 1 259 1 134 2 312 1 288 2 329 2 192 1 264 1 66 1 45 1 318 2 230 1 
0 1 168 1 28 1 169 1 171 1 321 1 3 1 210 1 97 1 324 2 11 1 279 3 112 1 36 1 348 2 239 2 284 1 309 1 311 1 99 2 293 1 193 1 245 1 66 2 68 1 248 1 165 1 45 3 270 1 297 1 200 1 72 1 
312 1 288 1 137 1 125 2 354 1 33 2 64 2 8 1 127 2 323 1 132 4 15 1 283 4 203 1 134 2 
217 1 103 1 
217 1 103 1 
217 1 103 1 
217 1 103 1 
217 1 103 1 
217 1 103 1 
217 1 103 1 
217 1 103 1 
333 1 43 1 
99 2 168 5 243 1 29 3 329 2 51 1 210 1 67 5 341 2 343 2 11 1 270 1 297 1 338 2 230 1 57 2 72 10 159 5 
99 2 243 1 329 1 47 1 210 1 67 2 11 1 297 1 270 1 338 1 72 2 159 1 
168 2 99 2 243 1 29 1 329 1 47 1 31 1 210 1 67 2 341 1 11 1 141 1 297 1 270 1 338 1 72 4 159 2 
168 2 99 6 85 1 243 1 29 1 210 3 67 1 343 1 11 3 140 1 297 3 270 3 282 1 338 1 72 3 57 1 159 2 
204 1 168 18 29 7 47 3 31 3 51 2 275 1 210 5 341 5 343 3 278 1 11 5 282 2 57 3 159 12 99 10 85 1 243 1 329 5 353 1 354 1 67 16 295 1 23 4 140 1 198 1 90 3 199 1 141 3 270 5 297 5 338 5 298 1 72 34 
168 4 99 4 329 1 29 2 353 1 354 1 51 1 210 2 67 4 341 1 343 1 11 2 199 1 297 2 270 2 282 1 338 1 72 8 57 1 159 3 
168 3 29 2 329 1 315 1 353 1 354 1 51 1 67 3 341 1 343 1 199 1 57 1 72 6 159 2 
168 2 99 2 29 1 329 1 47 1 31 1 210 1 67 2 341 1 11 1 141 1 297 1 270 1 338 1 298 1 72 4 159 2 
204 1 168 4 29 1 329 1 47 1 31 1 67 3 341 1 23 2 198 1 90 1 141 1 338 1 72 7 159 2 
204 1 168 12 29 5 47 2 31 2 51 1 210 2 341 3 343 2 11 2 282 2 57 2 159 9 99 4 329 3 353 1 354 1 67 11 89 1 23 2 140 1 90 2 199 1 141 2 227 1 297 2 270 2 338 4 72 23 
168 1 23 1 72 1 
90 1 72 1 67 1 
99 2 168 3 329 1 29 2 47 1 31 1 210 1 67 3 341 1 11 1 141 1 270 1 297 1 338 1 298 1 92 1 72 6 159 3 
168 6 29 1 47 2 31 2 177 1 210 1 341 2 11 1 158 1 159 2 99 2 243 1 329 2 62 1 67 6 355 1 23 1 268 1 198 1 90 1 141 2 270 1 297 1 338 1 72 12 
343 1 168 3 29 1 329 1 338 1 51 1 57 1 72 6 159 2 67 3 341 1 
168 2 99 2 29 1 353 1 210 1 67 1 343 1 11 1 140 1 199 1 297 1 270 1 282 1 338 1 57 1 72 3 159 2 
168 4 29 2 51 1 210 1 341 1 343 1 11 1 158 1 57 1 159 2 99 2 243 1 329 1 353 1 354 1 67 4 23 1 198 1 90 1 199 1 270 1 297 1 72 8 
204 1 168 5 29 2 47 1 51 1 210 2 341 1 343 1 11 2 158 1 57 1 159 3 99 4 243 1 329 2 353 1 354 1 67 6 23 2 198 1 90 1 199 1 141 1 270 2 297 2 338 1 298 1 72 11 
168 10 29 3 47 2 31 2 51 1 177 1 210 3 341 3 343 1 11 3 282 1 158 1 57 1 159 4 99 6 243 1 329 3 353 1 354 1 62 1 355 1 67 9 23 1 268 1 198 1 90 1 199 1 141 2 270 3 297 3 338 1 298 1 72 19 
168 7 29 3 47 2 31 1 51 1 177 1 210 3 341 2 343 1 11 3 282 1 158 1 57 1 159 5 99 6 243 1 329 3 353 1 354 1 62 1 67 10 355 1 23 1 268 1 198 1 90 1 199 1 141 2 270 3 297 3 338 2 298 1 72 17 
168 4 29 2 51 1 210 1 341 1 343 1 11 1 158 1 57 1 159 2 99 2 243 1 329 1 353 1 354 1 67 4 23 1 198 1 90 1 199 1 270 1 297 1 72 8 
168 6 29 1 47 2 31 2 177 1 210 1 341 2 11 1 158 1 159 2 99 2 243 1 329 2 62 1 67 6 355 1 23 1 268 1 198 1 90 1 141 2 270 1 297 1 338 1 72 12 
168 8 29 3 47 2 31 1 51 1 177 1 210 4 341 2 343 1 11 4 282 2 158 1 57 1 159 5 99 8 243 1 329 3 353 1 354 1 62 1 355 1 67 10 23 1 268 1 198 1 90 1 199 1 141 2 270 4 297 4 338 2 298 1 72 18 
168 7 29 3 47 3 31 2 177 1 210 4 341 2 11 4 282 2 158 1 159 6 99 8 243 1 85 1 329 3 62 1 355 1 67 9 23 1 268 1 198 1 90 1 141 3 270 4 297 4 338 3 72 16 
168 4 29 3 329 1 353 2 51 1 67 3 341 1 343 3 199 1 338 3 72 7 57 3 159 6 
168 8 29 3 47 2 31 1 51 1 177 1 210 4 341 2 343 1 11 4 282 2 158 1 57 1 159 4 99 8 243 1 85 1 329 3 353 1 354 1 62 1 355 1 67 10 23 1 268 1 198 1 90 1 199 1 141 2 270 4 297 4 338 1 72 18 
0 1 153 1 214 1 279 1 45 1 184 1 66 1 
0 1 214 1 66 1 294 1 153 1 22 1 257 1 122 1 336 1 45 1 279 1 184 1 
28 4 169 4 171 1 303 1 193 1 101 1 97 1 165 1 112 1 14 1 36 4 144 1 251 1 
28 2 169 2 171 1 193 1 95 1 245 1 246 1 255 1 10 1 97 2 121 1 325 1 112 1 36 2 
97 1 28 1 135 1 169 1 165 1 112 1 36 1 322 1 304 1 176 1 
28 2 169 2 171 1 193 1 344 1 97 1 306 1 112 1 14 1 36 2 185 1 
28 5 169 4 171 3 273 1 303 1 193 2 246 1 179 1 101 1 344 1 97 2 165 1 112 2 14 1 36 5 144 1 
28 5 169 4 171 3 273 1 303 1 193 2 246 1 101 1 277 1 344 1 97 2 165 1 112 2 14 1 36 5 144 1 
101 1 97 1 28 1 171 1 169 1 165 1 315 1 112 1 193 1 36 1 144 1 
0 1 28 1 171 1 169 1 290 1 193 1 3 1 245 1 66 1 68 1 97 1 45 2 279 2 165 1 112 1 348 1 36 1 239 1 
0 1 28 1 171 3 169 1 290 1 106 1 193 2 32 1 3 1 126 1 245 2 246 1 66 2 68 1 97 1 45 2 279 2 112 1 348 1 36 1 239 2 58 1 259 1 
0 1 28 2 169 2 171 3 106 1 32 1 126 1 97 1 279 2 112 1 36 2 348 1 239 2 58 1 259 1 290 1 193 2 245 2 246 1 66 2 68 1 267 1 45 2 251 1 
40 1 28 3 169 3 84 1 171 4 106 1 192 2 149 1 125 1 193 1 245 1 178 1 246 1 97 1 182 2 165 1 222 1 112 1 132 1 36 3 93 1 58 1 251 1 
40 1 28 3 169 3 171 4 106 1 192 2 149 1 125 1 193 1 274 1 245 1 178 1 246 1 97 1 182 2 165 1 222 1 112 1 132 1 36 3 58 1 251 1 
97 1 28 1 169 1 112 1 36 1 241 1 
27 1 28 7 41 1 169 6 171 3 273 1 175 1 193 2 245 1 179 1 344 1 97 3 121 1 165 2 306 1 325 1 112 2 14 1 36 7 83 1 241 1 
0 2 168 3 169 1 171 1 321 1 3 1 51 1 235 1 97 1 11 2 279 2 14 1 239 1 57 1 99 4 290 1 329 1 293 1 193 1 245 1 66 1 67 3 68 1 248 2 296 1 199 1 297 2 337 1 72 6 28 1 105 1 29 2 77 1 210 2 341 1 151 1 343 1 112 1 36 1 348 1 309 2 159 2 353 1 354 1 45 2 224 1 270 2 
28 1 169 1 171 2 205 1 149 2 125 1 274 1 178 1 256 1 8 2 52 1 182 3 323 2 183 1 132 1 36 1 15 2 310 1 350 1 134 1 312 2 40 1 288 1 192 3 70 1 165 1 222 1 71 1 
40 1 28 2 169 2 171 2 193 1 245 1 317 1 97 2 112 1 14 1 36 2 83 1 241 1 
0 1 28 1 171 1 169 1 290 1 193 1 245 1 66 1 68 1 97 1 267 1 45 2 279 2 165 1 112 1 348 1 36 1 239 1 
27 1 28 1 169 1 171 1 193 1 245 1 246 1 97 2 121 1 325 1 112 1 36 1 83 1 
0 1 220 1 146 1 30 1 91 1 
0 1 320 1 146 2 30 2 302 1 192 2 207 1 125 1 32 1 126 1 220 1 182 2 345 1 222 1 183 1 132 1 102 1 91 2 259 1 
287 1 220 1 279 1 45 1 30 1 91 1 229 1 194 1 66 1 
220 1 345 1 102 1 
342 1 80 1 351 1 60 1 86 1 314 1 226 1 269 1 
76 1 60 1 86 3 314 2 191 2 244 1 316 1 237 1 117 1 342 4 80 4 226 2 269 1 299 1 
261 1 351 1 60 1 86 1 314 1 191 1 276 1 342 2 80 2 226 1 269 1 94 1 
342 3 80 3 351 1 76 2 60 1 86 1 314 1 226 1 244 2 269 1 201 1 117 1 
213 1 152 2 17 1 86 2 
39 1 342 1 80 1 351 1 60 1 269 1 
342 2 221 1 80 2 351 1 60 1 86 1 314 1 226 1 191 1 269 1 
263 1 
342 1 80 1 351 1 60 1 86 1 314 1 226 1 269 1 
86 1 314 1 226 1 315 1 
342 1 80 1 60 1 86 1 314 1 226 1 269 1 
342 1 335 1 291 1 
351 1 60 1 76 2 86 1 314 1 244 1 117 1 119 1 342 3 80 3 226 1 269 1 
342 2 358 1 80 2 60 1 86 1 314 1 226 1 191 1 269 1 
187 1 342 1 211 1 80 1 351 1 60 1 86 1 269 1 322 1 304 1 299 1 
342 1 80 1 351 1 60 1 86 1 226 1 269 1 
342 1 80 1 351 1 60 1 314 1 226 2 269 1 
351 1 60 2 86 1 189 1 48 1 247 1 342 2 80 2 226 1 269 2 
351 1 60 1 328 1 86 2 314 1 191 2 316 1 342 3 80 3 221 1 226 1 269 1 299 1 
186 1 351 1 135 1 60 1 86 1 314 1 191 1 304 2 322 1 342 2 80 2 211 1 226 1 269 1 142 1 
351 1 60 2 86 2 314 1 191 2 316 1 342 4 181 1 80 4 358 1 226 1 269 2 299 1 
351 1 60 1 76 1 86 1 314 1 191 1 342 3 80 3 221 1 226 1 269 1 
86 1 316 1 237 1 299 1 
86 1 226 1 

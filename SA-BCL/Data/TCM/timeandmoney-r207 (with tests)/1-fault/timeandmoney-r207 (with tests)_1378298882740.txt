#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 75 1 143 2 207 1 299 1 324 1 325 1 233 2 306 1 307 1 215 6 119 3 260 1 352 9 124 9 376 1 198 2 101 2 63 2 83 1 130 2 335 4 167 1 340 1 170 1 290 2 245 5 24 1 
176 1 75 1 143 2 207 1 299 1 324 1 325 1 233 2 306 1 307 1 215 6 119 3 260 1 352 9 124 9 376 1 198 2 101 2 63 2 83 1 130 2 335 4 167 1 340 1 170 1 290 2 245 5 24 1 
176 1 75 1 143 2 207 1 299 1 324 1 325 1 233 2 306 1 307 1 215 7 119 4 260 1 352 10 124 10 376 1 198 2 101 2 63 2 83 1 130 2 335 5 167 1 340 1 170 1 290 2 245 6 24 1 
176 1 75 1 143 2 207 1 299 1 324 1 325 1 233 2 306 1 307 1 215 4 119 2 260 1 352 7 124 7 376 1 198 1 101 2 63 2 83 1 130 2 335 3 167 1 170 1 290 2 245 4 24 1 
352 4 124 4 143 1 198 2 101 1 207 1 63 1 299 1 324 1 335 2 233 1 306 1 340 1 215 3 119 1 245 3 290 1 260 1 
292 1 352 2 124 2 108 1 75 1 143 1 101 1 63 1 29 1 299 1 130 1 233 1 306 1 245 1 260 1 24 1 
352 3 124 3 376 1 101 2 299 1 130 1 335 1 233 2 306 1 215 1 119 1 245 2 260 1 
143 1 297 1 207 1 299 1 324 1 233 2 306 1 215 7 119 3 278 1 260 1 352 9 124 9 376 1 198 2 101 2 63 1 335 4 130 1 167 1 170 1 340 1 245 5 290 1 
143 1 297 1 207 1 299 1 324 1 233 2 306 1 215 7 119 3 278 1 260 1 352 9 124 9 376 1 198 2 101 2 63 1 335 4 130 1 167 1 170 1 340 1 245 5 290 1 
374 1 257 1 271 1 
374 1 295 1 339 2 
343 2 49 2 373 2 94 1 204 2 138 2 40 1 248 2 
343 2 90 1 142 1 49 2 224 2 106 1 228 1 94 1 366 1 181 2 110 1 112 1 111 1 113 1 213 2 302 1 31 2 56 1 117 1 326 2 327 1 328 1 235 1 153 1 35 1 373 2 332 1 82 1 62 1 40 1 243 1 219 1 23 1 103 1 204 3 138 2 248 3 
343 1 310 1 55 1 49 1 373 1 94 1 46 1 204 1 138 1 248 1 
343 1 158 1 374 1 161 1 126 1 323 1 7 1 55 1 316 1 257 1 139 1 204 1 154 1 248 1 
343 1 373 1 49 1 158 1 374 1 161 2 126 2 323 1 7 1 55 1 257 1 138 1 204 1 154 1 248 1 
0 1 256 1 161 1 126 1 275 1 
0 1 374 1 161 2 126 2 257 1 275 1 199 1 291 1 
161 1 126 1 275 1 
310 1 343 1 0 1 373 1 49 1 161 1 94 1 126 1 55 1 136 1 46 1 138 1 204 1 248 1 
374 1 
0 1 374 1 161 2 126 2 251 1 257 1 275 1 199 1 
177 2 0 2 374 1 161 5 126 5 197 1 199 1 275 2 208 1 165 1 210 1 76 1 288 1 9 1 186 2 308 1 22 1 257 1 381 2 
40 1 271 1 
343 2 373 1 49 1 144 1 40 2 34 1 204 2 138 1 248 2 
364 1 93 1 321 1 
90 1 224 1 106 1 366 1 181 1 110 1 112 1 111 1 3 1 40 1 302 1 213 1 117 1 153 1 204 1 248 1 
343 1 90 1 373 1 49 1 106 1 224 1 125 1 93 1 366 1 110 1 181 1 111 1 112 1 302 1 213 1 117 1 153 1 58 1 204 2 248 2 
343 5 373 4 49 4 16 1 125 2 240 1 100 1 144 1 40 1 316 1 58 1 204 5 138 1 248 5 
343 2 55 1 49 2 373 2 227 1 46 1 204 2 248 2 
343 3 49 3 373 3 125 1 138 1 204 3 40 1 248 3 
343 1 55 1 49 1 373 1 46 1 204 1 248 1 
343 1 55 1 49 1 373 1 34 1 144 1 204 1 138 1 248 1 
343 3 90 1 142 1 49 3 106 1 224 1 228 1 94 1 366 1 144 1 110 1 145 1 181 1 111 1 112 1 323 1 7 1 302 1 213 1 31 2 55 1 117 1 326 1 327 1 328 1 235 1 153 1 58 1 154 1 373 3 158 1 332 1 125 1 161 1 126 1 40 1 357 1 243 1 219 1 23 1 103 1 138 2 204 4 248 4 
343 2 49 1 373 1 125 1 316 1 100 1 204 2 40 1 248 2 
343 3 373 3 49 3 158 1 374 1 125 2 161 1 144 1 126 1 323 1 7 1 55 1 357 1 202 1 58 1 138 1 204 3 154 1 248 3 
343 2 364 1 373 2 49 2 125 1 93 1 144 1 138 1 204 2 248 2 
90 1 224 1 106 1 366 1 181 1 110 1 112 1 111 1 40 1 302 1 213 1 117 1 153 1 204 1 248 1 
90 1 224 1 106 1 285 1 366 1 181 1 110 1 40 1 302 1 213 1 117 1 153 1 204 1 140 1 248 1 
362 1 363 1 364 2 51 1 228 1 93 2 321 2 31 2 326 4 328 1 235 1 35 2 238 1 313 1 332 1 333 1 129 1 314 1 243 1 219 2 86 1 87 1 103 1 203 1 
343 1 55 1 158 1 49 1 373 1 227 1 204 1 248 1 
226 1 4 1 
226 1 4 1 
41 1 331 1 
41 1 331 1 
41 1 331 1 
226 1 194 1 4 1 
226 1 194 1 4 1 
105 1 226 1 4 1 
41 1 331 1 78 1 226 2 107 1 4 2 
226 1 194 1 4 1 
226 1 353 1 4 1 
226 1 353 1 4 1 
226 1 353 1 4 1 
343 2 141 1 49 2 25 1 105 1 226 1 206 1 231 1 184 1 4 1 95 1 118 1 59 1 330 1 373 2 312 1 161 1 284 1 126 1 40 1 317 1 205 1 204 2 248 2 
330 3 191 1 273 2 25 2 312 2 374 1 226 2 27 1 161 2 195 1 126 2 206 1 4 2 184 2 336 1 67 1 85 1 78 1 205 2 
143 1 63 1 290 1 
108 1 143 1 63 1 
346 1 282 1 108 1 63 3 290 2 156 1 
282 1 108 1 63 2 290 1 128 1 156 1 
282 1 108 1 63 2 290 1 156 2 
362 1 141 1 363 1 177 1 0 4 295 1 296 1 275 1 208 3 114 2 253 1 347 1 32 1 186 1 308 1 257 1 280 1 238 1 374 2 161 5 284 1 126 5 199 1 165 2 339 3 69 2 172 1 135 2 317 1 203 1 173 1 381 1 
362 3 363 3 177 2 0 7 295 3 296 1 180 1 275 6 208 8 210 1 114 6 211 1 147 5 256 5 347 3 32 2 186 2 308 1 257 1 238 3 374 5 17 1 284 4 161 9 163 1 126 9 127 1 199 1 165 6 270 1 339 9 172 2 135 6 203 3 381 2 
362 1 177 1 363 1 0 2 295 2 208 3 210 1 114 2 253 1 32 1 347 1 186 1 257 1 238 1 374 3 161 3 284 1 126 3 165 2 69 1 339 4 172 1 135 2 173 1 203 1 381 1 
362 2 177 1 363 2 0 3 295 3 208 5 114 4 210 1 253 1 32 1 347 2 186 1 257 1 238 2 374 4 17 1 161 4 284 2 126 4 127 1 165 4 270 1 339 7 69 2 172 1 135 4 173 1 203 2 381 1 
90 1 212 1 271 1 
90 1 20 1 
149 1 
90 1 117 1 153 1 
90 1 254 1 
90 1 153 1 
212 2 90 3 14 1 116 1 117 1 153 1 
362 1 363 1 313 3 344 1 200 1 242 1 267 2 287 1 219 3 326 7 86 2 44 1 89 1 35 4 309 1 221 1 222 1 
362 1 363 1 313 3 344 1 200 1 242 1 267 2 287 1 219 3 326 7 86 2 44 1 89 1 35 4 309 1 221 1 222 1 
362 1 363 1 313 3 344 1 200 1 242 1 267 2 338 1 287 1 219 3 326 7 86 2 44 1 89 1 35 4 309 1 221 1 222 1 
362 4 363 4 344 1 250 1 228 1 182 1 31 2 57 3 326 31 347 3 328 1 235 1 35 16 309 2 329 1 279 1 99 4 313 10 238 3 200 5 242 1 267 3 287 1 219 15 86 5 44 2 380 1 103 1 318 1 203 3 89 2 221 1 320 1 222 2 
362 1 363 1 313 4 344 1 228 2 365 1 200 1 242 1 267 2 31 4 287 1 68 1 219 4 326 9 86 3 44 1 103 2 328 2 89 1 235 2 35 5 309 1 320 1 222 1 
224 1 106 1 108 1 143 1 92 1 345 1 181 1 230 1 110 1 299 1 213 1 346 1 233 1 255 1 306 1 277 1 215 1 259 1 260 1 352 2 124 2 239 1 101 1 63 2 356 1 130 1 45 1 244 1 245 1 290 1 
224 1 106 1 108 1 143 1 92 1 345 1 181 1 230 1 110 1 322 1 346 1 213 1 233 1 255 1 306 1 215 2 260 1 352 3 216 1 124 3 239 1 101 1 63 2 356 1 130 1 45 1 70 1 244 1 245 1 290 1 
224 1 106 1 108 1 92 1 345 1 143 1 181 1 230 1 110 1 213 1 346 1 255 1 306 1 215 2 260 1 352 2 216 1 124 2 63 2 130 1 356 1 45 1 70 1 245 1 290 1 
90 1 224 1 106 1 92 2 110 1 181 1 322 1 213 1 302 1 233 1 234 1 255 2 96 1 153 1 370 1 61 1 352 1 124 1 162 1 101 1 356 2 130 2 220 1 
224 1 106 1 108 1 143 1 92 1 345 1 181 1 230 1 110 1 299 1 213 1 346 1 233 1 255 1 259 1 352 1 124 1 239 1 101 1 63 2 356 1 130 1 45 1 70 1 244 1 290 1 
19 1 
343 1 90 1 295 2 53 1 208 2 7 1 302 2 213 2 148 2 55 1 150 1 308 1 153 1 257 1 154 1 262 2 261 1 158 1 162 1 161 5 164 2 165 2 18 2 166 1 171 1 172 1 316 1 71 4 177 1 224 2 106 1 73 2 179 1 74 1 181 2 110 1 275 6 323 1 368 2 186 1 370 1 281 2 193 1 374 2 126 5 39 1 199 3 289 1 339 2 88 1 341 1 139 1 204 1 381 1 248 1 
261 1 343 1 281 1 193 1 158 1 179 1 161 3 126 3 251 1 199 1 275 2 323 1 7 1 166 1 55 1 150 1 316 1 71 2 139 1 204 1 154 1 248 1 
343 1 179 1 251 1 275 1 323 1 7 1 55 1 148 1 150 1 257 1 154 1 261 1 158 1 193 1 374 1 161 3 126 3 199 1 166 1 316 1 71 3 204 1 139 1 248 1 
343 1 179 1 251 1 275 2 323 1 7 1 55 1 148 1 150 1 257 1 154 1 261 1 158 1 193 1 281 1 374 1 161 3 126 3 199 1 18 1 166 1 316 1 71 3 204 1 139 1 248 1 
343 1 295 2 251 1 208 1 7 1 303 1 55 1 148 4 150 1 308 1 257 5 154 1 261 1 262 2 158 1 161 5 164 2 165 1 18 4 166 1 316 1 71 6 104 1 177 1 179 1 73 2 28 1 275 7 323 1 368 2 186 1 281 4 193 1 374 5 126 5 39 1 199 3 289 1 137 1 204 1 139 1 342 1 381 1 248 1 
343 1 295 2 208 1 7 1 55 1 148 2 150 1 308 1 257 1 154 1 261 1 262 2 158 1 161 4 164 2 165 1 18 2 166 1 316 1 71 4 177 1 179 1 73 2 275 4 323 1 368 2 186 1 193 1 281 2 374 2 126 4 39 1 199 2 289 1 339 2 88 1 204 1 139 1 381 1 248 1 
343 1 177 1 73 2 295 2 179 1 275 4 208 1 323 1 7 1 368 2 303 1 148 2 55 1 150 1 186 1 308 1 257 1 154 1 262 2 261 1 281 2 158 1 193 1 374 1 161 4 126 4 39 1 164 2 199 2 165 1 18 2 166 1 289 1 316 1 71 4 137 1 204 1 139 1 381 1 342 1 248 1 
343 1 177 1 73 2 295 2 179 1 275 4 208 1 323 1 7 1 368 2 303 1 148 2 55 1 150 1 186 1 308 1 257 1 154 1 262 2 261 1 281 2 158 1 193 1 374 1 161 4 126 4 39 1 164 2 199 2 165 1 18 2 166 1 289 1 316 1 71 4 137 1 204 1 139 1 381 1 342 1 248 1 
343 1 177 1 225 2 179 1 1 1 275 4 208 1 323 1 7 1 368 2 303 1 148 2 55 1 150 1 186 1 308 1 257 1 371 2 237 1 154 1 261 1 281 2 158 1 193 1 374 1 161 4 126 4 39 1 164 2 199 2 165 1 18 2 166 1 339 2 316 1 71 4 204 1 139 1 381 1 361 1 248 1 
343 1 177 1 104 1 73 2 295 2 179 1 275 5 208 1 323 1 7 1 368 2 303 1 55 1 148 3 186 1 150 1 308 1 257 1 154 1 262 2 261 1 158 1 193 1 281 3 374 1 161 4 126 4 39 1 164 2 199 2 165 1 18 3 166 1 289 1 316 1 71 5 137 1 204 1 139 1 381 1 342 1 248 1 
343 1 177 1 104 1 73 2 295 2 179 1 275 5 208 1 323 1 7 1 368 2 303 1 55 1 148 3 186 1 150 1 308 1 257 1 154 1 262 2 261 1 158 1 193 1 281 3 374 1 161 4 126 4 39 1 164 2 199 2 165 1 18 3 166 1 289 1 316 1 71 5 137 1 204 1 139 1 381 1 342 1 248 1 
343 1 208 1 7 1 55 1 148 2 150 1 308 1 257 1 154 1 261 1 158 1 161 4 164 2 165 1 18 2 166 1 316 1 71 4 361 1 177 1 225 2 179 1 275 4 323 1 368 2 186 1 371 2 193 1 281 2 374 1 126 4 39 1 199 2 339 2 88 1 204 1 139 1 381 1 248 1 
362 1 364 1 363 1 344 1 93 1 228 1 321 1 31 2 326 6 328 1 235 1 35 3 313 2 332 1 333 1 242 1 267 1 40 2 287 1 243 1 219 3 86 2 103 1 44 1 89 1 271 1 
362 1 363 2 364 4 91 1 228 2 93 11 321 11 31 4 56 1 326 14 57 3 347 2 328 2 235 2 35 8 189 1 157 1 313 2 99 3 238 1 332 1 375 1 200 1 40 1 243 2 219 6 86 1 23 1 103 2 380 1 318 1 203 2 319 1 
343 1 90 1 364 1 49 1 106 1 224 1 228 1 366 1 110 1 181 1 111 1 112 1 3 1 209 1 213 1 302 1 31 2 56 1 117 1 326 2 328 1 153 1 235 1 58 1 35 1 189 1 373 1 332 1 125 1 334 1 40 1 286 1 243 1 219 1 103 1 23 1 204 2 248 2 
343 1 90 2 142 2 49 1 344 1 93 7 52 2 300 1 213 3 302 1 56 1 10 2 347 2 153 2 58 1 351 2 15 1 313 8 265 1 267 1 219 10 23 1 103 3 70 1 362 3 364 7 363 3 224 3 106 2 228 3 366 2 181 3 110 2 321 7 112 2 111 2 232 2 31 6 117 2 326 20 328 3 235 3 35 10 189 1 373 1 238 2 125 1 332 3 200 4 242 1 40 2 287 1 243 3 86 4 44 1 203 2 89 1 204 3 248 3 
343 1 90 3 49 1 106 2 224 7 228 2 274 1 110 2 181 8 113 2 213 8 302 2 31 4 56 1 348 1 277 1 326 2 328 2 235 2 153 2 35 1 370 1 192 1 373 1 36 1 125 1 332 2 162 1 38 1 378 1 333 1 131 1 243 2 219 1 103 2 23 1 70 1 204 1 248 1 
343 1 362 1 364 1 363 1 49 1 93 1 228 1 144 1 321 1 31 2 347 1 326 3 328 1 235 1 35 1 189 1 372 1 373 1 313 1 238 1 332 1 243 1 219 2 86 1 103 1 203 1 138 1 204 1 248 1 
364 1 363 1 313 1 332 1 93 1 228 1 333 1 321 1 200 1 314 1 31 2 243 1 326 2 103 1 328 1 203 1 235 1 35 2 
362 1 364 1 313 1 238 1 332 1 93 1 228 1 51 1 333 1 321 1 31 2 243 1 326 2 219 2 86 1 103 1 328 1 235 1 
362 1 363 1 364 2 228 1 93 2 321 2 31 2 347 1 326 4 328 1 235 1 35 2 313 2 238 1 332 1 333 1 200 1 243 1 219 2 86 1 103 1 203 1 
364 1 363 1 313 1 36 1 332 1 93 1 228 1 321 1 200 1 314 1 31 2 243 1 326 2 103 1 328 1 203 1 235 1 35 2 
362 1 364 1 313 1 36 1 238 1 332 1 93 1 228 1 51 1 321 1 31 2 243 1 326 2 219 2 86 1 103 1 328 1 235 1 
362 1 363 1 364 2 228 1 93 2 321 2 31 2 347 1 326 4 328 1 235 1 35 2 36 1 313 2 238 1 332 1 200 1 243 1 219 2 86 1 103 1 203 1 
362 1 364 2 363 1 238 1 313 2 332 1 93 2 228 1 321 2 200 1 31 2 243 1 219 2 347 1 326 4 86 1 103 1 328 1 203 1 235 1 35 2 
90 1 142 1 106 1 224 1 228 1 366 1 110 1 181 1 111 1 112 1 213 1 302 1 31 2 56 1 117 1 326 2 328 1 153 1 235 1 35 1 332 1 40 1 243 1 219 1 103 1 23 1 204 1 248 1 
90 1 106 1 224 1 228 1 366 1 110 1 181 1 213 1 302 1 31 2 56 1 117 1 326 2 328 1 153 1 235 1 35 1 236 1 332 1 285 1 40 1 243 1 219 1 103 1 23 1 204 1 140 1 248 1 
362 1 363 1 364 2 228 1 93 2 321 2 31 2 347 1 326 4 328 1 235 1 35 2 189 1 313 2 238 1 332 1 200 1 243 1 219 2 86 1 103 1 203 1 
362 1 90 1 364 2 363 1 142 1 106 1 224 1 93 2 228 1 366 1 321 2 110 1 181 1 111 1 112 1 213 1 31 2 117 1 326 4 10 1 277 1 347 1 328 1 153 1 235 1 35 2 238 1 313 2 332 1 200 1 243 1 219 2 86 1 103 1 203 1 204 1 248 1 
343 1 362 1 363 1 364 1 49 1 228 1 93 1 144 1 321 1 31 2 347 1 326 3 328 1 235 1 35 2 189 1 120 1 373 1 238 1 313 1 332 1 200 1 243 1 219 1 103 1 203 1 138 1 204 1 248 1 
362 3 363 3 26 1 109 2 228 2 31 4 326 19 57 1 347 3 187 1 328 2 235 2 35 9 258 1 13 1 99 2 313 6 238 3 263 1 264 1 355 2 200 3 43 1 68 1 219 10 86 3 103 2 380 1 318 1 203 3 
48 1 362 2 363 3 294 1 26 1 109 4 228 3 31 6 304 1 326 26 57 2 347 3 187 1 328 3 235 3 35 14 350 1 258 1 313 4 99 2 238 2 263 2 355 1 200 2 43 2 68 1 219 12 21 1 86 2 103 3 318 2 203 3 320 2 175 1 
48 1 362 5 363 5 294 1 26 1 344 1 109 4 228 3 31 6 304 1 326 41 57 3 347 4 187 1 328 3 235 3 35 20 350 1 258 1 13 1 121 1 99 4 313 8 238 4 263 1 355 1 200 4 267 1 242 1 287 1 43 2 68 1 219 21 21 1 86 4 44 1 103 3 380 1 318 3 203 4 89 1 320 1 175 1 
48 1 362 4 363 5 294 1 26 1 344 1 109 4 228 4 31 8 304 1 326 38 57 3 347 4 187 1 328 4 235 4 35 20 350 1 258 1 13 1 121 1 99 4 313 7 238 3 263 1 355 1 200 3 267 1 242 1 287 1 43 2 68 1 219 18 21 1 86 4 44 1 103 4 380 1 318 3 203 4 89 1 320 2 175 1 
48 1 362 8 363 8 294 1 91 2 26 1 344 1 109 4 228 2 31 4 304 1 326 52 57 4 347 7 187 1 328 2 235 2 35 27 350 1 258 1 99 4 313 14 238 7 263 1 355 1 200 7 267 1 242 1 287 1 43 1 68 1 219 25 21 1 86 7 44 1 103 2 380 2 318 2 203 7 89 1 320 1 175 1 
67 1 25 1 312 1 78 1 226 1 195 1 174 1 184 1 4 1 205 1 
105 1 95 1 
80 1 25 1 312 1 226 1 152 1 298 1 184 1 4 1 205 1 
146 1 194 1 
6 1 107 1 353 1 
330 2 191 1 273 1 25 1 312 1 374 1 226 1 27 1 161 1 195 1 206 1 126 1 4 1 184 1 336 1 67 1 78 1 205 1 
330 2 191 1 273 1 25 1 312 1 374 1 226 1 27 1 161 1 195 1 206 1 126 1 4 1 184 1 336 1 67 1 78 1 205 1 
330 2 191 1 273 1 25 1 312 1 374 1 226 1 27 1 161 1 195 1 206 1 126 1 4 1 184 1 336 1 67 1 78 1 205 1 
146 1 107 1 194 1 
146 1 107 1 194 1 
6 1 353 1 
6 1 107 1 353 1 
231 1 59 1 
343 2 273 1 141 1 0 1 25 1 105 1 49 2 226 1 231 1 184 1 4 1 95 1 118 1 59 1 191 1 330 1 122 1 373 2 312 1 161 1 284 1 126 1 40 1 317 1 204 2 205 1 248 2 
343 2 90 1 50 1 106 1 224 2 228 1 110 1 181 2 113 2 213 2 31 2 56 1 305 1 326 2 328 1 153 1 235 1 35 1 189 1 12 1 311 1 332 1 159 1 378 1 131 1 243 1 219 1 103 1 23 1 204 2 248 2 
106 1 224 2 108 1 143 1 92 1 345 1 110 1 181 2 230 1 63 2 346 1 213 2 218 1 277 1 360 1 70 1 244 1 290 1 60 1 
293 1 224 1 106 1 108 1 143 1 92 1 345 1 181 1 230 1 110 1 63 2 346 1 213 1 360 1 70 1 244 1 290 1 
90 1 106 1 224 1 162 1 92 1 110 1 181 1 302 1 213 1 234 1 214 1 218 1 153 1 370 1 
224 1 106 1 108 1 143 1 92 1 345 1 110 1 181 1 230 1 63 2 346 1 213 1 218 1 360 1 70 1 244 1 290 1 60 1 
115 1 
288 1 374 1 22 1 257 1 208 1 165 1 271 1 
177 1 295 1 73 1 275 1 208 1 186 1 308 1 257 1 262 1 374 2 161 1 126 1 199 1 165 1 289 1 339 1 381 1 
90 10 295 6 53 1 208 9 7 2 302 1 213 3 8 2 212 2 254 2 347 2 308 4 153 3 257 2 155 1 14 1 161 5 65 1 165 8 102 2 315 1 168 2 172 2 20 3 22 1 223 2 362 2 177 4 363 2 106 3 224 3 110 4 181 3 275 5 183 2 114 6 232 2 117 3 277 1 186 4 238 2 374 8 126 5 199 3 379 2 132 1 42 1 288 1 339 12 201 2 135 6 203 2 381 4 47 2 
48 1 362 2 177 2 363 2 294 1 295 3 53 1 275 1 183 2 208 8 114 5 304 1 57 1 347 2 186 2 308 2 257 2 350 1 99 1 238 2 374 5 161 1 126 1 199 1 165 5 66 1 339 6 172 1 201 1 135 5 318 1 203 2 246 1 381 2 175 1 
343 1 362 1 177 1 363 2 49 1 94 1 183 2 208 2 55 1 186 1 308 1 310 1 373 1 283 1 161 1 126 1 242 1 165 2 201 1 44 1 136 1 89 1 46 1 204 1 138 1 381 1 342 1 248 1 
177 1 374 1 208 1 165 1 288 1 186 1 308 1 22 1 257 1 381 1 
362 2 363 2 238 2 374 5 295 5 183 2 208 5 165 5 114 5 232 1 347 2 339 10 201 1 135 5 203 2 
374 1 161 1 126 1 257 1 275 1 199 1 
90 1 177 2 106 1 224 4 110 1 181 4 275 4 53 2 208 2 210 1 301 1 54 1 213 4 302 2 186 2 308 1 153 1 370 1 155 2 161 3 162 1 126 3 199 2 165 2 315 1 171 1 172 2 341 1 381 2 
343 2 90 1 142 1 49 2 224 1 106 1 228 1 94 1 366 1 181 1 110 1 112 1 111 1 213 1 302 1 31 2 117 1 326 1 327 1 328 1 235 1 153 1 373 2 332 1 40 1 243 1 219 1 23 1 103 1 204 3 138 2 248 3 
177 1 374 4 295 2 53 1 208 1 267 1 114 2 165 2 339 4 186 1 172 1 308 1 135 2 257 2 381 1 
312 1 64 1 184 1 
312 1 64 1 184 1 
67 1 249 1 312 1 231 1 184 1 
312 1 64 1 184 1 
269 1 312 1 184 1 
269 1 312 1 184 1 
269 1 312 1 184 1 
312 1 184 1 
226 1 4 1 
362 1 363 1 313 3 344 1 228 2 200 1 267 1 242 1 31 4 287 1 219 4 326 8 86 2 103 2 328 2 44 1 235 2 89 1 35 4 320 1 
362 1 363 1 313 2 344 1 267 1 242 1 287 1 219 3 326 6 86 2 44 1 89 1 35 3 271 1 
362 1 190 1 363 1 238 1 313 2 228 1 200 1 31 2 219 2 347 1 326 4 86 1 103 1 328 1 203 1 235 1 35 2 
362 1 363 1 238 1 99 2 313 2 200 1 219 4 326 7 57 1 347 1 86 1 380 1 318 1 203 1 35 3 
362 3 363 3 91 1 344 1 228 2 31 4 347 2 57 2 326 23 328 2 235 2 35 11 313 9 99 2 238 2 200 4 267 1 242 1 287 1 219 12 86 5 134 1 44 2 380 1 103 2 203 2 89 2 319 1 320 2 
99 1 326 1 219 1 
326 1 57 1 35 1 
190 1 362 1 363 1 313 3 238 1 228 1 200 1 232 1 31 2 219 3 326 6 347 1 86 2 328 1 103 1 203 1 235 1 35 3 
48 1 362 2 363 2 294 1 228 1 31 2 304 1 57 1 326 12 347 2 328 1 235 1 35 6 350 1 99 1 238 2 313 2 200 1 68 1 219 6 86 1 103 1 318 1 203 2 175 1 
362 1 363 1 313 2 200 1 242 1 326 6 219 3 86 1 44 1 89 1 35 3 
313 2 344 1 228 1 200 1 31 2 287 1 219 2 326 3 86 1 134 1 44 1 103 1 328 1 89 1 235 1 35 1 320 1 
362 2 363 2 313 5 283 1 228 1 200 2 242 1 31 2 68 1 326 10 219 5 86 3 328 1 103 1 44 2 235 1 89 2 35 5 
363 1 313 1 228 1 200 1 31 2 68 1 326 2 103 1 328 1 203 1 235 1 35 2 
362 1 363 1 238 1 313 2 228 1 200 1 31 2 68 1 219 2 347 1 326 4 86 1 103 1 328 1 203 1 235 1 35 2 
13 1 313 2 228 3 200 1 31 6 68 1 219 2 326 3 86 1 134 1 103 3 328 3 44 1 235 3 89 1 35 1 320 1 
362 5 363 5 344 1 250 1 228 5 182 1 31 10 326 34 57 3 347 3 328 5 235 5 35 16 329 1 13 1 190 1 99 4 313 12 238 3 200 5 267 1 242 2 287 1 68 1 219 18 86 7 134 1 44 3 103 5 380 1 318 1 203 3 89 3 320 2 
48 1 362 1 363 1 344 1 228 1 31 2 57 1 326 8 328 1 235 1 35 4 99 1 313 2 267 1 242 1 287 1 68 1 219 4 86 2 103 1 44 1 318 1 89 1 
48 1 362 1 363 2 344 1 228 2 31 4 326 11 57 1 347 1 328 2 235 2 35 6 190 1 99 2 313 3 200 1 267 1 242 1 287 1 68 1 219 5 86 2 44 1 103 2 380 1 318 1 203 1 89 1 
48 1 362 3 363 3 294 1 344 1 228 3 31 6 304 1 57 1 326 19 347 2 328 3 235 3 35 9 350 1 190 1 99 1 238 2 313 4 200 1 267 1 242 1 287 1 68 1 219 10 86 3 44 1 103 3 318 1 203 2 89 1 175 1 320 1 
48 1 362 2 363 3 294 1 344 1 228 3 31 6 304 1 57 1 326 17 347 2 328 3 235 3 35 10 350 1 190 1 99 1 238 1 313 5 200 2 267 1 242 1 287 1 68 1 219 7 86 3 44 1 103 3 318 1 203 2 89 1 320 1 175 1 
48 1 362 1 363 1 344 1 228 1 31 2 57 1 326 8 328 1 235 1 35 4 99 1 313 2 267 1 242 1 287 1 68 1 219 4 86 2 103 1 44 1 318 1 89 1 
48 1 362 2 363 2 294 1 228 1 31 2 304 1 57 1 326 12 347 2 328 1 235 1 35 6 350 1 99 1 238 2 313 2 200 1 68 1 219 6 86 1 103 1 318 1 203 2 175 1 
48 1 362 2 363 3 294 1 344 1 228 4 31 8 304 1 326 18 57 1 347 2 328 4 235 4 35 10 350 1 190 1 99 1 238 1 313 5 200 2 267 1 242 1 287 1 68 1 219 8 86 3 44 1 103 4 318 1 203 2 89 1 175 1 320 2 
48 1 362 2 363 3 294 1 228 4 31 8 304 1 326 16 57 1 347 3 328 4 235 4 35 9 350 1 13 1 99 1 238 2 313 6 200 3 68 1 219 7 86 3 103 4 318 1 203 3 175 1 320 2 
362 1 363 1 313 6 344 1 200 3 242 1 287 2 219 4 326 7 86 3 44 3 89 3 35 3 
48 1 362 2 363 3 294 1 344 1 228 4 31 8 304 1 326 18 57 1 347 2 328 4 235 4 35 10 350 1 13 1 99 1 238 1 313 4 200 1 267 1 242 1 287 1 68 1 219 8 86 3 44 1 103 4 318 1 203 2 89 1 175 1 320 2 
343 1 133 1 316 1 100 1 204 1 40 1 248 1 
343 1 123 1 100 1 40 1 185 1 133 1 358 1 316 1 97 1 188 1 204 1 248 1 
90 1 213 1 302 1 106 1 224 1 162 1 110 1 181 1 153 1 370 1 271 1 
343 1 90 1 373 1 49 1 224 1 106 1 125 1 366 1 110 1 181 1 111 1 40 1 302 1 213 1 117 1 153 1 204 2 248 2 
343 2 90 3 158 1 373 1 49 2 224 1 106 1 125 1 366 1 110 1 181 1 111 1 379 1 323 1 40 1 213 1 55 1 254 1 117 2 153 2 204 2 248 2 155 1 
343 2 90 3 158 1 373 1 49 2 224 2 106 1 125 1 366 1 110 1 181 2 379 1 323 1 40 1 213 2 84 1 55 1 254 1 117 2 153 2 204 2 140 1 248 2 155 1 
90 4 224 3 106 1 374 1 161 2 377 1 126 2 110 1 181 3 275 1 379 1 7 1 302 1 213 3 212 1 84 1 254 1 117 1 20 1 153 1 257 1 272 1 155 1 
223 1 90 4 224 3 106 1 374 1 161 2 126 2 110 1 181 3 275 1 379 1 7 1 302 1 213 3 212 1 84 1 254 1 117 1 20 1 153 1 257 1 155 1 
213 1 106 1 224 1 110 1 181 1 274 1 
14 1 90 3 192 1 224 6 106 2 38 1 378 1 229 1 274 1 181 7 110 3 113 1 337 1 302 2 213 7 30 1 117 1 348 1 277 1 70 1 153 2 
343 1 90 1 142 1 49 1 50 1 344 1 93 1 213 1 10 1 153 1 351 1 313 2 267 1 219 3 103 2 362 1 364 1 363 1 224 1 106 1 228 2 366 1 181 1 110 1 321 1 111 1 112 1 31 4 117 1 277 1 326 6 328 2 235 2 35 3 189 1 373 1 125 1 332 2 242 1 40 2 287 1 243 2 86 2 44 1 89 1 204 2 248 2 
223 1 90 2 177 2 0 1 224 1 181 1 275 2 208 1 7 1 302 1 213 1 8 1 212 1 186 2 308 2 257 1 374 1 161 3 126 3 199 1 165 1 315 1 288 1 168 1 20 1 22 1 381 2 47 1 
14 1 90 2 224 2 106 1 274 1 181 2 110 2 212 1 213 2 42 1 117 1 277 1 153 1 
90 1 224 4 106 1 162 1 110 1 181 4 302 1 213 4 84 1 277 1 153 1 370 1 247 1 
90 1 224 2 106 1 229 1 181 2 110 2 265 1 354 1 5 1 337 1 213 2 117 1 153 1 155 1 
213 1 302 1 106 1 224 1 108 1 143 1 345 1 110 1 181 1 63 1 
90 1 213 2 106 1 224 2 277 1 378 1 110 1 181 2 153 1 70 1 12 1 
90 3 224 4 106 2 162 1 38 1 378 1 181 5 110 2 302 1 213 5 277 1 348 1 153 2 370 1 247 1 155 1 
90 3 224 4 37 1 106 2 162 1 38 1 378 1 181 5 110 2 302 1 213 5 277 1 153 2 370 1 247 1 155 1 
343 1 90 1 373 1 49 1 224 1 106 1 125 1 366 1 110 1 181 1 40 1 302 1 213 1 117 1 153 1 204 2 140 1 248 2 
14 1 90 1 224 1 106 1 229 1 181 1 110 2 337 1 213 1 30 1 117 1 153 1 155 1 
178 1 72 1 151 1 241 1 40 1 
98 1 158 1 178 1 0 1 72 2 374 1 161 2 126 2 241 2 323 1 40 1 268 1 7 1 55 1 77 1 357 1 151 2 257 1 154 1 
343 1 311 1 178 1 72 1 159 1 305 1 151 1 204 1 248 1 
178 1 77 1 268 1 
306 1 245 1 260 1 271 1 
352 1 233 1 124 1 306 1 101 1 245 1 260 1 
352 1 255 1 130 1 
352 2 124 2 217 1 101 1 367 1 2 1 299 1 233 1 306 1 359 1 245 1 24 1 260 1 
352 2 233 1 124 2 306 1 215 1 198 1 101 1 245 1 260 1 
352 1 233 1 124 1 143 1 207 1 101 1 63 1 290 1 245 1 335 1 299 1 
352 1 233 1 124 1 306 1 101 1 245 1 299 1 
352 1 233 1 124 1 306 2 101 1 260 1 299 1 
352 2 124 2 196 1 101 2 276 1 299 1 233 2 306 1 11 1 245 1 
352 3 124 3 101 1 299 1 335 1 233 1 167 1 306 1 170 1 215 2 119 1 245 2 260 1 
352 2 124 2 108 1 143 1 101 1 63 2 299 1 346 1 233 1 306 1 349 1 215 1 245 1 290 1 260 1 
352 4 124 4 198 1 101 2 299 1 335 1 233 2 306 1 340 1 215 2 119 1 245 2 260 1 
352 1 233 1 124 1 306 1 101 1 245 1 260 1 299 1 
352 4 124 4 217 1 101 1 367 1 2 1 335 1 233 1 306 2 215 2 119 1 245 3 24 1 260 2 
352 2 124 2 101 1 299 1 252 1 233 1 306 1 169 1 215 1 245 1 278 1 260 1 
352 3 124 3 101 1 367 1 2 2 266 1 299 1 233 1 306 1 245 1 24 2 260 1 
160 1 33 1 79 2 245 2 
352 1 233 1 124 1 369 1 101 1 299 1 
352 2 233 1 124 2 306 1 170 1 215 1 101 1 245 1 260 1 299 1 
81 1 
352 1 233 1 124 1 306 1 101 1 245 1 260 1 299 1 
352 3 124 3 101 1 299 1 233 1 306 1 170 1 215 1 245 1 24 1 260 1 
217 1 119 1 245 1 335 1 
306 1 245 1 

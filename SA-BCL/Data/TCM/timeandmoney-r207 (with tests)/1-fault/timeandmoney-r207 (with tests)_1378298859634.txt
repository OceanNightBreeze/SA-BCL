#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 351 109 271 37 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 351 109 271 37 171 131 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 351 109 271 37 171 131 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 351 109 271 37 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 351 109 271 37 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 351 109 271 37 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
134 3 2 2 3 1 287 5 187 9 341 1 6 1 67 1 66 1 166 2 7 2 51 4 342 2 52 1 92 1 97 1 99 1 347 1 56 1 282 2 36 1 329 2 211 1 307 1 285 2 104 1 334 9 185 6 
134 3 2 2 3 1 287 5 187 9 341 1 6 1 67 1 66 1 166 2 7 2 51 4 342 2 52 1 92 1 97 1 99 1 347 1 282 2 56 1 36 1 329 2 211 1 307 1 285 2 104 1 334 9 185 6 
134 4 2 2 3 1 287 6 187 10 341 1 6 1 67 1 66 1 166 2 7 2 51 5 342 2 52 1 92 1 97 1 99 1 347 1 282 2 56 1 36 1 329 2 211 1 307 1 285 2 104 1 334 10 185 7 
134 2 2 2 3 1 287 4 187 7 341 1 6 1 66 1 166 2 7 2 51 3 342 2 52 1 92 1 97 1 99 1 347 1 282 2 56 1 36 1 329 2 211 1 307 1 285 1 104 1 334 7 185 4 
134 1 2 1 287 3 97 1 187 4 99 1 347 1 282 1 36 1 329 1 67 1 166 1 7 1 285 2 104 1 51 2 334 4 185 3 
2 1 287 1 187 2 99 1 138 1 236 1 207 1 36 1 341 1 329 1 166 1 7 1 104 1 52 1 342 1 334 2 
134 1 2 2 287 2 187 3 99 1 36 1 6 1 166 2 104 1 51 1 342 1 334 3 185 1 
134 3 2 2 287 5 97 1 187 9 99 1 347 1 282 1 4 1 36 1 6 1 329 1 67 1 211 1 166 2 374 1 7 1 307 1 285 2 104 1 51 4 342 1 334 9 185 7 
134 3 2 2 287 5 97 1 187 9 99 1 347 1 282 1 4 1 36 1 6 1 329 1 67 1 211 1 166 2 374 1 7 1 307 1 285 2 104 1 51 4 342 1 334 9 185 7 
257 1 33 1 123 1 
142 2 257 1 63 1 
249 2 227 1 244 2 323 1 366 2 193 2 81 2 35 2 
270 1 310 1 43 1 244 3 84 1 186 1 224 1 274 1 48 1 357 1 249 2 227 1 113 1 168 1 143 1 170 2 359 1 193 3 293 1 172 1 55 1 323 1 366 2 151 1 152 1 35 2 348 1 283 1 239 2 240 2 349 1 370 2 373 1 39 1 350 2 81 2 158 1 
249 1 227 1 244 1 372 1 366 1 193 1 378 1 9 1 81 1 35 1 
244 1 234 1 257 1 365 1 123 1 35 1 140 1 356 1 358 1 213 1 193 1 183 1 378 1 242 1 
244 1 234 1 257 1 366 1 365 1 123 1 35 1 140 1 356 1 249 1 358 2 213 2 193 1 378 1 81 1 
0 1 358 1 213 1 276 1 243 1 
0 1 54 1 59 1 257 1 358 2 213 2 276 1 123 1 
358 1 213 1 276 1 
0 1 244 1 366 1 35 1 247 1 227 1 249 1 358 1 372 1 213 1 193 1 378 1 9 1 81 1 
257 1 
269 1 0 1 54 1 257 1 358 2 213 2 276 1 123 1 
336 1 199 1 0 2 219 1 201 1 54 1 235 2 257 1 223 1 73 1 354 1 276 2 123 1 100 1 49 2 358 5 213 5 264 1 157 2 
323 1 33 1 
133 1 244 2 366 1 323 2 35 2 260 1 249 1 193 2 81 1 
65 1 114 1 34 1 
244 1 84 1 43 1 274 1 323 1 151 1 152 1 348 1 239 1 80 1 370 1 143 1 168 1 193 1 39 1 350 1 
43 1 84 1 244 2 65 1 274 1 366 1 312 1 151 1 152 1 35 1 348 1 239 1 370 1 168 1 143 1 39 1 193 2 350 1 81 1 267 1 
281 1 244 5 159 1 366 4 323 1 312 1 35 5 260 1 249 1 193 5 265 1 183 1 81 4 267 2 
244 2 366 2 193 2 378 1 9 1 81 2 35 2 88 1 
249 1 244 3 323 1 366 3 193 3 81 3 35 3 267 1 
244 1 366 1 193 1 378 1 9 1 81 1 35 1 
133 1 249 1 244 1 366 1 193 1 378 1 81 1 35 1 260 1 
310 1 43 1 84 1 244 4 224 1 274 1 312 1 48 1 140 1 356 1 249 2 227 1 113 1 168 1 143 1 358 1 170 2 193 4 293 1 172 1 234 1 55 1 323 1 365 1 366 3 151 1 152 1 35 3 348 1 260 1 283 1 239 1 240 1 349 1 370 1 213 1 39 1 350 1 378 1 184 1 81 3 158 1 267 1 335 1 
281 1 244 2 323 1 366 1 193 2 183 1 81 1 35 2 267 1 
132 1 234 1 244 3 257 1 366 3 365 1 312 1 35 3 140 1 260 1 356 1 249 1 358 1 213 1 193 3 378 1 81 3 267 2 335 1 
244 2 65 1 366 2 34 1 35 2 260 1 249 1 193 2 81 2 267 1 
244 1 84 1 43 1 274 1 323 1 151 1 152 1 348 1 239 1 370 1 143 1 168 1 193 1 39 1 350 1 
244 1 84 1 43 1 274 1 323 1 47 1 110 1 152 1 348 1 239 1 370 1 168 1 193 1 39 1 350 1 
310 1 186 2 245 1 224 1 65 2 48 2 141 1 229 1 113 1 114 2 170 2 116 1 345 1 55 1 76 1 34 2 79 1 283 1 240 4 369 1 349 1 306 1 351 1 379 1 
244 1 366 1 193 1 378 1 81 1 140 1 35 1 88 1 
272 1 367 1 
272 1 367 1 
368 1 253 1 
368 1 253 1 
368 1 253 1 
272 1 120 1 367 1 
272 1 120 1 367 1 
272 1 295 1 367 1 
226 1 272 2 368 1 26 1 253 1 367 2 
272 1 120 1 367 1 
71 1 272 1 367 1 
71 1 272 1 367 1 
71 1 272 1 367 1 
309 1 272 1 244 2 246 1 314 1 162 1 358 1 193 2 292 1 295 1 70 1 299 1 256 1 202 1 323 1 366 2 35 2 367 1 209 1 127 1 213 1 377 1 81 2 106 1 
280 1 272 2 256 2 257 1 202 1 74 1 237 1 355 1 367 2 209 2 262 2 127 2 358 2 213 2 26 1 292 3 216 1 268 1 106 2 
329 1 7 1 282 1 
329 1 7 1 236 1 
19 1 329 3 155 1 236 1 196 1 282 2 
19 1 300 1 329 2 155 1 236 1 282 1 
19 1 329 2 155 2 236 1 282 1 
0 4 336 3 135 1 44 1 109 1 22 2 276 1 314 1 315 1 141 1 162 1 142 3 112 1 230 2 49 1 358 5 116 1 199 1 10 1 299 1 54 1 147 1 235 1 257 2 123 1 100 2 79 1 57 2 213 5 63 1 351 1 157 1 
220 1 0 7 336 8 135 2 109 3 276 6 141 3 162 4 142 9 112 2 230 6 49 2 89 1 358 9 116 3 297 1 10 1 199 1 364 1 54 1 235 2 257 5 77 1 123 1 100 6 79 3 57 6 264 1 213 9 63 3 351 3 333 5 308 1 157 2 243 5 
0 2 336 3 135 1 44 1 109 1 22 1 141 1 162 1 112 1 142 4 49 1 230 2 358 3 116 1 147 1 235 1 257 3 123 1 100 2 79 1 57 2 213 3 264 1 63 2 351 1 157 1 
220 1 336 5 0 3 135 1 44 1 109 2 22 2 141 2 162 2 142 7 112 1 230 4 49 1 89 1 358 4 116 2 147 1 235 1 257 4 77 1 123 1 100 4 79 2 57 4 213 4 264 1 63 3 351 2 157 1 
14 1 39 1 33 1 
85 1 39 1 
144 1 
43 1 168 1 39 1 
39 1 290 1 
168 1 39 1 
14 2 43 1 371 1 168 1 39 3 124 1 
273 1 245 2 186 4 32 1 75 1 48 3 86 1 324 1 101 1 141 1 191 1 240 7 229 3 279 1 91 1 115 2 116 1 
273 1 245 2 186 4 32 1 75 1 48 3 86 1 324 1 101 1 141 1 191 1 240 7 229 3 279 1 91 1 115 2 116 1 
273 1 245 2 186 4 32 1 75 1 48 3 86 1 324 1 101 1 141 1 191 1 240 7 229 3 279 1 294 1 91 1 115 2 116 1 
273 2 186 16 245 5 224 1 109 3 86 1 48 15 313 1 141 4 191 5 229 10 113 1 279 2 170 2 321 1 322 1 91 1 115 3 116 4 344 1 55 1 32 1 173 1 75 1 206 1 324 2 175 3 101 2 283 1 179 1 79 3 240 31 182 4 351 3 
273 1 245 3 186 5 55 2 32 1 224 2 20 1 225 1 86 1 48 4 324 1 101 1 141 1 191 1 283 2 240 9 229 4 113 2 279 1 170 4 322 1 91 1 115 2 116 1 
337 1 2 1 84 1 287 1 187 2 5 1 166 1 7 1 8 1 90 1 360 1 196 1 342 1 30 1 99 1 236 1 282 1 348 1 36 1 239 1 208 1 38 1 370 1 329 2 104 1 266 1 350 1 18 1 185 1 334 2 
337 1 2 1 84 1 287 1 187 3 339 1 5 1 166 1 7 1 8 1 90 1 360 1 196 1 342 1 30 1 99 1 236 1 125 1 282 1 348 1 239 1 370 1 329 2 60 1 104 1 266 1 350 1 18 1 334 3 185 2 
337 1 84 1 287 1 187 2 5 1 7 1 8 1 196 1 342 1 30 1 99 1 236 1 125 1 348 1 282 1 239 1 370 1 329 2 60 1 104 1 266 1 350 1 18 1 334 2 185 2 
84 1 2 1 274 1 187 1 339 1 166 1 168 1 231 1 8 2 342 2 118 1 30 2 203 1 302 1 348 1 239 1 153 1 370 1 39 1 350 1 40 1 18 2 334 1 
337 1 2 1 84 1 187 1 5 1 166 1 7 1 8 1 90 1 360 1 196 1 342 1 30 1 236 1 282 1 348 1 36 1 239 1 38 1 370 1 329 2 60 1 266 1 350 1 18 1 334 1 
252 1 
336 2 82 2 135 1 84 1 244 1 188 1 140 1 142 2 248 1 49 1 193 1 197 2 254 1 298 1 199 1 54 3 12 1 257 2 100 2 348 1 153 1 263 1 213 5 63 2 350 2 157 1 222 1 274 2 160 1 276 6 111 2 356 1 164 2 167 2 168 1 358 5 231 1 278 1 27 1 234 1 235 1 365 1 123 1 78 1 35 1 176 1 239 2 370 2 129 2 241 4 39 1 183 1 41 2 378 1 242 1 
269 1 244 1 222 1 160 1 276 2 140 1 356 1 111 1 248 1 358 3 278 1 193 1 298 1 234 1 54 1 365 1 35 1 241 2 213 3 183 1 378 1 242 1 
269 1 244 1 222 1 160 1 276 1 140 1 356 1 248 1 358 3 167 1 278 1 193 1 298 1 234 1 54 1 257 1 365 1 123 1 35 1 241 3 213 3 183 1 378 1 242 1 
269 1 244 1 222 1 160 1 276 2 140 1 356 1 111 1 248 1 358 3 167 1 278 1 193 1 298 1 54 1 234 1 257 1 365 1 123 1 35 1 129 1 241 3 213 3 183 1 378 1 242 1 
336 1 269 1 82 2 244 1 222 1 288 1 338 1 160 1 188 1 276 7 140 1 356 1 111 4 248 1 164 2 319 1 49 1 167 4 358 5 278 1 193 1 197 2 298 1 199 1 54 3 234 1 235 1 257 5 365 1 123 5 100 1 35 1 176 1 129 4 241 6 213 5 181 1 105 1 63 2 183 1 41 2 378 1 157 1 242 1 
336 1 82 2 244 1 188 1 140 1 248 1 142 2 49 1 193 1 197 2 298 1 199 1 54 2 257 2 100 1 263 1 213 4 63 2 157 1 222 1 160 1 276 4 356 1 111 2 164 2 358 4 167 2 278 1 234 1 235 1 365 1 123 1 35 1 176 1 129 2 241 4 183 1 41 2 378 1 242 1 
336 1 82 2 244 1 222 1 288 1 160 1 338 1 188 1 276 4 140 1 111 2 356 1 248 1 164 2 49 1 167 2 358 4 278 1 193 1 197 2 298 1 199 1 54 2 234 1 235 1 257 1 365 1 123 1 100 1 35 1 176 1 129 2 241 4 213 4 181 1 63 2 183 1 41 2 378 1 242 1 157 1 
336 1 82 2 244 1 222 1 288 1 160 1 338 1 188 1 276 4 140 1 111 2 356 1 248 1 164 2 49 1 167 2 358 4 278 1 193 1 197 2 298 1 199 1 54 2 234 1 235 1 257 1 365 1 123 1 100 1 35 1 176 1 129 2 241 4 213 4 181 1 63 2 183 1 41 2 378 1 242 1 157 1 
336 1 244 1 222 1 160 1 188 1 276 4 23 2 140 1 111 2 277 1 356 1 142 2 248 1 49 1 167 2 358 4 278 1 193 1 197 2 298 1 200 1 199 1 54 2 234 1 235 1 257 1 365 1 123 1 100 1 35 1 154 2 129 2 241 4 213 4 181 1 183 1 41 2 378 1 332 1 242 1 157 1 
336 1 82 2 244 1 222 1 288 1 160 1 338 1 188 1 276 5 140 1 356 1 111 3 248 1 164 2 319 1 49 1 358 4 167 3 278 1 193 1 197 2 298 1 199 1 54 2 234 1 235 1 257 1 365 1 123 1 100 1 35 1 176 1 129 3 241 5 213 4 181 1 63 2 183 1 41 2 378 1 157 1 242 1 
336 1 82 2 244 1 222 1 288 1 160 1 338 1 188 1 276 5 140 1 356 1 111 3 248 1 164 2 319 1 49 1 358 4 167 3 278 1 193 1 197 2 298 1 199 1 54 2 234 1 235 1 257 1 365 1 123 1 100 1 35 1 176 1 129 3 241 5 213 4 181 1 63 2 183 1 41 2 378 1 157 1 242 1 
336 1 244 1 188 1 140 1 248 1 142 2 49 1 193 1 197 2 298 1 199 1 54 2 257 1 100 1 154 2 263 1 213 4 157 1 222 1 160 1 276 4 23 2 277 1 356 1 111 2 358 4 167 2 278 1 234 1 235 1 365 1 123 1 35 1 129 2 241 4 183 1 41 2 378 1 242 1 
310 1 273 1 245 2 186 3 65 1 224 1 86 1 48 3 141 1 229 2 113 1 279 1 114 1 170 2 91 1 115 1 116 1 55 1 32 1 323 2 34 1 33 1 283 1 240 6 369 1 349 1 
310 1 245 1 186 8 224 2 65 11 109 2 48 6 141 2 191 1 357 1 229 2 165 1 113 2 114 11 170 4 233 1 296 1 116 1 343 1 344 1 55 2 173 1 323 1 34 4 175 3 283 2 79 1 102 1 240 14 349 2 182 3 351 2 158 1 
43 1 84 1 310 1 244 2 186 1 224 1 274 1 312 1 48 1 289 1 189 1 357 1 168 1 143 1 113 1 193 2 170 2 233 1 55 1 323 1 366 1 34 1 151 1 152 1 35 1 348 1 283 1 239 1 240 2 80 1 370 1 349 1 39 1 350 1 130 1 81 1 267 1 158 1 
244 3 84 2 43 2 245 4 186 10 86 1 48 10 141 3 191 4 143 2 193 3 91 1 55 3 204 2 259 1 151 2 152 2 348 2 349 3 210 2 60 1 350 3 351 2 156 1 158 1 267 1 273 1 310 3 224 3 65 7 274 1 109 2 312 1 357 1 228 1 229 8 113 3 168 2 279 1 114 7 170 6 233 1 115 1 116 3 172 2 32 1 323 2 366 1 34 7 126 2 35 1 325 2 283 3 79 2 239 3 240 20 370 3 39 2 81 1 
83 1 244 1 84 2 310 2 186 1 224 2 274 2 48 1 190 1 357 1 113 2 168 2 231 1 193 1 170 4 359 2 362 1 198 1 55 2 366 1 35 1 348 2 326 1 238 1 283 2 303 1 208 1 239 7 153 1 240 2 369 1 370 8 349 2 60 1 39 3 350 8 81 1 267 1 158 1 
310 1 244 1 245 1 186 1 65 1 224 1 109 1 48 2 141 1 229 1 249 1 113 1 114 1 170 2 193 1 50 1 233 1 116 1 55 1 366 1 34 1 35 1 260 1 283 1 79 1 240 3 349 1 351 1 81 1 
310 1 55 1 186 2 65 1 224 1 34 1 141 1 191 1 283 1 240 2 229 1 369 1 349 1 113 1 114 1 170 2 351 1 379 1 
310 1 245 1 55 1 345 1 65 1 224 1 34 1 48 2 283 1 79 1 240 2 229 1 369 1 349 1 113 1 114 1 170 2 116 1 
310 1 186 2 245 1 224 1 65 2 109 1 48 2 141 1 191 1 229 2 113 1 114 2 170 2 116 1 55 1 34 2 283 1 79 1 240 4 369 1 349 1 351 1 
310 1 55 1 186 2 65 1 224 1 34 1 141 1 191 1 283 1 240 2 229 1 349 1 113 1 114 1 170 2 351 1 379 1 362 1 
310 1 245 1 55 1 345 1 65 1 224 1 34 1 48 2 283 1 79 1 240 2 229 1 349 1 113 1 114 1 170 2 362 1 116 1 
310 1 186 2 245 1 224 1 65 2 109 1 48 2 141 1 191 1 229 2 113 1 114 2 170 2 362 1 116 1 55 1 34 2 283 1 79 1 240 4 349 1 351 1 
310 1 186 2 245 1 224 1 65 2 109 1 48 2 141 1 191 1 229 2 113 1 114 2 170 2 116 1 55 1 34 2 283 1 79 1 240 4 349 1 351 1 
43 1 84 1 244 1 310 1 186 1 224 1 274 1 48 1 357 1 168 1 143 1 113 1 193 1 170 2 172 1 55 1 323 1 151 1 152 1 348 1 283 1 239 1 240 2 370 1 349 1 39 1 350 1 158 1 
43 1 84 1 244 1 310 1 186 1 136 1 224 1 274 1 47 1 110 1 48 1 357 1 168 1 113 1 193 1 170 2 55 1 323 1 152 1 348 1 283 1 239 1 240 2 370 1 349 1 39 1 350 1 158 1 
310 1 186 2 245 1 224 1 65 2 109 1 48 2 141 1 191 1 229 2 113 1 114 2 170 2 233 1 116 1 55 1 34 2 283 1 79 1 240 4 349 1 351 1 
43 1 84 1 244 1 310 1 245 1 186 2 65 2 224 1 109 1 48 2 141 1 191 1 229 2 143 1 168 1 113 1 114 2 193 1 170 2 116 1 172 1 55 1 34 2 151 1 152 1 348 1 79 1 283 1 239 1 208 1 240 4 210 1 370 1 349 1 39 1 350 1 351 1 
310 1 244 1 186 2 224 1 65 1 275 1 109 1 48 1 141 1 191 1 229 1 249 1 113 1 114 1 170 2 193 1 233 1 116 1 55 1 366 1 34 1 35 1 260 1 79 1 283 1 240 3 349 1 351 1 81 1 
245 3 186 9 224 2 46 1 109 3 225 1 48 10 141 3 191 3 229 6 320 1 113 2 170 4 93 2 116 3 171 1 344 1 55 2 173 1 149 1 175 1 283 2 79 3 180 1 240 19 128 1 64 2 182 2 351 3 131 1 
171 2 271 1 107 1 344 2 186 6 55 1 224 1 149 1 109 1 225 1 48 5 175 2 141 1 283 1 37 1 240 11 113 1 128 2 170 2 182 2 64 2 351 1 131 1 
271 1 107 1 245 1 186 12 224 2 46 1 109 3 225 1 48 12 141 3 191 2 229 3 113 2 170 4 93 1 116 2 171 1 344 3 55 2 173 1 149 1 346 1 175 3 283 2 79 2 37 1 180 1 240 24 128 2 64 3 182 4 351 3 131 1 
271 1 107 1 245 2 186 12 224 2 46 1 109 3 225 1 48 12 141 3 191 2 229 4 113 2 170 4 93 1 116 2 171 1 344 3 55 2 173 1 149 1 346 1 175 3 283 2 79 2 37 1 180 1 240 24 128 2 64 3 182 4 351 3 131 1 
271 1 273 1 107 1 245 7 186 27 224 2 109 7 225 1 86 1 48 25 141 8 191 7 229 14 113 2 279 1 170 4 322 1 91 1 93 1 115 1 116 8 29 1 95 1 343 2 171 1 344 2 55 2 32 1 173 2 149 1 175 4 178 1 283 2 79 7 37 1 180 1 240 52 128 1 64 4 182 4 351 7 131 1 
280 1 272 1 209 1 256 1 127 1 376 1 26 1 237 1 367 1 106 1 
309 1 295 1 
117 1 272 1 209 1 256 1 127 1 367 1 24 1 316 1 106 1 
31 1 120 1 
226 1 71 1 42 1 
280 1 272 1 256 1 257 1 202 1 237 1 355 1 367 1 209 1 262 1 358 1 127 1 213 1 26 1 292 2 216 1 268 1 106 1 
280 1 272 1 256 1 257 1 202 1 237 1 355 1 367 1 209 1 262 1 358 1 127 1 213 1 26 1 292 2 216 1 268 1 106 1 
280 1 272 1 256 1 257 1 202 1 237 1 355 1 367 1 209 1 262 1 358 1 127 1 213 1 26 1 292 2 216 1 268 1 106 1 
226 1 31 1 120 1 
226 1 31 1 120 1 
71 1 42 1 
226 1 71 1 42 1 
246 1 70 1 
0 1 309 1 272 1 244 2 246 1 314 1 162 1 358 1 193 2 69 1 292 1 295 1 70 1 299 1 256 1 323 1 366 2 35 2 367 1 209 1 262 1 127 1 213 1 377 1 216 1 81 2 106 1 
84 1 310 1 244 2 186 1 108 1 45 1 224 1 48 1 317 1 357 1 291 1 168 1 113 1 193 2 170 2 359 2 233 1 198 1 55 1 35 2 348 1 326 1 283 1 239 2 240 2 370 2 349 1 212 1 39 1 350 2 158 1 
94 1 30 1 337 1 84 1 236 1 282 1 348 1 239 2 208 1 5 1 163 1 329 2 370 2 7 1 60 1 350 2 360 1 196 1 251 1 
30 1 337 1 84 1 236 1 282 1 348 1 239 1 5 1 329 2 370 1 7 1 60 1 350 1 360 1 196 1 286 1 251 1 
94 1 30 1 84 1 301 1 274 1 348 1 239 1 153 1 370 1 168 1 231 1 39 1 350 1 40 1 
94 1 30 1 337 1 84 1 236 1 282 1 348 1 239 1 5 1 163 1 329 2 370 1 7 1 60 1 350 1 360 1 196 1 251 1 
375 1 
336 1 257 1 223 1 354 1 33 1 123 1 100 1 
336 1 82 1 276 1 142 1 164 1 49 1 358 1 199 1 54 1 235 1 257 2 123 1 100 1 176 1 213 1 63 1 157 1 
336 9 135 2 84 4 43 3 85 3 290 2 87 1 141 2 142 12 49 4 192 1 53 2 254 1 199 4 54 3 257 8 98 1 100 8 348 3 57 6 208 1 14 2 213 5 350 3 63 6 214 2 351 2 157 4 223 1 354 1 274 1 109 2 276 5 318 1 230 6 168 3 358 5 361 2 28 2 116 2 363 2 234 2 235 4 122 2 121 1 123 2 124 1 126 2 79 2 239 3 328 2 370 3 330 2 39 10 
336 6 271 1 107 1 109 2 141 2 142 4 230 5 49 1 116 2 29 1 95 1 199 1 344 1 235 1 257 2 175 1 100 4 57 5 79 2 37 1 182 1 63 2 351 2 157 1 
336 2 244 1 273 1 288 1 86 1 141 2 247 1 227 1 249 1 49 1 358 1 279 1 25 1 193 1 9 1 116 1 199 1 235 1 122 2 366 1 100 2 35 1 372 1 213 1 214 1 378 1 81 1 157 1 
199 1 336 1 235 1 223 1 257 1 354 1 123 1 100 1 49 1 157 1 
336 5 257 5 122 2 109 2 126 1 100 5 141 2 57 5 79 2 142 10 230 5 214 1 63 5 351 2 116 2 
54 1 257 1 358 1 213 1 276 1 123 1 
336 2 135 2 84 1 274 2 276 4 87 1 49 2 192 2 168 1 358 3 231 1 27 1 254 2 199 1 12 1 54 2 235 2 100 2 348 1 239 4 153 1 15 1 370 4 17 1 264 1 213 3 39 1 350 4 157 2 
244 3 84 1 43 1 310 1 224 1 274 1 48 1 249 2 227 1 113 1 143 1 168 1 170 2 193 3 293 1 172 1 55 1 323 1 366 2 151 1 152 1 35 2 348 1 283 1 239 1 240 1 370 1 349 1 39 1 350 1 81 2 158 1 
199 1 336 1 135 1 235 1 257 4 123 2 100 2 57 2 142 4 230 2 49 1 63 2 115 1 157 1 254 1 
256 1 145 1 106 1 
256 1 145 1 106 1 
256 1 311 1 237 1 70 1 106 1 
256 1 145 1 106 1 
256 1 352 1 106 1 
256 1 352 1 106 1 
256 1 352 1 106 1 
256 1 106 1 
272 1 367 1 
273 1 186 4 245 2 55 2 224 2 32 1 86 1 48 4 141 1 191 1 283 2 240 8 229 3 113 2 279 1 170 4 322 1 91 1 115 1 116 1 
273 1 245 2 186 3 32 1 33 1 48 3 86 1 141 1 240 6 229 2 279 1 91 1 115 1 116 1 
245 1 72 1 55 1 186 2 224 1 109 1 48 2 141 1 79 1 283 1 191 1 240 4 229 2 113 1 170 2 351 1 116 1 
245 1 344 1 186 3 173 1 109 1 48 4 175 1 141 1 79 1 191 1 240 7 229 2 182 2 351 1 116 1 
273 2 186 11 245 5 224 2 109 2 86 1 48 12 141 3 191 4 229 9 165 1 113 2 279 2 170 4 322 2 91 1 115 1 116 3 343 1 55 2 32 1 173 1 175 2 79 2 283 2 240 23 61 1 182 2 351 2 
240 1 182 1 48 1 
240 1 186 1 175 1 
55 1 72 1 186 3 245 2 224 1 109 1 48 3 126 1 141 1 283 1 191 1 79 1 240 6 229 3 113 1 170 2 351 1 116 1 
271 1 186 6 107 1 245 1 224 1 109 2 225 1 48 6 141 2 191 1 229 2 113 1 170 2 116 2 29 1 95 1 344 1 55 1 175 1 283 1 79 2 37 1 240 12 182 1 351 2 
273 1 186 3 245 1 86 1 48 3 141 1 191 1 240 6 229 2 279 1 116 1 
273 1 186 1 245 1 55 1 32 1 224 1 48 2 191 1 283 1 240 3 229 2 113 1 279 1 61 1 170 2 322 1 91 1 
273 2 55 1 245 3 186 5 224 1 225 1 48 5 86 1 141 2 283 1 191 2 240 10 229 5 113 1 25 1 279 2 170 2 116 2 
55 1 186 2 224 1 225 1 141 1 283 1 191 1 240 2 229 1 113 1 170 2 351 1 
245 1 55 1 186 2 224 1 109 1 225 1 48 2 141 1 79 1 283 1 191 1 240 4 229 2 113 1 170 2 351 1 116 1 
273 1 55 3 245 1 186 1 224 3 46 1 225 1 48 2 283 3 191 1 240 3 229 2 113 3 279 1 61 1 170 6 322 1 
273 3 186 16 245 7 224 5 46 1 109 3 225 1 86 2 313 1 48 18 141 5 191 5 229 12 113 5 279 3 321 1 170 10 322 2 91 1 115 1 116 5 344 1 72 1 55 5 32 1 173 1 175 3 179 1 283 5 79 3 240 34 61 1 182 4 351 3 
273 1 245 2 186 4 55 1 344 1 32 1 224 1 225 1 86 1 48 4 175 1 141 1 283 1 37 1 240 8 229 2 113 1 279 1 170 2 182 1 91 1 115 1 116 1 
273 1 245 2 186 6 224 2 109 1 225 1 86 1 48 5 141 2 191 1 229 3 113 2 279 1 170 4 91 1 115 1 116 1 344 1 55 2 72 1 32 1 173 1 175 1 283 2 37 1 240 11 182 2 351 1 
271 1 107 1 186 3 55 1 344 1 224 1 109 1 225 1 48 2 175 1 141 1 283 1 37 1 240 5 113 1 170 2 182 1 351 1 
271 1 273 1 186 10 107 1 245 3 224 3 109 2 225 1 86 1 48 7 141 3 191 2 229 5 113 3 279 1 170 6 322 1 91 1 115 1 116 2 29 1 95 1 72 1 344 1 55 3 32 1 175 1 283 3 79 1 37 1 240 17 182 1 351 2 
273 1 245 2 186 4 55 1 344 1 32 1 224 1 225 1 86 1 48 4 175 1 141 1 283 1 37 1 240 8 229 2 113 1 279 1 170 2 182 1 91 1 115 1 116 1 
271 1 186 6 107 1 245 1 224 1 109 2 225 1 48 6 141 2 191 1 229 2 113 1 170 2 116 2 29 1 95 1 344 1 55 1 175 1 283 1 79 2 37 1 240 12 182 1 351 2 
271 1 107 1 186 3 55 2 72 1 344 1 224 2 109 1 225 1 48 2 175 1 141 1 283 2 37 1 240 5 113 2 170 4 182 1 351 1 
271 1 186 9 107 1 245 3 224 4 46 1 109 3 225 1 48 7 141 3 191 3 229 6 113 4 170 8 322 2 116 2 29 1 95 1 344 1 55 4 175 1 283 4 79 2 37 1 240 16 182 1 351 3 
273 3 245 3 186 3 32 2 48 4 86 1 141 1 191 3 240 7 229 6 279 3 91 1 116 1 
271 1 107 1 186 3 55 2 344 1 224 2 109 1 46 1 225 1 48 2 175 1 141 1 283 2 37 1 240 5 113 2 170 4 182 1 351 1 
281 1 244 1 16 1 323 1 193 1 183 1 35 1 
218 1 1 1 281 1 244 1 119 1 323 1 35 1 261 1 58 1 16 1 193 1 183 1 
153 1 239 1 84 1 370 1 168 1 231 1 274 1 39 1 33 1 350 1 348 1 
43 1 84 1 244 2 274 1 323 1 366 1 152 1 35 1 348 1 239 1 370 1 168 1 143 1 39 1 193 2 350 1 81 1 267 1 
244 2 84 1 43 2 290 1 140 1 356 1 143 1 192 1 168 2 193 2 323 1 366 2 152 1 35 2 348 1 239 1 328 1 370 1 39 3 350 1 378 1 81 1 267 1 
244 2 84 1 43 2 47 1 290 1 140 1 356 1 192 1 168 2 193 2 11 1 323 1 366 2 152 1 35 2 348 1 239 2 328 1 370 2 39 3 350 2 378 1 81 1 267 1 
221 1 84 1 43 1 85 1 274 1 137 1 276 1 290 1 192 1 358 2 168 1 11 1 234 1 257 1 123 1 348 1 239 3 328 1 14 1 370 3 213 2 39 4 350 3 
11 1 234 1 43 1 84 1 257 1 85 1 274 1 276 1 123 1 290 1 348 1 328 1 239 3 14 1 370 3 168 1 358 2 192 1 213 2 39 4 350 3 53 1 
239 1 83 1 84 1 370 1 350 1 348 1 
83 1 43 1 84 3 258 1 274 2 139 1 124 1 190 1 348 2 238 1 303 1 208 1 239 6 370 7 168 2 60 1 359 1 39 3 350 7 232 1 198 1 
273 1 43 1 84 1 310 2 244 2 186 3 245 2 65 1 224 2 48 3 86 1 141 1 317 1 229 2 168 1 113 2 143 1 279 1 114 1 193 2 170 4 91 1 233 1 115 1 116 1 172 1 55 2 32 1 204 1 323 2 366 1 34 1 151 1 152 1 35 1 348 1 283 2 208 1 239 1 240 6 349 2 370 1 210 1 39 1 350 1 81 1 267 1 
336 1 0 1 223 1 85 1 354 1 274 1 276 2 87 1 49 2 358 3 361 1 53 1 28 1 199 2 234 1 54 1 235 2 257 1 123 1 100 1 239 1 14 1 370 1 330 1 213 3 39 2 350 1 157 2 
83 1 43 1 84 2 98 1 124 1 348 1 208 1 239 2 14 1 370 2 168 1 39 2 350 2 
11 1 84 1 148 1 274 1 348 1 239 4 208 1 153 1 370 4 168 1 231 1 39 1 350 4 
43 1 84 2 258 1 340 1 348 1 239 2 370 2 192 1 168 1 39 1 350 2 232 1 156 1 146 1 
5 1 239 1 84 1 329 1 370 1 7 1 274 1 236 1 350 1 348 1 
239 2 208 1 84 1 370 2 168 1 108 1 60 1 39 1 350 2 348 1 198 1 
84 2 148 1 274 1 348 2 190 1 153 1 239 4 208 1 303 1 370 5 192 1 168 2 231 1 39 3 350 5 198 1 
353 1 84 2 148 1 274 1 348 2 190 1 153 1 239 4 208 1 370 5 192 1 168 2 231 1 39 3 350 5 198 1 
43 1 84 1 244 2 274 1 323 1 366 1 47 1 152 1 35 1 348 1 239 1 370 1 168 1 39 1 193 2 350 1 81 1 267 1 
43 1 84 2 258 1 139 1 124 1 348 1 239 1 370 1 192 1 168 1 39 1 350 1 232 1 
250 1 323 1 205 1 194 1 174 1 
0 1 234 1 257 1 323 1 365 1 205 1 174 2 150 1 123 1 140 1 356 1 305 1 250 2 358 2 213 2 195 1 194 2 378 1 335 1 
244 1 291 1 45 1 212 1 193 1 205 1 194 1 174 1 35 1 
305 1 205 1 150 1 
287 1 104 1 99 1 33 1 
2 1 287 1 166 1 187 1 104 1 99 1 334 1 
342 1 18 1 334 1 
2 1 287 1 103 1 166 1 187 3 104 1 99 1 52 2 161 1 13 1 334 3 36 1 
2 1 287 1 166 1 187 2 285 1 104 1 99 1 185 1 334 2 
2 1 287 1 187 1 347 1 282 1 36 1 329 1 166 1 7 1 51 1 334 1 
2 1 287 1 166 1 187 1 99 1 334 1 36 1 
2 1 166 1 187 1 104 1 99 2 334 1 36 1 
284 1 304 1 2 2 287 1 166 2 187 2 99 1 215 1 334 2 36 1 
134 1 2 1 287 2 187 3 99 1 36 1 166 1 211 1 307 1 104 1 51 1 334 3 185 2 
2 1 287 1 187 2 99 1 236 1 282 1 36 1 329 2 166 1 331 1 7 1 104 1 196 1 334 2 185 1 
134 1 2 2 287 2 187 4 99 1 36 1 166 2 67 1 285 1 104 1 51 1 334 4 185 2 
2 1 287 1 166 1 187 1 104 1 99 1 334 1 36 1 
134 1 2 1 287 3 187 4 99 2 13 1 103 1 166 1 104 2 51 1 52 1 217 1 185 2 334 4 
2 1 287 1 96 1 166 1 21 1 187 2 104 1 99 1 4 1 185 1 334 2 36 1 
2 1 287 1 187 3 99 1 13 2 36 1 103 1 166 1 68 1 104 1 52 2 334 3 
255 2 287 2 169 1 177 1 
2 1 166 1 187 1 62 1 334 1 36 1 
2 1 287 1 211 1 166 1 187 2 104 1 99 1 185 1 334 2 36 1 
327 1 
2 1 287 1 166 1 187 1 104 1 99 1 334 1 36 1 
2 1 287 1 187 3 99 1 36 1 166 1 211 1 104 1 52 1 185 1 334 3 
134 1 287 1 51 1 217 1 
287 1 99 1 

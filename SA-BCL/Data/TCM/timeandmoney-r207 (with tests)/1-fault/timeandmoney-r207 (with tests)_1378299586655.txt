#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
175 1 141 1 144 2 159 1 160 1 122 1 11 1 312 1 102 2 337 2 313 1 183 2 67 1 344 1 149 3 105 5 318 2 150 6 46 1 269 1 151 9 91 9 298 1 376 2 352 1 155 2 245 1 138 4 
175 1 141 1 144 2 159 1 160 1 122 1 11 1 102 2 312 1 337 2 313 1 183 2 67 1 344 1 149 3 105 5 318 2 150 6 46 1 269 1 151 9 91 9 298 1 376 2 352 1 155 2 245 1 138 4 
175 1 141 1 144 2 159 1 160 1 122 1 11 1 102 2 312 1 337 2 313 1 183 2 67 1 344 1 149 4 105 6 318 2 150 7 46 1 269 1 151 10 91 10 298 1 376 2 352 1 155 2 245 1 138 5 
175 1 141 1 144 2 159 1 160 1 122 1 11 1 102 2 312 1 337 2 313 1 183 2 67 1 344 1 149 2 105 4 318 2 150 4 46 1 269 1 151 7 91 7 298 1 376 1 155 2 245 1 138 3 
149 1 105 3 318 1 150 3 269 1 175 1 144 1 151 4 160 1 102 1 337 1 91 4 298 1 376 2 352 1 183 1 245 1 138 2 
105 1 318 1 201 1 141 1 144 1 35 1 151 2 160 1 136 1 337 1 91 2 298 1 155 1 67 1 183 1 245 1 
149 1 105 2 150 1 144 2 151 3 159 1 160 1 91 3 298 1 155 1 183 2 245 1 138 1 
105 5 149 3 318 1 150 7 175 1 269 1 158 1 144 2 151 9 159 1 160 1 11 1 102 1 337 1 313 1 91 9 298 1 376 2 352 1 327 1 155 1 183 2 245 1 138 4 
105 5 149 3 318 1 150 7 175 1 269 1 158 1 144 2 151 9 159 1 160 1 11 1 102 1 337 1 313 1 91 9 298 1 376 2 352 1 327 1 155 1 183 2 245 1 138 4 
262 1 182 1 325 1 
325 1 148 1 257 2 
364 2 106 2 83 1 228 1 279 2 285 2 133 2 30 2 
82 1 228 1 202 1 359 1 229 1 8 1 360 1 284 1 59 1 364 3 260 1 62 1 206 1 231 2 38 1 83 1 339 2 210 1 285 2 40 1 211 1 186 1 185 1 106 2 236 1 290 1 188 2 133 3 240 2 92 1 300 2 173 1 279 2 194 1 356 1 30 2 304 1 
364 1 106 1 225 1 193 1 4 1 228 1 279 1 285 1 133 1 30 1 
317 1 106 1 225 1 3 1 133 1 9 1 239 1 322 1 325 1 364 1 326 1 262 1 377 1 42 1 
317 2 106 1 225 1 3 1 133 1 239 1 325 1 364 1 326 1 262 1 377 1 285 1 279 1 30 1 42 2 
317 1 0 1 268 1 142 1 42 1 
317 2 0 1 268 1 262 1 254 1 288 1 42 2 325 1 
317 1 268 1 42 1 
0 1 317 1 106 1 225 1 4 1 228 1 133 1 364 1 193 1 285 1 279 1 30 1 331 1 42 1 
325 1 
317 2 0 1 137 1 268 1 262 1 288 1 42 2 325 1 
1 1 0 2 317 5 43 1 268 2 2 1 132 1 47 1 255 2 271 2 325 1 60 1 36 1 76 2 262 1 355 1 288 1 42 5 198 1 
83 1 182 1 
106 2 133 2 364 2 83 2 341 1 285 1 279 1 55 1 30 1 
178 1 315 1 25 1 
185 1 186 1 290 1 188 1 202 1 133 1 59 1 364 1 260 1 112 1 231 1 38 1 83 1 339 1 356 1 304 1 
364 3 106 3 83 1 279 3 285 3 30 1 133 3 309 1 
364 1 106 1 225 1 193 1 279 1 285 1 133 1 
364 1 106 1 225 1 279 1 285 1 341 1 55 1 133 1 30 1 
225 1 3 1 82 1 202 1 228 1 359 1 8 1 256 1 309 1 284 1 59 1 364 4 260 1 62 1 206 1 162 1 38 1 231 1 83 1 339 1 341 1 285 3 211 1 42 1 317 1 186 1 185 1 106 3 290 1 236 1 188 1 133 4 239 1 240 1 323 1 326 1 300 2 377 1 173 1 279 3 194 1 356 1 304 1 30 2 
364 2 106 2 83 1 279 1 285 1 133 2 9 1 309 1 101 1 
317 1 106 3 225 1 3 1 133 3 239 1 309 2 256 1 325 1 364 3 162 1 171 1 326 1 377 1 341 1 285 3 279 3 30 1 42 1 
364 2 106 2 178 1 279 2 285 2 341 1 133 2 30 1 25 1 309 1 
185 1 186 1 290 1 188 1 202 1 133 1 59 1 364 1 260 1 231 1 38 1 83 1 339 1 304 1 356 1 
185 1 186 1 290 1 188 1 143 1 202 1 133 1 361 1 59 1 364 1 260 1 231 1 83 1 339 1 356 1 
57 1 6 1 82 1 359 1 178 2 282 1 8 1 124 1 284 1 310 1 62 2 206 1 315 2 211 1 166 1 70 1 90 1 25 2 110 1 240 4 217 1 92 2 300 2 223 1 
364 1 106 1 225 1 377 1 279 1 285 1 133 1 274 1 
186 1 185 1 106 1 290 1 188 1 202 1 178 1 133 2 309 1 59 1 364 2 260 1 162 1 38 1 231 1 339 1 285 1 279 1 356 1 304 1 
106 5 34 1 133 5 9 1 309 2 101 1 364 5 162 1 83 1 285 4 279 4 341 1 340 1 30 1 
364 2 106 2 225 1 193 1 279 2 285 2 133 2 274 1 
63 1 75 1 
63 1 75 1 
242 1 343 1 
242 1 343 1 
242 1 343 1 
63 1 75 1 120 1 
63 1 75 1 120 1 
258 1 63 1 75 1 
184 1 63 2 75 2 242 1 366 1 343 1 
63 1 75 1 120 1 
63 1 75 1 349 1 
63 1 75 1 349 1 
63 1 75 1 349 1 
317 2 31 1 119 3 325 1 350 2 12 1 61 1 75 2 63 2 208 1 180 1 154 2 65 2 127 1 366 1 263 1 77 2 222 2 42 2 
306 1 145 1 119 1 364 2 258 1 63 1 83 1 180 1 65 1 285 2 342 1 42 1 317 1 20 1 106 2 133 2 134 1 350 1 375 1 75 1 154 1 279 2 77 1 93 1 
337 1 318 1 102 1 
337 1 318 1 136 1 
337 3 335 1 369 1 85 1 136 1 102 2 
337 2 116 1 369 1 85 1 136 1 102 1 
337 2 369 1 85 2 136 1 102 1 
1 1 0 4 57 1 6 1 145 1 282 1 255 1 124 1 257 3 60 2 163 1 36 3 262 1 126 1 342 1 86 1 288 1 68 1 42 5 148 1 317 5 268 1 345 2 238 2 108 1 134 1 271 1 325 2 76 1 278 2 113 1 195 1 
0 7 1 1 57 3 6 3 142 5 145 4 282 3 255 2 161 5 124 3 257 9 60 6 163 2 36 8 262 1 126 1 15 1 368 1 129 1 288 1 68 2 42 9 148 3 317 9 268 6 345 6 238 6 132 1 108 3 271 2 26 1 325 5 76 2 174 1 199 1 
0 2 57 1 6 1 145 1 282 1 255 1 124 1 257 4 60 2 163 1 36 3 262 1 86 1 68 1 42 3 148 2 317 3 345 2 238 2 132 1 108 1 271 1 325 3 76 1 278 1 195 1 
0 3 57 2 6 2 145 2 282 2 255 1 124 2 257 7 60 4 163 1 36 5 262 1 15 1 368 1 129 1 86 1 68 1 42 4 148 3 317 4 345 4 238 4 132 1 108 2 271 1 325 4 76 1 278 2 195 1 
249 1 182 1 356 1 
104 1 356 1 
117 1 
186 1 356 1 
249 2 186 1 185 1 356 3 156 1 241 1 
186 1 185 1 356 1 
356 1 19 1 
70 3 6 1 176 1 203 1 294 2 321 1 275 1 124 1 240 7 62 3 37 1 92 4 84 1 265 1 78 1 223 2 139 1 
70 3 6 1 176 1 203 1 294 2 321 1 275 1 124 1 240 7 62 3 37 1 92 4 84 1 265 1 78 1 223 2 139 1 
80 1 70 3 6 1 176 1 203 1 294 2 321 1 275 1 124 1 240 7 62 3 37 1 92 4 84 1 265 1 78 1 223 2 139 1 
57 3 82 1 251 1 6 4 176 2 203 1 359 1 282 3 179 1 284 1 124 4 362 3 62 15 206 1 37 2 84 1 367 1 265 2 41 1 70 10 108 3 294 3 321 2 275 1 240 31 27 1 297 4 92 16 300 2 78 5 280 1 223 5 139 1 115 1 
6 1 82 2 176 1 359 2 203 1 124 1 284 2 62 4 206 2 230 1 37 1 367 1 265 1 22 1 70 4 294 2 321 1 275 1 240 9 92 5 300 4 78 1 223 3 139 1 
96 1 157 1 335 1 202 1 144 1 358 1 160 1 102 1 337 2 365 1 231 1 66 1 339 1 16 1 183 1 370 1 266 1 105 1 150 1 318 1 290 1 188 1 151 2 72 1 170 1 136 1 91 2 298 1 155 1 245 1 
96 1 157 1 335 1 200 1 202 1 144 1 358 1 160 1 102 1 337 2 365 1 231 1 181 1 66 1 339 1 183 1 266 1 105 1 318 1 150 2 290 1 188 1 44 1 151 3 72 1 170 1 136 1 91 3 155 1 245 1 
96 1 157 1 335 1 202 1 160 1 102 1 337 2 231 1 181 1 66 1 339 1 266 1 105 1 150 2 290 1 318 1 188 1 44 1 151 2 72 1 170 1 136 1 91 2 155 1 245 1 
186 1 157 2 290 1 188 1 374 1 200 1 202 1 144 1 348 1 151 1 72 2 103 1 28 1 351 1 91 1 260 1 231 1 155 2 66 2 339 1 183 1 356 1 130 1 
96 1 157 1 335 1 202 1 144 1 358 1 102 1 337 2 365 1 231 1 181 1 66 1 339 1 16 1 183 1 266 1 318 1 290 1 188 1 151 1 72 1 170 1 136 1 91 1 298 1 155 1 
146 1 
140 2 1 1 225 1 3 1 226 2 7 1 9 1 103 1 60 2 147 1 231 2 232 1 339 2 288 3 68 1 148 2 186 1 106 1 290 1 187 2 291 1 188 2 239 1 74 1 351 1 153 2 76 1 299 1 353 1 243 1 244 1 356 1 307 2 79 4 202 1 255 1 257 2 311 2 364 1 260 2 259 1 36 2 262 1 42 5 131 1 317 5 268 6 133 1 271 1 322 1 325 2 326 1 377 1 328 2 94 1 
79 2 225 1 3 1 9 1 364 1 259 1 232 1 288 1 42 3 317 3 106 1 268 2 133 1 239 1 322 1 137 1 153 1 326 1 299 1 353 1 377 1 244 1 
79 3 225 1 3 1 226 1 9 1 364 1 259 1 262 1 232 1 288 1 42 3 317 3 106 1 268 1 133 1 239 1 322 1 325 1 137 1 326 1 299 1 353 1 377 1 244 1 
79 3 307 1 225 1 3 1 226 1 9 1 364 1 259 1 262 1 232 1 288 1 42 3 317 3 106 1 268 2 133 1 239 1 322 1 325 1 137 1 153 1 326 1 299 1 353 1 377 1 244 1 
140 2 1 1 79 6 307 4 225 1 3 1 226 4 7 1 255 1 9 1 311 2 364 1 60 1 259 1 261 1 207 1 36 1 262 5 338 1 232 1 316 1 288 3 42 5 148 2 317 5 106 1 268 7 187 2 133 1 271 1 239 1 322 1 325 5 50 1 137 1 153 4 76 1 326 1 299 1 353 1 243 1 377 1 328 2 244 1 
140 2 1 1 307 2 79 4 225 1 3 1 226 2 7 1 255 1 9 1 257 2 311 2 364 1 60 1 259 1 147 1 36 1 262 1 232 1 288 2 42 4 148 2 317 4 106 1 268 4 187 2 133 1 271 1 239 1 322 1 325 2 153 2 76 1 326 1 299 1 353 1 243 1 377 1 328 2 244 1 
140 2 1 1 307 2 79 4 225 1 3 1 226 2 7 1 9 1 255 1 311 2 364 1 60 1 259 1 207 1 36 1 262 1 232 1 338 1 316 1 288 2 42 4 148 2 317 4 106 1 268 4 187 2 133 1 271 1 239 1 322 1 325 1 153 2 326 1 76 1 299 1 353 1 243 1 377 1 328 2 244 1 
140 2 1 1 307 2 79 4 225 1 3 1 226 2 7 1 9 1 255 1 311 2 364 1 60 1 259 1 207 1 36 1 262 1 232 1 338 1 316 1 288 2 42 4 148 2 317 4 106 1 268 4 187 2 133 1 271 1 239 1 322 1 325 1 153 2 326 1 76 1 299 1 353 1 243 1 377 1 328 2 244 1 
1 1 307 2 79 4 225 1 3 1 226 2 97 1 9 1 255 1 257 2 311 2 364 1 60 1 259 1 207 1 36 1 262 1 232 1 288 2 235 2 42 4 317 4 106 1 268 4 167 1 187 2 133 1 271 1 239 1 322 1 325 1 277 2 153 2 326 1 76 1 299 1 54 1 353 1 243 1 377 1 244 1 
140 2 1 1 79 5 307 3 225 1 3 1 226 3 7 1 255 1 9 1 311 2 364 1 60 1 259 1 207 1 36 1 262 1 338 1 232 1 316 1 288 2 42 4 148 2 317 4 106 1 268 5 187 2 133 1 271 1 239 1 322 1 325 1 50 1 153 3 76 1 326 1 299 1 353 1 243 1 377 1 328 2 244 1 
140 2 1 1 79 5 307 3 225 1 3 1 226 3 7 1 255 1 9 1 311 2 364 1 60 1 259 1 207 1 36 1 262 1 338 1 232 1 316 1 288 2 42 4 148 2 317 4 106 1 268 5 187 2 133 1 271 1 239 1 322 1 325 1 50 1 153 3 76 1 326 1 299 1 353 1 243 1 377 1 328 2 244 1 
1 1 307 2 79 4 225 1 3 1 226 2 255 1 9 1 257 2 311 2 364 1 60 1 259 1 147 1 36 1 262 1 232 1 288 2 235 2 42 4 317 4 106 1 268 4 187 2 133 1 271 1 239 1 322 1 325 1 277 2 153 2 76 1 326 1 299 1 353 1 54 1 243 1 377 1 244 1 
82 1 6 1 178 1 203 1 359 1 8 1 284 1 310 1 124 1 62 3 206 1 37 1 83 2 182 1 315 1 265 1 211 1 70 2 294 1 25 1 275 1 240 6 92 3 300 2 223 2 139 1 
57 1 82 2 6 2 359 2 178 11 282 2 8 2 10 1 100 1 284 2 124 1 363 1 362 3 62 6 206 2 83 1 315 11 40 1 211 1 70 2 108 2 25 4 73 1 240 14 27 1 297 3 92 8 300 4 173 1 302 1 78 1 223 1 115 1 
118 1 82 1 202 1 359 1 8 1 309 1 100 1 284 1 59 1 364 2 260 1 62 1 162 1 206 1 38 1 231 1 83 1 339 1 285 1 211 1 40 1 186 1 185 1 106 1 290 1 188 1 109 1 133 2 25 1 273 1 240 2 112 1 92 1 300 2 279 1 173 1 356 1 304 1 
57 2 6 3 178 7 282 2 8 3 100 1 284 3 59 2 62 10 231 3 181 1 339 3 285 1 106 1 185 2 186 2 236 2 290 2 188 3 70 8 108 2 294 1 25 7 240 20 300 6 304 2 356 2 78 4 250 2 32 1 81 2 82 3 202 2 203 1 359 3 309 1 124 3 364 3 260 1 206 3 162 1 37 1 38 2 83 2 264 1 315 7 265 1 40 1 211 3 133 3 275 1 92 10 220 1 173 1 279 1 378 2 223 4 56 2 139 1 
281 1 336 1 82 2 202 2 359 2 8 2 58 1 99 1 309 1 310 1 284 2 103 1 364 1 260 2 62 1 206 2 231 7 181 1 339 8 285 1 210 2 18 1 211 2 40 1 370 1 106 1 186 2 290 2 188 8 347 1 133 1 240 2 351 1 92 1 300 4 279 1 221 1 173 1 356 3 
57 1 82 1 6 1 178 1 359 1 282 1 8 1 100 1 284 1 124 1 364 1 62 2 206 1 285 1 341 1 315 1 211 1 106 1 70 1 108 1 24 1 133 1 25 1 240 3 92 1 300 2 279 1 30 1 223 1 
70 1 82 1 6 1 178 1 359 1 282 1 8 1 25 1 110 1 240 2 310 1 284 1 206 1 92 2 300 2 315 1 78 1 211 1 
57 1 70 1 82 1 178 1 359 1 8 1 25 1 240 2 310 1 284 1 124 1 217 1 62 2 206 1 300 2 315 1 211 1 223 1 
57 1 6 1 82 1 359 1 178 2 282 1 8 1 284 1 310 1 124 1 62 2 206 1 315 2 211 1 70 2 108 1 25 2 240 4 92 2 300 2 78 1 223 1 
70 1 82 1 6 1 178 1 359 1 282 1 8 1 25 1 110 1 240 2 284 1 206 1 92 2 300 2 221 1 315 1 78 1 211 1 
57 1 70 1 82 1 178 1 359 1 8 1 25 1 240 2 284 1 124 1 217 1 62 2 206 1 300 2 221 1 315 1 211 1 223 1 
57 1 6 1 82 1 359 1 178 2 282 1 8 1 284 1 124 1 62 2 206 1 315 2 211 1 70 2 108 1 25 2 240 4 92 2 300 2 221 1 78 1 223 1 
57 1 6 1 82 1 359 1 178 2 282 1 8 1 284 1 124 1 62 2 206 1 315 2 211 1 70 2 108 1 25 2 240 4 92 2 300 2 78 1 223 1 
82 1 202 1 359 1 8 1 284 1 59 1 364 1 260 1 62 1 206 1 38 1 231 1 83 1 339 1 40 1 211 1 186 1 185 1 290 1 236 1 188 1 133 1 240 2 92 1 300 2 173 1 304 1 356 1 
82 1 202 1 143 1 359 1 8 1 361 1 284 1 59 1 364 1 260 1 62 1 206 1 231 1 83 1 339 1 40 1 211 1 186 1 185 1 290 1 188 1 133 1 111 1 240 2 92 1 300 2 173 1 356 1 
57 1 6 1 82 1 359 1 178 2 282 1 8 1 100 1 284 1 124 1 62 2 206 1 315 2 211 1 70 2 108 1 25 2 240 4 92 2 300 2 78 1 223 1 
250 1 57 1 6 1 82 1 202 1 178 2 359 1 282 1 8 1 124 1 284 1 59 1 364 1 62 2 206 1 38 1 231 1 339 1 315 2 211 1 370 1 185 1 186 1 290 1 236 1 70 2 188 1 108 1 133 1 25 2 240 4 92 2 300 2 304 1 356 1 78 1 223 1 
57 1 33 1 82 1 6 1 359 1 178 1 282 1 8 1 100 1 124 1 284 1 364 1 62 1 206 1 285 1 341 1 315 1 211 1 106 1 70 1 108 1 133 1 25 1 240 3 92 2 300 2 279 1 30 1 78 1 
57 3 82 2 6 3 308 1 359 2 282 3 284 2 124 3 362 1 62 10 125 1 206 2 213 2 87 1 373 2 22 1 70 6 89 1 108 3 240 19 27 1 297 2 92 9 300 4 354 1 246 1 196 1 78 3 223 3 115 1 
57 2 82 3 6 3 308 2 359 3 282 3 283 1 124 2 284 3 362 2 62 12 125 1 206 3 164 1 233 1 367 2 213 1 87 2 373 4 22 1 23 1 70 4 45 1 108 3 240 26 27 2 276 1 297 2 92 14 300 6 354 1 246 1 78 2 223 2 
57 4 6 5 282 4 283 1 284 3 62 21 233 1 22 1 23 1 70 8 108 4 294 1 240 41 27 3 297 4 300 6 354 1 246 1 78 4 115 1 197 1 82 3 359 3 308 1 203 1 124 5 362 3 206 3 125 1 37 1 164 1 367 1 265 1 213 1 87 2 373 4 45 1 89 1 275 1 276 1 92 20 223 4 139 1 
57 3 82 4 6 5 203 1 308 1 359 4 282 4 283 1 284 4 124 4 362 3 62 18 125 1 206 4 37 1 164 1 233 1 367 2 265 1 213 1 87 2 373 4 22 1 23 1 70 7 89 1 45 1 108 4 294 1 275 1 240 38 276 1 27 3 297 4 92 20 300 8 354 1 246 1 78 3 223 4 197 1 139 1 115 1 
57 7 82 2 6 8 203 1 308 1 359 2 282 7 283 1 284 2 124 8 362 4 62 25 125 1 206 2 37 1 164 1 233 1 367 1 265 1 213 1 87 1 373 4 22 1 23 1 70 14 45 1 108 7 294 1 275 1 73 2 240 52 276 1 27 2 297 4 92 27 300 4 354 1 246 1 78 7 223 7 139 1 115 2 
12 1 31 1 214 1 63 1 75 1 65 1 154 1 366 1 77 1 350 1 
258 1 20 1 
63 1 75 1 65 1 154 1 29 1 77 1 212 1 98 1 350 1 
317 1 31 1 119 2 325 1 350 1 12 1 61 1 75 1 63 1 208 1 180 1 154 1 65 1 366 1 263 1 77 1 222 1 42 1 
317 1 31 1 119 2 325 1 350 1 12 1 61 1 75 1 63 1 208 1 180 1 154 1 65 1 366 1 263 1 77 1 222 1 42 1 
317 1 31 1 119 2 325 1 350 1 12 1 61 1 75 1 63 1 208 1 180 1 154 1 65 1 366 1 263 1 77 1 222 1 42 1 
184 1 49 1 120 1 
184 1 49 1 120 1 
349 1 272 1 
184 1 349 1 272 1 
306 1 93 1 
0 1 306 1 145 1 119 1 364 2 258 1 63 1 83 1 65 1 263 1 285 2 342 1 42 1 317 1 20 1 106 2 133 2 134 1 350 1 375 1 75 1 154 1 77 1 279 2 93 1 222 1 381 1 
49 1 120 1 
184 1 349 1 272 1 
336 1 82 1 202 1 359 1 8 1 58 1 100 1 284 1 364 2 62 1 206 1 231 2 339 2 210 2 211 1 40 1 234 1 186 1 106 2 290 1 188 2 191 1 133 2 320 1 240 2 219 1 92 1 300 2 173 1 356 1 247 1 
95 1 96 1 318 1 335 1 290 1 188 2 202 1 170 1 136 1 123 1 102 1 337 2 365 1 231 2 181 1 339 2 66 1 39 1 370 1 
96 1 318 1 335 1 290 1 188 1 202 1 170 1 136 1 102 1 337 2 365 1 231 1 181 1 339 1 66 1 39 1 248 1 
186 1 290 1 188 1 202 1 216 1 123 1 103 1 28 1 260 1 351 1 231 1 339 1 66 1 356 1 
95 1 96 1 318 1 335 1 290 1 188 1 202 1 170 1 136 1 123 1 102 1 337 2 365 1 231 1 181 1 339 1 66 1 39 1 
69 1 
60 1 36 1 2 1 262 1 182 1 355 1 325 1 
317 1 140 1 1 1 268 1 7 1 255 1 271 1 325 2 257 1 60 1 76 1 36 1 262 1 328 1 288 1 42 1 148 1 
1 4 57 2 2 1 6 2 282 2 104 3 60 8 231 3 339 3 17 2 287 1 19 2 288 3 68 2 148 6 186 3 185 3 21 1 290 4 107 2 188 3 345 6 346 2 238 6 108 2 295 2 239 2 74 1 241 1 152 2 76 4 355 1 356 10 249 2 202 3 255 4 205 2 124 2 257 12 260 1 36 9 262 2 370 1 371 1 42 5 317 5 268 5 168 2 270 2 271 4 325 8 52 1 378 2 329 1 
1 2 57 2 6 2 282 2 204 1 255 2 205 2 124 2 257 6 362 1 60 5 36 8 164 1 262 2 233 1 288 1 68 1 42 1 148 3 317 1 107 1 268 1 237 1 23 1 345 5 45 1 238 5 108 2 271 2 74 1 27 1 276 1 325 5 297 1 76 2 
1 1 225 1 4 1 6 2 228 1 255 1 205 2 124 1 364 1 60 2 37 1 36 2 338 1 285 1 265 1 42 1 317 1 106 1 107 1 133 1 271 1 275 1 218 1 76 1 193 1 279 1 30 1 331 1 
1 1 2 1 255 1 271 1 325 1 60 1 76 1 36 1 262 1 355 1 
107 1 57 2 345 5 6 2 238 5 108 2 282 2 205 2 124 2 257 10 325 5 60 5 36 5 378 1 148 5 
317 1 268 1 262 1 288 1 42 1 325 1 
1 1 202 1 255 2 103 1 260 2 60 2 231 4 36 2 339 4 288 2 68 2 131 1 371 1 42 3 317 3 186 1 290 1 268 4 291 1 188 4 132 1 293 1 271 2 74 2 351 1 76 2 329 2 356 1 332 1 
82 1 228 1 202 1 359 1 8 1 284 1 59 1 364 3 260 1 62 1 206 1 231 1 38 1 83 1 339 1 285 2 211 1 106 2 185 1 186 1 236 1 290 1 188 1 133 3 240 1 300 2 173 1 279 2 194 1 30 2 304 1 356 1 
1 1 345 2 238 2 294 1 255 1 271 1 74 1 257 4 325 4 60 2 76 1 36 1 262 2 68 1 148 2 
65 1 286 1 350 1 
65 1 286 1 350 1 
306 1 31 1 14 1 65 1 350 1 
65 1 286 1 350 1 
65 1 289 1 350 1 
65 1 289 1 350 1 
65 1 289 1 350 1 
65 1 350 1 
63 1 75 1 
70 3 6 1 82 2 359 2 203 1 294 1 275 1 124 1 240 8 284 2 62 4 206 2 37 1 92 4 300 4 367 1 265 1 78 1 223 2 139 1 
62 3 70 2 37 1 92 3 6 1 182 1 203 1 294 1 265 1 223 2 275 1 124 1 240 6 139 1 
57 1 70 2 82 1 6 1 108 1 359 1 282 1 124 1 284 1 240 4 62 2 206 1 172 1 92 2 300 2 78 1 223 1 
57 1 70 2 6 1 108 1 282 1 124 1 240 7 27 1 362 1 62 4 297 2 92 3 78 1 223 1 115 1 
57 2 6 3 82 2 5 1 203 1 359 2 282 2 10 1 124 3 284 2 362 2 62 12 206 2 37 2 367 2 265 2 70 9 108 2 294 1 275 1 73 1 240 23 297 2 92 11 300 4 78 4 223 5 139 1 115 1 
62 1 297 1 240 1 
92 1 240 1 362 1 
57 1 70 3 82 1 6 1 108 1 359 1 282 1 284 1 240 6 124 1 62 3 206 1 172 1 92 3 300 2 378 1 78 1 223 2 
57 2 82 1 6 2 359 1 282 2 284 1 124 2 362 1 62 6 206 1 164 1 233 1 22 1 23 1 70 2 45 1 108 2 240 12 27 1 276 1 297 1 92 6 300 2 78 1 223 1 
70 2 6 1 275 1 240 6 124 1 62 3 37 1 92 3 265 1 78 1 223 1 
70 2 5 1 82 1 203 1 359 1 240 3 284 1 62 2 206 1 37 1 92 1 300 2 367 1 265 1 78 1 223 1 139 1 
22 1 70 5 82 1 6 2 359 1 275 1 284 1 240 10 124 2 218 1 62 5 206 1 37 2 92 5 300 2 265 2 78 2 223 3 
22 1 70 1 82 1 6 1 359 1 282 1 284 1 240 2 206 1 92 2 300 2 78 1 
22 1 57 1 70 2 82 1 6 1 108 1 359 1 282 1 124 1 284 1 240 4 62 2 206 1 92 2 300 2 78 1 223 1 
22 1 70 2 5 1 89 1 82 3 359 3 240 3 284 3 62 2 206 3 37 1 92 1 300 6 367 1 265 1 78 1 223 1 
57 3 5 1 82 5 6 5 203 1 359 5 179 1 282 3 284 5 124 5 362 3 62 18 206 5 37 3 367 2 265 3 41 1 22 1 70 12 89 1 108 3 294 1 275 2 240 34 27 1 297 4 172 1 92 16 300 10 280 1 78 5 223 7 139 1 115 1 
6 1 82 1 359 1 203 1 124 1 284 1 362 1 62 4 206 1 37 1 265 1 22 1 70 2 294 1 275 1 240 8 27 1 276 1 297 1 92 4 300 2 223 2 139 1 
82 2 6 2 203 1 359 2 282 1 124 1 284 2 362 1 62 5 206 2 37 1 265 1 22 1 70 3 108 1 294 1 275 1 240 11 27 1 276 1 297 2 172 1 92 6 300 4 78 1 223 2 139 1 115 1 
57 2 82 3 6 3 203 1 359 3 282 2 284 3 124 3 362 1 62 10 206 3 37 1 164 1 233 1 367 1 265 1 22 1 23 1 70 4 45 1 108 2 294 1 275 1 240 19 27 1 276 1 297 1 172 1 92 9 300 6 78 1 223 3 139 1 
57 1 82 3 6 3 203 1 359 3 282 2 284 3 124 2 362 1 62 7 206 3 37 1 164 1 233 1 367 1 265 1 22 1 23 1 70 5 45 1 108 2 294 1 275 1 240 17 27 1 276 1 297 1 172 1 92 10 300 6 78 2 223 3 139 1 
6 1 82 1 359 1 203 1 124 1 284 1 362 1 62 4 206 1 37 1 265 1 22 1 70 2 294 1 275 1 240 8 27 1 276 1 297 1 92 4 300 2 223 2 139 1 
57 2 82 1 6 2 359 1 282 2 284 1 124 2 362 1 62 6 206 1 164 1 233 1 22 1 23 1 70 2 45 1 108 2 240 12 27 1 276 1 297 1 92 6 300 2 78 1 223 1 
57 1 82 4 6 3 203 1 359 4 282 2 284 4 124 2 362 1 62 8 206 4 37 1 164 1 233 1 367 2 265 1 22 1 23 1 70 5 45 1 108 2 294 1 275 1 240 18 27 1 276 1 297 1 172 1 92 10 300 8 78 2 223 3 139 1 
57 2 82 4 6 3 359 4 282 3 284 4 124 2 362 1 62 7 206 4 164 1 233 1 367 2 22 1 23 1 70 6 45 1 89 1 108 3 240 16 27 1 276 1 297 1 92 9 300 8 78 3 223 3 
70 6 6 1 203 2 275 1 124 1 240 7 62 4 37 3 92 3 265 3 78 3 223 3 139 1 
57 1 82 4 6 3 203 1 359 4 282 2 284 4 124 2 362 1 62 8 206 4 37 1 164 1 233 1 367 2 265 1 22 1 23 1 70 4 45 1 89 1 108 2 294 1 275 1 240 18 27 1 276 1 297 1 92 10 300 8 78 1 223 3 139 1 
364 1 106 1 192 1 83 1 133 1 9 1 101 1 
224 1 106 1 319 1 357 1 133 1 9 1 135 1 101 1 364 1 192 1 83 1 379 1 
186 1 351 1 260 1 290 1 188 1 231 1 182 1 202 1 339 1 356 1 103 1 
186 1 185 1 106 1 290 1 188 1 202 1 133 2 309 1 59 1 364 2 260 1 231 1 38 1 83 1 339 1 285 1 279 1 356 1 
186 2 185 2 106 2 225 1 290 1 188 1 202 1 270 1 133 2 309 1 59 1 364 2 326 1 231 1 38 1 83 1 377 1 339 1 285 1 279 2 356 3 329 1 19 1 
225 1 202 1 309 1 361 1 59 1 364 2 231 2 83 1 339 2 285 1 19 1 106 2 185 2 186 2 290 1 188 2 270 1 133 2 326 1 377 1 279 2 329 1 356 3 330 1 
249 1 202 1 177 1 104 1 260 1 231 3 262 1 339 3 19 1 42 2 317 2 185 1 186 1 268 1 290 1 188 3 189 1 270 1 239 1 325 1 356 4 329 1 330 1 
317 2 249 1 186 1 185 1 290 1 268 1 188 3 346 1 202 1 270 1 239 1 325 1 104 1 260 1 231 3 262 1 339 3 329 1 356 4 330 1 19 1 42 2 
290 1 188 1 231 1 202 1 339 1 347 1 
185 1 186 2 290 3 281 1 188 7 252 1 227 1 202 2 347 1 58 1 99 1 241 1 260 2 231 6 13 1 181 1 339 7 210 1 356 3 18 1 370 1 
250 1 81 1 6 1 82 2 202 1 178 1 203 1 359 2 8 2 309 1 100 1 124 1 284 2 59 1 364 2 62 3 206 2 37 1 231 1 38 1 83 2 339 1 285 1 315 1 265 1 211 2 370 1 186 1 185 1 106 1 290 1 236 1 70 2 188 1 191 1 294 1 133 2 25 1 275 1 240 6 92 3 300 4 279 1 356 1 304 1 223 2 139 1 
1 2 0 1 249 1 2 1 255 2 104 1 60 1 260 1 36 1 231 1 262 1 339 1 17 1 288 1 371 1 42 3 317 3 268 2 188 1 168 1 346 1 295 1 271 2 239 1 325 1 76 2 355 1 356 2 
249 1 185 1 186 1 290 2 188 2 202 1 347 1 241 1 231 2 339 2 356 2 287 1 370 1 
186 1 351 1 260 1 290 1 53 1 188 4 231 4 202 1 339 4 356 1 330 1 370 1 103 1 
185 1 186 1 290 2 188 2 252 1 202 1 121 1 231 2 13 1 64 1 339 2 264 1 329 1 356 1 
337 1 96 1 260 1 318 1 290 1 188 1 231 1 202 1 339 1 136 1 
186 1 290 1 188 2 202 1 58 1 219 1 231 2 181 1 339 2 356 1 370 1 
186 2 290 2 188 5 202 2 99 1 58 1 103 1 351 1 260 1 53 1 231 4 339 5 329 1 356 3 18 1 370 1 
267 1 186 2 290 2 188 5 202 2 58 1 103 1 351 1 260 1 53 1 231 4 339 5 329 1 356 3 18 1 370 1 
186 1 185 1 106 1 290 1 188 1 202 1 133 2 309 1 361 1 59 1 364 2 260 1 231 1 83 1 339 1 285 1 279 1 356 1 
185 1 186 1 290 2 188 1 252 1 227 1 202 1 241 1 231 1 13 1 339 1 329 1 356 1 
333 1 106 1 133 1 320 1 364 1 51 1 303 1 234 1 247 1 
372 1 51 1 71 1 
333 1 51 1 83 1 209 1 303 1 
0 1 317 2 372 1 333 2 225 1 3 1 71 1 239 1 256 1 325 1 51 1 326 1 83 1 262 1 209 2 377 1 303 2 305 1 42 2 
105 1 182 1 245 1 160 1 
105 1 91 1 144 1 151 1 183 1 245 1 160 1 
91 1 155 1 72 1 
105 1 88 1 215 1 144 1 151 3 160 1 91 3 298 1 301 1 183 1 67 2 245 1 
105 1 91 2 150 1 376 1 144 1 151 2 183 1 245 1 160 1 
105 1 318 1 175 1 144 1 151 1 102 1 337 1 91 1 298 1 183 1 138 1 
105 1 91 1 298 1 144 1 151 1 183 1 245 1 
91 1 298 1 144 1 151 1 183 1 245 2 160 1 
105 1 334 1 144 2 151 2 48 1 91 2 298 1 183 2 245 1 128 1 
149 1 105 2 150 2 144 1 151 3 160 1 11 1 313 1 91 3 298 1 183 1 245 1 138 1 
105 1 335 1 318 1 150 1 144 1 151 2 160 1 136 1 102 1 337 2 91 2 298 1 183 1 245 1 380 1 
149 1 105 2 150 2 144 2 151 4 160 1 91 4 298 1 376 1 352 1 183 2 245 1 138 1 
105 1 91 1 298 1 144 1 151 1 183 1 245 1 160 1 
149 1 105 3 88 1 150 2 215 1 144 1 169 1 151 4 160 2 91 4 67 1 183 1 245 2 138 1 
105 1 150 1 190 1 144 1 151 2 160 1 324 1 91 2 298 1 327 1 183 1 245 1 
105 1 88 1 215 2 144 1 151 3 253 1 160 1 91 3 298 1 183 1 67 2 245 1 
105 2 296 1 165 2 114 1 
91 1 314 1 298 1 144 1 151 1 183 1 
105 1 91 2 150 1 298 1 144 1 151 2 183 1 245 1 160 1 11 1 
292 1 
105 1 91 1 298 1 144 1 151 1 183 1 245 1 160 1 
105 1 91 3 150 1 298 1 144 1 67 1 151 3 183 1 245 1 160 1 11 1 
105 1 149 1 169 1 138 1 
105 1 245 1 

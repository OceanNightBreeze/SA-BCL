#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 348 260 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 304 181 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 333 247 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 333 247 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 333 29 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 333 247 290 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 333 247 290 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 348 260 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
129 1 106 1 329 1 132 1 312 1 10 3 356 1 173 2 235 1 85 1 153 2 26 3 326 2 
168 2 200 1 329 1 312 1 313 2 356 1 172 2 314 2 173 5 335 1 153 2 26 9 126 1 74 1 129 6 183 1 54 1 106 3 132 1 131 1 10 9 160 1 372 1 235 4 85 2 165 1 291 1 326 2 
168 2 200 1 329 1 312 1 313 2 356 1 172 2 314 2 173 5 335 1 153 2 26 9 126 1 74 1 129 6 183 1 54 1 106 3 132 1 131 1 10 9 160 1 372 1 235 4 85 2 165 1 291 1 326 2 
168 2 200 1 329 1 312 1 313 2 356 1 172 2 314 2 173 6 335 1 153 2 26 10 126 1 74 1 129 7 183 1 54 1 106 4 132 1 131 1 10 10 160 1 372 1 235 5 85 2 165 1 291 1 326 2 
168 1 200 1 329 1 312 1 313 2 356 1 172 2 314 2 173 4 335 1 153 2 26 7 126 1 74 1 129 4 183 1 54 1 106 2 132 1 131 1 10 7 372 1 235 3 85 2 165 1 291 1 326 2 
129 3 168 2 106 1 54 1 132 1 312 1 313 1 10 4 160 1 356 1 314 1 173 3 172 1 235 2 153 1 26 4 326 1 126 1 
132 1 312 1 251 1 10 2 313 1 173 1 356 1 314 1 371 1 135 1 372 1 85 1 153 1 165 1 26 2 326 1 
168 2 329 1 312 1 313 1 356 1 173 5 172 1 314 1 335 1 72 1 153 2 26 9 126 1 129 7 106 3 54 1 132 1 131 1 282 1 10 9 160 1 235 4 85 1 326 2 
168 2 329 1 312 1 313 1 356 1 173 5 172 1 314 1 335 1 72 1 153 2 26 9 126 1 129 7 106 3 54 1 132 1 131 1 282 1 10 9 160 1 235 4 85 1 326 2 
318 1 249 1 345 1 110 1 358 1 299 1 20 1 58 1 59 1 374 1 375 1 258 1 300 1 4 1 
47 1 
310 1 167 1 47 1 171 1 332 1 358 1 299 1 20 1 300 1 4 1 318 1 249 1 345 1 110 1 58 1 59 1 374 1 375 1 258 1 
310 1 259 2 15 1 223 1 47 2 148 1 171 2 332 2 358 1 299 1 270 1 315 1 20 2 49 5 359 1 271 2 300 1 154 2 4 4 277 1 249 1 318 1 107 2 155 1 214 1 189 1 345 1 81 1 110 1 306 2 56 4 58 1 59 1 325 1 374 4 375 1 258 1 43 2 
11 1 47 1 171 1 
48 1 47 1 367 2 
249 2 318 1 58 2 59 2 300 2 254 1 110 2 358 2 
143 1 46 1 68 1 355 1 123 1 358 3 105 2 151 1 276 1 180 1 300 2 230 1 363 1 249 2 318 1 31 1 319 1 212 1 365 1 184 1 213 1 322 1 157 2 156 2 323 1 216 1 37 1 55 1 254 1 110 2 58 2 57 1 59 3 61 1 288 1 117 2 90 2 
299 1 249 1 318 1 58 1 59 1 375 1 258 1 300 1 110 1 358 1 
93 1 133 1 36 1 344 1 47 1 171 1 358 1 175 1 59 1 207 1 374 1 375 1 300 1 4 1 
249 1 93 1 344 1 47 1 171 1 110 1 358 1 175 1 58 1 59 1 374 2 207 1 375 1 300 1 4 2 
20 1 177 1 374 1 332 1 4 1 
310 1 47 1 171 1 332 1 358 1 299 1 20 1 300 1 4 1 128 1 318 1 249 1 345 1 110 1 58 1 59 1 374 1 375 1 258 1 
374 1 332 1 4 1 
249 1 342 1 110 1 254 2 358 2 58 1 59 2 361 1 300 2 
70 1 142 1 22 1 
76 1 46 1 156 1 68 1 355 1 323 1 55 1 254 1 358 1 57 1 151 1 59 1 117 1 90 1 230 1 363 1 
11 1 254 1 
292 1 46 1 68 1 156 1 355 1 323 1 55 1 110 1 358 2 70 1 151 1 58 1 57 1 59 2 12 1 300 1 117 1 230 1 90 1 363 1 
249 1 58 3 59 3 12 1 300 3 254 1 110 3 358 3 
58 1 59 1 375 1 258 1 300 1 110 1 358 1 
249 1 58 1 59 1 342 1 361 1 375 1 300 1 110 1 358 1 
292 1 93 1 143 1 46 1 68 1 355 1 227 1 358 4 175 1 105 2 151 1 245 1 207 1 276 1 180 1 300 3 230 1 4 1 363 1 249 2 318 1 31 1 319 1 212 1 184 1 342 1 322 1 157 1 156 1 323 1 344 1 216 1 55 1 254 1 110 3 57 1 58 3 59 4 61 1 12 1 374 1 375 1 117 1 90 1 
297 1 58 1 59 2 133 1 12 1 300 2 254 1 110 1 358 2 
292 1 249 1 93 1 342 1 227 1 344 1 47 1 110 3 369 1 358 3 175 1 58 3 59 3 12 2 374 1 207 1 375 1 300 3 4 1 
249 1 142 1 342 1 110 2 358 2 70 1 58 2 59 2 12 1 300 2 
46 1 156 1 68 1 355 1 323 1 55 1 254 1 358 1 57 1 151 1 59 1 117 1 90 1 230 1 363 1 
156 1 68 1 355 1 323 1 55 1 254 1 358 1 164 1 151 1 59 1 349 1 117 1 90 1 230 1 363 1 
259 1 142 2 143 2 328 1 2 1 104 1 70 2 105 2 22 2 336 1 180 1 31 1 319 1 107 1 212 1 213 2 303 1 157 4 216 1 80 1 253 1 86 1 61 1 376 1 
58 1 59 1 138 1 207 1 375 1 300 1 110 1 358 1 
292 1 249 1 342 1 133 1 110 4 254 1 358 5 297 1 176 1 58 4 59 5 12 2 51 1 300 5 
58 2 59 2 138 1 375 1 258 1 300 2 110 2 358 2 
242 1 265 1 35 1 
242 2 120 1 338 1 35 2 195 1 118 1 
242 1 35 1 
242 1 35 1 
338 1 118 1 
338 1 118 1 
338 1 118 1 
242 1 35 1 301 1 
242 1 35 1 301 1 
242 1 35 1 301 1 
242 1 222 1 35 1 
242 1 222 1 35 1 
242 1 222 1 35 1 
242 2 302 2 221 3 209 1 120 1 16 1 130 2 159 2 35 2 47 1 284 1 285 2 24 1 39 1 179 2 115 1 374 2 4 2 327 1 
221 1 242 1 265 1 102 1 358 2 149 1 24 1 300 2 4 1 302 1 28 1 127 1 130 1 159 1 35 1 285 1 254 1 110 2 58 2 237 1 59 2 239 1 89 1 374 1 
320 1 279 2 172 1 314 2 371 1 
313 1 314 1 172 1 
313 1 314 1 371 1 
279 1 320 1 286 1 172 2 314 3 371 1 
279 1 320 1 172 1 314 2 317 1 371 1 
310 1 259 1 328 1 203 1 47 1 171 1 267 1 332 1 174 1 204 1 49 1 20 4 271 1 274 1 277 1 4 4 27 2 107 1 188 1 303 1 367 1 306 1 56 3 237 1 256 1 239 1 89 1 374 4 139 1 43 1 219 1 
310 1 261 1 259 3 293 1 328 3 203 2 47 5 171 1 267 6 332 6 298 1 48 3 49 6 20 7 205 1 177 5 271 2 274 1 4 8 277 1 32 1 107 3 303 3 188 6 78 1 367 9 81 1 306 2 56 8 256 2 239 4 374 8 62 5 43 2 219 3 
259 1 328 1 203 1 47 3 171 1 267 2 174 1 204 1 48 2 20 2 49 2 271 1 4 3 27 1 107 1 303 1 188 2 367 4 81 1 306 1 56 3 256 1 239 1 374 3 43 1 219 1 
261 1 259 2 328 2 203 1 47 4 171 1 267 4 174 1 298 1 204 1 48 3 20 3 49 4 271 1 4 4 27 2 32 1 107 2 303 2 188 4 367 7 81 1 306 1 56 5 256 1 239 2 374 4 43 1 219 2 
75 1 
11 1 355 1 170 1 
7 1 355 1 
151 1 355 1 
151 1 355 3 170 2 100 1 101 1 230 1 
151 1 355 1 230 1 
355 1 295 1 
364 2 259 1 53 1 107 1 143 3 155 1 223 1 330 1 213 4 157 7 269 1 268 1 334 1 86 3 336 2 359 1 3 1 119 1 
220 1 44 1 259 4 223 2 143 15 328 3 330 5 268 1 334 2 105 2 359 2 336 5 3 1 339 1 180 1 52 1 364 3 53 1 107 4 212 1 155 1 213 16 157 31 303 3 79 4 216 1 109 3 113 1 86 10 287 1 61 1 63 1 119 2 219 3 
44 1 259 1 143 4 223 1 330 1 294 1 334 1 105 4 336 3 359 1 3 1 180 2 364 2 53 1 107 1 212 2 155 1 213 5 157 9 216 2 86 4 61 2 40 1 119 1 
364 2 259 1 53 1 107 1 143 3 155 1 223 1 330 1 213 4 157 7 268 1 334 1 86 3 336 2 359 1 3 1 119 1 
364 2 259 1 53 1 107 1 143 3 155 1 223 1 330 1 213 4 157 7 268 1 334 1 86 3 336 2 359 1 3 1 119 1 
352 1 95 1 68 1 355 1 244 1 151 1 337 1 153 1 26 1 187 1 156 1 323 1 10 1 55 1 307 2 163 1 85 2 88 1 373 2 117 1 64 2 90 1 326 1 
68 1 313 1 226 1 18 1 172 1 314 2 153 1 26 1 248 1 132 1 156 1 252 1 234 1 323 1 10 1 286 1 162 1 371 1 307 1 347 1 85 1 373 1 64 1 117 1 90 1 326 1 
312 1 68 1 313 1 18 1 173 1 356 1 172 1 314 2 153 1 26 2 248 1 129 1 108 1 132 1 156 1 252 1 234 1 323 1 10 2 286 1 162 1 371 1 307 1 347 1 85 1 373 1 64 1 117 1 90 1 326 1 
0 1 312 1 68 1 313 1 226 1 18 1 173 1 356 1 172 1 314 2 153 1 26 3 248 1 129 2 156 1 234 1 323 1 10 3 286 1 162 1 371 1 307 1 347 1 85 1 88 1 373 1 64 1 117 1 90 1 326 1 
0 1 312 1 68 1 226 1 18 1 313 1 173 1 356 1 314 2 172 1 26 2 129 2 156 1 323 1 10 2 286 1 162 1 371 1 307 1 347 1 85 1 373 1 64 1 117 1 90 1 
182 1 
310 1 260 1 156 1 203 1 55 1 332 2 306 1 56 1 49 1 114 1 271 1 348 1 374 1 43 1 117 1 4 1 277 1 90 1 
310 1 167 1 93 1 266 1 332 2 358 1 150 1 175 1 125 1 207 1 362 1 300 1 4 2 280 2 133 1 36 1 344 1 304 1 305 1 59 1 374 2 375 1 
167 1 310 1 93 1 266 1 47 1 171 1 332 1 358 1 150 1 175 1 125 1 207 1 362 1 300 1 4 2 280 3 186 1 133 1 36 1 344 1 305 1 59 1 374 2 375 1 
310 1 167 1 93 1 266 1 332 2 358 1 150 1 175 1 125 1 207 1 362 1 300 1 4 2 181 1 280 3 186 1 133 1 36 1 344 1 304 1 305 1 59 1 374 2 375 1 
310 1 167 1 374 1 332 1 4 1 
310 1 93 1 224 2 266 1 332 2 358 1 150 1 175 1 48 1 49 1 23 1 271 1 125 1 207 1 362 1 300 1 277 1 4 2 181 1 231 1 280 3 186 1 281 1 8 2 133 1 215 1 36 1 304 1 344 1 367 1 305 1 306 1 56 1 59 1 374 2 375 1 43 1 65 2 
310 1 93 1 224 2 225 1 266 1 332 2 333 1 358 1 150 1 175 1 48 1 49 1 23 1 271 1 125 1 207 1 362 1 247 1 300 1 4 2 277 1 181 1 280 3 186 1 281 1 8 2 133 1 215 1 36 1 304 1 344 1 305 1 306 1 56 1 59 1 374 2 375 1 43 1 65 2 
310 1 93 1 224 1 225 1 266 1 332 2 333 1 358 1 150 1 175 1 48 1 49 1 23 1 271 1 125 1 207 1 362 1 247 1 300 1 4 2 277 1 181 1 280 2 281 1 8 1 133 1 215 1 36 1 304 1 344 1 305 1 306 1 56 1 59 1 374 2 375 1 43 1 65 1 
310 1 93 1 169 1 266 1 332 2 333 1 358 1 150 1 175 1 49 1 271 1 125 1 207 1 362 1 300 1 4 2 277 1 181 1 29 1 280 2 281 1 8 1 133 1 36 1 304 1 344 1 367 1 305 1 306 1 56 1 38 1 59 1 238 1 350 1 374 2 375 1 43 1 65 1 
310 1 93 1 224 2 225 1 266 1 332 3 333 1 358 1 150 1 175 1 48 1 49 1 23 1 271 1 125 1 207 1 362 1 247 1 300 1 277 1 4 2 181 2 280 4 281 1 186 2 8 2 133 1 215 1 36 1 344 1 304 2 305 1 306 1 56 1 59 1 374 2 375 1 43 1 290 1 65 2 
310 1 93 1 224 2 225 1 266 1 332 3 333 1 358 1 150 1 175 1 48 1 49 1 23 1 271 1 125 1 207 1 362 1 247 1 300 1 277 1 4 2 181 2 280 4 281 1 186 2 8 2 133 1 215 1 36 1 344 1 304 2 305 1 306 1 56 1 59 1 374 2 375 1 43 1 290 1 65 2 
310 1 93 1 266 1 332 2 358 1 150 1 175 1 49 1 271 1 125 1 207 1 362 1 300 1 277 1 4 2 181 1 231 1 280 3 186 1 281 1 8 2 133 1 36 1 304 1 344 1 367 1 305 1 306 1 56 1 38 2 59 1 238 1 350 1 374 2 375 1 43 1 65 2 
352 1 143 1 68 2 355 3 226 1 146 1 104 1 358 1 105 4 151 2 360 1 276 1 300 1 180 2 31 2 319 2 340 1 212 2 108 1 213 1 187 1 156 7 157 2 323 2 216 2 55 2 37 2 110 1 83 1 58 1 59 1 324 1 12 1 61 2 288 1 42 1 166 1 117 8 90 8 
259 1 142 1 328 1 143 2 358 1 70 1 22 1 105 2 336 1 180 1 300 1 249 1 31 1 319 1 212 1 107 1 342 1 343 1 213 1 157 3 303 1 9 1 216 1 110 1 58 1 86 1 59 1 61 1 219 1 
259 1 142 1 223 1 143 3 104 1 70 1 105 2 22 1 359 1 336 2 3 1 180 1 364 1 53 1 31 1 319 1 212 1 107 1 155 1 213 3 157 6 216 1 254 2 86 2 11 1 61 1 
259 1 142 4 143 6 328 2 330 1 99 1 70 11 105 4 22 11 336 1 276 1 180 2 52 1 211 1 31 2 319 1 212 2 107 2 343 1 213 8 157 14 303 1 79 3 216 2 109 3 254 1 82 1 86 2 192 1 61 2 288 1 63 1 219 2 
141 1 292 1 142 1 143 1 46 1 68 1 355 1 201 1 358 2 151 1 105 2 276 1 300 1 180 1 230 1 363 1 210 1 31 1 319 1 76 1 212 1 343 1 213 1 156 1 157 2 323 1 216 1 55 1 254 1 110 1 57 1 58 1 59 2 61 1 12 1 288 1 117 1 90 1 
292 1 142 7 199 2 92 2 143 10 328 2 330 4 46 2 296 1 105 6 151 2 336 4 3 1 300 1 53 1 212 3 107 3 155 1 343 1 213 10 156 3 157 20 303 2 216 3 55 1 254 2 110 1 58 1 57 2 59 3 218 2 12 1 61 3 117 3 219 2 259 3 223 1 68 2 355 2 226 1 358 3 70 7 22 7 359 1 273 1 276 1 180 3 230 2 363 2 364 1 319 3 31 3 30 2 184 2 323 2 136 1 86 8 288 1 90 3 
142 1 319 1 31 1 212 1 107 1 328 1 330 1 2 1 213 2 157 2 216 1 104 1 70 1 22 1 105 2 86 1 61 1 180 1 
259 1 142 1 319 1 31 1 212 1 143 2 157 2 303 1 216 1 80 1 104 1 70 1 22 1 105 2 86 1 336 1 61 1 180 1 
259 1 142 2 328 1 143 2 330 1 104 1 70 2 105 2 22 2 336 1 180 1 31 1 319 1 107 1 212 1 213 2 157 4 303 1 216 1 86 2 61 1 219 1 
142 1 340 1 319 1 31 1 212 1 107 1 328 1 330 1 2 1 213 2 157 2 216 1 70 1 22 1 105 2 86 1 61 1 180 1 
259 1 142 1 340 1 319 1 31 1 212 1 143 2 157 2 303 1 216 1 80 1 70 1 22 1 105 2 86 1 336 1 61 1 180 1 
259 1 142 2 328 1 143 2 330 1 70 2 105 2 22 2 336 1 180 1 31 1 319 1 340 1 107 1 212 1 213 2 157 4 303 1 216 1 86 2 61 1 219 1 
259 1 142 2 328 1 143 2 330 1 70 2 105 2 22 2 336 1 180 1 31 1 319 1 107 1 212 1 213 2 157 4 303 1 216 1 86 2 61 1 219 1 
143 1 46 1 68 1 355 1 358 1 151 1 105 2 276 1 180 1 230 1 363 1 319 1 31 1 212 1 184 1 213 1 157 2 156 1 323 1 216 1 55 1 254 1 57 1 59 1 61 1 288 1 117 1 90 1 
143 1 68 1 355 1 358 1 151 1 105 2 276 1 180 1 230 1 363 1 208 1 319 1 31 1 212 1 213 1 157 2 156 1 323 1 216 1 55 1 254 1 164 1 59 1 61 1 288 1 349 1 117 1 90 1 
259 1 142 2 328 1 143 2 330 1 70 2 105 2 22 2 336 1 180 1 31 1 319 1 107 1 212 1 343 1 213 2 157 4 303 1 216 1 86 2 61 1 219 1 
259 1 142 2 143 2 328 1 330 1 46 1 68 1 355 1 358 1 70 2 22 2 151 1 105 2 336 1 180 1 230 1 363 1 319 1 31 1 107 1 212 1 184 1 108 1 213 2 303 1 157 4 156 1 323 1 216 1 57 1 86 2 59 1 218 1 61 1 117 1 90 1 219 1 
259 1 142 1 143 1 328 1 330 1 358 1 70 1 105 2 22 1 275 1 180 1 300 1 249 1 31 1 319 1 212 1 107 1 342 1 343 1 213 2 303 1 157 3 216 1 110 1 58 1 86 1 59 1 61 1 219 1 
309 2 259 3 143 10 328 3 311 1 330 3 67 1 353 1 105 4 336 3 178 1 180 2 52 1 212 2 107 3 321 1 213 9 157 19 303 3 79 2 216 2 109 1 236 1 190 2 86 6 61 2 40 1 63 1 66 1 219 3 
309 4 44 2 259 2 143 12 328 3 330 2 311 1 353 2 147 1 357 1 105 6 336 2 180 3 212 3 107 3 321 1 213 14 157 26 303 2 79 2 216 3 109 2 217 1 236 2 190 1 86 4 61 3 40 1 241 1 193 1 63 2 66 1 196 1 219 3 
44 1 328 4 143 21 330 4 147 1 105 6 336 4 3 1 52 1 53 1 107 5 212 3 155 1 213 20 303 4 157 41 216 3 109 3 217 1 61 3 63 3 219 4 66 1 309 4 259 5 223 1 311 1 353 2 67 1 357 1 359 1 180 3 73 1 364 1 321 1 79 4 236 1 190 1 86 8 40 1 241 1 193 1 196 1 
309 4 44 2 259 4 223 1 143 18 328 4 311 1 330 3 67 1 353 2 147 1 357 1 105 8 359 1 336 4 3 1 73 1 180 4 52 1 364 1 53 1 212 4 107 5 155 1 321 1 213 20 157 38 303 3 79 4 216 4 109 3 217 1 236 1 190 1 86 7 61 4 40 1 241 1 193 1 63 3 66 1 196 1 219 4 
309 4 44 1 259 8 223 1 143 25 328 7 311 1 330 7 353 1 147 1 357 1 105 4 359 1 336 7 3 1 180 2 52 2 364 1 53 1 211 2 212 2 107 8 155 1 321 1 213 27 157 52 303 7 79 4 216 2 109 4 217 1 236 1 190 1 86 14 61 2 40 1 241 1 193 1 63 2 66 1 196 1 219 7 
302 1 242 1 120 1 130 1 159 1 35 1 284 1 285 1 346 1 327 1 
265 1 102 1 
302 1 242 1 233 1 130 1 13 1 159 1 35 1 19 1 285 1 
242 1 302 1 221 2 209 1 120 1 16 1 130 1 159 1 35 1 47 1 284 1 285 1 24 1 179 1 115 1 374 1 4 1 327 1 
242 1 302 1 221 2 209 1 120 1 16 1 130 1 159 1 35 1 47 1 284 1 285 1 24 1 179 1 115 1 374 1 4 1 327 1 
242 1 302 1 221 2 209 1 120 1 16 1 130 1 159 1 35 1 47 1 284 1 285 1 24 1 179 1 115 1 374 1 4 1 327 1 
195 1 301 1 5 1 
195 1 301 1 5 1 
222 1 71 1 
222 1 71 1 195 1 
149 1 127 1 
242 1 221 1 265 1 102 1 358 2 149 1 20 1 179 1 300 2 4 1 209 1 302 1 28 1 127 1 130 1 33 1 159 1 35 1 285 1 254 1 110 2 237 1 58 2 59 2 239 1 89 1 374 1 
301 1 5 1 
222 1 71 1 195 1 
143 1 68 1 355 1 98 1 145 1 358 2 151 1 105 2 360 1 276 1 300 2 180 1 31 1 319 1 212 1 341 1 343 1 213 1 157 2 156 2 323 1 216 1 37 2 59 2 308 1 324 1 61 1 288 1 14 1 117 2 90 2 
352 1 263 1 187 1 68 1 156 1 355 1 323 1 55 1 161 1 151 1 337 1 117 1 64 1 90 1 
263 1 68 1 156 1 97 1 234 1 323 1 313 1 226 1 286 1 172 1 314 2 371 1 162 1 347 1 112 1 117 1 64 1 90 1 
263 1 108 1 68 1 156 2 97 1 323 1 234 1 313 1 226 1 286 1 172 1 314 2 371 1 162 1 347 1 112 1 117 2 64 1 90 2 
140 1 156 1 68 1 97 1 234 1 323 1 313 1 226 1 286 1 172 1 314 2 371 1 162 1 347 1 117 1 64 1 90 1 
45 1 
214 1 47 1 148 1 171 1 306 1 56 1 49 1 271 1 43 1 277 1 
259 2 30 1 107 2 328 2 188 5 303 2 367 10 47 5 267 5 56 5 315 1 48 5 49 5 154 2 219 2 
310 1 318 1 249 1 47 1 171 1 345 1 110 1 332 1 358 1 299 1 58 1 59 1 375 1 258 1 300 1 
310 1 260 1 197 1 156 1 203 1 55 1 332 2 306 1 56 1 49 1 114 1 271 1 348 1 117 1 43 1 90 1 277 1 
56 1 49 1 11 1 214 1 47 1 171 1 148 1 
310 1 224 1 215 1 47 1 367 1 171 1 332 1 306 1 56 1 48 1 49 1 23 1 271 1 43 1 277 1 
310 1 259 1 93 1 328 1 68 2 355 4 203 1 47 3 170 1 100 1 331 1 267 3 332 2 48 3 49 3 151 1 271 2 50 1 154 1 4 1 277 2 230 1 30 1 107 1 7 2 185 1 303 1 188 3 156 1 34 1 323 1 367 6 55 1 306 2 56 4 60 1 41 1 374 1 289 1 117 1 43 2 90 1 219 1 
328 2 202 1 203 1 147 1 47 5 332 1 299 1 48 3 49 5 300 1 154 2 249 1 107 2 303 2 158 1 109 1 345 1 306 2 110 1 217 1 56 8 58 1 114 1 59 1 258 1 63 1 219 2 310 1 259 2 171 2 267 5 357 1 358 1 315 1 271 2 277 2 318 1 188 5 79 1 367 6 241 1 375 1 43 2 196 1 
259 1 223 1 225 1 358 1 299 1 315 1 49 2 359 1 271 1 300 1 154 2 277 1 4 1 318 1 249 1 107 2 155 1 189 1 345 1 306 1 110 1 56 2 58 1 59 1 374 1 375 1 258 1 43 1 
143 1 46 1 68 1 355 1 358 3 105 2 151 1 276 1 180 1 300 2 230 1 363 1 249 2 318 1 319 1 31 1 212 1 184 1 322 1 157 1 156 1 323 1 216 1 55 1 254 1 110 2 58 2 57 1 59 3 61 1 117 1 90 1 
364 1 188 2 203 1 367 4 47 4 171 2 267 2 306 1 56 1 48 2 49 2 271 1 114 1 43 1 277 1 
149 1 302 1 250 1 130 1 327 1 
302 1 130 1 77 1 
302 1 130 1 77 1 
302 1 130 1 77 1 
302 1 130 1 124 1 
302 1 130 1 124 1 
302 1 130 1 124 1 
302 1 130 1 
242 1 35 1 
259 2 212 1 107 2 223 2 143 5 155 1 330 2 213 5 157 10 216 1 189 1 105 2 359 2 336 3 86 5 61 1 40 1 180 1 
212 1 107 1 328 1 330 1 213 2 157 2 216 1 105 2 86 1 40 1 61 1 180 1 
259 1 212 1 107 1 143 2 328 1 330 1 213 2 303 1 157 4 216 1 105 2 336 1 86 2 40 1 61 1 180 1 219 1 
44 1 212 3 143 2 223 1 330 1 67 1 213 1 157 3 216 3 105 6 359 1 336 1 86 2 40 1 61 3 25 1 180 3 
220 1 44 2 259 5 223 3 143 18 328 3 330 5 67 1 105 10 359 3 336 7 3 1 339 1 25 1 180 5 52 1 364 1 53 1 212 5 107 5 155 2 213 16 157 34 303 3 79 4 216 5 109 3 86 12 287 1 61 5 40 1 63 1 194 1 219 3 
259 1 143 4 223 1 105 2 359 1 336 2 3 1 180 1 364 1 53 1 107 1 212 1 155 1 213 4 157 8 79 1 216 1 109 1 86 2 61 1 40 1 63 1 196 1 
259 1 223 1 143 5 328 1 330 1 105 4 336 2 359 1 3 1 180 2 52 1 364 1 53 1 212 2 107 2 155 1 213 6 157 11 79 2 216 2 109 1 86 3 40 1 61 2 63 1 194 1 196 1 219 1 
44 1 259 3 223 1 143 10 328 2 330 1 147 1 357 1 105 6 359 1 336 3 3 1 180 3 364 1 53 1 212 3 107 3 155 1 213 9 157 19 303 2 79 1 216 3 109 1 217 1 86 4 61 3 40 1 241 1 194 1 63 1 196 1 219 2 
44 1 259 2 223 1 143 7 328 2 330 2 147 1 357 1 105 6 359 1 336 3 3 1 180 3 364 1 53 1 212 3 107 3 155 1 213 10 157 17 303 1 79 1 216 3 109 1 217 1 86 5 61 3 40 1 241 1 194 1 63 1 196 1 219 2 
259 1 143 4 223 1 105 2 359 1 336 2 3 1 180 1 364 1 53 1 107 1 212 1 155 1 213 4 157 8 79 1 216 1 109 1 86 2 61 1 40 1 63 1 196 1 
259 2 143 6 328 2 330 1 147 1 357 1 105 2 336 1 180 1 212 1 107 2 213 6 157 12 303 2 79 1 216 1 109 1 217 1 86 2 61 1 40 1 241 1 63 1 196 1 219 2 
44 2 259 2 223 1 143 8 328 2 330 2 147 1 357 1 105 8 359 1 336 3 3 1 180 4 364 1 53 1 212 4 107 3 155 1 213 10 157 18 303 1 79 1 216 4 109 1 217 1 86 5 61 4 40 1 241 1 63 1 194 1 196 1 219 2 
44 2 259 2 143 7 328 3 330 3 67 1 147 1 357 1 105 8 336 3 180 4 212 4 107 3 213 9 157 16 303 2 79 1 216 4 109 1 217 1 86 6 40 1 61 4 241 1 63 1 196 1 219 3 
259 1 53 1 107 1 143 4 223 3 155 1 330 3 213 3 157 7 359 3 336 3 86 6 3 2 
44 2 259 2 223 1 143 8 328 2 330 1 67 1 147 1 357 1 105 8 359 1 336 3 3 1 180 4 364 1 53 1 212 4 107 3 155 1 213 10 157 18 303 1 79 1 216 4 109 1 217 1 86 4 40 1 61 4 241 1 63 1 196 1 219 2 
364 1 44 1 259 1 53 1 107 1 212 2 155 1 143 4 223 1 330 1 213 4 157 8 216 2 105 4 86 3 336 2 359 1 3 1 61 2 180 2 
364 1 259 1 53 1 107 1 143 3 223 1 155 1 213 3 157 6 359 1 336 2 86 2 11 1 3 1 
259 1 212 1 107 1 143 2 328 1 330 1 213 2 303 1 157 4 216 1 105 2 336 1 86 2 61 1 194 1 180 1 219 1 
52 1 259 1 107 1 143 4 328 1 330 1 213 3 303 1 157 7 79 2 109 1 336 1 86 2 63 1 219 1 
44 2 259 3 223 2 328 2 143 12 330 4 105 4 359 2 336 5 3 1 25 1 180 2 52 1 364 1 53 1 211 1 107 3 212 2 155 1 213 11 157 23 303 2 79 2 216 2 109 2 86 9 192 1 61 2 219 2 
143 1 157 1 79 1 
213 1 157 1 109 1 
259 1 30 1 212 1 107 1 143 3 328 1 330 1 213 3 157 6 303 1 216 1 105 2 86 3 336 2 61 1 180 1 194 1 219 1 
259 2 143 6 328 2 330 1 147 1 357 1 105 2 336 1 180 1 212 1 107 2 213 6 157 12 303 2 79 1 216 1 109 1 217 1 86 2 61 1 40 1 241 1 63 1 196 1 219 2 
259 1 107 1 155 1 143 3 223 1 330 1 213 3 157 6 359 1 336 1 86 2 
44 1 53 1 212 1 223 1 143 2 330 1 213 1 157 3 216 1 105 2 86 2 336 1 359 1 3 1 61 1 25 1 180 1 
297 1 21 1 59 1 133 1 300 1 254 1 358 1 
198 1 133 1 254 1 370 1 358 1 69 1 297 1 228 1 191 1 21 1 59 1 300 1 
352 1 94 1 108 1 187 1 68 1 156 4 355 1 323 1 55 1 151 1 117 4 90 4 6 1 
144 1 156 2 68 2 355 1 323 1 136 1 151 1 255 1 229 1 240 1 351 1 117 2 90 2 230 1 
347 1 68 1 156 1 323 1 313 1 117 1 55 1 314 1 90 1 371 1 
108 1 341 1 156 2 68 1 355 1 323 1 226 1 151 1 360 1 117 2 90 2 
352 1 108 1 187 1 156 4 68 2 355 3 323 2 146 1 55 1 83 1 151 2 360 1 351 1 117 5 90 5 6 1 
278 1 352 1 108 1 187 1 156 4 68 2 355 3 323 2 146 1 55 1 151 2 360 1 351 1 117 5 90 5 6 1 
151 1 352 1 11 1 187 1 68 1 156 1 355 1 323 1 117 1 55 1 90 1 
46 1 68 1 156 1 355 1 323 1 55 1 254 1 110 1 358 2 151 1 58 1 59 2 12 1 300 1 117 1 230 1 90 1 363 1 
46 1 68 1 355 3 295 1 358 2 175 1 151 2 152 1 207 1 300 2 230 2 363 1 156 1 323 1 254 1 110 2 58 1 59 2 12 1 351 1 375 1 117 1 90 1 
94 1 68 1 355 3 295 1 358 2 175 1 151 2 152 1 207 1 300 2 230 2 363 1 156 2 323 1 254 1 110 2 58 1 59 2 12 1 349 1 351 1 375 1 117 2 90 2 
93 1 7 1 94 1 264 1 17 1 68 1 156 3 355 4 295 1 323 1 47 1 170 1 55 1 171 1 332 1 151 1 152 1 374 2 351 1 117 3 230 1 4 2 90 3 
93 1 7 1 94 1 68 1 156 3 355 4 295 1 323 1 47 1 170 1 55 1 171 1 332 1 151 1 60 1 152 1 374 2 351 1 117 3 230 1 4 2 90 3 
68 1 156 1 323 1 117 1 166 1 90 1 
108 1 144 1 156 6 68 3 355 3 323 2 226 1 146 1 100 1 37 1 55 2 83 1 137 1 151 2 360 1 229 1 42 1 166 1 117 7 90 7 230 1 
259 1 142 1 199 1 143 3 223 1 46 1 68 1 355 1 145 1 358 2 70 1 22 1 151 1 105 4 336 2 359 1 3 1 300 1 180 2 230 1 363 1 364 1 53 1 31 2 319 2 107 1 212 2 155 1 108 1 184 1 343 1 213 3 157 6 156 1 323 1 216 2 254 2 110 1 58 1 57 1 86 2 59 2 218 1 61 2 12 1 117 1 90 1 
197 1 93 1 47 2 148 1 332 2 299 1 49 5 50 1 300 1 4 2 154 2 249 1 7 1 107 2 155 1 156 1 214 1 55 1 345 1 306 2 110 1 56 4 58 1 60 1 59 1 258 1 117 1 310 1 259 2 223 1 355 2 170 1 171 2 358 1 315 1 20 1 271 2 359 1 277 2 318 1 189 1 41 1 374 2 375 1 289 1 43 2 90 1 
108 1 156 2 68 2 355 2 323 1 170 1 331 1 100 1 151 1 166 1 117 2 90 2 230 1 
68 1 156 1 355 1 323 1 55 1 254 1 110 1 358 2 151 1 58 1 59 2 12 1 349 1 300 1 117 1 230 1 90 1 363 1 
144 1 156 1 68 2 355 1 323 1 100 1 137 1 151 1 229 1 351 1 117 1 90 1 230 1 
91 1 262 1 121 1 98 1 358 1 59 1 308 1 14 1 300 1 
121 1 368 1 103 1 
243 1 262 1 91 1 121 1 254 1 
243 2 91 2 262 2 93 1 121 1 227 1 344 1 47 1 368 1 171 1 254 1 103 1 175 1 20 1 246 1 207 1 374 2 375 1 4 2 
132 1 312 1 153 1 10 1 26 1 173 1 356 1 326 1 
129 2 106 1 122 1 312 2 10 4 356 2 173 3 235 1 153 1 316 1 165 1 116 1 26 4 326 1 
129 1 232 1 132 1 282 1 312 1 10 2 283 1 173 1 356 1 153 1 26 2 326 1 
132 1 122 2 312 1 10 3 173 1 356 1 153 1 316 1 165 2 257 1 26 3 326 1 
272 1 366 2 134 1 173 2 
111 1 132 1 153 1 10 1 26 1 326 1 
129 1 131 1 132 1 312 1 153 1 10 2 26 2 173 1 356 1 326 1 
84 1 
132 1 312 1 153 1 10 1 26 1 173 1 356 1 326 1 
11 1 312 1 173 1 356 1 
312 1 153 1 10 1 26 1 173 1 356 1 326 1 
85 1 373 1 10 1 
132 1 122 1 312 1 354 1 10 3 173 1 356 1 153 1 316 1 165 2 26 3 326 1 
129 1 168 1 312 1 153 1 10 2 26 2 173 1 356 1 326 1 
54 1 132 1 10 1 313 1 173 1 172 1 314 1 235 1 153 1 26 1 326 1 
132 1 153 1 10 1 26 1 173 1 356 1 326 1 
132 1 312 1 153 1 10 1 26 1 356 2 326 1 
1 1 132 1 96 1 10 2 173 1 356 1 206 1 153 2 26 2 326 2 
129 2 106 1 132 1 131 1 312 1 10 3 356 1 173 2 335 1 235 1 153 1 26 3 326 1 
129 1 132 1 312 1 10 2 313 1 286 1 173 1 356 1 314 2 172 1 371 1 87 1 153 1 26 2 326 1 
129 2 168 1 106 1 132 1 312 1 10 4 160 1 356 1 173 2 235 1 153 2 26 4 326 2 
129 1 131 1 132 1 312 1 153 1 165 1 10 3 26 3 173 1 356 1 326 1 
235 1 106 1 116 1 173 1 
173 1 356 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 4 177 310 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 4 177 310 43 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 2 251 1 98 4 188 2 304 1 193 1 51 1 311 9 146 6 57 2 199 2 241 1 227 9 288 1 28 2 265 1 372 1 205 1 32 1 129 1 292 1 320 2 112 3 38 2 233 1 326 1 115 1 211 5 
48 2 251 1 98 4 188 2 304 1 193 1 51 1 311 9 146 6 57 2 199 2 241 1 227 9 288 1 28 2 265 1 372 1 205 1 32 1 129 1 292 1 320 2 112 3 38 2 233 1 326 1 115 1 211 5 
48 2 251 1 98 5 188 2 304 1 193 1 51 1 311 10 146 7 57 2 199 2 241 1 227 10 288 1 28 2 265 1 372 1 205 1 32 1 129 1 292 1 320 2 112 4 38 2 233 1 326 1 115 1 211 6 
48 2 251 1 98 3 188 2 304 1 193 1 51 1 311 7 146 4 57 2 199 1 227 7 288 1 28 2 265 1 372 1 205 1 32 1 129 1 292 1 320 2 112 2 38 2 233 1 326 1 115 1 211 4 
28 1 288 1 265 1 372 1 205 1 48 1 98 2 188 1 320 1 112 1 38 1 311 4 146 3 326 1 199 2 211 3 241 1 227 4 
288 1 28 1 372 1 205 1 48 1 129 1 37 1 320 1 254 1 38 1 311 2 233 1 57 1 286 1 211 1 227 2 
288 1 311 3 372 1 205 1 98 1 32 1 146 1 57 1 320 2 211 2 112 1 227 3 38 2 
251 1 48 1 98 4 188 1 305 1 51 1 311 9 146 7 57 1 199 2 85 1 227 9 241 1 288 1 28 1 265 1 372 1 205 1 32 1 320 2 112 3 38 2 326 1 211 5 
251 1 48 1 98 4 188 1 305 1 51 1 311 9 146 7 57 1 199 2 85 1 227 9 241 1 288 1 28 1 265 1 372 1 205 1 32 1 320 2 112 3 38 2 326 1 211 5 
161 1 84 1 344 1 
269 1 365 2 344 1 
214 2 371 2 87 2 75 1 104 2 58 1 246 2 86 2 
214 2 94 1 75 1 218 1 281 1 306 1 50 1 5 1 258 1 363 1 224 1 104 2 58 1 197 2 8 1 225 1 366 1 86 2 367 1 339 2 368 1 340 1 369 1 371 2 318 1 64 1 87 3 374 2 345 1 154 2 271 1 322 2 155 1 156 1 17 1 208 1 246 3 
176 1 214 1 371 1 330 1 87 1 75 1 243 1 104 1 246 1 86 1 
46 1 110 1 87 1 344 1 4 1 153 1 131 1 176 1 70 1 104 1 275 1 84 1 246 1 181 1 
214 1 371 1 110 1 87 1 344 1 153 1 131 1 176 1 70 2 104 1 275 1 84 1 246 1 181 2 86 1 
70 1 223 1 45 1 93 1 181 1 
101 1 259 1 70 2 223 1 84 1 45 1 344 1 181 2 
70 1 45 1 181 1 
214 1 371 1 62 1 330 1 243 1 75 1 87 1 176 1 223 1 70 1 104 1 246 1 181 1 86 1 
344 1 
101 1 70 2 223 1 13 1 84 1 45 1 344 1 181 2 
163 1 119 2 77 1 141 2 89 1 344 1 90 1 66 1 101 1 347 2 323 1 55 1 223 2 70 5 84 1 60 1 45 2 147 1 181 5 
367 1 214 1 139 1 368 1 369 1 340 1 371 1 318 1 3 1 87 2 374 1 281 1 271 1 322 1 40 1 363 1 104 1 208 1 197 1 246 2 
161 1 58 1 
214 1 47 1 371 1 87 2 104 2 58 2 246 2 201 1 86 1 
139 1 31 1 21 1 
367 1 368 1 340 1 369 1 318 1 87 1 374 1 281 1 271 1 322 1 363 1 58 1 197 1 208 1 246 1 212 1 
214 4 371 4 3 1 87 5 267 1 303 1 4 1 40 2 177 1 104 5 58 1 246 5 201 1 86 1 
176 1 214 2 371 2 330 1 268 1 87 2 104 2 246 2 
214 3 40 1 371 3 87 3 104 3 58 1 246 3 86 1 
176 1 214 1 371 1 330 1 87 1 104 1 246 1 
176 1 214 1 47 1 371 1 87 1 104 1 246 1 201 1 86 1 
214 3 94 1 3 1 75 1 218 1 281 1 5 1 221 1 255 1 363 1 224 1 104 3 58 1 197 1 225 1 201 1 366 1 86 2 367 1 339 1 368 1 369 1 340 1 371 3 318 1 64 1 110 1 87 4 374 1 345 1 153 1 131 1 176 1 154 2 271 1 322 1 155 1 40 1 156 1 70 1 275 1 208 1 246 4 181 1 
214 1 371 1 40 1 177 1 87 2 104 2 58 1 246 2 4 1 
214 3 29 1 371 3 3 1 110 1 87 3 344 1 176 1 153 1 131 1 221 1 40 2 70 1 275 1 104 3 246 3 201 1 181 1 86 1 
214 2 139 1 31 1 371 2 87 2 40 1 104 2 246 2 201 1 86 1 
367 1 368 1 340 1 369 1 318 1 87 1 374 1 281 1 271 1 322 1 363 1 58 1 197 1 208 1 246 1 
367 1 340 1 318 1 87 1 374 1 281 1 271 1 322 1 324 1 363 1 58 1 197 1 276 1 208 1 246 1 
162 1 139 2 216 1 23 1 79 1 309 1 5 1 258 2 313 1 224 1 225 1 366 1 339 4 31 2 64 1 244 1 345 1 154 2 155 2 349 1 350 1 158 1 21 2 91 1 
176 1 214 1 371 1 110 1 87 1 268 1 104 1 246 1 
171 1 219 1 
171 1 219 1 
333 1 19 1 
333 1 19 1 
333 1 19 1 
360 1 171 1 219 1 
360 1 171 1 219 1 
301 1 171 1 219 1 
235 1 333 1 222 1 19 1 171 2 219 2 
360 1 171 1 219 1 
171 1 232 1 219 1 
171 1 232 1 219 1 
171 1 232 1 219 1 
214 2 204 1 371 2 149 1 301 1 87 2 36 1 357 1 321 1 219 1 332 1 273 1 20 1 70 1 260 1 71 1 104 2 58 1 246 2 137 1 200 1 171 1 181 1 10 1 
204 3 341 1 189 2 152 1 375 1 357 2 344 1 219 2 222 1 312 1 195 1 260 2 71 2 70 2 20 1 198 1 171 2 10 2 181 2 
28 1 48 1 188 1 
28 1 48 1 286 1 
373 1 48 3 217 1 188 2 319 1 286 1 
373 1 48 2 217 1 188 1 179 1 286 1 
373 1 48 2 217 2 188 1 286 1 
162 1 73 1 216 1 119 1 23 1 141 1 332 1 257 1 101 1 55 1 223 4 84 1 200 1 365 3 147 2 105 1 370 1 149 1 244 1 269 1 89 3 344 2 346 2 294 2 347 1 70 5 44 2 134 1 45 1 247 1 181 5 182 1 
162 3 96 1 216 3 119 2 77 1 23 3 141 2 101 1 238 1 55 1 223 7 84 1 365 9 147 6 105 2 370 1 173 1 149 4 244 3 269 3 376 5 89 8 344 5 294 6 272 1 347 2 69 1 70 9 44 6 134 3 45 6 247 2 93 5 181 9 328 1 
73 1 162 1 119 1 216 1 77 1 23 1 141 1 223 2 84 1 365 4 147 2 105 1 149 1 244 1 269 2 89 3 344 3 346 1 294 2 347 1 70 3 44 2 134 1 247 1 182 1 181 3 
73 1 162 2 96 1 119 1 216 2 77 1 23 2 141 1 223 3 84 1 365 7 147 4 105 1 149 2 244 2 269 3 89 5 344 4 346 2 294 4 272 1 347 1 70 4 44 4 134 2 247 1 181 4 182 1 328 1 
161 1 271 1 290 1 
271 1 34 1 
331 1 
271 1 318 1 281 1 
271 1 283 1 
271 1 318 1 
271 3 290 2 318 1 285 1 281 1 27 1 
162 1 339 7 291 1 23 1 151 1 88 1 229 2 293 1 194 1 16 1 155 3 258 4 349 2 364 1 350 3 103 1 240 1 
162 1 339 7 291 1 23 1 151 1 88 1 229 2 293 1 194 1 16 1 155 3 258 4 349 2 364 1 350 3 103 1 240 1 
162 1 339 7 291 1 23 1 151 1 88 1 229 2 293 1 194 1 82 1 16 1 155 3 258 4 349 2 364 1 350 3 103 1 240 1 
162 4 216 3 187 3 23 4 220 4 194 2 5 1 258 16 364 1 103 1 224 1 240 1 317 1 339 31 64 1 291 2 151 2 35 1 88 2 229 3 244 3 343 1 293 1 345 1 15 1 154 2 39 1 16 5 155 15 349 5 350 10 136 1 134 3 352 1 
162 1 23 1 142 1 5 2 194 1 258 5 224 2 103 1 240 1 339 9 64 2 291 1 151 1 229 2 88 1 378 1 345 2 293 1 154 4 16 1 155 4 349 3 350 4 352 1 
280 1 48 2 252 1 188 1 78 1 307 1 311 2 54 1 363 1 146 1 122 1 57 1 197 1 286 1 227 2 28 1 288 1 264 1 372 1 205 1 374 1 319 1 320 1 38 1 113 1 322 1 132 1 208 1 116 1 211 1 
280 1 48 2 252 1 188 1 78 1 311 3 6 1 54 1 363 1 146 2 122 1 57 1 197 1 286 1 170 1 227 3 28 1 264 1 372 1 205 1 374 1 319 1 320 1 65 1 38 1 113 1 322 1 132 1 208 1 211 1 
280 1 48 2 188 1 78 1 311 2 6 1 54 1 363 1 146 2 122 1 57 1 197 1 286 1 170 1 227 2 28 1 264 1 372 1 205 1 374 1 319 1 322 1 132 1 208 1 211 1 
121 1 78 2 311 1 363 1 57 2 197 1 202 1 227 1 264 2 340 1 318 1 374 1 320 1 65 1 38 1 271 1 322 1 68 1 132 2 18 1 325 1 208 1 117 1 
280 1 48 2 252 1 188 1 78 1 311 1 54 1 363 1 122 1 57 1 197 1 286 1 170 1 227 1 28 1 288 1 264 1 374 1 319 1 320 1 38 1 113 1 322 1 132 1 208 1 116 1 
83 1 
46 1 99 1 49 1 141 1 4 1 282 1 101 3 237 2 55 1 104 1 197 2 147 2 9 1 340 2 63 1 109 1 110 1 344 2 153 1 245 2 347 1 18 1 70 5 114 1 208 1 246 1 247 1 299 1 210 4 215 2 119 1 355 1 165 2 121 1 363 1 124 2 84 1 125 2 365 2 26 1 318 1 87 1 374 2 269 2 89 2 231 2 131 1 176 1 271 1 322 2 42 1 234 1 275 1 45 6 181 5 
46 1 355 1 4 1 282 1 101 1 104 1 9 1 63 1 109 1 110 1 87 1 13 1 153 1 131 1 176 1 245 1 70 3 275 1 246 1 45 2 210 2 181 3 
46 1 355 1 165 1 4 1 282 1 101 1 104 1 84 1 9 1 63 1 109 1 110 1 87 1 13 1 344 1 153 1 131 1 176 1 70 3 275 1 246 1 45 1 210 3 181 3 
46 1 355 1 165 1 4 1 282 1 101 1 237 1 104 1 84 1 9 1 63 1 109 1 110 1 87 1 13 1 344 1 153 1 131 1 176 1 245 1 70 3 275 1 246 1 45 2 210 3 181 3 
215 2 46 1 119 1 355 1 165 4 141 1 143 1 4 1 282 1 284 1 101 3 237 4 55 1 104 1 124 2 125 2 84 5 147 1 9 1 106 1 33 1 63 1 109 1 110 1 87 1 13 1 269 2 89 1 231 2 344 5 153 1 131 1 176 1 245 4 347 1 70 5 234 1 275 1 298 1 246 1 45 7 299 1 210 6 181 5 
46 1 99 1 141 1 4 1 282 1 101 2 237 2 55 1 104 1 147 1 9 1 63 1 110 1 109 1 344 2 153 1 245 2 347 1 70 4 246 1 299 1 210 4 215 2 119 1 355 1 165 2 124 2 125 2 84 1 365 2 87 1 269 2 89 1 231 2 176 1 131 1 275 1 234 1 45 4 181 4 
215 2 46 1 119 1 355 1 165 2 141 1 143 1 4 1 282 1 101 2 284 1 237 2 55 1 104 1 124 2 84 1 125 2 147 1 9 1 63 1 109 1 110 1 87 1 269 2 89 1 231 2 344 1 153 1 131 1 176 1 245 2 347 1 70 4 234 1 275 1 298 1 246 1 45 4 299 1 210 4 181 4 
215 2 46 1 119 1 355 1 165 2 141 1 143 1 4 1 282 1 101 2 284 1 237 2 55 1 104 1 124 2 84 1 125 2 147 1 9 1 63 1 109 1 110 1 87 1 269 2 89 1 231 2 344 1 153 1 131 1 176 1 245 2 347 1 70 4 234 1 275 1 298 1 246 1 45 4 299 1 210 4 181 4 
185 2 215 2 46 1 119 1 355 1 165 2 141 1 4 1 282 1 359 1 101 2 284 1 237 2 55 1 104 1 84 1 365 2 287 1 147 1 9 1 63 1 109 1 110 1 87 1 89 1 231 2 344 1 153 1 131 1 176 1 245 2 347 1 70 4 234 1 275 1 246 1 45 4 327 2 180 1 210 4 181 4 
215 2 46 1 119 1 355 1 165 3 141 1 143 1 4 1 282 1 101 2 284 1 237 3 55 1 104 1 124 2 84 1 125 2 147 1 9 1 63 1 33 1 109 1 110 1 87 1 269 2 89 1 231 2 344 1 153 1 131 1 176 1 245 3 347 1 70 4 234 1 275 1 298 1 246 1 45 5 299 1 210 5 181 4 
215 2 46 1 119 1 355 1 165 3 141 1 143 1 4 1 282 1 101 2 284 1 237 3 55 1 104 1 124 2 84 1 125 2 147 1 9 1 63 1 33 1 109 1 110 1 87 1 269 2 89 1 231 2 344 1 153 1 131 1 176 1 245 3 347 1 70 4 234 1 275 1 298 1 246 1 45 5 299 1 210 5 181 4 
185 2 46 1 99 1 141 1 4 1 282 1 101 2 237 2 55 1 104 1 287 1 147 1 9 1 63 1 110 1 109 1 344 1 153 1 245 2 347 1 70 4 246 1 210 4 215 2 119 1 355 1 165 2 84 1 365 2 87 1 89 1 231 2 176 1 131 1 275 1 234 1 327 2 45 4 181 4 
161 1 162 1 139 1 23 1 5 1 194 1 258 3 313 1 103 1 224 1 58 2 225 1 240 1 366 1 339 6 31 1 64 1 88 1 229 1 345 1 293 1 154 2 155 3 349 2 350 2 21 1 
160 1 162 2 139 11 216 2 186 1 187 3 23 1 306 1 220 3 5 2 258 8 224 2 58 1 225 1 366 2 127 1 339 14 30 1 31 4 64 2 244 1 343 1 345 2 15 1 154 4 16 1 155 6 156 1 349 1 350 2 135 1 21 11 134 2 
160 1 214 1 0 1 164 1 3 1 281 1 306 1 5 1 258 1 363 1 224 1 104 1 58 1 197 1 225 1 366 1 367 1 368 1 339 2 369 1 340 1 31 1 371 1 318 1 64 1 87 2 374 1 345 1 271 1 154 2 322 1 40 1 155 1 156 1 351 1 208 1 246 2 212 1 
94 2 139 7 3 1 190 2 281 2 194 1 5 3 103 1 104 1 58 2 197 3 240 1 339 20 340 1 64 3 244 2 293 1 345 3 154 6 16 4 155 10 349 4 156 1 350 8 208 2 246 3 21 7 209 2 214 1 160 1 162 3 216 2 23 3 167 1 306 1 308 2 258 10 363 2 261 1 224 3 170 1 225 3 366 3 367 2 368 2 228 1 369 2 31 7 371 1 318 2 87 3 374 3 229 1 88 1 271 2 270 2 322 3 40 1 134 2 
214 1 236 1 120 1 121 1 306 1 307 1 50 2 5 2 258 1 363 2 313 1 104 1 224 2 197 8 315 1 170 1 225 2 366 2 339 2 340 2 371 1 318 2 64 2 108 1 150 1 87 1 374 8 345 2 271 3 154 4 322 7 40 1 155 1 156 1 18 1 178 1 72 1 208 2 246 1 
214 1 160 1 118 1 162 1 139 1 216 1 23 1 5 1 258 1 224 1 104 1 201 1 225 1 366 1 86 1 339 3 31 1 371 1 64 1 87 1 244 1 345 1 154 2 155 2 349 1 350 1 21 1 246 1 134 1 
162 1 139 1 339 2 31 1 216 1 64 1 345 1 5 1 154 2 16 1 258 2 350 1 313 1 224 1 21 1 91 1 225 1 366 1 
139 1 339 2 31 1 64 1 23 1 244 1 345 1 5 1 309 1 154 2 155 2 349 1 350 1 313 1 224 1 21 1 225 1 366 1 
162 1 139 2 339 4 31 2 216 1 64 1 23 1 244 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 313 1 224 1 21 2 134 1 225 1 366 1 
162 1 139 1 339 2 31 1 216 1 120 1 64 1 345 1 5 1 154 2 16 1 258 2 350 1 224 1 21 1 91 1 225 1 366 1 
139 1 339 2 31 1 120 1 64 1 23 1 244 1 345 1 5 1 309 1 154 2 155 2 349 1 350 1 224 1 21 1 225 1 366 1 
162 1 139 2 339 4 31 2 216 1 120 1 64 1 23 1 244 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 224 1 21 2 134 1 225 1 366 1 
162 1 139 2 339 4 31 2 216 1 64 1 23 1 244 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 224 1 21 2 134 1 225 1 366 1 
94 1 281 1 306 1 5 1 258 1 363 1 224 1 58 1 197 1 225 1 366 1 367 1 339 2 368 1 369 1 340 1 318 1 64 1 87 1 374 1 345 1 271 1 154 2 322 1 155 1 156 1 208 1 246 1 
281 1 306 1 5 1 258 1 363 1 224 1 58 1 197 1 262 1 225 1 366 1 367 1 339 2 340 1 318 1 64 1 87 1 374 1 345 1 271 1 154 2 322 1 155 1 156 1 324 1 208 1 276 1 246 1 
160 1 162 1 139 2 339 4 31 2 216 1 64 1 23 1 244 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 224 1 21 2 134 1 225 1 366 1 
162 1 139 2 94 1 216 1 23 1 281 1 307 1 308 1 5 1 258 2 363 1 224 1 197 1 225 1 366 1 367 1 339 4 368 1 31 2 369 1 318 1 64 1 87 1 374 1 244 1 345 1 271 1 154 2 16 1 322 1 155 2 349 1 350 2 208 1 21 2 246 1 134 1 
214 1 160 1 162 1 139 1 216 1 23 1 5 1 258 2 224 1 104 1 201 1 225 1 366 1 86 1 339 3 31 1 371 1 107 1 64 1 87 1 244 1 345 1 154 2 16 1 155 1 350 1 246 1 134 1 21 1 
162 3 216 3 187 1 23 3 142 1 220 2 5 2 52 1 258 9 224 2 337 1 339 19 64 2 244 3 14 1 379 1 343 1 345 2 15 1 154 4 16 3 348 1 155 10 349 3 350 6 296 2 297 2 157 1 134 3 22 1 
1 1 162 3 216 3 187 2 23 2 142 1 166 1 220 2 5 3 52 1 258 14 169 1 56 1 224 3 126 1 337 2 339 26 289 1 64 3 244 2 379 2 343 2 345 3 154 6 16 2 348 1 155 12 349 2 350 4 296 4 297 1 157 1 352 2 134 3 
1 1 187 3 142 1 5 3 194 1 52 1 56 1 103 1 337 1 240 1 339 41 289 1 64 3 244 4 343 3 345 3 293 1 15 1 154 6 16 4 155 21 348 1 349 4 350 8 296 4 157 1 297 1 352 1 22 1 162 5 216 4 23 5 166 1 220 4 81 1 258 20 169 1 224 3 126 1 88 1 229 1 379 2 134 4 
1 1 162 5 216 4 187 3 23 4 166 1 142 1 220 4 81 1 194 1 5 4 52 1 258 20 169 1 56 1 103 1 224 4 126 1 337 1 240 1 339 38 289 1 64 4 229 1 88 1 244 3 379 2 343 3 293 1 345 4 15 1 154 8 16 3 348 1 155 18 349 4 350 7 296 4 297 1 157 1 352 2 134 4 22 1 
1 1 162 8 216 7 187 4 23 8 166 1 142 1 220 4 194 1 5 2 52 1 258 27 169 1 56 1 103 1 224 2 126 1 337 1 240 1 127 2 339 52 289 1 64 2 229 1 88 1 244 7 379 1 343 2 293 1 345 2 15 2 154 4 16 7 348 1 155 25 349 7 350 14 296 4 297 1 157 1 352 1 134 7 
222 1 341 1 206 1 71 1 260 1 375 1 171 1 357 1 10 1 219 1 
301 1 137 1 
362 1 334 1 133 1 71 1 260 1 171 1 357 1 10 1 219 1 
148 1 360 1 
235 1 174 1 232 1 
204 2 341 1 189 1 152 1 375 1 357 1 344 1 219 1 222 1 312 1 195 1 20 1 70 1 260 1 71 1 171 1 181 1 10 1 
204 2 341 1 189 1 152 1 375 1 357 1 344 1 219 1 222 1 312 1 195 1 20 1 70 1 260 1 71 1 171 1 181 1 10 1 
204 2 341 1 189 1 152 1 375 1 357 1 344 1 219 1 222 1 312 1 195 1 20 1 70 1 260 1 71 1 171 1 181 1 10 1 
235 1 148 1 360 1 
235 1 148 1 360 1 
174 1 232 1 
235 1 174 1 232 1 
273 1 321 1 
214 2 301 1 189 1 357 1 100 1 219 1 332 1 223 1 260 1 104 2 58 1 200 1 171 1 10 1 204 1 371 2 149 1 87 2 36 1 152 1 321 1 273 1 70 1 71 1 246 2 137 1 181 1 
160 1 97 1 306 1 50 2 5 1 258 1 363 1 336 1 104 2 224 1 197 2 225 1 366 1 339 2 318 1 242 1 64 1 108 1 87 2 374 2 130 1 345 1 271 1 154 2 322 2 155 1 156 1 274 1 72 1 208 1 246 2 
28 1 278 1 95 1 48 2 280 1 188 1 374 2 319 1 307 1 113 1 256 1 322 2 363 1 132 1 122 1 208 1 197 2 286 1 170 1 
28 1 48 2 280 1 188 1 374 1 319 1 113 1 256 1 322 1 132 1 363 1 122 1 197 1 208 1 286 1 170 1 159 1 
278 1 340 1 318 1 121 1 374 1 191 1 271 1 322 1 363 1 132 1 18 1 208 1 197 1 117 1 
28 1 278 1 95 1 48 2 280 1 188 1 374 1 319 1 113 1 256 1 322 1 132 1 363 1 122 1 208 1 197 1 286 1 170 1 
354 1 
66 1 161 1 84 1 60 1 89 1 147 1 344 1 
119 1 141 1 101 1 55 1 124 1 125 1 84 1 365 1 147 1 269 1 89 1 344 2 347 1 70 1 45 1 299 1 181 1 
49 1 141 4 190 2 281 3 144 2 283 2 101 3 55 4 335 2 197 3 60 1 147 8 340 1 290 2 12 1 244 2 344 8 66 1 294 6 347 4 70 5 208 4 247 2 249 2 162 2 119 4 216 2 74 1 23 2 307 1 363 3 314 2 123 2 84 2 365 12 27 1 172 1 266 2 318 3 34 3 374 3 269 6 230 1 89 9 271 10 322 3 381 1 275 2 44 6 134 2 45 5 138 2 183 2 181 5 
1 1 162 2 119 2 216 2 49 1 187 1 23 2 141 2 166 1 220 1 101 1 169 1 55 2 196 1 56 1 314 2 84 2 365 6 147 5 289 1 269 3 244 2 89 8 343 1 344 5 294 5 347 2 70 1 44 5 134 2 45 1 247 1 138 1 181 1 250 1 
162 2 214 1 119 1 330 1 75 1 23 1 141 1 143 1 194 1 55 1 314 2 104 1 25 1 147 2 86 1 371 1 62 1 87 1 243 1 88 1 89 2 293 1 176 1 347 1 70 1 246 1 138 1 181 1 
119 1 141 1 89 1 344 1 66 1 347 1 55 1 60 1 84 1 147 1 
162 2 216 2 23 2 269 5 244 2 190 1 89 5 344 5 294 5 314 2 44 5 134 2 365 10 138 1 147 5 
101 1 70 1 84 1 45 1 344 1 181 1 
119 2 74 2 121 1 77 1 49 2 141 2 101 2 363 1 55 1 59 1 197 4 26 1 147 2 340 2 318 1 374 4 175 1 89 2 271 1 347 2 322 4 18 1 381 1 70 3 208 1 114 1 45 4 247 2 181 3 
214 2 94 1 75 1 218 1 281 1 5 1 363 1 224 1 104 2 58 1 197 1 225 1 366 1 86 2 367 1 339 1 368 1 340 1 369 1 371 2 318 1 64 1 87 3 374 1 345 1 154 2 271 1 322 1 155 1 156 1 208 1 246 3 
119 1 49 1 229 1 269 2 141 1 89 1 344 4 294 2 347 1 55 1 44 2 84 2 365 4 147 2 247 1 
71 1 248 1 10 1 
71 1 248 1 10 1 
273 1 71 1 375 1 10 1 213 1 
71 1 248 1 10 1 
207 1 71 1 10 1 
207 1 71 1 10 1 
207 1 71 1 10 1 
71 1 10 1 
171 1 219 1 
162 1 339 8 64 2 23 1 229 1 88 1 293 1 345 2 5 2 194 1 154 4 16 1 155 4 258 4 349 2 350 3 224 2 103 1 352 1 240 1 
161 1 162 1 339 6 23 1 229 1 88 1 293 1 194 1 155 3 258 3 349 2 350 2 103 1 240 1 
162 1 339 4 216 1 64 1 23 1 244 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 224 1 134 1 338 1 
162 1 339 7 216 1 187 1 23 1 244 1 343 1 220 2 15 1 16 1 155 4 258 3 349 1 350 2 134 1 
162 3 329 1 216 2 186 1 187 2 23 3 220 2 194 2 5 2 258 11 103 1 224 2 240 1 127 1 339 23 64 2 229 1 88 2 244 2 293 1 345 2 15 1 154 4 16 4 155 12 349 5 350 9 134 2 352 2 
339 1 155 1 220 1 
339 1 258 1 187 1 
162 1 339 6 216 1 64 1 23 1 244 1 190 1 345 1 5 1 154 2 16 1 155 3 258 3 349 2 350 3 224 1 134 1 338 1 
1 1 162 2 216 2 187 1 23 2 142 1 166 1 220 1 5 1 258 6 169 1 56 1 224 1 339 12 289 1 64 1 244 2 343 1 345 1 154 2 16 1 155 6 349 1 350 2 134 2 
162 1 339 6 23 1 88 1 293 1 194 1 16 1 258 3 155 3 349 1 350 2 
329 1 339 3 64 1 88 1 345 1 194 1 5 1 154 2 16 1 258 1 155 2 349 1 350 2 224 1 103 1 352 1 240 1 
162 2 339 10 64 1 23 2 88 2 142 1 345 1 293 1 5 1 194 2 154 2 16 2 258 5 155 5 349 3 350 5 224 1 25 1 
162 1 5 1 339 2 154 2 16 1 216 1 258 2 64 1 350 1 224 1 142 1 345 1 
162 1 339 4 216 1 64 1 23 1 244 1 142 1 345 1 5 1 154 2 16 1 155 2 258 2 349 1 350 2 224 1 134 1 
329 1 339 3 64 3 88 1 142 1 345 3 5 3 194 1 154 6 16 1 155 2 258 1 349 1 350 2 224 3 352 1 22 1 
329 1 162 5 216 3 187 3 23 5 142 1 220 4 194 3 5 5 258 16 103 1 224 5 338 1 240 1 317 1 339 34 64 5 35 1 229 1 88 3 244 3 343 1 293 2 345 5 15 1 39 1 154 10 16 5 155 18 349 7 350 12 352 2 134 3 22 1 
162 1 187 1 23 1 142 1 220 1 5 1 194 1 258 4 169 1 224 1 103 1 240 1 339 8 64 1 229 1 88 1 343 1 345 1 293 1 154 2 155 4 349 2 350 2 
162 2 216 1 187 1 23 1 142 1 220 2 194 1 5 2 258 6 169 1 103 1 224 2 338 1 240 1 339 11 64 2 229 1 88 1 343 1 293 1 345 2 15 1 154 4 16 1 155 5 349 2 350 3 134 1 
1 1 162 3 216 2 187 1 23 3 142 1 166 1 220 1 194 1 5 3 258 9 169 1 56 1 103 1 224 3 338 1 240 1 339 19 289 1 64 3 229 1 88 1 244 2 343 1 293 1 345 3 154 6 16 1 155 10 349 3 350 4 134 2 352 1 
1 1 162 3 216 2 187 1 23 2 142 1 166 1 220 1 194 1 5 3 258 10 169 1 56 1 103 1 224 3 338 1 240 1 339 17 289 1 64 3 229 1 88 1 244 1 343 1 293 1 345 3 154 6 16 2 155 7 349 3 350 5 352 1 134 2 
162 1 187 1 23 1 142 1 220 1 5 1 194 1 258 4 169 1 224 1 103 1 240 1 339 8 64 1 229 1 88 1 343 1 345 1 293 1 154 2 155 4 349 2 350 2 
1 1 162 2 216 2 187 1 23 2 142 1 166 1 220 1 5 1 258 6 169 1 56 1 224 1 339 12 289 1 64 1 244 2 343 1 345 1 154 2 16 1 155 6 349 1 350 2 134 2 
1 1 162 3 216 2 187 1 23 2 142 1 166 1 220 1 194 1 5 4 258 10 169 1 56 1 103 1 224 4 338 1 240 1 339 18 289 1 64 4 229 1 88 1 244 1 343 1 293 1 345 4 154 8 16 2 155 8 349 3 350 5 134 2 352 2 
1 1 162 3 216 3 187 1 23 2 142 1 166 1 220 1 5 4 258 9 169 1 56 1 224 4 339 16 289 1 64 4 244 2 343 1 345 4 154 8 16 3 155 7 349 3 350 6 134 3 352 2 22 1 
162 1 339 7 23 1 88 3 293 1 194 3 16 3 155 4 258 3 349 3 350 6 103 1 240 2 
1 1 162 3 216 2 187 1 23 2 142 1 166 1 220 1 194 1 5 4 258 10 169 1 56 1 103 1 224 4 240 1 339 18 289 1 64 4 229 1 88 1 244 1 343 1 293 1 345 4 154 8 16 1 155 8 349 3 350 4 134 2 352 2 22 1 
310 1 177 1 4 1 
310 1 53 1 177 1 302 1 43 1 300 1 4 1 263 1 
161 1 271 1 322 1 340 1 318 1 363 1 18 1 121 1 374 1 208 1 197 1 
367 1 214 1 340 1 369 1 371 1 318 1 87 2 374 1 281 1 271 1 322 1 40 1 363 1 104 1 58 1 208 1 197 1 246 2 
214 1 74 1 281 2 283 1 363 1 104 2 58 1 197 1 367 1 369 1 371 2 318 2 110 1 87 2 374 1 131 1 176 1 271 3 322 1 40 1 208 1 246 2 249 1 
214 1 74 1 281 2 283 1 363 1 104 2 58 1 197 2 367 1 371 2 318 2 110 1 87 2 374 2 131 1 176 1 271 3 322 2 40 1 295 1 276 1 208 1 246 2 249 1 
74 1 281 1 283 1 363 1 197 3 84 1 316 1 226 1 290 1 340 1 318 1 34 1 374 3 344 1 271 4 322 3 295 1 70 2 275 1 208 1 45 1 181 2 249 1 
340 1 290 1 318 1 34 1 74 1 374 3 281 1 344 1 283 1 271 4 322 3 295 1 363 1 70 2 275 1 208 1 197 3 84 1 45 1 249 1 181 2 183 1 
236 1 322 1 363 1 374 1 208 1 197 1 
184 1 236 1 340 2 318 2 150 1 374 7 281 1 50 1 307 1 271 3 322 6 361 1 41 1 363 2 178 1 72 1 197 7 208 3 315 1 170 1 27 1 
94 1 139 1 97 1 281 1 5 2 194 1 104 1 103 1 197 1 58 2 240 1 339 6 64 2 345 2 293 1 154 4 155 3 349 2 350 2 208 1 246 2 21 1 209 1 214 1 160 1 162 1 23 1 307 1 308 1 258 3 363 1 224 2 225 2 366 2 367 1 368 1 31 1 369 1 371 1 318 1 87 2 374 1 88 1 229 1 271 1 322 1 40 1 
119 2 141 2 144 1 101 1 55 2 223 1 123 1 335 1 197 1 84 1 60 1 147 1 340 1 290 1 34 1 374 1 89 1 344 1 66 1 271 2 322 1 347 2 381 1 70 3 275 1 45 2 181 3 183 1 
236 1 290 1 318 1 12 1 374 2 281 1 307 1 271 2 322 2 363 1 197 2 208 2 27 1 
340 1 318 1 121 1 374 4 192 1 307 1 271 1 322 4 295 1 18 1 363 1 208 1 197 4 
184 1 318 1 342 1 74 1 374 2 281 1 80 1 167 1 271 1 322 2 361 1 363 1 197 2 208 2 
28 1 322 1 340 1 48 1 280 1 363 1 374 1 208 1 197 1 286 1 
271 1 322 2 318 1 242 1 363 1 72 1 374 2 208 1 197 2 170 1 307 1 
340 1 318 2 74 1 121 1 150 1 374 5 192 1 307 1 271 3 322 4 18 1 363 2 72 1 178 1 197 5 208 2 
340 1 318 2 74 1 121 1 356 1 374 5 192 1 307 1 271 3 322 4 18 1 363 2 72 1 178 1 197 5 208 2 
367 1 214 1 340 1 371 1 318 1 87 2 374 1 281 1 271 1 322 1 40 1 363 1 104 1 58 1 208 1 197 1 276 1 246 2 
184 1 318 1 74 1 374 1 281 1 271 1 322 1 361 1 41 1 363 1 197 1 208 2 27 1 
239 1 58 1 61 1 353 1 358 1 
140 1 110 1 344 1 358 1 176 1 131 1 153 1 221 1 102 1 380 1 239 2 223 1 70 2 275 1 58 1 84 1 181 2 353 2 61 2 
87 1 130 1 358 1 239 1 274 1 336 1 104 1 246 1 353 1 
140 1 380 1 358 1 
161 1 372 1 205 1 211 1 
311 1 372 1 205 1 320 1 211 1 227 1 38 1 
264 1 311 1 57 1 
288 1 203 1 372 1 205 1 253 1 129 2 320 1 38 1 311 3 92 1 211 1 227 3 
311 2 372 1 205 1 146 1 199 1 320 1 211 1 227 2 38 1 
28 1 288 1 311 1 48 1 98 1 188 1 326 1 320 1 211 1 227 1 38 1 
288 1 311 1 372 1 320 1 211 1 227 1 38 1 
288 1 311 1 372 2 205 1 320 1 227 1 38 1 
288 1 11 1 311 2 372 1 24 1 111 1 320 2 211 1 227 2 38 2 
288 1 372 1 205 1 251 1 98 1 320 1 112 1 38 1 51 1 311 3 146 2 211 2 227 3 
288 1 28 1 372 1 205 1 48 2 188 1 319 1 320 1 38 1 311 2 7 1 146 1 286 1 211 1 227 2 
288 1 311 4 372 1 205 1 98 1 146 2 199 1 320 2 211 2 112 1 241 1 227 4 38 2 
288 1 311 1 372 1 205 1 320 1 211 1 227 1 38 1 
372 2 205 2 98 1 253 1 129 1 377 1 320 1 112 1 38 1 311 4 146 2 92 1 211 3 227 4 
288 1 372 1 205 1 76 1 320 1 305 1 38 1 311 2 168 1 146 1 211 1 227 2 
288 1 311 3 372 1 205 1 253 2 129 2 320 1 92 1 211 1 277 1 227 3 38 1 
67 1 145 2 2 1 211 2 
288 1 279 1 311 1 320 1 227 1 38 1 
288 1 311 2 372 1 205 1 251 1 146 1 320 1 211 1 227 2 38 1 
128 1 
288 1 311 1 372 1 205 1 320 1 211 1 227 1 38 1 
288 1 311 3 372 1 251 1 205 1 146 1 129 1 320 1 211 1 227 3 38 1 
98 1 377 1 211 1 112 1 
372 1 211 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
155 3 365 3 295 1 92 2 357 1 263 1 150 1 215 1 379 2 73 1 271 2 104 1 34 1 
365 9 155 9 92 5 286 1 263 1 346 1 113 1 215 6 73 3 61 1 271 2 225 1 34 1 193 1 294 2 295 1 323 2 144 1 357 4 249 2 327 1 125 1 150 1 44 1 333 2 379 2 132 1 104 2 
365 9 155 9 92 5 286 1 263 1 346 1 113 1 215 6 73 3 61 1 271 2 225 1 34 1 193 1 294 2 295 1 323 2 144 1 357 4 249 2 327 1 125 1 150 1 44 1 333 2 379 2 132 1 104 2 
365 10 155 10 92 6 286 1 263 1 346 1 113 1 215 7 73 4 61 1 271 2 225 1 34 1 193 1 294 2 295 1 323 2 144 1 357 5 249 2 327 1 125 1 150 1 44 1 333 2 379 2 132 1 104 2 
365 7 155 7 92 4 263 1 346 1 113 1 215 4 73 2 61 1 271 2 225 1 34 1 193 1 294 2 295 1 323 2 144 1 357 3 249 1 327 1 125 1 150 1 44 1 333 2 379 2 132 1 104 2 
294 1 155 4 365 4 323 1 92 3 286 1 249 2 357 2 327 1 263 1 150 1 215 3 333 1 379 1 73 1 271 1 61 1 34 1 
155 2 365 2 248 1 323 1 92 1 24 1 367 1 263 1 346 1 150 1 333 1 379 1 132 1 271 1 104 1 34 1 
365 9 155 9 92 5 286 1 263 1 27 1 214 1 113 1 215 7 73 3 271 2 225 1 61 1 34 1 294 1 295 1 323 1 357 4 249 2 327 1 150 1 333 1 379 2 104 1 
365 9 155 9 92 5 286 1 263 1 27 1 214 1 113 1 215 7 73 3 271 2 225 1 61 1 34 1 294 1 295 1 323 1 357 4 249 2 327 1 150 1 333 1 379 2 104 1 
322 1 364 1 120 1 183 1 260 1 354 1 37 1 99 1 360 1 187 1 85 1 204 1 12 1 32 1 
303 1 
339 1 120 1 303 1 29 1 85 2 350 1 204 2 139 1 
154 1 339 1 120 2 76 1 353 1 133 1 3 1 98 2 160 2 126 1 303 1 29 1 85 5 253 1 204 5 131 1 221 2 139 2 140 1 
339 1 303 1 65 1 
236 2 62 1 303 1 
364 2 183 2 12 2 354 2 37 1 48 1 32 2 360 2 
21 2 364 3 340 1 183 2 108 1 68 1 110 1 25 1 111 2 345 1 11 2 349 1 316 1 267 1 317 1 12 3 291 1 166 2 32 2 194 1 97 1 171 1 354 2 37 1 274 1 38 1 174 1 360 2 376 1 202 1 40 1 84 1 176 2 86 1 304 1 129 1 48 1 
322 1 187 1 364 1 183 1 12 1 354 1 37 1 32 1 99 1 360 1 
364 1 339 1 99 1 302 1 303 1 239 1 85 1 370 1 12 1 204 1 32 1 292 1 243 1 244 1 
364 1 339 1 183 1 354 1 99 1 360 1 303 1 239 1 85 2 204 2 12 1 32 1 292 1 243 1 244 1 
120 1 85 1 204 1 139 1 343 1 
339 1 120 1 303 1 29 1 85 2 204 2 139 1 207 1 
85 1 204 1 139 1 
364 2 183 1 354 1 161 1 360 1 12 2 32 2 48 2 168 1 
66 1 318 1 200 1 
364 1 97 1 274 1 38 1 111 1 174 1 40 1 84 1 11 1 95 1 176 1 316 1 267 1 12 1 291 1 48 1 
364 2 183 1 97 1 354 1 4 1 274 1 38 1 111 1 174 1 40 1 84 1 278 1 11 1 176 1 316 1 267 1 12 2 291 1 318 1 32 1 
278 1 364 3 183 3 12 3 354 3 48 1 32 3 360 1 
187 1 364 1 183 1 12 1 354 1 32 1 99 1 
364 1 183 1 12 1 354 1 32 1 168 1 99 1 360 1 161 1 
21 1 364 4 340 1 183 3 108 1 4 1 111 1 161 1 345 1 11 1 349 1 316 1 239 1 267 1 291 1 12 4 166 2 32 3 292 1 243 1 244 1 15 1 194 1 97 1 171 1 354 3 37 1 274 1 38 1 99 1 174 1 360 2 202 1 40 1 124 1 84 1 278 1 176 1 85 1 86 1 304 1 129 1 204 1 48 1 
364 2 278 1 183 1 370 1 12 2 354 1 48 1 32 2 119 1 
364 3 183 3 354 3 4 1 99 1 360 1 161 1 124 1 278 2 303 1 85 1 239 1 204 1 12 3 32 3 292 1 243 1 244 1 91 1 
364 2 183 2 354 2 200 1 161 1 360 1 278 1 12 2 318 1 32 2 
364 1 97 1 274 1 38 1 111 1 174 1 40 1 84 1 11 1 176 1 316 1 267 1 12 1 291 1 48 1 
364 1 97 1 274 1 38 1 111 1 290 1 174 1 40 1 84 1 11 1 176 1 240 1 267 1 12 1 48 1 
21 4 182 1 68 2 211 1 345 1 264 1 54 1 349 1 268 1 318 2 166 2 194 1 171 1 199 1 200 2 175 1 276 1 42 1 127 1 86 1 304 1 66 2 129 2 177 1 
364 1 183 1 12 1 354 1 292 1 32 1 99 1 122 1 
48 1 65 1 
364 5 181 1 183 4 354 4 4 1 161 1 360 1 278 2 19 1 370 1 12 5 32 5 48 1 119 1 
187 1 364 2 183 2 12 2 354 2 32 2 122 1 99 1 
351 1 355 1 116 1 
41 1 143 1 351 2 355 2 270 1 257 1 
300 1 351 1 355 1 
310 1 351 1 355 1 
310 1 351 1 355 1 
310 1 351 1 355 1 
351 1 355 1 
351 1 355 1 
143 1 270 1 
143 1 270 1 
143 1 270 1 
300 1 351 1 355 1 
300 1 351 1 355 1 
185 2 358 2 355 2 314 1 359 1 230 3 277 2 52 1 71 1 303 1 85 2 102 1 281 2 204 2 351 2 165 1 13 2 283 1 257 1 
364 2 183 2 185 1 261 1 342 1 315 1 218 1 369 1 12 2 351 1 32 2 116 1 13 1 224 1 75 1 354 2 355 1 358 1 359 1 230 1 85 1 281 1 204 1 48 1 
294 1 164 2 333 2 326 1 367 1 
294 1 323 1 333 1 
323 1 333 1 367 1 
294 2 135 1 164 1 333 3 326 1 367 1 
294 1 164 1 333 2 326 1 223 1 367 1 
236 3 339 1 133 2 160 1 93 2 264 1 216 1 29 1 369 1 221 1 139 1 224 1 273 2 75 1 120 4 62 1 228 1 353 3 298 1 98 1 199 1 63 1 329 1 175 1 42 1 126 1 85 5 303 2 203 1 204 5 89 1 337 2 
236 1 364 1 339 1 183 1 260 1 133 2 160 1 343 2 186 2 187 1 264 1 216 1 29 1 369 1 12 1 32 1 221 1 167 1 139 3 226 1 273 1 322 1 120 4 353 1 98 1 354 1 63 1 37 1 99 1 360 1 42 1 126 1 85 5 303 1 203 1 204 5 89 1 337 1 
236 4 339 1 133 2 160 1 93 1 264 1 216 1 369 1 221 1 140 1 273 2 120 2 62 2 228 1 353 3 298 1 98 1 199 1 63 1 175 1 42 1 303 3 85 3 204 3 89 1 337 2 
236 7 339 1 49 1 133 4 160 1 93 2 264 2 216 2 369 2 221 1 140 1 273 4 120 3 62 3 228 1 353 5 98 1 298 1 199 2 63 1 175 2 42 2 303 4 85 4 47 1 204 4 89 1 178 1 337 4 
31 1 
274 1 174 1 
378 2 287 1 274 3 174 1 20 1 40 1 
378 1 274 1 65 1 
151 1 274 1 
274 1 174 1 40 1 
79 1 274 1 
105 1 21 7 284 1 182 3 23 1 2 1 16 1 68 4 211 2 7 1 175 1 251 1 162 1 264 1 136 1 129 3 306 2 245 1 
21 31 258 1 284 2 23 1 259 1 182 10 2 2 68 16 211 5 7 2 134 1 162 1 264 4 213 1 349 1 216 3 136 2 242 4 166 2 245 1 194 1 96 1 16 1 325 1 171 1 199 3 175 4 251 5 42 3 86 1 129 15 256 3 306 3 153 1 
21 9 284 1 182 4 23 1 2 1 68 5 211 3 7 1 162 1 264 1 10 1 349 2 136 1 166 4 194 2 16 1 171 2 175 1 251 1 332 1 86 2 129 4 306 2 153 1 
21 7 284 1 182 3 23 1 2 1 16 1 68 4 211 2 7 1 175 1 251 1 162 1 264 1 136 1 129 3 306 2 245 1 
21 7 284 1 182 3 23 1 2 1 16 1 68 4 211 2 7 1 175 1 251 1 162 1 264 1 136 1 129 3 306 2 245 1 
365 1 155 1 341 2 111 1 112 1 26 1 11 1 57 1 137 1 222 1 271 1 74 2 196 1 97 1 170 1 274 1 38 1 174 1 84 1 176 1 279 2 379 1 104 2 
106 1 365 1 155 1 156 1 341 1 111 1 367 1 11 1 55 1 135 1 271 1 74 1 294 1 293 1 323 1 97 1 84 1 150 1 176 1 232 1 279 1 333 2 280 1 379 1 363 1 104 1 
106 1 365 2 155 2 156 1 92 1 341 1 111 1 367 1 263 1 11 1 55 1 135 1 215 1 269 1 271 1 34 1 74 1 294 1 293 1 323 1 97 1 84 1 150 1 176 1 232 1 279 1 333 2 379 1 363 1 104 1 
106 1 365 3 155 3 92 1 341 1 111 1 367 1 263 1 11 1 55 1 135 1 215 2 222 1 271 1 34 1 74 1 294 1 293 1 323 1 97 1 84 1 176 1 232 1 279 1 333 2 280 1 379 1 152 1 363 1 104 1 
365 2 155 2 92 1 341 1 111 1 367 1 263 1 11 1 55 1 135 1 215 2 34 1 74 1 293 1 294 1 323 1 97 1 84 1 176 1 232 1 279 1 333 2 280 1 152 1 104 1 
233 1 
236 2 1 1 339 1 133 2 6 1 288 1 11 2 348 2 239 1 241 2 12 1 137 1 292 1 243 1 139 6 244 1 352 1 247 2 142 4 296 1 62 2 196 1 353 2 97 1 98 1 148 1 99 1 149 2 302 1 303 2 204 5 22 1 364 1 311 1 160 1 111 2 69 1 212 2 70 2 262 2 266 1 29 3 370 1 32 1 221 1 324 1 274 1 38 2 174 1 83 1 84 1 126 1 176 2 85 5 89 1 
1 1 364 1 22 1 6 1 69 1 212 1 239 1 29 1 350 1 12 1 370 1 32 1 292 1 243 1 244 1 139 2 142 2 324 1 99 1 302 1 85 3 204 3 
1 1 364 1 22 1 339 1 6 1 69 1 239 1 29 1 350 1 12 1 370 1 32 1 292 1 243 1 139 1 244 1 247 1 142 3 324 1 99 1 302 1 85 3 303 1 204 3 
1 1 364 1 22 1 339 1 6 1 69 1 212 1 262 1 29 1 239 1 350 1 12 1 370 1 32 1 292 1 243 1 244 1 139 2 247 1 142 3 324 1 99 1 302 1 85 3 303 1 204 3 
1 1 339 5 133 1 6 1 288 1 344 1 348 2 239 1 350 1 241 2 12 1 292 1 243 1 244 1 139 7 247 4 142 6 62 2 353 1 98 1 99 1 64 1 149 2 302 1 303 5 204 5 364 1 22 1 311 1 160 1 69 1 212 4 70 2 262 4 29 3 370 1 32 1 221 1 375 1 324 1 80 1 81 1 126 1 85 5 
1 1 236 2 339 1 133 1 6 1 288 1 348 2 239 1 241 2 12 1 292 1 243 1 244 1 139 4 247 2 142 4 62 2 353 1 98 1 99 1 148 1 149 2 302 1 303 2 204 4 364 1 22 1 311 1 160 1 69 1 212 2 70 2 262 2 29 2 370 1 32 1 221 1 324 1 126 1 85 4 
1 1 364 1 22 1 339 1 311 1 133 1 160 1 6 1 288 1 69 1 212 2 70 2 262 2 348 2 29 2 239 1 241 2 12 1 370 1 32 1 292 1 221 1 243 1 139 4 244 1 247 2 142 4 324 1 62 2 353 1 98 1 99 1 80 1 81 1 64 1 149 2 302 1 126 1 303 1 85 4 204 4 
1 1 364 1 22 1 339 1 311 1 133 1 160 1 6 1 288 1 69 1 212 2 70 2 262 2 348 2 29 2 239 1 241 2 12 1 370 1 32 1 292 1 221 1 243 1 139 4 244 1 247 2 142 4 324 1 62 2 353 1 98 1 99 1 80 1 81 1 64 1 149 2 302 1 126 1 303 1 85 4 204 4 
236 2 1 1 364 1 22 1 339 1 311 1 133 1 312 2 160 1 6 1 69 1 212 2 262 2 348 2 29 2 239 1 12 1 370 1 32 1 292 1 221 1 243 1 139 4 320 2 244 1 247 2 246 1 142 4 324 1 353 1 98 1 99 1 201 1 80 1 149 2 302 1 126 1 303 1 85 4 130 1 204 4 
1 1 364 1 22 1 339 1 311 1 133 1 160 1 6 1 288 1 69 1 212 3 70 2 344 1 262 3 348 2 29 2 239 1 241 2 12 1 370 1 32 1 292 1 221 1 243 1 244 1 139 5 247 3 142 5 324 1 62 2 353 1 98 1 99 1 80 1 64 1 81 1 149 2 302 1 126 1 303 1 85 4 204 4 
1 1 364 1 22 1 339 1 311 1 133 1 160 1 6 1 288 1 69 1 212 3 70 2 344 1 262 3 348 2 29 2 239 1 241 2 12 1 370 1 32 1 292 1 221 1 243 1 244 1 139 5 247 3 142 5 324 1 62 2 353 1 98 1 99 1 80 1 64 1 81 1 149 2 302 1 126 1 303 1 85 4 204 4 
1 1 236 2 339 1 133 1 6 1 348 2 239 1 12 1 292 1 243 1 244 1 139 4 247 2 142 4 353 1 98 1 99 1 148 1 149 2 302 1 303 1 204 4 364 1 22 1 311 1 160 1 312 2 69 1 212 2 262 2 29 2 370 1 32 1 221 1 320 2 324 1 126 1 85 4 130 1 
21 2 364 1 338 1 183 1 108 1 68 1 111 8 345 2 54 1 11 7 349 2 317 2 12 1 137 1 32 1 166 4 319 1 269 1 194 2 35 1 196 1 97 2 77 1 354 1 171 2 274 3 250 1 38 2 174 2 376 1 84 2 278 1 176 8 86 2 304 2 280 1 129 1 180 1 235 1 
21 3 364 1 182 1 183 1 68 1 211 1 161 1 345 1 264 1 349 1 216 1 12 1 318 1 166 2 32 1 194 1 171 1 18 1 354 1 199 1 200 1 360 1 175 1 42 1 252 1 86 1 304 1 66 1 129 2 
21 2 182 1 68 2 171 1 200 1 345 1 276 1 251 1 42 1 54 1 264 1 349 1 304 1 86 1 66 1 318 1 166 2 194 1 
21 2 182 1 171 1 211 1 199 1 200 1 345 1 175 1 54 1 127 1 349 1 304 1 86 1 66 1 129 2 318 1 166 2 194 1 
21 4 182 2 68 2 211 1 345 1 264 1 54 1 216 1 349 1 318 2 166 2 194 1 171 1 199 1 200 2 175 1 251 1 42 1 86 1 304 1 66 2 129 2 
21 2 35 1 182 1 68 2 171 1 200 1 345 1 276 1 251 1 42 1 264 1 349 1 304 1 86 1 66 1 318 1 166 2 194 1 
21 2 35 1 182 1 171 1 211 1 199 1 200 1 345 1 175 1 127 1 349 1 304 1 86 1 66 1 129 2 318 1 166 2 194 1 
21 4 182 2 68 2 211 1 345 1 264 1 216 1 349 1 318 2 166 2 194 1 35 1 171 1 199 1 200 2 175 1 251 1 42 1 86 1 304 1 66 2 129 2 
21 4 182 2 68 2 211 1 345 1 264 1 216 1 349 1 318 2 166 2 194 1 171 1 199 1 200 2 175 1 251 1 42 1 86 1 304 1 66 2 129 2 
21 2 364 1 108 1 68 1 111 1 345 1 11 1 316 1 349 1 267 1 291 1 12 1 166 2 194 1 97 1 171 1 274 1 38 1 174 1 376 1 202 1 40 1 84 1 176 1 304 1 86 1 129 1 48 1 
21 2 364 1 108 1 68 1 290 1 111 1 345 1 11 1 349 1 267 1 240 1 12 1 166 2 138 1 194 1 97 1 171 1 274 1 38 1 174 1 376 1 40 1 84 1 176 1 304 1 86 1 129 1 48 1 
21 4 182 2 68 2 211 1 345 1 264 1 216 1 349 1 318 2 166 2 194 1 171 1 199 1 200 2 175 1 251 1 42 1 252 1 86 1 304 1 66 2 129 2 
21 4 364 1 182 2 68 2 211 1 111 1 345 1 264 1 11 1 316 1 72 1 349 1 216 1 267 1 291 1 12 1 318 2 166 2 269 1 194 1 97 1 171 1 199 1 274 1 200 2 174 1 202 1 175 1 40 1 251 1 84 1 42 1 176 1 304 1 86 1 66 2 129 2 
21 3 364 1 182 1 183 1 68 2 161 1 345 1 264 1 349 1 216 1 12 1 318 1 166 2 32 1 372 1 194 1 171 1 354 1 199 1 200 1 360 1 175 1 251 1 42 1 252 1 86 1 304 1 66 1 129 1 
21 6 182 2 23 1 2 1 16 1 68 3 171 1 211 2 200 1 7 1 175 1 345 1 65 1 162 1 264 1 54 1 349 1 304 1 86 1 66 1 129 3 318 1 48 2 166 2 306 1 194 1 
21 14 258 1 182 2 108 1 68 8 211 1 345 1 134 1 264 2 349 2 216 2 242 3 318 11 166 4 192 1 194 2 36 1 171 2 199 1 200 4 376 1 175 1 251 1 42 2 252 1 86 2 304 2 66 11 129 6 48 1 380 1 90 1 256 3 
21 2 364 2 183 1 108 1 68 1 4 1 111 1 345 1 11 1 95 1 316 1 349 1 267 1 291 1 12 2 32 1 166 2 194 1 97 1 171 1 354 1 274 1 38 1 200 1 174 1 123 1 82 1 376 1 40 1 84 1 278 1 252 1 176 1 304 1 86 1 129 1 48 1 205 1 
182 8 2 1 183 1 4 1 7 1 238 1 345 3 11 3 53 2 349 3 12 3 291 2 194 3 97 2 16 1 354 1 199 2 146 2 200 7 202 2 251 4 252 1 304 3 66 7 306 1 21 20 364 3 23 1 108 1 68 10 366 1 211 4 111 3 162 1 264 3 72 2 316 2 216 2 267 2 318 7 166 6 32 1 171 3 274 2 38 1 39 1 174 2 376 1 175 3 40 2 84 2 278 1 330 2 42 2 176 3 86 3 280 1 129 10 48 2 
21 19 285 2 258 1 182 6 159 1 68 9 211 3 109 1 134 1 10 1 264 3 265 1 349 2 216 3 242 2 166 4 191 1 194 2 171 2 199 3 172 1 275 2 175 3 251 3 42 3 377 1 86 2 129 10 103 1 256 1 
21 26 285 1 258 2 107 1 182 4 159 2 68 14 211 2 10 1 264 3 265 1 188 1 349 3 189 1 216 3 242 2 166 6 191 2 194 3 374 1 197 1 171 3 199 2 172 1 275 4 175 2 251 2 42 3 86 3 128 1 129 12 153 2 103 1 256 2 
285 1 182 8 2 1 7 1 134 1 10 1 188 1 349 3 189 1 242 4 191 2 194 3 197 1 16 1 145 1 199 4 251 4 256 3 103 1 153 1 306 1 21 41 258 3 107 1 23 1 68 20 159 1 211 4 162 1 264 5 265 1 216 4 166 6 374 1 171 3 275 4 172 1 175 5 42 4 377 1 86 3 128 1 129 21 
21 38 285 1 107 1 258 3 23 1 182 7 2 1 159 1 68 20 211 4 7 1 134 1 162 1 10 1 264 5 265 1 188 1 189 1 349 4 216 4 242 4 166 8 191 2 194 4 374 1 197 1 16 1 145 1 171 4 199 3 172 1 275 4 175 4 251 3 42 4 377 1 86 4 128 1 129 18 306 1 153 2 103 1 256 3 
21 52 285 1 107 1 258 2 23 1 182 14 2 1 159 1 68 27 211 7 7 1 134 2 162 1 10 1 264 8 265 1 188 1 189 1 349 2 216 7 242 4 166 4 192 2 191 1 194 2 374 1 197 1 16 1 171 2 199 7 172 1 275 4 175 8 251 7 42 7 86 2 128 1 129 25 306 1 153 1 103 1 256 4 
361 1 71 1 185 1 281 1 351 1 355 1 358 1 13 1 283 1 257 1 
261 1 116 1 
234 1 185 1 371 1 281 1 356 1 351 1 355 1 358 1 13 1 
185 1 358 1 355 1 314 1 359 1 230 2 277 1 52 1 71 1 303 1 85 1 102 1 204 1 281 1 351 1 13 1 283 1 257 1 
185 1 358 1 355 1 314 1 359 1 230 2 277 1 52 1 71 1 303 1 85 1 102 1 204 1 281 1 351 1 13 1 283 1 257 1 
185 1 358 1 355 1 314 1 359 1 230 2 277 1 52 1 71 1 303 1 85 1 102 1 204 1 281 1 351 1 13 1 283 1 257 1 
41 1 87 1 300 1 
41 1 87 1 300 1 
0 1 310 1 
41 1 0 1 310 1 
218 1 315 1 
309 1 364 2 183 2 185 1 261 1 314 1 342 1 315 1 218 1 369 1 12 2 351 1 116 1 32 2 13 1 224 1 75 1 120 1 354 2 355 1 358 1 230 1 277 1 85 1 204 1 281 1 48 1 
87 1 300 1 
41 1 0 1 310 1 
21 2 364 2 338 1 108 1 68 1 111 2 345 1 51 1 11 2 349 1 219 1 317 2 12 2 32 2 166 2 319 1 321 1 14 1 194 1 97 1 171 1 274 1 174 1 376 1 84 1 252 1 176 2 304 1 86 1 129 1 206 1 
74 1 308 1 209 1 196 1 97 1 274 1 38 1 111 1 112 1 174 1 84 1 11 1 176 1 137 1 
74 1 294 1 106 1 293 1 323 1 209 1 97 1 158 1 5 1 111 1 367 1 84 1 11 1 135 1 176 1 232 1 333 2 280 1 
74 1 294 1 106 1 293 1 323 1 209 1 97 1 158 1 5 1 111 2 367 1 84 1 11 2 135 1 176 2 232 1 333 2 280 1 269 1 
74 1 294 1 106 1 293 1 323 1 97 1 158 1 111 1 367 1 173 1 84 1 11 1 135 1 176 1 232 1 333 2 280 1 
43 1 
339 1 353 1 98 1 3 1 133 1 160 1 126 1 303 1 131 1 221 1 
273 5 236 10 62 5 353 5 133 5 199 2 146 1 175 2 42 2 264 2 216 2 303 5 335 1 220 2 337 5 
339 1 303 1 85 1 29 1 204 1 139 1 
133 2 160 2 111 4 11 4 266 1 29 2 137 1 221 2 139 4 140 1 352 1 196 1 97 1 353 2 98 2 17 1 274 1 38 2 174 1 83 2 84 1 126 1 176 4 85 3 204 3 89 2 255 1 305 1 282 2 
339 1 353 1 303 1 133 1 3 1 131 1 65 1 
236 1 339 1 133 1 160 1 288 1 70 1 29 1 241 1 221 1 139 1 62 1 353 1 98 1 126 1 303 2 85 1 204 1 
236 12 339 2 3 1 133 8 11 3 59 2 190 2 243 2 139 5 62 6 297 1 353 9 97 4 98 4 199 2 146 2 301 2 303 8 204 5 151 3 255 1 20 1 307 2 160 4 111 3 264 2 29 3 216 2 220 2 269 1 221 4 273 6 79 2 274 10 229 2 38 1 174 3 83 1 40 3 175 2 84 3 42 2 126 4 176 3 45 1 85 5 334 1 378 2 335 2 336 2 131 1 89 2 337 6 282 1 
236 6 258 1 107 1 339 2 133 5 160 2 264 2 188 1 29 1 189 1 216 2 220 2 242 1 221 2 139 1 273 5 227 1 62 3 353 8 197 1 98 2 199 2 83 1 175 2 42 2 126 2 85 1 303 5 335 1 128 1 204 1 89 1 337 5 179 1 256 1 
364 1 2 1 183 1 260 1 133 2 160 1 7 1 187 1 162 1 264 2 12 1 60 1 220 2 32 1 221 1 322 1 353 2 98 1 354 1 37 1 99 1 360 1 64 1 175 1 126 1 85 1 335 1 204 1 
21 1 364 3 340 1 183 2 108 1 111 1 345 1 11 1 349 1 316 1 267 1 12 3 291 1 166 2 32 2 194 1 97 1 354 2 171 1 37 1 274 1 38 1 360 2 174 1 202 1 40 1 84 1 176 1 86 1 304 1 129 1 48 1 
273 2 236 4 339 2 62 2 353 1 133 2 98 1 160 1 83 1 126 1 303 4 89 1 337 2 221 1 306 1 
71 1 218 1 185 1 281 1 289 1 
163 1 185 1 281 1 
198 1 185 1 281 1 
198 1 185 1 281 1 
198 1 185 1 281 1 
185 1 281 1 
351 1 355 1 
163 1 185 1 281 1 
163 1 185 1 281 1 
21 10 182 5 2 2 68 5 171 1 211 3 7 2 175 2 251 2 162 1 10 1 264 2 349 1 86 1 60 1 129 5 166 2 194 1 
21 2 182 1 68 2 171 1 251 1 42 1 10 1 264 1 349 1 86 1 166 2 194 1 
21 4 182 2 68 2 171 1 211 1 199 1 175 1 251 1 42 1 10 1 264 1 349 1 216 1 86 1 129 2 166 2 194 1 
141 1 21 3 182 2 2 1 68 1 171 3 211 1 7 1 251 1 10 1 377 1 349 3 86 3 129 2 166 6 153 1 194 3 
21 34 258 1 23 1 259 1 182 12 2 3 68 16 211 7 7 3 134 1 162 2 213 1 10 1 264 5 349 5 216 3 242 4 166 10 96 1 194 5 141 1 16 1 171 5 199 3 175 5 251 5 100 1 42 3 377 1 86 5 129 18 306 1 153 2 256 3 
21 8 182 3 23 1 2 1 16 1 68 4 171 2 211 2 7 1 175 1 251 1 162 1 264 1 349 2 86 2 129 4 166 4 306 1 153 1 194 2 
21 6 23 1 182 2 2 1 16 1 68 3 211 2 7 1 65 1 175 1 162 1 264 1 129 3 306 1 
21 4 182 2 68 2 171 1 211 1 199 1 175 1 251 1 100 1 42 1 264 1 349 1 216 1 86 1 129 2 166 2 194 1 
21 7 258 1 182 2 68 3 211 1 199 1 175 1 134 1 251 1 42 1 264 1 216 1 129 4 242 2 256 1 
21 23 23 1 182 9 2 2 68 11 211 5 7 2 134 1 162 1 264 3 216 2 349 2 242 2 166 4 192 1 194 2 141 1 16 1 171 2 199 2 175 3 251 4 42 2 86 2 129 12 306 1 256 2 90 1 153 2 
21 1 129 1 242 1 
21 1 68 1 256 1 
21 6 182 3 68 3 171 1 199 1 211 2 146 1 175 1 251 1 100 1 42 1 264 1 349 1 216 1 86 1 129 3 166 2 194 1 
21 12 258 1 107 1 182 2 68 6 211 1 10 1 264 2 188 1 349 1 189 1 216 2 242 1 166 2 194 1 197 1 171 1 199 2 175 2 251 1 42 2 86 1 128 1 129 6 256 1 
21 6 182 2 2 1 68 3 211 1 7 1 175 1 251 1 162 1 264 1 129 3 
141 1 21 3 182 2 23 1 2 1 16 1 68 1 171 1 211 1 7 1 251 1 349 1 86 1 129 2 166 2 153 1 194 1 
21 8 258 1 23 1 182 2 2 1 68 4 211 2 7 1 162 1 264 1 10 1 349 1 242 1 166 2 194 1 197 1 16 1 171 1 175 1 86 1 129 4 306 1 256 1 
21 11 258 1 23 1 182 3 2 1 68 6 211 2 7 1 134 1 162 1 10 1 264 2 349 2 216 1 242 2 166 4 194 2 197 1 16 1 171 2 175 1 251 1 100 1 42 1 86 2 129 5 306 1 256 1 
21 19 258 1 107 1 23 1 182 4 2 1 68 9 211 3 7 1 162 1 10 1 264 3 188 1 349 3 189 1 216 2 242 1 166 6 194 3 197 1 16 1 171 3 199 2 175 3 251 1 100 1 42 2 86 3 128 1 129 10 306 1 256 1 153 1 
21 17 258 1 107 1 23 1 182 5 2 1 68 10 211 3 7 1 162 1 10 1 264 3 188 1 349 3 189 1 216 2 242 1 166 6 194 3 197 1 16 1 171 3 199 1 175 2 251 2 100 1 42 2 86 3 128 1 129 7 306 1 153 1 256 1 
21 8 258 1 23 1 182 2 2 1 68 4 211 2 7 1 162 1 264 1 10 1 349 1 242 1 166 2 194 1 197 1 16 1 171 1 175 1 86 1 129 4 306 1 256 1 
21 12 258 1 107 1 182 2 68 6 211 1 10 1 264 2 188 1 349 1 189 1 216 2 242 1 166 2 194 1 197 1 171 1 199 2 175 2 251 1 42 2 86 1 128 1 129 6 256 1 
21 18 258 1 107 1 23 1 182 5 2 1 68 10 211 3 7 1 162 1 10 1 264 3 188 1 349 4 189 1 216 2 242 1 166 8 194 4 197 1 16 1 171 4 199 1 175 2 251 2 100 1 42 2 86 4 128 1 129 8 306 1 256 1 153 2 
21 16 258 1 107 1 182 6 68 9 211 3 10 1 264 3 188 1 349 4 189 1 216 3 242 1 166 8 194 4 197 1 171 4 199 2 175 2 251 3 42 3 377 1 86 4 128 1 129 7 256 1 153 2 
21 7 23 1 182 6 2 3 16 2 68 3 211 3 7 3 175 1 251 3 162 1 264 1 129 4 
21 18 258 1 107 1 23 1 182 4 2 1 68 10 211 3 7 1 162 1 10 1 264 3 188 1 349 4 189 1 216 2 242 1 166 8 194 4 197 1 16 1 171 4 199 1 175 2 251 1 42 2 377 1 86 4 128 1 129 8 306 1 256 1 153 2 
364 1 12 1 370 1 88 1 48 1 32 1 119 1 
364 1 299 1 147 1 231 1 8 1 368 1 88 1 370 1 12 1 48 1 32 1 119 1 
196 1 97 1 274 1 38 1 111 4 328 1 174 1 84 1 11 4 176 4 114 1 137 1 269 1 
157 1 50 1 97 2 184 1 274 1 111 2 39 1 174 1 40 1 84 1 101 1 11 2 176 2 282 1 
84 1 11 1 323 1 232 1 176 1 97 1 333 1 38 1 111 1 367 1 
84 1 11 2 176 2 97 1 280 1 274 1 319 1 269 1 111 2 174 1 14 1 
196 1 97 2 274 3 38 1 111 5 174 2 84 2 11 4 176 5 114 1 137 1 269 1 319 1 180 1 282 1 235 1 
196 1 97 2 274 3 38 1 111 5 174 2 84 2 11 4 176 5 114 1 137 1 269 1 319 1 282 1 208 1 235 1 
84 1 11 1 196 1 176 1 97 1 137 1 274 1 38 1 111 1 174 1 65 1 
364 2 183 1 97 1 354 1 274 1 38 1 111 1 174 1 40 1 84 1 278 1 11 1 176 1 316 1 267 1 12 2 48 1 32 1 
364 2 183 1 111 1 11 1 316 1 239 1 267 1 12 2 32 2 292 1 97 1 354 2 79 1 274 3 99 1 174 2 40 2 84 1 278 1 176 1 336 1 48 1 282 1 
364 2 183 1 290 1 111 2 11 2 239 1 267 1 12 2 32 2 292 1 97 1 354 2 79 1 274 3 99 1 328 1 174 2 40 2 84 1 278 1 176 2 336 1 48 1 282 1 
339 1 111 3 11 3 30 1 243 1 139 1 97 1 78 1 79 1 274 4 38 1 328 1 174 1 40 1 84 1 176 3 85 2 303 1 378 1 204 2 336 1 151 1 282 1 
339 1 97 1 79 1 274 4 38 1 111 3 328 1 174 1 40 1 301 1 84 1 11 3 176 3 303 1 85 2 378 1 336 1 204 2 151 1 243 1 139 1 282 1 
84 1 11 1 176 1 97 1 77 1 111 1 
169 1 50 1 97 3 77 1 274 3 250 1 38 2 111 7 174 2 40 1 84 2 101 1 11 6 176 7 317 1 280 1 319 1 269 1 180 1 20 1 235 1 
21 6 364 2 182 2 23 1 2 1 183 1 68 3 211 2 111 1 7 1 345 2 162 1 264 1 11 1 53 1 349 2 72 1 316 1 267 1 219 1 12 2 291 1 318 1 32 1 166 4 269 1 194 2 97 1 16 1 171 2 354 1 274 1 200 1 174 1 202 1 175 1 40 1 84 1 278 1 252 1 176 1 304 2 86 2 66 1 129 3 48 2 306 1 
339 1 133 1 3 1 160 2 111 1 11 1 29 1 190 1 221 2 243 1 139 2 120 1 353 1 98 2 274 2 38 1 229 1 301 1 176 1 126 2 303 1 85 3 378 1 204 3 131 1 151 1 255 1 307 1 
97 2 77 1 274 2 111 2 174 1 40 1 84 1 11 2 176 2 378 1 334 1 269 1 20 1 
364 2 183 1 97 1 354 1 274 1 38 1 111 1 290 1 174 1 40 1 84 1 278 1 11 1 176 1 267 1 12 2 48 1 32 1 
169 1 50 1 97 2 274 1 111 1 174 1 40 1 84 1 101 1 11 1 176 1 282 1 20 1 
364 1 51 1 56 1 46 1 362 1 12 1 32 1 321 1 206 1 
56 1 121 1 67 1 
56 1 195 1 46 1 362 1 48 1 
339 1 120 1 195 2 121 1 99 1 124 1 331 1 56 1 303 1 239 1 85 2 46 2 362 2 204 2 48 1 292 1 67 1 243 1 244 1 
365 1 155 1 150 1 92 1 379 1 271 1 34 1 263 1 
155 4 365 4 92 3 313 1 357 1 263 2 215 2 217 1 379 1 132 1 73 1 271 1 34 2 33 1 
155 2 365 2 237 1 92 1 263 1 150 1 27 1 347 1 215 1 379 1 271 1 34 1 
365 3 155 3 150 1 92 1 217 2 115 1 313 1 379 1 132 2 271 1 34 1 263 1 
94 1 92 2 58 1 118 2 
365 1 155 1 150 1 28 1 379 1 271 1 
365 2 155 2 150 1 92 1 113 1 215 1 379 1 271 1 34 1 263 1 
117 1 
365 1 155 1 150 1 92 1 379 1 271 1 34 1 263 1 
92 1 34 1 263 1 65 1 
365 1 155 1 92 1 379 1 271 1 34 1 263 1 
365 1 279 1 104 1 
155 3 365 3 92 1 313 1 263 1 150 1 217 1 379 1 132 2 271 1 272 1 34 1 
365 2 155 2 92 1 215 1 249 1 379 1 271 1 34 1 263 1 
294 1 365 1 155 1 150 1 323 1 92 1 333 1 357 1 379 1 61 1 271 1 
365 1 155 1 150 1 92 1 379 1 271 1 34 1 
365 1 155 1 150 1 379 1 271 1 34 2 263 1 
155 2 365 2 92 1 210 1 150 1 254 1 379 2 271 2 34 1 373 1 
155 3 365 3 92 2 357 1 263 1 150 1 113 1 215 2 379 1 73 1 271 1 225 1 34 1 
294 1 155 2 365 2 323 1 92 1 367 1 263 1 9 1 150 1 135 1 215 1 333 2 379 1 271 1 34 1 
155 4 365 4 92 2 286 1 249 1 357 1 263 1 150 1 215 2 379 2 73 1 271 2 34 1 
365 3 155 3 150 1 113 1 92 1 215 1 379 1 132 1 271 1 34 1 263 1 
92 1 357 1 73 1 33 1 
92 1 34 1 

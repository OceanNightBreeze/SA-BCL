#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
96 9 24 1 240 5 196 1 46 1 143 2 223 2 145 1 29 1 28 2 199 6 367 1 78 1 82 4 249 1 157 1 203 1 250 1 327 1 277 9 188 1 251 2 298 1 252 1 15 3 189 2 63 2 168 2 
96 9 24 1 240 5 196 1 46 1 143 2 223 2 145 1 29 1 28 2 199 6 367 1 78 1 82 4 249 1 157 1 203 1 250 1 327 1 277 9 188 1 251 2 298 1 252 1 15 3 189 2 63 2 168 2 
96 10 24 1 240 6 196 1 46 1 143 2 223 2 145 1 29 1 28 2 199 7 367 1 78 1 82 5 249 1 157 1 203 1 250 1 327 1 277 10 188 1 251 2 298 1 252 1 15 4 189 2 63 2 168 2 
96 7 24 1 240 4 196 1 46 1 143 2 223 1 145 1 28 2 199 4 367 1 78 1 82 3 249 1 157 1 203 1 250 1 327 1 277 7 188 1 251 2 298 1 252 1 15 2 189 2 63 2 168 2 
82 2 249 1 203 1 96 4 277 4 240 3 188 1 251 1 252 1 15 1 143 1 189 1 223 2 63 1 29 1 28 1 199 3 367 1 
249 1 203 1 157 1 96 2 277 2 240 1 251 1 298 1 253 1 143 1 189 1 28 1 367 1 305 1 168 1 133 1 
82 1 249 1 203 1 96 3 277 3 240 2 46 1 143 2 15 1 28 2 199 1 367 1 168 1 
82 4 249 1 203 1 96 9 277 9 196 1 240 5 188 1 197 1 251 1 252 1 46 1 143 2 15 3 189 1 223 2 63 1 145 1 29 1 28 2 199 7 367 1 168 1 225 1 
82 4 249 1 203 1 96 9 277 9 196 1 240 5 188 1 197 1 251 1 252 1 46 1 143 2 15 3 189 1 223 2 63 1 145 1 29 1 28 2 199 7 367 1 168 1 225 1 
164 1 358 1 47 1 
129 1 
244 1 73 1 22 2 52 2 10 2 308 2 92 2 311 2 
237 1 22 2 2 1 339 1 49 1 244 1 100 1 365 2 73 1 52 2 268 2 10 3 75 1 149 1 342 1 269 1 224 1 320 1 275 1 182 1 37 1 183 1 325 1 185 1 126 1 39 2 59 1 131 1 20 1 308 2 67 1 211 2 92 2 380 2 310 1 282 1 311 3 
244 1 72 1 22 1 52 1 10 1 308 1 92 1 98 1 300 1 311 1 
117 1 283 1 358 1 374 1 123 1 164 1 72 1 10 1 9 1 270 1 318 1 92 1 80 1 311 1 
117 2 22 1 283 1 358 1 374 1 164 1 52 1 72 1 10 1 9 1 308 1 318 1 92 1 80 2 311 1 
117 1 364 1 51 1 314 1 80 1 
117 2 364 1 164 1 358 1 109 1 259 1 314 1 80 2 
117 1 314 1 80 1 
117 1 22 1 98 1 300 1 364 1 244 1 72 1 52 1 10 1 304 1 308 1 92 1 80 1 311 1 
164 1 
117 2 364 1 164 1 233 1 358 1 109 1 314 1 80 2 
117 5 358 1 109 1 299 2 314 2 353 2 265 1 364 2 375 1 164 1 146 1 201 1 113 1 90 1 34 2 45 1 80 5 293 1 274 1 
156 1 22 1 325 1 2 1 278 1 39 1 339 1 30 1 365 1 268 1 10 2 149 1 342 1 269 1 308 1 92 1 282 1 320 1 311 2 182 1 
73 1 47 1 
22 1 52 1 73 2 10 2 308 1 202 1 92 2 332 1 311 2 
156 1 333 1 89 1 
2 1 325 1 23 1 39 1 339 1 365 1 73 1 268 1 10 1 149 1 342 1 269 1 320 1 282 1 311 1 182 1 
52 1 73 1 22 3 10 3 278 1 308 3 92 3 311 3 
72 1 22 1 10 1 308 1 92 1 300 1 311 1 
72 1 22 1 52 1 10 1 308 1 202 1 92 1 332 1 311 1 
117 1 136 1 237 1 22 3 2 1 283 1 339 1 244 1 30 1 365 1 73 1 52 2 72 1 268 1 9 1 10 4 75 1 149 1 342 1 269 1 343 1 318 1 320 1 80 1 275 1 182 1 37 1 183 1 325 1 278 1 126 1 39 1 59 1 374 1 131 1 20 1 308 3 67 1 211 1 92 3 380 2 282 1 332 1 311 4 
73 1 22 1 10 2 308 1 278 1 344 1 92 2 311 2 123 1 
117 1 136 1 22 3 283 1 278 2 374 1 164 1 30 1 52 1 72 1 10 3 9 1 308 3 318 1 92 3 272 1 332 1 80 1 311 3 
156 1 22 2 278 1 89 1 52 1 10 2 308 2 92 2 332 1 311 2 
2 1 325 1 39 1 339 1 365 1 73 1 268 1 10 1 149 1 269 1 342 1 320 1 282 1 311 1 182 1 
2 1 325 1 207 1 39 1 365 1 73 1 268 1 10 1 149 1 269 1 342 1 317 1 320 1 282 1 311 1 
215 1 237 2 241 1 360 1 25 1 221 1 99 1 8 1 148 1 75 1 322 1 275 1 37 1 156 2 185 2 38 1 126 1 89 2 131 1 20 1 211 4 380 2 333 2 381 1 
31 1 72 1 22 1 10 1 283 1 308 1 92 1 311 1 
22 4 119 1 278 2 123 1 30 1 52 1 73 1 10 5 246 1 308 4 344 1 92 5 332 1 311 5 
31 1 72 1 22 2 10 2 308 2 92 2 300 1 311 2 
175 1 205 1 
175 1 205 1 
279 1 158 1 
279 1 158 1 
279 1 158 1 
174 1 175 1 205 1 
175 1 68 1 205 1 
62 1 279 1 175 2 158 1 205 2 338 1 
174 1 175 1 205 1 
174 1 175 1 205 1 
175 1 4 1 205 1 
175 1 4 1 205 1 
175 1 4 1 205 1 
334 1 117 2 262 2 216 2 138 1 238 1 263 2 175 2 326 1 284 1 205 2 287 1 62 1 164 1 303 2 377 3 101 1 80 2 273 2 
117 1 262 1 22 2 175 1 263 1 68 1 218 1 121 1 73 1 10 2 53 1 80 1 273 1 370 1 326 1 205 1 187 1 163 1 303 1 377 1 66 1 308 2 92 2 311 2 
63 1 251 1 189 1 
305 1 251 1 189 1 
63 2 64 1 305 1 160 1 189 3 7 1 
94 1 63 1 305 1 160 1 189 2 7 1 
63 1 305 1 160 1 189 2 7 2 
117 5 241 1 358 1 360 1 361 1 336 2 314 1 99 1 364 4 201 2 53 1 76 1 150 2 291 1 34 1 79 1 80 5 81 2 12 1 349 1 371 1 38 1 109 1 299 1 353 1 129 3 163 1 164 2 90 1 44 1 66 1 45 3 
117 9 241 3 358 1 360 3 361 2 314 6 99 3 27 1 364 7 51 5 146 1 366 1 201 6 150 6 291 2 34 2 271 1 79 3 80 9 81 6 12 1 155 1 371 3 106 5 38 3 109 1 110 1 299 2 353 2 129 9 164 5 90 1 66 4 357 1 45 8 
117 3 22 1 358 1 241 1 360 1 361 1 336 1 98 1 99 1 244 1 364 2 72 1 52 1 146 1 10 1 201 2 291 1 150 2 34 1 79 1 80 3 81 2 349 1 371 1 38 1 299 1 300 1 353 1 129 3 164 2 304 1 44 1 66 1 308 1 45 3 92 1 311 1 
241 2 336 2 98 1 99 2 244 1 146 1 52 1 10 1 201 4 291 1 150 4 349 1 299 1 300 1 353 1 164 3 304 1 66 2 308 1 311 1 117 4 22 1 358 1 360 2 361 1 364 3 27 1 72 1 366 1 34 1 271 1 80 4 79 2 81 4 371 2 38 2 129 6 44 1 45 5 92 1 
315 1 342 1 47 1 
342 1 169 1 
192 1 
149 1 342 1 
315 2 340 1 149 1 342 3 269 1 214 1 
149 1 342 1 269 1 
368 1 342 1 
13 1 237 3 351 1 185 4 241 1 242 1 231 1 221 2 60 1 99 1 208 1 316 2 331 1 211 7 77 1 322 3 115 1 
13 1 237 3 351 1 185 4 241 1 242 1 231 1 221 2 60 1 99 1 208 1 316 2 331 1 211 7 77 1 322 3 115 1 
13 1 237 3 351 1 185 4 241 1 242 1 231 1 221 2 60 1 99 1 208 1 71 1 316 2 331 1 77 1 211 7 322 3 115 1 
237 15 312 4 242 1 241 4 360 3 221 5 99 4 289 1 74 3 179 1 316 3 125 1 77 1 322 10 275 1 37 1 13 1 371 3 185 16 351 2 38 3 84 1 231 5 60 2 16 1 131 1 208 2 20 1 331 1 114 1 211 31 380 2 115 2 261 1 
237 4 241 1 242 1 221 3 99 1 290 1 316 2 77 1 322 4 275 2 37 2 13 1 185 5 351 1 231 1 60 1 131 2 208 1 281 1 20 2 211 9 380 4 261 1 115 1 
176 1 96 2 240 1 120 1 143 1 198 1 28 1 199 1 365 1 268 1 367 1 320 1 369 1 321 1 249 1 203 1 277 2 14 1 184 1 325 1 58 1 251 1 39 1 189 2 40 1 63 1 64 1 236 1 305 1 168 1 
176 1 96 3 240 1 120 1 143 1 198 1 28 1 365 1 199 2 268 1 200 1 367 1 320 1 321 1 249 1 276 1 277 3 14 1 184 1 325 1 251 1 39 1 189 2 40 1 63 1 64 1 236 1 305 1 168 1 91 1 
176 1 96 2 240 1 120 1 198 1 365 1 199 2 268 1 200 1 367 1 320 1 249 1 276 1 277 2 184 1 325 1 39 1 251 1 189 2 40 1 63 1 64 1 236 1 305 1 168 1 
176 2 2 1 96 1 97 1 143 1 243 1 28 1 365 1 268 1 149 1 33 1 342 1 320 1 153 1 325 1 277 1 206 1 39 1 40 2 191 1 236 2 168 2 91 1 
176 1 96 1 120 1 143 1 198 1 28 1 365 1 268 1 320 1 321 1 203 1 276 1 277 1 14 1 184 1 325 1 58 1 251 1 39 1 189 2 40 1 63 1 64 1 236 1 305 1 168 1 
376 1 
2 2 283 1 97 1 286 1 6 1 147 1 10 1 9 1 149 1 201 2 341 1 291 1 342 1 247 1 350 1 109 1 299 1 352 1 353 1 164 1 167 2 210 1 212 1 311 1 117 3 177 1 264 1 314 2 122 1 123 1 365 2 268 2 72 1 33 1 34 1 270 1 124 1 318 1 79 1 80 3 320 1 325 1 39 2 373 1 129 1 374 1 90 1 379 1 45 2 92 1 
117 3 283 1 109 1 264 1 314 2 373 1 374 1 123 1 233 1 167 2 72 1 10 1 9 1 270 1 124 1 210 1 318 1 212 1 92 1 260 1 80 3 311 1 
117 3 283 1 358 1 109 1 264 1 314 1 373 1 374 1 123 1 164 1 233 1 167 3 72 1 10 1 9 1 270 1 124 1 210 1 318 1 212 1 92 1 80 3 36 1 311 1 
117 3 283 1 358 1 264 1 314 2 123 1 72 1 9 1 10 1 270 1 124 1 318 1 80 3 36 1 372 1 109 1 373 1 374 1 164 1 233 1 167 3 210 1 212 1 92 1 260 1 311 1 
283 1 9 1 10 1 147 2 201 1 341 2 247 2 104 1 204 1 350 1 109 3 299 1 353 1 164 5 167 6 210 1 212 1 260 4 311 1 117 5 358 5 264 1 314 7 122 1 123 1 222 2 178 1 72 1 270 1 34 1 124 1 318 1 80 5 35 1 79 2 36 4 372 4 373 1 374 1 233 1 90 1 45 1 92 1 93 1 
117 2 283 1 264 1 122 1 123 1 72 1 147 1 10 1 9 1 201 1 341 1 270 1 34 1 124 1 318 1 247 1 79 1 80 2 350 1 299 1 353 1 373 1 129 1 374 1 164 1 167 2 90 1 379 1 45 1 210 1 212 1 92 1 311 1 
117 4 283 1 358 1 264 1 314 4 122 1 222 2 123 1 178 1 72 1 147 2 9 1 10 1 201 1 341 2 270 1 34 1 124 1 318 1 247 2 79 2 80 4 36 2 104 1 372 2 350 1 109 2 299 1 353 1 373 1 374 1 164 1 167 4 90 1 45 1 210 1 212 1 92 1 260 2 311 1 93 1 
117 4 283 1 358 1 264 1 314 4 122 1 222 2 123 1 178 1 72 1 147 2 9 1 10 1 201 1 341 2 270 1 34 1 124 1 318 1 247 2 79 2 80 4 36 2 104 1 372 2 350 1 109 2 299 1 353 1 373 1 374 1 164 1 167 4 90 1 45 1 210 1 212 1 92 1 260 2 311 1 93 1 
117 4 283 1 358 1 264 1 314 4 26 1 123 1 178 1 70 2 72 1 9 1 10 1 201 1 341 2 270 1 34 1 124 1 318 1 247 2 80 4 36 2 372 2 350 1 228 1 109 2 299 1 86 1 353 1 373 1 129 2 374 1 164 1 167 4 112 2 90 1 45 1 210 1 212 1 92 1 260 2 311 1 
117 4 283 1 358 1 264 1 314 5 122 1 222 2 123 1 178 1 72 1 147 2 9 1 10 1 201 1 341 2 34 1 270 1 124 1 318 1 247 2 79 2 80 4 35 1 36 3 104 1 350 1 372 3 109 2 299 1 353 1 373 1 374 1 164 1 167 5 90 1 45 1 210 1 212 1 92 1 260 3 93 1 311 1 
117 4 283 1 358 1 264 1 314 5 122 1 222 2 123 1 178 1 72 1 147 2 9 1 10 1 201 1 341 2 34 1 270 1 124 1 318 1 247 2 79 2 80 4 35 1 36 3 104 1 350 1 372 3 109 2 299 1 353 1 373 1 374 1 164 1 167 5 90 1 45 1 210 1 212 1 92 1 260 3 93 1 311 1 
283 1 9 1 10 1 201 1 341 2 247 2 350 1 109 2 299 1 353 1 164 1 167 4 112 2 210 1 212 1 260 2 311 1 117 4 358 1 264 1 314 4 123 1 70 2 72 1 34 1 270 1 124 1 318 1 80 4 36 2 372 2 86 1 373 1 374 1 129 2 90 1 379 1 45 1 92 1 
237 3 242 1 241 1 25 1 221 2 47 1 99 1 73 2 75 1 316 1 77 1 322 2 275 1 37 1 13 1 156 1 185 3 126 1 60 1 89 1 131 1 20 1 211 6 380 2 333 1 115 1 
135 1 237 6 312 3 241 1 360 2 221 1 99 2 49 1 73 1 74 3 75 1 179 1 322 2 275 2 37 2 156 11 183 1 371 2 159 1 185 8 38 1 126 2 231 1 329 1 89 4 131 2 16 1 255 1 20 2 43 1 211 14 380 4 333 11 
21 1 237 1 22 1 2 1 23 1 339 1 49 1 30 1 365 1 73 1 268 1 10 2 149 1 75 1 342 1 269 1 320 1 182 1 275 1 37 1 183 1 325 1 185 1 278 1 39 1 126 1 329 1 89 1 131 1 330 1 20 1 308 1 211 2 92 1 282 1 380 2 116 1 311 2 
237 10 2 1 242 1 241 3 339 2 48 2 99 3 49 1 10 3 149 2 342 2 13 1 156 7 295 2 60 1 19 1 20 3 257 2 308 1 67 2 211 20 115 1 311 3 22 1 360 2 221 4 30 1 365 3 73 2 268 3 75 3 316 1 269 2 77 1 320 2 322 8 275 3 182 2 83 1 37 3 183 1 276 1 371 2 325 2 185 10 38 2 186 1 278 1 39 3 126 3 329 1 231 4 88 2 89 7 131 3 92 1 380 6 282 2 333 7 
237 1 22 1 2 2 97 1 25 1 49 1 365 7 268 8 10 1 75 2 149 2 342 3 33 1 180 1 224 2 320 2 369 1 275 2 294 1 37 2 183 1 276 1 325 2 56 1 185 1 278 1 230 1 39 8 126 2 131 2 65 1 20 2 308 1 170 1 211 2 92 1 380 4 194 1 311 1 
237 2 22 1 241 1 360 1 221 1 99 1 52 1 10 1 75 1 11 1 322 1 275 1 37 1 156 1 371 1 185 1 38 1 126 1 329 1 89 1 131 1 20 1 308 1 211 3 92 1 333 1 332 1 380 2 311 1 
37 1 156 1 185 2 360 1 25 1 126 1 231 1 89 1 99 1 131 1 8 1 75 1 20 1 211 2 333 1 380 2 322 1 275 1 
37 1 156 1 237 2 38 1 241 1 25 1 126 1 221 1 89 1 131 1 148 1 75 1 20 1 211 2 333 1 380 2 322 1 275 1 
37 1 156 2 237 2 371 1 38 1 185 2 241 1 360 1 25 1 126 1 221 1 231 1 89 2 99 1 131 1 75 1 20 1 211 4 333 2 380 2 322 2 275 1 
37 1 156 1 185 2 360 1 126 1 231 1 89 1 99 1 131 1 8 1 75 1 20 1 211 2 170 1 333 1 380 2 322 1 275 1 
37 1 156 1 237 2 38 1 241 1 126 1 221 1 89 1 131 1 148 1 75 1 20 1 211 2 170 1 333 1 380 2 322 1 275 1 
37 1 156 2 237 2 371 1 38 1 185 2 241 1 360 1 126 1 221 1 231 1 89 2 99 1 131 1 75 1 20 1 211 4 170 1 333 2 380 2 322 2 275 1 
37 1 156 2 237 2 371 1 38 1 185 2 241 1 360 1 126 1 221 1 231 1 89 2 99 1 131 1 75 1 20 1 211 4 333 2 380 2 322 2 275 1 
237 1 2 1 339 1 49 1 365 1 73 1 268 1 10 1 149 1 75 1 269 1 342 1 320 1 182 1 275 1 37 1 183 1 325 1 185 1 39 1 126 1 131 1 20 1 67 1 211 2 282 1 380 2 311 1 
237 1 2 1 49 1 365 1 73 1 268 1 10 1 149 1 75 1 269 1 342 1 317 1 292 1 320 1 275 1 37 1 183 1 325 1 185 1 207 1 39 1 126 1 131 1 20 1 211 2 282 1 380 2 311 1 
37 1 156 2 237 2 371 1 38 1 185 2 241 1 360 1 126 1 221 1 231 1 329 1 89 2 99 1 131 1 75 1 20 1 211 4 333 2 380 2 322 2 275 1 
237 2 241 1 360 1 221 1 339 1 99 1 365 1 268 1 10 1 149 1 75 1 269 1 342 1 320 1 322 2 369 1 182 1 275 1 37 1 156 2 371 1 325 1 295 1 38 1 185 2 39 1 126 1 231 1 89 2 131 1 20 1 67 1 211 4 333 2 282 1 380 2 311 1 
237 1 22 1 241 1 360 1 99 1 52 1 10 1 75 1 322 1 275 1 37 1 156 1 371 1 38 1 185 2 126 1 231 1 329 1 89 1 131 1 20 1 308 1 258 1 211 3 92 1 332 1 380 2 333 1 311 1 
237 21 335 1 312 4 242 1 241 5 360 4 219 1 221 4 99 5 267 1 74 3 32 1 290 1 316 1 179 3 319 1 77 1 248 1 322 8 275 3 37 3 13 1 371 4 107 1 185 20 38 4 229 1 127 1 231 4 60 1 61 1 131 3 16 1 18 2 355 1 356 1 20 3 307 1 211 41 172 4 380 6 115 1 261 1 
237 18 335 1 312 4 242 1 241 4 360 4 219 1 221 4 99 5 267 1 74 3 32 1 290 1 316 1 179 3 319 1 77 1 248 1 322 7 275 4 37 4 13 1 371 4 107 1 185 20 38 3 229 1 127 1 231 3 60 1 61 1 131 4 16 1 18 2 355 1 356 1 20 4 307 1 211 38 172 4 380 8 115 1 261 2 
237 25 335 1 312 4 242 1 241 8 360 7 219 1 221 7 99 8 74 4 32 1 290 1 316 1 179 2 319 1 77 1 248 1 322 14 275 2 37 2 13 1 371 7 107 1 185 27 38 7 229 1 127 1 231 7 60 1 61 1 131 2 16 2 18 1 355 1 255 2 356 1 20 2 211 52 172 4 380 4 115 1 261 1 
237 10 335 1 312 2 241 3 360 3 221 3 99 3 267 1 74 1 290 1 179 1 322 6 275 2 37 2 371 3 107 2 185 9 38 3 127 1 231 3 131 2 16 1 232 1 18 1 355 1 356 1 20 2 211 19 172 2 380 4 
237 12 335 1 312 2 241 2 360 3 219 1 221 2 99 3 74 2 290 1 32 1 179 2 319 1 248 1 322 4 275 3 37 3 371 3 107 1 185 14 38 2 229 1 231 2 127 2 61 1 131 3 18 2 355 1 356 1 20 3 211 26 172 4 380 6 261 2 
287 1 62 1 303 1 262 1 238 1 217 1 175 1 263 1 205 1 273 1 
68 1 121 1 
103 1 303 1 262 1 175 1 263 1 313 1 205 1 128 1 273 1 
334 1 117 1 262 1 216 1 238 1 263 1 175 1 326 1 284 1 205 1 287 1 62 1 164 1 303 1 377 2 101 1 80 1 273 1 
334 1 117 1 262 1 216 1 238 1 263 1 175 1 326 1 284 1 205 1 287 1 62 1 164 1 303 1 377 2 101 1 80 1 273 1 
334 1 117 1 262 1 216 1 238 1 263 1 175 1 326 1 284 1 205 1 287 1 62 1 164 1 303 1 377 2 101 1 80 1 273 1 
174 1 234 1 338 1 
174 1 234 1 338 1 
139 1 4 1 
139 1 4 1 338 1 
370 1 187 1 
334 1 117 1 262 1 216 1 175 1 263 1 22 2 239 1 68 1 218 1 121 1 364 1 73 1 10 2 53 1 80 1 273 1 370 1 205 1 187 1 163 1 303 1 377 1 66 1 308 2 92 2 311 2 
174 1 234 1 
139 1 4 1 338 1 
237 1 49 1 365 2 268 2 10 2 149 1 75 1 342 1 224 2 320 1 275 1 54 1 37 1 347 1 183 1 325 1 56 1 185 1 39 2 126 1 329 1 87 1 131 1 65 1 280 1 20 1 211 2 309 1 92 2 380 2 311 2 
276 1 325 1 14 1 120 1 297 1 251 1 39 2 189 2 162 1 198 1 63 1 64 1 365 2 165 1 268 2 305 1 236 1 320 1 369 1 
276 1 14 1 325 1 120 1 251 1 39 1 189 2 198 1 63 1 64 1 365 1 165 1 268 1 305 1 181 1 236 1 320 1 
325 1 2 1 206 1 97 1 39 1 162 1 365 1 268 1 149 1 342 1 33 1 236 1 320 1 152 1 
276 1 325 1 14 1 120 1 297 1 251 1 39 1 189 2 162 1 198 1 63 1 64 1 365 1 165 1 268 1 305 1 236 1 320 1 
345 1 
164 1 201 1 113 1 358 1 45 1 47 1 293 1 
299 1 353 1 129 1 122 1 164 1 147 1 201 1 90 1 34 1 45 1 79 1 
0 2 2 1 241 2 286 1 99 2 149 1 201 7 291 2 342 6 150 6 109 3 299 3 353 3 161 1 302 2 164 7 166 2 257 2 306 2 169 3 214 1 117 5 358 1 360 2 314 5 266 2 315 2 365 1 268 1 269 1 34 3 318 2 320 1 80 5 79 6 81 6 324 1 371 2 325 2 38 2 39 1 129 12 41 1 235 2 90 3 45 8 
117 1 312 1 241 2 358 2 360 2 219 1 314 1 286 1 99 2 74 1 201 5 32 1 291 1 150 5 179 1 34 2 248 1 80 1 79 3 81 5 323 1 371 2 38 2 109 1 229 1 299 2 353 2 129 6 61 1 209 1 164 5 166 2 111 1 90 2 45 8 
117 1 22 1 242 1 241 1 98 1 99 2 244 1 72 1 52 1 10 1 201 2 34 1 80 1 323 1 299 1 300 1 353 1 60 1 166 2 90 1 304 1 45 2 308 1 171 1 92 1 311 1 115 1 93 1 
358 1 299 1 353 1 164 1 201 1 113 1 90 1 34 1 45 1 293 1 
371 1 38 1 241 1 360 1 129 3 99 1 164 1 201 2 150 2 45 2 79 1 81 2 
117 1 164 1 358 1 109 1 314 1 80 1 
117 3 2 2 3 1 97 1 314 4 6 1 286 2 365 4 146 1 268 4 149 1 201 2 342 1 291 2 33 1 34 2 320 1 80 3 325 1 109 2 39 4 352 1 299 2 353 2 17 1 90 1 45 2 213 1 173 2 
237 1 22 2 2 1 339 1 244 1 365 1 73 1 268 1 52 2 10 3 149 1 75 1 269 1 342 1 320 1 275 1 182 1 37 1 183 1 325 1 39 1 126 1 59 1 131 1 20 1 308 2 67 1 211 1 92 2 380 2 282 1 311 3 
358 2 299 1 353 1 129 4 286 1 164 4 201 2 316 1 150 2 90 1 291 1 34 1 45 1 79 2 81 2 
245 1 303 1 273 1 
287 1 303 1 370 1 134 1 273 1 
245 1 303 1 273 1 
245 1 303 1 273 1 
303 1 256 1 273 1 
303 1 256 1 273 1 
303 1 256 1 273 1 
303 1 273 1 
175 1 205 1 
237 4 312 1 241 1 242 1 221 2 99 1 74 1 290 1 316 1 179 1 77 1 322 2 275 1 37 1 13 1 185 4 229 1 60 1 131 1 20 1 211 8 380 2 115 1 
237 5 312 2 241 1 242 1 360 1 221 2 144 1 99 2 74 1 290 1 316 1 179 1 77 1 322 3 275 2 37 2 13 1 371 1 185 6 229 1 231 1 60 1 131 2 16 1 20 2 211 11 380 4 115 1 
237 10 312 1 242 1 241 3 360 2 219 1 221 3 144 1 99 3 74 1 290 1 32 1 316 1 179 1 77 1 248 1 322 4 275 3 37 3 13 1 371 2 185 9 38 2 229 1 231 1 60 1 61 1 131 3 20 3 211 19 380 6 115 1 261 1 
237 7 312 1 242 1 241 2 360 2 219 1 221 3 144 1 99 3 74 1 290 1 32 1 316 1 179 1 77 1 248 1 322 5 275 3 37 3 13 1 371 2 185 10 38 1 229 1 231 2 60 1 61 1 131 3 20 3 211 17 380 6 115 1 261 1 
237 4 312 1 241 1 242 1 221 2 99 1 74 1 290 1 316 1 179 1 77 1 322 2 275 1 37 1 13 1 185 4 229 1 60 1 131 1 20 1 211 8 380 2 115 1 
237 6 312 1 241 2 360 2 219 1 221 1 99 2 74 1 290 1 32 1 179 1 248 1 322 2 275 1 37 1 371 2 185 6 38 2 229 1 231 1 61 1 131 1 20 1 211 12 380 2 
237 8 312 1 242 1 241 2 360 2 219 1 221 3 144 1 99 3 74 1 290 1 32 1 316 1 179 1 77 1 248 1 322 5 275 4 37 4 13 1 371 2 185 10 38 1 229 1 231 2 60 1 61 1 131 4 20 4 211 18 380 8 115 1 261 2 
237 7 312 1 241 2 360 3 219 1 221 3 99 3 267 1 74 1 290 1 32 1 179 1 248 1 322 6 275 4 37 4 371 3 185 9 38 2 229 1 231 3 61 1 131 4 20 4 211 16 380 8 261 2 
13 1 237 4 185 3 241 1 242 1 221 3 231 3 60 3 99 1 211 7 77 2 115 3 322 6 
237 8 312 1 242 1 241 2 360 2 219 1 221 3 99 3 267 1 74 1 290 1 32 1 316 1 179 1 77 1 248 1 322 4 275 4 37 4 13 1 371 2 185 10 38 1 229 1 231 1 60 1 61 1 131 4 20 4 211 18 380 8 115 1 261 2 
37 2 13 1 237 4 185 4 241 1 242 1 231 1 221 2 60 1 99 1 131 2 20 2 316 1 211 8 77 1 380 4 322 3 261 1 115 1 275 2 
13 1 237 3 185 3 242 1 241 1 221 2 47 1 60 1 99 1 316 1 77 1 211 6 115 1 322 2 
37 1 237 2 371 1 38 1 185 2 241 1 360 1 221 1 231 1 144 1 99 1 131 1 20 1 211 4 380 2 322 2 275 1 
237 4 371 1 38 1 312 2 185 3 241 1 360 1 221 1 231 1 99 1 16 1 74 1 179 1 211 7 322 2 
237 12 312 2 242 1 241 3 360 2 140 1 221 5 99 3 74 2 316 1 77 1 322 9 275 2 37 2 13 1 371 2 185 11 38 2 231 4 60 2 16 1 131 2 255 1 20 2 43 1 211 23 380 4 115 2 261 2 
237 1 312 1 211 1 
74 1 185 1 211 1 
37 1 237 3 371 1 185 3 38 1 241 1 360 1 231 1 221 2 144 1 99 1 131 1 20 1 257 1 211 6 380 2 322 3 275 1 
237 6 312 1 241 2 360 2 219 1 221 1 99 2 74 1 290 1 32 1 179 1 248 1 322 2 275 1 37 1 371 2 185 6 38 2 229 1 231 1 61 1 131 1 20 1 211 12 380 2 
237 3 185 3 242 1 241 1 221 1 231 1 60 1 99 1 211 6 115 1 322 2 
37 1 13 1 237 2 185 1 140 1 231 1 221 1 60 1 131 1 20 1 77 1 211 3 380 2 322 2 115 1 261 1 275 1 
37 1 237 5 185 5 242 1 241 2 221 3 231 2 60 2 99 2 131 1 20 1 290 1 211 10 171 1 380 2 115 2 322 5 275 1 
37 1 185 2 360 1 231 1 99 1 131 1 290 1 20 1 211 2 380 2 322 1 275 1 
37 1 237 2 371 1 38 1 185 2 241 1 360 1 221 1 231 1 99 1 131 1 290 1 20 1 211 4 380 2 322 2 275 1 
37 3 237 2 185 1 140 1 221 1 231 1 60 1 267 1 131 3 290 1 20 3 211 3 380 6 261 1 115 1 322 2 275 3 
237 18 312 4 242 2 241 5 140 1 360 3 221 7 144 1 99 5 267 1 289 1 74 3 290 1 316 1 179 1 125 1 77 1 322 12 275 5 37 5 13 1 371 3 185 16 38 3 231 5 60 3 131 5 16 1 20 5 114 1 211 34 380 10 115 3 261 2 
73 1 348 1 10 1 344 1 92 1 311 1 123 1 
346 1 348 1 363 1 123 1 190 1 132 1 73 1 354 1 10 1 344 1 92 1 311 1 
365 1 268 1 325 1 149 1 2 1 342 1 33 1 97 1 39 1 320 1 47 1 
22 1 325 1 2 1 278 1 39 1 339 1 365 1 73 1 268 1 10 2 149 1 342 1 269 1 308 1 92 1 282 1 320 1 311 2 
22 2 283 1 339 1 365 1 73 1 268 1 72 1 10 2 149 2 368 1 269 2 342 3 320 1 325 1 278 1 39 1 374 1 308 1 92 2 282 1 173 1 311 2 195 1 
22 2 283 1 365 2 73 1 268 2 72 1 10 2 149 2 368 1 269 2 342 3 317 1 151 1 320 1 325 1 278 1 39 2 374 1 308 1 92 2 282 1 173 1 311 2 195 1 
117 2 2 1 325 1 358 1 57 1 337 1 39 3 314 1 164 1 315 1 365 3 268 3 368 1 149 1 269 1 342 4 318 1 169 1 151 1 80 2 320 1 195 1 173 1 
117 2 2 1 325 1 358 1 39 3 314 1 164 1 315 1 365 3 268 3 368 1 149 1 269 1 342 4 306 1 318 1 169 1 151 1 80 2 320 1 195 1 173 1 
294 1 365 1 268 1 325 1 39 1 320 1 
294 1 276 1 2 2 325 3 285 1 230 1 39 7 301 1 288 1 65 1 365 6 268 7 149 2 269 1 342 3 180 1 224 1 320 2 194 1 369 1 214 1 
237 3 242 1 241 1 339 1 99 1 10 2 149 1 342 1 13 1 156 1 295 1 60 1 20 2 308 1 67 1 211 6 309 1 311 2 115 1 22 1 221 2 365 1 268 1 73 2 75 2 269 1 316 1 77 1 320 1 369 1 322 2 182 1 275 2 37 2 325 1 185 3 278 1 39 1 126 2 329 1 89 1 88 1 131 2 92 1 380 4 282 1 333 1 
117 3 0 1 2 1 3 1 358 1 314 2 266 1 364 1 315 1 365 1 268 1 201 1 342 2 34 2 318 1 80 3 293 1 109 1 39 1 299 2 353 2 164 1 113 1 90 2 235 1 306 1 45 1 169 1 
294 1 325 2 39 2 161 1 315 1 365 2 268 2 149 1 269 1 342 2 320 1 369 1 214 1 
325 1 2 1 328 1 97 1 39 4 365 4 268 4 149 1 33 1 342 1 151 1 320 1 369 1 
83 1 105 1 325 2 285 1 39 2 301 1 365 2 268 2 149 1 269 1 342 1 193 1 320 1 173 1 
365 1 268 1 325 1 2 1 305 1 120 1 251 1 39 1 320 1 189 1 
347 1 276 1 325 1 39 2 365 2 65 1 268 2 149 1 342 1 320 1 369 1 
2 1 325 2 328 1 97 1 39 5 365 4 65 1 268 5 149 2 33 1 342 3 180 1 320 2 173 1 369 1 194 1 
2 1 325 2 328 1 97 1 39 5 254 1 365 4 65 1 268 5 149 2 33 1 342 3 320 2 173 1 369 1 194 1 
22 1 325 1 2 1 278 1 39 1 365 1 73 1 268 1 10 2 149 1 342 1 269 1 308 1 317 1 92 1 282 1 320 1 311 2 
325 2 285 1 39 1 301 1 288 1 365 1 268 1 149 1 269 1 342 1 320 1 173 1 214 1 
54 1 5 1 142 1 362 1 87 1 280 1 10 1 92 1 311 1 
1 1 359 1 362 1 
73 1 378 1 5 1 142 1 362 1 
117 2 95 1 136 1 1 1 283 1 358 1 359 1 5 2 142 2 362 1 374 1 364 1 164 1 73 1 72 1 9 1 378 2 318 1 80 2 
249 1 367 1 240 1 47 1 
249 1 28 1 367 1 277 1 96 1 240 1 143 1 
40 1 277 1 168 1 
249 1 203 1 118 1 96 3 277 3 240 1 298 2 143 1 69 1 130 1 28 1 367 1 
223 1 249 1 28 1 199 1 367 1 277 2 96 2 240 1 143 1 
82 1 203 1 96 1 277 1 240 1 188 1 251 1 143 1 189 1 63 1 28 1 
28 1 203 1 367 1 277 1 96 1 240 1 143 1 
249 1 28 1 203 1 367 2 277 1 96 1 143 1 
154 1 203 1 96 2 277 2 240 1 227 1 143 2 28 2 367 1 102 1 
82 1 249 1 203 1 96 3 277 3 196 1 240 2 143 1 15 1 145 1 28 1 199 2 367 1 
249 1 203 1 96 2 277 2 240 1 141 1 251 1 143 1 189 2 63 1 28 1 64 1 199 1 367 1 305 1 
82 1 249 1 203 1 96 4 277 4 240 2 143 2 15 1 223 1 28 2 29 1 199 2 367 1 
249 1 28 1 203 1 367 1 277 1 96 1 240 1 143 1 
82 1 249 2 137 1 118 1 96 4 277 4 240 3 298 1 143 1 15 1 130 1 28 1 199 2 367 2 
249 1 203 1 96 2 277 2 240 1 197 1 220 1 143 1 28 1 50 1 199 1 367 1 
249 1 203 1 118 2 96 3 277 3 226 1 240 1 298 2 143 1 130 1 28 1 367 1 
55 2 240 2 108 1 85 1 
28 1 203 1 42 1 277 1 96 1 143 1 
249 1 28 1 199 1 203 1 367 1 277 2 96 2 240 1 196 1 143 1 
296 1 
249 1 28 1 203 1 367 1 277 1 96 1 240 1 143 1 
249 1 203 1 96 3 277 3 240 1 196 1 298 1 143 1 28 1 199 1 367 1 
82 1 137 1 240 1 15 1 
367 1 240 1 

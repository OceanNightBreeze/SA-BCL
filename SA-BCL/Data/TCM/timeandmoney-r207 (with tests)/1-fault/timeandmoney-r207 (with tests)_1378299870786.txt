#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 1 85 2 299 4 176 5 1 6 246 2 66 1 198 9 250 9 312 2 341 1 138 1 74 1 282 2 76 1 204 1 261 2 15 2 50 1 168 1 34 1 238 1 18 1 266 2 80 1 36 3 378 1 240 1 
174 1 85 2 299 4 176 5 1 6 246 2 66 1 198 9 250 9 312 2 341 1 138 1 74 1 282 2 76 1 204 1 261 2 15 2 50 1 168 1 34 1 238 1 18 1 266 2 80 1 36 3 378 1 240 1 
174 1 85 2 299 5 176 6 1 7 246 2 66 1 198 10 250 10 312 2 341 1 138 1 74 1 282 2 76 1 204 1 261 2 15 2 50 1 168 1 34 1 238 1 18 1 266 2 80 1 36 4 378 1 240 1 
174 1 85 1 299 3 176 4 1 4 246 2 66 1 198 7 250 7 312 2 341 1 138 1 74 1 282 2 204 1 261 2 15 2 50 1 168 1 34 1 238 1 18 1 266 2 80 1 36 2 378 1 240 1 
282 1 85 2 299 2 1 3 176 3 76 1 198 4 204 1 261 1 250 4 15 1 50 1 312 1 34 1 238 1 36 1 266 1 74 1 
282 1 176 1 246 1 198 2 261 1 250 2 13 1 15 1 50 1 168 1 34 1 80 1 266 1 239 1 173 1 74 1 
282 2 299 1 176 2 1 1 246 1 198 3 250 3 15 2 50 1 34 1 36 1 240 1 74 1 
85 2 299 4 1 7 176 5 2 1 246 1 66 1 198 9 250 9 312 1 74 1 282 2 76 1 204 1 261 1 236 1 15 2 50 1 34 1 238 1 36 3 378 1 266 1 240 1 
85 2 299 4 1 7 176 5 2 1 246 1 66 1 198 9 250 9 312 1 74 1 282 2 76 1 204 1 261 1 236 1 15 2 50 1 34 1 238 1 36 3 378 1 266 1 240 1 
297 1 373 1 225 1 92 1 26 1 118 2 280 2 304 1 
297 1 125 1 225 2 26 1 179 1 284 1 247 1 67 1 287 1 304 2 320 2 92 1 78 1 275 1 294 2 352 2 57 1 118 5 280 5 
297 1 356 1 92 1 
297 1 29 2 288 1 
59 2 201 1 90 2 196 2 38 1 227 2 317 2 172 2 
355 2 59 2 83 1 132 1 84 1 61 1 196 2 38 1 86 1 211 1 336 1 177 2 178 1 338 1 136 1 307 2 339 1 90 2 68 1 137 1 252 2 182 1 255 1 219 1 256 1 201 1 226 1 227 2 317 3 260 1 28 1 346 2 235 1 166 1 55 1 148 1 172 3 
59 1 201 1 167 1 90 1 51 1 196 1 227 1 317 1 371 1 172 1 
59 1 242 1 297 1 10 1 317 1 371 1 322 1 92 1 274 1 377 1 118 1 280 1 172 1 224 1 
59 1 242 1 297 1 10 1 196 1 227 1 317 1 371 1 90 1 92 1 274 1 118 2 280 2 172 1 224 1 
225 1 220 1 118 1 280 1 304 1 
297 1 225 1 92 1 26 1 118 2 280 2 304 1 48 1 
118 1 280 1 304 1 
201 1 59 1 225 1 196 1 227 1 317 1 371 1 167 1 90 1 51 1 42 1 118 1 280 1 172 1 
297 1 
59 1 83 1 227 1 317 2 211 1 346 1 178 1 306 1 339 1 166 1 307 1 68 1 90 1 252 1 182 1 363 1 219 1 256 1 111 1 172 2 
83 1 38 1 317 1 211 1 346 1 178 1 166 1 307 1 339 1 68 1 252 1 182 1 219 1 327 1 256 1 172 1 
379 1 306 1 259 1 
356 1 38 1 
59 2 196 1 227 1 38 2 317 2 90 1 351 1 199 1 172 2 
59 3 90 3 196 1 38 1 227 3 317 3 111 1 172 3 
59 1 90 1 51 1 227 1 317 1 371 1 172 1 
59 1 90 1 196 1 227 1 317 1 351 1 371 1 199 1 172 1 
355 1 59 3 242 1 83 1 132 1 84 1 196 2 38 1 86 1 211 1 336 1 177 2 178 1 338 1 339 1 307 1 68 1 251 1 90 3 137 1 252 1 182 1 274 1 363 1 255 1 219 1 118 1 199 1 280 1 256 1 224 1 201 1 10 1 226 1 45 1 227 3 317 4 371 1 346 1 235 1 166 1 148 1 111 1 172 4 
59 2 90 1 322 1 263 1 38 1 227 1 317 2 111 1 172 2 
59 3 242 1 297 1 10 1 196 1 227 3 45 1 317 3 371 1 90 3 274 1 363 1 118 1 199 1 280 1 111 2 81 1 172 3 224 1 
59 2 196 1 227 2 317 2 306 1 90 2 199 1 111 1 379 1 172 2 
83 1 38 1 317 1 211 1 346 1 178 1 166 1 307 1 339 1 68 1 252 1 182 1 219 1 256 1 172 1 
83 1 0 1 38 1 317 1 346 1 166 1 307 1 339 1 68 1 49 1 252 1 182 1 219 1 256 1 172 1 
355 4 298 1 84 1 61 2 63 1 21 1 336 1 177 2 4 1 338 1 306 2 156 1 137 1 276 1 255 2 257 1 259 2 100 1 235 1 105 1 106 1 33 1 148 1 379 2 
242 1 59 1 90 1 227 1 317 1 371 1 172 1 273 1 
59 5 196 1 227 4 38 1 317 5 90 4 322 1 263 1 24 1 363 1 184 1 199 1 111 2 172 5 
59 2 90 2 51 1 227 2 317 2 371 1 172 2 273 1 
53 1 188 1 
53 1 188 1 
362 1 187 1 
362 1 187 1 
362 1 187 1 
164 1 53 1 188 1 
164 1 53 1 188 1 
164 1 53 1 188 1 
53 1 350 1 188 1 
53 1 350 1 188 1 
53 1 350 1 188 1 
53 1 188 1 360 1 
308 1 362 1 187 1 53 2 188 2 279 1 
281 2 297 1 212 2 188 2 39 1 233 2 190 3 249 2 107 1 69 1 143 1 53 2 279 1 221 1 118 2 314 1 280 2 160 1 241 2 
59 2 243 1 38 1 153 1 152 1 212 1 22 1 360 1 90 2 118 1 280 1 6 1 281 1 227 2 317 2 46 1 188 1 233 1 190 1 104 1 107 1 53 1 241 1 172 2 
312 1 266 1 261 1 
266 1 261 1 173 1 
98 1 162 1 312 2 302 1 266 3 173 1 
98 1 312 1 302 1 266 2 173 1 216 1 
98 1 312 1 302 2 266 2 173 1 
60 1 151 1 297 2 331 1 4 1 247 1 304 1 156 1 92 1 159 2 118 5 6 1 280 5 44 1 100 1 225 4 26 1 126 1 46 1 27 2 127 1 284 3 29 3 288 1 104 1 320 1 293 2 78 2 33 1 169 1 352 1 294 1 
151 3 297 5 331 1 334 5 3 1 4 3 67 1 304 6 247 1 155 1 156 3 92 1 159 6 220 5 118 9 280 9 121 1 223 1 100 3 225 7 26 1 140 1 127 2 284 8 29 9 288 3 104 4 320 2 293 6 78 6 33 3 54 1 169 2 294 2 352 2 
297 3 151 1 4 1 67 1 156 1 92 1 159 2 118 3 280 3 44 1 100 1 225 2 126 1 27 1 127 1 284 3 29 4 288 2 104 1 320 1 293 2 33 1 78 2 169 1 352 1 294 1 
297 4 151 2 4 2 67 1 155 1 156 2 92 1 159 4 118 4 280 4 121 1 44 1 100 2 225 3 126 1 27 2 127 1 284 5 29 7 288 3 104 2 320 1 293 4 33 2 78 4 54 1 169 1 352 1 294 1 
83 1 356 1 71 1 
83 1 7 1 
37 1 
83 1 219 1 
83 3 340 1 71 2 219 1 364 1 256 1 
83 1 219 1 256 1 
83 1 347 1 
355 7 210 1 100 1 61 4 300 1 62 1 21 3 4 1 286 1 215 1 30 1 323 1 52 1 16 1 255 3 109 2 257 2 
355 7 210 1 100 1 61 4 300 1 62 1 21 3 4 1 286 1 215 1 30 1 323 1 52 1 16 1 255 3 109 2 257 2 
355 7 210 1 100 1 61 4 300 1 62 1 21 3 4 1 286 1 30 1 215 1 40 1 323 1 52 1 16 1 255 3 109 2 257 2 
355 31 151 3 210 5 84 1 61 16 62 1 300 2 21 10 335 1 336 1 177 2 303 1 4 4 215 2 156 3 137 1 253 1 255 15 200 1 257 5 344 4 122 3 100 4 370 1 286 2 235 1 30 1 323 1 16 1 52 2 33 3 35 1 109 3 296 1 
355 9 84 2 210 1 61 5 300 1 62 1 21 4 336 2 177 4 4 1 215 1 89 1 137 2 255 4 257 3 100 1 345 1 370 1 235 2 286 1 30 1 323 1 52 1 109 2 
267 1 176 1 1 1 246 1 359 1 198 2 307 1 339 1 250 2 309 1 217 1 252 1 182 1 312 1 74 1 282 1 11 1 101 1 228 1 162 1 318 1 346 1 261 1 15 1 50 1 31 1 376 1 34 1 266 2 173 1 
267 1 176 1 1 2 246 1 359 1 198 3 307 1 339 1 250 3 309 1 91 1 217 1 252 1 182 1 312 1 74 1 282 1 139 1 11 1 228 1 162 1 318 1 346 1 261 1 15 1 374 1 31 1 34 1 266 2 173 1 
267 1 176 1 1 2 246 1 359 1 198 2 307 1 339 1 250 2 309 1 252 1 182 1 312 1 74 1 139 1 11 1 162 1 318 1 346 1 261 1 374 1 31 1 34 1 266 2 173 1 
209 1 83 1 268 1 333 1 246 2 198 1 339 1 307 1 250 1 91 1 309 2 252 1 182 1 219 1 119 1 315 1 282 1 318 2 346 1 166 1 15 1 31 2 326 1 
282 1 11 1 267 1 228 1 162 1 246 1 346 1 318 1 359 1 198 1 261 1 339 1 307 1 250 1 15 1 217 1 309 1 50 1 374 1 252 1 182 1 31 1 376 1 312 1 266 2 173 1 
258 1 
209 1 83 1 214 1 339 1 182 1 274 1 219 1 278 1 94 1 280 3 224 1 10 1 346 2 284 2 234 1 189 1 348 1 192 1 294 1 352 1 150 1 59 1 242 1 193 1 194 1 195 1 304 2 247 1 305 2 248 1 307 2 252 2 118 3 315 1 368 1 26 1 317 1 371 1 166 2 320 1 322 1 375 1 78 2 169 1 377 1 172 1 
59 1 242 1 193 1 195 1 214 1 305 2 304 2 248 1 274 1 118 3 313 1 280 3 224 1 10 1 26 1 317 1 371 1 234 1 322 1 373 1 377 1 172 1 
59 1 242 1 193 1 297 1 195 1 304 1 214 1 305 3 248 1 92 1 274 1 118 3 280 3 224 1 10 1 26 1 317 1 229 1 371 1 234 1 322 1 373 1 377 1 172 1 
59 1 242 1 193 1 297 1 195 1 214 1 305 3 304 2 248 1 92 1 274 1 118 3 313 1 280 3 224 1 10 1 26 1 317 1 229 1 371 1 234 1 47 1 322 1 373 1 377 1 172 1 
214 1 90 1 92 1 42 1 274 1 183 1 43 1 280 3 224 1 10 1 227 1 234 1 284 1 189 2 47 2 51 1 192 1 348 2 294 1 352 1 242 1 59 2 193 1 297 1 196 1 195 1 113 1 305 2 304 3 247 1 248 1 313 2 118 3 201 1 26 1 317 2 371 2 167 1 320 1 322 1 128 1 373 1 375 1 78 1 377 1 265 1 172 2 
59 1 242 1 193 1 195 1 214 1 247 1 305 2 248 1 274 1 118 2 280 2 224 1 10 1 368 1 317 1 371 1 284 1 234 1 189 1 320 1 322 1 348 1 192 1 375 1 78 1 377 1 352 1 294 1 172 1 
59 2 242 1 297 1 193 1 196 1 195 1 214 1 305 2 247 1 248 1 90 1 92 1 42 1 274 1 183 1 43 1 118 2 280 2 224 1 201 1 10 1 227 1 317 2 371 2 284 1 234 1 189 2 167 1 320 1 322 1 128 1 51 1 348 2 192 1 375 1 78 1 377 1 352 1 294 1 172 2 
59 2 242 1 297 1 193 1 196 1 195 1 214 1 305 2 247 1 248 1 90 1 92 1 42 1 274 1 183 1 43 1 118 2 280 2 224 1 201 1 10 1 227 1 317 2 371 2 284 1 234 1 189 2 167 1 320 1 322 1 128 1 51 1 348 2 192 1 375 1 78 1 377 1 352 1 294 1 172 2 
59 2 242 1 297 1 193 1 196 1 195 1 133 1 214 1 305 2 247 1 248 1 90 1 92 1 42 1 274 1 43 1 118 2 280 2 95 1 224 1 201 1 10 1 227 1 317 2 371 2 284 1 234 1 189 2 167 1 320 1 322 1 51 1 348 2 192 1 78 1 147 1 377 1 352 1 294 1 172 2 
214 1 90 1 92 1 274 1 42 1 183 1 43 1 280 2 224 1 10 1 227 1 229 1 234 1 284 1 189 2 47 1 51 1 192 1 348 2 294 1 352 1 242 1 59 2 193 1 297 1 196 1 195 1 304 1 305 3 247 1 248 1 313 1 118 2 201 1 317 2 371 2 167 1 320 1 322 1 128 1 375 1 78 1 377 1 265 1 172 2 
214 1 90 1 92 1 274 1 42 1 183 1 43 1 280 2 224 1 10 1 227 1 229 1 234 1 284 1 189 2 47 1 51 1 192 1 348 2 294 1 352 1 242 1 59 2 193 1 297 1 196 1 195 1 304 1 305 3 247 1 248 1 313 1 118 2 201 1 317 2 371 2 167 1 320 1 322 1 128 1 375 1 78 1 377 1 265 1 172 2 
59 1 242 1 193 1 195 1 214 1 247 1 305 2 248 1 274 1 118 2 280 2 224 1 10 1 368 1 317 1 371 1 284 1 234 1 189 1 320 1 322 1 348 1 192 1 78 1 377 1 147 1 352 1 294 1 172 1 
59 1 355 2 83 3 209 1 84 2 132 1 61 1 112 1 336 2 177 4 338 2 136 1 339 2 307 8 90 1 137 2 252 7 182 2 255 1 219 2 315 1 9 1 366 1 367 1 101 1 227 1 75 1 317 1 260 2 346 8 235 2 166 2 106 1 374 1 291 1 148 2 207 1 111 1 172 1 
355 6 356 1 84 1 61 3 62 1 38 2 21 2 336 1 177 2 4 1 338 1 306 1 137 1 255 3 257 2 259 1 100 1 235 1 286 1 30 1 106 1 323 1 52 1 109 1 148 1 379 1 
354 1 355 14 151 2 132 1 210 1 84 2 61 8 38 1 21 2 358 1 336 2 177 4 4 2 338 2 136 1 306 11 156 1 137 2 25 1 255 6 257 1 200 1 344 3 259 11 122 3 100 1 232 1 103 1 235 2 33 2 35 1 148 1 379 4 
59 1 355 2 83 1 84 1 132 1 20 1 61 1 38 1 211 1 177 2 336 1 178 1 338 1 136 1 339 1 307 1 68 1 90 1 137 1 252 1 157 1 182 1 25 1 363 1 219 1 255 1 256 1 227 1 317 2 346 1 235 1 166 1 77 1 327 1 148 1 379 1 111 1 172 2 
83 2 132 1 84 3 210 4 38 2 86 2 211 2 336 3 177 6 178 2 4 3 338 3 135 2 136 1 88 2 339 2 90 1 137 3 182 2 219 2 100 3 227 1 346 3 286 1 235 3 52 1 109 1 148 3 17 2 111 1 59 1 355 20 151 2 244 2 61 10 62 1 21 8 306 7 307 3 68 2 156 2 252 3 363 1 25 1 255 10 257 4 256 2 123 1 259 7 203 1 317 3 30 1 166 1 374 1 323 1 33 2 208 1 379 7 172 3 
355 2 210 1 84 1 61 2 63 1 21 1 177 2 336 1 4 1 338 1 235 1 306 1 106 1 137 1 33 1 148 1 379 1 259 1 
355 2 84 1 100 1 21 1 177 2 336 1 338 1 235 1 306 1 106 1 156 1 137 1 276 1 255 2 148 1 257 1 379 1 259 1 
355 4 151 1 210 1 84 1 100 1 61 2 21 2 177 2 336 1 4 1 338 1 235 1 306 2 156 1 106 1 137 1 33 1 255 2 148 1 257 1 379 2 259 2 
355 2 210 1 84 1 61 2 63 1 21 1 177 2 336 1 4 1 338 1 235 1 306 1 137 1 33 1 207 1 148 1 379 1 259 1 
355 2 84 1 100 1 21 1 177 2 336 1 338 1 235 1 306 1 156 1 137 1 276 1 255 2 207 1 148 1 257 1 379 1 259 1 
355 4 151 1 210 1 84 1 100 1 61 2 21 2 177 2 336 1 4 1 338 1 235 1 306 2 156 1 137 1 33 1 255 2 207 1 148 1 257 1 379 2 259 2 
355 4 151 1 210 1 84 1 100 1 61 2 21 2 177 2 336 1 4 1 338 1 235 1 306 2 156 1 137 1 33 1 255 2 148 1 257 1 379 2 259 2 
355 2 83 1 132 1 84 1 61 1 38 1 86 1 317 1 211 1 336 1 177 2 346 1 178 1 338 1 235 1 136 1 166 1 307 1 339 1 68 1 137 1 252 1 182 1 255 1 219 1 148 1 256 1 172 1 
355 2 83 1 132 1 84 1 0 1 61 1 38 1 317 1 336 1 177 2 271 1 346 1 338 1 235 1 136 1 166 1 307 1 339 1 68 1 137 1 49 1 252 1 182 1 255 1 219 1 148 1 256 1 172 1 
355 4 151 1 210 1 84 1 100 1 61 2 21 2 177 2 336 1 4 1 338 1 235 1 306 2 156 1 137 1 33 1 25 1 255 2 148 1 257 1 379 2 259 2 
355 4 83 1 151 1 210 1 84 1 61 2 86 1 21 2 211 1 177 2 336 1 178 1 4 1 338 1 306 2 339 1 88 1 307 1 156 1 68 1 137 1 252 1 182 1 255 2 219 1 257 1 256 1 259 2 100 1 101 1 317 1 346 1 235 1 33 1 148 1 379 2 172 1 
59 1 355 3 151 1 210 1 84 1 196 1 61 2 21 1 336 1 177 2 4 1 338 1 306 1 156 1 90 1 137 1 25 1 255 1 73 1 199 1 259 1 100 1 227 1 317 1 235 1 33 1 148 1 379 1 172 1 
59 1 355 3 151 1 84 1 196 1 61 1 21 1 336 1 177 2 4 1 338 1 306 1 90 1 156 1 137 1 25 1 255 2 199 1 257 1 259 1 97 1 100 1 227 1 317 1 235 1 33 1 148 1 379 1 172 1 
355 19 151 3 84 2 210 3 61 9 64 2 21 6 336 2 177 4 87 1 4 3 89 1 156 3 137 2 255 10 257 3 200 1 344 2 96 1 122 1 100 3 369 2 235 2 12 1 262 1 33 3 170 1 35 1 146 1 82 1 
355 26 151 3 210 2 84 3 61 14 64 4 21 4 336 3 177 6 87 1 4 3 89 1 156 2 23 1 137 3 255 12 342 1 257 2 344 2 96 2 122 2 100 2 369 1 370 2 235 3 12 1 262 2 324 1 33 3 35 2 110 1 130 1 58 1 82 1 
210 4 84 3 177 6 336 3 4 5 87 1 89 1 137 3 342 1 344 4 96 1 100 5 235 3 286 1 12 1 52 1 110 1 109 1 58 1 355 41 151 4 61 20 62 1 64 4 21 8 156 4 23 1 255 21 200 1 257 4 122 3 369 1 370 1 262 2 30 1 372 1 323 1 324 1 33 4 35 3 170 1 130 1 82 1 
355 38 151 4 84 4 210 3 61 20 62 1 64 4 21 7 336 4 177 8 87 1 4 5 89 1 156 3 23 1 137 4 255 18 342 1 257 4 200 1 344 4 96 1 122 3 100 4 369 1 370 2 286 1 235 4 12 1 30 1 262 2 372 1 323 1 52 1 324 1 33 4 170 1 35 3 109 1 110 1 130 1 58 1 82 1 
354 2 355 52 151 7 84 2 210 7 61 27 62 1 64 4 21 14 336 2 177 4 87 1 4 8 89 1 156 7 23 1 137 2 255 25 342 1 257 7 200 2 344 4 96 1 122 4 100 8 369 1 370 1 286 1 235 2 12 1 30 1 262 1 323 1 52 1 324 1 33 7 35 2 109 1 110 1 130 1 58 1 82 1 
153 1 360 1 
281 1 41 1 53 1 188 1 212 1 295 1 233 1 213 1 241 1 
281 1 143 1 301 1 53 1 188 1 212 1 279 1 314 1 233 1 241 1 
281 1 297 1 212 1 188 1 233 1 190 2 249 1 107 1 69 1 143 1 53 1 279 1 221 1 118 1 314 1 280 1 160 1 241 1 
281 1 297 1 212 1 188 1 233 1 190 2 249 1 107 1 69 1 143 1 53 1 279 1 221 1 118 1 314 1 280 1 160 1 241 1 
281 1 297 1 212 1 188 1 233 1 190 2 249 1 107 1 69 1 143 1 53 1 279 1 221 1 118 1 314 1 280 1 160 1 241 1 
308 1 205 1 164 1 
308 1 205 1 164 1 
14 1 350 1 
308 1 14 1 350 1 
243 1 152 1 
59 2 243 1 38 1 153 1 152 1 212 1 22 1 249 1 360 1 90 2 69 1 118 1 280 1 6 1 281 1 225 1 227 2 317 2 46 1 188 1 233 1 190 1 104 1 191 1 53 1 172 2 241 1 
205 1 164 1 
308 1 14 1 350 1 
59 2 355 2 83 1 84 1 132 1 61 1 112 1 177 2 336 1 134 1 338 1 136 1 339 1 307 2 137 1 252 2 182 1 25 1 219 1 255 1 120 1 9 1 163 1 317 2 260 2 346 2 235 1 349 1 79 1 148 1 172 2 
11 1 101 1 228 1 162 1 346 2 359 1 261 1 339 1 307 2 309 1 374 1 252 2 182 1 312 1 277 1 129 1 266 2 353 1 173 1 
11 1 228 1 162 1 141 1 346 1 359 1 261 1 307 1 339 1 309 1 374 1 252 1 182 1 312 1 266 2 353 1 173 1 
83 1 209 1 346 1 339 1 166 1 307 1 117 1 309 1 252 1 182 1 219 1 129 1 326 1 315 1 
11 1 228 1 162 1 346 1 359 1 261 1 339 1 307 1 309 1 374 1 252 1 182 1 312 1 277 1 129 1 266 2 353 1 173 1 
32 1 
297 1 92 1 26 1 118 1 280 1 304 1 
83 1 209 1 270 1 67 1 247 1 304 4 339 1 307 4 70 2 252 4 182 1 72 1 219 1 278 1 118 3 94 1 280 3 315 1 26 2 346 4 284 2 166 2 320 2 292 1 78 2 169 2 352 2 294 2 150 2 
297 1 356 1 92 1 78 1 179 1 57 1 284 1 
297 2 99 1 26 1 284 1 304 1 29 1 247 1 288 1 320 1 92 1 375 1 78 1 294 1 352 1 118 1 222 1 280 1 
83 10 175 1 337 2 179 1 4 2 135 2 339 4 218 2 92 2 182 3 340 1 274 2 219 3 7 3 280 5 100 2 101 1 283 1 346 3 284 9 285 2 288 6 347 2 293 6 144 2 294 4 352 4 57 1 150 1 297 8 151 2 154 2 247 4 304 5 307 3 156 2 70 1 252 3 158 2 71 2 159 6 72 1 118 5 256 3 202 2 26 3 29 12 166 1 320 4 264 1 33 2 78 8 169 2 329 2 
297 5 151 2 4 2 304 1 247 2 272 1 156 2 92 2 159 5 342 1 118 1 280 1 344 1 122 1 202 2 100 2 26 1 285 1 284 8 29 6 288 3 320 2 293 5 324 1 78 5 33 2 169 1 35 1 352 2 294 2 110 1 328 1 130 1 150 1 58 1 
59 1 196 1 4 2 247 1 90 1 42 1 118 1 280 1 201 1 202 2 161 1 100 1 227 1 317 1 371 1 285 1 284 2 286 1 167 1 320 1 128 1 51 1 323 1 52 1 78 2 352 1 294 1 172 1 
297 1 179 1 284 1 247 1 320 1 92 1 78 1 294 1 352 1 57 1 
202 2 151 2 297 5 100 2 4 2 285 1 135 1 284 5 29 10 288 5 156 2 293 5 33 2 78 5 159 5 
355 1 59 2 83 1 132 1 84 1 196 2 38 1 86 1 211 1 336 1 177 2 178 1 338 1 307 1 339 1 90 2 68 1 137 1 252 1 182 1 255 1 219 1 256 1 201 1 226 1 227 2 317 3 346 1 235 1 166 1 148 1 172 3 
297 4 284 1 29 4 247 1 288 2 320 1 92 2 293 2 159 2 78 2 169 1 294 1 352 1 109 1 150 1 
281 1 311 1 233 1 
281 1 311 1 233 1 
281 1 311 1 233 1 
281 1 230 1 233 1 
281 1 230 1 233 1 
281 1 230 1 233 1 
281 1 233 1 
53 1 188 1 
281 1 142 1 152 1 314 1 233 1 
355 8 210 1 84 2 100 1 61 4 62 1 21 3 177 4 336 2 370 1 4 1 235 2 286 1 30 1 137 2 323 1 52 1 255 4 109 1 257 2 
355 6 356 1 100 1 61 3 323 1 62 1 52 1 21 2 255 3 109 1 4 1 257 2 286 1 30 1 
355 4 151 1 84 1 210 1 100 1 61 2 21 2 177 2 336 1 4 1 235 1 156 1 137 1 237 1 33 1 255 2 257 1 
355 7 151 1 210 1 100 1 61 3 21 2 4 1 156 1 33 1 35 1 255 4 257 1 200 1 344 2 122 1 
355 23 354 1 151 2 210 4 84 2 61 11 62 1 21 9 177 4 336 2 4 3 156 2 137 2 255 12 200 1 257 5 344 2 122 2 100 3 165 1 370 2 232 1 286 2 235 2 30 1 323 1 52 2 33 2 109 1 
355 1 255 1 344 1 
355 1 61 1 122 1 
355 6 151 1 84 1 210 1 61 3 100 1 21 3 336 1 177 2 4 1 135 1 235 1 156 1 137 1 237 1 33 1 255 3 257 2 
355 12 151 2 210 1 84 1 61 6 21 2 336 1 177 2 4 2 89 1 156 2 137 1 255 6 342 1 257 1 344 1 122 1 100 2 235 1 324 1 33 2 35 1 110 1 130 1 58 1 
355 6 210 1 61 3 100 1 21 2 4 1 286 1 323 1 52 1 255 3 257 1 
355 3 210 1 84 1 61 1 62 1 21 2 165 1 370 1 177 2 336 1 286 1 235 1 30 1 137 1 52 1 255 2 257 1 
355 10 84 1 161 1 210 2 61 5 100 2 21 5 336 1 177 2 4 2 235 1 286 2 89 1 137 1 323 1 52 2 255 5 257 3 
355 2 84 1 210 1 61 2 21 1 177 2 336 1 4 1 235 1 89 1 137 1 33 1 
355 4 151 1 84 1 210 1 100 1 61 2 21 2 177 2 336 1 4 1 235 1 156 1 89 1 137 1 33 1 255 2 257 1 
355 3 84 3 210 1 61 1 21 2 165 1 370 1 177 6 336 3 235 3 286 1 89 1 137 3 52 1 170 1 255 2 257 1 
355 34 151 3 84 5 210 5 61 16 62 1 21 12 336 5 177 10 303 1 4 5 89 1 156 3 137 5 253 1 255 18 200 1 257 7 344 4 122 3 100 5 165 1 370 2 286 3 235 5 30 1 323 2 52 3 237 1 33 3 35 1 170 1 109 1 296 1 
355 8 84 1 61 4 62 1 21 2 336 1 177 2 4 1 89 1 137 1 255 4 257 2 344 1 122 1 100 1 235 1 286 1 30 1 323 1 52 1 35 1 109 1 58 1 
355 11 151 1 84 2 210 1 61 6 62 1 21 3 336 2 177 4 4 2 89 1 137 2 255 5 257 2 200 1 344 2 122 1 100 1 286 1 235 2 30 1 323 1 52 1 237 1 33 1 35 1 109 1 58 1 
355 19 151 2 210 1 84 3 61 9 62 1 21 4 336 3 177 6 4 3 89 1 156 2 137 3 255 10 342 1 257 3 344 1 122 1 100 3 370 1 286 1 235 3 30 1 323 1 52 1 324 1 237 1 33 2 35 1 109 1 110 1 130 1 58 1 
355 17 151 2 210 2 84 3 61 10 62 1 21 5 336 3 177 6 4 3 89 1 156 1 137 3 255 7 342 1 257 3 344 1 122 1 100 2 370 1 286 1 235 3 30 1 323 1 52 1 324 1 237 1 33 2 35 1 109 1 110 1 130 1 58 1 
355 8 84 1 61 4 62 1 21 2 336 1 177 2 4 1 89 1 137 1 255 4 257 2 344 1 122 1 100 1 235 1 286 1 30 1 323 1 52 1 35 1 109 1 58 1 
355 12 151 2 210 1 84 1 61 6 21 2 336 1 177 2 4 2 89 1 156 2 137 1 255 6 342 1 257 1 344 1 122 1 100 2 235 1 324 1 33 2 35 1 110 1 130 1 58 1 
355 18 151 2 210 2 84 4 61 10 62 1 21 5 336 4 177 8 4 3 89 1 156 1 137 4 255 8 342 1 257 3 344 1 122 1 100 2 370 2 286 1 235 4 30 1 323 1 52 1 324 1 237 1 33 2 35 1 109 1 110 1 130 1 58 1 
355 16 151 3 210 3 84 4 61 9 21 6 336 4 177 8 4 3 89 1 156 2 137 4 255 7 342 1 257 3 344 1 122 1 100 2 370 2 235 4 324 1 33 3 35 1 170 1 110 1 130 1 58 1 
355 7 210 3 100 1 61 3 62 1 21 6 4 1 286 3 30 2 323 1 52 3 255 4 257 3 
355 18 151 2 210 1 84 4 61 10 62 1 21 4 336 4 177 8 4 3 89 1 156 1 137 4 255 8 342 1 257 3 344 1 122 1 100 2 370 2 286 1 235 4 30 1 323 1 52 1 324 1 33 2 35 1 170 1 109 1 110 1 130 1 58 1 
59 1 361 1 322 1 263 1 38 1 317 1 172 1 
59 1 38 1 245 1 357 1 317 1 197 1 65 1 321 1 361 1 263 1 322 1 172 1 
252 1 182 1 346 1 359 1 266 1 261 1 173 1 339 1 307 1 166 1 
83 1 9 1 374 1 252 2 182 1 101 1 163 1 219 1 346 2 339 1 307 2 
83 1 209 1 356 1 252 1 182 1 219 1 346 1 315 1 339 1 307 1 166 1 
59 1 83 1 38 1 227 1 317 2 211 1 346 1 339 1 166 1 307 1 68 1 90 1 252 1 182 1 219 1 256 1 111 1 172 2 
59 2 242 1 83 3 38 1 211 1 337 1 307 1 339 1 90 1 68 1 252 1 70 1 182 1 219 2 256 2 224 1 227 2 317 2 346 1 371 1 347 1 111 1 172 2 
59 2 242 1 83 3 38 1 337 1 307 2 339 1 90 1 68 1 252 2 70 1 182 1 219 2 256 2 224 1 186 1 227 2 317 2 346 2 371 1 49 1 347 1 111 1 172 2 
297 1 83 4 186 1 337 1 102 1 346 3 304 1 166 1 339 1 307 3 347 1 70 1 252 3 92 1 182 1 274 1 254 1 71 1 219 1 118 2 280 2 7 1 256 1 
297 1 83 4 186 1 337 1 346 3 304 1 166 1 339 1 307 3 218 1 347 1 70 1 252 3 92 1 182 1 274 1 71 1 219 1 118 2 280 2 7 1 256 1 
252 1 182 1 75 1 346 1 339 1 307 1 
9 1 366 1 83 3 19 1 367 1 101 1 75 1 260 1 346 7 166 2 307 7 339 3 310 1 374 1 291 1 252 6 182 2 340 1 219 2 343 1 256 1 
83 1 84 2 38 2 86 1 211 1 336 2 177 4 178 1 4 1 338 2 88 1 339 1 90 1 137 2 182 1 219 1 100 1 101 1 227 1 346 1 235 2 286 1 52 1 109 1 148 2 111 1 59 1 355 6 244 1 61 3 62 1 21 2 306 1 307 1 68 1 252 1 25 1 255 3 120 1 256 1 257 2 259 1 317 2 30 1 323 1 379 1 172 2 
297 1 83 2 179 1 154 1 247 2 304 2 307 1 218 1 252 1 92 1 274 1 158 1 71 1 72 1 118 3 280 3 7 1 225 1 26 1 346 1 284 1 166 1 320 2 78 1 352 2 294 2 57 1 329 1 
83 2 175 1 101 1 75 1 346 2 307 2 339 2 252 2 182 1 340 1 71 1 219 1 256 1 
209 1 83 1 186 1 101 1 346 4 339 1 166 1 307 4 252 4 182 1 93 1 219 1 315 1 
83 1 19 1 346 2 307 2 339 2 70 1 252 2 182 1 5 1 219 1 208 1 343 1 256 1 131 1 
209 1 9 1 83 3 367 1 101 1 346 5 166 1 307 5 339 2 70 1 252 4 291 1 182 2 93 1 219 2 315 1 
209 1 9 1 83 3 367 1 101 1 346 5 166 1 307 5 319 1 339 2 70 1 252 4 182 2 93 1 219 2 315 1 
59 1 83 1 38 1 227 1 317 2 346 1 339 1 166 1 307 1 68 1 90 1 49 1 252 1 182 1 219 1 256 1 111 1 172 2 
83 1 19 1 346 1 307 1 339 2 310 1 70 1 252 1 182 1 340 1 219 1 343 1 256 1 
290 1 38 1 231 1 149 1 115 1 
242 1 8 1 297 1 10 1 225 1 38 1 316 1 45 1 371 1 231 2 115 1 290 2 92 1 274 1 108 1 118 2 280 2 149 2 224 1 
59 1 317 1 231 1 134 1 115 1 290 1 349 1 79 1 172 1 
316 1 108 1 115 1 
282 1 299 1 1 2 176 3 198 4 250 4 15 1 145 1 34 2 171 1 80 1 36 1 365 1 74 2 
282 1 185 1 176 1 1 1 2 1 198 2 289 1 250 2 15 1 50 1 34 1 74 1 
250 3 15 1 282 1 50 1 176 1 34 1 145 2 206 1 80 2 198 3 365 1 74 1 
181 2 332 1 176 2 180 1 
250 1 15 1 282 1 50 1 56 1 198 1 
250 2 15 1 282 1 50 1 176 1 1 1 34 1 378 1 198 2 74 1 
269 1 
356 1 176 1 34 1 74 1 
250 1 15 1 282 1 176 1 34 1 198 1 74 1 
250 1 246 1 318 1 
282 1 176 1 198 3 250 3 15 1 50 1 145 1 34 1 80 2 365 1 330 1 74 1 
250 2 15 1 282 1 85 1 176 1 1 1 34 1 198 2 74 1 
250 1 15 1 282 1 50 1 299 1 176 1 312 1 266 1 204 1 198 1 261 1 
250 1 15 1 282 1 50 1 176 1 34 1 198 1 
250 1 15 1 282 1 50 1 34 2 198 1 74 1 
124 1 282 2 176 1 198 2 114 1 250 2 15 2 50 1 34 1 325 1 
282 1 299 1 1 2 176 2 66 1 198 3 250 3 15 1 50 1 34 1 378 1 36 1 74 1 
282 1 176 1 162 1 1 1 198 2 261 1 116 1 250 2 15 1 50 1 312 1 34 1 266 2 173 1 74 1 
282 2 85 1 299 1 1 2 176 2 76 1 198 4 250 4 15 2 50 1 34 1 36 1 74 1 
250 1 15 1 282 1 50 1 176 1 34 1 198 1 74 1 
250 1 15 1 282 1 50 1 176 1 34 1 198 1 74 1 
282 1 1 1 176 1 198 3 250 3 15 1 50 1 34 1 80 1 378 1 74 1 
299 1 176 1 171 1 36 1 
176 1 34 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
167 3 267 1 61 2 3 6 110 5 306 1 193 2 220 2 336 2 292 1 144 1 294 1 311 1 274 2 122 1 199 9 201 1 205 4 10 1 371 2 373 1 157 1 231 2 350 1 36 1 378 9 262 1 301 1 
167 3 267 1 61 2 3 6 110 5 306 1 193 2 336 2 220 2 292 1 144 1 294 1 311 1 274 2 122 1 199 9 201 1 205 4 10 1 371 2 373 1 231 2 157 1 350 1 36 1 378 9 262 1 301 1 
167 4 267 1 61 2 3 7 110 6 306 1 193 2 336 2 220 2 292 1 144 1 294 1 311 1 274 2 122 1 199 10 201 1 205 5 10 1 371 2 373 1 231 2 157 1 350 1 36 1 378 10 262 1 301 1 
167 2 267 1 61 2 3 4 110 4 306 1 193 2 336 2 220 1 292 1 144 1 294 1 311 1 274 2 122 1 199 7 201 1 205 3 371 2 373 1 231 2 157 1 350 1 36 1 378 7 262 1 301 1 
167 1 199 4 61 1 205 2 3 3 10 1 110 3 371 1 306 1 193 1 231 1 350 1 336 1 220 2 292 1 378 4 144 1 301 1 
199 2 50 1 61 1 110 1 373 1 371 1 157 1 193 1 350 1 336 1 292 1 378 2 144 1 56 1 274 1 135 1 
199 3 167 1 205 1 3 1 110 2 371 2 350 1 336 2 292 1 378 3 144 1 311 1 274 1 
122 1 199 9 167 3 147 1 150 1 61 1 205 4 3 7 10 1 110 5 306 1 371 2 193 1 231 1 350 1 220 2 336 2 36 1 292 1 378 9 144 1 311 1 274 1 301 1 
122 1 199 9 167 3 147 1 150 1 61 1 205 4 3 7 10 1 110 5 306 1 371 2 193 1 231 1 350 1 220 2 336 2 36 1 292 1 378 9 144 1 311 1 274 1 301 1 
237 1 179 1 331 1 
179 1 318 2 15 1 
70 2 218 2 107 2 181 2 333 1 75 2 363 2 365 1 
264 2 103 1 266 1 107 2 333 1 108 1 245 1 111 1 248 2 218 2 17 2 117 1 363 3 225 2 365 1 173 1 342 1 70 3 26 1 125 1 7 1 295 1 206 1 52 1 94 1 230 1 297 1 322 2 73 1 208 1 181 2 300 1 380 1 75 2 165 1 354 1 13 1 
70 1 218 1 282 1 221 1 107 1 181 1 75 1 344 1 363 1 365 1 
237 1 70 1 107 1 192 1 344 1 296 1 156 1 34 1 219 1 179 1 363 1 236 1 339 1 76 1 
237 1 70 1 107 1 344 1 296 1 34 1 218 1 219 2 179 1 181 1 75 1 363 1 236 2 339 1 76 1 
298 1 219 1 251 1 82 1 236 1 
237 1 189 1 58 1 219 2 179 1 251 1 82 1 236 2 
219 1 251 1 236 1 
70 1 82 1 107 1 8 1 344 1 219 1 282 1 218 1 221 1 181 1 75 1 363 1 236 1 365 1 
179 1 
237 1 189 1 219 2 179 1 251 1 285 1 82 1 236 2 
237 1 189 1 137 1 82 2 60 2 243 1 31 1 374 1 348 1 219 5 177 1 179 1 222 1 180 2 251 2 308 1 182 2 261 1 236 5 
331 1 333 1 
70 2 107 2 333 2 216 1 218 1 181 1 75 1 363 2 91 1 
166 1 142 1 161 1 
70 1 103 1 26 1 266 1 333 1 108 1 295 1 52 1 230 1 158 1 322 1 17 1 363 1 225 1 354 1 13 1 
166 1 253 1 70 2 103 1 26 1 105 1 266 1 107 1 108 1 295 1 52 1 230 1 322 1 218 1 17 1 75 1 363 2 225 1 13 1 354 1 
253 1 70 3 218 3 181 1 107 3 333 1 75 3 363 3 
70 1 218 1 221 1 107 1 75 1 344 1 363 1 
70 1 218 1 107 1 181 1 75 1 344 1 363 1 91 1 216 1 
264 2 103 1 105 1 266 1 303 1 107 3 333 1 108 1 245 1 216 1 111 1 248 1 218 3 219 1 17 1 363 4 225 1 339 1 365 1 173 1 342 1 70 4 253 1 26 1 125 1 7 1 295 1 32 1 344 1 52 1 296 1 230 1 297 1 34 1 322 1 73 1 208 1 181 2 75 3 236 1 76 1 165 1 13 1 354 1 
124 1 70 2 218 1 253 1 107 2 333 1 192 1 75 1 363 2 
253 2 70 3 105 1 107 3 344 1 32 1 216 1 296 1 34 1 219 1 218 3 290 1 179 1 181 1 75 3 363 3 236 1 339 1 76 1 
166 1 253 1 70 2 107 2 216 1 218 2 161 1 181 1 75 2 363 2 
70 1 103 1 26 1 266 1 333 1 108 1 295 1 52 1 230 1 322 1 17 1 363 1 225 1 354 1 13 1 
238 1 70 1 103 1 26 1 266 1 333 1 108 1 295 1 52 1 207 1 230 1 322 1 17 1 363 1 225 1 
166 2 264 2 104 1 214 1 63 1 217 1 111 1 113 1 248 4 142 2 195 1 310 1 362 1 173 1 342 2 125 1 346 1 94 2 297 1 73 1 178 1 208 1 161 2 55 1 
34 1 70 1 218 1 107 1 75 1 344 1 363 1 84 1 
124 1 253 2 70 5 105 1 107 5 333 1 192 1 216 1 349 1 218 4 181 1 75 4 363 5 92 1 
70 2 218 2 221 1 107 2 75 2 344 1 363 2 84 1 
263 1 323 1 
263 1 323 1 
99 1 257 1 
99 1 257 1 
99 1 257 1 
146 1 263 1 323 1 
146 1 263 1 323 1 
263 1 323 1 183 1 
263 2 65 1 323 2 99 1 14 1 257 1 
146 1 263 1 323 1 
263 1 323 1 121 1 
263 1 323 1 121 1 
263 1 323 1 121 1 
340 1 263 2 269 1 126 1 81 2 370 2 174 1 279 1 14 1 171 3 323 2 219 2 232 2 179 1 87 1 19 1 133 2 236 2 364 2 
263 1 81 1 107 2 333 1 171 1 218 2 219 1 19 1 363 2 89 1 364 1 70 2 369 1 343 1 255 1 153 1 323 1 232 1 130 1 75 2 183 1 133 1 236 1 184 1 
193 1 231 1 61 1 
193 1 61 1 135 1 
231 2 358 1 37 1 61 3 135 1 347 1 
231 1 143 1 37 1 61 2 135 1 347 1 
231 1 37 1 61 2 135 1 347 2 
189 1 237 1 82 4 60 1 214 1 246 1 15 1 271 1 16 2 219 5 251 1 66 1 308 1 362 1 89 1 313 1 22 1 23 1 203 2 318 3 31 2 255 1 346 1 178 1 128 1 179 2 180 1 182 1 134 2 236 5 261 3 184 1 
237 1 189 1 82 7 60 2 214 3 246 2 64 1 15 3 16 6 219 9 251 6 66 1 308 1 362 3 89 4 23 2 227 5 316 1 229 1 318 9 31 6 346 3 348 1 155 1 298 5 178 3 128 3 179 5 180 2 210 1 182 2 134 6 236 9 261 8 101 1 
237 1 82 2 60 1 214 1 246 1 15 2 16 2 219 3 362 1 89 1 313 1 22 1 23 1 203 1 318 4 31 2 346 1 348 1 178 1 128 1 179 3 180 1 182 1 236 3 261 3 134 2 
237 1 82 3 60 1 214 2 246 1 64 1 15 3 16 4 219 4 362 2 89 2 313 1 22 1 23 1 229 1 203 2 318 7 31 4 346 2 348 1 178 2 128 2 179 4 180 1 182 1 134 4 236 4 261 5 101 1 
230 1 331 1 286 1 
230 1 186 1 
304 1 
230 1 52 1 
230 3 266 1 114 1 326 1 286 2 52 1 
230 1 266 1 52 1 
230 1 337 1 
342 3 104 2 302 1 1 1 244 1 346 1 94 4 248 7 178 1 160 2 118 1 379 1 233 1 310 3 234 1 325 1 187 1 
342 3 104 2 302 1 1 1 244 1 346 1 94 4 248 7 178 1 160 2 118 1 379 1 233 1 310 3 234 1 325 1 187 1 
342 3 104 2 302 1 1 1 244 1 346 1 94 4 248 7 178 1 160 2 118 1 379 1 233 1 310 3 234 1 325 1 57 1 187 1 
264 2 104 5 302 2 1 1 244 1 214 3 111 1 250 4 248 31 118 1 172 1 67 3 310 10 362 3 173 1 342 15 71 1 93 1 33 1 53 1 346 4 281 1 94 16 73 1 208 1 160 3 178 4 128 3 233 2 379 5 234 2 325 2 187 1 12 1 
264 4 104 3 302 1 1 1 244 1 111 2 248 9 118 1 310 4 173 2 342 4 53 1 346 1 94 5 73 2 178 1 208 2 160 2 98 1 233 1 379 1 325 1 234 1 381 1 
106 1 2 1 358 1 61 2 3 1 62 1 110 1 45 1 193 1 17 1 336 1 338 1 292 1 144 1 225 1 274 1 145 1 199 2 26 1 295 1 258 1 371 1 231 1 322 1 350 1 35 1 378 2 235 1 211 1 135 1 
190 1 106 1 358 1 332 1 2 1 61 2 3 2 62 1 110 1 45 1 193 1 17 1 336 1 338 1 361 1 144 1 225 1 274 1 199 3 26 1 295 1 258 1 371 1 231 1 322 1 350 1 378 3 235 1 211 1 135 1 
190 1 2 1 358 1 61 2 3 2 110 1 45 1 193 1 17 1 338 1 361 1 144 1 225 1 274 1 199 2 26 1 295 1 258 1 231 1 322 1 350 1 378 2 235 1 211 1 135 1 
199 1 103 1 41 1 26 1 28 1 357 1 332 1 295 1 52 1 139 1 258 2 371 1 45 2 230 1 322 1 17 1 336 1 378 1 252 1 100 1 235 2 225 1 274 2 
190 1 106 1 2 1 358 1 61 2 62 1 45 1 193 1 17 1 336 1 338 1 292 1 225 1 274 1 145 1 199 1 26 1 295 1 258 1 371 1 231 1 322 1 378 1 235 1 211 1 135 1 
319 1 
237 1 189 3 330 2 79 1 40 1 43 1 192 1 246 1 289 1 251 6 339 1 200 2 295 1 344 1 52 1 256 2 296 1 156 1 100 1 261 2 212 4 103 2 265 2 357 1 268 1 107 1 60 1 15 2 219 5 17 2 308 1 223 1 363 1 224 2 225 2 273 1 312 1 314 1 366 2 24 1 70 1 27 2 317 1 26 1 318 2 31 2 230 1 322 2 34 1 179 2 180 1 182 1 236 5 76 1 39 1 
212 2 189 1 268 1 107 1 43 1 285 1 192 1 219 3 251 2 363 1 273 1 339 1 312 1 200 1 70 1 24 1 344 1 296 1 156 1 34 1 236 3 76 1 
212 3 237 1 189 1 268 1 107 1 43 1 285 1 192 1 219 3 251 1 363 1 273 1 339 1 312 1 70 1 24 1 344 1 256 1 296 1 156 1 34 1 179 1 236 3 76 1 
189 1 212 3 237 1 330 1 268 1 285 1 107 1 43 1 192 1 219 3 251 2 363 1 273 1 339 1 312 1 200 1 70 1 24 1 344 1 256 1 296 1 156 1 34 1 179 1 236 3 76 1 
189 3 237 5 330 4 285 1 43 1 192 1 138 1 289 1 251 7 339 1 200 4 148 1 344 1 256 4 296 1 156 1 209 1 261 1 212 6 265 2 268 1 107 1 60 1 15 2 219 5 308 1 223 1 363 1 273 1 224 2 312 1 70 1 24 1 366 2 27 2 31 1 372 1 34 1 375 1 179 5 180 1 182 1 236 5 76 1 
189 2 237 1 330 2 43 1 192 1 289 1 251 4 339 1 200 2 344 1 256 2 296 1 156 1 261 1 212 4 265 2 268 1 107 1 60 1 15 2 219 4 308 1 223 1 363 1 273 1 224 2 312 1 70 1 24 1 366 2 27 2 318 2 31 1 34 1 179 2 180 1 182 1 236 4 76 1 39 1 
237 1 189 2 212 4 330 2 265 2 268 1 107 1 43 1 60 1 192 1 138 1 15 2 289 1 219 4 251 4 308 1 223 1 363 1 224 2 273 1 339 1 312 1 200 2 366 2 70 1 24 1 27 2 31 1 344 1 256 2 296 1 372 1 156 1 375 1 34 1 179 1 180 1 182 1 261 1 236 4 76 1 
237 1 189 2 212 4 330 2 265 2 268 1 107 1 43 1 60 1 192 1 138 1 15 2 289 1 219 4 251 4 308 1 223 1 363 1 224 2 273 1 339 1 312 1 200 2 366 2 70 1 24 1 27 2 31 1 344 1 256 2 296 1 372 1 156 1 375 1 34 1 179 1 180 1 182 1 261 1 236 4 76 1 
237 1 189 2 212 4 330 2 268 1 107 1 43 1 60 1 192 1 219 4 251 4 308 1 223 1 363 1 273 1 339 1 312 1 200 2 366 2 70 1 24 1 27 2 367 1 318 2 31 1 344 1 256 2 296 1 320 1 156 1 375 1 34 1 74 2 179 1 180 1 129 2 131 1 182 1 261 1 236 4 76 1 
237 1 189 2 212 5 330 3 265 2 268 1 107 1 43 1 60 1 192 1 138 1 15 2 289 1 219 4 251 5 308 1 223 1 363 1 224 2 273 1 339 1 312 1 200 3 366 2 70 1 24 1 27 2 148 1 31 1 344 1 256 3 296 1 372 1 156 1 375 1 34 1 179 1 180 1 182 1 261 1 236 4 76 1 
237 1 189 2 212 5 330 3 265 2 268 1 107 1 43 1 60 1 192 1 138 1 15 2 289 1 219 4 251 5 308 1 223 1 363 1 224 2 273 1 339 1 312 1 200 3 366 2 70 1 24 1 27 2 148 1 31 1 344 1 256 3 296 1 372 1 156 1 375 1 34 1 179 1 180 1 182 1 261 1 236 4 76 1 
189 2 237 1 330 2 43 1 192 1 251 4 339 1 200 2 344 1 256 2 296 1 156 1 261 1 212 4 268 1 107 1 60 1 219 4 308 1 223 1 363 1 273 1 312 1 70 1 24 1 366 2 27 2 318 2 31 1 320 1 34 1 74 2 179 1 180 1 129 2 182 1 236 4 76 1 39 1 
166 1 264 2 104 2 302 1 331 1 1 1 333 2 244 1 217 1 111 1 248 6 142 1 118 1 310 2 173 1 342 3 125 1 346 1 94 3 297 1 73 1 208 1 178 1 160 1 161 1 234 1 
166 11 264 4 104 1 0 1 333 1 214 1 288 1 111 2 250 3 248 14 142 11 86 1 67 3 6 1 310 2 362 2 21 1 173 2 342 6 125 1 7 1 93 1 206 1 33 1 346 1 94 8 297 2 73 2 208 2 178 2 128 2 161 4 379 1 
264 2 103 1 105 1 266 1 107 1 333 1 108 1 111 1 17 1 218 1 248 2 86 1 363 2 225 1 275 1 173 1 342 1 70 2 253 1 26 1 125 1 7 1 30 1 295 1 206 1 52 1 175 1 94 1 230 1 158 1 322 1 297 1 73 1 208 1 161 1 75 1 13 1 354 1 
239 2 190 1 1 1 333 2 244 1 245 2 287 2 248 20 142 7 86 1 49 1 342 10 253 1 7 1 295 2 206 1 52 2 346 3 94 10 297 3 97 2 160 1 208 3 161 7 354 2 13 2 166 7 264 6 104 4 103 1 105 1 302 1 266 2 107 1 108 2 214 2 111 3 17 3 218 1 118 1 310 8 362 2 363 3 225 3 123 1 173 3 70 3 26 2 276 1 125 3 278 2 230 2 322 3 73 3 178 3 128 2 379 4 234 1 75 1 
264 4 103 2 190 1 357 1 107 1 217 1 111 2 218 1 17 8 248 2 309 1 196 1 363 1 225 8 173 2 342 1 70 1 253 1 26 2 202 1 125 2 29 1 7 1 295 2 206 1 52 2 154 1 94 1 230 3 322 7 297 2 73 2 208 2 35 1 260 1 377 1 300 2 75 1 100 1 
166 1 78 1 264 2 104 1 107 1 214 1 216 1 111 1 218 1 248 3 142 1 86 1 310 1 362 1 363 1 173 1 342 2 70 1 125 1 346 1 94 1 297 1 73 1 208 1 178 1 128 1 161 1 181 1 75 1 
173 1 166 1 264 2 125 1 217 1 111 1 94 2 297 1 248 2 73 1 208 1 178 1 142 1 161 1 379 1 310 1 362 1 55 1 
173 1 166 1 342 2 264 2 104 1 125 1 214 1 217 1 63 1 111 1 346 1 297 1 248 2 73 1 208 1 142 1 161 1 310 1 
166 2 264 2 104 1 214 1 217 1 111 1 248 4 142 2 310 2 362 1 173 1 342 2 125 1 346 1 94 2 297 1 73 1 178 1 208 1 128 1 161 2 379 1 
173 1 166 1 264 2 125 1 111 1 94 2 297 1 248 2 73 1 208 1 178 1 142 1 161 1 379 1 310 1 196 1 362 1 55 1 
173 1 166 1 342 2 264 2 104 1 125 1 214 1 63 1 111 1 346 1 297 1 248 2 73 1 208 1 142 1 161 1 310 1 196 1 
166 2 264 2 104 1 214 1 111 1 248 4 142 2 196 1 310 2 362 1 173 1 342 2 125 1 346 1 94 2 297 1 73 1 178 1 208 1 128 1 161 2 379 1 
166 2 264 2 104 1 214 1 111 1 248 4 142 2 310 2 362 1 173 1 342 2 125 1 346 1 94 2 297 1 73 1 178 1 208 1 128 1 161 2 379 1 
264 2 103 1 266 1 333 1 108 1 245 1 111 1 248 2 17 1 363 1 225 1 173 1 342 1 70 1 26 1 125 1 7 1 295 1 206 1 52 1 94 1 230 1 322 1 297 1 73 1 208 1 13 1 354 1 
238 1 264 2 103 1 266 1 333 1 108 1 111 1 248 2 17 1 363 1 225 1 173 1 342 1 70 1 26 1 125 1 7 1 295 1 206 1 52 1 207 1 94 1 230 1 322 1 297 1 96 1 73 1 208 1 
166 2 264 2 104 1 214 1 111 1 248 4 142 2 86 1 310 2 362 1 173 1 342 2 125 1 346 1 94 2 297 1 73 1 178 1 208 1 128 1 161 2 379 1 
166 2 264 2 104 1 266 1 108 1 214 1 245 1 111 1 248 4 17 1 142 2 310 2 362 1 363 1 225 1 173 1 342 2 70 1 26 1 125 1 295 1 52 1 346 1 94 2 230 1 322 1 297 1 97 1 73 1 178 1 208 1 35 1 128 1 161 2 379 1 13 1 354 1 
166 1 264 2 107 1 214 1 216 1 111 1 218 1 248 3 142 1 86 1 310 1 68 1 362 1 363 1 173 1 342 1 70 1 125 1 346 1 94 2 297 1 73 1 208 1 178 1 128 1 161 1 181 1 379 1 75 1 
1 1 83 2 244 1 247 1 248 41 250 4 198 1 47 1 342 21 341 4 149 1 204 1 93 1 345 1 53 1 346 5 94 20 159 1 208 3 160 1 264 6 104 4 302 1 360 1 214 4 270 1 111 3 118 1 67 3 310 8 362 4 120 1 173 3 315 1 33 3 73 3 178 5 128 4 379 4 234 1 381 1 327 1 188 1 
264 8 104 4 302 1 1 1 360 1 244 1 83 2 214 3 270 1 247 1 111 4 250 4 248 38 118 1 67 3 310 7 362 4 47 1 198 1 120 1 315 1 173 4 341 4 342 18 149 1 204 1 93 1 345 1 53 2 33 3 346 4 94 20 159 1 73 4 160 1 208 4 178 5 128 4 379 3 234 1 381 1 327 1 188 1 
264 4 104 7 302 1 1 1 360 1 244 1 83 1 214 7 270 1 247 1 111 2 250 4 248 52 118 1 67 4 310 14 362 7 21 2 198 1 120 1 315 1 173 2 341 4 342 25 149 1 204 1 93 2 345 1 53 1 33 2 346 8 94 27 159 1 73 2 160 1 208 2 178 8 128 7 379 7 234 1 381 1 327 1 
264 4 104 3 360 1 83 1 214 3 270 1 247 1 111 2 250 2 248 19 67 1 310 6 362 3 198 2 173 2 341 2 342 10 277 1 204 1 93 1 33 1 346 3 94 9 73 2 208 2 178 3 128 3 379 3 381 1 188 1 
264 6 104 2 360 1 83 2 214 2 270 1 247 2 111 3 248 26 250 2 67 2 310 4 362 3 198 1 120 1 173 3 315 1 342 12 341 4 149 1 204 1 345 1 53 2 33 2 346 2 94 14 73 3 159 1 208 3 178 3 128 3 379 2 381 1 327 1 
263 1 323 1 232 1 81 1 87 1 20 1 174 1 133 1 14 1 364 1 
343 1 183 1 
263 1 323 1 232 1 81 1 132 1 133 1 353 1 364 1 102 1 
263 1 269 1 126 1 81 1 370 1 174 1 279 1 14 1 171 2 219 1 323 1 232 1 179 1 87 1 19 1 236 1 133 1 364 1 
263 1 269 1 126 1 81 1 370 1 174 1 279 1 14 1 171 2 219 1 323 1 232 1 179 1 87 1 19 1 236 1 133 1 364 1 
263 1 269 1 126 1 81 1 370 1 174 1 279 1 14 1 171 2 219 1 323 1 232 1 179 1 87 1 19 1 236 1 133 1 364 1 
146 1 65 1 259 1 
146 1 65 1 259 1 
272 1 121 1 
65 1 272 1 121 1 
369 1 130 1 
263 1 81 1 82 1 107 2 333 1 171 1 219 1 218 2 363 2 89 1 364 1 70 2 369 1 343 1 370 1 279 1 255 1 153 1 11 1 323 1 232 1 130 1 75 2 183 1 236 1 133 1 184 1 
146 1 259 1 
65 1 272 1 121 1 
77 1 264 2 191 1 107 2 4 1 111 1 17 2 248 2 86 1 309 1 363 2 225 2 173 1 342 1 70 2 26 1 125 1 29 1 7 1 295 1 206 1 52 1 94 1 230 1 297 1 322 2 73 1 208 1 324 1 300 2 38 1 
26 1 190 1 42 1 358 1 295 1 61 2 51 1 62 1 45 1 193 1 231 1 322 2 17 2 35 1 338 1 225 2 164 1 135 1 211 1 
356 1 26 1 190 1 358 1 295 1 61 2 51 1 62 1 45 1 193 1 231 1 322 1 17 1 338 1 225 1 135 1 211 1 
103 1 26 1 28 1 42 1 357 1 295 1 52 1 45 1 230 1 322 1 85 1 17 1 100 1 225 1 
26 1 190 1 42 1 358 1 295 1 61 2 51 1 62 1 45 1 193 1 231 1 322 1 17 1 338 1 225 1 164 1 135 1 211 1 
194 1 
237 1 374 1 179 1 331 1 222 1 31 1 261 1 
189 1 237 1 265 1 60 1 15 1 289 1 219 1 251 1 308 1 224 1 318 1 31 1 179 2 180 1 182 1 261 1 236 1 
237 2 189 3 284 2 242 2 286 2 246 2 287 2 337 1 291 2 251 5 90 1 48 1 295 2 52 2 346 2 351 2 261 9 355 2 103 1 266 2 60 4 213 2 214 2 15 6 16 6 17 3 219 5 114 1 115 1 116 1 222 1 18 2 308 4 362 2 225 3 317 1 26 3 228 1 318 12 31 8 374 1 230 8 322 3 176 1 178 2 35 1 128 2 179 8 180 4 182 4 236 5 134 6 76 2 186 3 
189 1 237 2 355 2 359 1 60 2 215 1 214 2 246 1 15 3 16 5 219 1 250 1 291 1 251 1 67 1 308 2 362 2 120 1 315 1 317 1 149 1 318 6 31 5 345 1 33 1 346 2 159 1 178 2 128 2 179 5 180 2 182 2 236 1 134 5 261 8 
355 2 302 1 1 1 107 1 60 1 169 1 138 1 219 1 218 1 221 1 291 1 308 1 363 1 365 1 70 1 31 2 8 1 344 1 346 1 282 1 178 2 180 1 181 1 234 1 182 1 75 1 236 1 261 2 
237 1 60 1 31 1 374 1 179 1 180 1 222 1 308 1 182 1 261 1 
355 2 318 10 31 5 214 2 287 1 15 5 346 2 16 5 178 2 128 2 291 1 179 5 362 2 134 5 261 5 
237 1 189 1 219 1 179 1 251 1 236 1 
189 2 79 1 40 1 103 2 357 1 60 2 246 2 335 1 307 1 17 4 219 3 251 4 308 1 225 4 48 1 26 1 317 2 228 2 295 1 31 2 52 1 348 1 230 1 322 4 180 2 182 2 100 1 261 2 236 3 
264 2 103 1 266 1 107 2 333 1 108 1 245 1 111 1 248 1 17 1 218 2 363 3 225 1 365 1 173 1 342 1 70 3 26 1 125 1 7 1 295 1 52 1 230 1 322 1 297 1 73 1 208 1 181 2 75 2 165 1 354 1 13 1 
237 2 317 1 60 1 318 4 31 2 246 1 15 2 16 2 160 1 179 4 180 1 308 1 182 1 134 2 261 1 
232 1 185 1 364 1 
232 1 185 1 364 1 
232 1 369 1 87 1 162 1 364 1 
232 1 185 1 364 1 
232 1 364 1 328 1 
232 1 364 1 328 1 
232 1 364 1 328 1 
232 1 364 1 
263 1 323 1 
264 2 104 2 302 1 1 1 244 1 111 1 248 8 250 1 118 1 67 1 310 2 173 1 342 4 33 1 346 1 94 4 159 1 73 1 160 1 178 1 208 1 234 1 381 1 
264 4 104 2 80 1 302 1 1 1 244 1 111 2 248 11 250 2 118 1 67 1 310 3 362 1 173 2 342 5 93 1 33 1 346 1 94 6 159 1 73 2 160 1 208 2 178 2 128 1 379 1 234 1 381 1 
264 6 80 1 104 3 302 1 1 1 244 1 214 2 111 3 248 19 250 1 118 1 67 1 310 4 362 2 120 1 173 3 315 1 342 10 149 1 345 1 33 1 53 1 346 3 94 9 159 1 73 3 160 1 208 3 178 3 128 2 379 1 234 1 381 1 
264 6 80 1 104 3 302 1 1 1 244 1 214 1 111 3 248 17 250 1 118 1 67 1 310 5 362 2 120 1 173 3 315 1 342 7 149 1 345 1 53 1 33 1 346 2 94 10 159 1 73 3 160 1 208 3 178 3 128 2 379 2 234 1 381 1 
264 2 104 2 302 1 1 1 244 1 111 1 248 8 250 1 118 1 67 1 310 2 173 1 342 4 33 1 346 1 94 4 159 1 73 1 160 1 178 1 208 1 234 1 381 1 
315 1 173 1 342 6 264 2 104 1 149 1 214 2 345 1 33 1 346 2 111 1 94 6 73 1 159 1 250 1 248 12 178 2 208 1 128 2 67 1 379 1 310 2 362 2 120 1 381 1 
264 8 80 1 104 3 302 1 1 1 244 1 214 1 111 4 248 18 250 1 118 1 67 1 310 5 362 2 120 1 173 4 315 1 342 8 149 1 345 1 33 1 53 2 346 2 94 10 159 1 73 4 160 1 208 4 178 3 128 2 379 2 234 1 381 1 
264 8 104 3 214 2 111 4 248 16 250 1 67 1 310 6 362 3 120 1 173 4 315 1 342 7 149 1 345 1 33 1 53 2 346 2 94 9 159 1 73 4 208 4 178 3 128 3 379 3 381 1 188 1 
342 4 104 3 302 3 1 1 244 1 346 1 94 3 248 7 178 1 118 2 379 3 310 6 234 3 
264 8 104 3 302 1 1 1 244 1 214 1 111 4 248 18 250 1 118 1 67 1 310 4 362 2 120 1 173 4 315 1 342 8 149 1 345 1 33 1 53 2 346 2 94 10 159 1 73 4 160 1 208 4 178 3 128 2 379 1 234 1 381 1 188 1 
173 2 342 4 264 4 104 2 302 1 1 1 244 1 53 1 346 1 111 2 94 4 248 8 73 2 160 1 178 1 208 2 118 1 379 1 310 3 234 1 
342 3 104 2 302 1 331 1 1 1 244 1 346 1 94 3 248 6 160 1 178 1 118 1 310 2 234 1 
173 1 342 2 264 2 104 1 80 1 214 1 346 1 111 1 94 2 73 1 248 4 208 1 178 1 128 1 379 1 310 2 362 1 
342 4 104 1 93 1 214 1 33 1 346 1 94 3 250 2 248 7 178 1 128 1 67 1 379 1 310 2 362 1 
264 4 104 5 302 2 1 1 244 1 214 2 288 1 111 2 248 23 250 2 118 1 67 2 310 9 362 2 21 1 173 2 342 12 93 1 53 2 346 3 94 11 73 2 160 1 178 3 208 2 128 2 379 4 234 2 352 1 
342 1 248 1 250 1 
94 1 248 1 67 1 
173 1 342 3 264 2 80 1 104 2 214 1 287 1 111 1 346 1 94 3 73 1 248 6 208 1 178 1 128 1 379 1 310 3 362 1 
315 1 173 1 342 6 264 2 104 1 149 1 214 2 345 1 33 1 346 2 111 1 94 6 73 1 159 1 250 1 248 12 178 2 208 1 128 2 67 1 379 1 310 2 362 2 120 1 381 1 
342 3 104 1 302 1 1 1 346 1 94 3 248 6 178 1 379 1 310 2 234 1 
173 1 342 2 264 2 104 1 302 1 244 1 53 1 111 1 94 1 248 3 73 1 208 1 118 1 379 1 310 2 234 1 352 1 
173 1 342 5 264 2 104 3 302 2 1 1 169 1 111 1 346 2 94 5 73 1 248 10 208 1 178 2 379 2 310 5 234 2 381 1 
173 1 264 2 111 1 94 2 73 1 248 2 208 1 178 1 379 1 310 1 362 1 381 1 
173 1 342 2 264 2 104 1 214 1 346 1 111 1 94 2 73 1 248 4 208 1 178 1 128 1 379 1 310 2 362 1 381 1 
173 3 342 2 264 6 104 1 302 1 53 1 111 3 94 1 248 3 73 3 208 3 379 1 310 2 234 1 352 1 381 1 188 1 
264 10 80 1 104 7 302 3 1 2 244 1 214 3 111 5 250 4 248 34 118 1 172 1 67 3 310 12 362 3 173 5 342 18 93 1 53 2 33 1 346 5 281 1 94 16 73 5 160 1 208 5 178 5 128 3 379 5 234 3 352 1 381 1 12 1 188 1 
124 1 70 1 107 1 333 1 192 1 293 1 363 1 
124 1 127 1 70 1 59 1 107 1 333 1 192 1 293 1 44 1 363 1 5 1 226 1 
230 1 322 1 17 1 103 1 26 1 357 1 331 1 295 1 100 1 52 1 225 1 
253 1 70 2 103 1 26 1 266 1 107 1 333 1 108 1 295 1 52 1 230 1 322 1 218 1 17 1 75 1 363 2 225 1 13 1 
266 2 107 2 333 1 108 1 46 1 17 1 218 1 337 1 116 1 363 2 225 1 70 2 253 1 26 1 228 1 295 1 344 2 52 2 296 1 230 3 322 1 34 1 75 2 13 1 
266 2 107 2 333 1 108 1 46 1 17 1 218 1 337 1 116 1 363 2 225 1 70 2 253 1 26 1 228 1 295 1 344 2 52 2 207 1 296 1 230 3 322 1 34 1 75 2 
237 1 266 1 107 1 286 1 170 1 218 1 17 1 219 2 337 1 221 1 116 1 251 1 119 1 363 1 225 1 365 1 70 1 26 1 228 1 295 1 8 1 344 1 52 1 230 4 322 1 282 1 179 1 181 1 75 1 236 2 76 1 186 1 
237 1 266 1 107 1 242 1 286 1 218 1 17 1 219 2 337 1 221 1 116 1 251 1 363 1 225 1 365 1 70 1 26 1 228 1 295 1 8 1 344 1 52 1 230 4 322 1 282 1 179 1 181 1 75 1 236 2 76 1 186 1 
322 1 17 1 26 1 295 1 225 1 154 1 
103 2 168 1 26 3 190 1 202 1 266 1 368 1 109 1 295 2 52 2 154 1 230 3 322 6 17 7 35 1 260 1 114 1 377 1 300 1 309 1 225 7 
166 1 264 4 239 1 104 2 302 1 266 1 1 1 107 1 333 2 108 1 244 1 245 1 4 1 111 2 248 6 218 1 17 1 142 1 118 1 86 1 310 2 363 2 225 1 173 2 342 3 70 2 253 1 26 1 125 2 295 1 52 1 346 1 94 3 230 1 297 2 322 1 73 2 97 1 160 1 178 1 208 2 35 1 161 1 234 1 75 1 354 1 13 1 
237 1 189 1 103 1 284 1 82 1 242 1 60 2 286 1 17 1 219 3 222 1 18 1 251 2 308 2 225 1 48 1 31 1 374 1 230 2 322 1 179 1 180 2 182 2 261 1 236 3 351 1 76 1 186 1 
26 2 266 1 295 1 286 1 52 1 154 1 230 2 322 2 17 2 35 1 114 1 225 2 90 1 
103 1 26 1 357 1 295 1 52 1 141 1 230 1 322 4 17 4 35 1 88 1 100 1 225 4 
49 1 168 1 26 2 228 1 266 1 109 1 295 1 9 1 52 1 230 1 322 2 17 2 163 1 225 2 
193 1 322 1 17 1 103 1 26 1 338 1 295 1 61 1 225 1 135 1 
230 1 322 2 17 2 26 1 190 1 35 1 191 1 295 1 309 1 52 1 225 2 
103 1 26 2 228 1 202 1 357 1 295 2 52 2 141 1 230 3 322 4 17 5 35 1 377 1 309 1 100 1 225 5 
103 1 26 2 228 1 202 1 357 1 295 2 52 2 141 1 230 3 322 4 95 1 17 5 35 1 309 1 100 1 225 5 
253 1 70 2 103 1 26 1 266 1 107 1 333 1 108 1 295 1 52 1 207 1 230 1 322 1 218 1 17 1 75 1 363 2 225 1 
168 1 26 2 228 1 266 1 368 1 109 1 295 1 52 1 230 1 322 1 17 1 114 1 225 1 
249 1 333 1 152 1 151 1 305 1 
237 1 254 1 82 1 333 1 151 1 152 2 344 1 32 1 305 2 296 1 280 1 34 1 376 1 219 2 249 2 179 1 236 2 339 1 76 1 
77 1 70 1 107 1 151 1 305 1 249 1 324 1 363 1 38 1 
376 1 151 1 280 1 
350 1 331 1 144 1 110 1 
199 1 350 1 336 1 378 1 144 1 110 1 371 1 
199 1 274 1 258 1 
199 3 136 1 72 1 110 1 371 1 373 2 350 1 336 1 283 1 292 1 378 3 144 1 
199 2 350 1 220 1 336 1 378 2 144 1 3 1 110 1 371 1 
199 1 205 1 61 1 110 1 371 1 306 1 231 1 193 1 336 1 292 1 378 1 
199 1 350 1 336 1 378 1 292 1 110 1 371 1 
199 1 350 2 336 1 378 1 292 1 144 1 371 1 
199 2 350 1 336 2 378 2 292 1 110 1 329 1 54 1 371 2 382 1 
122 1 199 3 167 1 205 1 3 2 110 2 371 1 350 1 336 1 36 1 292 1 378 3 144 1 
199 2 358 1 61 2 3 1 110 1 371 1 231 1 193 1 321 1 350 1 336 1 292 1 378 2 144 1 135 1 
199 4 167 1 205 1 3 2 10 1 110 2 371 2 350 1 336 2 220 1 292 1 378 4 144 1 
199 1 350 1 336 1 378 1 292 1 144 1 110 1 371 1 
136 1 199 4 167 1 72 1 205 1 3 2 110 3 373 1 371 1 140 1 350 2 336 1 378 4 144 2 
334 1 199 2 350 1 147 1 336 1 378 2 292 1 144 1 197 1 3 1 110 1 371 1 
199 3 136 2 240 1 72 1 110 1 371 1 373 2 350 1 336 1 292 1 378 3 144 1 
25 2 299 1 110 2 112 1 
69 1 199 1 336 1 378 1 292 1 371 1 
122 1 199 2 350 1 336 1 378 2 292 1 144 1 3 1 110 1 371 1 
241 1 
199 1 350 1 336 1 378 1 292 1 144 1 110 1 371 1 
122 1 199 3 350 1 336 1 378 3 292 1 144 1 3 1 110 1 373 1 371 1 
140 1 167 1 205 1 110 1 
350 1 110 1 

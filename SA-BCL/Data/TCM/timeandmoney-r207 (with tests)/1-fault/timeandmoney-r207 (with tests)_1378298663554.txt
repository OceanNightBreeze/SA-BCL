#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 2 0 2 330 2 2 1 282 6 215 1 139 1 88 4 311 1 218 1 172 2 143 1 315 1 176 1 322 1 297 1 251 1 343 1 203 9 75 2 369 3 161 2 15 2 16 1 347 1 17 1 206 9 239 5 
242 2 0 2 330 2 2 1 282 6 215 1 139 1 88 4 311 1 218 1 172 2 143 1 315 1 176 1 322 1 297 1 251 1 343 1 203 9 75 2 369 3 161 2 15 2 16 1 347 1 17 1 206 9 239 5 
242 2 0 2 330 2 2 1 282 7 215 1 139 1 88 5 311 1 218 1 172 2 143 1 315 1 176 1 322 1 297 1 251 1 343 1 203 10 75 2 369 4 161 2 15 2 16 1 347 1 17 1 206 10 239 6 
242 2 0 2 330 2 282 4 215 1 139 1 88 3 311 1 218 1 172 2 143 1 315 1 176 1 322 1 297 1 251 1 343 1 203 7 75 2 369 2 161 1 15 2 16 1 347 1 17 1 206 7 239 4 
242 1 322 1 0 1 330 1 251 1 2 1 282 3 203 4 75 1 215 1 369 1 88 2 161 2 15 1 218 1 347 1 206 4 239 3 
242 1 297 1 0 1 251 1 203 2 263 1 215 1 75 1 171 1 139 1 15 1 172 1 229 1 347 1 206 2 239 1 
0 2 251 1 282 1 203 3 215 1 369 1 88 1 15 2 172 1 347 1 17 1 206 3 239 2 
242 1 0 2 330 1 2 1 282 7 215 1 88 4 172 1 218 1 174 1 315 1 119 1 176 1 322 1 251 1 203 9 75 1 369 3 161 2 15 2 347 1 17 1 206 9 239 5 
242 1 0 2 330 1 2 1 282 7 215 1 88 4 172 1 218 1 174 1 315 1 119 1 176 1 322 1 251 1 203 9 75 1 369 3 161 2 15 2 347 1 17 1 206 9 239 5 
51 1 160 1 319 1 
304 2 181 1 319 1 
211 2 204 1 163 1 194 2 170 2 291 2 68 2 186 2 
210 1 211 3 63 1 328 1 331 1 41 1 110 1 84 1 112 1 170 3 68 2 309 1 264 2 312 2 285 1 337 1 194 2 291 2 318 1 225 1 294 2 27 1 323 1 274 1 99 1 202 1 344 1 301 1 32 1 35 1 325 2 204 1 163 1 81 2 277 1 185 1 186 2 
211 1 1 1 163 1 194 1 201 1 170 1 291 1 68 1 348 1 186 1 
211 1 212 1 100 1 138 1 170 1 368 1 160 1 45 1 129 1 69 1 194 1 121 1 348 1 319 1 
211 1 212 1 100 1 138 2 68 1 170 1 368 2 160 1 45 1 194 1 291 1 121 1 348 1 319 1 186 1 
52 1 135 1 138 1 222 1 368 1 
52 1 295 1 135 1 138 2 71 1 368 2 160 1 319 1 
52 1 138 1 368 1 
177 1 211 1 135 1 1 1 201 1 138 1 68 1 170 1 368 1 163 1 194 1 291 1 348 1 186 1 
319 1 
52 1 295 1 135 1 138 2 368 2 160 1 108 1 319 1 
73 1 295 1 135 2 279 2 153 1 138 5 367 1 368 5 190 1 89 1 160 1 46 1 130 2 52 2 183 1 303 1 224 1 319 1 271 2 
210 1 126 1 211 2 328 1 274 1 84 1 170 2 32 1 264 1 104 1 35 1 325 1 194 1 106 1 291 1 277 1 225 1 294 1 27 1 186 1 
204 1 51 1 
211 2 170 2 68 1 204 2 336 1 194 2 195 1 291 1 186 1 
278 1 26 1 104 1 
210 1 211 1 328 1 274 1 84 1 170 1 32 1 264 1 35 1 325 1 204 1 277 1 7 1 225 1 294 1 27 1 
211 5 126 1 170 5 68 1 129 1 132 1 204 1 194 5 195 1 106 2 291 4 237 1 292 1 186 4 
211 2 1 1 194 2 170 2 291 2 246 1 348 1 186 2 
211 3 204 1 194 3 106 1 68 1 170 3 291 3 186 3 
211 1 1 1 194 1 170 1 291 1 348 1 186 1 
211 1 336 1 194 1 195 1 170 1 291 1 68 1 348 1 186 1 
210 1 211 4 328 1 212 1 110 1 84 1 138 1 112 1 68 2 170 4 309 1 45 1 264 1 312 1 285 1 145 1 337 1 194 3 195 1 291 3 121 1 225 1 294 1 27 1 323 1 126 1 274 1 202 1 100 1 344 1 301 1 32 1 368 1 35 1 325 1 204 1 163 1 81 2 133 1 106 1 277 1 185 1 348 1 186 3 
211 2 204 1 194 2 106 1 170 2 291 1 292 1 129 1 186 1 
126 1 211 3 212 1 100 1 138 1 68 1 170 3 368 1 45 1 145 1 194 3 355 1 195 1 106 2 291 3 121 1 348 1 319 1 186 3 
278 1 211 2 68 1 170 2 104 1 194 2 195 1 106 1 291 2 186 2 
210 1 211 1 328 1 274 1 84 1 170 1 32 1 264 1 35 1 325 1 204 1 277 1 225 1 294 1 27 1 
28 1 211 1 328 1 274 1 84 1 170 1 264 1 35 1 4 1 325 1 204 1 277 1 225 1 294 1 27 1 
278 2 41 2 112 2 309 1 334 1 192 1 312 4 354 1 337 1 288 1 26 2 9 1 96 1 323 1 299 1 154 1 202 1 301 1 104 2 370 1 81 2 82 1 185 1 349 1 
211 1 194 1 170 1 291 1 348 1 45 1 246 1 186 1 
200 1 324 1 
200 1 324 1 
123 1 162 1 
123 1 162 1 
123 1 162 1 
200 1 248 1 324 1 
200 1 248 1 324 1 
123 1 162 1 305 1 200 2 44 1 324 2 
200 1 324 1 165 1 
200 1 248 1 324 1 
200 1 324 1 140 1 
200 1 324 1 140 1 
200 1 324 1 140 1 
211 2 64 1 86 1 138 1 214 1 170 2 194 2 357 1 291 2 196 1 360 1 200 1 324 1 368 1 13 1 346 1 204 1 231 1 232 1 276 1 373 1 259 1 165 1 186 2 
124 1 64 3 200 2 86 2 44 1 324 2 138 2 214 2 368 2 216 1 266 2 346 2 23 1 55 1 232 1 70 1 20 1 360 2 319 1 
242 1 330 1 75 1 
242 1 75 1 171 1 
330 2 338 1 75 3 191 1 171 1 240 1 
54 1 330 1 338 1 75 2 171 1 240 1 
330 1 338 2 75 2 171 1 240 1 
327 1 304 3 166 1 279 1 135 4 39 1 281 1 138 5 89 3 192 1 334 1 90 1 287 1 247 2 288 1 289 2 196 1 224 1 9 1 319 2 271 1 295 1 181 1 368 5 160 1 130 1 52 1 231 1 276 1 303 2 38 2 60 1 
304 9 61 1 166 2 135 7 279 2 281 2 138 9 351 1 89 8 192 3 334 3 90 3 268 1 247 6 288 3 196 4 222 5 148 5 293 1 224 1 9 3 319 5 271 2 73 1 295 1 98 1 181 3 368 9 254 1 160 1 52 6 130 2 303 6 38 6 60 1 
304 4 166 1 135 2 279 1 39 1 281 1 138 3 89 3 192 1 90 1 334 1 287 1 247 2 288 1 289 1 196 1 9 1 319 3 271 1 73 1 181 2 368 3 160 1 130 1 303 2 38 2 
304 7 61 1 166 1 279 1 135 3 39 1 281 1 138 4 351 1 89 5 192 2 90 2 334 2 287 1 247 4 288 2 289 2 196 2 9 2 319 4 271 1 73 1 181 3 368 4 160 1 254 1 130 1 303 4 38 4 
49 1 274 1 51 1 
11 1 274 1 
5 1 
328 1 274 1 27 1 
274 1 207 1 
328 1 274 1 
49 2 328 1 274 3 238 1 102 1 27 1 
273 1 298 1 154 3 41 4 43 2 112 3 156 1 253 1 159 1 192 1 334 1 47 1 354 2 312 7 236 1 359 1 209 1 
273 1 298 1 154 3 41 4 43 2 112 3 156 1 253 1 159 1 192 1 334 1 47 1 354 2 312 7 236 1 359 1 209 1 
273 1 298 1 154 3 41 4 365 1 43 2 112 3 156 1 253 1 159 1 192 1 334 1 47 1 354 2 312 7 236 1 359 1 209 1 
41 16 43 3 112 15 217 1 47 2 90 3 334 4 192 4 312 31 354 5 115 4 337 1 288 3 359 2 339 1 9 3 323 1 342 3 273 1 298 1 154 10 156 1 301 1 253 5 158 1 159 2 53 1 56 1 81 2 236 1 374 1 185 1 209 2 109 1 
41 5 43 2 112 4 192 1 334 1 47 1 312 9 354 3 142 1 337 2 359 1 323 2 298 1 154 4 301 2 156 1 253 1 159 1 81 4 58 1 236 1 185 2 374 1 209 1 
242 1 0 1 261 1 330 1 85 1 282 1 350 1 352 1 215 1 264 1 171 1 191 1 284 1 172 1 197 1 225 1 294 1 251 1 227 1 203 2 75 2 35 1 15 1 230 1 325 1 347 1 326 1 206 2 59 1 239 1 
242 1 0 1 261 1 330 1 85 1 350 1 282 2 352 1 114 1 191 1 264 1 171 1 172 1 269 1 197 1 225 1 294 1 251 1 203 3 75 2 14 1 35 1 15 1 230 1 325 1 347 1 326 1 206 3 59 1 239 1 
242 1 261 1 330 1 85 1 350 1 282 2 114 1 264 1 171 1 191 1 172 1 269 1 197 1 225 1 294 1 251 1 203 2 75 2 35 1 325 1 347 1 326 1 206 2 59 1 239 1 
0 1 187 1 328 1 274 1 84 1 67 1 350 2 203 1 264 1 14 1 35 1 172 2 15 1 91 1 325 1 326 2 206 1 223 1 59 2 225 1 8 1 294 1 321 1 
242 1 261 1 0 1 330 1 227 1 85 1 350 1 352 1 203 1 75 2 215 1 191 1 171 1 264 1 35 1 172 1 15 1 230 1 325 1 326 1 206 1 269 1 197 1 59 1 225 1 294 1 
29 1 
279 1 328 1 243 1 281 1 333 2 84 2 138 5 87 2 89 2 45 1 92 2 50 1 194 1 146 1 147 1 340 2 8 1 294 2 151 2 295 3 12 1 100 1 160 1 52 6 303 2 348 1 304 2 211 1 167 1 212 1 308 2 170 1 264 2 69 1 267 2 316 4 223 1 121 1 224 1 225 1 319 2 320 1 271 1 274 1 181 2 275 1 368 5 182 1 228 1 129 1 35 1 130 1 325 2 371 1 37 1 
211 1 295 1 167 1 12 1 212 1 100 1 138 3 275 1 170 1 368 3 45 1 129 1 52 2 69 1 371 1 194 1 316 2 147 1 340 1 121 1 108 1 348 1 
211 1 167 1 212 1 138 3 170 1 45 1 69 1 92 1 194 1 147 1 316 3 121 1 319 1 295 1 12 1 100 1 275 1 368 3 160 1 129 1 52 1 371 1 348 1 108 1 
211 1 167 1 212 1 138 3 170 1 45 1 69 1 267 1 92 1 194 1 147 1 316 3 340 1 121 1 319 1 295 1 12 1 100 1 275 1 368 3 160 1 129 1 52 2 371 1 108 1 348 1 
279 1 333 2 138 5 45 1 89 1 87 2 286 1 92 4 194 1 147 1 340 4 198 1 151 2 295 3 12 1 100 1 160 5 52 7 18 1 303 1 348 1 108 1 211 1 167 1 212 1 308 2 170 1 69 1 267 4 316 6 121 1 224 1 319 5 271 1 320 1 30 1 364 1 181 2 275 1 368 5 182 1 129 1 130 1 371 1 
279 1 243 1 333 2 138 4 45 1 89 1 87 2 92 2 194 1 147 1 340 2 151 2 295 2 12 1 100 1 160 1 52 4 303 1 348 1 304 2 211 1 167 1 212 1 308 2 170 1 69 1 267 2 316 4 121 1 224 1 319 2 271 1 320 1 181 2 275 1 182 1 368 4 129 1 130 1 371 1 
211 1 167 1 279 1 333 2 212 1 308 2 138 4 170 1 87 2 89 1 45 1 69 1 286 1 92 2 267 2 194 1 147 1 316 4 340 2 121 1 224 1 319 1 320 1 271 1 151 2 295 2 12 1 364 1 100 1 181 2 275 1 182 1 368 4 160 1 129 1 52 4 130 1 371 1 18 1 303 1 348 1 
211 1 167 1 279 1 333 2 212 1 308 2 138 4 170 1 87 2 89 1 45 1 69 1 286 1 92 2 267 2 194 1 147 1 316 4 340 2 121 1 224 1 319 1 320 1 271 1 151 2 295 2 12 1 364 1 100 1 181 2 275 1 182 1 368 4 160 1 129 1 52 4 130 1 371 1 18 1 303 1 348 1 
304 2 211 1 167 1 279 1 212 1 308 2 138 4 170 1 189 1 89 1 45 1 69 1 314 1 92 2 267 2 194 1 147 1 316 4 340 2 121 1 341 2 224 1 319 1 272 2 320 1 271 1 10 1 151 2 295 2 12 1 100 1 275 1 368 4 160 1 129 1 52 4 130 1 371 1 18 1 303 1 348 1 
211 1 167 1 279 1 333 2 212 1 308 2 138 4 170 1 87 2 89 1 45 1 69 1 286 1 267 3 92 3 194 1 147 1 316 5 340 3 121 1 224 1 319 1 198 1 320 1 271 1 151 2 295 2 12 1 364 1 100 1 181 2 275 1 182 1 368 4 160 1 129 1 130 1 52 5 371 1 18 1 303 1 348 1 
211 1 167 1 279 1 333 2 212 1 308 2 138 4 170 1 87 2 89 1 45 1 69 1 286 1 267 3 92 3 194 1 147 1 316 5 340 3 121 1 224 1 319 1 198 1 320 1 271 1 151 2 295 2 12 1 364 1 100 1 181 2 275 1 182 1 368 4 160 1 129 1 130 1 52 5 371 1 18 1 303 1 348 1 
304 2 211 1 167 1 279 1 243 1 212 1 308 2 138 4 170 1 89 1 45 1 69 1 314 1 92 2 267 2 194 1 147 1 316 4 340 2 121 1 341 2 224 1 319 1 272 2 320 1 271 1 151 2 295 2 12 1 100 1 275 1 368 4 160 1 129 1 52 4 130 1 371 1 303 1 348 1 
278 1 41 3 43 1 112 3 309 1 334 1 192 1 354 2 312 6 337 1 26 1 51 1 323 1 298 1 154 2 202 1 156 1 301 1 159 1 104 1 370 1 204 2 81 2 236 1 185 1 209 1 
278 4 63 1 41 8 112 6 309 2 217 1 90 2 334 2 192 1 283 1 354 1 312 14 115 3 337 2 288 2 26 11 9 1 323 2 342 3 154 2 179 1 202 1 180 1 155 1 344 1 301 2 253 1 158 1 104 11 204 1 233 1 81 4 185 2 
210 1 278 1 211 2 63 1 328 1 41 1 84 1 170 2 112 1 309 1 264 1 312 2 173 1 337 1 93 1 194 1 291 1 7 1 225 1 294 1 27 1 323 1 126 1 274 1 202 1 155 1 301 1 344 1 32 1 76 1 35 1 325 1 204 1 81 2 106 1 277 1 185 1 186 1 
278 7 328 2 41 10 84 1 43 1 192 3 90 2 334 3 285 2 337 3 194 1 288 2 291 1 294 3 9 2 298 1 154 8 202 3 155 1 156 1 344 1 301 3 253 4 159 1 104 7 256 2 204 2 106 1 209 1 210 2 211 3 63 1 111 2 65 1 112 10 170 3 309 3 264 3 265 1 219 1 354 4 312 20 269 1 26 7 225 2 27 2 125 2 126 1 323 3 274 2 32 2 35 2 325 3 80 2 81 6 236 1 277 2 185 3 186 1 
211 1 63 1 328 2 21 1 41 1 84 2 170 1 112 1 309 2 264 8 284 1 312 2 337 2 194 1 25 1 269 1 249 1 291 1 223 1 225 2 8 1 294 7 72 1 149 1 323 2 274 3 99 2 202 2 300 1 301 2 344 1 35 2 370 1 325 8 81 4 258 1 106 1 185 2 186 1 
278 1 211 1 41 1 68 1 170 1 112 2 309 1 90 1 334 1 192 1 354 1 313 1 312 3 337 1 194 1 195 1 288 1 26 1 291 1 9 1 323 1 154 1 202 1 155 1 301 1 104 1 81 2 185 1 186 1 
278 1 323 1 154 1 41 2 202 1 301 1 253 1 309 1 334 1 104 1 370 1 312 2 337 1 81 2 288 1 26 1 185 1 96 1 
278 1 323 1 154 1 202 1 301 1 112 2 309 1 192 1 104 1 370 1 354 1 312 2 337 1 81 2 26 1 185 1 82 1 9 1 
278 2 41 2 112 2 309 1 334 1 90 1 192 1 312 4 354 1 337 1 288 1 26 2 9 1 323 1 154 2 202 1 301 1 253 1 104 2 370 1 81 2 185 1 
278 1 323 1 154 1 41 2 202 1 300 1 301 1 253 1 309 1 334 1 104 1 312 2 337 1 81 2 288 1 26 1 185 1 96 1 
278 1 323 1 154 1 202 1 300 1 301 1 112 2 309 1 192 1 104 1 354 1 312 2 337 1 81 2 26 1 185 1 82 1 9 1 
278 2 41 2 112 2 309 1 334 1 90 1 192 1 312 4 354 1 337 1 288 1 26 2 9 1 323 1 154 2 202 1 300 1 301 1 253 1 104 2 81 2 185 1 
278 2 323 1 154 2 41 2 202 1 112 2 301 1 253 1 309 1 192 1 90 1 334 1 104 2 354 1 312 4 337 1 81 2 288 1 26 2 185 1 9 1 
210 1 211 1 63 1 328 1 41 1 84 1 170 1 112 1 309 1 264 1 312 2 285 1 337 1 225 1 294 1 27 1 323 1 274 1 202 1 301 1 344 1 32 1 35 1 325 1 204 1 81 2 277 1 185 1 
211 1 63 1 328 1 41 1 84 1 170 1 112 1 309 1 264 1 312 2 4 1 337 1 225 1 294 1 27 1 28 1 323 1 274 1 202 1 301 1 344 1 35 1 325 1 204 1 81 2 277 1 19 1 185 1 
278 2 41 2 112 2 309 1 334 1 90 1 192 1 312 4 354 1 337 1 288 1 26 2 9 1 323 1 154 2 202 1 155 1 301 1 253 1 104 2 81 2 185 1 
210 1 278 2 211 1 328 1 41 2 112 2 170 1 309 1 264 1 192 1 334 1 90 1 284 1 354 1 312 4 285 1 337 1 288 1 26 2 225 1 9 1 294 1 27 1 323 1 274 1 154 2 202 1 301 1 253 1 32 1 104 2 35 1 325 1 80 1 81 2 277 1 185 1 
211 1 278 1 41 2 112 1 68 1 170 1 309 1 192 1 90 1 334 1 312 3 337 1 194 1 195 1 288 1 26 1 291 1 9 1 323 1 154 1 202 1 155 1 301 1 253 1 104 1 81 2 185 1 186 1 241 1 
83 1 62 4 168 1 329 1 188 1 41 20 43 1 22 2 112 21 353 1 217 3 90 4 334 5 192 5 354 4 312 41 115 4 337 3 288 4 120 1 270 1 9 4 95 1 323 3 296 1 342 3 298 1 127 1 154 8 156 1 301 3 253 4 157 1 158 1 159 1 205 1 81 6 58 1 257 1 236 1 374 1 185 3 209 1 
83 1 62 4 168 1 329 1 188 1 41 20 43 1 22 2 112 18 353 1 217 3 90 4 334 5 192 4 354 4 312 38 115 4 337 4 288 4 120 1 270 1 9 3 95 1 323 4 296 1 342 3 298 1 127 1 154 7 156 1 301 4 253 3 157 1 158 1 159 1 205 1 81 8 58 1 257 1 236 1 374 2 185 4 209 1 
83 1 62 4 168 1 329 1 188 1 41 27 43 1 22 1 112 25 353 1 217 2 90 7 334 8 192 8 283 2 354 7 312 52 115 4 337 2 288 7 120 1 270 1 9 7 95 1 323 2 342 4 298 1 127 1 154 14 156 1 301 2 253 7 157 1 158 2 159 1 205 1 81 4 58 1 236 1 374 1 185 2 209 1 
62 2 188 1 41 9 22 1 112 10 217 1 90 3 334 3 192 3 48 1 354 3 312 19 115 2 337 2 288 3 120 2 9 3 95 1 323 2 342 1 154 6 301 2 253 3 157 1 158 1 205 1 81 4 58 1 257 1 185 2 
83 1 62 4 168 1 188 2 329 1 41 14 22 2 112 12 353 1 217 2 192 2 90 3 334 3 354 2 312 26 115 2 337 3 288 3 120 1 270 1 9 2 95 1 323 3 342 2 154 4 127 1 301 3 253 2 157 1 205 1 81 6 58 1 374 2 185 3 
211 2 63 1 328 1 21 1 41 1 170 2 112 1 309 1 264 2 312 2 193 1 337 1 194 2 25 1 358 1 225 1 362 1 294 2 323 1 274 1 99 2 202 1 155 1 301 1 344 1 345 1 35 1 325 2 81 2 107 1 185 1 
242 1 261 1 330 1 307 1 137 1 66 1 75 2 191 1 171 1 264 2 35 1 284 1 230 1 325 2 269 1 59 1 197 1 225 1 294 2 
242 1 261 1 330 1 280 1 137 1 75 2 191 1 171 1 264 1 35 1 230 1 325 1 269 1 59 1 197 1 225 1 294 1 
328 1 274 1 84 1 66 1 264 1 35 1 325 1 91 1 184 1 59 1 223 1 225 1 8 1 294 1 
242 1 261 1 330 1 307 1 137 1 66 1 75 2 191 1 171 1 264 1 35 1 230 1 325 1 269 1 59 1 197 1 225 1 294 1 
103 1 
367 1 51 1 303 1 89 1 160 1 319 1 46 1 
304 1 279 1 333 1 138 1 87 1 89 1 224 1 319 2 271 1 295 1 181 1 182 1 368 1 160 1 130 1 52 1 303 1 
279 4 328 3 40 2 281 2 84 1 138 5 89 9 46 1 90 2 334 2 192 2 284 1 3 2 49 2 247 6 6 1 288 2 290 2 294 3 9 2 150 1 295 3 11 3 252 2 100 2 160 2 102 1 101 2 52 5 256 2 207 2 303 8 304 12 262 2 264 3 116 2 118 1 175 1 225 3 224 4 319 8 226 1 27 3 271 4 274 10 181 6 367 1 368 5 35 4 130 4 325 3 79 2 37 1 38 6 
304 6 83 1 168 1 279 2 329 1 281 1 262 1 138 1 89 8 217 1 90 2 334 2 192 2 115 1 220 1 247 5 288 2 270 1 224 2 319 5 9 2 271 2 295 1 342 1 127 1 252 2 181 3 368 1 160 2 52 1 130 2 164 1 303 5 37 1 38 5 
211 1 279 1 1 1 262 1 138 1 170 1 68 1 89 2 334 2 192 1 286 1 194 1 221 1 291 1 224 1 271 1 177 1 201 1 252 2 368 1 159 1 130 1 163 1 236 1 303 2 348 1 209 1 186 1 
279 1 367 1 160 1 89 1 46 1 130 1 303 1 224 1 319 1 271 1 
304 10 252 2 262 1 181 5 89 5 90 2 334 2 192 2 256 1 247 5 288 2 303 5 38 5 319 5 9 2 
52 1 295 1 138 1 368 1 160 1 319 1 
279 2 328 1 281 2 84 2 138 3 264 4 89 2 50 1 146 1 6 1 223 1 225 1 224 1 8 1 294 4 271 2 150 2 73 1 295 2 274 1 368 3 35 1 130 2 52 4 105 1 325 4 134 1 303 2 37 2 
210 1 211 3 328 1 84 1 110 1 112 1 170 3 68 2 309 1 264 1 312 1 285 1 337 1 194 2 291 2 225 1 294 1 27 1 323 1 274 1 202 1 344 1 301 1 32 1 35 1 325 1 204 1 163 1 81 2 277 1 185 1 186 2 
304 4 279 1 281 1 43 1 181 2 89 1 160 2 130 1 247 2 303 2 224 1 38 2 319 4 37 1 271 1 
332 1 86 1 214 1 
332 1 86 1 214 1 
57 1 86 1 214 1 20 1 259 1 
332 1 86 1 214 1 
86 1 214 1 77 1 
86 1 214 1 77 1 
86 1 214 1 77 1 
86 1 214 1 
200 1 324 1 
329 1 41 4 43 1 112 4 217 1 192 1 334 1 312 8 354 2 115 1 337 1 323 1 342 1 298 1 154 2 301 1 156 1 159 1 81 2 58 1 236 1 185 1 209 1 
329 1 41 6 43 1 112 5 217 1 192 1 90 1 334 2 354 2 312 11 115 2 337 2 288 1 323 2 342 1 298 1 154 3 156 1 301 2 253 1 158 1 159 1 58 1 81 4 236 1 185 2 260 1 209 1 
83 1 168 1 329 1 41 9 43 1 112 10 217 1 90 2 334 3 192 3 312 19 354 3 115 1 337 3 288 2 270 1 9 2 323 3 342 1 298 1 127 1 154 4 156 1 301 3 253 1 159 1 81 6 58 1 236 1 260 1 185 3 374 1 209 1 
83 1 168 1 329 1 41 10 43 1 112 7 217 1 90 2 334 3 192 2 312 17 354 3 115 1 337 3 288 2 270 1 9 1 323 3 342 1 298 1 127 1 154 5 156 1 301 3 253 2 159 1 81 6 58 1 236 1 260 1 374 1 185 3 209 1 
329 1 41 4 43 1 112 4 217 1 192 1 334 1 312 8 354 2 115 1 337 1 323 1 342 1 298 1 154 2 301 1 156 1 159 1 81 2 58 1 236 1 185 1 209 1 
83 1 168 1 329 1 41 6 112 6 217 1 90 2 334 2 192 2 312 12 354 1 115 1 337 1 288 2 270 1 9 2 323 1 342 1 127 1 154 2 301 1 253 1 81 2 58 1 185 1 
83 1 168 1 329 1 41 10 43 1 112 8 217 1 90 2 334 3 192 2 312 18 354 3 115 1 337 4 288 2 270 1 9 1 323 4 342 1 298 1 127 1 154 5 156 1 301 4 253 2 159 1 81 8 58 1 236 1 260 1 185 4 374 2 209 1 
83 1 168 1 329 1 41 9 112 7 217 1 90 3 334 3 192 2 312 16 354 3 115 1 337 4 288 3 270 1 9 2 323 4 342 1 127 1 154 6 301 4 253 3 58 1 81 8 257 1 185 4 374 2 
298 2 154 6 41 3 112 4 156 1 253 3 159 3 192 1 334 1 312 7 354 3 236 1 209 3 
83 1 168 1 329 1 41 10 43 1 112 8 217 1 90 2 334 3 192 2 312 18 354 3 115 1 337 4 288 2 270 1 9 1 323 4 342 1 298 1 127 1 154 4 156 1 301 4 253 1 159 1 58 1 81 8 236 1 257 1 185 4 374 2 209 1 
323 2 298 1 41 4 154 3 43 1 112 4 301 2 156 1 253 1 159 1 192 1 334 1 312 8 354 2 337 2 81 4 236 1 185 2 374 1 209 1 
298 1 154 2 41 3 43 1 112 3 156 1 159 1 334 1 192 1 354 2 312 6 236 1 51 1 209 1 
323 1 154 2 41 2 112 2 301 1 253 1 192 1 90 1 334 1 354 1 312 4 337 1 81 2 288 1 260 1 185 1 9 1 
342 1 41 3 154 2 112 4 253 1 158 1 217 1 192 1 90 1 334 1 354 1 312 7 115 2 288 1 9 1 
41 11 136 1 43 1 112 12 334 3 90 2 192 3 283 1 312 23 354 5 115 2 337 2 288 2 9 2 323 2 342 2 298 1 154 9 156 1 301 2 253 4 158 1 159 2 233 1 81 4 236 1 374 2 185 2 209 2 
312 1 115 1 112 1 
312 1 342 1 41 1 
323 1 41 3 154 3 301 1 112 3 253 1 90 1 334 1 192 1 312 6 354 2 256 1 337 1 81 2 288 1 185 1 260 1 9 1 
83 1 168 1 329 1 41 6 112 6 217 1 90 2 334 2 192 2 312 12 354 1 115 1 337 1 288 2 270 1 9 2 323 1 342 1 127 1 154 2 301 1 253 1 81 2 58 1 185 1 
41 3 154 2 112 3 253 1 159 1 334 1 192 1 312 6 354 1 236 1 209 1 
323 1 298 1 41 1 154 2 136 1 112 2 301 1 156 1 253 1 159 1 354 1 312 3 337 1 81 2 374 1 185 1 209 1 
323 1 154 5 41 5 301 1 112 5 253 2 159 2 334 2 192 2 354 3 312 10 337 1 81 2 58 1 221 1 236 1 185 1 209 2 
323 1 41 2 154 1 301 1 253 1 334 1 312 2 337 1 58 1 81 2 288 1 185 1 
323 1 154 2 41 2 112 2 301 1 253 1 192 1 90 1 334 1 354 1 312 4 337 1 58 1 81 2 288 1 185 1 9 1 
323 3 136 1 154 2 41 1 112 2 301 3 253 1 159 1 312 3 354 1 337 3 58 1 81 6 257 1 374 1 185 3 209 1 
136 1 41 16 43 1 112 18 217 1 90 3 334 5 192 5 312 34 354 7 115 4 337 5 288 3 9 3 323 5 342 3 298 1 154 12 156 1 301 5 253 5 158 1 159 3 53 1 56 1 81 10 58 1 236 2 257 1 374 2 260 1 185 5 209 3 109 1 
211 1 204 1 194 1 234 1 170 1 292 1 129 1 
211 1 74 1 306 1 213 1 170 1 129 1 131 1 204 1 234 1 194 1 317 1 292 1 
325 1 328 1 274 1 84 1 51 1 223 1 225 1 8 1 264 1 294 1 35 1 
210 1 211 2 328 1 274 1 84 1 170 2 264 1 35 1 325 1 204 1 194 1 106 1 291 1 277 1 225 1 294 1 27 1 186 1 
150 1 210 1 211 2 328 2 274 3 212 1 170 2 101 1 45 1 264 1 35 1 325 1 204 1 194 2 207 1 106 1 291 2 277 1 348 1 225 1 294 1 27 2 186 1 
150 1 28 1 211 2 152 1 328 2 274 3 212 1 170 2 101 1 45 1 264 2 35 1 325 2 204 1 194 2 207 1 106 1 291 2 277 1 348 1 225 1 294 2 27 2 186 1 
150 1 152 1 11 1 328 1 274 4 84 1 100 1 138 2 368 2 160 1 101 1 128 1 264 3 35 1 52 1 325 3 49 1 235 1 207 1 225 1 319 1 294 3 27 1 
150 1 152 1 11 1 328 1 274 4 84 1 100 1 138 2 368 2 160 1 101 1 264 3 35 1 52 1 325 3 79 1 49 1 207 1 225 1 319 1 294 3 27 1 
325 1 225 1 264 1 294 1 35 1 72 1 
328 2 274 3 99 1 21 1 84 2 244 1 264 7 102 1 35 3 284 1 325 7 269 1 258 1 249 1 250 1 225 2 122 1 294 6 72 1 149 1 27 1 
278 1 328 1 41 3 43 1 334 1 192 1 284 1 285 1 337 2 194 1 291 1 294 1 298 1 154 2 202 2 155 1 301 2 156 1 159 1 104 1 204 2 106 1 107 1 209 1 210 1 211 2 170 2 112 3 309 2 264 1 354 2 312 6 26 1 225 1 27 1 125 1 323 2 274 1 32 1 35 1 325 1 80 1 81 4 236 1 277 1 185 2 186 1 
279 2 135 1 84 1 138 3 89 1 264 1 46 1 3 1 49 1 116 1 6 1 290 1 224 2 319 1 294 1 271 2 295 1 11 1 274 2 100 1 367 1 368 3 160 1 130 2 52 2 325 1 79 1 303 1 
328 1 274 2 264 2 102 1 35 2 284 1 325 2 49 1 175 1 225 1 294 2 72 1 27 1 
284 1 152 1 325 4 328 1 274 1 84 1 245 1 223 1 225 1 8 1 264 4 294 4 35 1 
150 1 328 1 274 1 244 1 31 1 264 2 35 2 219 1 325 2 361 1 225 1 122 1 294 2 27 1 
242 1 325 1 84 1 75 1 197 1 171 1 225 1 264 1 294 1 35 1 
328 1 274 1 21 1 264 2 35 1 284 1 193 1 325 2 269 1 225 1 294 2 
150 1 328 2 274 3 21 1 84 1 245 1 264 5 35 2 284 1 325 5 249 1 258 1 223 1 8 1 225 2 294 4 
150 1 328 2 274 3 21 1 84 1 245 1 264 5 35 2 284 1 325 5 36 1 258 1 223 1 8 1 225 2 294 4 
28 1 211 2 328 1 274 1 84 1 170 2 264 1 35 1 325 1 204 1 194 1 106 1 291 1 277 1 225 1 294 1 27 1 186 1 
150 1 328 1 274 1 244 1 264 1 102 1 35 2 325 1 250 1 225 1 122 1 294 1 27 1 
211 1 97 1 170 1 345 1 33 1 335 1 194 1 358 1 362 1 
199 1 97 1 24 1 
204 1 144 1 335 1 97 1 33 1 
199 1 135 1 97 1 178 1 212 1 100 1 138 2 368 2 160 1 45 1 33 2 204 1 335 2 144 2 145 1 24 1 121 1 348 1 319 1 
251 1 347 1 51 1 239 1 
15 1 0 1 251 1 347 1 206 1 203 1 239 1 
172 1 326 1 203 1 
0 1 297 2 251 1 42 1 366 1 203 3 215 1 15 1 347 1 206 3 239 1 208 1 
161 1 15 1 0 1 251 1 347 1 282 1 206 2 203 2 239 1 
242 1 0 1 330 1 203 1 215 1 75 1 88 1 15 1 218 1 206 1 239 1 
15 1 0 1 251 1 206 1 203 1 215 1 239 1 
15 1 0 1 251 2 347 1 206 1 203 1 215 1 
310 1 15 2 0 2 251 1 302 1 206 2 203 2 215 1 239 1 141 1 
0 1 251 1 282 2 203 3 215 1 369 1 88 1 15 1 347 1 315 1 206 3 239 2 176 1 
242 1 0 1 330 1 251 1 282 1 203 2 75 2 215 1 171 1 191 1 15 1 347 1 94 1 206 2 239 1 
0 2 251 1 2 1 282 2 203 4 215 1 369 1 88 1 161 1 15 2 347 1 206 4 239 2 
15 1 0 1 251 1 347 1 206 1 203 1 215 1 239 1 
297 1 0 1 251 2 42 1 282 2 203 4 369 1 88 1 15 1 347 2 117 1 206 4 208 1 239 3 
0 1 251 1 282 1 203 2 215 1 255 1 15 1 347 1 119 1 206 2 239 1 363 1 
0 1 297 2 251 1 42 1 203 3 215 1 34 1 15 1 347 1 206 3 239 1 208 2 
372 2 356 1 113 1 239 2 
15 1 0 1 206 1 203 1 215 1 78 1 
15 1 0 1 251 1 347 1 282 1 206 2 203 2 215 1 239 1 176 1 
169 1 
15 1 0 1 251 1 347 1 206 1 203 1 215 1 239 1 
0 1 297 1 251 1 282 1 203 3 215 1 15 1 347 1 206 3 239 1 176 1 
117 1 369 1 239 1 88 1 
251 1 239 1 

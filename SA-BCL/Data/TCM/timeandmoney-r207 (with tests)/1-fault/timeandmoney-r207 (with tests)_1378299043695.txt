#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 143 257 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 3 104 2 346 1 347 1 44 1 70 1 4 1 268 6 108 1 180 1 293 9 245 9 11 2 155 2 31 1 113 2 134 2 35 2 230 1 216 5 340 1 92 2 119 1 192 4 279 1 280 1 167 1 281 1 
123 3 104 2 346 1 347 1 44 1 70 1 4 1 268 6 108 1 180 1 293 9 245 9 11 2 155 2 31 1 113 2 134 2 35 2 230 1 216 5 340 1 92 2 119 1 192 4 279 1 280 1 167 1 281 1 
123 4 104 2 346 1 347 1 44 1 70 1 4 1 268 7 108 1 180 1 293 10 245 10 11 2 155 2 31 1 113 2 134 2 35 2 230 1 216 6 340 1 92 2 119 1 192 5 279 1 280 1 167 1 281 1 
123 2 104 2 346 1 347 1 44 1 70 1 4 1 268 4 108 1 180 1 293 7 245 7 11 2 155 2 113 1 134 2 35 2 230 1 216 4 340 1 92 2 119 1 192 3 279 1 280 1 167 1 281 1 
113 2 123 1 104 1 35 1 216 3 4 1 192 2 92 1 268 3 108 1 279 1 280 1 167 1 11 1 245 4 293 4 155 1 31 1 
134 1 104 1 35 1 216 1 299 1 340 1 4 1 119 1 38 1 280 1 167 1 307 1 11 1 245 2 293 2 155 1 
134 1 123 1 216 2 4 1 192 1 268 1 180 1 280 1 167 1 11 2 245 3 293 3 155 2 
123 3 173 1 104 1 222 1 347 1 70 1 4 1 268 7 108 1 180 1 293 9 245 9 11 2 155 2 31 1 113 2 134 1 35 1 216 5 192 4 92 1 279 1 280 1 167 1 
123 3 173 1 104 1 222 1 347 1 70 1 4 1 268 7 108 1 180 1 293 9 245 9 11 2 155 2 31 1 113 2 134 1 35 1 216 5 192 4 92 1 279 1 280 1 167 1 
53 1 338 1 205 1 
151 1 205 1 87 2 
314 1 357 2 6 2 331 1 40 2 82 2 232 2 122 2 
345 1 344 1 21 1 40 3 221 1 174 1 67 1 238 1 209 1 6 2 331 1 148 2 8 1 48 1 152 2 153 2 335 1 312 1 111 2 355 1 12 1 314 1 357 3 33 1 247 1 296 1 14 1 138 1 82 2 232 2 15 1 233 1 236 1 194 2 195 1 259 1 122 2 
314 1 357 1 6 1 40 1 82 1 51 1 88 1 232 1 122 1 208 1 
357 1 40 1 338 1 158 1 82 1 205 1 231 1 234 1 91 1 27 1 306 1 258 1 121 1 51 1 
357 1 40 1 338 1 158 1 82 1 205 1 231 2 232 1 6 1 91 1 306 2 258 1 121 1 51 1 122 1 
253 1 140 1 43 1 306 1 231 1 
253 1 165 1 338 1 34 1 43 1 306 2 205 1 231 2 
253 1 306 1 231 1 
314 1 357 1 40 1 54 1 43 1 82 1 231 1 88 1 232 1 208 1 6 1 306 1 51 1 122 1 
205 1 
253 1 165 1 337 1 338 1 43 1 306 2 205 1 231 2 
282 2 219 1 135 1 286 1 338 1 43 2 205 1 231 5 73 1 165 1 191 1 253 2 106 1 242 2 179 1 227 1 306 5 52 2 170 1 
53 1 331 1 
357 2 40 2 82 2 264 1 232 1 6 1 331 2 182 1 122 1 
351 1 187 1 65 1 
12 1 357 1 33 1 40 1 14 1 67 1 287 1 15 1 236 1 331 1 148 1 8 1 153 1 312 1 111 1 355 1 
12 1 357 2 33 1 40 2 65 1 14 1 82 1 67 1 232 1 275 1 15 1 6 1 236 1 148 1 8 1 93 1 153 1 312 1 111 1 355 1 
357 3 6 3 331 1 40 3 93 1 82 3 122 1 232 3 
357 1 6 1 40 1 82 1 51 1 232 1 208 1 
357 1 6 1 40 1 82 1 264 1 51 1 182 1 232 1 122 1 
345 1 21 1 40 4 221 1 67 1 264 1 209 1 6 3 331 1 148 1 8 1 48 1 152 1 153 1 312 1 51 1 269 1 111 1 355 1 12 1 314 1 185 1 33 1 357 4 247 1 296 1 14 1 138 1 158 1 82 3 231 1 232 3 275 1 15 1 233 1 236 1 91 1 194 2 93 1 306 1 258 1 259 1 121 1 122 2 
234 1 357 2 6 1 331 1 74 1 40 2 82 2 93 1 232 1 
185 1 357 3 40 3 158 1 82 3 264 1 205 1 231 1 232 3 275 1 6 3 91 1 93 2 306 1 120 1 258 1 51 1 121 1 122 1 
357 2 40 2 187 1 65 1 82 2 264 1 232 2 6 2 93 1 122 1 
12 1 357 1 33 1 40 1 14 1 67 1 15 1 236 1 331 1 148 1 8 1 153 1 312 1 111 1 355 1 
12 1 357 1 40 1 14 1 67 1 15 1 331 1 148 1 8 1 153 1 312 1 61 1 111 1 198 1 355 1 
345 1 21 1 65 2 42 1 209 2 351 2 225 1 28 1 48 1 152 4 336 1 247 1 295 1 296 1 187 2 80 1 189 1 217 1 233 1 194 2 195 2 96 1 364 1 97 1 
357 1 6 1 40 1 158 1 82 1 51 1 232 1 127 1 
357 5 40 5 82 5 264 1 232 4 275 1 234 1 6 4 74 1 331 1 149 1 93 2 292 1 122 1 
357 2 6 2 40 2 82 2 51 1 232 2 127 1 208 1 
330 1 60 1 
330 1 60 1 
193 1 169 1 
193 1 169 1 
193 1 169 1 
330 1 60 1 329 1 
330 1 60 1 329 1 
330 1 298 1 60 1 
112 1 330 2 193 1 94 1 60 2 169 1 
330 1 60 1 329 1 
330 1 37 1 60 1 
330 1 37 1 60 1 
330 1 37 1 60 1 
199 2 136 1 272 1 64 3 2 2 205 1 86 1 231 2 265 1 36 2 288 2 330 2 290 2 342 1 306 2 59 1 39 1 94 1 60 2 
199 1 357 2 1 1 172 1 40 2 272 1 64 1 2 1 82 2 83 1 298 1 231 1 232 2 72 1 36 1 6 2 330 1 331 1 290 1 256 1 109 1 306 1 60 1 261 1 
92 1 104 1 35 1 
104 1 35 1 38 1 
133 1 92 2 104 3 38 1 318 1 131 1 
133 1 350 1 92 1 104 2 38 1 131 1 
133 1 92 1 104 2 38 1 131 2 
282 1 219 2 309 1 23 1 286 3 43 4 205 2 223 1 151 1 242 1 109 1 244 2 52 1 30 2 135 1 338 1 87 3 231 5 189 1 323 1 190 1 217 1 253 1 165 1 256 1 306 5 96 1 95 1 343 1 364 1 261 1 98 2 
282 2 219 6 220 1 309 2 286 8 43 7 205 5 223 3 128 1 151 3 242 2 109 4 181 5 244 6 52 2 184 1 135 1 338 1 140 5 115 1 85 1 273 1 87 9 231 9 189 3 323 1 190 2 217 3 253 6 165 1 306 9 96 3 364 3 170 1 98 6 
282 1 219 2 309 1 23 1 286 3 43 2 205 3 223 1 151 2 242 1 109 1 244 2 52 1 30 1 338 1 231 3 87 4 190 1 189 1 217 1 306 3 95 1 96 1 364 1 170 1 98 2 
282 1 219 4 309 1 23 1 286 5 43 3 205 4 223 2 151 3 242 1 109 2 244 4 52 1 30 2 184 1 338 1 115 1 85 1 87 7 231 4 190 1 189 2 217 2 306 4 95 1 96 2 364 2 98 4 170 1 
53 1 186 1 8 1 
266 1 8 1 
55 1 
12 1 8 1 
12 1 186 2 8 3 317 1 327 1 355 1 
12 1 8 1 355 1 
8 1 166 1 
262 1 336 3 313 1 0 1 295 2 157 1 176 1 177 2 240 1 126 1 209 3 152 7 195 4 96 1 76 1 364 1 237 1 
262 1 336 3 313 1 0 1 295 2 157 1 176 1 177 2 240 1 126 1 209 3 152 7 195 4 96 1 76 1 364 1 237 1 
262 1 336 3 313 1 0 1 316 1 295 2 157 1 176 1 177 2 240 1 126 1 209 3 152 7 195 4 96 1 76 1 364 1 237 1 
262 1 19 1 345 1 0 1 21 1 176 5 177 3 240 2 126 1 5 1 209 15 223 3 267 1 152 31 76 2 313 1 336 10 247 1 157 2 295 5 296 1 114 3 161 1 189 3 217 3 360 1 56 1 255 4 194 2 195 16 168 1 96 4 364 4 237 2 
262 1 345 2 0 1 41 1 21 2 176 1 177 2 240 1 209 4 152 9 76 1 336 4 313 1 247 2 157 1 295 3 296 2 161 1 162 1 194 4 195 5 96 1 364 1 237 1 
284 1 285 1 24 1 104 2 124 1 67 1 206 1 4 1 310 1 148 1 268 1 9 1 153 1 293 2 245 2 11 1 228 1 111 1 155 1 134 1 35 1 318 1 216 1 15 1 16 1 92 1 58 1 38 1 280 1 167 1 
284 1 285 1 24 1 104 2 124 1 67 1 206 1 148 1 268 2 9 1 153 1 293 3 245 3 11 1 132 1 228 1 111 1 155 1 134 1 35 1 318 1 216 1 301 1 15 1 302 1 92 1 58 1 38 1 280 1 167 1 
284 1 285 1 24 1 104 2 67 1 148 1 268 2 9 1 153 1 293 2 245 2 132 1 228 1 111 1 134 1 35 1 318 1 216 1 15 1 302 1 92 1 58 1 38 1 280 1 167 1 
24 2 67 1 207 1 148 1 8 1 9 2 129 1 29 1 153 1 293 1 245 1 11 1 111 1 155 1 12 1 134 2 14 1 301 1 15 1 89 1 90 1 277 1 58 2 
284 1 285 1 24 1 104 2 124 1 67 1 206 1 4 1 310 1 148 1 9 1 153 1 293 1 245 1 11 1 228 1 111 1 155 1 134 1 35 1 318 1 15 1 302 1 92 1 58 1 38 1 
145 1 
282 1 202 1 219 1 40 1 143 1 286 1 144 1 67 1 207 1 27 1 148 2 8 1 242 1 178 1 153 2 212 1 51 1 52 1 111 2 12 1 357 1 294 1 135 1 14 2 158 1 139 1 82 1 231 3 15 1 190 1 234 1 90 1 361 1 91 1 253 2 165 1 306 3 257 1 258 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 337 1 143 1 158 1 139 1 82 1 231 3 234 1 91 1 165 1 253 1 27 1 306 3 257 1 258 1 212 1 51 1 121 1 
282 1 202 1 357 1 135 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 242 1 306 2 257 1 258 1 212 1 51 1 121 1 52 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
202 1 357 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 306 2 257 1 258 1 212 1 51 1 121 1 
282 1 202 1 357 1 135 1 294 1 40 1 143 1 158 1 139 1 82 1 231 2 234 1 91 1 27 1 242 1 306 2 257 1 258 1 212 1 51 1 121 1 52 1 
262 1 345 1 0 1 21 1 65 1 177 1 240 1 209 3 351 1 225 1 331 2 48 1 152 6 313 1 336 2 53 1 247 1 295 2 187 1 296 1 233 1 194 2 195 3 96 1 364 1 237 1 
99 1 345 2 21 2 65 11 176 1 238 1 105 1 25 1 5 1 209 6 223 2 351 11 331 1 311 1 267 1 48 2 152 14 336 2 247 2 295 1 296 2 114 3 187 4 138 1 339 1 189 2 233 1 217 1 255 3 194 4 195 8 96 2 364 1 
345 1 40 2 21 1 67 1 25 1 238 1 69 1 147 1 287 1 209 1 6 1 331 1 148 1 8 1 48 1 152 2 153 1 312 1 111 1 355 1 12 1 33 1 357 2 247 1 14 1 187 1 296 1 138 1 82 1 232 1 322 1 275 1 15 1 233 1 236 1 93 1 194 2 195 1 
201 2 0 1 40 3 238 1 146 2 239 2 240 1 209 10 6 1 331 2 7 2 148 3 8 2 48 3 152 20 50 1 153 3 111 3 12 2 336 8 247 3 295 4 14 1 296 3 15 2 302 1 217 2 259 2 262 1 345 3 20 1 21 3 65 7 67 2 176 4 177 1 25 1 223 2 351 7 312 2 32 1 355 2 313 1 357 3 33 2 187 7 138 1 82 1 232 1 275 1 189 2 233 3 236 2 194 6 93 1 195 10 96 3 364 3 237 1 
345 2 40 1 21 2 174 2 67 2 68 1 238 1 207 1 209 1 6 1 224 1 225 1 148 7 8 3 243 1 48 2 152 2 153 8 111 8 12 2 357 1 247 2 14 2 296 2 81 1 138 1 359 1 82 1 321 1 232 1 15 2 302 1 233 2 90 1 16 1 278 1 93 1 194 4 195 1 
345 1 21 1 40 1 65 1 264 1 25 1 209 2 6 1 223 1 351 1 48 1 152 3 336 1 357 1 247 1 295 1 187 1 296 1 82 1 232 1 189 1 233 1 217 1 194 2 305 1 195 1 96 1 122 1 364 1 
336 1 345 1 247 1 21 1 187 1 65 1 296 1 80 1 176 1 189 1 233 1 351 1 225 1 48 1 152 2 194 2 195 2 96 1 
336 1 345 1 247 1 295 1 21 1 187 1 65 1 296 1 209 2 233 1 217 1 351 1 225 1 48 1 152 2 194 2 364 1 97 1 
336 2 345 1 247 1 295 1 21 1 187 2 65 2 296 1 176 1 189 1 209 2 217 1 233 1 223 1 351 2 225 1 48 1 152 4 194 2 195 2 96 1 364 1 
336 1 345 1 247 1 21 1 187 1 65 1 296 1 80 1 176 1 189 1 233 1 351 1 278 1 48 1 152 2 194 2 195 2 96 1 
336 1 345 1 247 1 295 1 21 1 187 1 65 1 296 1 209 2 233 1 217 1 351 1 278 1 48 1 152 2 194 2 364 1 97 1 
336 2 345 1 247 1 295 1 21 1 187 2 65 2 296 1 176 1 189 1 209 2 217 1 233 1 223 1 351 2 278 1 48 1 152 4 194 2 195 2 96 1 364 1 
336 2 345 1 247 1 295 1 21 1 187 2 65 2 296 1 176 1 189 1 209 2 217 1 233 1 223 1 351 2 48 1 194 2 152 4 195 2 96 1 364 1 
345 1 40 1 21 1 67 1 238 1 209 1 331 1 148 1 8 1 48 1 152 2 153 1 312 1 111 1 355 1 12 1 33 1 357 1 247 1 14 1 296 1 138 1 15 1 233 1 236 1 194 2 195 1 259 1 
345 1 40 1 21 1 66 1 67 1 238 1 209 1 331 1 148 1 8 1 48 1 152 2 153 1 312 1 111 1 355 1 12 1 357 1 247 1 14 1 296 1 138 1 15 1 233 1 194 2 195 1 61 1 198 1 
336 2 345 1 247 1 295 1 21 1 187 2 65 2 296 1 176 1 25 1 189 1 209 2 217 1 233 1 223 1 351 2 48 1 152 4 194 2 195 2 96 1 364 1 
201 1 345 1 40 1 21 1 65 2 176 1 67 1 209 2 223 1 351 2 148 1 8 1 48 1 152 4 153 1 312 1 111 1 355 1 336 2 12 1 33 1 357 1 247 1 295 1 187 2 296 1 189 1 15 1 217 1 233 1 236 1 16 1 194 2 195 2 96 1 259 1 364 1 
345 1 21 1 40 1 65 1 176 1 264 1 25 1 209 1 6 1 223 1 351 1 48 1 152 3 336 1 357 1 247 1 296 1 187 1 82 1 188 1 232 1 189 1 217 1 233 1 194 2 195 2 96 1 364 1 122 1 
262 1 62 1 100 1 345 3 0 1 21 3 176 4 177 1 240 1 349 1 5 3 209 21 223 4 332 1 47 2 267 1 152 41 154 1 75 1 313 1 336 8 246 1 247 3 79 1 295 4 296 3 114 3 319 4 141 1 161 1 189 4 162 1 235 1 303 1 217 4 57 1 255 4 194 6 195 20 96 5 196 1 364 5 237 1 
262 1 62 1 100 1 345 4 0 1 21 4 176 3 177 1 240 1 349 1 5 3 209 18 223 4 332 1 47 2 267 1 152 38 154 1 75 1 313 1 336 7 246 1 247 4 79 1 295 4 296 4 114 3 319 4 141 1 161 2 189 4 162 1 235 1 303 1 217 3 57 1 255 4 194 8 195 20 96 5 196 1 364 4 237 1 
262 1 62 1 100 1 345 2 0 1 21 2 176 7 177 1 240 1 349 1 5 2 209 25 223 7 332 1 47 1 267 2 152 52 75 1 313 1 336 14 246 1 247 2 79 1 295 7 296 2 114 4 339 2 319 4 141 1 161 1 189 7 162 1 303 1 217 7 57 1 255 4 194 4 195 27 96 8 196 1 364 8 237 1 
345 2 21 2 176 3 349 1 5 1 209 10 223 3 47 1 267 1 152 19 75 2 336 6 247 2 79 1 295 3 296 2 114 1 319 2 141 1 189 3 276 1 162 1 235 1 303 1 217 3 255 2 194 4 195 9 96 3 364 3 
100 1 62 1 345 3 21 3 176 2 349 1 5 2 209 12 223 3 332 1 47 2 152 26 75 1 336 4 246 1 247 3 79 1 295 2 296 3 114 2 319 4 141 1 161 2 189 3 162 1 303 2 217 2 255 2 57 1 194 6 195 14 96 3 196 1 364 2 
265 1 199 1 36 1 330 1 290 1 203 1 2 1 59 1 94 1 60 1 
298 1 72 1 
199 1 36 1 102 1 330 1 290 1 2 1 130 1 160 1 60 1 
199 1 136 1 272 1 64 2 2 1 205 1 86 1 231 1 265 1 36 1 288 1 330 1 290 1 306 1 59 1 39 1 94 1 60 1 
199 1 136 1 272 1 64 2 2 1 205 1 86 1 231 1 265 1 36 1 288 1 330 1 290 1 306 1 59 1 39 1 94 1 60 1 
199 1 136 1 272 1 64 2 2 1 205 1 86 1 231 1 265 1 36 1 288 1 330 1 290 1 306 1 59 1 39 1 94 1 60 1 
112 1 49 1 329 1 
112 1 49 1 329 1 
37 1 103 1 
112 1 37 1 103 1 
1 1 83 1 
199 1 1 1 40 2 172 1 64 1 2 1 43 1 72 1 288 1 6 2 330 1 331 1 290 1 10 1 109 1 357 2 136 1 82 2 83 1 298 1 231 1 232 2 36 1 306 1 256 1 60 1 261 1 
49 1 329 1 
112 1 37 1 103 1 
200 1 345 1 40 2 21 1 174 2 67 1 25 1 238 1 326 1 209 1 148 2 8 1 243 1 48 1 152 2 110 1 153 2 111 2 12 1 357 2 247 1 296 1 138 1 82 2 321 1 251 1 15 1 233 1 17 1 194 2 195 1 
285 1 104 2 24 1 35 1 318 1 67 1 206 1 15 1 46 1 302 1 16 1 92 1 148 2 241 1 38 1 153 2 363 1 228 1 111 2 
285 1 104 2 24 1 35 1 318 1 248 1 67 1 206 1 46 1 15 1 302 1 92 1 148 1 38 1 153 1 228 1 111 1 
12 1 14 1 24 1 67 1 328 1 207 1 15 1 90 1 148 1 8 1 29 1 153 1 363 1 111 1 
285 1 104 2 24 1 35 1 318 1 67 1 206 1 15 1 46 1 302 1 92 1 148 1 241 1 38 1 153 1 363 1 228 1 111 1 
164 1 
219 1 53 1 106 1 286 1 338 1 179 1 205 1 
282 1 219 1 171 1 286 1 205 2 151 1 242 1 353 1 52 1 135 1 338 1 320 1 87 1 231 1 165 1 253 1 306 1 
282 4 101 2 286 9 144 1 205 8 45 2 289 1 7 2 106 1 148 3 8 10 242 4 151 6 107 2 291 2 333 1 153 3 211 1 244 6 52 4 111 3 12 3 14 1 338 2 15 4 163 2 217 2 16 1 253 5 165 3 166 2 306 5 218 1 258 2 219 8 67 3 26 1 125 2 223 2 266 3 179 1 355 3 135 4 186 2 317 1 84 2 231 5 87 12 190 2 189 2 324 2 96 2 364 2 98 6 
282 2 100 1 62 1 219 5 286 8 144 1 205 5 3 1 71 1 125 2 5 1 223 2 242 2 151 3 291 1 244 5 52 2 246 1 135 2 114 1 338 2 231 1 87 6 190 1 189 2 217 2 253 1 165 1 255 1 57 1 306 1 96 2 196 1 364 2 98 5 
282 1 262 1 219 2 40 1 286 2 348 1 240 1 125 2 208 1 6 1 242 1 291 1 51 1 52 1 314 1 214 1 357 1 135 1 54 1 82 1 231 1 88 1 232 1 306 1 96 2 364 1 122 1 237 1 
282 1 219 1 135 1 338 1 286 1 205 1 106 1 242 1 179 1 52 1 
219 5 286 5 205 5 87 10 125 2 189 2 223 2 217 2 7 1 151 5 291 1 244 5 96 2 364 2 98 5 
253 1 165 1 338 1 306 1 205 1 231 1 
282 2 219 2 286 2 175 1 144 2 67 1 207 1 148 4 8 1 178 1 242 2 333 1 153 4 52 2 111 4 12 1 135 1 137 1 14 2 231 3 15 1 190 2 90 1 361 1 253 4 165 2 306 3 218 2 170 1 
345 1 21 1 40 3 221 1 67 1 209 1 6 2 331 1 148 1 8 1 48 1 152 1 153 1 312 1 111 1 355 1 314 1 12 1 357 3 33 1 247 1 296 1 14 1 138 1 82 2 232 2 15 1 233 1 236 1 194 2 259 1 122 2 
282 1 219 2 135 1 286 1 338 2 144 1 177 1 205 4 87 4 190 1 151 2 242 1 244 2 52 1 98 2 
199 1 2 1 334 1 
199 1 2 1 334 1 
199 1 2 1 215 1 83 1 59 1 
199 1 2 1 334 1 
199 1 271 1 2 1 
199 1 271 1 2 1 
199 1 271 1 2 1 
199 1 2 1 
330 1 60 1 
262 1 336 2 313 1 100 1 345 1 0 1 247 1 295 2 21 1 296 1 114 1 177 1 240 1 5 1 162 1 209 4 255 1 194 2 152 8 195 4 96 1 364 1 237 1 
262 1 100 1 345 2 0 1 21 2 176 1 177 1 240 1 5 1 209 5 223 1 267 1 152 11 313 1 336 3 247 2 295 2 296 2 114 1 189 1 162 1 255 2 194 4 195 6 96 2 364 1 197 1 237 1 
262 1 100 1 62 1 345 3 0 1 21 3 176 1 177 1 240 1 5 1 209 10 223 2 152 19 313 1 336 4 246 1 247 3 295 3 114 1 296 3 161 1 189 2 162 1 217 2 255 1 57 1 194 6 195 9 96 3 197 1 364 3 196 1 237 1 
262 1 100 1 62 1 345 3 0 1 21 3 176 2 177 1 240 1 5 1 209 7 223 2 152 17 313 1 336 5 246 1 247 3 295 3 114 1 296 3 161 1 189 2 162 1 217 1 255 1 57 1 194 6 195 10 96 3 197 1 364 2 196 1 237 1 
262 1 336 2 313 1 100 1 345 1 0 1 247 1 295 2 21 1 296 1 114 1 177 1 240 1 5 1 162 1 209 4 255 1 194 2 152 8 195 4 96 1 364 1 237 1 
100 1 62 1 345 1 21 1 176 1 5 1 209 6 223 2 152 12 336 2 246 1 247 1 295 1 114 1 296 1 189 2 162 1 217 2 255 1 57 1 194 2 195 6 96 2 364 2 196 1 
262 1 100 1 62 1 345 4 0 1 21 4 176 2 177 1 240 1 5 1 209 8 223 2 152 18 313 1 336 5 246 1 247 4 295 3 296 4 114 1 161 2 189 2 162 1 217 1 255 1 57 1 194 8 195 10 96 3 196 1 197 1 364 2 237 1 
100 1 62 1 345 4 21 4 176 3 5 1 209 7 223 3 152 16 336 6 246 1 247 4 295 3 296 4 114 1 161 2 189 3 162 1 235 1 217 2 255 1 57 1 194 8 195 9 96 3 196 1 364 2 
313 1 336 6 262 1 0 2 295 3 176 3 240 3 209 4 152 7 195 3 96 1 364 1 237 3 
262 1 100 1 62 1 345 4 0 1 21 4 176 1 177 1 240 1 5 1 209 8 223 2 152 18 313 1 336 4 246 1 247 4 295 3 296 4 114 1 161 2 189 2 162 1 235 1 217 1 255 1 57 1 194 8 195 10 96 3 196 1 364 2 237 1 
262 1 336 3 313 1 345 2 247 2 0 1 295 2 21 2 296 2 176 1 177 1 240 1 161 1 209 4 152 8 194 4 195 4 96 1 364 1 237 1 
262 1 336 2 313 1 209 3 53 1 0 1 295 2 152 6 195 3 177 1 96 1 240 1 364 1 237 1 
336 2 345 1 247 1 295 1 21 1 296 1 176 1 189 1 209 2 217 1 223 1 194 2 152 4 195 2 96 1 364 1 197 1 
336 2 295 1 114 1 176 1 5 1 189 1 209 4 217 1 223 1 267 1 255 2 152 7 195 3 96 1 364 1 
262 1 99 1 345 2 0 1 21 2 176 4 177 1 240 2 209 12 223 2 267 1 152 23 313 1 336 9 247 2 295 5 114 2 296 2 339 1 161 2 117 1 189 2 217 2 255 2 194 4 195 11 96 3 364 3 237 2 
209 1 255 1 152 1 
114 1 152 1 195 1 
336 3 345 1 247 1 21 1 295 2 296 1 176 1 189 1 209 3 223 1 217 1 7 1 194 2 152 6 195 3 96 1 197 1 364 1 
100 1 62 1 345 1 21 1 176 1 5 1 209 6 223 2 152 12 336 2 246 1 247 1 295 1 114 1 296 1 189 2 162 1 217 2 255 1 57 1 194 2 195 6 96 2 364 2 196 1 
262 1 336 2 295 1 176 1 240 1 209 3 152 6 195 3 96 1 364 1 237 1 
336 2 313 1 345 1 0 1 247 1 295 1 21 1 296 1 176 1 240 1 161 1 117 1 209 2 152 3 194 2 195 1 237 1 
336 5 262 1 345 1 247 1 21 1 295 3 296 1 176 2 348 1 240 2 162 1 209 5 194 2 152 10 195 5 96 2 364 2 237 2 
336 1 345 1 247 1 21 1 296 1 176 1 189 1 162 1 194 2 152 2 195 2 96 1 
336 2 345 1 247 1 295 1 21 1 296 1 176 1 189 1 209 2 162 1 217 1 223 1 194 2 152 4 195 2 96 1 364 1 
336 2 345 3 247 3 21 3 295 1 296 3 176 1 240 1 161 1 117 1 209 2 162 1 235 1 152 3 194 6 195 1 237 1 
262 2 19 1 345 5 0 1 21 5 176 5 177 1 240 3 5 1 209 18 223 3 267 1 152 34 313 1 336 12 247 5 295 7 296 5 114 3 161 2 117 1 189 3 162 1 235 1 217 3 360 1 56 1 255 4 194 10 195 16 96 5 197 1 364 5 237 3 
315 1 357 1 234 1 331 1 74 1 40 1 82 1 
213 1 315 1 63 1 357 1 78 1 40 1 82 1 118 1 234 1 331 1 74 1 150 1 
15 1 12 1 90 1 53 1 148 1 8 1 14 1 67 1 153 1 207 1 111 1 
12 1 357 2 40 2 14 1 82 1 67 1 232 1 15 1 6 1 236 1 331 1 148 1 8 1 93 1 153 1 312 1 111 1 355 1 
101 1 40 2 67 1 6 1 331 1 148 1 8 3 153 1 312 1 51 1 111 1 355 2 12 2 357 2 158 1 82 2 232 2 15 1 236 1 91 1 93 1 166 1 218 1 
101 1 40 2 67 1 6 1 331 1 148 2 8 3 153 2 312 1 51 1 111 2 355 2 12 2 357 2 158 1 82 2 300 1 232 2 15 1 91 1 93 1 166 1 218 1 61 1 
283 1 101 1 67 1 205 1 266 1 148 3 8 4 153 3 111 3 355 1 77 1 12 1 186 1 14 1 338 1 300 1 231 2 15 1 253 1 166 1 306 2 218 1 258 1 
12 1 101 1 186 1 14 1 338 1 67 1 205 1 84 1 300 1 231 2 15 1 266 1 253 1 148 3 8 4 166 1 306 2 218 1 153 3 258 1 111 3 355 1 
15 1 224 1 148 1 67 1 153 1 111 1 
12 2 308 1 14 2 317 1 174 1 81 1 359 1 67 2 68 1 250 1 15 3 302 1 224 1 16 1 148 6 8 3 243 1 354 1 153 7 111 7 355 1 
200 1 201 1 0 1 40 2 146 1 240 1 209 3 6 1 331 2 148 1 8 1 48 2 152 6 153 1 111 1 12 1 336 2 247 2 295 2 296 2 15 1 16 1 259 1 262 1 345 2 21 2 65 1 67 1 25 1 177 1 351 1 312 1 355 1 313 1 33 1 357 2 187 1 82 1 232 1 233 2 236 1 194 4 93 1 195 3 96 1 364 1 237 1 
282 2 219 1 286 1 43 1 205 1 266 1 106 1 148 1 242 2 8 2 179 1 107 1 333 1 153 1 52 2 111 1 135 2 186 1 14 1 338 1 84 1 231 3 163 1 253 2 165 1 324 1 306 3 258 1 
12 1 186 1 317 1 67 1 26 1 15 2 224 1 16 1 148 2 8 2 153 2 111 2 355 1 
12 1 14 1 67 1 300 1 207 1 15 1 90 1 16 1 148 4 8 1 226 1 153 4 111 4 
12 1 308 1 20 1 67 1 15 2 148 2 352 1 8 1 304 1 354 1 218 1 153 2 111 2 355 1 
15 1 148 1 14 1 104 1 35 1 38 1 67 1 153 1 228 1 111 1 
12 1 67 1 251 1 15 1 302 1 16 1 148 2 8 1 243 1 153 2 111 2 
12 2 14 1 81 1 359 1 67 2 207 1 15 2 90 1 16 1 148 4 8 3 243 1 226 1 218 1 153 5 111 5 
12 2 156 1 14 1 359 1 67 2 207 1 15 2 90 1 16 1 148 4 8 3 243 1 226 1 218 1 153 5 111 5 
12 1 357 2 40 2 14 1 82 1 67 1 232 1 15 1 6 1 331 1 148 1 8 1 93 1 153 1 312 1 61 1 111 1 355 1 
12 1 308 1 317 1 67 1 250 1 15 2 148 1 8 1 354 1 218 1 153 1 111 1 355 1 
356 1 13 1 331 1 249 1 274 1 
13 1 356 2 185 1 338 1 158 1 43 1 249 2 205 1 231 2 274 2 331 1 91 1 18 1 362 1 306 2 258 1 51 1 260 1 121 1 
356 1 13 1 357 1 40 1 82 1 326 1 274 1 17 1 110 1 
13 1 362 1 18 1 
53 1 216 1 280 1 167 1 
216 1 280 1 167 1 293 1 245 1 11 1 155 1 
134 1 58 1 293 1 
358 1 204 1 263 1 216 1 4 1 119 2 280 1 167 1 11 1 245 3 293 3 155 1 
113 1 268 1 216 1 280 1 167 1 293 2 245 2 11 1 155 1 
104 1 35 1 216 1 4 1 192 1 92 1 279 1 11 1 245 1 293 1 155 1 
4 1 216 1 280 1 293 1 245 1 11 1 155 1 
4 1 280 2 167 1 293 1 245 1 11 1 155 1 
297 1 159 1 216 1 4 1 280 1 11 2 245 2 293 2 155 2 270 1 
123 1 347 1 216 2 70 1 4 1 192 1 268 2 280 1 167 1 11 1 245 3 293 3 155 1 
22 1 104 2 35 1 318 1 216 1 4 1 92 1 268 1 38 1 280 1 167 1 11 1 245 2 293 2 155 1 
113 1 123 1 216 2 4 1 192 1 268 2 280 1 167 1 11 2 245 4 293 4 155 2 31 1 
4 1 216 1 280 1 167 1 293 1 245 1 11 1 155 1 
358 1 123 1 263 1 216 3 119 1 192 1 268 2 280 2 167 2 229 1 245 4 293 4 11 1 155 1 
173 1 216 1 4 1 341 1 268 1 280 1 167 1 11 1 245 2 293 2 155 1 183 1 
358 1 263 2 216 1 4 1 119 2 142 1 280 1 167 1 11 1 245 3 293 3 155 1 
252 1 325 2 116 1 216 2 
4 1 210 1 293 1 245 1 11 1 155 1 
4 1 268 1 347 1 216 1 280 1 167 1 293 2 245 2 11 1 155 1 
254 1 
4 1 216 1 280 1 167 1 293 1 245 1 11 1 155 1 
4 1 119 1 268 1 347 1 216 1 280 1 167 1 293 3 245 3 11 1 155 1 
123 1 192 1 216 1 229 1 
216 1 280 1 

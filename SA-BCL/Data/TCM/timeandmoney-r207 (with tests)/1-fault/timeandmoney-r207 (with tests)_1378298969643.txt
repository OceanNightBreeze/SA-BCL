#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 55 105 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 1 126 4 42 5 336 1 68 1 224 1 4 2 177 1 135 1 251 1 158 6 183 1 255 2 257 2 259 1 368 1 159 9 260 1 186 1 309 2 17 1 211 1 355 3 37 1 271 2 120 9 291 2 333 2 
191 1 126 4 42 5 336 1 68 1 224 1 4 2 177 1 135 1 251 1 158 6 183 1 255 2 257 2 259 1 368 1 159 9 260 1 186 1 309 2 17 1 211 1 355 3 37 1 271 2 291 2 120 9 333 2 
191 1 126 5 42 6 336 1 68 1 224 1 4 2 177 1 135 1 251 1 158 7 183 1 255 2 257 2 259 1 368 1 159 10 260 1 186 1 309 2 17 1 211 1 355 4 37 1 271 2 291 2 120 10 333 2 
191 1 126 3 42 4 336 1 68 1 224 1 4 2 177 1 251 1 158 4 183 1 255 1 257 2 259 1 368 1 159 7 260 1 186 1 309 2 17 1 211 1 355 2 37 1 271 2 291 2 120 7 333 2 
255 2 257 1 159 4 260 1 126 2 42 3 336 1 68 1 177 1 309 1 135 1 251 1 158 3 355 1 271 1 333 1 120 4 291 1 
257 1 202 1 159 2 368 1 42 1 336 1 12 1 4 1 177 1 309 1 251 1 17 1 187 1 271 1 120 2 333 1 
257 2 159 3 126 1 42 2 336 1 4 1 177 1 251 1 211 1 158 1 355 1 271 2 120 3 
126 4 42 5 336 1 224 1 68 1 4 1 177 1 135 1 251 1 158 7 255 2 257 2 159 9 260 1 186 1 309 1 347 1 268 1 211 1 355 3 271 2 120 9 291 1 333 1 
126 4 42 5 336 1 224 1 68 1 4 1 177 1 135 1 251 1 158 7 255 2 257 2 159 9 260 1 186 1 309 1 347 1 268 1 211 1 355 3 271 2 120 9 291 1 333 1 
101 1 
65 1 283 1 173 1 237 1 1 1 308 1 132 1 49 1 341 1 252 1 148 1 96 1 150 1 293 1 
101 1 147 1 153 1 
247 2 101 1 111 1 
65 2 173 2 283 2 237 2 341 2 182 1 132 1 96 2 
65 2 43 1 315 1 193 1 173 2 103 1 151 1 22 1 317 1 23 1 225 2 196 2 300 1 132 1 197 1 5 1 75 1 7 1 179 1 341 2 182 1 365 1 342 1 234 1 52 2 283 2 237 3 160 2 346 1 374 1 164 1 241 1 349 1 90 2 115 1 166 1 96 3 
65 1 49 1 173 1 283 1 237 1 341 1 1 1 132 1 148 1 96 1 
65 1 66 1 101 1 237 1 1 1 153 1 248 1 308 1 363 1 34 1 91 1 79 1 96 1 293 1 
65 1 66 1 101 1 283 1 173 1 237 1 1 1 153 1 308 2 34 1 341 1 91 1 79 1 96 1 293 2 
242 1 308 1 141 1 293 1 150 1 
108 1 101 1 242 1 153 1 308 2 119 1 293 2 150 1 
242 1 308 1 293 1 
108 1 101 1 242 1 153 1 38 1 308 2 293 2 150 1 
10 2 108 1 295 1 101 1 67 1 282 1 153 1 265 2 308 5 299 1 287 1 76 1 340 1 302 1 242 2 214 1 26 2 150 2 293 5 
65 2 283 1 173 1 237 2 112 1 341 1 182 2 307 1 96 2 
54 1 11 1 94 1 
147 1 182 1 
43 1 315 1 193 1 237 1 160 1 23 1 225 1 196 1 164 1 241 1 349 1 182 1 365 1 201 1 96 1 342 1 
65 1 43 1 11 1 315 1 193 1 283 1 173 1 237 2 160 1 23 1 71 1 225 1 196 1 164 1 241 1 349 1 60 1 365 1 96 2 342 1 
65 3 60 1 173 3 283 3 237 3 341 1 182 1 96 3 
65 1 49 1 173 1 283 1 237 1 1 1 96 1 
65 1 173 1 283 1 237 1 341 1 1 1 112 1 307 1 96 1 
65 3 66 1 43 1 315 1 193 1 173 3 103 1 22 1 23 1 1 1 71 1 225 1 196 1 300 1 132 1 197 1 75 1 7 1 179 1 341 2 182 1 365 1 107 1 79 1 342 1 234 1 52 2 206 1 283 3 237 4 160 1 112 1 308 1 374 1 241 1 164 1 349 1 60 1 34 1 90 1 91 1 166 1 96 4 293 1 
65 2 60 1 173 1 283 1 237 2 352 1 182 1 96 2 363 1 
65 3 83 1 66 1 101 1 283 3 173 3 206 1 237 3 1 1 71 1 112 1 308 1 60 2 34 1 341 1 91 1 79 1 96 3 293 1 
65 2 54 1 283 2 173 2 11 1 237 2 112 1 60 1 341 1 96 2 
43 1 193 1 315 1 237 1 160 1 23 1 225 1 196 1 164 1 241 1 349 1 182 1 365 1 96 1 342 1 
43 1 193 1 315 1 237 1 160 1 23 1 225 1 196 1 372 1 267 1 164 1 349 1 182 1 96 1 342 1 
103 1 45 1 362 1 48 1 197 1 5 2 137 1 75 1 322 1 7 1 324 1 181 1 234 1 52 2 54 2 143 1 11 2 31 1 374 1 350 1 90 4 166 2 94 2 63 1 
65 1 34 1 128 1 173 1 283 1 237 1 1 1 96 1 
280 1 65 5 283 4 173 4 237 5 319 1 71 1 112 1 363 1 60 2 352 1 341 1 182 1 96 5 
65 2 49 1 128 1 173 2 283 2 237 2 1 1 96 2 
343 1 165 1 
343 1 165 1 
327 1 213 1 
327 1 213 1 
327 1 213 1 
343 1 165 1 139 1 
343 1 165 1 139 1 
343 1 165 1 139 1 
343 1 165 1 297 1 
343 1 165 1 297 1 
343 1 165 1 297 1 
343 1 312 1 165 1 
343 2 53 1 165 2 327 1 227 1 213 1 
334 1 51 2 343 2 100 1 101 1 174 1 308 2 227 1 14 2 230 2 321 1 310 1 74 2 165 2 276 2 303 1 305 1 92 3 293 2 
215 1 65 2 173 2 70 1 130 1 74 1 138 1 182 1 276 1 303 1 306 1 9 1 254 1 51 1 343 1 283 2 237 2 308 1 14 1 312 1 165 1 92 1 96 2 293 1 
77 2 12 1 291 1 333 2 169 1 
309 1 333 1 291 1 
12 1 309 1 333 1 
88 1 77 1 12 1 291 2 333 3 169 1 
77 1 12 1 13 1 291 1 333 2 169 1 
220 1 295 2 247 3 101 2 102 2 153 1 362 1 231 1 137 1 322 1 138 1 324 1 78 1 9 1 26 1 254 1 10 1 108 1 282 1 284 2 110 1 263 1 111 1 265 1 308 5 162 1 242 1 354 1 357 2 214 3 293 5 150 4 
295 6 247 9 101 5 153 1 299 1 274 1 362 3 231 3 137 3 322 3 324 3 8 1 254 4 141 5 26 2 10 2 108 1 282 1 284 6 263 1 111 3 265 2 308 9 144 1 162 2 58 5 242 6 188 1 354 2 357 6 19 1 214 8 20 1 293 9 150 7 
295 2 247 4 101 3 102 1 153 1 299 1 362 1 231 1 137 1 322 1 324 1 78 1 26 1 254 1 10 1 284 2 110 1 111 2 265 1 308 3 162 1 354 1 357 2 214 3 150 2 293 3 
295 4 247 7 101 4 102 2 153 1 299 1 274 1 362 2 231 2 137 2 322 2 324 2 8 1 78 1 26 1 254 2 10 1 284 4 110 1 111 3 265 1 308 4 144 1 162 1 354 1 357 4 214 5 293 4 150 3 
222 1 
147 1 315 1 155 1 
315 1 55 1 
349 1 315 1 
349 1 315 3 193 1 270 1 180 1 155 2 
349 1 315 1 193 1 
192 1 315 1 
109 1 358 2 45 3 371 1 154 1 320 1 362 1 31 2 5 4 137 1 232 1 145 1 114 1 89 1 90 7 356 1 166 3 168 1 
358 3 103 1 45 10 296 1 320 2 154 5 362 4 197 1 5 16 231 3 250 4 232 2 137 4 322 3 7 1 324 3 185 1 52 2 29 1 371 1 31 5 374 1 288 1 145 2 89 1 114 1 90 31 118 3 356 2 332 1 166 15 168 1 314 1 379 1 
99 1 358 2 103 2 45 4 46 1 320 1 154 1 362 1 197 2 5 5 137 1 232 1 7 2 52 4 371 1 31 3 374 2 145 1 89 1 90 9 356 1 166 4 314 1 168 1 
358 2 45 3 371 1 154 1 320 1 362 1 31 2 5 4 137 1 232 1 145 1 114 1 89 1 90 7 356 1 166 3 168 1 
358 2 45 3 371 1 154 1 320 1 362 1 31 2 5 4 137 1 232 1 145 1 114 1 89 1 90 7 356 1 166 3 168 1 
257 1 203 1 159 1 335 1 43 1 315 1 345 1 160 1 208 2 225 1 196 1 4 2 47 1 72 2 164 1 349 1 113 1 33 1 271 1 378 1 212 2 342 1 120 1 
42 1 43 1 336 1 196 1 225 1 4 1 177 1 72 1 251 1 158 1 342 1 257 1 159 2 344 1 160 1 208 1 264 1 12 1 286 1 309 1 373 1 32 1 88 1 331 1 271 1 212 1 62 1 291 1 120 2 333 2 
42 1 172 1 43 1 336 1 196 1 225 1 4 1 177 1 72 1 157 1 158 2 342 1 257 1 159 3 160 1 345 1 208 1 264 1 12 1 286 1 309 1 373 1 88 1 331 1 271 1 212 1 62 1 291 1 120 3 333 2 
42 1 172 1 43 1 336 1 196 1 225 1 4 1 177 1 72 1 158 2 157 1 342 1 159 2 160 1 208 1 12 1 309 1 373 1 88 1 331 1 212 1 62 1 120 2 333 2 291 1 
172 1 43 1 196 1 225 1 4 1 72 1 251 1 342 1 257 1 159 1 160 1 208 1 264 1 12 1 286 1 309 1 373 1 32 1 88 1 331 1 271 1 212 1 62 1 291 1 120 1 333 2 
216 1 
294 2 295 2 247 2 101 2 43 1 152 1 44 2 1 1 153 1 196 2 248 1 47 1 198 2 301 2 342 1 10 1 108 3 204 1 160 2 111 2 265 1 308 5 162 1 164 2 349 1 214 2 167 1 65 1 66 1 315 1 225 2 363 1 79 1 26 1 27 1 279 1 325 1 236 2 282 1 237 1 326 1 240 1 328 1 242 6 34 1 35 1 36 1 91 1 377 2 244 1 378 1 95 2 96 1 293 5 97 4 
65 1 66 1 1 1 248 1 363 1 198 1 79 1 27 1 108 1 237 1 308 3 240 1 34 1 242 2 35 1 91 1 244 1 38 1 96 1 167 1 293 3 97 2 
65 1 66 1 101 1 1 1 44 1 153 1 248 1 363 1 79 1 27 1 108 1 237 1 308 3 240 1 242 1 34 1 35 1 91 1 244 1 38 1 96 1 167 1 293 3 97 3 
65 1 66 1 101 1 1 1 44 1 153 1 248 1 363 1 198 1 79 1 27 1 108 1 237 1 308 3 240 1 34 1 242 2 35 1 91 1 38 1 244 1 96 1 167 1 95 1 293 3 97 3 
294 2 295 1 101 5 1 1 44 4 153 5 248 1 198 4 301 2 10 1 108 3 111 2 265 1 308 5 269 1 167 1 214 1 217 1 65 1 66 1 363 1 79 1 26 1 27 1 325 1 236 2 282 1 237 1 240 1 328 1 34 1 242 7 35 1 91 1 377 2 38 1 244 1 95 4 96 1 40 1 98 1 97 6 293 5 190 1 
294 2 65 1 295 1 66 1 247 2 101 2 152 1 44 2 1 1 153 1 248 1 198 2 363 1 301 2 79 1 26 1 27 1 10 1 325 1 108 2 236 2 282 1 237 1 111 2 265 1 308 4 240 1 328 1 242 4 34 1 35 1 91 1 377 2 244 1 95 2 214 1 167 1 96 1 293 4 97 4 
217 1 294 2 65 1 295 1 66 1 101 1 44 2 1 1 153 1 248 1 198 2 363 1 301 2 79 1 26 1 27 1 325 1 10 1 108 2 236 2 282 1 237 1 111 2 265 1 308 4 240 1 328 1 242 4 269 1 34 1 35 1 91 1 377 2 244 1 95 2 214 1 96 1 167 1 40 1 293 4 97 4 
217 1 294 2 65 1 295 1 66 1 101 1 44 2 1 1 153 1 248 1 198 2 363 1 301 2 79 1 26 1 27 1 325 1 10 1 108 2 236 2 282 1 237 1 111 2 265 1 308 4 240 1 328 1 242 4 269 1 34 1 35 1 91 1 377 2 244 1 95 2 214 1 96 1 167 1 40 1 293 4 97 4 
294 2 65 1 171 2 295 1 66 1 247 2 125 1 101 1 316 2 44 2 1 1 153 1 248 1 198 2 363 1 6 1 79 1 26 1 27 1 10 1 108 2 236 2 282 1 237 1 265 1 308 4 240 1 328 1 348 1 242 4 269 1 34 1 35 1 91 1 244 1 95 2 214 1 96 1 167 1 293 4 97 4 
217 1 294 2 65 1 295 1 66 1 101 1 1 1 44 3 153 1 248 1 363 1 198 3 301 2 79 1 26 1 27 1 325 1 10 1 108 2 236 2 282 1 237 1 111 2 265 1 308 4 240 1 328 1 269 1 34 1 242 5 35 1 91 1 377 2 244 1 214 1 40 1 96 1 167 1 95 3 293 4 97 5 190 1 
217 1 294 2 65 1 295 1 66 1 101 1 1 1 44 3 153 1 248 1 363 1 198 3 301 2 79 1 26 1 27 1 325 1 10 1 108 2 236 2 282 1 237 1 111 2 265 1 308 4 240 1 328 1 269 1 34 1 242 5 35 1 91 1 377 2 244 1 214 1 40 1 96 1 167 1 95 3 293 4 97 5 190 1 
294 2 65 1 171 2 295 1 66 1 247 2 101 1 152 1 316 2 44 2 1 1 153 1 248 1 198 2 363 1 79 1 26 1 27 1 10 1 108 2 236 2 282 1 237 1 265 1 308 4 240 1 328 1 348 1 242 4 34 1 35 1 91 1 244 1 95 2 214 1 167 1 96 1 293 4 97 4 
358 1 103 1 45 2 362 1 197 1 5 3 75 1 232 1 137 1 7 1 182 2 234 1 52 2 54 1 11 1 143 1 371 1 31 2 374 1 89 1 147 1 90 6 356 1 166 3 94 1 168 1 
103 2 69 1 45 2 300 1 154 1 362 1 197 2 5 8 231 2 250 3 75 1 137 2 322 2 7 2 324 1 182 1 185 1 234 2 52 4 54 4 11 11 370 1 31 1 346 1 374 2 330 1 146 1 90 14 118 3 166 6 94 11 332 1 292 1 
219 1 65 1 43 1 315 1 193 1 173 1 103 1 223 1 23 1 196 1 225 1 71 1 300 1 197 1 5 1 75 1 7 1 182 1 365 1 201 1 342 1 234 1 52 2 54 1 283 1 160 1 237 2 346 1 241 1 164 1 374 1 349 1 330 1 60 1 90 2 18 1 96 2 166 1 
43 2 193 2 103 3 195 2 196 3 45 8 300 1 154 4 197 3 5 10 7 3 50 2 342 2 52 6 54 7 11 7 160 3 163 1 346 1 164 1 349 2 60 1 356 1 166 10 168 1 65 1 358 1 172 1 173 1 315 2 359 2 23 2 24 1 225 3 71 1 362 3 231 2 232 1 75 3 137 3 322 2 179 2 324 2 182 2 365 2 234 3 369 2 283 1 237 3 84 1 371 1 31 4 374 3 241 2 330 1 89 1 90 20 96 3 94 7 
65 1 173 1 103 1 45 1 362 1 197 1 231 1 5 1 75 1 137 1 322 1 7 1 341 1 324 1 234 1 52 2 54 1 11 1 283 1 237 1 112 1 31 1 329 1 374 1 330 1 90 3 94 1 96 1 166 2 
234 1 52 2 54 1 11 1 143 1 103 1 45 1 154 1 197 1 5 2 374 1 75 1 137 1 322 1 7 1 90 2 181 1 94 1 
234 1 52 2 54 1 11 1 143 1 103 1 45 1 31 1 362 1 197 1 374 1 75 1 7 1 90 2 324 1 94 1 166 2 63 1 
103 1 45 2 154 1 362 1 197 1 5 2 231 1 137 1 75 1 322 1 7 1 324 1 234 1 52 2 54 2 143 1 11 2 31 1 374 1 90 4 94 2 166 2 
234 1 52 2 54 1 11 1 129 1 103 1 45 1 154 1 197 1 5 2 374 1 75 1 137 1 322 1 7 1 90 2 181 1 94 1 
234 1 52 2 54 1 11 1 129 1 103 1 45 1 31 1 362 1 197 1 374 1 75 1 7 1 90 2 324 1 94 1 166 2 63 1 
129 1 103 1 45 2 154 1 362 1 197 1 5 2 231 1 137 1 75 1 322 1 7 1 324 1 234 1 52 2 54 2 11 2 31 1 374 1 90 4 94 2 166 2 
103 1 45 2 154 1 362 1 197 1 5 2 231 1 137 1 75 1 322 1 7 1 324 1 234 1 52 2 54 2 11 2 31 1 374 1 90 4 94 2 166 2 
43 1 193 1 315 1 103 1 23 1 196 1 225 1 300 1 197 1 5 1 75 1 7 1 179 1 182 1 365 1 342 1 234 1 52 2 160 1 237 1 346 1 241 1 164 1 374 1 349 1 90 2 96 1 166 1 
218 1 43 1 193 1 315 1 103 1 23 1 196 1 225 1 300 1 197 1 5 1 75 1 7 1 182 1 342 1 234 1 52 2 160 1 237 1 372 1 346 1 267 1 164 1 374 1 349 1 90 2 96 1 166 1 
103 1 45 2 154 1 362 1 197 1 5 2 231 1 137 1 75 1 322 1 7 1 324 1 234 1 52 2 54 2 11 2 31 1 374 1 330 1 90 4 94 2 166 2 
43 1 193 1 315 1 359 1 103 1 23 1 45 2 196 1 225 1 154 1 362 1 197 1 5 2 231 1 137 1 75 1 322 1 7 1 179 1 324 1 365 1 342 1 234 1 52 2 54 2 11 2 344 1 160 1 237 1 31 1 241 1 374 1 349 1 90 4 166 2 94 2 96 1 
65 1 173 1 103 1 45 1 154 1 362 1 197 1 231 1 5 2 75 1 137 1 322 1 7 1 324 1 341 1 234 1 52 2 205 1 54 1 283 1 11 1 237 1 112 1 374 1 330 1 90 3 166 1 96 1 94 1 
65 1 172 1 43 2 127 1 173 1 315 3 129 1 103 2 151 2 196 8 225 8 300 1 133 1 47 1 197 2 5 1 75 2 178 1 7 2 323 1 106 1 342 2 234 2 52 4 344 1 143 1 283 1 237 1 160 7 57 1 346 1 164 2 374 2 349 2 60 1 90 2 378 1 96 1 166 1 
122 1 123 1 103 2 45 6 46 1 154 3 362 3 338 2 197 2 5 9 231 3 250 2 136 1 137 3 322 3 7 2 324 3 185 1 52 4 266 2 31 3 374 2 351 1 90 19 289 1 290 1 118 1 189 1 166 10 332 1 
122 2 170 1 123 1 103 3 360 1 45 4 46 1 154 2 362 2 228 1 338 4 197 3 5 14 231 3 250 2 136 1 137 3 322 3 7 3 324 2 185 2 52 6 261 1 266 1 31 2 374 3 16 1 61 1 90 26 289 1 118 2 189 2 166 12 314 2 
170 1 122 2 123 1 358 1 103 3 360 1 45 8 46 1 154 4 228 1 362 5 338 4 197 3 5 20 231 4 250 4 232 1 136 1 137 5 322 4 7 3 324 4 140 1 185 3 52 6 261 1 266 1 371 1 31 4 374 3 89 1 16 1 61 1 351 1 90 41 289 1 118 3 356 1 189 1 166 21 332 1 168 1 314 1 
170 1 122 2 123 1 358 1 103 4 360 1 45 7 46 1 154 3 228 1 362 4 338 4 197 4 5 20 231 4 250 4 232 1 136 1 137 5 322 4 7 4 324 3 140 1 185 3 52 8 261 1 266 1 371 1 31 4 374 4 89 1 16 1 61 1 351 1 90 38 289 1 118 3 356 1 189 1 166 18 332 1 168 1 314 2 
170 1 122 1 123 1 358 1 103 2 360 1 69 2 45 14 46 1 154 7 228 1 362 8 338 4 197 2 5 27 231 7 250 4 232 1 136 1 137 8 322 7 7 2 324 7 185 2 52 4 261 1 266 1 371 1 31 7 374 2 89 1 16 1 61 1 90 52 289 1 118 4 356 1 189 1 166 25 332 2 168 1 314 1 
334 1 14 1 51 1 310 1 343 1 74 1 165 1 276 1 131 1 227 1 
312 1 130 1 
80 1 14 1 364 1 51 1 343 1 74 1 165 1 117 1 276 1 
334 1 51 1 343 1 101 1 174 1 308 1 227 1 14 1 230 1 321 1 310 1 74 1 165 1 303 1 276 1 305 1 92 2 293 1 
334 1 51 1 343 1 101 1 174 1 308 1 227 1 14 1 230 1 321 1 310 1 74 1 165 1 303 1 276 1 305 1 92 2 293 1 
334 1 51 1 343 1 101 1 174 1 308 1 227 1 14 1 230 1 321 1 310 1 74 1 165 1 303 1 276 1 305 1 92 2 293 1 
156 1 53 1 139 1 
156 1 53 1 139 1 
246 1 297 1 
53 1 246 1 297 1 
70 1 306 1 
215 1 65 2 173 2 318 1 70 1 130 1 230 1 74 1 138 1 182 1 305 1 276 1 306 1 9 1 254 1 51 1 343 1 283 2 237 2 308 1 14 1 312 1 165 1 92 1 96 2 293 1 150 1 
156 1 139 1 
53 1 246 1 297 1 
245 1 41 1 65 2 43 1 127 1 315 1 103 1 151 2 196 2 225 2 300 1 197 1 5 1 134 1 75 1 7 1 323 1 342 1 234 1 52 2 237 2 160 2 161 1 346 1 374 1 349 1 330 1 313 1 90 2 96 2 166 1 
229 1 164 1 349 1 335 1 43 1 315 1 160 1 208 1 277 1 196 1 225 1 378 1 47 1 342 1 
43 1 172 1 344 1 160 2 208 1 225 2 196 2 12 1 176 1 286 1 309 1 373 1 88 1 275 1 277 1 331 1 291 1 333 2 342 1 
256 1 172 1 43 1 160 1 208 1 225 1 196 1 12 1 176 1 286 1 309 1 373 1 88 1 331 1 291 1 333 2 342 1 
43 1 172 1 160 1 208 1 225 1 196 1 12 1 176 1 286 1 309 1 373 1 88 1 275 1 277 1 331 1 291 1 333 2 342 1 
28 1 
10 1 295 1 101 1 282 1 265 1 153 1 287 1 340 1 214 1 26 1 
295 5 247 10 101 5 284 5 111 5 362 2 231 2 25 1 137 2 322 2 50 1 324 2 357 5 214 5 121 2 
295 1 340 1 101 1 147 1 153 1 214 1 287 1 
10 1 325 1 108 1 295 1 247 1 101 2 282 1 111 1 153 1 265 1 308 1 301 1 242 1 377 1 214 1 26 1 293 1 
10 1 43 2 315 1 193 1 282 1 55 1 160 1 265 1 225 1 196 1 3 1 164 1 349 1 105 1 180 1 342 1 26 1 
170 1 295 5 247 6 101 5 360 1 153 2 226 1 228 1 362 2 231 2 250 1 25 1 137 2 322 2 324 2 185 1 26 2 10 2 108 1 261 1 282 2 284 5 111 3 265 2 308 1 162 1 87 1 242 1 61 1 36 1 118 1 357 5 214 8 293 1 121 2 
65 1 295 2 173 1 1 1 132 1 362 1 339 1 25 1 232 1 137 2 49 1 341 1 252 1 26 1 10 1 282 1 283 1 237 1 265 1 308 1 356 1 148 1 96 1 40 1 214 2 168 1 121 2 293 1 
65 2 43 1 173 2 193 1 315 1 103 1 22 1 23 1 196 1 225 1 300 1 132 1 197 1 75 1 7 1 179 1 341 2 182 1 365 1 342 1 234 1 52 2 283 2 160 1 237 3 374 1 164 1 241 1 349 1 90 1 166 1 96 3 
10 1 295 2 358 1 247 4 101 4 282 1 284 2 111 2 265 1 153 2 162 1 36 1 357 2 214 1 26 1 
108 1 101 1 242 1 153 1 308 1 293 1 
295 2 43 1 315 1 196 4 225 4 299 1 47 1 342 1 26 2 10 2 108 2 204 1 282 1 160 4 262 1 326 1 265 2 308 3 162 2 164 2 349 1 242 4 116 2 36 2 378 1 39 1 272 1 214 2 293 3 
51 1 311 1 276 1 
51 1 311 1 276 1 
51 1 310 1 276 1 239 1 306 1 
51 1 311 1 276 1 
51 1 21 1 276 1 
51 1 21 1 276 1 
51 1 21 1 276 1 
51 1 276 1 
343 1 165 1 
52 2 103 1 45 1 46 1 154 1 197 1 5 2 374 1 137 1 322 1 7 1 90 2 
52 2 103 1 45 2 46 1 154 1 31 1 362 1 197 1 231 1 5 2 374 1 137 1 322 1 7 1 90 4 324 1 166 2 
52 6 103 3 45 2 46 1 337 1 154 1 31 1 197 3 5 1 374 3 232 1 351 1 7 3 90 3 356 1 166 2 314 1 
358 1 103 5 45 12 296 1 46 1 337 1 154 5 362 5 197 5 5 16 231 3 250 4 232 3 137 5 322 3 7 5 324 3 304 1 185 1 52 10 371 1 31 7 374 5 288 1 89 1 351 1 90 34 118 3 356 3 166 18 332 1 168 2 314 2 379 1 
52 2 103 1 45 5 46 1 154 2 31 3 362 2 197 1 5 5 374 1 339 1 232 2 137 2 7 1 90 10 356 2 166 5 168 1 
358 1 103 1 45 2 46 1 362 1 197 1 5 4 250 1 137 1 232 1 7 1 185 1 52 2 371 1 31 2 374 1 89 1 61 1 90 8 118 1 356 1 166 4 168 1 
358 1 103 2 45 3 46 1 154 1 362 1 197 2 5 6 231 1 250 2 232 1 137 2 322 1 7 2 304 1 185 1 52 4 371 1 31 2 374 2 89 1 61 1 90 11 118 1 356 1 166 5 332 1 168 1 
170 1 358 1 103 3 360 1 45 4 46 1 154 1 228 1 362 3 197 3 5 9 231 2 250 1 232 1 137 3 322 2 7 3 324 2 304 1 185 1 52 6 261 1 371 1 31 3 374 3 89 1 61 1 90 19 118 1 356 1 166 10 168 1 314 1 
170 1 358 1 103 3 360 1 45 5 46 1 154 2 228 1 362 2 197 3 5 10 231 2 250 1 232 1 137 3 322 2 7 3 324 1 304 1 185 1 52 6 261 1 371 1 31 3 374 3 89 1 61 1 90 17 118 1 356 1 166 7 168 1 314 1 
358 1 103 1 45 2 46 1 362 1 197 1 5 4 250 1 137 1 232 1 7 1 185 1 52 2 371 1 31 2 374 1 89 1 61 1 90 8 118 1 356 1 166 4 168 1 
170 1 103 1 360 1 45 2 46 1 154 1 228 1 362 2 197 1 5 6 231 2 250 1 137 2 322 2 7 1 324 2 185 1 52 2 261 1 31 1 374 1 61 1 90 12 118 1 166 6 
170 1 358 1 103 4 360 1 45 5 46 1 154 2 228 1 362 2 197 4 5 10 231 2 250 1 232 1 137 3 322 2 7 4 324 1 304 1 185 1 52 8 261 1 371 1 31 3 374 4 89 1 61 1 90 18 118 1 356 1 166 8 168 1 314 2 
170 1 103 4 360 1 45 6 46 1 154 3 228 1 362 2 197 4 5 9 231 3 250 1 137 3 322 3 7 4 324 2 185 1 52 8 261 1 31 3 374 4 61 1 351 1 90 16 118 1 166 7 314 2 
45 6 371 2 154 3 362 1 31 3 5 3 232 3 137 1 89 1 90 7 356 3 166 4 168 1 
170 1 358 1 103 4 360 1 45 4 46 1 154 1 228 1 362 2 197 4 5 10 231 2 250 1 232 1 137 3 322 2 7 4 324 1 185 1 52 8 261 1 371 1 31 3 374 4 89 1 61 1 351 1 90 18 118 1 356 1 166 8 168 1 314 2 
52 4 358 1 103 2 45 3 371 1 154 1 362 1 31 2 197 2 5 4 374 2 137 1 232 1 89 1 7 2 90 8 356 1 166 4 168 1 314 1 
358 1 45 2 371 1 31 2 362 1 5 3 232 1 137 1 89 1 147 1 90 6 356 1 166 3 168 1 
52 2 103 1 45 2 154 1 31 1 362 1 197 1 231 1 5 2 374 1 137 1 322 1 7 1 90 4 324 1 304 1 166 2 
45 2 154 1 31 1 362 1 5 3 231 1 250 2 137 1 322 1 90 7 324 1 118 1 185 1 166 4 332 1 
358 1 103 2 69 1 45 9 154 4 337 1 362 3 197 2 231 2 5 11 250 2 232 2 137 3 322 2 7 2 324 2 52 4 371 1 31 5 374 2 89 1 90 23 118 2 356 2 332 1 166 12 168 1 314 2 292 1 
250 1 90 1 166 1 
5 1 90 1 118 1 
52 2 103 1 45 3 154 1 362 1 31 2 197 1 231 1 5 3 374 1 137 1 322 1 7 1 50 1 90 6 324 1 304 1 166 3 
170 1 103 1 360 1 45 2 46 1 154 1 228 1 362 2 197 1 5 6 231 2 250 1 137 2 322 2 7 1 324 2 185 1 52 2 261 1 31 1 374 1 61 1 90 12 118 1 166 6 
45 2 154 1 362 1 31 1 5 3 137 1 232 1 90 6 356 1 166 3 168 1 
52 2 103 1 45 2 371 1 154 1 337 1 31 1 197 1 5 1 374 1 232 1 89 1 7 1 90 3 356 1 166 2 314 1 
142 1 65 1 237 1 352 1 182 1 96 1 363 1 
142 1 258 1 65 1 56 1 237 1 30 1 363 1 352 1 182 1 353 1 253 1 96 1 
43 1 344 1 315 1 160 4 361 1 225 4 196 4 47 1 249 1 164 1 349 1 378 1 342 1 
164 1 43 1 160 1 331 1 196 1 225 1 12 1 309 1 333 1 342 1 
41 1 172 1 43 1 344 1 315 1 160 2 225 2 196 2 349 1 323 1 342 1 
43 2 273 1 193 1 315 1 160 2 238 1 175 1 225 2 196 2 163 1 209 1 349 1 116 1 342 1 
164 1 349 1 43 1 147 1 315 1 160 1 196 1 225 1 378 1 47 1 342 1 
65 1 43 1 315 1 193 1 283 1 173 1 237 2 160 1 23 1 225 1 196 1 164 1 349 1 60 1 182 1 365 1 96 2 342 1 
192 1 65 2 66 1 43 1 173 2 193 2 315 3 23 1 1 1 196 1 225 1 182 1 365 1 366 1 342 1 283 1 160 1 237 2 349 2 60 1 34 1 116 1 96 2 
192 1 65 2 66 1 43 1 173 2 193 2 315 3 23 1 1 1 361 1 196 2 225 2 182 1 366 1 342 1 283 1 160 2 237 2 372 1 349 2 60 1 34 1 116 1 96 2 
192 1 43 1 101 1 315 4 193 1 361 1 196 3 225 3 153 1 155 1 200 1 366 1 79 1 342 1 55 1 160 3 308 2 164 1 349 1 375 1 242 1 116 1 293 2 
192 1 101 1 43 1 193 1 315 4 160 3 55 1 361 1 153 1 225 3 196 3 308 2 2 1 155 1 164 1 349 1 242 1 116 1 366 1 79 1 342 1 293 2 
43 1 160 1 196 1 225 1 342 1 57 1 
172 1 43 3 344 1 193 1 315 3 151 1 160 6 175 1 225 7 196 7 133 1 57 1 209 1 164 2 349 2 178 1 323 1 180 1 106 1 93 1 342 2 
43 1 193 1 103 2 196 1 45 2 197 2 5 3 7 2 342 1 52 4 54 1 344 1 11 1 160 1 349 1 60 1 356 1 166 3 168 1 65 1 358 1 173 1 315 1 359 1 23 1 225 1 362 1 134 1 75 2 232 1 137 1 179 1 365 1 182 2 234 2 369 1 283 1 237 2 371 1 31 2 241 1 374 2 330 1 89 1 90 6 96 2 94 1 
295 1 101 1 315 2 153 1 225 1 196 1 2 1 155 1 340 1 278 1 79 1 26 2 10 2 108 1 282 2 160 1 55 1 265 2 308 3 287 1 164 1 210 1 242 2 243 1 214 1 272 1 293 3 150 1 
222 1 43 2 193 1 315 1 160 1 225 1 196 1 3 1 155 1 57 1 349 1 180 1 342 1 
43 2 344 1 315 3 160 4 225 5 196 5 47 1 133 1 249 1 164 1 349 2 178 1 116 1 323 1 378 1 342 2 
43 2 344 1 315 3 160 4 225 5 196 5 47 1 249 1 164 1 59 1 349 2 178 1 116 1 323 1 378 1 342 2 
65 1 43 1 315 1 193 1 283 1 173 1 237 2 160 1 23 1 225 1 196 1 372 1 164 1 349 1 60 1 182 1 96 2 342 1 
43 2 193 1 315 1 160 1 175 1 225 1 196 1 209 1 349 1 116 1 180 1 93 1 342 1 
245 1 65 1 313 1 237 1 194 1 161 1 96 1 149 1 85 1 
81 1 285 1 149 1 
281 1 194 1 182 1 85 1 149 1 
81 1 66 1 0 1 101 1 281 2 206 1 194 2 1 1 153 1 308 2 285 1 85 2 34 1 182 1 91 1 79 1 149 1 150 1 293 2 
257 1 159 1 42 1 251 1 336 1 271 1 177 1 120 1 
257 1 124 1 159 4 126 1 42 3 336 2 177 2 199 1 376 1 17 1 158 2 355 1 271 1 120 4 
257 1 159 2 42 1 336 1 207 1 298 1 177 1 347 1 251 1 158 1 271 1 120 2 
367 1 257 1 159 3 124 2 42 1 336 1 177 1 376 1 251 1 17 2 271 1 120 3 
73 2 82 1 42 2 233 1 
257 1 235 1 159 1 251 1 271 1 120 1 
257 1 159 2 42 1 251 1 336 1 224 1 158 1 271 1 177 1 120 2 
221 1 
42 1 147 1 336 1 177 1 
257 1 159 1 42 1 336 1 271 1 177 1 120 1 
72 1 4 1 120 1 
257 1 159 3 124 1 42 1 336 1 177 1 104 1 251 1 376 1 17 2 271 1 120 3 
255 1 257 1 159 2 42 1 336 1 158 1 271 1 177 1 120 2 
257 1 159 1 126 1 42 1 68 1 309 1 251 1 271 1 120 1 291 1 333 1 
257 1 159 1 42 1 251 1 271 1 177 1 120 1 
257 1 159 1 251 1 336 1 271 1 177 2 120 1 
257 2 159 2 42 1 177 1 86 1 15 1 251 1 271 2 120 2 64 1 
257 1 159 3 126 1 42 2 336 1 224 1 186 1 177 1 251 1 158 2 355 1 271 1 120 3 
257 1 159 2 42 1 336 1 12 1 177 1 309 1 88 1 251 1 158 1 271 1 184 1 333 2 120 2 291 1 
255 1 257 2 159 4 126 1 42 2 336 1 177 1 135 1 251 1 158 2 355 1 271 2 120 4 
257 1 159 1 42 1 251 1 336 1 271 1 177 1 120 1 
257 1 159 3 42 1 251 1 336 1 17 1 224 1 158 1 271 1 177 1 120 3 
199 1 126 1 42 1 355 1 
42 1 177 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (218,307) 259 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (218,307) (218,307) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (218,307) (218,307) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 1 47 1 139 2 266 1 327 1 107 1 204 3 187 3 84 1 369 2 46 1 152 1 87 2 
47 1 303 1 244 1 358 1 266 2 139 2 245 1 1 1 327 1 24 2 204 9 117 1 274 1 29 2 58 1 82 2 84 1 369 2 152 1 87 5 62 3 107 6 235 1 187 9 234 1 351 1 301 2 46 4 
47 1 303 1 244 1 358 1 266 2 139 2 245 1 1 1 327 1 24 2 204 9 117 1 274 1 29 2 58 1 82 2 84 1 369 2 152 1 87 5 62 3 107 6 235 1 187 9 234 1 351 1 301 2 46 4 
47 1 303 1 244 1 358 1 266 2 139 2 245 1 1 1 327 1 24 2 204 10 117 1 274 1 29 2 58 1 82 2 84 1 369 2 152 1 87 6 62 4 107 7 235 1 187 10 234 1 351 1 301 2 46 5 
47 1 303 1 244 1 358 1 266 2 139 2 245 1 327 1 24 2 204 7 117 1 274 1 29 2 58 1 82 1 84 1 369 2 152 1 87 4 62 2 107 4 235 1 187 7 234 1 351 1 301 2 46 3 
62 1 47 1 139 1 358 1 1 1 327 1 24 1 107 3 204 4 187 4 274 1 29 1 82 2 301 1 84 1 369 1 46 2 87 3 
47 1 244 1 139 1 372 1 266 1 327 1 24 1 204 2 118 1 234 1 187 2 29 1 84 1 369 1 71 1 87 1 
242 1 62 3 47 1 358 1 139 2 266 1 1 1 327 1 24 1 107 7 117 1 204 9 25 1 187 9 274 1 29 1 351 1 82 2 301 1 84 1 369 2 46 4 87 5 152 1 
242 1 62 3 47 1 358 1 139 2 266 1 1 1 327 1 24 1 107 7 117 1 204 9 25 1 187 9 274 1 29 1 351 1 82 2 301 1 84 1 369 2 46 4 87 5 152 1 
316 1 338 1 370 1 95 1 295 1 225 1 297 1 288 1 379 1 349 1 14 1 324 1 262 1 196 1 
189 1 
189 1 95 1 192 1 295 2 50 1 297 2 257 1 251 1 
95 2 63 2 294 1 295 5 254 2 142 1 297 5 257 2 189 1 188 1 192 1 103 1 31 1 336 1 337 1 219 2 275 1 251 1 180 1 
189 1 158 1 192 1 
189 1 136 2 122 1 
283 1 338 2 316 2 379 1 225 2 14 2 288 2 196 2 
283 1 22 1 21 1 164 2 113 1 225 2 328 1 141 1 79 1 269 1 101 1 288 2 120 1 208 1 368 2 123 1 338 3 316 2 88 1 341 1 342 1 376 1 214 1 38 2 185 2 378 1 256 1 216 1 379 1 217 1 160 2 350 1 14 3 261 1 162 1 239 1 196 2 
338 1 316 1 370 1 379 1 225 1 14 1 324 1 288 1 196 1 262 1 
338 1 295 1 297 1 288 1 346 1 189 1 192 1 14 1 15 1 91 1 323 1 238 1 324 1 210 1 
316 1 338 1 225 1 295 2 297 2 288 1 346 1 189 1 192 1 14 1 91 1 238 1 324 1 210 1 196 1 
277 1 95 1 295 1 297 1 257 1 
189 1 95 1 192 1 295 2 297 2 155 1 257 1 251 1 
295 1 297 1 257 1 
338 2 316 1 283 2 225 1 288 2 186 1 14 2 94 1 196 1 
167 1 377 1 270 1 
283 1 338 1 211 1 164 1 113 1 328 1 141 1 376 1 214 1 38 1 378 1 256 1 14 1 162 1 368 1 123 1 
316 1 338 2 164 1 113 1 328 1 141 1 214 1 376 1 167 1 38 1 378 1 256 1 288 1 14 2 250 1 92 1 162 1 368 1 123 1 196 1 
283 1 158 1 
322 1 283 1 338 5 316 4 265 1 77 1 225 1 14 5 250 1 15 1 92 2 288 5 94 1 196 4 
338 2 316 2 370 1 89 1 14 2 324 1 288 2 196 2 
283 1 338 3 316 3 225 1 14 3 92 1 288 3 196 3 
338 1 316 1 370 1 14 1 324 1 288 1 196 1 
338 1 316 1 225 1 14 1 324 1 288 1 186 1 196 1 94 1 
283 1 22 1 21 1 164 1 113 1 328 1 225 2 141 1 79 1 269 1 288 3 120 1 250 1 208 1 368 1 123 1 210 1 151 1 338 4 316 3 295 1 341 1 214 1 376 1 297 1 38 1 185 1 378 1 256 1 346 1 216 1 379 1 217 1 160 2 350 1 14 4 16 1 91 1 92 1 162 1 238 1 324 1 94 1 196 3 
283 1 338 2 316 1 265 1 14 2 15 1 92 1 288 2 196 1 
316 3 338 3 233 1 225 1 295 1 297 1 288 3 346 1 189 1 14 3 250 1 91 1 92 2 238 1 324 1 210 1 94 1 196 3 151 1 
316 2 338 2 225 1 167 1 270 1 288 2 14 2 92 1 94 1 196 2 
283 1 338 1 164 1 113 1 328 1 141 1 376 1 214 1 38 1 378 1 256 1 14 1 162 1 368 1 123 1 
283 1 338 1 164 1 113 1 328 1 141 1 375 1 214 1 38 1 256 1 14 1 289 1 162 1 368 1 123 1 
22 1 79 1 167 2 269 1 144 1 270 2 120 1 7 1 83 1 208 1 314 1 209 1 88 2 317 1 341 1 185 4 377 2 280 1 160 2 350 2 69 1 90 1 353 1 132 1 
338 1 316 1 14 1 89 1 238 1 324 1 288 1 196 1 
222 1 357 1 53 1 
357 2 374 1 53 2 5 1 57 1 329 1 
357 1 53 1 
357 1 53 1 
374 1 329 1 
374 1 329 1 
374 1 329 1 
357 1 319 1 53 1 
357 1 319 1 53 1 
357 1 319 1 53 1 
357 1 53 1 18 1 
357 1 53 1 18 1 
357 1 53 1 18 1 
283 1 263 1 355 1 222 1 243 1 357 1 140 1 53 1 288 2 330 1 121 1 231 1 290 1 313 1 316 2 338 2 295 1 297 1 66 1 43 1 14 2 352 1 17 1 196 2 
20 1 76 1 357 2 243 2 295 2 166 1 143 1 297 2 51 2 2 1 344 1 53 2 5 1 66 3 189 1 121 2 352 1 313 2 290 2 
29 2 372 1 65 1 301 1 271 2 
29 1 24 1 301 1 
29 1 372 1 24 1 
29 3 372 1 65 1 301 2 271 1 80 1 
153 1 29 2 372 1 65 1 301 1 271 1 
136 3 95 4 355 1 224 1 23 1 140 1 201 1 170 2 174 1 103 1 207 1 149 2 83 1 122 1 336 2 209 1 251 1 63 1 212 2 317 1 254 1 295 5 294 3 297 5 257 1 189 2 192 1 13 1 17 1 353 1 219 1 72 1 
136 9 355 4 95 7 96 1 224 1 23 2 201 2 142 1 170 6 273 5 173 1 103 1 83 3 122 3 336 6 209 3 251 1 277 5 63 2 212 6 317 3 340 1 295 9 254 2 294 8 255 1 297 9 108 1 257 6 320 1 189 5 192 1 353 3 219 2 72 3 
136 4 95 2 355 1 23 1 201 1 142 1 170 2 174 1 149 1 83 1 122 2 336 2 209 1 63 1 212 2 317 1 254 1 295 3 294 3 297 3 189 3 192 1 13 1 353 1 219 1 72 1 
136 7 355 2 95 3 96 1 23 1 201 1 142 1 170 4 173 1 174 1 149 2 83 2 122 3 336 4 209 2 63 1 212 4 317 2 254 1 295 4 294 5 255 1 297 4 189 4 192 1 13 1 353 2 219 1 72 2 
45 1 
158 1 223 1 141 1 
380 1 141 1 
141 1 162 1 123 1 
141 1 321 1 
141 1 162 1 
223 2 141 3 268 1 162 1 240 1 123 1 
64 1 373 2 88 4 318 1 185 7 345 1 146 1 308 1 147 1 81 1 7 3 350 3 59 1 353 1 365 1 132 2 34 1 209 1 
282 4 22 1 226 1 79 1 269 1 145 1 146 1 308 2 147 2 81 1 119 1 309 1 7 10 331 3 59 1 83 3 34 2 365 5 209 4 86 1 88 16 373 3 317 3 318 2 296 1 341 1 185 31 345 1 159 1 160 2 350 15 353 4 132 5 72 3 
22 2 373 2 88 5 128 1 318 1 226 1 341 2 79 2 185 9 269 2 146 1 308 1 147 1 81 1 7 4 160 4 59 1 350 4 353 1 365 1 132 3 34 1 209 1 292 1 
373 2 88 4 318 1 185 7 345 1 146 1 308 1 147 1 81 1 7 3 350 3 59 1 353 1 365 1 132 2 34 1 209 1 
373 2 88 4 318 1 185 7 345 1 146 1 308 1 147 1 81 1 7 3 350 3 59 1 353 1 365 1 132 2 34 1 209 1 
197 1 112 1 164 1 113 1 139 1 266 2 328 1 141 1 285 2 116 1 54 1 204 1 27 2 205 1 61 1 368 1 369 1 339 1 38 1 256 1 187 1 44 2 162 1 
164 1 356 1 139 1 266 1 327 1 328 1 24 1 97 1 285 1 169 1 204 1 80 1 27 1 29 2 368 1 369 1 181 1 372 1 36 1 38 1 256 1 109 1 187 1 347 1 44 1 301 1 
47 1 164 1 356 1 139 1 266 1 327 1 328 1 24 1 97 1 285 1 169 1 204 2 80 1 27 1 29 2 84 1 368 1 369 1 87 1 372 1 36 1 38 1 107 1 256 1 109 1 187 2 347 1 44 1 301 1 281 1 
47 1 164 1 356 1 139 1 266 1 328 1 24 1 97 1 285 1 169 1 204 3 80 1 27 1 29 2 84 1 61 1 368 1 369 1 291 1 87 1 181 1 372 1 36 1 38 1 107 2 256 1 187 3 347 1 44 1 301 1 
181 1 47 1 164 1 372 1 266 1 36 1 328 1 24 1 38 1 169 1 285 1 107 2 256 1 204 2 80 1 187 2 27 1 29 2 347 1 44 1 301 1 84 1 368 1 291 1 87 1 
198 1 
135 4 138 1 137 2 136 2 328 1 201 1 141 1 49 1 99 2 247 1 202 1 55 1 54 1 288 1 100 1 103 1 148 2 206 1 336 2 104 1 9 1 210 1 251 3 338 1 63 1 339 1 294 2 295 5 254 1 297 5 154 1 256 1 257 6 346 1 258 2 300 2 14 1 15 1 162 1 219 1 164 2 113 2 363 1 122 2 315 2 368 2 38 2 40 1 41 2 189 2 192 1 91 1 323 1 238 1 324 1 
135 2 137 1 49 1 50 1 247 1 288 1 363 1 210 1 251 1 338 1 295 3 297 3 154 1 257 2 40 1 346 1 14 1 15 1 91 1 323 1 238 1 324 1 
135 3 338 1 295 3 49 1 50 1 297 3 247 1 154 1 288 1 257 1 40 1 346 1 189 1 363 1 192 1 300 1 14 1 91 1 15 1 238 1 323 1 324 1 210 1 251 1 
135 3 137 1 49 1 50 1 247 1 288 1 363 1 210 1 251 1 338 1 295 3 297 3 154 1 257 2 40 1 346 1 189 1 258 1 192 1 14 1 300 1 15 1 91 1 323 1 238 1 324 1 
135 6 137 4 49 1 50 1 247 1 99 2 288 1 100 1 55 1 103 1 148 2 336 1 210 1 251 3 338 1 253 1 63 1 295 5 254 1 294 1 297 5 154 1 257 7 346 1 258 4 14 1 300 4 15 1 219 1 361 1 363 1 310 1 122 2 315 2 40 1 41 2 189 5 192 5 91 1 238 1 323 1 131 1 324 1 241 1 
135 4 136 2 137 2 138 1 49 1 247 1 99 2 100 1 288 1 55 1 103 1 148 2 336 1 210 1 251 2 338 1 63 1 295 4 254 1 294 1 297 4 154 1 257 4 346 1 258 2 14 1 300 2 15 1 219 1 363 1 122 2 315 2 40 1 41 2 189 2 192 1 91 1 238 1 323 1 324 1 
135 4 137 2 49 1 99 2 247 1 55 1 100 1 288 1 363 1 103 1 148 2 310 1 122 2 336 1 315 2 210 1 251 2 338 1 63 1 294 1 295 4 254 1 297 4 154 1 257 4 40 1 41 2 346 1 189 1 258 2 192 1 300 2 14 1 15 1 91 1 323 1 238 1 131 1 219 1 324 1 241 1 
135 4 137 2 49 1 99 2 247 1 55 1 100 1 288 1 363 1 103 1 148 2 310 1 122 2 336 1 315 2 210 1 251 2 338 1 63 1 294 1 295 4 254 1 297 4 154 1 257 4 40 1 41 2 346 1 189 1 258 2 192 1 300 2 14 1 15 1 91 1 323 1 238 1 131 1 219 1 324 1 241 1 
135 4 137 2 136 2 49 1 247 1 55 1 288 1 363 1 172 1 103 1 32 1 312 2 336 1 315 2 210 1 251 2 338 1 63 1 294 1 295 4 254 1 297 4 154 1 257 4 156 1 40 1 41 2 346 1 189 1 258 2 192 1 110 2 300 2 14 1 15 1 91 1 323 1 238 1 219 1 324 1 241 1 
135 5 137 3 49 1 99 2 247 1 55 1 100 1 288 1 363 1 103 1 148 2 310 1 122 2 336 1 315 2 210 1 251 2 338 1 253 1 63 1 294 1 254 1 295 4 297 4 154 1 257 5 40 1 41 2 346 1 189 1 258 3 192 1 14 1 300 3 15 1 91 1 131 1 323 1 238 1 219 1 324 1 241 1 
135 5 137 3 49 1 99 2 247 1 55 1 100 1 288 1 363 1 103 1 148 2 310 1 122 2 336 1 315 2 210 1 251 2 338 1 253 1 63 1 294 1 254 1 295 4 297 4 154 1 257 5 40 1 41 2 346 1 189 1 258 3 192 1 14 1 300 3 15 1 91 1 131 1 323 1 238 1 219 1 324 1 241 1 
135 4 136 2 137 2 138 1 49 1 247 1 288 1 55 1 103 1 336 1 210 1 251 2 338 1 63 1 295 4 254 1 294 1 297 4 154 1 257 4 156 1 346 1 258 2 110 2 14 1 300 2 15 1 219 1 363 1 312 2 315 2 40 1 41 2 189 1 192 1 91 1 238 1 323 1 324 1 
22 2 164 8 200 1 113 2 328 2 141 3 79 2 269 2 272 1 3 1 144 1 288 1 101 1 54 1 120 2 208 2 177 1 368 7 181 1 338 1 316 1 105 1 278 1 339 1 88 1 341 2 38 8 185 2 256 2 68 1 216 1 160 4 14 1 350 1 92 1 239 2 162 2 281 1 196 1 
22 1 225 1 167 1 79 1 248 1 269 1 270 1 288 1 7 1 120 1 208 1 83 1 209 1 316 1 338 1 317 1 88 1 341 1 377 1 185 3 160 2 14 1 350 2 353 1 132 1 72 1 73 1 196 1 94 1 
283 2 22 1 167 1 79 1 269 1 270 1 144 1 147 1 308 1 146 1 81 1 120 1 7 2 59 1 208 1 209 1 88 3 373 1 341 1 185 6 377 1 158 1 160 2 350 3 353 1 132 2 
283 1 282 3 22 2 79 2 167 11 269 2 101 1 270 4 309 1 7 2 120 2 331 3 33 1 60 1 208 1 83 1 365 1 209 1 88 8 317 2 296 1 279 1 341 2 185 14 377 11 216 1 160 4 350 6 193 1 353 2 132 1 72 2 73 1 
283 1 22 1 164 1 113 1 328 1 267 1 141 1 79 1 269 1 270 1 288 1 101 1 120 1 250 1 208 1 368 1 123 1 211 1 338 2 316 1 88 1 341 1 214 1 376 1 38 1 378 1 39 1 185 2 256 1 216 1 237 1 160 2 14 2 350 1 92 1 162 1 73 1 196 1 
283 2 48 2 328 2 141 2 101 1 288 1 146 1 147 1 7 8 59 1 250 1 208 3 209 3 338 3 341 3 214 2 256 2 216 1 217 2 160 6 350 10 14 3 353 3 162 2 111 2 72 2 73 1 19 1 22 3 164 3 113 1 79 3 167 7 269 3 270 7 308 1 81 1 120 3 83 2 365 4 176 1 368 3 85 2 123 2 181 1 316 1 184 2 373 1 317 2 88 10 376 2 38 3 185 20 378 2 377 7 42 1 92 1 132 4 196 1 
22 1 317 1 88 2 341 1 167 1 79 1 377 1 185 2 269 1 270 1 144 1 7 1 120 1 160 2 208 1 353 1 365 1 314 1 
22 1 341 1 167 1 79 1 377 1 185 2 269 1 270 1 144 1 7 1 120 1 160 2 350 2 69 1 208 1 83 1 132 1 209 1 
22 1 79 1 167 2 269 1 144 1 270 2 120 1 7 2 208 1 83 1 365 1 209 1 88 2 317 1 341 1 185 4 377 2 160 2 350 2 353 1 132 1 72 1 
22 1 278 1 317 1 88 2 341 1 167 1 79 1 377 1 185 2 269 1 270 1 7 1 120 1 160 2 208 1 353 1 365 1 314 1 
22 1 278 1 341 1 167 1 79 1 377 1 185 2 269 1 270 1 7 1 120 1 160 2 350 2 69 1 208 1 83 1 132 1 209 1 
22 1 79 1 167 2 269 1 270 2 120 1 7 2 208 1 83 1 365 1 209 1 278 1 88 2 317 1 341 1 185 4 377 2 160 2 350 2 353 1 132 1 72 1 
22 1 79 1 167 2 269 1 270 2 120 1 7 2 208 1 83 1 365 1 209 1 88 2 317 1 341 1 185 4 377 2 160 2 350 2 353 1 132 1 72 1 
283 1 22 1 164 1 113 1 328 1 141 1 79 1 269 1 101 1 120 1 208 1 368 1 123 1 338 1 88 1 341 1 214 1 376 1 38 1 185 2 378 1 256 1 216 1 217 1 160 2 14 1 350 1 162 1 
283 1 22 1 164 1 113 1 328 1 141 1 79 1 269 1 101 1 120 1 289 1 332 1 208 1 368 1 123 1 338 1 88 1 341 1 214 1 375 1 38 1 185 2 256 1 216 1 160 2 14 1 350 1 162 1 
22 1 79 1 167 2 269 1 270 2 120 1 7 2 208 1 83 1 365 1 209 1 88 2 317 1 341 1 185 4 377 2 160 2 350 2 353 1 132 1 72 1 73 1 
22 1 164 1 328 1 141 1 167 2 79 1 269 1 270 2 7 2 120 1 83 1 208 1 365 1 209 1 368 1 123 1 85 1 338 1 88 2 317 1 341 1 214 1 376 1 38 1 377 2 185 4 378 1 256 1 217 1 160 2 350 2 14 1 353 1 132 1 162 1 72 1 281 1 
22 1 225 1 79 1 167 1 269 1 288 1 270 1 7 1 120 1 311 1 83 1 208 1 365 1 209 1 316 1 338 1 317 1 88 2 341 1 185 3 377 1 160 2 350 1 14 1 353 1 72 1 73 1 196 1 94 1 
282 2 22 2 360 1 79 2 228 1 227 1 269 2 6 1 309 1 7 6 331 1 83 3 365 3 178 1 209 3 292 1 88 9 317 3 129 1 296 1 341 2 185 19 12 2 130 2 160 4 350 10 70 1 353 3 132 3 72 3 
282 2 22 3 360 1 362 1 226 2 79 3 269 3 6 2 7 4 331 2 83 2 365 2 366 1 209 2 178 1 292 1 293 1 88 14 317 3 129 2 296 2 341 3 10 1 185 26 12 4 236 1 130 1 190 1 160 6 350 12 70 1 353 3 132 2 72 3 
282 4 22 3 360 1 362 1 226 1 79 3 227 1 269 3 171 1 6 2 146 1 308 1 147 1 81 1 309 1 7 8 331 3 59 1 83 4 365 4 366 1 178 1 209 5 292 1 293 1 373 1 88 20 317 4 129 1 296 3 10 1 341 3 185 41 12 4 236 1 130 1 190 1 160 6 350 21 70 1 353 5 132 4 72 4 
282 4 22 4 360 1 362 1 226 2 79 4 227 1 269 4 171 1 6 2 146 1 308 1 147 1 81 1 309 1 7 7 331 3 59 1 83 3 365 3 366 1 178 1 209 4 292 1 293 1 373 1 88 20 317 4 129 1 296 3 10 1 341 4 185 38 12 4 236 1 130 1 190 1 160 8 350 18 70 1 353 5 132 4 72 4 
282 4 22 2 360 1 226 1 362 1 79 2 269 2 6 1 146 1 308 1 147 1 81 1 309 2 7 14 331 4 59 1 83 7 365 7 366 1 178 1 209 8 292 1 293 1 373 1 88 27 317 7 129 1 296 2 10 1 341 2 185 52 12 4 236 1 130 1 190 1 160 4 350 25 70 1 193 2 353 8 132 7 72 7 
76 1 243 1 357 1 230 1 121 1 143 1 290 1 313 1 53 1 5 1 
222 1 330 1 
75 1 11 1 243 1 357 1 121 1 194 1 290 1 313 1 53 1 
343 1 319 1 
30 1 18 1 57 1 
76 1 357 1 243 1 295 1 166 1 143 1 297 1 51 1 2 1 344 1 53 1 5 1 66 2 189 1 352 1 121 1 313 1 290 1 
76 1 357 1 243 1 295 1 166 1 143 1 297 1 51 1 2 1 344 1 53 1 5 1 66 2 189 1 352 1 121 1 313 1 290 1 
76 1 357 1 243 1 295 1 166 1 143 1 297 1 51 1 2 1 344 1 53 1 5 1 66 2 189 1 352 1 121 1 313 1 290 1 
343 1 319 1 57 1 
343 1 319 1 57 1 
30 1 18 1 
30 1 18 1 57 1 
263 1 43 1 
283 1 263 1 95 1 355 1 222 1 243 1 357 1 140 1 51 1 2 1 53 1 288 2 330 1 121 1 231 1 334 1 290 1 313 1 338 2 316 2 295 1 297 1 66 1 43 1 14 2 17 1 196 2 
22 1 164 2 200 1 328 1 305 1 141 1 79 1 168 1 269 1 288 2 101 1 56 1 120 1 208 1 368 2 338 2 182 1 88 1 341 1 38 2 185 2 299 1 256 1 68 1 216 1 160 2 14 2 350 1 162 1 239 2 73 1 
325 1 164 1 113 1 339 1 328 1 78 1 141 1 38 1 256 1 116 1 54 1 27 1 162 1 368 1 
181 1 164 1 356 1 372 1 36 1 78 1 328 1 24 1 38 1 52 1 169 1 256 1 80 1 27 1 29 2 301 1 220 1 368 1 
181 1 164 2 356 1 372 1 36 1 328 1 78 1 24 1 38 2 52 1 169 1 256 1 80 1 27 1 29 2 301 1 220 1 368 2 281 1 
181 1 0 1 164 1 356 1 372 1 36 1 328 1 24 1 38 1 169 1 256 1 80 1 27 1 29 2 301 1 220 1 368 1 
203 1 
63 1 254 1 294 1 189 1 192 1 103 1 31 1 336 1 219 1 275 1 
136 10 48 1 212 5 317 2 294 5 170 5 189 5 260 1 353 2 336 5 122 5 83 2 72 2 209 2 133 2 
189 1 192 1 295 1 297 1 257 1 251 1 
164 4 113 2 304 2 328 1 141 1 201 2 142 1 286 1 202 2 54 1 103 1 175 1 104 1 336 2 9 1 368 4 251 2 63 2 339 1 254 2 294 2 295 3 38 4 297 3 256 1 257 4 162 1 219 2 195 1 
189 1 158 1 192 1 294 1 31 1 336 1 275 1 
136 1 99 1 100 1 103 1 148 1 122 1 336 1 251 1 63 1 294 1 254 1 295 1 297 1 257 1 189 2 192 1 219 1 
136 12 326 2 48 2 328 3 201 2 141 10 98 1 202 1 287 2 249 2 103 4 336 8 209 2 251 3 63 4 212 6 294 9 254 4 295 5 297 5 256 4 257 5 260 2 353 2 162 3 219 4 72 2 164 3 113 1 304 1 223 2 268 1 306 1 170 6 31 1 232 2 122 6 83 2 368 3 367 2 123 3 275 1 183 2 317 2 38 3 321 2 189 8 192 2 380 3 191 1 91 2 195 1 281 1 133 2 
282 1 136 6 199 1 201 1 362 1 202 1 170 5 4 1 103 2 331 1 122 3 336 5 83 2 366 1 209 2 251 1 293 1 63 2 212 5 317 2 295 1 294 8 254 2 296 1 10 1 297 1 257 1 189 5 236 1 192 2 260 1 353 2 219 2 72 2 133 2 
225 1 288 1 308 1 147 1 146 1 103 1 336 2 209 1 338 1 316 1 370 1 126 1 63 1 254 1 295 1 294 2 297 1 379 1 349 1 260 1 14 1 353 2 131 1 324 1 219 1 133 2 262 1 196 1 
283 1 22 1 21 1 164 1 113 1 225 2 328 1 141 1 79 1 269 1 288 2 120 1 208 1 368 1 123 1 338 3 316 2 341 1 376 1 214 1 38 1 185 1 378 1 256 1 216 1 379 1 217 1 160 2 350 1 14 3 162 1 196 2 
136 4 63 1 212 2 373 1 254 1 294 1 201 1 170 2 202 1 189 4 192 2 103 1 122 2 336 2 219 1 
263 1 76 1 243 1 229 1 290 1 
243 1 290 1 125 1 
243 1 290 1 125 1 
243 1 290 1 125 1 
276 1 243 1 290 1 
276 1 243 1 290 1 
276 1 243 1 290 1 
243 1 290 1 
357 1 53 1 
22 1 126 1 88 5 341 1 79 1 185 10 269 1 147 2 308 2 146 1 7 5 160 2 350 5 353 2 132 3 365 2 209 2 292 1 
22 1 317 1 88 2 341 1 79 1 185 2 269 1 7 1 160 2 353 1 365 1 292 1 
22 1 317 1 88 2 341 1 79 1 185 4 269 1 7 2 160 2 350 2 83 1 353 1 132 1 365 1 209 1 72 1 292 1 
22 3 88 1 226 1 341 3 79 3 227 1 185 3 269 3 147 1 308 1 7 2 160 6 350 2 132 1 365 1 8 1 292 1 
282 4 22 5 226 2 79 5 227 1 269 5 145 1 146 2 308 3 147 3 81 1 119 1 309 1 7 12 331 3 59 1 83 3 365 5 8 1 209 5 292 1 373 1 88 16 317 3 296 1 341 5 185 34 159 1 160 10 350 18 353 5 163 1 132 7 72 3 
282 1 22 1 79 1 269 1 147 1 308 1 146 1 81 1 7 2 331 1 59 1 209 1 292 1 293 1 373 1 88 4 296 1 341 1 185 8 160 2 350 4 353 1 132 2 
282 2 22 2 79 2 269 2 146 1 308 1 147 1 81 1 309 1 7 3 331 1 59 1 365 1 209 1 292 1 293 1 373 1 88 6 317 1 296 1 341 2 185 11 160 4 350 5 353 2 132 2 163 1 72 1 
282 1 22 3 226 1 362 1 79 3 269 3 146 1 308 1 147 1 81 1 7 4 331 1 59 1 83 2 365 1 366 1 209 3 292 1 293 1 373 1 88 9 317 2 296 1 341 3 10 1 185 19 236 1 160 6 350 10 353 3 163 1 132 3 72 2 
282 1 22 3 226 1 362 1 79 3 269 3 146 1 308 1 147 1 81 1 7 5 331 1 59 1 83 1 365 2 366 1 209 2 292 1 293 1 373 1 88 10 317 2 296 1 341 3 10 1 185 17 236 1 160 6 350 7 353 3 163 1 132 3 72 2 
282 1 22 1 79 1 269 1 147 1 308 1 146 1 81 1 7 2 331 1 59 1 209 1 292 1 293 1 373 1 88 4 296 1 341 1 185 8 160 2 350 4 353 1 132 2 
282 1 22 1 362 1 79 1 269 1 7 2 331 1 83 2 365 1 366 1 209 2 292 1 293 1 88 6 317 2 296 1 341 1 10 1 185 12 236 1 160 2 350 6 353 2 132 1 72 2 
282 1 22 4 362 1 226 2 79 4 269 4 146 1 308 1 147 1 81 1 7 5 331 1 59 1 83 1 365 2 366 1 209 2 292 1 293 1 373 1 88 10 317 2 296 1 341 4 10 1 185 18 236 1 160 8 350 8 353 3 163 1 132 3 72 2 
282 1 22 4 362 1 226 2 79 4 227 1 269 4 7 6 331 1 83 2 365 3 366 1 209 2 292 1 293 1 88 9 317 3 296 1 341 4 10 1 185 16 236 1 160 8 350 7 353 3 132 3 72 3 
88 3 185 7 147 3 308 3 146 1 81 1 7 6 350 4 59 2 353 1 132 3 365 3 209 1 
282 1 22 4 362 1 226 2 79 4 227 1 269 4 146 1 308 1 147 1 81 1 7 4 331 1 59 1 83 1 365 1 366 1 209 2 292 1 293 1 373 1 88 10 317 2 296 1 341 4 10 1 185 18 236 1 160 8 350 8 353 3 132 3 72 2 
22 2 373 1 88 4 341 2 226 1 79 2 185 8 269 2 146 1 147 1 308 1 81 1 7 3 160 4 350 4 59 1 353 1 365 1 132 2 209 1 
373 1 88 3 185 6 147 1 308 1 146 1 158 1 81 1 7 2 350 3 59 1 353 1 132 2 209 1 
22 1 317 1 88 2 341 1 79 1 185 4 269 1 7 2 160 2 350 2 83 1 353 1 132 1 163 1 365 1 209 1 72 1 
282 2 88 3 317 1 296 1 185 7 309 1 7 2 331 1 350 4 83 1 353 1 132 1 365 1 209 1 72 1 
282 2 22 2 226 2 79 2 269 2 146 1 308 2 147 2 81 1 309 1 7 9 331 2 59 1 33 1 83 2 365 4 8 1 209 3 373 1 317 2 88 11 341 2 185 23 160 4 350 12 193 1 353 3 132 5 72 2 
282 1 350 1 185 1 
88 1 331 1 185 1 
22 1 48 1 317 1 88 3 341 1 79 1 185 6 269 1 7 3 160 2 350 3 353 1 83 1 163 1 365 1 132 2 72 1 209 1 
282 1 22 1 362 1 79 1 269 1 7 2 331 1 83 2 365 1 366 1 209 2 292 1 293 1 88 6 317 2 296 1 341 1 10 1 185 12 236 1 160 2 350 6 353 2 132 1 72 2 
88 3 185 6 146 1 147 1 308 1 7 2 350 3 353 1 132 1 365 1 209 1 
22 1 88 1 226 1 341 1 79 1 185 3 269 1 308 1 147 1 81 1 7 2 160 2 59 1 350 2 365 1 132 1 8 1 
283 1 338 1 252 1 265 1 14 1 15 1 288 1 
283 1 302 1 252 1 338 1 265 1 165 1 288 1 157 1 14 1 161 1 15 1 221 1 
164 4 113 1 339 1 328 1 114 1 141 1 38 4 256 1 54 1 333 1 162 1 368 4 281 1 
164 1 259 1 328 1 141 1 38 1 307 1 162 1 256 1 368 1 123 1 26 1 19 1 
164 1 29 1 372 1 113 1 36 1 328 1 24 1 38 1 256 1 368 1 
181 1 164 2 200 1 328 1 141 1 38 2 299 1 256 1 162 1 368 2 281 1 
164 5 339 1 113 1 200 1 304 1 328 2 141 3 38 5 54 1 3 1 256 2 333 1 162 2 177 1 368 4 281 1 
371 1 164 5 339 1 113 1 200 1 304 1 328 2 141 3 38 5 54 1 256 2 333 1 162 2 177 1 368 4 281 1 
158 1 164 1 339 1 113 1 328 1 141 1 38 1 162 1 256 1 54 1 368 1 
283 1 316 1 338 2 164 1 113 1 328 1 141 1 214 1 376 1 38 1 256 1 288 1 14 2 92 1 162 1 368 1 123 1 196 1 
283 1 164 1 326 1 304 1 328 1 141 3 288 2 368 1 123 2 338 2 316 2 376 1 214 1 38 1 256 1 321 1 346 1 14 2 92 1 162 2 238 1 324 1 196 1 
283 1 164 2 326 1 304 1 328 1 114 1 141 3 288 2 368 2 123 2 338 2 316 2 375 1 214 1 38 2 256 1 321 1 346 1 14 2 92 1 162 2 238 1 324 1 196 1 
74 1 326 1 164 3 113 1 304 1 223 1 295 2 284 1 328 1 114 1 141 4 297 2 38 3 256 1 321 1 257 1 189 1 192 1 380 1 91 1 162 1 368 3 123 1 
326 1 164 3 113 1 304 1 223 1 295 2 328 1 114 1 141 4 297 2 38 3 256 1 321 1 257 1 189 1 192 1 380 1 91 1 162 1 368 3 367 1 123 1 
164 1 328 1 38 1 256 1 368 1 272 1 
164 1 113 1 218 1 328 1 141 1 268 1 38 1 307 1 162 1 256 1 368 1 123 1 
283 2 328 1 141 1 288 1 147 1 146 1 7 2 59 1 208 2 209 1 338 2 341 2 214 1 256 1 217 1 160 4 14 2 350 3 353 1 162 1 73 1 22 2 164 1 305 1 79 2 167 1 269 2 270 1 308 1 81 1 120 2 368 1 85 1 123 1 316 1 184 1 88 3 373 1 376 1 38 1 378 1 185 6 377 1 92 1 132 2 281 1 196 1 
95 1 164 1 113 1 223 1 141 2 287 1 249 1 103 2 31 1 336 1 368 1 367 1 275 1 251 1 63 2 183 1 294 1 254 2 295 3 297 3 38 1 257 2 189 1 192 1 380 1 91 1 219 2 195 1 
164 2 223 1 328 1 268 1 141 2 38 2 306 1 272 1 256 2 162 1 368 2 123 1 281 1 
283 1 316 1 338 2 164 1 113 1 328 1 141 1 214 1 375 1 38 1 256 1 288 1 14 2 92 1 162 1 368 1 123 1 196 1 
164 1 218 1 304 1 328 1 141 1 268 1 38 1 307 1 162 1 256 1 368 1 123 1 
283 1 134 1 115 1 37 1 354 1 
283 1 134 1 95 1 295 2 359 1 213 1 115 2 297 2 37 2 346 1 189 1 192 1 91 1 238 1 324 1 354 2 210 1 179 1 151 1 
134 1 338 1 182 1 115 1 168 1 288 1 56 1 14 1 354 1 
134 1 359 1 179 1 
187 1 47 1 139 1 327 1 84 1 369 1 204 1 87 1 
62 1 47 2 139 1 298 1 107 2 215 1 204 4 234 1 187 4 84 2 369 1 93 1 46 1 87 3 
242 1 47 1 139 1 327 1 246 1 107 1 204 2 187 2 84 1 369 1 87 1 124 1 
264 1 47 1 139 1 327 1 298 1 204 3 215 2 187 3 234 2 84 1 369 1 87 1 
348 2 335 1 150 1 87 2 
187 1 139 1 327 1 364 1 369 1 204 1 
187 2 47 1 139 1 327 1 84 1 107 1 369 1 117 1 204 2 87 1 
106 1 
187 1 47 1 139 1 327 1 84 1 369 1 204 1 87 1 
158 1 47 1 84 1 87 1 
187 1 47 1 139 1 84 1 369 1 204 1 87 1 
266 1 44 1 204 1 
234 2 187 3 47 1 139 1 102 1 327 1 298 1 84 1 369 1 215 1 204 3 87 1 
187 2 47 1 139 1 82 1 84 1 107 1 369 1 204 2 87 1 
187 1 29 1 358 1 139 1 327 1 24 1 301 1 369 1 46 1 204 1 87 1 
187 1 139 1 327 1 84 1 369 1 204 1 87 1 
187 1 47 1 139 1 327 1 84 2 369 1 204 1 
139 2 327 1 204 2 67 1 187 2 28 1 84 1 369 2 35 1 87 1 
62 1 47 1 139 1 327 1 107 2 204 3 117 1 187 3 351 1 84 1 369 1 46 1 87 2 
47 1 127 1 372 1 139 1 327 1 24 1 107 1 204 2 80 1 187 2 29 2 301 1 84 1 369 1 87 1 
62 1 47 1 139 2 327 1 1 1 107 2 204 4 187 4 82 1 84 1 369 2 46 1 87 2 
47 1 139 1 327 1 107 1 204 3 117 1 187 3 234 1 84 1 369 1 87 1 
62 1 93 1 46 1 87 1 
84 1 87 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
46 1 47 1 195 1 158 1 252 2 181 6 55 2 121 1 208 1 258 2 33 1 231 1 259 2 307 4 261 2 308 5 64 1 39 2 374 1 265 2 151 1 219 1 102 1 132 9 103 3 69 9 222 1 270 1 
46 1 47 1 195 1 158 1 252 2 181 6 55 2 121 1 208 1 258 2 33 1 231 1 259 2 307 4 261 2 308 5 64 1 39 2 374 1 265 2 151 1 219 1 102 1 132 9 103 3 69 9 222 1 270 1 
46 1 47 1 195 1 158 1 252 2 181 7 55 2 121 1 208 1 258 2 33 1 231 1 259 2 307 5 261 2 308 6 64 1 39 2 374 1 265 2 151 1 219 1 102 1 132 10 103 4 69 10 222 1 270 1 
46 1 47 1 195 1 158 1 252 2 181 4 55 2 121 1 208 1 258 2 33 1 231 1 259 1 307 3 261 2 308 4 64 1 39 2 374 1 265 2 151 1 102 1 132 7 103 2 69 7 222 1 270 1 
195 1 307 2 261 1 158 1 308 3 39 1 252 1 374 1 181 3 219 1 55 1 132 4 103 1 121 1 69 4 258 1 33 1 259 2 
125 1 261 1 158 1 308 1 138 1 39 1 252 1 374 1 151 1 265 1 132 2 170 1 69 2 270 1 258 1 33 1 
307 1 261 2 158 1 308 2 64 1 374 1 265 1 181 1 132 3 103 1 69 3 258 2 33 1 
47 1 195 1 158 1 252 1 181 7 55 1 121 1 258 2 33 1 231 1 291 1 259 2 167 1 307 4 261 2 308 5 64 1 39 1 374 1 265 1 219 1 132 9 103 3 69 9 
47 1 195 1 158 1 252 1 181 7 55 1 121 1 258 2 33 1 231 1 291 1 259 2 167 1 307 4 261 2 308 5 64 1 39 1 374 1 265 1 219 1 132 9 103 3 69 9 
218 1 335 1 142 1 
184 2 142 1 13 1 
145 2 255 1 268 2 377 2 312 2 105 1 113 2 34 2 
75 1 357 1 193 1 194 1 198 2 201 1 113 2 318 1 52 1 253 1 204 1 141 1 287 2 255 1 10 1 209 1 12 1 123 2 290 1 144 2 34 2 145 3 190 1 127 1 263 1 373 1 19 1 152 1 268 3 377 2 43 2 221 1 356 1 312 2 105 1 332 1 314 1 
183 1 145 1 268 1 228 1 377 1 312 1 105 1 98 1 113 1 34 1 
126 1 335 1 145 1 107 1 175 1 350 1 178 1 162 1 183 1 142 1 268 1 124 1 324 1 34 1 
126 1 335 1 145 1 107 1 175 1 350 2 113 1 162 1 183 1 142 1 268 1 377 1 312 1 124 2 34 1 
3 1 94 1 296 1 350 1 124 1 
335 1 206 1 142 1 94 1 296 1 342 1 350 2 124 2 
296 1 350 1 124 1 
145 1 94 1 350 1 98 1 352 1 113 1 183 1 228 1 268 1 377 1 105 1 312 1 124 1 34 1 
142 1 
36 1 335 1 206 1 142 1 94 1 296 1 350 2 124 2 
87 1 77 2 335 1 62 2 94 2 350 5 50 1 29 1 203 2 171 1 206 1 142 1 70 1 296 2 289 1 241 1 124 5 15 1 211 1 
218 1 255 1 
145 2 189 1 113 1 4 1 268 2 255 2 377 1 312 1 34 2 
20 1 90 1 361 1 
75 1 194 1 145 1 198 1 190 1 318 1 253 1 19 1 141 1 287 1 255 1 268 1 12 1 144 1 257 1 314 1 
75 1 194 1 145 2 17 1 190 1 198 1 318 1 226 1 253 1 19 1 20 1 141 1 287 1 268 2 377 1 12 1 312 1 144 1 314 1 34 1 
145 3 255 1 268 3 377 3 312 3 113 1 226 1 34 3 
183 1 145 1 268 1 377 1 312 1 98 1 34 1 
183 1 145 1 268 1 377 1 189 1 312 1 113 1 4 1 34 1 
75 1 194 1 193 1 357 1 107 1 175 1 198 1 201 1 113 2 318 1 226 1 52 1 253 1 204 1 162 1 183 1 141 1 287 1 255 1 12 1 123 2 290 1 124 1 144 1 34 3 126 1 145 4 17 1 189 1 190 1 350 1 147 1 309 1 373 1 19 1 268 4 377 3 43 1 221 1 356 1 312 3 105 1 332 1 314 1 
145 2 255 1 268 2 377 1 312 1 5 1 226 1 324 1 34 2 
126 1 145 3 107 1 175 1 17 1 189 1 350 1 113 1 309 1 226 2 162 1 183 1 142 1 268 3 377 3 312 3 124 1 313 1 34 3 
145 2 189 1 113 1 226 1 361 1 20 1 268 2 377 2 312 2 34 2 
75 1 194 1 145 1 198 1 190 1 318 1 253 1 19 1 287 1 141 1 255 1 268 1 12 1 144 1 314 1 
75 1 194 1 145 1 198 1 262 1 190 1 318 1 253 1 287 1 141 1 255 1 268 1 21 1 12 1 144 1 
199 1 201 1 202 1 52 1 227 1 361 2 204 2 6 1 119 1 10 2 365 1 123 2 290 1 187 1 369 1 59 1 61 1 90 2 373 1 238 1 20 2 221 1 43 4 356 1 
162 1 183 1 145 1 268 1 240 1 377 1 312 1 34 1 
145 5 17 1 189 1 113 1 5 1 226 2 232 1 8 1 268 5 255 1 377 4 312 4 324 1 34 5 
183 1 145 2 240 1 268 2 377 2 312 2 98 1 34 2 
140 1 236 1 
140 1 236 1 
224 1 117 1 
224 1 117 1 
224 1 117 1 
140 1 131 1 236 1 
140 1 295 1 236 1 
140 2 224 1 117 1 214 1 148 1 236 2 
140 1 131 1 236 1 
140 1 131 1 236 1 
140 1 192 1 236 1 
140 1 192 1 236 1 
140 1 192 1 236 1 
91 2 274 1 2 2 349 3 111 2 350 2 214 1 66 1 84 2 236 2 101 1 140 2 54 1 310 1 31 2 142 1 364 1 185 1 124 2 
274 1 2 1 111 1 336 1 112 1 140 1 31 1 207 1 255 1 323 1 124 1 34 2 35 1 145 2 91 1 349 1 350 1 236 1 295 1 220 1 268 2 377 2 312 2 72 1 
55 1 39 1 252 1 
138 1 39 1 252 1 
55 2 366 1 225 1 138 1 337 1 39 3 
55 1 366 1 225 1 138 1 250 1 39 2 
55 1 366 2 225 1 138 1 39 2 
77 1 157 2 335 1 336 1 137 1 203 1 227 1 285 1 184 3 206 1 142 2 163 1 13 1 289 3 124 5 187 1 211 1 35 1 61 1 62 1 94 4 350 5 63 1 169 2 130 1 217 2 238 1 296 1 191 1 72 1 241 2 272 1 
77 2 157 6 335 1 3 5 27 1 336 4 137 1 203 2 227 3 184 9 206 1 142 5 11 1 165 1 13 3 289 8 124 9 187 3 211 1 260 5 61 3 62 2 94 7 350 9 63 2 146 1 169 6 65 1 130 2 238 3 355 1 70 1 296 6 191 3 241 6 
77 1 157 2 335 1 336 1 203 1 227 1 184 4 142 3 163 1 13 2 289 3 124 3 187 1 61 1 62 1 94 2 350 3 63 1 169 2 130 1 217 1 238 1 70 1 191 1 241 2 272 1 
77 1 157 4 335 1 336 2 203 1 227 2 184 7 142 4 163 1 11 1 13 3 289 5 124 4 187 2 61 2 62 1 94 3 350 4 63 1 146 1 169 4 65 1 130 1 217 2 238 2 70 1 191 2 241 4 272 1 
218 1 141 1 179 1 
141 1 120 1 
264 1 
141 1 190 1 
141 3 190 1 12 1 288 1 179 2 370 1 
141 1 190 1 12 1 
141 1 82 1 
276 1 16 1 277 2 202 3 279 1 227 1 53 1 204 3 286 1 239 1 164 1 10 4 43 7 333 1 187 1 300 1 369 2 
276 1 16 1 277 2 202 3 279 1 227 1 53 1 204 3 286 1 239 1 164 1 10 4 43 7 333 1 187 1 300 1 369 2 
276 1 16 1 277 2 202 3 279 1 227 1 53 1 204 3 286 1 239 1 164 1 10 4 43 7 333 1 378 1 187 1 300 1 369 2 
276 5 277 3 197 1 279 1 202 10 53 1 227 4 204 15 286 2 164 2 10 16 343 1 123 2 290 1 230 1 187 4 369 5 61 3 16 2 215 1 373 1 354 1 238 3 239 1 134 3 172 1 43 31 191 3 221 1 356 1 333 2 73 4 300 1 379 1 
276 1 277 2 202 4 279 1 227 1 53 1 204 4 205 1 286 1 164 1 10 5 123 4 290 2 187 1 369 3 292 1 16 1 373 2 354 1 221 2 43 9 356 2 333 1 300 1 
75 1 194 1 158 1 198 1 138 1 337 1 30 1 252 1 301 1 180 1 114 1 181 1 55 1 287 1 143 1 144 1 258 1 33 1 261 1 168 1 308 1 39 2 374 1 265 1 132 2 69 2 299 1 223 1 104 1 173 1 
75 1 194 1 198 1 248 1 138 1 337 1 30 1 252 1 114 1 321 1 181 2 55 1 287 1 363 1 143 1 144 1 258 1 33 1 261 1 168 1 308 1 39 2 374 1 265 1 132 3 69 3 299 1 223 1 104 1 173 1 
75 1 194 1 308 1 198 1 138 1 248 1 337 1 39 2 30 1 252 1 374 1 265 1 181 2 55 1 132 2 363 1 287 1 69 2 143 1 299 1 104 1 223 1 173 1 144 1 33 1 
75 1 188 1 194 1 261 1 359 1 190 1 198 1 318 1 30 2 265 2 321 1 132 1 141 1 287 1 133 1 9 1 69 1 143 2 223 2 23 1 144 1 258 1 106 1 
75 1 194 1 261 1 168 1 158 1 198 1 138 1 337 1 39 2 30 1 252 1 114 1 180 1 265 1 55 1 132 1 363 1 287 1 69 1 143 1 299 1 104 1 223 1 173 1 144 1 258 1 
67 1 
245 1 194 1 335 1 107 1 48 2 198 2 159 2 249 1 203 1 251 1 160 1 162 1 206 3 118 1 122 1 9 1 13 2 124 5 211 1 126 1 62 1 63 1 350 5 129 1 268 1 135 2 25 1 75 1 77 1 175 1 26 4 359 1 318 2 178 1 182 1 184 2 183 1 287 2 141 1 142 2 289 2 144 2 324 1 34 1 145 1 293 2 190 1 40 1 234 2 328 1 376 2 296 6 297 2 241 2 244 1 
36 1 126 1 145 1 26 2 175 1 107 1 48 1 350 3 178 1 249 1 251 1 40 1 328 1 162 1 206 1 183 1 122 1 268 1 296 2 124 3 324 1 34 1 
36 1 126 1 335 1 145 1 26 3 175 1 107 1 350 3 178 1 249 1 251 1 40 1 328 1 162 1 206 1 376 1 183 1 142 1 122 1 268 1 296 1 124 3 324 1 34 1 
335 1 107 1 175 1 26 3 48 1 178 1 159 1 249 1 251 1 162 1 206 1 183 1 122 1 142 1 124 3 324 1 34 1 36 1 126 1 145 1 350 3 40 1 328 1 376 1 268 1 296 2 
77 1 335 5 107 1 175 1 26 6 48 4 177 1 178 1 159 4 249 1 203 1 251 1 160 1 162 1 206 3 183 1 142 5 122 1 344 1 13 2 289 1 124 5 306 1 211 1 324 1 34 1 36 1 126 1 145 1 62 1 293 2 350 5 97 1 40 1 234 2 128 1 328 1 376 4 268 1 296 7 297 2 135 2 241 1 25 1 
77 1 335 1 107 1 175 1 26 4 48 2 159 2 178 1 249 1 251 1 203 1 160 1 182 1 162 1 206 2 184 2 183 1 142 2 122 1 13 2 289 1 124 4 211 1 324 1 34 1 126 1 145 1 62 1 293 2 350 4 40 1 234 2 328 1 376 2 268 1 296 4 297 2 135 2 241 1 25 1 
77 1 335 1 107 1 175 1 26 4 48 2 159 2 178 1 249 1 251 1 203 1 160 1 162 1 206 2 183 1 142 1 122 1 13 2 289 1 124 4 306 1 324 1 211 1 34 1 126 1 145 1 62 1 293 2 350 4 97 1 40 1 234 2 128 1 328 1 376 2 268 1 296 4 297 2 135 2 241 1 25 1 
77 1 335 1 107 1 175 1 26 4 48 2 159 2 178 1 249 1 251 1 203 1 160 1 162 1 206 2 183 1 142 1 122 1 13 2 289 1 124 4 306 1 324 1 211 1 34 1 126 1 145 1 62 1 293 2 350 4 97 1 40 1 234 2 128 1 328 1 376 2 268 1 296 4 297 2 135 2 241 1 25 1 
77 1 335 1 109 2 107 1 175 1 26 4 48 2 159 2 178 1 249 1 251 1 203 1 160 1 162 1 206 2 341 2 184 2 183 1 142 1 122 1 289 1 124 4 305 1 324 1 211 1 34 1 126 1 145 1 62 1 350 4 40 1 128 1 149 1 328 1 376 2 268 1 296 4 297 2 135 2 269 1 241 1 
77 1 335 1 107 1 175 1 26 5 48 3 177 1 178 1 159 3 249 1 203 1 251 1 160 1 162 1 206 2 183 1 142 1 122 1 13 2 289 1 124 4 306 1 211 1 324 1 34 1 126 1 145 1 62 1 293 2 350 4 97 1 40 1 234 2 128 1 328 1 376 3 268 1 296 5 297 2 135 2 241 1 25 1 
77 1 335 1 107 1 175 1 26 5 48 3 177 1 178 1 159 3 249 1 203 1 251 1 160 1 162 1 206 2 183 1 142 1 122 1 13 2 289 1 124 4 306 1 211 1 324 1 34 1 126 1 145 1 62 1 293 2 350 4 97 1 40 1 234 2 128 1 328 1 376 3 268 1 296 5 297 2 135 2 241 1 25 1 
77 1 335 1 109 2 107 1 175 1 26 4 48 2 159 2 178 1 249 1 251 1 203 1 160 1 182 1 162 1 206 2 341 2 184 2 183 1 142 1 122 1 289 1 124 4 211 1 324 1 34 1 126 1 145 1 62 1 350 4 40 1 328 1 376 2 268 1 296 4 297 2 135 2 269 1 241 1 
277 1 201 1 279 1 202 2 52 1 361 1 53 1 227 1 204 3 286 1 164 1 255 2 10 3 123 2 290 1 187 1 369 2 59 1 90 1 373 1 218 1 20 1 221 1 43 6 356 1 300 1 
276 1 197 1 201 2 202 2 51 1 52 1 227 2 361 4 204 6 255 1 10 8 209 1 57 1 123 4 290 2 346 1 187 1 369 1 61 2 90 11 215 1 235 1 373 2 238 1 20 11 68 1 134 3 221 2 43 14 191 2 356 2 332 1 73 3 
75 1 194 1 198 1 316 1 318 1 201 1 226 1 52 1 253 1 361 1 204 1 141 1 287 1 255 1 10 1 12 1 209 1 123 2 14 1 144 1 290 1 257 1 34 1 145 2 17 1 190 1 373 1 19 1 68 1 267 1 268 2 377 1 221 1 43 2 312 1 356 1 332 1 314 1 
193 2 194 2 198 3 201 3 202 8 52 3 53 1 253 2 204 10 255 2 164 1 10 10 209 1 12 2 123 6 58 2 61 2 17 1 19 2 20 7 68 1 268 3 221 3 356 3 312 1 314 2 75 2 273 2 276 4 277 1 315 2 318 1 279 1 226 1 361 7 227 3 363 1 286 1 287 3 141 2 144 3 290 3 187 3 369 4 34 1 38 1 145 3 325 1 90 7 190 2 373 3 238 2 153 1 377 1 43 20 191 2 332 1 243 2 300 1 
75 2 194 2 79 1 359 1 198 8 318 2 201 2 282 1 226 1 301 1 52 2 339 1 204 1 363 1 141 3 287 8 9 1 10 1 210 1 209 1 166 1 123 4 144 7 290 2 368 1 34 1 59 1 145 1 190 2 216 1 373 2 152 2 268 1 377 1 221 2 43 2 312 1 356 2 332 1 
113 1 201 1 202 1 52 1 361 1 227 1 204 2 10 1 123 2 290 1 187 1 369 1 34 1 145 1 61 1 90 1 189 1 373 1 238 1 20 1 68 1 268 1 311 1 377 1 221 1 191 1 43 3 312 1 356 1 
59 1 61 1 276 1 90 1 201 1 202 1 52 1 361 1 373 1 227 1 20 1 119 1 10 2 43 2 221 1 123 2 356 1 290 1 
59 1 90 1 199 1 201 1 202 1 52 1 361 1 373 1 204 2 238 1 20 1 43 2 221 1 123 2 356 1 290 1 187 1 369 1 
59 1 61 1 276 1 90 2 201 1 202 2 52 1 361 2 373 1 227 1 204 2 238 1 20 2 10 2 43 4 221 1 191 1 123 2 356 1 290 1 187 1 369 1 
61 1 276 1 90 1 201 1 202 1 52 1 361 1 373 1 227 1 339 1 20 1 119 1 10 2 43 2 221 1 123 2 356 1 290 1 
90 1 199 1 201 1 202 1 52 1 361 1 373 1 339 1 204 2 238 1 20 1 43 2 221 1 123 2 356 1 290 1 187 1 369 1 
61 1 276 1 90 2 201 1 202 2 52 1 361 2 373 1 227 1 204 2 339 1 238 1 20 2 10 2 43 4 221 1 191 1 123 2 356 1 290 1 187 1 369 1 
61 1 276 1 90 2 201 1 202 2 52 1 361 2 373 1 227 1 204 2 238 1 20 2 10 2 221 1 191 1 43 4 123 2 356 1 290 1 187 1 369 1 
75 1 194 1 193 1 198 1 318 1 201 1 52 1 253 1 204 1 287 1 141 1 255 1 10 1 209 1 12 1 123 2 144 1 290 1 145 1 190 1 373 1 19 1 268 1 43 2 221 1 356 1 332 1 314 1 
75 1 194 1 198 1 318 1 201 1 52 1 253 1 204 1 287 1 141 1 255 1 10 1 209 1 12 1 123 2 144 1 290 1 145 1 95 1 190 1 262 1 373 1 268 1 43 2 21 1 221 1 356 1 332 1 
61 1 276 1 90 2 201 1 202 2 52 1 361 2 373 1 227 1 204 2 238 1 20 2 68 1 10 2 43 4 221 1 191 1 123 2 356 1 290 1 187 1 369 1 
75 1 194 1 193 1 276 1 198 1 201 1 202 2 301 1 52 1 361 2 227 1 253 1 204 2 287 1 141 1 10 2 12 1 123 2 144 1 290 1 187 1 369 1 61 1 145 1 90 2 190 1 373 1 19 1 238 1 20 2 268 1 43 4 221 1 191 1 356 1 314 1 243 1 
276 1 113 1 201 1 202 1 52 1 227 1 361 1 204 1 10 2 123 2 290 1 187 1 34 1 60 1 145 1 61 1 90 1 189 1 373 1 238 1 20 1 68 1 268 1 377 1 221 1 191 1 43 3 312 1 356 1 
108 1 276 3 358 2 49 1 197 1 202 6 338 1 227 3 204 10 10 9 123 4 290 2 186 1 187 3 369 3 292 1 61 3 215 1 373 2 375 1 238 3 134 1 154 1 221 2 43 19 191 3 356 2 44 2 242 1 73 2 
76 1 276 1 108 1 358 3 81 1 49 1 197 2 202 2 227 3 204 10 10 13 123 4 290 2 186 2 187 2 369 1 292 1 61 3 92 1 150 1 373 2 375 1 354 1 238 2 134 2 221 2 43 23 191 3 22 1 356 2 156 1 44 1 242 2 73 2 
76 1 108 1 276 3 358 3 81 1 49 1 197 3 202 5 338 1 227 4 204 16 10 15 123 4 290 2 86 1 186 1 187 4 369 2 292 1 61 4 92 1 215 1 150 1 373 2 375 1 238 4 134 3 221 2 43 31 191 4 22 1 156 1 356 2 44 1 242 2 73 4 
76 1 108 1 276 3 358 4 81 1 49 1 197 3 202 6 338 1 227 4 204 15 10 17 123 6 290 3 86 1 186 1 187 3 369 3 292 1 61 4 92 1 215 1 150 1 373 3 375 1 354 1 238 3 134 3 221 3 43 32 191 4 22 1 156 1 356 3 44 1 242 2 73 4 
76 1 108 1 276 8 277 1 358 4 81 1 49 1 197 2 279 1 202 15 53 1 227 8 204 25 286 1 164 1 10 27 57 2 123 4 290 2 186 1 187 8 369 7 292 1 61 7 92 1 215 2 150 1 373 2 375 1 354 1 238 7 134 4 221 2 43 52 191 7 22 1 156 1 356 2 44 1 242 1 73 4 300 1 
140 1 31 1 91 1 2 1 185 1 111 1 214 1 66 1 371 1 236 1 
295 1 323 1 
140 1 0 1 31 1 91 1 2 1 155 1 111 1 372 1 236 1 
274 1 91 1 2 1 349 2 350 1 111 1 214 1 66 1 84 1 236 1 140 1 54 1 310 1 31 1 142 1 364 1 185 1 124 1 
274 1 91 1 2 1 349 2 350 1 111 1 214 1 66 1 84 1 236 1 140 1 54 1 310 1 31 1 142 1 364 1 185 1 124 1 
274 1 91 1 2 1 349 2 350 1 111 1 214 1 66 1 84 1 236 1 140 1 54 1 310 1 31 1 142 1 364 1 185 1 124 1 
131 1 331 1 148 1 
131 1 331 1 148 1 
329 1 192 1 
329 1 192 1 148 1 
220 1 112 1 
2 1 111 1 336 1 112 1 84 1 140 1 31 1 207 1 255 1 323 1 124 1 34 2 35 1 347 1 145 2 91 1 349 1 94 1 350 1 236 1 310 1 295 1 220 1 268 2 377 2 312 2 72 1 
131 1 331 1 
329 1 192 1 148 1 
75 1 194 1 196 1 198 2 201 1 280 1 52 1 204 1 141 1 287 2 256 1 10 1 209 1 123 2 290 1 144 2 368 1 34 2 145 2 190 1 99 1 216 1 373 1 152 2 68 1 268 2 298 1 221 1 43 2 356 1 332 1 
75 1 194 1 246 1 168 1 198 2 138 1 337 1 39 2 30 1 252 1 301 1 139 1 55 1 363 1 287 2 104 1 173 1 144 2 174 1 
75 1 194 1 37 1 246 1 168 1 198 1 138 1 337 1 39 2 30 1 252 1 55 1 363 1 287 1 104 1 173 1 144 1 
75 1 194 1 359 1 190 1 198 1 318 1 278 1 30 1 141 1 287 1 9 1 144 1 106 1 174 1 
75 1 194 1 246 1 168 1 198 1 138 1 337 1 39 2 30 1 252 1 139 1 55 1 363 1 287 1 104 1 173 1 144 1 174 1 
247 1 
87 1 218 1 335 1 171 1 142 1 289 1 241 1 
77 1 335 1 203 1 184 1 206 1 142 2 13 1 289 1 124 1 211 1 62 1 293 1 350 1 234 1 296 1 241 1 25 1 
245 1 194 4 157 6 335 2 198 3 203 4 301 1 302 2 7 2 115 1 206 3 120 3 12 3 13 6 124 5 211 4 126 2 61 2 62 4 63 2 350 5 169 6 266 1 171 1 71 2 271 2 75 3 77 4 78 2 273 2 82 2 318 1 360 1 179 2 320 2 227 2 184 12 141 10 287 3 142 8 229 2 289 9 144 3 187 2 370 1 87 1 93 1 190 3 326 1 238 2 296 5 191 2 241 8 334 2 
76 1 77 1 157 5 197 1 203 1 227 2 7 1 184 6 142 3 289 6 13 3 211 1 187 2 61 2 92 1 62 1 169 5 150 1 238 2 134 1 191 2 22 1 156 1 241 4 73 1 
77 1 113 1 203 1 227 2 7 2 284 1 183 1 286 1 164 1 228 1 289 2 124 1 306 1 211 1 187 1 34 1 145 1 62 1 350 1 98 1 352 1 268 1 377 1 105 1 312 1 271 1 241 2 300 1 
87 1 77 1 335 1 62 1 203 1 171 1 142 1 289 1 241 1 211 1 
157 5 273 1 61 2 169 5 227 2 7 2 238 2 184 10 142 5 191 2 13 5 289 5 271 1 241 5 187 2 
335 1 206 1 142 1 296 1 350 1 124 1 
75 1 194 1 77 2 245 2 1 1 359 1 198 4 317 1 318 2 203 2 360 1 206 2 141 1 287 4 9 1 289 2 144 4 124 3 211 1 62 2 190 1 63 2 350 3 129 1 266 2 70 1 296 4 241 2 244 1 
75 1 357 1 193 1 194 1 198 1 318 1 113 2 201 1 52 1 253 1 204 1 287 1 141 1 255 1 12 1 123 2 290 1 144 1 34 2 145 3 190 1 373 1 19 1 268 3 377 2 43 1 221 1 356 1 312 2 105 1 332 1 314 1 
77 1 245 1 157 2 335 2 277 1 62 1 63 1 169 2 203 1 184 4 142 4 13 2 289 1 241 2 211 1 
31 1 91 1 42 1 
161 1 31 1 91 1 185 1 112 1 
31 1 91 1 42 1 
31 1 91 1 42 1 
136 1 31 1 91 1 
136 1 31 1 91 1 
136 1 31 1 91 1 
31 1 91 1 
140 1 236 1 
276 1 277 1 202 3 279 1 227 1 373 2 53 1 204 4 354 1 286 1 164 1 10 4 43 8 221 2 123 4 356 2 290 2 187 1 300 1 369 2 
204 3 218 1 286 1 277 1 164 1 10 3 43 6 202 2 279 1 187 1 227 1 300 1 369 2 53 1 
61 1 276 1 202 2 100 1 373 1 227 1 204 2 238 1 10 2 221 1 191 1 43 4 123 2 356 1 290 1 187 1 369 1 
61 1 276 1 197 1 202 2 215 1 227 1 204 4 238 1 134 1 10 3 43 7 191 1 73 2 187 1 369 1 
276 4 277 1 279 1 202 9 53 1 227 3 204 12 286 2 164 2 10 11 57 1 123 4 290 2 187 3 369 5 61 2 215 1 233 1 235 1 373 2 354 2 238 2 134 2 191 2 43 23 221 2 356 2 73 2 300 1 
204 1 43 1 73 1 
134 1 10 1 43 1 
273 1 61 1 276 1 100 1 202 3 373 1 227 1 204 3 238 1 10 3 221 1 43 6 191 1 356 1 123 2 290 1 187 1 369 2 
76 1 276 1 197 1 202 2 227 2 204 6 10 6 123 2 290 1 187 2 369 1 292 1 61 2 92 1 150 1 373 1 238 2 134 1 43 12 221 1 191 2 156 1 356 1 22 1 73 1 
276 1 202 2 227 1 204 3 286 1 164 1 10 3 43 6 187 1 300 1 369 1 
276 1 202 2 279 1 233 1 53 1 373 1 204 2 354 1 286 1 164 1 10 1 43 3 221 1 123 2 356 1 290 1 369 1 
292 1 276 2 202 5 373 1 227 2 204 5 284 1 286 2 164 2 10 5 221 1 43 10 356 1 123 2 290 1 187 2 369 3 300 1 
292 1 61 1 276 1 202 1 373 1 227 1 10 2 221 1 43 2 123 2 356 1 290 1 
292 1 61 1 276 1 202 2 373 1 227 1 204 2 238 1 10 2 221 1 191 1 43 4 123 2 356 1 290 1 187 1 369 1 
292 1 276 1 202 2 233 1 338 1 373 3 204 2 354 1 286 1 164 1 10 1 43 3 221 3 123 6 356 3 290 3 369 1 
276 5 277 1 197 1 279 1 202 12 338 1 53 1 227 5 204 18 286 3 164 3 10 16 123 10 290 5 230 1 187 5 369 7 292 1 61 3 100 1 233 1 215 1 373 5 354 2 238 3 134 3 172 1 221 5 43 34 191 3 356 5 73 4 300 2 379 1 
277 1 197 1 279 1 202 2 227 1 53 1 204 4 286 1 164 1 10 4 123 2 290 1 187 1 369 2 292 1 373 1 134 1 43 8 221 1 156 1 356 1 73 1 300 1 
276 1 277 1 197 1 279 1 202 3 53 1 227 2 204 5 286 1 164 1 10 6 123 4 290 2 187 1 369 2 292 1 61 1 100 1 215 1 373 2 134 1 43 11 221 2 191 1 156 1 356 2 73 2 300 1 
76 1 276 1 197 1 202 2 227 2 204 6 10 6 123 4 290 2 187 2 369 1 292 1 61 2 92 1 100 1 150 1 373 2 238 2 134 1 43 12 221 2 191 2 156 1 356 2 22 1 73 1 
76 1 276 2 277 1 197 1 279 1 202 4 53 1 227 3 204 7 286 1 164 1 10 10 123 6 290 3 187 2 369 2 292 1 61 2 92 1 100 1 150 1 373 3 354 1 238 1 134 1 43 17 221 3 191 2 156 1 356 3 22 1 73 1 300 1 
277 1 197 1 279 1 202 2 227 1 53 1 204 4 286 1 164 1 10 4 123 2 290 1 187 1 369 2 292 1 373 1 134 1 43 8 221 1 156 1 356 1 73 1 300 1 
76 1 276 1 197 1 202 1 227 2 204 6 10 6 123 2 290 1 187 2 292 1 61 2 92 1 150 1 373 1 238 2 134 1 43 12 221 1 191 2 156 1 356 1 22 1 73 1 
76 1 276 1 197 1 202 2 227 2 204 4 10 7 123 6 290 3 187 1 369 1 292 1 61 2 92 1 100 1 150 1 373 3 354 1 238 1 134 1 43 11 221 3 191 2 22 1 156 1 356 3 73 1 
76 1 276 3 197 1 202 6 338 1 227 3 204 7 10 9 123 8 290 4 187 2 369 3 292 1 61 3 92 1 150 1 373 4 354 2 238 2 134 1 43 16 221 4 191 3 22 1 156 1 356 4 73 1 
276 3 279 1 202 6 53 2 227 1 204 4 286 3 164 3 10 3 43 7 187 1 369 3 300 1 
76 1 276 1 277 1 197 1 279 1 202 5 338 1 53 1 227 3 204 8 286 1 164 1 10 10 123 8 290 4 187 2 369 4 292 1 61 2 92 1 150 1 373 4 354 2 238 1 134 1 43 18 221 4 191 2 22 1 156 1 356 4 73 1 300 1 
362 1 145 1 255 1 268 1 5 1 324 1 34 1 
145 1 213 1 5 1 362 1 340 1 41 1 255 1 268 1 367 1 345 1 324 1 34 1 
75 1 194 1 218 1 141 1 287 1 359 1 9 1 190 1 198 1 144 1 318 1 
75 1 194 1 145 2 190 1 198 1 318 1 226 1 253 1 19 1 141 1 287 1 255 1 268 2 377 1 12 1 312 1 144 1 34 1 
75 1 194 1 175 1 198 1 82 1 226 1 253 1 320 1 162 1 183 1 287 1 141 3 255 1 12 2 144 1 34 2 145 2 190 2 19 1 266 1 268 2 377 2 312 1 
75 1 194 1 175 1 176 1 198 2 82 1 226 1 253 1 320 1 162 1 183 1 287 2 141 3 255 1 12 2 144 2 34 2 145 2 262 1 190 2 266 1 268 2 377 2 312 1 
75 1 126 1 194 1 335 1 212 1 176 1 190 1 350 2 198 3 82 1 351 1 318 1 320 1 179 1 266 1 287 3 120 1 141 4 142 1 296 1 12 1 124 2 144 3 
75 1 126 1 194 1 335 1 176 1 190 1 350 2 198 3 82 1 318 1 320 1 179 1 266 1 287 3 120 1 141 4 142 1 296 1 12 1 124 2 144 3 334 1 
75 1 194 1 287 1 198 1 210 1 144 1 
75 2 194 3 79 1 198 7 190 2 200 1 318 2 281 1 282 1 216 1 301 1 319 1 152 1 363 1 287 7 141 3 210 1 12 1 166 1 144 6 370 1 
193 1 194 1 198 1 201 2 202 2 301 1 52 2 253 1 53 1 204 3 164 1 255 2 10 3 12 1 123 4 19 1 20 1 68 1 268 2 221 2 356 2 312 1 314 1 75 1 277 1 315 1 279 1 226 1 361 1 227 1 287 1 141 1 286 1 144 1 290 2 187 1 34 1 369 2 145 2 90 1 190 1 99 1 373 2 377 1 43 6 243 1 300 1 
77 2 335 1 78 1 198 1 318 1 203 2 360 1 179 1 206 1 287 1 120 1 141 2 142 1 229 1 289 1 144 1 124 3 211 2 87 1 126 1 62 2 94 1 350 3 171 1 296 2 71 1 241 1 334 1 
75 1 194 2 198 2 190 1 326 1 301 1 179 1 287 2 141 2 210 1 12 1 144 2 370 1 
75 1 194 1 176 1 359 1 198 4 190 1 318 1 301 1 287 4 141 1 254 1 9 1 144 4 
75 1 194 2 38 1 198 2 190 1 18 1 281 1 319 1 266 1 287 2 141 1 12 1 144 2 32 1 
75 1 194 1 287 1 198 1 104 1 138 1 144 1 318 1 39 1 252 1 
75 1 194 1 198 2 190 1 216 1 301 1 287 2 363 1 141 1 298 1 144 2 
75 2 194 2 359 1 198 5 190 2 318 1 216 1 282 1 301 1 266 1 287 5 141 3 254 1 9 1 166 1 144 4 
75 2 194 2 359 1 198 5 190 2 318 1 216 1 282 1 301 1 266 1 287 5 85 1 141 3 254 1 9 1 144 4 
75 1 194 1 145 2 190 1 198 1 262 1 318 1 226 1 253 1 141 1 287 1 255 1 268 2 377 1 12 1 312 1 144 1 34 1 
75 1 194 2 198 1 190 1 200 1 281 1 319 1 266 1 287 1 141 1 12 1 144 1 370 1 
322 1 80 1 255 1 330 1 56 1 
126 1 335 1 175 1 107 1 80 1 94 1 350 2 309 1 322 2 162 1 183 1 142 1 255 1 56 2 330 2 124 2 45 1 304 1 74 1 
322 1 145 1 80 1 196 1 268 1 56 1 256 1 280 1 34 1 
80 1 45 1 74 1 
218 1 308 1 33 1 374 1 
132 1 261 1 69 1 308 1 258 1 33 1 374 1 
265 1 143 1 69 1 
88 1 261 1 348 1 158 1 308 1 294 1 374 1 151 2 132 3 69 3 258 1 33 1 
181 1 132 2 261 1 69 2 308 1 258 1 33 1 374 1 259 1 
55 1 307 1 132 1 261 1 121 1 69 1 158 1 308 1 39 1 258 1 252 1 
132 1 261 1 69 1 158 1 308 1 258 1 374 1 
132 1 261 1 69 1 158 1 258 1 33 1 374 2 
261 2 110 1 158 1 308 1 28 1 374 1 353 1 132 2 69 2 258 2 
47 1 307 1 261 1 158 1 308 2 374 1 181 2 132 3 103 1 69 3 258 1 33 1 231 1 
261 1 158 1 308 1 138 1 327 1 39 2 337 1 252 1 374 1 181 1 55 1 132 2 69 2 258 1 33 1 
307 1 261 2 158 1 308 2 374 1 181 2 219 1 132 4 103 1 69 4 258 2 33 1 259 1 
132 1 261 1 69 1 158 1 308 1 258 1 33 1 374 1 
307 1 261 1 348 1 308 3 96 1 294 1 374 2 151 1 181 2 132 4 103 1 69 4 258 1 33 2 
261 1 158 1 308 1 83 1 283 1 374 1 181 1 132 2 69 2 258 1 33 1 291 1 
261 1 348 2 158 1 308 1 294 1 374 1 151 2 132 3 69 3 303 1 258 1 33 1 
116 1 89 2 275 1 308 2 
237 1 132 1 261 1 69 1 158 1 258 1 
181 1 47 1 132 2 261 1 69 2 158 1 308 1 258 1 33 1 374 1 
24 1 
132 1 261 1 69 1 158 1 308 1 258 1 33 1 374 1 
151 1 181 1 47 1 132 3 261 1 69 3 158 1 308 1 258 1 33 1 374 1 
307 1 103 1 308 1 96 1 
308 1 374 1 

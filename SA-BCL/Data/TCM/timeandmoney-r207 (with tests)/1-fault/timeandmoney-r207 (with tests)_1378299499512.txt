#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 312 (249,300) (249,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 312 (249,300) (249,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 312 (249,300) (249,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 312 (249,300) (249,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 1 44 1 190 1 159 1 15 1 300 1 82 1 312 1 40 1 337 1 249 1 42 1 69 1 
252 1 82 1 44 1 190 1 312 1 40 1 337 1 249 1 159 1 15 1 42 1 69 1 300 1 
252 1 82 1 44 1 190 1 312 1 40 1 337 1 249 1 159 1 15 1 42 1 69 1 300 1 
252 1 82 1 44 1 190 1 312 1 40 1 337 1 249 1 159 1 15 1 42 1 69 1 300 1 
253 1 44 1 98 1 190 1 374 3 289 2 159 4 15 4 309 1 266 1 210 3 377 1 312 1 217 2 40 1 337 1 42 1 114 1 
252 1 189 1 253 1 44 1 190 1 159 2 15 2 309 1 82 1 210 1 312 1 141 1 272 1 337 1 42 1 295 1 
252 1 317 1 253 1 44 2 190 2 98 1 374 1 289 1 159 3 15 3 309 1 210 2 42 1 
252 1 253 1 44 2 98 3 308 1 47 1 289 4 159 9 309 1 266 1 210 5 312 1 337 1 317 1 144 1 190 2 374 7 195 1 15 9 377 1 217 2 40 1 42 1 114 1 
252 1 253 1 44 2 98 3 308 1 47 1 289 4 159 9 309 1 266 1 210 5 312 1 337 1 317 1 144 1 190 2 374 7 195 1 15 9 377 1 217 2 40 1 42 1 114 1 
129 1 60 1 1 1 
129 1 366 2 304 1 
119 2 112 2 306 2 187 2 321 2 288 1 256 2 353 1 
357 1 134 1 306 2 48 1 288 1 256 2 78 1 117 1 231 1 49 1 163 1 50 1 119 2 208 1 103 1 265 1 83 1 187 3 52 1 105 1 32 1 296 1 10 2 371 1 146 1 321 3 124 2 344 1 301 1 64 2 112 2 171 1 199 1 172 1 353 1 251 2 222 2 
119 1 112 1 97 1 306 1 187 1 321 1 288 1 326 1 256 1 339 1 
132 1 60 1 204 1 321 1 290 1 297 1 256 1 129 1 233 1 187 1 216 1 273 1 338 1 339 1 
60 1 204 1 306 1 321 1 290 1 297 1 256 1 119 1 129 1 112 1 233 1 187 1 216 2 273 2 339 1 
86 1 286 1 99 1 216 1 273 1 
129 1 60 1 158 1 286 1 99 1 254 1 216 2 273 2 
286 1 216 1 273 1 
97 1 99 1 306 1 321 1 288 1 256 1 119 1 112 1 187 1 216 1 326 1 273 1 339 1 354 1 
129 1 
129 1 60 1 158 1 286 1 99 1 216 2 273 2 181 1 
166 1 8 1 60 1 158 1 11 1 99 2 286 2 279 2 192 1 170 1 196 1 129 1 22 1 216 5 34 2 273 5 188 1 143 2 236 1 
1 1 353 1 
306 1 321 2 256 2 119 1 112 1 187 2 313 1 353 2 380 1 
62 1 100 1 328 1 
176 1 10 1 134 1 146 1 321 1 124 1 117 1 103 1 83 1 187 1 52 1 199 1 172 1 32 1 353 1 222 1 
10 1 134 1 146 1 306 1 321 2 124 1 256 1 117 1 119 1 128 1 103 1 83 1 52 1 187 2 199 1 32 1 172 1 221 1 328 1 222 1 
119 3 128 1 112 1 306 3 187 3 321 3 256 3 353 1 
119 1 306 1 187 1 321 1 326 1 256 1 339 1 
119 1 112 1 306 1 187 1 321 1 313 1 256 1 339 1 380 1 
357 1 202 1 204 1 134 1 306 3 48 1 290 1 288 1 256 3 117 1 231 1 49 1 50 1 119 3 103 1 265 1 83 1 233 1 52 1 187 4 32 1 273 1 339 1 10 1 371 1 146 1 321 4 124 1 297 1 344 1 128 1 301 1 64 1 112 2 171 1 216 1 199 1 172 1 379 1 353 1 221 1 251 2 380 1 222 1 
132 1 119 1 128 1 306 1 187 2 321 2 256 2 353 1 122 1 
156 1 202 1 204 1 306 3 321 3 297 1 290 1 256 3 119 3 129 1 128 2 112 1 233 1 187 3 216 1 273 1 339 1 221 1 380 1 
62 1 119 2 128 1 112 1 306 2 187 2 321 2 256 2 328 1 380 1 
10 1 134 1 146 1 321 1 124 1 117 1 103 1 83 1 187 1 52 1 199 1 172 1 32 1 353 1 222 1 
10 1 134 1 146 1 321 1 124 1 117 1 6 1 335 1 103 1 83 1 187 1 52 1 199 1 353 1 222 1 
357 1 100 2 76 1 78 2 231 2 49 1 50 1 81 1 265 1 209 1 107 1 344 1 14 1 62 2 242 1 281 1 154 1 197 1 64 4 171 1 352 1 327 1 251 2 328 2 
119 1 204 1 306 1 187 1 321 1 361 1 256 1 339 1 
132 1 306 4 321 5 150 1 256 5 21 1 119 4 128 2 112 1 187 5 353 1 221 1 122 1 380 1 
119 2 306 2 187 2 321 2 361 1 326 1 256 2 339 1 
329 1 212 1 
329 1 212 1 
135 1 67 1 
135 1 67 1 
135 1 67 1 
329 1 157 1 212 1 
329 1 157 1 212 1 
329 1 212 1 149 1 
329 2 168 1 212 2 2 1 135 1 67 1 
329 1 157 1 212 1 
329 1 212 1 19 1 
329 1 212 1 19 1 
329 1 212 1 19 1 
329 2 25 1 318 1 133 2 212 2 2 1 46 2 101 2 152 1 375 1 129 1 38 1 139 2 93 1 23 3 271 2 216 2 273 2 35 1 
329 1 306 2 46 1 101 1 256 2 264 1 119 2 139 1 269 1 271 1 187 2 273 1 314 1 57 1 169 1 212 1 321 2 149 1 343 1 93 1 23 1 216 1 41 1 353 1 
312 1 40 1 337 1 
189 1 312 1 337 1 
189 1 40 2 325 1 337 3 378 1 274 1 
189 1 370 1 40 1 325 1 337 2 378 1 
189 1 40 1 325 1 337 2 378 2 
158 1 286 1 99 4 287 1 362 2 5 1 269 1 294 2 34 1 54 2 273 5 366 3 85 1 143 1 60 1 169 1 108 1 279 1 192 1 110 1 373 1 14 1 170 3 242 1 281 1 22 2 129 2 131 1 216 5 41 1 352 1 304 1 
158 1 286 6 99 7 287 2 136 1 362 6 292 1 79 1 31 1 294 6 34 2 273 9 366 9 143 2 368 1 86 5 60 1 169 4 108 1 279 2 192 1 373 2 14 3 170 8 196 1 242 3 281 3 348 1 22 6 129 5 131 3 216 9 352 3 304 3 284 5 
99 2 287 1 362 2 5 1 294 2 34 1 54 1 273 3 85 1 366 4 143 1 60 1 169 1 279 1 373 1 14 1 170 3 196 1 242 1 281 1 129 3 22 2 131 1 216 3 352 1 304 2 
99 3 287 1 362 4 79 1 5 1 31 1 294 4 34 1 54 2 273 4 366 7 85 1 143 1 368 1 60 1 169 2 279 1 373 1 14 2 170 5 196 1 242 2 281 2 129 4 22 4 131 2 216 4 352 2 304 3 
1 1 146 1 53 1 
146 1 194 1 
278 1 
103 1 146 1 
103 1 39 1 177 1 146 3 53 2 117 1 
103 1 146 1 117 1 
363 1 146 1 
237 1 107 2 178 1 27 1 88 2 360 1 78 4 231 3 161 1 242 1 120 1 245 1 209 3 64 7 94 1 352 1 200 1 
237 1 107 2 178 1 27 1 88 2 360 1 78 4 231 3 161 1 242 1 120 1 245 1 209 3 64 7 94 1 352 1 200 1 
237 1 107 2 178 1 27 1 88 2 360 1 78 4 231 3 161 1 137 1 242 1 120 1 245 1 209 3 64 7 94 1 352 1 200 1 
357 1 203 1 26 1 178 1 27 5 360 1 228 1 78 16 161 2 231 15 49 1 120 2 209 10 56 1 237 2 107 5 239 1 88 3 148 3 125 4 344 1 14 3 241 1 281 3 242 4 245 2 64 31 171 1 131 3 324 1 94 1 352 4 200 1 251 2 
357 2 178 1 27 1 255 1 360 1 160 1 78 5 231 4 161 1 49 2 120 1 209 4 56 1 237 1 107 3 88 2 344 2 242 1 245 1 64 9 171 2 94 1 352 1 251 4 
252 1 253 1 44 1 134 1 307 1 159 2 309 1 210 1 312 1 7 1 52 1 104 1 84 1 55 1 337 2 274 1 276 1 189 1 10 1 190 1 341 1 374 1 124 1 15 2 282 1 92 1 40 1 174 1 42 1 222 1 
252 1 253 1 44 1 134 1 307 1 159 3 309 1 210 1 336 1 312 1 7 1 52 1 84 1 55 1 337 2 274 1 189 1 10 1 190 1 341 1 12 1 124 1 374 2 15 3 282 1 92 1 376 1 40 1 174 1 222 1 
252 1 253 1 134 1 307 1 159 2 309 1 210 1 336 1 52 1 312 1 84 1 337 2 274 1 189 1 10 1 341 1 12 1 124 1 374 2 15 2 282 1 92 1 40 1 174 1 222 1 
252 2 44 1 10 1 190 1 134 1 341 2 146 1 307 2 124 1 259 1 180 1 159 1 291 1 15 1 347 1 103 1 376 1 52 1 199 1 364 1 302 1 174 2 222 1 
252 1 44 1 134 1 307 1 159 1 312 1 7 1 52 1 104 1 84 1 55 1 337 2 274 1 189 1 10 1 190 1 341 1 12 1 124 1 15 1 282 1 92 1 40 1 174 1 42 1 222 1 
225 1 
132 1 331 2 286 6 134 1 179 2 3 1 290 1 103 1 233 1 52 1 187 1 338 1 339 1 143 1 10 2 60 1 238 1 109 1 146 1 192 1 297 1 18 1 22 2 244 1 199 2 248 2 304 2 68 2 70 1 158 3 204 1 73 1 259 1 256 1 80 2 270 4 364 1 34 1 273 5 366 2 365 1 316 2 279 1 321 1 373 1 124 2 214 1 170 2 90 2 129 2 322 1 216 5 173 1 96 1 222 2 
132 1 158 1 204 1 331 1 286 2 109 1 321 1 297 1 290 1 256 1 181 1 18 1 270 2 233 1 187 1 216 3 273 3 339 1 173 1 365 1 96 1 338 1 
132 1 204 1 158 1 286 1 290 1 256 1 181 1 233 1 270 3 187 1 273 3 338 1 365 1 339 1 316 1 60 1 109 1 321 1 297 1 18 1 129 1 216 3 96 1 173 1 
132 1 158 1 204 1 331 1 286 2 179 1 290 1 256 1 181 1 233 1 270 3 187 1 273 3 338 1 365 1 339 1 316 1 60 1 109 1 321 1 297 1 18 1 129 1 216 3 96 1 173 1 
132 1 158 3 204 1 223 1 331 4 286 7 179 4 4 1 290 1 256 1 181 1 80 2 233 1 270 6 187 1 34 1 273 5 338 1 365 1 339 1 143 1 316 4 320 1 60 5 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 22 1 129 5 322 1 130 1 215 1 216 5 248 2 96 1 173 1 304 2 68 2 
132 1 158 2 204 1 331 2 286 4 179 2 3 1 290 1 256 1 80 2 233 1 270 4 187 1 34 1 273 4 366 2 338 1 365 1 339 1 143 1 316 2 60 1 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 129 2 22 1 322 1 216 4 248 2 96 1 173 1 304 2 68 2 
132 1 158 2 204 1 331 2 286 4 179 2 290 1 256 1 80 2 233 1 270 4 187 1 34 1 273 4 338 1 365 1 339 1 143 1 316 2 60 1 320 1 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 129 1 22 1 322 1 130 1 215 1 216 4 248 2 96 1 173 1 304 2 68 2 
132 1 158 2 204 1 331 2 286 4 179 2 290 1 256 1 80 2 233 1 270 4 187 1 34 1 273 4 338 1 365 1 339 1 143 1 316 2 60 1 320 1 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 129 1 22 1 322 1 130 1 215 1 216 4 248 2 96 1 173 1 304 2 68 2 
132 1 158 2 204 1 331 2 286 4 179 2 226 2 290 1 256 1 229 1 80 2 140 2 233 1 270 4 187 1 34 1 273 4 366 2 338 1 365 1 339 1 58 1 143 1 316 2 60 1 109 1 279 1 192 1 321 1 297 1 170 1 17 1 18 1 129 1 22 1 322 1 130 1 216 4 96 1 173 1 68 2 
132 1 158 2 204 1 331 3 286 5 179 3 4 1 290 1 256 1 80 2 233 1 270 5 187 1 34 1 273 4 338 1 365 1 339 1 143 1 316 3 60 1 320 1 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 129 1 22 1 322 1 130 1 215 1 216 4 248 2 96 1 173 1 304 2 68 2 
132 1 158 2 204 1 331 3 286 5 179 3 4 1 290 1 256 1 80 2 233 1 270 5 187 1 34 1 273 4 338 1 365 1 339 1 143 1 316 3 60 1 320 1 109 1 279 1 192 1 321 1 214 1 297 1 170 1 90 2 18 1 129 1 22 1 322 1 130 1 215 1 216 4 248 2 96 1 173 1 304 2 68 2 
132 1 331 2 286 4 179 2 226 2 3 1 290 1 140 2 233 1 187 1 339 1 338 1 143 1 60 1 109 1 192 1 297 1 17 1 18 1 22 1 68 2 204 1 158 2 256 1 80 2 270 4 34 1 273 4 365 1 366 2 316 2 279 1 321 1 170 1 129 1 322 1 216 4 173 1 96 1 
357 1 1 1 178 1 360 1 100 1 78 3 161 1 231 3 49 1 50 1 265 1 209 2 107 2 88 1 344 1 62 1 154 1 242 1 245 1 64 6 171 1 94 1 352 1 353 2 328 1 251 2 
357 2 71 1 203 1 27 1 100 11 262 1 261 1 78 8 231 6 49 2 50 2 311 1 209 2 265 1 296 1 371 1 107 1 191 1 239 1 148 3 125 3 344 2 14 2 62 4 281 1 242 1 64 14 171 2 131 2 352 2 353 1 251 4 328 11 
357 1 71 1 176 1 134 1 74 1 306 1 206 1 256 1 117 1 78 1 231 1 49 1 50 1 119 1 103 1 83 1 265 1 52 1 187 2 32 1 296 1 10 1 371 1 146 1 321 2 124 1 344 1 62 1 128 1 64 2 171 1 199 1 66 1 172 1 353 1 221 1 222 1 251 2 
285 2 134 2 178 1 100 7 231 10 49 3 50 3 103 2 187 3 52 2 296 1 10 3 107 4 12 1 146 2 240 2 111 1 344 3 14 2 62 7 242 3 346 2 301 2 245 1 243 2 64 20 199 1 352 3 353 2 251 6 357 3 71 1 306 1 27 4 360 1 257 1 256 1 117 2 78 10 161 1 119 1 265 3 83 2 209 8 32 2 371 1 88 1 321 3 124 3 281 2 128 1 171 3 131 2 94 1 172 2 220 1 221 1 222 3 328 7 
357 2 224 1 134 2 306 1 258 1 256 1 259 1 263 1 78 1 231 1 49 2 163 2 119 1 50 2 185 1 103 2 265 2 187 1 52 2 364 1 276 1 296 1 10 8 167 1 371 1 12 1 146 3 321 1 124 7 344 2 154 1 128 1 64 2 171 2 323 1 199 2 355 1 222 8 251 4 
357 1 71 1 306 1 100 1 256 1 78 1 231 2 49 1 119 1 50 1 209 1 265 1 187 1 107 1 87 1 321 1 344 1 14 1 62 1 281 1 242 1 112 1 64 3 171 1 131 1 352 1 328 1 380 1 251 2 
357 1 27 1 100 1 76 1 344 1 14 1 78 2 49 1 62 1 154 1 50 1 209 1 64 2 265 1 171 1 352 1 328 1 251 2 
357 1 107 1 100 1 344 1 231 2 49 1 62 1 154 1 50 1 281 1 242 1 81 1 209 1 64 2 265 1 171 1 328 1 251 2 
357 1 27 1 100 2 78 2 231 2 49 1 50 1 265 1 209 2 107 1 14 1 344 1 62 2 154 1 281 1 242 1 64 4 131 1 171 1 352 1 251 2 328 2 
357 1 27 1 100 1 76 1 344 1 14 1 78 2 49 1 62 1 185 1 50 1 209 1 64 2 265 1 171 1 352 1 328 1 251 2 
357 1 107 1 100 1 344 1 231 2 49 1 62 1 185 1 50 1 281 1 242 1 81 1 209 1 64 2 265 1 171 1 328 1 251 2 
357 1 27 1 100 2 78 2 231 2 49 1 50 1 185 1 265 1 209 2 107 1 14 1 344 1 62 2 281 1 242 1 64 4 131 1 171 1 352 1 251 2 328 2 
357 1 27 1 100 2 78 2 231 2 49 1 50 1 265 1 209 2 107 1 14 1 344 1 62 2 281 1 242 1 64 4 131 1 171 1 352 1 251 2 328 2 
357 1 134 1 78 1 117 1 231 1 49 1 50 1 103 1 83 1 265 1 52 1 187 1 32 1 296 1 10 1 371 1 146 1 321 1 124 1 344 1 301 1 64 2 171 1 199 1 172 1 353 1 222 1 251 2 
357 1 134 1 78 1 117 1 231 1 49 1 50 1 6 1 103 1 335 1 83 1 265 1 52 1 187 1 296 1 10 1 371 1 146 1 321 1 124 1 344 1 64 2 171 1 199 1 351 1 353 1 222 1 251 2 
357 1 71 1 27 1 100 2 78 2 231 2 49 1 50 1 265 1 209 2 107 1 14 1 344 1 62 2 281 1 242 1 64 4 131 1 171 1 352 1 251 2 328 2 
357 1 285 1 134 1 27 1 100 2 78 2 117 1 231 2 49 1 50 1 103 1 209 2 83 1 265 1 52 1 187 1 32 1 276 1 10 1 107 1 146 1 321 1 124 1 14 1 344 1 62 2 242 1 281 1 301 1 64 4 171 1 131 1 172 1 352 1 328 2 222 1 251 2 
356 1 357 1 71 1 306 1 27 1 100 1 256 1 78 2 231 1 49 1 119 1 50 1 209 1 265 1 187 1 321 1 344 1 14 1 62 1 242 1 281 1 112 1 64 3 171 1 131 1 352 1 380 1 251 2 328 1 
357 2 203 1 205 1 27 3 255 1 78 9 231 10 184 1 49 2 186 2 310 1 209 6 268 1 107 3 239 1 89 1 148 1 125 2 344 2 14 3 299 2 127 1 281 3 242 3 64 19 171 2 131 3 283 1 352 3 251 4 
357 3 205 2 27 2 333 1 255 1 78 14 230 1 231 12 184 1 49 3 186 4 310 2 209 4 267 1 56 2 107 2 239 2 89 1 148 2 125 2 344 3 14 3 299 1 126 1 345 1 63 1 242 2 127 1 281 2 64 26 171 3 131 3 352 3 251 6 
357 3 203 1 178 1 205 2 27 4 360 1 333 1 255 1 230 1 78 20 161 1 231 21 184 1 49 3 118 1 186 4 310 1 209 8 267 1 56 1 107 4 239 3 88 1 89 1 148 3 125 4 344 3 14 4 299 1 126 1 345 1 63 1 127 1 281 4 242 5 245 1 64 41 171 3 131 4 283 1 94 1 352 5 251 6 
357 4 203 1 178 1 205 2 27 3 360 1 333 1 255 1 230 1 78 20 161 1 231 18 184 1 49 4 118 1 186 4 310 1 209 7 267 1 56 2 107 4 239 3 88 1 89 1 148 3 125 4 344 4 14 4 299 1 126 1 345 1 63 1 127 1 281 3 242 4 245 1 64 38 171 4 131 4 283 1 94 1 352 5 251 8 
357 2 203 2 178 1 205 1 27 7 360 1 333 1 255 1 230 1 262 2 78 27 161 1 231 25 184 1 49 2 186 4 310 1 209 14 267 1 56 1 107 7 239 2 88 1 89 1 148 4 125 4 344 2 14 7 299 1 126 1 345 1 63 1 127 1 281 7 242 8 245 1 64 52 171 2 131 7 94 1 352 8 251 4 
329 1 25 1 318 1 277 1 139 1 212 1 2 1 46 1 271 1 101 1 
149 1 57 1 
175 1 329 1 369 1 139 1 212 1 46 1 271 1 101 1 234 1 
329 1 25 1 318 1 133 1 212 1 2 1 46 1 101 1 152 1 129 1 38 1 139 1 93 1 23 2 271 1 216 1 273 1 35 1 
329 1 25 1 318 1 133 1 212 1 2 1 46 1 101 1 152 1 129 1 38 1 139 1 93 1 23 2 271 1 216 1 273 1 35 1 
329 1 25 1 318 1 133 1 212 1 2 1 46 1 101 1 152 1 129 1 38 1 139 1 93 1 23 2 271 1 216 1 273 1 35 1 
340 1 157 1 168 1 
340 1 157 1 168 1 
350 1 19 1 
168 1 350 1 19 1 
264 1 314 1 
329 1 133 1 99 1 46 1 306 2 101 1 256 2 264 1 119 2 139 1 269 1 187 2 271 1 142 1 273 1 314 1 35 1 57 1 169 1 212 1 321 2 149 1 343 1 23 1 216 1 41 1 353 1 
340 1 157 1 
168 1 350 1 19 1 
357 1 71 1 134 1 224 1 334 1 256 2 78 1 207 1 231 1 49 1 163 2 50 1 103 1 265 1 164 1 52 1 187 2 296 1 10 2 371 1 146 1 342 1 321 2 124 2 344 1 64 2 171 1 246 1 323 1 222 2 251 2 
189 1 10 2 305 1 134 1 12 1 124 2 282 1 92 1 312 1 52 1 7 1 40 1 337 2 250 1 106 1 274 1 174 1 276 1 222 2 
189 1 10 1 305 1 134 1 12 1 124 1 260 1 282 1 92 1 312 1 7 1 52 1 40 1 337 2 274 1 174 1 222 1 
10 1 134 1 146 1 124 1 259 1 51 1 103 1 52 1 199 1 364 1 250 1 174 1 302 1 222 1 
189 1 10 1 305 1 134 1 12 1 124 1 282 1 92 1 312 1 52 1 7 1 40 1 337 2 250 1 106 1 274 1 174 1 222 1 
182 1 
8 1 129 1 22 1 60 1 1 1 11 1 170 1 
158 1 286 1 34 1 273 1 366 1 143 1 60 1 279 1 192 1 214 1 170 1 90 1 22 1 129 2 216 1 248 1 304 1 
332 2 134 3 286 5 227 2 293 1 103 3 232 1 52 4 53 2 294 6 143 4 8 1 10 3 60 2 11 1 146 10 240 2 192 4 193 2 147 2 297 2 14 2 194 3 242 2 349 1 22 8 244 1 199 1 155 2 352 2 304 6 158 3 362 6 117 3 162 1 363 2 34 4 273 5 165 2 366 12 276 1 372 1 279 4 373 2 124 3 170 9 281 2 129 8 39 1 131 2 216 5 218 2 95 2 222 3 
0 1 158 1 286 1 362 5 230 1 267 1 294 5 34 2 165 1 273 1 366 6 143 2 60 2 239 1 279 2 192 2 193 2 148 1 373 1 125 1 14 2 126 1 345 1 170 8 63 1 281 2 242 2 129 5 22 5 244 1 131 2 216 1 219 1 352 2 304 3 
97 1 306 1 360 1 288 1 256 1 161 1 119 1 187 1 34 1 165 1 273 1 339 1 143 1 279 1 192 1 321 1 193 2 170 2 242 1 22 2 245 1 112 1 215 1 24 1 216 1 326 1 352 2 354 1 
8 1 60 1 11 1 279 1 192 1 170 1 22 1 129 1 34 1 143 1 
240 1 193 2 14 2 362 5 170 5 281 2 242 2 22 5 129 5 131 2 294 5 165 1 352 2 366 10 304 5 
129 1 60 1 158 1 286 1 216 1 273 1 
70 1 72 1 158 2 134 1 286 4 259 1 293 2 103 1 52 1 364 1 34 2 273 3 211 1 143 2 10 4 238 1 372 1 146 1 279 2 192 1 124 4 373 2 170 2 196 1 22 2 244 2 199 2 216 3 222 4 
357 1 134 1 306 2 48 1 288 1 256 2 117 1 231 1 49 1 119 2 50 1 103 1 83 1 265 1 187 3 52 1 32 1 10 1 371 1 146 1 321 3 124 1 344 1 301 1 64 1 112 2 171 1 199 1 172 1 353 1 251 2 222 1 
60 2 279 1 88 1 192 1 373 1 362 2 170 1 22 2 129 4 244 1 294 2 34 1 366 4 304 2 143 1 
139 1 101 1 183 1 
139 1 101 1 183 1 
264 1 25 1 358 1 139 1 101 1 
139 1 101 1 183 1 
359 1 139 1 101 1 
359 1 139 1 101 1 
359 1 139 1 101 1 
139 1 101 1 
329 1 212 1 
357 2 107 2 178 1 88 1 27 1 360 1 344 2 78 4 231 4 161 1 49 2 242 1 245 1 64 8 209 3 171 2 94 1 352 1 56 1 251 4 
1 1 107 2 178 1 88 1 360 1 78 3 231 3 161 1 242 1 245 1 209 2 64 6 94 1 352 1 
357 1 107 1 27 1 344 1 14 1 78 2 231 2 102 1 49 1 242 1 281 1 209 2 64 4 171 1 131 1 352 1 251 2 
203 1 107 1 239 1 27 1 148 1 125 2 14 1 78 3 231 4 242 1 281 1 64 7 209 2 131 1 352 1 
357 2 203 1 178 1 27 4 360 1 78 11 261 1 262 1 161 2 231 12 30 1 49 2 209 9 56 2 107 5 88 1 148 2 125 2 14 2 344 2 281 2 242 3 245 2 64 23 131 2 171 2 94 1 352 3 251 4 
64 1 125 1 231 1 
64 1 148 1 78 1 
357 1 107 2 240 1 27 1 344 1 14 1 78 3 231 3 49 1 102 1 281 1 242 1 64 6 209 3 171 1 131 1 352 1 251 2 
357 1 27 1 255 1 230 1 78 6 231 6 49 1 209 2 267 1 107 1 239 1 148 1 125 1 344 1 14 2 126 1 345 1 63 1 281 2 242 2 64 12 171 1 131 2 352 2 251 2 
107 1 27 1 360 1 78 3 231 3 161 1 242 1 245 1 64 6 209 2 352 1 
357 1 107 1 178 1 27 1 344 1 78 1 161 1 30 1 231 2 49 1 245 1 209 2 64 3 171 1 94 1 56 1 251 2 
357 1 107 3 27 2 255 1 360 1 344 1 78 5 161 2 231 5 49 1 242 2 245 2 209 5 64 10 171 1 24 1 352 2 251 2 
357 1 27 1 255 1 344 1 14 1 78 2 49 1 64 2 209 1 171 1 352 1 251 2 
357 1 107 1 27 1 255 1 344 1 14 1 78 2 231 2 49 1 242 1 281 1 209 2 64 4 171 1 131 1 352 1 251 2 
357 3 107 1 27 1 255 1 344 3 78 1 30 1 231 2 161 1 49 3 245 1 64 3 209 2 171 3 283 1 56 1 251 6 
357 5 26 1 203 1 178 1 27 5 360 2 255 1 228 1 78 16 161 3 30 1 231 18 102 1 49 5 209 12 56 2 107 7 239 1 88 1 148 3 125 4 344 5 14 3 281 3 242 5 245 3 64 34 171 5 131 3 324 1 283 1 94 1 352 5 251 10 
357 1 107 2 239 1 178 1 88 1 360 1 255 1 148 1 125 1 344 1 78 4 230 1 161 1 231 4 49 1 242 1 245 1 209 2 64 8 171 1 94 1 352 1 251 2 
357 2 203 1 178 1 27 1 360 1 255 1 230 1 78 6 161 1 231 5 49 2 102 1 209 3 107 2 239 1 88 1 148 1 125 2 344 2 14 1 242 1 245 1 64 11 171 2 131 1 94 1 352 2 251 4 
357 3 178 1 27 1 360 1 255 1 230 1 78 9 161 1 231 10 102 1 49 3 209 4 267 1 56 1 107 3 239 1 88 1 148 1 125 1 344 3 14 2 126 1 345 1 63 1 281 2 242 3 245 1 64 19 171 3 131 2 94 1 352 3 251 6 
357 3 178 1 27 2 360 1 255 1 230 1 78 10 161 1 231 7 102 1 49 3 209 5 267 1 56 1 107 3 239 1 88 1 148 1 125 1 344 3 14 2 126 1 345 1 63 1 281 1 242 2 245 1 64 17 171 3 131 2 94 1 352 3 251 6 
357 1 107 2 239 1 178 1 88 1 360 1 255 1 148 1 125 1 344 1 78 4 230 1 161 1 231 4 49 1 242 1 245 1 209 2 64 8 171 1 94 1 352 1 251 2 
357 1 27 1 255 1 230 1 78 6 231 6 49 1 209 2 267 1 107 1 239 1 148 1 125 1 344 1 14 2 126 1 345 1 63 1 281 2 242 2 64 12 171 1 131 2 352 2 251 2 
357 4 178 1 27 2 360 1 255 1 230 1 78 10 161 1 231 8 102 1 49 4 209 5 267 1 56 2 107 3 239 1 88 1 148 1 125 1 344 4 14 2 126 1 345 1 63 1 281 1 242 2 245 1 64 18 171 4 131 2 94 1 352 3 251 8 
357 4 27 3 255 1 230 1 78 9 231 7 49 4 209 6 267 1 56 2 107 3 239 1 148 1 125 1 344 4 14 3 126 1 345 1 63 1 281 2 242 2 64 16 171 4 131 3 283 1 352 3 251 8 
107 3 178 1 27 3 360 1 78 3 231 4 161 3 242 1 245 3 64 7 209 6 94 2 352 1 
357 4 178 1 27 1 360 1 255 1 230 1 78 10 161 1 231 8 49 4 209 4 267 1 56 2 107 3 239 1 88 1 148 1 125 1 344 4 14 2 126 1 345 1 63 1 281 1 242 2 245 1 64 18 171 4 131 2 283 1 94 1 352 3 251 8 
132 1 187 1 321 1 256 1 151 1 353 1 122 1 
132 1 330 1 36 1 321 1 298 1 256 1 151 1 37 1 187 1 353 1 275 1 122 1 
103 1 10 1 1 1 134 1 146 1 52 1 199 1 364 1 124 1 259 1 222 1 
10 1 134 1 146 1 306 1 321 2 124 1 256 1 117 1 119 1 128 1 103 1 83 1 52 1 187 2 199 1 32 1 353 1 222 1 
10 1 204 1 134 1 146 3 306 2 321 2 124 1 290 1 256 2 117 2 119 1 293 1 128 1 103 2 363 1 83 1 52 1 187 2 218 1 32 1 339 1 353 1 222 1 
45 1 204 1 134 1 306 2 290 1 256 2 117 2 293 1 119 1 6 1 103 2 83 1 363 1 187 2 52 1 339 1 10 2 146 3 321 2 124 2 128 1 218 1 353 1 222 2 
43 1 45 1 134 1 286 1 117 1 293 1 103 1 363 1 52 1 53 1 273 2 10 3 60 1 146 4 124 3 297 1 194 1 20 1 129 1 216 2 199 1 218 1 222 3 
10 3 45 1 60 1 286 1 134 1 146 4 124 3 297 1 117 1 194 1 293 1 129 1 103 1 363 1 52 1 199 1 216 2 218 1 53 1 95 1 273 2 222 3 
10 1 167 1 134 1 52 1 124 1 222 1 
10 7 167 1 224 1 134 2 12 1 146 3 124 6 258 1 263 1 117 1 163 1 138 1 103 2 39 1 113 1 52 3 199 2 235 1 276 1 355 1 222 7 
357 2 71 1 285 1 134 1 178 1 306 1 360 1 100 1 256 1 78 3 117 1 231 3 161 1 207 1 49 2 50 2 119 1 103 1 209 2 83 1 265 2 52 1 187 2 32 1 276 1 10 1 107 2 146 1 88 1 321 2 124 1 344 2 62 1 242 1 128 1 301 1 245 1 243 1 64 6 171 2 94 1 172 1 352 1 353 2 328 1 251 4 222 1 
158 1 332 1 99 1 286 2 227 1 53 1 34 2 273 3 143 2 8 1 10 1 60 1 11 1 372 1 279 2 146 2 192 2 147 1 124 1 297 1 194 1 170 1 129 1 22 1 199 1 216 3 95 1 222 1 
10 2 167 1 134 1 146 2 124 2 117 1 162 1 103 1 39 1 52 2 53 1 276 1 222 2 
10 4 45 1 145 1 134 1 146 1 124 4 259 1 103 1 52 1 199 1 364 1 276 1 222 4 
10 2 319 1 134 1 116 1 146 1 124 2 257 1 117 1 293 1 138 1 103 1 52 2 235 1 222 2 
189 1 92 1 10 1 134 1 312 1 52 1 199 1 124 1 337 1 222 1 
103 1 10 2 134 1 224 1 146 1 12 1 52 1 124 2 334 1 276 1 222 2 
10 5 145 1 224 1 134 2 146 3 124 4 259 1 258 1 293 1 103 2 52 2 199 1 364 1 276 1 222 5 355 1 
10 5 145 1 115 1 224 1 134 2 146 3 124 4 259 1 293 1 103 2 52 2 199 1 364 1 276 1 222 5 355 1 
10 1 134 1 146 1 306 1 321 2 124 1 256 1 117 1 119 1 128 1 6 1 103 1 83 1 52 1 187 2 199 1 353 1 222 1 
10 1 134 1 146 1 124 1 117 1 293 1 138 1 103 1 39 1 113 1 52 2 235 1 222 1 
91 1 213 1 13 1 353 1 367 1 
202 1 60 1 204 1 99 1 213 2 28 1 297 1 290 1 13 1 91 2 129 1 65 1 233 1 216 2 247 1 273 2 339 1 353 1 367 2 
213 1 342 1 321 1 13 1 256 1 164 1 246 1 187 1 367 1 
65 1 28 1 13 1 
309 1 253 1 1 1 210 1 
309 1 253 1 44 1 190 1 210 1 159 1 15 1 
252 1 341 1 159 1 
44 1 253 1 190 1 61 1 159 3 15 3 29 1 309 1 210 1 272 2 303 1 42 1 
309 1 253 1 44 1 190 1 210 1 217 1 374 1 159 2 15 2 
44 1 190 1 210 1 312 1 40 1 337 1 289 1 159 1 114 1 15 1 42 1 
253 1 44 1 190 1 210 1 159 1 15 1 42 1 
309 1 253 2 44 1 190 1 159 1 15 1 42 1 
59 1 253 1 44 2 190 2 123 1 159 2 15 2 210 1 42 1 315 1 
253 1 44 1 190 1 98 1 308 1 47 1 374 2 289 1 159 3 15 3 309 1 210 2 42 1 
189 1 253 1 44 1 190 1 374 1 159 2 15 2 198 1 309 1 210 1 312 1 40 1 337 2 42 1 274 1 
253 1 44 2 190 2 98 1 374 2 289 1 159 4 15 4 309 1 210 2 377 1 217 1 42 1 
309 1 253 1 44 1 190 1 210 1 159 1 15 1 42 1 
9 1 253 2 44 1 190 1 98 1 61 1 374 2 289 1 159 4 29 1 15 4 309 2 210 3 272 1 
253 1 44 1 190 1 374 1 159 2 77 1 15 2 195 1 309 1 210 1 33 1 42 1 
44 1 253 1 190 1 61 2 75 1 159 3 29 1 15 3 309 1 210 1 272 2 42 1 
280 2 210 2 16 1 201 1 
153 1 44 1 190 1 159 1 15 1 42 1 
309 1 253 1 44 1 190 1 210 1 47 1 374 1 159 2 15 2 42 1 
121 1 
309 1 253 1 44 1 190 1 210 1 159 1 15 1 42 1 
44 1 253 1 190 1 47 1 374 1 159 3 15 3 309 1 210 1 272 1 42 1 
9 1 98 1 210 1 289 1 
253 1 210 1 

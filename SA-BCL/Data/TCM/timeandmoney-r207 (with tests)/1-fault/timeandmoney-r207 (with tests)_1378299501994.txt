#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 41 338 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 41 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
339 2 363 1 193 1 92 1 239 7 196 1 32 2 8 1 247 1 217 3 104 1 76 1 79 2 60 1 135 1 222 1 223 5 62 9 111 1 140 4 376 9 160 1 88 1 378 1 
339 2 363 1 193 1 92 1 239 7 196 1 32 2 8 1 247 1 217 3 104 1 76 1 79 2 60 1 135 1 222 1 223 5 62 9 111 1 140 4 376 9 160 1 88 1 378 1 
339 2 363 2 193 1 194 1 92 2 239 6 69 1 32 2 8 1 247 2 35 1 217 3 104 1 279 1 76 1 79 2 60 1 135 1 222 1 223 5 62 9 208 1 140 4 376 9 160 1 88 1 23 1 378 2 
339 2 363 2 193 1 194 1 92 2 239 6 69 1 32 2 8 1 247 2 35 1 217 3 104 1 279 1 76 1 79 2 60 1 135 1 222 1 223 5 62 9 208 1 140 4 376 9 160 1 88 1 23 1 378 2 
339 2 363 2 193 1 194 1 92 2 239 7 69 1 32 2 8 1 247 2 35 1 217 4 104 1 279 1 76 1 79 2 60 1 135 1 222 1 223 6 62 10 208 1 140 5 376 10 160 1 88 1 23 1 378 2 
339 2 363 2 193 1 194 1 92 2 239 4 69 1 32 1 8 1 247 2 35 1 217 2 104 1 279 1 76 1 79 2 60 1 135 1 223 4 62 7 208 1 140 3 376 7 160 1 88 1 23 1 378 2 
339 1 363 1 92 1 79 1 193 1 60 1 239 3 222 1 223 3 62 4 32 2 140 2 160 1 376 4 8 1 247 1 217 1 104 1 
339 1 363 1 79 1 92 1 223 1 62 2 69 1 160 1 376 2 113 1 375 1 8 1 23 1 24 1 378 1 104 1 
339 2 79 2 135 1 239 1 223 2 62 3 140 1 160 1 376 3 8 1 378 1 217 1 104 1 
360 1 168 1 353 1 
360 1 156 2 73 1 
286 2 328 1 237 2 80 2 55 2 100 2 101 1 91 2 
121 1 123 1 215 2 237 2 238 1 328 1 246 2 55 2 248 2 216 1 100 3 153 1 174 1 101 1 304 1 177 1 37 1 219 1 36 2 106 1 78 1 80 2 84 1 256 1 180 1 225 1 286 2 85 1 214 1 377 1 141 1 44 1 64 1 318 2 143 1 91 3 188 1 
286 1 237 1 112 1 144 1 80 1 55 1 100 1 101 1 379 1 91 1 
144 1 80 1 267 1 270 1 168 1 61 1 207 1 130 1 199 1 360 1 100 1 162 1 303 1 91 1 
237 1 144 1 80 1 270 2 168 1 61 1 286 1 130 1 199 1 360 1 55 1 100 1 162 1 303 2 91 1 
20 1 270 1 291 1 303 1 276 1 
120 1 20 1 252 1 360 1 270 2 291 1 303 2 168 1 
270 1 291 1 303 1 
237 1 144 1 80 1 270 1 138 1 286 1 20 1 112 1 55 1 100 1 101 1 379 1 303 1 91 1 
360 1 
120 1 20 1 360 1 270 2 291 1 201 1 303 2 168 1 
218 1 119 1 120 1 39 1 356 1 81 2 269 1 28 1 270 5 146 1 242 1 168 1 335 2 347 1 20 2 367 2 360 1 291 2 303 5 
328 1 353 1 
124 1 237 1 80 2 67 1 286 1 328 2 55 1 100 2 91 2 
277 1 280 1 87 1 
177 1 36 1 106 1 323 1 238 1 328 1 85 1 246 1 248 1 377 1 216 1 141 1 100 1 64 1 174 1 91 1 
277 1 177 1 106 1 36 1 238 1 80 1 107 1 40 1 286 1 85 1 246 1 216 1 377 1 55 1 248 1 141 1 100 2 174 1 64 1 91 2 
321 1 237 1 134 1 80 5 67 1 267 1 40 2 107 1 83 1 286 4 328 1 55 4 100 5 91 5 
286 2 144 1 80 2 55 2 282 1 100 2 379 1 91 2 
286 3 328 1 237 1 80 3 55 3 40 1 100 3 91 3 
286 1 144 1 80 1 55 1 100 1 379 1 91 1 
286 1 124 1 237 1 144 1 80 1 67 1 55 1 100 1 91 1 
121 1 123 1 215 2 237 2 144 1 238 1 67 1 270 1 326 1 50 1 328 1 246 1 130 1 199 1 216 1 55 3 248 1 100 4 153 1 174 1 101 1 303 1 177 1 37 1 106 1 219 1 36 1 80 3 40 1 107 1 84 1 61 1 180 1 225 1 286 3 85 1 214 1 377 1 141 1 64 1 162 1 318 1 143 1 91 4 
321 1 286 1 328 1 80 2 267 1 55 1 40 1 100 2 91 2 
237 1 144 1 67 1 80 3 310 1 270 1 107 1 40 2 61 1 286 3 50 1 130 1 199 1 360 1 55 3 100 3 162 1 303 1 91 3 
277 1 237 1 280 1 67 1 80 2 40 1 286 2 55 2 100 2 91 2 
177 1 36 1 106 1 238 1 328 1 85 1 246 1 248 1 377 1 216 1 141 1 100 1 64 1 174 1 91 1 
177 1 36 1 106 1 324 1 136 1 328 1 85 1 246 1 248 1 377 1 216 1 100 1 64 1 174 1 91 1 
121 1 123 1 26 1 215 2 240 1 271 1 330 1 9 1 153 1 277 2 37 2 280 2 205 1 109 1 225 1 226 1 214 1 114 1 87 2 361 1 44 2 118 1 318 4 143 1 
286 1 144 1 130 1 80 1 55 1 100 1 282 1 91 1 
31 1 251 1 
31 1 251 1 
165 1 302 1 
165 1 302 1 
165 1 302 1 
31 1 179 1 251 1 
31 1 179 1 251 1 
31 1 105 1 251 1 
31 2 19 1 165 1 302 1 349 1 251 2 
31 1 179 1 251 1 
31 1 368 1 251 1 
31 1 368 1 251 1 
31 1 368 1 251 1 
234 1 191 1 270 1 346 1 6 1 31 1 328 1 51 1 170 1 55 2 100 2 303 1 251 1 105 1 281 1 80 2 14 1 311 1 157 1 257 1 286 2 210 1 294 1 91 2 
278 1 234 2 191 2 281 2 309 2 270 2 311 2 31 2 210 1 213 1 159 1 53 1 349 1 172 1 185 1 360 1 294 3 303 2 251 2 
363 1 92 1 247 1 
363 1 92 1 375 1 
263 1 68 1 169 1 363 3 375 1 247 2 
263 1 13 1 169 1 363 2 375 1 247 1 
263 1 169 2 363 2 375 1 247 1 
119 2 120 1 270 5 195 1 29 1 168 1 346 1 6 1 271 1 367 1 348 1 52 2 151 2 9 1 272 2 303 5 73 1 39 3 356 1 81 1 357 1 333 1 15 1 157 1 156 3 109 1 335 1 20 4 360 2 361 1 291 1 117 1 
119 6 120 1 364 1 265 1 270 9 242 1 195 3 29 2 346 4 168 1 271 3 301 1 367 2 52 6 151 6 9 3 173 1 303 9 73 3 276 5 202 5 178 1 39 8 356 1 81 2 357 2 333 1 156 9 109 3 335 2 20 7 287 1 360 5 361 3 291 6 
119 2 270 3 242 1 195 1 29 1 168 1 346 1 271 1 367 1 52 2 9 1 151 2 272 1 303 3 73 2 39 3 81 1 357 1 15 1 156 4 109 1 335 1 20 2 360 3 361 1 117 1 
119 4 364 1 270 4 242 1 195 2 29 1 168 1 346 2 271 2 301 1 367 1 52 4 151 4 9 2 272 2 173 1 303 4 73 3 39 5 81 1 357 1 15 1 156 7 109 2 335 1 20 3 360 4 361 2 117 1 
85 1 300 1 353 1 
85 1 329 1 
372 1 
85 1 174 1 64 1 
128 1 85 1 
85 1 174 1 
85 3 300 2 3 1 174 1 64 1 139 1 
154 1 37 3 167 1 205 2 48 1 325 1 327 1 109 1 245 2 98 1 259 1 361 1 161 1 118 3 231 1 44 4 318 7 
154 1 37 3 167 1 205 2 48 1 325 1 327 1 109 1 245 2 98 1 259 1 361 1 161 1 118 3 231 1 44 4 318 7 
154 1 37 3 167 1 205 2 48 1 325 1 327 1 109 1 245 2 98 1 259 1 99 1 361 1 161 1 118 3 231 1 44 4 318 7 
1 4 235 1 296 3 215 2 167 2 48 1 343 1 325 1 327 1 195 3 299 1 271 3 245 3 369 1 98 5 9 3 56 1 153 1 58 1 154 1 37 15 205 5 109 4 314 1 225 1 259 2 214 1 361 4 161 2 44 16 231 2 118 10 318 31 143 1 
154 1 37 4 215 4 167 1 205 3 325 1 327 1 299 1 109 1 225 2 245 2 63 1 98 1 259 1 214 2 370 1 361 1 161 1 118 4 231 1 44 5 153 2 318 9 143 2 
339 1 363 2 92 1 125 1 27 1 239 1 68 1 246 1 72 1 150 1 8 1 247 1 248 1 352 1 104 1 36 1 106 1 79 1 223 1 224 1 62 2 158 1 376 2 160 1 375 1 359 1 377 1 261 1 378 1 293 1 
339 1 341 1 363 2 92 1 125 1 27 1 239 2 68 1 246 1 72 1 34 1 149 1 8 1 247 1 248 1 104 1 36 1 106 1 79 1 223 1 224 1 62 3 158 1 376 3 375 1 359 1 377 1 261 1 378 1 293 1 
341 1 363 2 92 1 125 1 27 1 239 2 68 1 246 1 34 1 8 1 247 1 248 1 104 1 36 1 106 1 223 1 224 1 62 2 376 2 375 1 359 1 377 1 261 1 378 1 293 1 
65 1 339 1 27 2 33 1 246 1 97 1 149 1 248 1 174 1 75 1 177 1 106 1 36 1 132 1 79 1 224 2 62 1 85 1 376 1 359 2 377 1 230 1 378 2 
339 1 363 2 92 1 125 1 27 1 68 1 246 1 72 1 34 1 247 1 248 1 352 1 36 1 106 1 79 1 224 1 62 1 158 1 376 1 160 1 375 1 359 1 377 1 261 1 378 1 293 1 
21 1 
0 1 119 1 120 2 66 1 164 1 144 1 267 1 270 4 168 1 243 1 367 1 130 1 148 5 199 1 100 1 303 4 73 2 131 2 39 1 220 1 356 1 80 1 81 1 334 1 108 1 155 3 137 2 284 3 61 1 17 1 207 1 18 1 335 1 42 2 374 2 227 3 337 1 360 1 291 5 162 1 232 1 91 1 
0 1 119 1 120 2 66 1 164 1 144 1 267 1 270 4 168 1 243 1 367 1 130 1 148 5 199 1 100 1 303 4 73 2 131 2 39 1 220 1 356 1 80 1 81 1 334 1 108 1 155 3 137 2 284 3 61 1 17 1 207 1 18 1 335 1 42 2 374 2 227 3 337 1 360 1 291 5 162 1 232 1 91 1 
0 1 144 1 241 1 148 4 199 1 100 1 303 4 356 1 108 1 155 2 156 2 61 1 18 1 207 1 360 1 162 1 119 1 164 1 120 2 267 1 270 4 30 2 168 1 367 1 130 1 38 2 39 1 80 1 81 1 334 1 137 2 284 2 335 1 374 2 227 2 337 1 182 1 291 4 91 1 
0 1 144 1 246 2 97 1 148 4 199 1 248 2 100 1 303 5 106 1 356 1 307 1 155 2 108 1 156 2 255 1 61 1 18 1 207 1 360 2 162 1 119 2 120 3 164 1 267 1 270 5 29 1 168 1 33 1 367 1 130 1 174 1 73 2 131 2 74 1 177 2 36 2 39 2 80 1 81 1 334 1 284 2 137 2 335 1 42 2 85 1 227 2 374 2 337 1 182 1 377 1 291 6 186 1 232 1 91 1 
0 1 164 1 120 1 144 1 267 1 270 3 130 1 148 2 199 1 100 1 201 1 303 3 80 1 108 1 284 1 61 1 207 1 18 1 337 1 291 2 162 1 91 1 
0 1 164 1 120 1 144 1 267 1 270 3 168 1 130 1 148 3 199 1 100 1 201 1 303 3 80 1 108 1 155 1 61 1 207 1 18 1 337 1 360 1 291 1 162 1 91 1 
0 1 120 1 164 1 144 1 267 1 270 3 168 1 130 1 148 3 199 1 201 1 100 1 303 3 80 1 108 1 155 1 284 1 61 1 207 1 18 1 227 1 337 1 360 1 291 2 162 1 91 1 
0 1 144 1 243 1 148 6 199 1 100 1 201 1 303 5 356 1 108 1 155 4 61 1 17 1 18 1 207 1 360 5 162 1 119 1 164 1 120 3 66 1 267 1 270 5 168 5 70 1 367 1 130 1 73 2 131 2 220 1 39 1 80 1 81 1 334 1 284 4 137 2 335 1 42 2 227 4 374 2 337 1 291 7 232 1 91 1 
0 1 144 1 148 4 199 1 100 1 303 4 356 1 108 1 155 2 156 2 61 1 18 1 207 1 360 2 162 1 119 1 164 1 120 2 267 1 270 4 168 1 367 1 130 1 73 2 131 2 39 1 80 1 81 1 334 1 137 2 284 2 335 1 42 2 374 2 227 2 337 1 182 1 291 4 232 1 91 1 
0 1 119 1 120 2 164 1 66 1 144 1 267 1 270 4 168 1 243 1 367 1 130 1 148 4 199 1 100 1 303 4 73 2 131 2 39 1 220 1 356 1 80 1 81 1 334 1 155 2 108 1 284 2 137 2 61 1 207 1 18 1 335 1 42 2 227 2 374 2 337 1 360 1 291 4 162 1 232 1 91 1 
0 1 119 1 120 2 164 1 66 1 144 1 267 1 270 4 168 1 243 1 367 1 130 1 148 4 199 1 100 1 303 4 73 2 131 2 39 1 220 1 356 1 80 1 81 1 334 1 155 2 108 1 284 2 137 2 61 1 207 1 18 1 335 1 42 2 227 2 374 2 337 1 360 1 291 4 162 1 232 1 91 1 
0 1 119 1 120 2 164 1 144 1 267 1 268 1 270 4 241 1 168 1 30 2 243 1 197 1 367 1 130 1 148 4 199 1 100 1 303 4 38 2 39 1 356 1 80 1 81 1 334 1 155 2 108 1 156 2 284 2 137 2 61 1 207 1 18 1 335 1 227 2 374 2 337 1 360 1 291 4 162 1 91 1 
277 1 154 1 121 1 37 3 123 1 215 2 167 1 280 1 205 2 325 1 327 1 109 1 225 1 245 1 328 2 87 1 114 1 214 1 361 1 161 1 44 3 118 2 153 1 318 6 143 1 353 1 
1 3 121 2 123 1 296 3 235 1 215 4 195 2 271 1 328 1 98 1 9 2 56 1 153 2 277 11 305 1 37 6 306 1 280 4 205 1 82 1 313 1 256 1 180 1 109 1 225 2 209 1 214 2 87 11 361 2 118 2 44 8 318 14 143 2 
121 1 123 1 25 1 215 2 323 1 238 1 328 1 246 1 216 1 248 1 55 1 100 2 174 1 153 1 177 1 106 1 36 1 37 1 77 1 280 1 80 1 40 1 107 1 180 1 256 1 225 1 209 1 286 1 85 1 183 1 214 1 377 1 141 1 64 1 44 1 318 2 91 2 143 1 
295 1 238 2 195 2 49 2 245 1 246 3 98 4 9 2 248 3 55 1 100 3 153 3 11 1 154 1 106 2 205 4 107 1 256 1 109 3 209 1 258 2 214 3 361 3 161 1 64 2 118 8 318 20 319 2 163 1 121 3 123 3 215 6 167 1 325 1 327 1 271 2 328 2 34 1 216 2 174 2 277 7 177 1 37 10 36 3 280 7 80 1 40 1 84 2 180 1 225 3 286 1 85 2 43 2 87 7 377 2 141 2 44 10 143 3 91 3 
233 1 121 2 322 1 123 2 215 4 192 1 33 1 246 8 97 1 34 1 150 1 55 1 248 8 100 1 250 1 153 2 174 2 177 2 106 2 36 7 37 1 78 2 80 1 40 1 256 1 180 1 225 2 286 1 85 3 288 1 184 1 114 1 214 2 377 2 262 1 44 1 318 2 91 1 143 2 
121 1 123 1 237 1 215 2 342 1 67 1 195 1 271 1 9 1 55 1 100 1 153 1 277 1 37 2 280 1 80 1 205 1 109 1 225 1 286 1 209 1 87 1 214 1 361 1 118 1 44 1 318 3 143 1 91 1 
277 1 121 1 123 1 215 2 280 1 225 1 226 1 98 1 87 1 114 1 214 1 9 1 361 1 118 1 153 1 44 2 318 2 143 1 
277 1 121 1 123 1 37 2 215 2 280 1 205 1 240 1 109 1 225 1 271 1 87 1 114 1 214 1 118 1 153 1 318 2 143 1 
121 1 123 1 215 2 195 1 271 1 98 1 9 1 153 1 277 2 37 2 280 2 205 1 109 1 225 1 214 1 114 1 87 2 361 1 44 2 118 2 318 4 143 1 
277 1 121 1 123 1 215 2 280 1 225 1 226 1 98 1 87 1 214 1 9 1 361 1 262 1 118 1 153 1 44 2 318 2 143 1 
277 1 121 1 123 1 37 2 215 2 280 1 205 1 240 1 109 1 225 1 271 1 87 1 214 1 262 1 118 1 153 1 318 2 143 1 
121 1 123 1 215 2 195 1 271 1 98 1 9 1 153 1 277 2 37 2 280 2 205 1 109 1 225 1 214 1 87 2 361 1 262 1 44 2 118 2 318 4 143 1 
277 2 121 1 37 2 123 1 215 2 280 2 205 1 195 1 109 1 225 1 271 1 98 1 87 2 214 1 9 1 361 1 118 2 153 1 44 2 318 4 143 1 
121 1 123 1 215 2 238 1 328 1 246 1 216 1 248 1 100 1 174 1 153 1 177 1 106 1 36 1 37 1 84 1 256 1 180 1 225 1 85 1 214 1 377 1 141 1 44 1 64 1 318 2 91 1 143 1 
121 1 123 1 215 2 324 1 328 1 246 1 216 1 248 1 100 1 174 1 153 1 371 1 177 1 106 1 36 1 37 1 136 1 256 1 180 1 225 1 85 1 214 1 377 1 44 1 64 1 318 2 91 1 143 1 
121 1 123 1 215 2 195 1 271 1 98 1 9 1 153 1 277 2 37 2 280 2 205 1 109 1 225 1 209 1 214 1 87 2 361 1 44 2 118 2 318 4 143 1 
121 1 123 1 215 2 238 1 195 1 271 1 246 1 98 1 150 1 9 1 216 1 248 1 100 1 174 1 153 1 277 2 37 2 106 1 36 1 280 2 205 1 84 1 109 1 225 1 85 1 87 2 214 1 377 1 361 1 141 1 118 2 44 2 64 1 318 4 319 1 91 1 143 1 
121 1 123 1 237 1 215 2 67 1 195 1 271 1 98 1 9 1 55 1 100 1 153 1 277 1 12 1 37 1 280 1 80 1 109 1 225 1 286 1 209 1 214 1 87 1 361 1 118 1 44 2 318 3 143 1 91 1 
264 1 1 4 45 2 296 3 235 1 215 6 167 1 325 1 4 4 327 1 195 4 127 1 298 1 299 1 147 1 271 4 245 1 171 1 71 1 98 4 54 1 9 4 200 1 370 1 56 3 153 3 154 1 331 1 37 21 205 4 206 1 109 5 225 3 115 1 214 3 317 1 361 5 161 1 44 20 118 8 320 1 318 41 143 3 
264 1 1 4 45 2 296 3 235 1 215 8 167 1 325 1 4 4 327 1 195 4 127 1 298 1 299 2 147 1 271 3 245 1 171 1 71 1 98 3 54 1 9 4 200 1 370 1 56 3 153 4 154 1 331 1 37 18 205 4 206 1 109 4 225 4 115 1 214 4 317 1 361 5 161 1 44 20 118 7 320 1 318 38 143 4 
264 1 1 4 45 1 296 4 235 2 215 4 167 1 325 1 4 4 327 1 195 7 298 1 299 1 147 1 271 7 245 1 171 1 71 1 98 7 54 1 9 7 370 1 56 2 153 2 154 1 305 2 331 1 37 25 205 7 206 1 109 8 225 2 115 1 214 2 317 1 361 8 161 1 44 27 118 14 320 1 318 52 143 2 
1 2 45 1 296 1 235 1 215 4 4 2 195 3 298 2 271 3 171 1 71 1 98 3 54 1 9 3 200 1 370 1 56 1 153 2 331 1 37 10 205 3 109 3 225 2 214 2 361 3 44 9 118 6 142 1 318 19 143 2 
45 2 1 2 264 1 296 2 215 6 4 4 195 3 298 1 299 2 147 1 271 2 171 2 71 1 98 2 54 1 9 3 370 1 56 2 153 3 331 1 37 12 205 2 206 1 109 2 225 3 214 3 115 1 317 1 361 3 118 4 44 14 320 1 318 26 143 3 
31 1 181 1 234 1 191 1 213 1 281 1 349 1 185 1 311 1 251 1 
257 1 105 1 
95 1 31 1 234 1 2 1 191 1 254 1 281 1 311 1 251 1 
179 1 16 1 
19 1 190 1 368 1 
278 1 234 1 191 1 281 1 309 1 270 1 311 1 31 1 210 1 213 1 53 1 349 1 172 1 185 1 360 1 294 2 303 1 251 1 
278 1 234 1 191 1 281 1 309 1 270 1 311 1 31 1 210 1 213 1 53 1 349 1 172 1 185 1 360 1 294 2 303 1 251 1 
278 1 234 1 191 1 281 1 309 1 270 1 311 1 31 1 210 1 213 1 53 1 349 1 172 1 185 1 360 1 294 2 303 1 251 1 
19 1 179 1 16 1 
19 1 179 1 16 1 
190 1 368 1 
19 1 190 1 368 1 
51 1 170 1 
234 1 236 1 191 1 270 1 346 1 6 1 31 1 328 1 51 1 170 1 53 1 55 2 100 2 303 1 251 1 105 1 281 1 80 2 309 1 14 1 311 1 157 1 257 1 286 2 20 1 294 1 91 2 
121 1 123 1 166 1 215 2 192 1 145 1 246 2 96 1 248 2 100 2 174 1 250 1 175 1 57 1 153 1 106 1 37 1 36 2 78 2 80 2 256 1 180 1 225 1 209 1 85 1 214 1 377 1 44 1 318 2 91 2 143 1 
363 2 106 1 36 2 92 1 27 1 68 1 110 1 158 1 246 2 375 1 34 1 150 1 247 1 377 1 248 2 90 1 261 1 152 1 293 1 
10 1 363 2 36 1 106 1 92 1 27 1 68 1 110 1 158 1 246 1 375 1 34 1 247 1 248 1 377 1 261 1 293 1 
75 1 177 1 106 1 36 1 27 1 373 1 85 1 33 1 246 1 97 1 377 1 248 1 90 1 174 1 
363 2 106 1 36 1 92 1 27 1 68 1 110 1 158 1 246 1 375 1 34 1 247 1 248 1 377 1 90 1 261 1 152 1 293 1 
187 1 
121 1 123 1 215 2 237 2 238 1 328 1 246 1 248 1 55 2 216 1 100 3 153 1 101 1 174 1 177 1 37 1 36 1 219 1 106 1 80 2 84 1 180 1 225 1 286 2 85 1 214 1 377 1 141 1 64 1 318 1 143 1 91 3 
119 2 39 1 356 1 81 1 156 4 29 1 255 1 168 2 335 1 245 1 367 1 52 2 151 2 360 4 73 2 
119 1 347 1 39 1 360 1 28 1 168 1 353 1 
119 1 120 1 270 1 168 1 367 1 303 1 73 1 131 1 39 1 356 1 81 1 156 1 335 1 42 1 360 2 291 1 232 1 
177 1 106 1 36 1 356 1 81 1 41 1 335 1 367 1 246 1 248 1 377 1 338 1 
1 1 264 1 119 5 120 1 122 1 296 1 270 1 195 2 29 1 168 2 147 1 271 2 367 2 52 5 151 5 9 2 56 1 303 1 73 3 39 8 59 2 356 2 81 2 221 1 206 1 156 6 255 1 109 2 335 2 115 1 360 5 317 1 361 2 291 1 292 1 
119 2 66 1 237 1 144 1 167 1 270 1 126 1 327 1 367 1 55 1 100 1 101 1 303 1 39 2 59 2 356 1 80 1 81 1 221 1 138 1 109 1 335 1 286 1 112 1 361 2 161 1 379 1 91 1 
119 1 39 1 356 1 81 1 28 1 168 1 335 1 347 1 367 1 360 1 
119 5 39 5 59 2 221 1 195 2 156 10 109 2 258 1 271 2 52 5 9 2 151 5 360 5 361 2 73 5 
120 1 360 1 270 1 291 1 303 1 168 1 
119 2 120 2 270 3 242 1 29 2 94 1 33 1 367 2 246 4 97 1 273 2 248 4 174 1 303 3 74 1 177 2 106 1 36 4 355 1 39 2 356 1 81 2 255 2 335 2 85 1 377 1 116 1 186 1 291 4 
234 1 281 1 345 1 
234 1 281 1 345 1 
234 1 46 1 170 1 281 1 185 1 
234 1 281 1 345 1 
244 1 234 1 281 1 
244 1 234 1 281 1 
244 1 234 1 281 1 
234 1 281 1 
31 1 251 1 
1 1 264 1 296 1 215 2 167 1 325 1 327 1 245 1 370 1 56 1 153 1 154 1 37 4 205 2 109 1 225 1 214 1 361 1 161 1 44 4 118 2 318 8 143 1 
1 2 264 1 296 1 235 1 215 4 167 1 325 1 327 1 195 1 245 1 98 1 9 1 370 1 56 1 153 2 154 1 37 5 205 2 283 1 109 1 225 2 214 2 361 2 161 1 44 6 118 3 318 11 143 2 
1 1 264 1 296 1 215 6 167 1 325 1 327 1 195 2 299 1 147 1 271 2 245 1 98 1 9 2 370 1 56 1 153 3 154 1 37 10 205 3 283 1 206 1 109 3 225 3 214 3 115 1 361 3 317 1 161 1 44 9 118 4 318 19 143 3 
1 1 264 1 296 1 215 6 167 1 325 1 327 1 195 2 299 1 147 1 271 1 245 1 98 2 9 2 370 1 56 1 153 3 154 1 37 7 205 3 283 1 206 1 109 2 225 3 214 3 115 1 361 3 317 1 161 1 44 10 118 5 318 17 143 3 
1 1 264 1 296 1 215 2 167 1 325 1 327 1 245 1 370 1 56 1 153 1 154 1 37 4 205 2 109 1 225 1 214 1 361 1 161 1 44 4 118 2 318 8 143 1 
1 1 264 1 296 1 215 2 195 2 147 1 271 2 98 1 9 2 370 1 56 1 153 1 37 6 205 1 206 1 109 2 225 1 214 1 115 1 361 2 317 1 44 6 118 2 318 12 143 1 
1 1 264 1 296 1 215 8 167 1 325 1 327 1 195 2 299 2 147 1 271 1 245 1 98 2 9 2 370 1 56 1 153 4 154 1 37 8 205 3 206 1 283 1 109 2 225 4 214 4 115 1 317 1 361 3 161 1 44 10 118 5 318 18 143 4 
1 1 264 1 296 1 215 8 195 3 299 2 147 1 271 2 98 3 9 3 370 1 200 1 56 1 153 4 37 7 205 3 206 1 109 2 225 4 214 4 115 1 317 1 361 3 44 9 118 6 318 16 143 4 
154 2 37 4 167 3 205 3 325 1 327 1 109 1 98 3 361 1 161 3 118 6 44 3 318 7 
1 1 264 1 296 1 215 8 167 1 325 1 327 1 195 2 299 2 147 1 271 1 245 1 98 1 9 2 370 1 200 1 56 1 153 4 154 1 37 8 205 3 206 1 109 2 225 4 214 4 115 1 317 1 361 3 161 1 44 10 118 4 318 18 143 4 
154 1 37 4 215 4 167 1 205 2 325 1 327 1 299 1 109 1 225 2 245 1 98 1 214 2 361 1 161 1 44 4 118 3 153 2 318 8 143 2 
154 1 37 3 167 1 205 2 325 1 327 1 109 1 245 1 361 1 161 1 118 2 44 3 318 6 353 1 
37 2 215 2 205 1 283 1 195 1 109 1 225 1 271 1 98 1 214 1 9 1 361 1 118 2 153 1 44 2 318 4 143 1 
1 2 37 4 296 1 235 1 205 1 195 1 109 1 271 1 98 1 9 1 361 1 56 1 44 3 118 2 318 7 
1 2 235 1 296 2 215 4 167 2 325 1 327 1 195 2 299 2 271 2 245 1 98 4 9 2 153 2 154 1 305 1 37 12 133 1 205 5 82 1 109 3 225 2 214 2 361 3 161 2 118 9 44 11 318 23 143 2 
1 1 37 1 318 1 
296 1 44 1 318 1 
37 3 215 2 205 2 283 1 195 1 109 1 225 1 258 1 271 1 98 1 214 1 9 1 361 1 153 1 44 3 118 3 318 6 143 1 
1 1 264 1 296 1 215 2 195 2 147 1 271 2 98 1 9 2 370 1 56 1 153 1 37 6 205 1 206 1 109 2 225 1 214 1 115 1 361 2 317 1 44 6 118 2 318 12 143 1 
37 3 167 1 205 1 327 1 109 1 98 1 361 1 161 1 44 3 118 2 318 6 
154 1 37 2 133 1 215 2 167 1 205 1 325 1 299 1 225 1 98 1 214 1 161 1 44 1 118 2 153 1 318 3 143 1 
37 5 215 2 167 2 205 3 126 1 327 1 109 2 225 1 98 2 214 1 370 1 361 2 161 2 153 1 118 5 44 5 318 10 143 1 
215 2 225 1 98 1 214 1 9 1 370 1 361 1 153 1 44 2 118 1 318 2 143 1 
37 2 215 2 205 1 195 1 109 1 225 1 271 1 98 1 214 1 9 1 370 1 361 1 118 2 153 1 44 2 318 4 143 1 
37 2 133 1 215 6 167 1 205 1 299 1 225 3 98 1 214 3 200 1 370 1 161 1 153 3 118 2 44 1 318 3 143 3 
1 4 296 3 235 1 215 10 167 3 343 1 325 1 327 2 195 3 299 2 271 3 245 1 98 5 9 3 200 1 370 1 56 1 153 5 58 1 154 1 37 18 133 1 205 7 283 1 314 1 109 5 225 5 214 5 361 5 161 3 44 16 118 12 318 34 143 5 
321 1 328 1 80 1 267 1 100 1 312 1 91 1 
321 1 340 1 189 1 266 1 80 1 267 1 312 1 328 1 290 1 22 1 100 1 91 1 
177 1 106 1 85 1 33 1 36 1 246 1 97 1 377 1 248 1 174 1 353 1 
177 1 106 1 36 1 80 1 238 1 40 1 286 1 328 1 85 1 246 1 216 1 55 1 248 1 377 1 100 2 174 1 64 1 91 2 
144 1 238 1 344 1 128 1 328 1 246 1 130 1 248 1 273 1 55 2 216 1 100 2 174 2 36 1 106 1 80 2 40 1 286 1 85 3 377 1 64 2 162 1 91 2 
144 1 344 1 128 1 328 1 246 2 130 1 248 2 273 1 55 2 216 1 100 2 174 2 36 2 106 1 80 2 40 1 136 1 315 1 286 1 85 3 377 1 64 2 162 1 91 2 
270 2 344 1 168 1 128 1 300 1 329 1 246 3 129 1 248 3 273 1 174 1 303 2 177 1 36 3 106 1 61 1 315 1 85 4 336 1 377 1 360 1 291 1 64 1 
177 1 106 1 36 3 270 2 344 1 168 1 61 1 315 1 128 1 85 4 246 3 329 1 300 1 360 1 273 1 248 3 377 1 249 1 291 1 174 1 64 1 303 2 
106 1 36 1 246 1 288 1 377 1 248 1 
233 1 177 2 203 1 322 1 36 6 106 3 78 1 3 1 85 3 246 7 288 1 289 1 34 1 150 1 184 1 248 7 377 2 250 1 64 1 174 2 275 1 
121 2 123 2 215 4 167 1 238 1 145 1 325 1 327 1 49 1 245 1 328 2 246 1 150 1 216 1 55 1 248 1 100 2 174 1 153 2 277 1 154 1 37 3 106 1 36 1 280 1 80 1 205 2 40 1 84 1 109 1 225 2 209 1 286 1 85 1 87 1 214 2 377 1 361 1 141 1 161 1 44 3 118 2 64 1 318 6 319 1 91 2 143 2 
119 1 120 1 28 1 270 3 168 1 94 1 347 1 7 1 246 1 367 2 329 1 300 1 248 1 249 1 303 3 177 1 36 1 39 1 356 2 81 2 308 1 61 1 335 2 85 2 20 1 229 1 360 1 291 2 
41 1 106 1 36 1 246 1 288 1 377 1 248 1 
176 1 177 1 106 1 36 4 315 1 33 1 85 1 246 4 97 1 150 1 248 4 377 1 174 1 
11 1 36 2 106 2 47 1 85 1 246 2 86 1 289 1 273 1 248 2 377 1 64 1 174 1 275 1 
177 1 363 1 106 1 36 1 246 1 92 1 375 1 377 1 248 1 261 1 
106 1 85 1 36 2 246 2 34 1 150 1 377 1 248 2 174 1 250 1 175 1 
233 1 176 1 177 1 36 4 106 2 322 1 33 1 85 3 246 5 97 1 150 1 273 1 248 5 377 2 250 1 174 2 
176 1 177 1 36 4 106 2 322 1 33 1 85 3 246 5 316 1 97 1 150 1 273 1 248 5 377 2 250 1 174 2 
177 1 106 1 36 1 80 1 40 1 136 1 286 1 328 1 85 1 246 1 216 1 55 1 248 1 377 1 100 2 174 1 64 1 91 2 
203 1 36 1 106 2 3 1 85 1 246 1 289 1 273 1 248 1 377 1 64 1 174 1 275 1 
285 1 328 1 365 1 297 1 102 1 
144 1 365 1 332 1 297 2 270 2 168 1 61 1 285 2 50 1 328 1 20 1 212 1 358 1 130 1 199 1 360 1 162 1 303 2 102 2 
166 1 365 1 80 1 297 1 285 1 96 1 100 1 57 1 91 1 
212 1 358 1 365 1 
62 3 69 1 339 1 376 3 79 1 160 1 88 1 8 1 239 1 223 1 104 1 
140 1 350 1 217 1 223 1 
8 1 223 1 
8 1 223 1 104 1 353 1 
62 1 339 1 376 1 79 1 8 1 223 1 104 1 
376 1 359 1 378 1 
362 1 339 1 253 1 79 1 93 1 223 1 62 3 69 2 160 1 376 3 8 1 104 1 
62 2 32 1 339 1 376 2 79 1 8 1 239 1 223 1 104 1 
339 1 363 1 79 1 193 1 92 1 223 1 62 1 140 1 160 1 376 1 247 1 
62 1 339 1 376 1 79 1 160 1 8 1 223 1 
62 1 339 1 376 1 79 1 160 1 8 2 104 1 
339 2 79 2 366 1 223 1 62 2 211 1 160 1 376 2 8 1 274 1 
339 1 76 1 79 1 239 2 223 2 62 3 140 1 160 1 376 3 8 1 88 1 217 1 104 1 
339 1 363 2 79 1 92 1 239 1 223 1 62 2 68 1 375 1 160 1 376 2 8 1 89 1 247 1 104 1 
339 2 79 2 239 2 222 1 223 2 62 4 32 1 140 1 160 1 376 4 8 1 217 1 104 1 
62 1 339 1 376 1 79 1 160 1 8 1 223 1 104 1 
339 1 253 1 79 1 93 1 239 2 223 3 62 4 69 1 140 1 376 4 8 2 350 1 217 1 104 2 
339 1 79 1 239 1 196 1 223 1 62 2 160 1 376 2 228 1 8 1 103 1 104 1 
354 1 339 1 253 2 79 1 93 1 223 1 62 3 69 2 160 1 376 3 8 1 104 1 
198 1 260 1 5 2 223 2 
62 1 339 1 376 1 79 1 160 1 351 1 
62 2 339 1 376 2 79 1 160 1 8 1 88 1 239 1 223 1 104 1 
204 1 
62 1 339 1 376 1 79 1 160 1 8 1 223 1 104 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 228 194 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
27 1 173 3 130 1 216 7 132 1 62 1 2 1 196 1 36 2 113 9 287 4 262 1 9 1 10 2 44 1 121 1 48 1 319 1 351 1 279 5 99 1 98 2 146 1 171 9 
27 1 173 3 130 1 216 7 132 1 62 1 2 1 196 1 36 2 287 4 113 9 262 1 9 1 10 2 44 1 121 1 48 1 319 1 351 1 279 5 99 1 98 2 146 1 171 9 
282 1 27 1 173 3 59 1 106 1 130 1 216 6 132 1 62 1 2 2 233 1 196 1 36 2 113 9 287 4 72 1 262 1 9 1 10 2 121 2 319 2 206 1 351 1 279 5 99 1 98 2 146 2 171 9 
282 1 27 1 173 3 59 1 106 1 130 1 216 6 132 1 62 1 2 2 233 1 196 1 36 2 113 9 287 4 72 1 262 1 9 1 10 2 121 2 319 2 206 1 351 1 279 5 99 1 98 2 146 2 171 9 
282 1 27 1 173 4 59 1 106 1 130 1 216 7 132 1 62 1 2 2 233 1 196 1 36 2 113 10 287 5 72 1 262 1 9 1 10 2 121 2 319 2 206 1 351 1 279 6 99 1 98 2 146 2 171 10 
282 1 173 2 59 1 106 1 130 1 216 4 132 1 62 1 2 2 233 1 196 1 36 2 113 7 287 3 72 1 262 1 9 1 10 2 121 2 319 2 206 1 351 1 279 4 99 1 98 1 146 2 171 7 
27 1 173 1 216 3 132 1 2 1 319 1 351 1 36 1 279 3 99 1 98 2 146 1 113 4 287 2 262 1 9 1 10 1 171 4 
28 1 59 1 132 1 121 1 328 1 319 1 36 1 279 1 99 1 21 1 113 2 146 1 72 1 262 1 10 1 171 2 
173 1 216 1 132 1 62 1 121 1 36 2 279 2 99 1 113 3 287 1 262 1 10 2 171 3 
157 1 231 1 181 1 
342 1 157 1 315 2 
305 2 266 2 81 1 376 2 83 2 286 2 45 2 211 1 
253 1 0 1 129 2 257 1 361 1 160 1 305 2 236 1 67 1 112 1 286 2 162 1 334 1 288 2 198 1 337 2 265 1 76 1 266 3 118 1 81 1 83 2 369 1 45 3 370 1 275 1 274 1 247 1 298 1 299 1 376 2 23 1 324 2 127 1 302 1 211 1 354 2 
305 1 303 1 266 1 376 1 83 1 286 1 45 1 191 1 234 1 211 1 
266 1 157 1 45 1 345 1 191 1 181 1 373 1 50 1 320 1 286 1 221 1 347 1 261 1 281 1 
266 1 83 1 157 1 45 1 345 1 191 1 181 1 305 1 50 1 320 2 376 1 286 1 221 1 347 2 281 1 
320 1 330 1 333 1 347 1 148 1 
339 1 320 2 330 1 179 1 157 1 347 2 148 1 181 1 
320 1 330 1 347 1 
303 1 104 1 266 1 83 1 45 1 191 1 234 1 305 1 320 1 376 1 286 1 347 1 148 1 211 1 
157 1 
339 1 320 2 330 1 157 1 347 2 148 1 181 1 128 1 
200 2 339 1 254 1 157 1 133 1 47 1 181 1 195 1 346 1 320 5 330 2 209 1 259 1 135 1 347 5 148 2 365 2 263 2 151 1 
266 5 83 4 81 1 45 5 255 1 232 1 193 1 373 1 305 1 17 1 376 4 286 5 309 1 169 2 
266 2 376 2 83 2 286 2 45 2 191 1 294 1 234 1 
81 1 231 1 
305 1 266 2 81 2 376 1 83 1 286 2 22 1 45 2 193 1 
212 1 131 1 238 1 
266 1 366 1 129 1 81 1 45 1 257 1 275 1 274 1 361 1 236 1 299 1 112 1 334 1 302 1 354 1 337 1 
266 2 129 1 83 1 45 2 257 1 232 1 361 1 274 1 275 1 236 1 299 1 112 1 376 1 286 1 238 1 334 1 302 1 169 1 354 1 337 1 
305 1 266 3 81 1 376 3 83 3 286 3 45 3 169 1 
266 1 376 1 83 1 286 1 45 1 191 1 234 1 
305 1 266 1 376 1 83 1 286 1 22 1 45 1 191 1 193 1 
103 1 0 1 129 1 257 1 232 1 345 1 361 1 191 1 160 1 193 1 305 2 236 1 67 1 112 1 69 1 286 3 162 1 221 1 347 1 334 1 288 2 198 1 337 1 265 1 76 1 266 4 118 1 81 1 83 3 45 4 274 1 275 1 50 1 298 1 299 1 320 1 376 3 281 1 324 1 127 1 302 1 169 1 211 1 354 1 
373 1 17 1 266 2 81 1 376 1 83 1 286 2 45 2 169 1 
266 3 83 3 157 1 45 3 232 1 345 1 191 1 193 1 305 1 5 1 50 1 320 1 376 3 69 1 286 3 221 1 347 1 281 1 169 2 
212 1 266 2 83 2 45 2 193 1 305 1 376 2 286 2 238 1 169 1 
266 1 129 1 81 1 45 1 257 1 275 1 274 1 361 1 236 1 299 1 112 1 334 1 302 1 354 1 337 1 
266 1 129 1 81 1 45 1 257 1 275 1 274 1 361 1 65 1 236 1 112 1 302 1 24 1 354 1 337 1 
212 2 360 1 131 2 160 1 67 1 363 1 162 1 238 2 288 2 198 1 177 1 138 1 77 1 76 1 140 1 369 2 90 1 51 1 298 2 208 1 322 1 127 1 324 4 170 1 
266 1 376 1 83 1 286 1 45 1 345 1 191 1 294 1 
243 1 137 1 
243 1 137 1 
25 1 295 1 
25 1 295 1 
25 1 295 1 
297 1 243 1 137 1 
297 1 243 1 137 1 
214 1 243 1 137 1 
25 1 292 1 271 1 243 2 137 2 295 1 
297 1 243 1 137 1 
243 1 137 1 326 1 
243 1 137 1 326 1 
243 1 137 1 326 1 
214 1 63 1 329 1 286 2 347 1 176 1 137 1 225 1 349 1 8 1 266 2 117 1 267 1 81 1 83 2 269 1 311 1 45 2 243 1 318 1 246 1 320 1 376 2 280 1 
117 1 267 2 292 1 157 1 60 1 243 2 63 2 4 1 219 1 329 2 320 2 111 1 94 2 307 1 347 2 100 1 176 2 137 2 349 3 
319 1 146 1 2 1 
319 1 28 1 146 1 
319 3 28 1 258 1 29 1 340 1 2 2 
319 2 28 1 207 1 258 1 340 1 2 1 
319 2 28 1 258 2 340 1 2 1 
213 2 254 2 360 1 157 2 195 3 330 1 37 1 135 1 347 5 263 1 365 1 200 1 339 1 140 1 269 1 311 1 120 2 350 2 315 3 87 1 181 1 89 1 246 1 90 1 19 1 208 1 320 5 342 1 97 1 54 1 148 4 229 1 
57 1 213 6 254 6 360 3 157 5 133 1 195 8 33 1 66 1 330 6 333 5 347 9 135 1 365 2 263 2 116 1 200 2 339 1 140 3 82 1 311 4 84 1 120 6 315 9 181 1 89 2 90 3 19 1 208 3 320 9 342 3 97 3 54 2 148 7 355 5 
213 2 360 1 254 2 157 3 133 1 195 3 347 3 263 1 365 1 200 1 140 1 311 1 120 2 350 1 87 1 315 4 181 1 89 1 90 1 208 1 320 3 342 2 54 1 97 1 148 2 229 1 
213 4 57 1 360 2 254 4 157 4 133 1 195 5 33 1 347 4 263 1 365 1 116 1 200 1 140 2 311 2 120 4 350 2 315 7 87 1 181 1 89 1 90 2 208 2 320 4 342 3 54 1 97 2 229 1 148 3 
236 1 112 1 302 1 
241 1 302 1 
338 1 231 1 302 1 
42 1 302 1 
92 1 
236 1 302 1 
122 1 338 2 236 1 112 1 86 1 302 3 
140 1 368 1 369 4 88 1 317 1 235 1 298 3 208 1 363 2 332 1 109 2 7 1 39 1 114 1 150 1 324 7 177 3 
140 1 368 1 369 4 88 1 317 1 235 1 298 3 208 1 363 2 332 1 109 2 7 1 39 1 114 1 150 1 324 7 177 3 
140 1 368 1 369 4 88 1 167 1 317 1 235 1 298 3 208 1 363 2 332 1 109 2 7 1 39 1 114 1 150 1 324 7 177 3 
153 1 360 3 160 1 235 2 306 1 67 1 68 3 363 5 109 3 332 2 162 1 364 1 114 1 39 2 7 5 288 2 198 1 177 10 178 1 239 4 268 1 140 4 119 1 368 1 369 16 88 2 317 1 90 3 298 15 208 4 145 1 97 3 150 1 324 31 
139 1 357 1 140 1 368 1 369 5 88 1 160 2 235 1 306 1 298 4 208 1 363 3 67 2 332 1 109 2 162 2 39 1 114 1 7 1 150 1 288 4 324 9 198 2 177 4 
26 1 28 1 129 1 29 1 216 1 132 1 257 1 2 1 362 1 36 1 113 2 262 1 337 1 10 1 121 1 204 1 46 1 313 1 314 1 274 1 319 2 52 1 279 1 99 1 146 1 250 1 323 1 186 1 354 1 171 2 
26 1 102 1 28 1 29 1 129 1 216 2 132 1 257 1 2 1 362 1 36 1 113 3 337 1 10 1 121 1 204 1 46 1 313 1 314 1 274 1 226 1 319 2 279 1 99 1 146 1 250 1 126 1 186 1 354 1 171 3 
102 1 26 1 28 1 29 1 129 1 216 2 132 1 257 1 46 1 121 1 313 1 2 1 274 1 362 1 319 2 279 1 99 1 146 1 113 2 250 1 126 1 186 1 171 2 354 1 337 1 
26 2 129 1 257 1 236 1 36 1 71 1 113 1 337 1 10 1 310 1 121 2 313 2 274 1 275 1 183 1 226 1 20 1 249 1 250 2 125 1 302 1 354 1 171 1 
26 1 28 1 129 1 29 1 257 1 2 1 362 1 36 1 113 1 262 1 337 1 10 1 121 1 204 1 46 1 313 1 314 1 274 1 319 2 52 1 146 1 250 1 126 1 186 1 354 1 171 1 
31 1 
344 1 283 3 154 2 254 1 155 1 157 1 61 1 345 1 191 1 327 1 195 1 35 3 330 5 286 1 221 1 135 1 347 4 163 1 261 1 197 2 263 1 365 1 74 1 290 1 266 1 200 1 339 2 12 1 79 3 202 1 312 5 45 1 181 1 168 2 373 1 50 1 93 1 320 4 342 2 96 1 281 1 55 2 
344 1 283 3 154 2 254 1 155 1 157 1 61 1 345 1 191 1 327 1 195 1 35 3 330 5 286 1 221 1 135 1 347 4 163 1 261 1 197 2 263 1 365 1 74 1 290 1 266 1 200 1 339 2 12 1 79 3 202 1 312 5 45 1 181 1 168 2 373 1 50 1 93 1 320 4 342 2 96 1 281 1 55 2 
344 1 283 2 154 2 254 1 155 1 157 1 158 2 345 1 191 1 195 1 35 2 330 4 286 1 38 2 221 1 135 1 347 4 261 1 263 1 365 1 74 1 266 1 200 1 339 2 79 2 202 1 312 4 45 1 315 2 181 1 373 1 50 1 93 1 320 4 277 1 96 1 101 1 281 1 55 2 
344 1 129 2 254 2 61 1 257 1 345 1 221 1 347 5 135 1 261 1 263 1 74 1 266 1 79 2 312 4 315 2 275 2 274 1 181 1 89 1 183 1 18 1 320 5 93 1 96 1 101 1 281 1 354 2 283 2 154 2 155 1 157 2 191 1 195 2 35 2 236 1 330 6 286 1 197 2 365 1 337 2 41 1 200 1 339 3 202 1 45 1 203 1 168 2 373 1 50 1 124 1 249 1 342 2 55 2 302 1 
74 1 266 1 339 1 312 2 202 1 155 1 45 1 345 1 191 1 373 1 35 1 50 1 320 3 93 1 330 2 96 1 286 1 221 1 347 3 281 1 261 1 128 1 
74 1 266 1 339 1 79 1 312 3 202 1 155 1 157 1 45 1 345 1 191 1 181 1 373 1 50 1 320 3 93 1 330 1 96 1 286 1 221 1 347 3 281 1 261 1 128 1 
283 1 155 1 157 1 345 1 191 1 35 1 330 2 286 1 221 1 347 3 261 1 74 1 266 1 339 1 79 1 202 1 312 3 45 1 181 1 373 1 50 1 93 1 320 3 96 1 281 1 128 1 
344 1 254 1 61 1 345 1 221 1 347 5 135 1 261 1 263 1 74 1 266 1 12 1 79 4 312 6 181 5 320 5 93 1 96 1 147 1 281 1 283 4 154 2 155 1 157 5 191 1 327 1 195 1 35 4 330 7 286 1 163 1 197 2 365 1 290 1 200 1 339 3 202 1 45 1 373 1 168 2 50 1 342 2 55 2 128 1 
344 1 254 1 61 1 345 1 221 1 347 4 135 1 261 1 263 1 74 1 266 1 79 2 312 4 315 2 181 1 320 4 93 1 96 1 281 1 101 1 283 2 154 2 155 1 157 2 191 1 195 1 35 2 330 4 286 1 197 2 365 1 200 1 339 2 202 1 45 1 373 1 168 2 50 1 342 2 55 2 
344 1 283 2 154 2 254 1 155 1 157 1 61 1 345 1 191 1 327 1 195 1 35 2 330 4 286 1 221 1 347 4 135 1 261 1 197 2 263 1 365 1 74 1 290 1 266 1 200 1 339 2 12 1 79 2 202 1 312 4 45 1 181 1 168 2 373 1 50 1 93 1 320 4 342 2 96 1 281 1 55 2 
344 1 283 2 154 2 254 1 155 1 157 1 61 1 345 1 191 1 327 1 195 1 35 2 330 4 286 1 221 1 347 4 135 1 261 1 197 2 263 1 365 1 74 1 290 1 266 1 200 1 339 2 12 1 79 2 202 1 312 4 45 1 181 1 168 2 373 1 50 1 93 1 320 4 342 2 96 1 281 1 55 2 
344 1 283 2 58 1 154 2 254 1 155 1 157 1 158 2 345 1 191 1 195 1 35 2 330 4 286 1 38 2 221 1 347 4 135 1 261 1 263 1 365 1 74 1 290 1 266 1 200 1 339 2 79 2 164 1 202 1 312 4 45 1 315 2 181 1 373 1 50 1 277 1 93 1 320 4 96 1 281 1 55 2 
212 1 76 1 140 1 81 2 131 1 369 3 368 1 231 1 88 1 160 1 298 3 208 1 363 2 67 1 109 1 322 1 162 1 114 1 39 1 238 1 288 2 150 1 324 6 127 1 198 1 177 2 
212 4 253 1 304 1 153 1 360 2 131 11 160 2 363 1 67 2 68 3 162 2 7 1 238 11 288 4 264 1 198 2 177 2 76 2 291 1 118 1 239 3 140 2 81 1 369 8 141 1 90 1 298 6 208 1 145 1 352 1 97 2 127 1 324 14 
212 1 253 1 129 1 107 1 257 1 232 1 361 1 160 1 236 1 67 1 112 1 286 1 162 1 334 1 288 2 198 1 337 1 76 1 266 2 366 1 118 1 81 1 83 1 45 2 369 1 274 1 275 1 141 1 298 1 299 1 300 1 376 1 95 1 302 1 127 1 169 1 324 2 354 1 
212 7 172 1 253 1 129 3 131 7 257 2 174 2 64 1 67 3 7 4 177 8 265 2 76 3 266 3 140 3 81 2 83 1 80 2 88 1 275 1 274 2 141 1 90 2 97 2 150 1 324 20 354 3 360 2 232 1 361 2 160 3 236 2 363 4 109 1 112 2 286 1 162 3 39 1 114 1 334 2 238 7 288 6 198 3 337 3 115 2 118 1 201 2 368 1 45 3 369 10 245 1 298 10 208 3 299 2 376 1 126 1 169 1 127 3 302 2 
253 1 129 7 257 2 160 2 220 1 236 2 67 2 108 1 286 1 162 2 288 4 198 2 335 1 337 8 76 2 266 1 118 1 83 1 45 1 369 1 85 1 370 2 274 2 275 2 142 1 183 1 298 1 301 1 376 1 249 1 322 1 228 1 323 1 126 1 169 1 302 3 127 2 324 2 354 8 
212 1 360 1 131 1 193 1 160 1 305 1 363 1 67 1 286 1 162 1 238 1 288 2 198 1 177 1 76 1 266 1 140 1 83 1 45 1 369 1 244 1 141 1 90 1 298 2 208 1 376 1 97 1 127 1 324 3 
212 1 76 1 140 1 360 1 131 1 369 2 160 1 67 1 322 1 162 1 7 1 238 1 288 2 324 2 127 1 198 1 170 1 177 1 
212 1 76 1 77 1 131 1 160 1 90 1 298 2 208 1 363 1 67 1 322 1 162 1 238 1 288 2 324 2 127 1 198 1 177 1 
212 2 360 1 131 2 160 1 67 1 363 1 162 1 7 1 238 2 288 2 198 1 177 2 76 1 140 1 369 2 90 1 298 2 208 1 97 1 322 1 127 1 324 4 
212 1 76 1 140 1 360 1 131 1 369 2 160 1 108 1 67 1 162 1 7 1 238 1 288 2 324 2 127 1 198 1 170 1 177 1 
212 1 76 1 77 1 131 1 160 1 90 1 298 2 208 1 363 1 108 1 67 1 162 1 238 1 288 2 324 2 127 1 198 1 177 1 
212 2 360 1 131 2 160 1 67 1 108 1 363 1 162 1 7 1 238 2 288 2 198 1 177 2 76 1 140 1 369 2 90 1 298 2 208 1 97 1 127 1 324 4 
212 2 360 1 131 2 160 1 67 1 363 1 162 1 7 1 238 2 288 2 198 1 177 2 76 1 140 1 369 2 90 1 298 2 208 1 97 1 324 4 127 1 
253 1 129 1 257 1 361 1 160 1 236 1 67 1 112 1 162 1 334 1 288 2 198 1 337 1 265 1 76 1 266 1 118 1 81 1 369 1 45 1 274 1 275 1 298 1 299 1 324 2 302 1 127 1 354 1 
253 1 129 1 257 1 361 1 160 1 236 1 65 1 67 1 112 1 162 1 288 2 198 1 337 1 76 1 266 1 118 1 81 1 369 1 45 1 274 1 275 1 316 1 298 1 324 2 302 1 127 1 24 1 354 1 
212 2 360 1 131 2 160 1 67 1 363 1 162 1 7 1 238 2 288 2 198 1 177 2 76 1 140 1 369 2 141 1 90 1 298 2 208 1 97 1 127 1 324 4 
212 2 129 1 360 1 131 2 257 1 174 1 361 1 160 1 236 1 363 1 67 1 112 1 162 1 7 1 238 2 334 1 288 2 198 1 177 2 337 1 265 1 76 1 266 1 140 1 369 2 45 1 274 1 90 1 298 2 208 1 299 1 97 1 323 1 324 4 302 1 127 1 354 1 
212 1 360 1 131 1 193 1 160 1 305 1 67 1 286 1 162 1 7 1 260 1 238 1 288 2 198 1 177 1 76 1 266 1 140 1 83 1 45 1 369 2 141 1 90 1 298 1 208 1 376 1 97 1 127 1 324 3 
356 1 358 1 357 1 153 3 359 1 360 4 1 1 160 3 306 1 363 4 67 3 68 3 109 1 162 3 39 1 114 1 7 4 73 1 288 6 198 3 289 1 177 8 336 1 13 1 239 4 140 5 180 4 368 1 369 20 88 1 276 1 90 4 143 1 298 21 321 1 208 5 145 1 210 2 97 4 378 1 150 1 324 41 230 1 
356 1 358 1 357 1 153 3 359 1 360 4 1 1 160 4 306 2 363 4 67 4 68 3 109 1 162 4 39 1 114 1 7 3 73 1 288 8 198 4 289 1 177 7 336 1 13 1 239 4 140 5 180 4 368 1 369 20 88 1 276 1 90 3 143 1 298 18 321 1 208 4 145 1 210 2 97 4 378 1 150 1 324 38 230 1 
356 1 358 1 357 1 153 2 360 7 1 1 160 2 306 1 363 7 67 2 68 4 109 1 162 2 39 1 114 1 7 7 73 1 288 4 264 2 198 2 289 1 177 14 336 1 13 1 239 4 140 8 180 4 368 1 369 27 88 1 276 1 90 7 143 1 298 25 208 8 145 2 210 1 97 7 378 1 150 1 324 52 230 1 
357 1 153 1 359 1 360 3 1 1 160 2 363 3 67 2 68 1 162 2 6 1 7 3 73 2 288 4 198 2 289 1 177 6 239 2 140 3 180 2 369 9 276 1 90 3 298 10 208 3 145 1 210 1 97 3 378 1 324 19 
356 1 358 1 357 1 153 2 360 3 1 1 160 3 306 2 363 2 67 3 68 2 162 3 7 2 73 1 288 6 198 3 177 4 289 1 336 1 13 1 239 2 140 3 180 4 369 14 276 1 90 2 143 1 298 12 208 2 210 2 97 3 378 2 324 26 230 1 
297 1 227 1 
30 1 271 1 326 1 
329 1 267 1 111 1 292 1 100 1 176 1 243 1 137 1 63 1 3 1 
214 1 225 1 
329 1 175 1 267 1 284 1 270 1 176 1 243 1 137 1 63 1 
117 1 267 1 292 1 157 1 60 1 243 1 63 1 4 1 219 1 329 1 320 1 111 1 94 1 347 1 100 1 176 1 137 1 349 2 
117 1 267 1 292 1 157 1 60 1 243 1 63 1 4 1 219 1 329 1 320 1 111 1 94 1 347 1 100 1 176 1 137 1 349 2 
117 1 267 1 292 1 157 1 60 1 243 1 63 1 4 1 219 1 329 1 320 1 111 1 94 1 347 1 100 1 176 1 137 1 349 2 
297 1 227 1 271 1 
297 1 227 1 271 1 
30 1 326 1 
30 1 271 1 326 1 
280 1 8 1 
214 1 63 1 4 1 329 1 286 2 347 1 176 1 137 1 225 1 349 1 8 1 266 2 267 1 81 1 269 1 83 2 311 1 45 2 243 1 318 1 374 1 246 1 320 1 94 1 376 2 280 1 148 1 
253 1 129 2 257 1 160 1 236 1 67 1 286 2 237 1 162 1 224 1 288 2 40 1 198 1 335 1 337 2 76 1 266 2 43 1 118 1 45 2 369 1 370 2 274 1 141 1 298 1 251 1 228 1 302 1 127 1 324 2 354 2 
28 1 29 1 129 2 242 1 257 1 204 1 2 1 274 1 362 1 319 2 123 1 146 1 222 1 250 1 323 1 126 1 186 1 354 2 337 2 
28 1 29 1 129 1 204 1 257 1 2 1 274 1 362 1 319 2 123 1 377 1 146 1 250 1 126 1 186 1 354 1 337 1 
129 1 257 1 274 1 275 1 183 1 236 1 249 1 222 1 250 1 125 1 302 1 152 1 354 1 337 1 
28 1 29 1 129 1 242 1 204 1 257 1 2 1 274 1 362 1 319 2 123 1 146 1 222 1 250 1 126 1 186 1 354 1 337 1 
15 1 
0 1 129 1 257 1 361 1 160 1 305 2 236 1 67 1 112 1 286 2 162 1 334 1 288 2 198 1 337 1 265 1 76 1 266 3 118 1 81 1 83 2 45 3 275 1 274 1 298 1 299 1 376 2 324 1 302 1 127 1 354 1 211 1 
213 2 200 1 254 2 120 2 157 4 315 4 181 2 89 1 195 1 18 1 109 1 342 2 135 1 365 1 263 1 
346 1 209 1 254 1 157 1 231 1 181 1 195 1 
254 1 157 2 61 1 195 1 330 1 135 1 347 1 197 1 263 1 365 1 200 1 339 1 315 1 181 1 168 1 320 1 342 1 
213 6 215 1 129 2 254 8 257 1 346 1 135 4 347 5 263 4 75 2 11 2 140 2 272 1 274 2 275 1 315 12 181 2 89 2 18 1 90 2 320 5 353 1 97 2 281 2 323 1 149 2 354 2 188 1 360 2 157 8 159 2 195 9 236 1 331 2 330 5 112 1 110 1 365 4 337 2 42 3 200 4 338 2 339 3 201 2 120 6 122 1 375 2 208 2 209 1 342 6 302 6 252 2 
343 1 213 5 356 1 187 1 153 1 254 5 360 2 157 5 159 2 195 8 330 1 68 1 347 1 135 2 263 2 365 2 336 1 200 2 339 1 13 1 239 1 140 2 120 5 315 6 181 2 89 1 18 1 90 2 143 1 320 1 208 2 342 3 97 2 252 1 230 1 
303 1 104 1 254 2 191 1 159 2 327 1 234 1 195 2 305 1 286 1 135 1 347 1 39 1 263 1 365 1 266 1 200 1 140 2 83 1 45 1 368 1 88 1 320 1 208 1 376 1 185 1 252 1 211 1 
200 1 254 1 157 1 181 1 195 1 346 1 209 1 135 1 365 1 263 1 
213 5 140 2 201 1 360 2 254 5 120 5 157 5 159 2 315 10 195 5 90 2 208 2 342 5 97 2 252 1 
320 1 339 1 330 1 157 1 347 1 181 1 
129 2 254 2 133 1 257 1 195 2 236 1 330 4 135 1 347 3 348 1 263 2 365 2 337 2 200 2 339 2 240 1 203 1 272 1 274 1 275 2 89 2 183 1 18 2 320 3 124 1 249 1 353 2 302 1 354 2 
329 1 136 1 176 1 
329 1 136 1 176 1 
329 1 161 1 100 1 176 1 8 1 
329 1 136 1 176 1 
329 1 144 1 176 1 
329 1 144 1 176 1 
329 1 144 1 176 1 
329 1 176 1 
243 1 137 1 
356 1 357 1 153 1 160 1 68 1 67 1 363 2 109 1 162 1 114 1 39 1 288 2 198 1 177 2 140 1 239 1 369 4 368 1 88 1 298 4 208 1 150 1 324 8 
356 1 357 1 153 1 360 1 160 2 363 2 67 2 68 1 109 1 162 2 39 1 114 1 7 1 288 4 198 2 177 3 239 2 140 2 368 1 369 6 88 1 49 1 298 5 208 1 145 1 97 1 150 1 324 11 
356 1 357 1 153 1 360 2 160 3 306 1 68 1 67 3 363 3 109 1 162 3 39 1 114 1 7 1 288 6 198 3 177 4 336 1 239 1 140 3 13 1 368 1 369 9 88 1 49 1 90 2 143 1 298 10 208 3 97 2 150 1 324 19 230 1 
356 1 357 1 153 1 360 2 160 3 306 1 68 1 67 3 363 3 109 1 162 3 39 1 114 1 7 2 288 6 198 3 177 5 336 1 239 1 140 3 13 1 368 1 369 10 88 1 49 1 90 1 298 7 143 1 208 2 97 2 150 1 324 17 230 1 
356 1 357 1 153 1 160 1 68 1 67 1 363 2 109 1 162 1 114 1 39 1 288 2 198 1 177 2 140 1 239 1 369 4 368 1 88 1 298 4 208 1 150 1 324 8 
356 1 357 1 153 1 360 2 160 1 68 1 67 1 363 1 162 1 7 1 288 2 198 1 177 2 336 1 239 1 140 2 13 1 369 6 90 2 298 6 143 1 208 2 97 2 324 12 230 1 
356 1 357 1 153 1 360 2 160 4 306 2 67 4 68 1 363 3 109 1 162 4 39 1 114 1 7 2 288 8 198 4 177 5 336 1 13 1 239 1 140 3 368 1 369 10 88 1 49 1 90 1 143 1 298 8 208 2 97 2 150 1 324 18 230 1 
356 1 357 1 153 1 359 1 360 3 160 4 306 2 67 4 68 1 363 3 162 4 7 3 288 8 198 4 177 6 336 1 13 1 239 1 140 3 369 9 90 2 143 1 298 7 208 2 97 3 324 16 230 1 
140 1 368 1 369 3 88 3 298 4 208 1 363 3 114 1 39 3 7 3 150 2 324 7 177 6 
356 1 357 1 153 1 359 1 360 2 160 4 306 2 67 4 68 1 363 3 109 1 162 4 39 1 114 1 7 1 288 8 198 4 177 4 336 1 13 1 239 1 140 3 368 1 369 10 88 1 90 1 143 1 298 8 208 2 97 2 150 1 324 18 230 1 
140 1 368 1 369 4 88 1 160 2 298 4 306 1 208 1 363 2 67 2 109 1 162 2 7 1 114 1 39 1 288 4 150 1 324 8 198 2 177 3 
298 3 208 1 140 1 363 2 109 1 369 3 368 1 231 1 39 1 114 1 150 1 324 6 88 1 177 2 
140 1 360 1 369 2 160 1 49 1 90 1 298 2 208 1 363 1 67 1 162 1 97 1 7 1 288 2 198 1 324 4 177 2 
239 2 140 1 153 1 360 1 369 3 90 1 298 4 208 1 363 1 68 1 145 1 97 1 7 1 324 7 177 2 
360 2 256 1 160 2 306 2 68 2 363 5 67 2 109 1 162 2 39 2 114 1 7 4 288 4 264 1 198 2 177 9 140 3 239 2 368 1 369 11 88 2 90 2 298 12 208 3 145 1 352 1 97 2 150 1 324 23 
298 1 239 1 324 1 
68 1 369 1 324 1 
140 1 201 1 360 1 369 3 160 1 49 1 90 1 298 3 208 1 67 1 363 2 162 1 97 1 7 1 288 2 198 1 324 6 177 3 
356 1 357 1 153 1 360 2 160 1 68 1 67 1 363 1 162 1 7 1 288 2 198 1 177 2 336 1 239 1 140 2 13 1 369 6 90 2 298 6 143 1 208 2 97 2 324 12 230 1 
140 1 368 1 369 3 88 1 298 3 208 1 363 1 39 1 7 1 324 6 177 2 
369 1 256 1 88 1 160 1 298 2 306 1 363 1 67 1 162 1 7 1 39 1 114 1 150 1 288 2 324 3 198 1 177 2 
357 1 140 2 369 5 368 1 88 2 160 1 298 5 208 2 67 1 363 3 162 1 39 2 7 2 288 2 185 1 198 1 324 10 177 5 
357 1 140 1 360 1 369 2 160 1 67 1 162 1 7 1 288 2 198 1 324 2 177 1 
357 1 140 1 360 1 369 2 160 1 90 1 298 2 208 1 363 1 67 1 162 1 97 1 7 1 288 2 198 1 324 4 177 2 
357 1 359 1 369 1 256 1 88 1 160 3 306 1 298 2 67 3 363 1 162 3 39 1 7 1 288 6 324 3 198 3 177 2 
357 1 153 1 359 1 360 3 256 1 160 5 306 2 67 5 68 3 363 7 109 1 162 5 364 1 39 3 114 1 7 5 288 10 198 5 177 12 178 1 239 4 268 1 140 5 368 2 369 16 88 3 49 1 90 3 298 18 208 5 145 1 97 3 150 1 324 34 
373 1 17 1 205 1 266 1 81 1 286 1 45 1 
56 1 266 1 81 1 45 1 192 1 372 1 373 1 205 1 17 1 278 1 286 1 308 1 
266 2 129 1 81 1 83 1 45 2 257 1 361 1 274 1 275 1 236 1 65 1 112 1 376 1 286 1 302 1 169 1 354 1 337 1 
353 1 
183 1 236 1 129 1 249 1 231 1 257 1 274 1 302 1 275 1 337 1 354 1 
266 2 129 1 81 1 83 1 45 2 257 1 361 1 274 1 275 1 236 1 299 1 112 1 376 1 286 1 302 1 169 1 354 1 337 1 
266 1 376 1 83 1 353 1 286 1 45 1 169 1 
266 1 376 1 83 1 353 1 286 1 45 1 169 1 
320 1 353 1 347 1 
320 1 353 1 347 1 
220 1 129 1 257 1 274 1 337 1 354 1 
199 1 129 6 370 1 85 1 257 2 275 2 293 1 274 3 142 1 122 1 220 1 236 2 301 1 112 1 134 1 228 1 323 1 126 1 302 3 354 7 337 7 
212 1 129 1 131 1 257 1 174 1 361 1 160 2 236 1 363 2 67 2 109 1 112 1 286 1 162 2 39 1 114 1 238 1 334 1 288 4 198 2 177 2 337 1 115 1 265 1 76 2 266 2 140 1 81 2 83 1 369 3 368 1 45 2 88 1 274 1 141 1 298 3 208 1 299 1 376 1 251 1 150 1 323 1 324 6 302 1 127 2 169 1 354 1 
129 1 254 1 157 1 195 1 346 1 331 1 330 2 135 2 347 3 263 2 365 2 337 1 75 1 42 1 200 2 338 1 339 1 272 1 275 1 181 1 320 3 375 1 209 1 148 1 281 1 149 1 302 2 354 1 
215 1 338 1 129 2 257 1 274 2 122 1 220 1 236 1 112 1 323 1 302 2 354 2 337 2 
367 1 129 4 257 1 371 1 274 1 275 1 183 1 236 1 249 1 323 1 302 1 354 4 337 4 
129 1 156 1 257 1 64 1 293 1 274 2 182 1 236 1 112 1 353 1 134 1 302 1 354 1 337 1 
362 1 319 1 28 1 129 1 146 1 257 1 274 1 275 1 337 1 354 1 
129 2 257 1 274 1 236 1 228 1 323 1 126 1 40 1 302 1 354 2 337 2 
367 1 129 3 257 2 275 1 274 2 142 1 183 1 236 2 249 1 301 1 353 1 228 1 323 1 302 3 354 4 337 4 
367 1 129 3 257 2 275 1 274 2 194 1 142 1 183 1 236 2 249 1 353 1 228 1 323 1 302 3 354 4 337 4 
43 1 266 1 105 1 217 1 45 1 53 1 286 1 237 1 224 1 
296 1 218 1 53 1 
105 1 81 1 53 1 217 1 223 1 
105 2 81 1 217 2 157 1 165 1 345 1 191 1 181 1 296 1 218 1 50 1 320 2 53 1 69 1 221 1 347 2 223 2 281 1 148 1 
216 1 132 1 196 1 36 1 279 1 99 1 113 3 72 1 262 1 10 1 171 3 
173 1 341 1 279 1 287 1 
279 1 99 1 
279 1 99 1 132 1 231 1 
36 1 279 1 99 1 132 1 113 1 171 1 10 1 
26 1 113 1 121 1 
189 1 132 1 36 1 70 1 279 1 184 1 99 1 113 3 72 2 262 1 10 1 171 3 
36 1 279 1 99 1 216 1 98 1 132 1 113 2 171 2 10 1 
2 1 319 1 36 1 279 1 113 1 287 1 146 1 262 1 9 1 10 1 171 1 
36 1 279 1 99 1 113 1 262 1 171 1 10 1 
36 1 99 2 132 1 113 1 262 1 171 1 10 1 
14 1 325 1 91 1 36 2 279 1 99 1 113 2 262 1 10 2 171 2 
173 1 130 1 216 2 132 1 196 1 36 1 279 2 99 1 113 3 287 1 262 1 10 1 171 3 
28 1 29 1 216 1 132 1 16 1 2 1 319 2 36 1 279 1 99 1 113 2 146 1 262 1 10 1 171 2 
27 1 173 1 216 2 132 1 36 2 279 2 99 1 98 1 113 4 287 1 262 1 10 2 171 4 
36 1 279 1 99 1 132 1 113 1 262 1 171 1 10 1 
173 1 216 2 189 1 132 2 341 1 36 1 184 1 279 3 99 2 113 4 287 1 72 1 171 4 10 1 
216 1 132 1 273 1 32 1 48 1 36 1 279 1 99 1 113 2 262 1 10 1 171 2 
78 1 189 1 132 1 36 1 279 1 184 2 99 1 113 3 72 2 262 1 10 1 171 3 
34 1 285 1 279 2 190 2 
36 1 113 1 262 1 166 1 171 1 10 1 
196 1 36 1 279 1 99 1 216 1 132 1 113 2 262 1 171 2 10 1 
248 1 
36 1 279 1 99 1 132 1 113 1 262 1 171 1 10 1 

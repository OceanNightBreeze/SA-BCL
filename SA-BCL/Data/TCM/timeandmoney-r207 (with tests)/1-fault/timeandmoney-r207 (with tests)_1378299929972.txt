#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 188 2 360 2 162 1 139 1 74 2 191 2 364 2 168 1 8 1 145 1 78 1 311 1 316 1 147 4 58 1 35 1 86 5 344 1 64 2 130 1 345 1 373 3 270 9 374 9 44 1 353 2 94 6 
25 1 360 2 188 2 162 1 139 1 74 2 191 2 364 2 168 1 8 1 145 1 78 1 311 1 316 1 147 4 58 1 35 1 86 5 344 1 64 2 130 1 345 1 373 3 270 9 374 9 44 1 353 2 94 6 
25 1 360 2 188 2 162 1 139 1 74 2 191 2 364 2 168 1 8 1 145 1 78 1 311 1 316 1 147 5 58 1 35 1 86 6 344 1 64 2 130 1 345 1 373 4 270 10 374 10 44 1 353 2 94 7 
25 1 360 2 188 1 162 1 74 2 191 2 364 2 168 1 8 1 145 1 78 1 311 1 316 1 147 3 58 1 35 1 86 4 344 1 64 2 130 1 345 1 373 2 270 7 374 7 44 1 353 2 94 4 
147 2 58 1 360 1 188 2 86 3 139 1 74 1 191 1 364 1 373 1 345 1 270 4 168 1 374 4 44 1 353 1 311 1 94 3 
58 1 35 1 27 1 86 1 360 1 191 1 64 1 364 1 345 1 270 2 209 1 168 1 374 2 145 1 24 1 353 1 
147 1 58 1 360 2 86 2 191 2 64 1 345 1 373 1 270 3 168 1 8 1 374 3 94 1 
360 2 188 2 74 1 139 1 191 2 364 1 168 1 8 1 311 1 316 1 147 4 58 1 86 5 38 1 344 1 64 1 373 3 345 1 270 9 43 1 374 9 44 1 353 1 94 7 
360 2 188 2 74 1 139 1 191 2 364 1 168 1 8 1 311 1 316 1 147 4 58 1 86 5 38 1 344 1 64 1 373 3 345 1 270 9 43 1 374 9 44 1 353 1 94 7 
39 1 195 1 313 1 
126 1 237 2 313 1 
200 2 83 1 121 1 203 2 127 2 158 2 251 2 106 2 
187 1 26 1 121 1 238 1 99 1 29 1 305 1 30 1 242 2 106 2 226 1 125 2 335 2 315 1 200 3 83 1 317 1 174 1 111 1 203 3 319 1 175 1 127 2 177 1 151 2 346 1 183 1 296 2 158 2 297 1 351 1 251 2 69 1 184 1 326 1 352 1 49 1 
200 1 83 1 210 1 203 1 255 1 127 1 87 1 158 1 251 1 106 1 
200 1 356 1 203 1 127 1 87 1 371 1 178 1 206 1 166 1 39 1 32 1 282 1 225 1 313 1 
200 1 356 1 203 1 127 1 87 1 371 1 178 1 206 1 39 1 32 2 158 1 251 1 225 2 106 1 313 1 
32 1 170 1 284 1 340 1 225 1 
39 1 6 1 32 2 45 1 284 1 340 1 225 2 313 1 
32 1 284 1 225 1 
200 1 83 1 255 1 203 1 127 1 87 1 340 1 210 1 32 1 157 1 158 1 225 1 251 1 106 1 
313 1 
39 1 14 1 32 2 45 1 284 1 340 1 225 2 313 1 
98 1 4 2 293 1 277 1 340 2 239 2 39 1 19 1 222 1 32 5 103 1 45 1 283 2 34 1 284 2 225 5 104 1 47 1 313 1 
200 2 317 1 203 2 175 1 127 1 339 1 238 1 342 1 151 1 346 1 29 1 242 1 297 1 158 1 251 1 184 1 326 1 48 1 49 1 335 1 
121 1 195 1 
200 2 121 2 203 2 244 1 127 2 62 1 158 1 251 1 106 1 
212 1 273 1 339 1 
200 1 317 1 121 1 203 1 175 1 238 1 151 1 207 1 346 1 29 1 242 1 297 1 184 1 326 1 335 1 49 1 
200 3 121 1 203 3 127 3 158 3 342 1 251 3 106 1 
200 1 210 1 203 1 127 1 87 1 158 1 251 1 
200 1 203 1 244 1 127 1 87 1 158 1 251 1 106 1 62 1 
356 1 187 1 26 1 121 1 238 1 29 1 305 1 30 1 53 1 32 1 242 1 225 1 106 2 226 1 125 1 367 1 335 1 315 1 200 4 317 1 83 1 111 1 203 4 319 1 175 1 127 3 87 1 371 1 178 1 342 1 151 1 206 1 62 1 346 1 296 2 297 1 158 3 351 1 251 3 69 1 184 1 326 1 48 1 49 1 
200 2 121 1 148 1 203 2 127 2 158 1 251 1 342 1 166 1 
200 3 356 1 203 3 127 3 371 1 87 1 342 2 178 1 206 1 62 1 32 1 53 1 158 3 225 1 251 3 106 1 92 1 48 1 313 1 
200 2 203 2 127 2 339 1 342 1 62 1 273 1 158 2 251 2 106 1 
200 1 317 1 121 1 203 1 175 1 238 1 151 1 346 1 29 1 242 1 297 1 326 1 184 1 335 1 49 1 
200 1 121 1 203 1 175 1 238 1 151 1 152 1 346 1 280 1 242 1 297 1 326 1 184 1 335 1 49 1 
315 1 187 1 111 1 291 1 339 1 205 1 268 1 212 1 305 2 30 1 273 1 169 1 296 2 351 1 69 1 314 1 197 1 125 2 252 1 
200 1 203 1 127 1 204 1 87 1 158 1 251 1 206 1 
200 5 121 1 134 1 148 1 203 5 127 5 342 2 62 1 166 1 223 1 158 4 251 4 106 1 48 1 
200 2 210 1 203 2 204 1 127 2 87 1 158 2 251 2 
369 1 234 1 
369 1 234 1 
377 1 80 1 
377 1 80 1 
377 1 80 1 
329 1 369 1 234 1 
329 1 369 1 234 1 
369 1 234 1 372 1 
369 2 63 1 108 1 377 1 80 1 234 2 
329 1 369 1 234 1 
369 1 303 1 234 1 
369 1 303 1 234 1 
369 1 303 1 234 1 
71 1 290 2 243 3 369 2 189 1 228 2 122 1 63 1 124 1 241 1 32 2 22 2 225 2 119 2 234 2 334 1 313 1 366 1 172 2 
55 1 50 1 200 2 121 1 290 1 243 1 203 2 127 2 369 1 245 1 60 1 189 1 228 1 372 1 17 1 18 1 32 1 20 1 158 2 225 1 22 1 251 2 119 1 234 1 
364 1 74 1 353 1 
364 1 209 1 353 1 
364 3 209 1 102 1 215 1 74 2 141 1 
364 2 209 1 65 1 102 1 74 1 141 1 
364 2 209 1 102 1 74 1 141 2 
50 1 133 2 4 1 277 1 237 3 361 1 239 1 167 1 32 5 331 1 169 1 103 3 283 1 284 1 225 5 197 1 313 2 81 1 55 1 126 1 293 2 340 4 113 1 39 1 272 1 322 2 45 1 20 1 298 2 233 1 159 1 253 1 
50 4 70 1 133 6 4 2 277 1 237 9 140 1 220 5 239 2 167 2 32 9 331 3 169 3 170 5 103 8 283 2 284 6 225 9 107 1 197 3 313 5 56 1 126 3 293 6 340 7 113 3 39 1 116 1 322 6 45 1 233 3 159 2 47 1 186 1 253 1 
50 1 133 2 4 1 237 4 361 1 239 1 167 1 32 3 331 1 169 1 103 3 283 1 225 3 197 1 313 3 81 1 126 2 293 2 340 2 113 1 39 1 322 2 298 1 159 1 233 1 47 1 
50 2 133 4 4 1 237 7 361 1 239 1 167 1 32 4 331 2 169 2 103 5 283 1 225 4 197 2 313 4 81 1 56 1 126 3 293 4 340 3 113 2 39 1 116 1 322 4 298 2 159 1 233 2 47 1 186 1 
195 1 68 1 184 1 
218 1 184 1 
129 1 
238 1 184 1 
31 1 3 1 238 1 68 2 184 3 49 1 
238 1 184 1 49 1 
123 1 184 1 
85 1 235 1 291 3 37 1 330 1 113 1 305 3 169 1 349 1 250 1 118 1 352 4 275 1 314 2 82 1 379 2 125 7 
85 1 235 1 291 3 37 1 330 1 113 1 305 3 169 1 349 1 250 1 118 1 352 4 275 1 314 2 82 1 379 2 125 7 
263 1 85 1 235 1 291 3 37 1 330 1 113 1 305 3 169 1 349 1 250 1 118 1 275 1 352 4 314 2 82 1 379 2 125 7 
187 1 235 2 330 1 302 1 305 15 331 3 307 1 169 4 197 3 314 5 125 31 82 2 85 2 368 3 202 1 111 1 291 10 37 2 113 4 42 1 349 1 250 1 296 2 232 1 351 1 324 1 118 5 69 1 233 3 299 4 275 1 352 16 379 3 185 1 
187 2 235 1 330 1 258 1 305 4 169 1 224 1 314 3 125 9 82 1 85 1 111 2 291 4 37 1 113 1 349 1 296 4 232 1 351 2 118 1 69 2 352 5 275 1 379 2 
135 1 360 1 74 1 165 1 191 1 363 1 364 2 168 1 242 1 54 1 312 1 288 1 335 1 58 1 175 1 86 1 292 1 338 1 151 1 64 1 114 1 345 1 270 2 209 1 374 2 215 1 326 1 353 1 94 1 355 1 
135 1 360 1 74 1 165 1 191 1 363 1 364 2 168 1 242 1 54 1 171 1 312 1 288 1 335 1 58 1 175 1 86 1 338 1 151 1 64 1 270 3 209 1 155 1 374 3 215 1 348 1 326 1 353 1 94 2 355 1 
135 1 74 1 165 1 363 1 364 2 168 1 242 1 54 1 171 1 288 1 335 1 58 1 175 1 86 1 151 1 64 1 270 2 209 1 155 1 374 2 215 1 326 1 353 1 94 2 355 1 
276 1 161 1 360 1 238 1 165 2 191 1 363 2 240 1 304 1 365 1 242 1 54 2 335 1 175 1 151 1 64 2 346 1 270 1 374 1 348 1 91 1 326 1 184 1 
135 1 360 1 74 1 165 1 191 1 363 1 364 2 242 1 54 1 312 1 288 1 335 1 175 1 338 1 151 1 64 1 114 1 345 1 270 1 209 1 155 1 374 1 215 1 326 1 353 1 355 1 
256 1 
327 2 276 1 97 2 4 1 277 1 237 2 238 1 190 1 278 2 279 1 5 2 239 1 242 2 103 2 283 1 282 1 284 6 10 1 335 2 200 1 110 1 203 1 293 2 59 4 151 2 153 1 343 1 206 1 346 2 23 2 356 1 359 1 362 2 257 1 166 1 167 1 32 5 225 5 313 2 126 2 175 1 127 1 87 1 371 1 178 1 39 1 40 2 181 1 271 1 182 1 45 3 91 1 132 1 184 1 326 1 
356 1 359 1 279 1 166 1 32 3 282 1 284 2 225 3 200 1 14 1 203 1 127 1 87 1 371 1 59 2 178 1 153 1 343 1 206 1 45 1 23 1 132 1 
356 1 359 1 279 1 362 1 166 1 32 3 282 1 284 1 225 3 313 1 200 1 14 1 203 1 127 1 87 1 371 1 59 3 178 1 153 1 343 1 206 1 39 1 45 1 132 1 
356 1 359 1 279 1 362 1 166 1 32 3 282 1 284 2 225 3 313 1 200 1 14 1 203 1 127 1 87 1 371 1 59 3 178 1 153 1 343 1 206 1 40 1 39 1 45 1 23 1 132 1 
327 2 97 2 4 1 277 1 190 1 279 1 278 2 5 2 239 1 142 1 103 1 282 1 283 1 284 7 10 1 287 1 200 1 14 1 203 1 293 1 59 6 153 1 343 1 206 1 23 4 356 1 359 1 362 4 166 1 221 1 32 5 225 5 313 5 126 2 127 1 371 1 87 1 178 1 179 1 267 1 40 4 39 5 45 3 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 237 2 190 1 278 2 279 1 5 2 362 2 239 1 166 1 32 4 103 1 282 1 283 1 284 4 10 1 225 4 313 2 200 1 203 1 126 2 127 1 293 1 87 1 371 1 59 4 178 1 153 1 343 1 206 1 39 1 40 2 181 1 45 2 23 2 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 190 1 278 2 279 1 5 2 362 2 239 1 166 1 142 1 221 1 32 4 103 1 282 1 283 1 284 4 10 1 225 4 313 1 200 1 203 1 126 2 127 1 293 1 87 1 371 1 59 4 178 1 153 1 343 1 206 1 267 1 39 1 40 2 45 2 23 2 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 190 1 278 2 279 1 5 2 362 2 239 1 166 1 142 1 221 1 32 4 103 1 282 1 283 1 284 4 10 1 225 4 313 1 200 1 203 1 126 2 127 1 293 1 87 1 371 1 59 4 178 1 153 1 343 1 206 1 267 1 39 1 40 2 45 2 23 2 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 237 2 190 1 279 1 362 2 239 1 166 1 7 2 32 4 103 1 282 1 283 1 284 4 225 4 313 1 173 1 200 1 203 1 127 1 293 1 87 1 371 1 59 4 178 1 153 1 343 1 206 1 180 2 267 1 39 1 40 2 117 1 67 1 45 2 23 2 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 190 1 278 2 279 1 5 2 239 1 362 3 166 1 142 1 221 1 32 4 103 1 283 1 282 1 10 1 284 5 225 4 313 1 200 1 203 1 126 2 127 1 293 1 87 1 371 1 59 5 178 1 153 1 343 1 206 1 179 1 267 1 39 1 40 3 45 2 23 3 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 190 1 278 2 279 1 5 2 239 1 362 3 166 1 142 1 221 1 32 4 103 1 283 1 282 1 10 1 284 5 225 4 313 1 200 1 203 1 126 2 127 1 293 1 87 1 371 1 59 5 178 1 153 1 343 1 206 1 179 1 267 1 39 1 40 3 45 2 23 3 132 1 
356 1 327 2 97 2 4 1 359 1 277 1 237 2 190 1 279 1 362 2 239 1 166 1 7 2 32 4 103 1 282 1 283 1 284 4 225 4 313 1 200 1 203 1 127 1 293 1 87 1 371 1 59 4 178 1 153 1 343 1 206 1 180 2 39 1 40 2 181 1 117 1 45 2 23 2 132 1 
315 1 187 1 121 2 85 1 111 1 235 1 291 2 339 1 330 1 113 1 212 1 305 3 30 1 195 1 273 1 169 1 349 1 296 2 351 1 69 1 352 3 275 1 314 2 379 1 125 6 252 1 
187 2 121 1 305 5 30 2 331 3 307 2 260 1 125 15 315 1 202 1 111 2 368 3 319 1 291 2 339 12 113 3 16 1 41 1 208 1 212 12 183 1 273 3 296 4 351 2 21 1 118 2 69 2 233 3 299 4 352 10 
187 1 121 1 238 1 29 1 30 1 305 1 242 1 335 1 125 2 315 1 200 2 317 1 318 1 111 1 203 2 175 1 319 1 127 1 151 1 342 1 294 1 207 1 346 1 183 1 273 1 297 1 158 1 296 2 351 1 21 1 251 1 69 1 184 1 326 1 48 1 352 1 354 1 49 1 
187 2 238 1 242 1 331 1 105 1 333 1 335 1 200 2 203 2 111 2 291 3 339 2 151 1 342 1 113 1 247 1 346 1 212 2 296 4 158 1 297 1 251 1 21 1 351 2 118 2 69 2 352 3 26 1 217 1 75 1 29 1 305 2 30 2 314 1 125 5 315 2 317 1 319 1 175 1 127 1 273 2 233 1 326 1 184 1 48 1 49 1 
187 2 276 1 238 2 193 1 30 2 305 1 242 7 12 1 286 1 335 8 125 2 200 1 315 2 174 2 336 1 203 1 111 2 175 2 319 1 127 1 292 1 342 1 151 8 230 1 346 2 154 1 211 1 155 1 183 1 158 1 296 4 251 1 351 2 69 2 91 1 326 2 184 3 352 1 252 1 
187 1 30 1 305 2 331 1 169 1 106 1 314 1 197 1 125 3 315 1 200 1 111 1 203 1 291 1 127 1 339 1 113 1 62 1 212 1 273 1 375 1 296 2 158 1 251 1 351 1 21 1 69 1 233 1 352 1 
315 1 187 1 111 1 291 1 339 1 113 1 212 1 30 1 90 1 273 1 296 2 118 1 351 1 69 1 233 1 352 2 125 2 252 1 
315 1 187 1 111 1 291 1 339 1 268 1 212 1 30 1 305 2 273 1 169 1 296 2 351 1 69 1 314 1 197 1 125 2 252 1 
187 1 30 1 305 2 331 1 169 1 197 1 314 1 125 4 315 1 111 1 291 2 339 2 113 1 212 2 273 2 296 2 351 1 118 1 233 1 69 1 352 2 252 1 
315 1 187 1 111 1 291 1 339 1 113 1 212 1 30 1 90 1 273 1 296 2 118 1 351 1 69 1 233 1 286 1 352 2 125 2 
315 1 187 1 111 1 291 1 339 1 268 1 212 1 30 1 305 2 273 1 169 1 296 2 351 1 69 1 286 1 314 1 197 1 125 2 
315 1 187 1 111 1 291 1 339 1 113 1 212 1 30 1 273 1 331 1 296 2 118 1 351 1 69 1 233 1 286 1 352 2 125 2 
315 1 187 1 111 1 291 1 339 1 113 1 212 1 30 1 273 1 331 1 296 2 118 1 351 1 69 1 233 1 352 2 125 2 
26 1 187 1 121 1 238 1 29 1 30 1 305 1 242 1 125 2 335 1 200 1 315 1 317 1 203 1 111 1 175 1 319 1 151 1 346 1 183 1 297 1 296 2 351 1 69 1 326 1 184 1 352 1 49 1 
187 1 121 1 238 1 280 1 30 1 305 1 242 1 125 2 335 1 200 1 315 1 57 1 203 1 111 1 175 1 319 1 152 1 151 1 346 1 183 1 297 1 296 2 351 1 69 1 326 1 184 1 352 1 49 1 
315 1 187 1 111 1 291 1 339 1 113 1 212 1 30 1 273 1 331 1 296 2 118 1 21 1 351 1 69 1 233 1 352 2 125 2 
26 1 187 1 238 1 29 1 30 1 242 1 331 1 105 1 125 2 335 1 200 1 315 1 317 1 203 1 111 1 175 1 291 1 292 1 339 1 151 1 113 1 212 1 273 1 297 1 296 2 118 1 351 1 233 1 69 1 326 1 184 1 352 2 49 1 
254 1 187 1 30 1 331 1 106 1 125 2 315 1 200 1 111 1 203 1 291 1 127 1 339 1 113 1 62 1 212 1 273 1 296 2 158 1 118 1 251 1 351 1 21 1 69 1 233 1 352 2 
187 2 301 1 72 1 219 2 258 1 305 10 331 3 9 1 307 1 169 3 310 1 146 1 314 3 197 3 125 19 202 1 111 2 368 1 291 6 320 2 113 3 376 1 296 4 351 2 118 3 69 2 233 3 299 2 300 1 352 9 
187 3 358 1 72 1 28 1 219 1 258 1 305 12 331 3 169 2 9 2 144 1 310 1 146 2 314 2 197 2 125 26 111 3 202 2 368 2 36 1 291 4 337 1 320 4 113 3 232 2 296 6 118 2 351 3 69 3 233 3 299 2 300 1 352 14 378 1 
187 3 235 1 330 1 331 4 9 1 144 1 146 2 197 4 111 3 202 3 291 8 337 1 113 5 349 1 296 6 118 4 351 3 69 3 299 4 352 20 300 1 72 1 358 1 28 1 219 1 258 1 77 1 305 21 169 5 307 1 310 1 314 4 125 41 85 1 368 3 36 1 320 4 376 1 232 1 233 4 275 1 378 1 379 1 
187 4 235 1 358 1 72 1 28 1 330 1 219 1 258 1 77 1 305 18 331 4 144 1 9 1 307 1 169 4 310 1 146 2 314 4 197 3 125 38 85 1 36 1 202 3 111 4 368 3 337 1 291 7 320 4 113 5 376 1 349 1 232 2 296 8 351 4 118 3 69 4 233 4 299 4 275 1 300 1 352 20 378 1 379 1 
187 2 235 1 358 1 72 1 28 1 330 1 219 1 258 1 305 25 331 7 144 1 9 1 307 2 169 8 310 1 146 1 314 7 197 7 125 52 85 1 36 1 202 2 111 2 368 4 337 1 291 14 320 4 113 8 208 2 349 1 232 1 296 4 351 2 118 7 69 2 233 7 299 4 275 1 300 1 352 27 378 1 379 1 
71 1 290 1 369 1 112 1 22 1 228 1 122 1 119 1 63 1 234 1 
17 1 372 1 
289 1 262 1 290 1 136 1 369 1 22 1 228 1 119 1 234 1 
71 1 290 1 243 2 369 1 189 1 228 1 122 1 63 1 124 1 241 1 32 1 225 1 22 1 119 1 234 1 313 1 366 1 172 1 
71 1 290 1 243 2 369 1 189 1 228 1 122 1 63 1 124 1 241 1 32 1 225 1 22 1 119 1 234 1 313 1 366 1 172 1 
71 1 290 1 243 2 369 1 189 1 228 1 122 1 63 1 124 1 241 1 32 1 225 1 22 1 119 1 234 1 313 1 366 1 172 1 
329 1 350 1 108 1 
329 1 350 1 108 1 
156 1 303 1 
156 1 108 1 303 1 
245 1 60 1 
50 1 121 1 357 1 241 1 32 1 225 1 172 1 200 2 55 1 290 1 243 1 203 2 369 1 127 2 245 1 340 1 60 1 228 1 372 1 17 1 18 1 20 1 158 2 22 1 251 2 119 1 234 1 
329 1 350 1 
156 1 108 1 303 1 
187 1 0 1 238 1 52 1 30 1 305 1 242 2 335 2 125 2 315 1 200 2 264 1 174 2 336 1 111 1 203 2 175 1 319 1 127 2 151 2 227 1 295 1 154 1 183 1 296 2 21 1 351 1 69 1 326 1 184 1 352 1 
135 1 175 1 292 1 74 1 151 2 364 2 76 1 269 1 209 1 155 1 242 2 215 1 54 1 326 1 216 1 353 1 312 1 335 2 355 1 
135 1 175 1 74 1 151 1 364 2 269 1 209 1 155 1 242 1 215 1 54 1 326 1 353 1 312 1 335 1 199 1 355 1 
276 1 161 1 175 1 73 1 238 1 151 1 346 1 242 1 54 1 91 1 326 1 184 1 216 1 335 1 
135 1 175 1 74 1 151 1 364 2 76 1 269 1 209 1 155 1 242 1 215 1 54 1 326 1 216 1 353 1 312 1 335 1 355 1 
51 1 
39 1 222 1 98 1 195 1 103 1 293 1 313 1 
4 1 277 1 237 1 278 1 5 1 239 1 32 1 103 1 283 1 10 1 284 1 225 1 313 2 126 1 293 1 39 1 45 1 
133 6 98 1 4 4 277 4 236 1 238 3 237 12 239 4 101 1 242 3 331 2 103 9 283 4 284 5 285 2 332 2 333 2 197 2 335 3 15 1 149 1 292 1 293 8 151 3 113 2 115 2 346 1 248 2 68 2 160 2 218 3 257 1 167 2 123 2 222 1 31 1 32 5 33 1 169 2 225 5 79 2 313 8 175 3 126 6 371 2 39 2 322 6 45 3 46 2 233 2 326 4 184 10 93 2 49 3 
133 5 137 1 4 2 28 1 277 2 237 6 239 2 257 1 167 1 32 1 331 2 103 8 144 1 169 2 283 2 284 1 225 1 313 5 197 2 202 1 368 1 36 1 126 3 337 1 293 5 113 2 115 2 39 2 89 1 248 1 322 5 45 1 233 2 299 1 378 1 
255 1 235 1 4 1 277 1 239 1 221 1 32 1 169 1 103 2 283 1 225 1 106 1 200 1 83 1 85 1 203 1 127 1 87 1 293 2 113 2 115 2 248 1 210 1 274 1 349 1 157 1 158 1 251 1 
98 1 4 1 277 1 293 1 239 1 39 1 222 1 103 1 283 1 313 1 
133 5 126 5 293 5 237 10 113 2 115 2 248 1 322 5 331 2 169 2 103 5 233 2 333 1 313 5 197 2 
39 1 32 1 45 1 284 1 225 1 313 1 
95 1 276 1 4 2 277 1 236 2 238 1 239 2 257 2 167 2 32 3 242 4 33 1 103 2 283 2 284 4 225 3 335 4 110 1 175 1 293 2 151 4 346 2 271 1 347 1 45 2 91 1 47 1 326 1 184 1 
187 1 26 1 121 1 238 1 29 1 305 1 30 1 242 1 106 2 226 1 125 1 335 1 200 3 315 1 83 1 317 1 203 3 111 1 319 1 175 1 127 2 151 1 346 1 296 2 158 2 297 1 351 1 251 2 69 1 326 1 184 1 49 1 
133 2 126 2 4 1 293 2 277 1 237 4 239 1 257 1 39 2 167 1 322 2 103 1 283 1 313 4 379 1 
1 1 22 1 228 1 
1 1 22 1 228 1 
71 1 60 1 22 1 228 1 261 1 
1 1 22 1 228 1 
128 1 22 1 228 1 
128 1 22 1 228 1 
128 1 22 1 228 1 
22 1 228 1 
369 1 234 1 
187 2 85 1 111 2 235 1 291 3 330 1 113 1 305 4 169 1 349 1 296 4 232 1 118 1 351 2 69 2 352 4 275 1 314 2 379 1 125 8 
85 1 235 1 291 2 330 1 113 1 305 3 195 1 349 1 169 1 275 1 352 3 314 2 379 1 125 6 
187 1 111 1 291 2 113 1 143 1 305 2 331 1 169 1 296 2 351 1 118 1 69 1 233 1 352 2 314 1 197 1 125 4 
202 1 368 1 291 2 113 1 305 4 331 1 169 1 307 1 118 1 233 1 299 2 352 3 314 1 197 1 125 7 
187 2 235 2 330 1 305 12 331 2 281 1 307 1 169 3 197 2 314 5 125 23 85 2 368 2 111 2 291 9 113 3 16 1 208 1 349 1 232 2 296 4 118 4 351 2 233 2 69 2 299 2 275 1 352 11 379 1 
305 1 299 1 125 1 
368 1 352 1 125 1 
187 1 111 1 291 3 113 1 143 1 305 3 331 1 169 1 296 2 351 1 118 1 69 1 233 1 333 1 352 3 197 1 314 2 125 6 
187 1 28 1 258 1 305 6 331 2 144 1 169 2 197 2 314 1 125 12 368 1 202 1 111 1 36 1 337 1 291 2 113 2 296 2 118 1 351 1 69 1 233 2 299 1 352 6 378 1 
85 1 235 1 291 2 113 1 305 3 349 1 169 1 118 1 352 3 314 1 125 6 
187 1 85 1 111 1 235 1 291 2 330 1 305 2 281 1 232 1 296 2 118 1 351 1 69 1 352 1 275 1 314 1 125 3 
187 1 85 2 111 1 235 2 291 5 113 2 258 1 305 5 274 1 349 1 169 2 296 2 351 1 118 2 69 1 352 5 314 3 125 10 
187 1 111 1 291 1 113 1 258 1 296 2 351 1 118 1 69 1 233 1 352 2 125 2 
187 1 111 1 291 2 113 1 258 1 305 2 331 1 169 1 296 2 351 1 118 1 69 1 233 1 352 2 314 1 197 1 125 4 
187 3 85 1 111 3 235 1 291 2 258 1 305 2 281 1 376 1 232 1 296 6 351 3 118 1 69 3 352 1 314 1 125 3 
187 5 235 3 330 1 302 1 143 1 258 1 305 18 281 1 331 3 307 1 169 5 197 3 314 7 125 34 85 3 202 1 111 5 368 3 291 12 113 5 42 1 349 2 376 1 232 2 296 10 351 5 118 5 69 5 233 3 299 4 275 1 352 16 379 1 185 1 
187 1 235 1 330 1 258 1 305 4 169 1 144 1 314 2 125 8 85 1 368 1 202 1 111 1 291 2 113 1 349 1 296 2 351 1 69 1 299 1 352 4 275 1 379 1 
187 2 235 1 330 1 143 1 258 1 305 5 331 1 169 1 144 1 307 1 314 2 125 11 85 1 202 1 111 2 368 1 291 3 113 2 349 1 296 4 351 2 118 1 69 2 233 1 299 2 275 1 352 6 379 1 
187 3 235 1 28 1 330 1 143 1 258 1 305 10 331 2 144 1 169 3 197 2 314 3 125 19 85 1 368 1 202 1 111 3 36 1 337 1 291 4 113 3 349 1 296 6 232 1 118 1 351 3 69 3 233 2 299 1 275 1 352 9 378 1 379 1 
187 3 235 1 28 1 330 1 143 1 258 1 305 7 331 2 144 1 169 2 197 1 314 3 125 17 85 1 368 1 202 1 111 3 36 1 337 1 291 5 113 3 349 1 232 1 296 6 118 2 351 3 69 3 233 2 299 1 275 1 352 10 378 1 379 1 
187 1 235 1 330 1 258 1 305 4 169 1 144 1 314 2 125 8 85 1 368 1 202 1 111 1 291 2 113 1 349 1 296 2 351 1 69 1 299 1 352 4 275 1 379 1 
187 1 28 1 258 1 305 6 331 2 144 1 169 2 197 2 314 1 125 12 368 1 202 1 111 1 36 1 337 1 291 2 113 2 296 2 118 1 351 1 69 1 233 2 299 1 352 6 378 1 
187 4 235 1 28 1 330 1 143 1 258 1 305 8 331 2 144 1 169 2 197 1 314 3 125 18 85 1 202 1 111 4 368 1 36 1 337 1 291 5 113 3 349 1 296 8 232 2 118 2 351 4 69 4 233 2 299 1 275 1 352 10 378 1 379 1 
187 4 28 1 258 1 305 7 331 3 144 1 169 2 197 2 314 3 125 16 202 1 111 4 368 1 36 1 337 1 291 6 113 3 376 1 296 8 232 2 118 3 351 4 69 4 233 3 299 1 352 9 378 1 
85 3 235 3 291 6 330 1 113 1 305 4 169 1 349 1 118 3 275 2 352 3 314 3 125 7 
187 4 235 1 28 1 330 1 258 1 305 8 331 2 144 1 169 2 197 1 314 3 125 18 85 1 202 1 111 4 368 1 36 1 337 1 291 4 113 3 349 1 376 1 296 8 232 2 118 1 351 4 69 4 233 2 299 1 275 1 352 10 378 1 379 1 
200 1 121 1 203 1 148 1 127 1 306 1 166 1 
200 1 121 1 148 1 203 1 127 1 164 1 61 1 166 1 214 1 306 1 231 1 259 1 
276 1 346 1 175 1 195 1 242 1 238 1 151 1 91 1 326 1 184 1 335 1 
200 2 121 1 203 2 175 1 127 1 238 1 342 1 151 1 346 1 29 1 242 1 297 1 158 1 251 1 184 1 326 1 49 1 335 1 
356 1 200 2 121 1 203 2 175 1 127 2 87 1 238 2 236 1 342 1 151 1 206 1 123 1 29 1 242 1 297 1 158 2 251 1 184 3 326 1 332 1 49 2 335 1 
356 1 200 2 121 1 203 2 175 1 127 2 87 1 238 2 236 1 342 1 151 2 206 1 280 1 123 1 321 1 242 2 297 1 158 2 251 1 184 3 326 1 332 1 49 2 335 2 
120 1 175 1 371 1 238 1 236 1 151 3 218 1 39 1 346 1 123 1 321 1 32 2 242 3 284 1 225 2 68 1 326 1 184 4 332 1 313 1 49 1 335 3 198 1 
160 1 175 1 371 1 238 1 236 1 151 3 218 1 39 1 346 1 123 1 321 1 32 2 242 3 284 1 225 2 68 1 326 1 184 4 332 1 313 1 49 1 335 3 
175 1 242 1 151 1 326 1 335 1 230 1 
328 1 96 1 174 1 336 1 175 2 292 1 238 2 151 7 230 1 193 1 346 2 211 1 155 1 31 1 66 1 242 6 184 3 326 3 12 1 335 7 49 1 
187 2 235 1 238 1 330 1 242 1 105 1 335 1 200 2 203 2 111 2 291 2 292 1 339 1 151 1 342 1 113 1 295 1 212 1 349 1 296 4 158 1 297 1 251 1 21 1 351 2 69 2 352 3 26 1 121 2 217 1 29 1 30 2 305 3 169 1 314 2 125 6 315 2 317 1 85 1 175 1 127 1 273 1 326 1 184 1 275 1 49 1 379 1 
160 1 98 1 4 2 277 2 218 1 239 2 222 1 32 3 242 1 103 1 33 1 283 2 284 2 225 3 285 1 313 1 335 1 293 1 371 1 340 1 151 1 39 1 346 1 45 1 46 1 68 1 184 2 93 1 
175 1 149 1 292 1 238 1 151 2 230 1 31 1 242 2 68 1 184 2 326 2 335 2 49 1 
276 1 175 1 292 1 238 1 151 4 346 1 321 1 242 4 91 1 325 1 326 1 184 1 335 4 
328 1 175 1 138 1 236 1 238 1 151 2 246 1 66 1 242 2 308 1 184 1 326 2 335 2 49 1 
364 1 346 1 209 1 135 1 175 1 242 1 151 1 326 1 353 1 335 1 
336 1 175 1 292 1 238 1 151 2 52 1 155 1 242 2 184 1 326 1 335 2 
276 1 336 1 175 2 292 1 236 1 238 2 151 5 346 1 193 1 211 1 242 4 91 1 325 1 184 3 326 2 335 5 
201 1 276 1 336 1 175 2 292 1 236 1 238 2 151 5 346 1 193 1 242 4 91 1 325 1 184 3 326 2 335 5 
200 2 121 1 203 2 175 1 127 1 238 1 342 1 151 1 346 1 280 1 242 1 297 1 158 1 251 1 184 1 326 1 49 1 335 1 
328 1 96 1 175 1 236 1 238 1 151 1 31 1 66 1 242 1 184 1 326 2 335 1 49 1 
121 1 84 1 176 1 11 1 192 1 
356 1 121 1 84 2 176 2 371 1 87 1 340 1 178 1 206 1 229 1 192 1 39 1 194 1 32 2 53 1 196 1 225 2 11 2 313 1 
200 1 84 1 264 1 0 1 203 1 127 1 227 1 192 1 11 1 
194 1 196 1 192 1 
58 1 168 1 195 1 86 1 
58 1 270 1 168 1 374 1 86 1 360 1 191 1 
270 1 64 1 363 1 
35 2 58 1 86 1 360 1 163 1 191 1 345 1 270 3 131 1 168 1 374 3 13 1 
58 1 270 2 168 1 374 2 86 1 188 1 360 1 94 1 191 1 
147 1 360 1 86 1 74 1 191 1 364 1 345 1 270 1 374 1 311 1 353 1 
345 1 58 1 270 1 374 1 86 1 360 1 191 1 
345 1 58 2 270 1 168 1 374 1 360 1 191 1 
58 1 86 1 360 2 265 1 150 1 100 1 191 2 345 1 270 2 374 2 
316 1 147 1 58 1 360 1 86 2 344 1 191 1 345 1 373 1 270 3 168 1 374 3 94 2 
58 1 86 1 360 1 74 1 191 1 364 2 345 1 209 1 270 2 168 1 374 2 215 1 353 1 109 1 94 1 
147 1 58 1 360 2 188 1 86 2 139 1 191 2 345 1 373 1 270 4 168 1 374 4 94 2 
345 1 58 1 270 1 168 1 374 1 86 1 360 1 191 1 
147 1 35 1 58 2 360 1 86 3 191 1 373 1 131 1 270 4 168 2 374 4 309 1 94 2 13 1 
58 1 86 1 360 1 370 1 341 1 38 1 191 1 345 1 270 2 168 1 374 2 94 1 
35 2 58 1 86 1 360 1 266 1 191 1 345 1 131 1 270 3 168 1 374 3 13 2 
213 1 323 1 86 2 88 2 
345 1 270 1 249 1 374 1 360 1 191 1 
345 1 58 1 270 2 168 1 374 2 86 1 360 1 344 1 94 1 191 1 
2 1 
345 1 58 1 270 1 168 1 374 1 86 1 360 1 191 1 
35 1 58 1 360 1 86 1 344 1 191 1 345 1 270 3 168 1 374 3 94 1 
147 1 373 1 86 1 309 1 
58 1 86 1 

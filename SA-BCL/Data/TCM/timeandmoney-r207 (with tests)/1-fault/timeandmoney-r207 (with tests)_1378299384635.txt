#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 348 (48,112,135) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 348 347 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 348 347 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 348 (48,112,135) 125 57 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 348 347 158 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 348 347 158 329 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
305 1 360 1 61 2 149 1 313 1 64 2 296 1 88 2 254 1 358 1 322 1 161 3 323 3 
124 1 149 3 303 1 276 1 102 1 327 2 305 1 1 1 350 1 160 2 161 9 245 1 60 1 188 1 61 2 285 1 62 2 64 2 313 6 88 5 358 1 69 2 360 1 296 1 254 2 322 4 323 9 192 1 
124 1 149 3 303 1 276 1 102 1 327 2 305 1 1 1 350 1 160 2 161 9 245 1 60 1 188 1 61 2 285 1 62 2 64 2 313 6 88 5 358 1 69 2 360 1 296 1 254 2 322 4 323 9 192 1 
124 1 149 4 303 1 276 1 102 1 327 2 305 1 1 1 350 1 160 2 161 10 245 1 60 1 188 1 61 2 285 1 62 2 64 2 313 7 88 6 358 1 69 2 360 1 296 1 254 2 322 5 323 10 192 1 
124 1 149 2 303 1 102 1 327 1 305 1 1 1 350 1 160 2 161 7 245 1 60 1 188 1 61 2 285 1 62 2 64 2 313 4 88 4 358 1 69 2 360 1 296 1 254 2 322 3 323 7 192 1 
61 1 149 1 285 1 62 1 64 1 313 3 88 3 358 1 303 1 276 1 327 2 305 1 69 1 296 1 160 1 322 2 323 4 161 4 
245 1 61 1 64 1 88 1 358 1 102 1 305 1 69 1 252 1 296 1 231 1 72 1 254 1 160 1 323 2 161 2 
258 1 149 3 303 1 276 1 327 2 305 1 105 1 160 1 161 9 188 1 61 2 285 1 62 1 313 7 64 2 88 5 358 1 360 1 69 1 296 1 254 1 322 4 323 9 192 1 
258 1 149 3 303 1 276 1 327 2 305 1 105 1 160 1 161 9 188 1 61 2 285 1 62 1 313 7 64 2 88 5 358 1 360 1 69 1 296 1 254 1 322 4 323 9 192 1 
206 1 187 1 112 1 236 1 138 1 28 1 127 1 29 1 67 1 251 1 304 1 306 1 234 1 3 1 
44 1 
112 2 50 1 237 1 44 1 47 1 234 2 29 1 202 1 
112 5 98 1 50 2 287 2 237 1 290 1 29 2 202 1 173 2 117 1 118 1 175 1 132 1 44 1 319 1 321 2 21 1 234 5 162 1 
44 1 199 1 202 1 
30 1 35 2 44 1 
306 2 187 2 236 2 333 1 3 2 127 1 67 2 304 2 
24 2 219 1 236 2 223 2 0 1 127 1 304 2 306 2 307 2 79 1 184 1 54 1 279 1 185 1 333 1 3 3 83 1 281 2 187 2 85 1 10 1 270 1 86 1 357 1 359 1 170 1 67 3 92 1 253 1 340 1 143 1 215 1 144 1 318 1 257 1 23 2 217 1 
306 1 206 1 187 1 236 1 138 1 3 1 127 1 67 1 304 1 251 1 
348 1 135 1 
187 1 49 1 112 2 259 1 236 1 138 1 67 1 202 1 304 1 103 1 306 1 44 1 234 2 3 1 48 1 
112 1 8 1 50 1 234 1 29 1 
112 2 355 1 50 1 237 1 44 1 234 2 29 1 202 1 
112 1 50 1 234 1 
187 2 236 1 238 1 67 2 304 1 225 1 306 1 3 2 333 2 
213 1 309 1 361 1 
357 1 223 1 0 1 67 1 307 1 184 1 253 1 340 1 185 1 215 1 318 1 320 1 333 1 3 1 23 1 217 1 
199 1 333 1 
187 1 236 1 239 1 357 1 223 1 0 1 67 2 306 1 307 1 184 1 185 1 340 1 253 1 204 1 361 1 215 1 318 1 3 2 23 1 217 1 
306 3 187 3 236 3 239 1 333 1 3 3 67 3 304 1 
306 1 206 1 187 1 236 1 138 1 3 1 67 1 
225 1 306 1 187 1 236 1 138 1 238 1 3 1 67 1 304 1 
49 1 24 1 219 1 259 1 236 3 238 1 239 1 223 1 0 1 127 1 304 2 103 1 306 3 307 1 183 1 79 1 184 1 54 1 279 1 185 1 204 1 333 1 3 4 281 2 187 3 112 1 85 1 10 1 138 1 86 1 357 1 67 4 92 1 71 1 340 1 253 1 143 1 215 1 318 1 48 1 234 1 257 1 23 1 217 1 
306 1 187 1 236 1 348 1 347 1 239 1 3 1 67 1 
49 1 187 3 112 1 259 1 236 3 238 1 138 1 239 2 67 3 304 1 103 1 306 3 16 1 71 1 204 1 44 1 234 1 3 3 48 1 
306 2 187 2 213 1 236 2 238 1 361 1 239 1 3 2 67 2 304 1 
357 1 223 1 0 1 67 1 307 1 184 1 253 1 340 1 185 1 215 1 318 1 333 1 3 1 23 1 217 1 
357 1 223 1 265 1 0 1 67 1 307 1 253 1 340 1 185 1 215 1 318 1 230 1 333 1 3 1 23 1 
97 1 24 4 196 1 262 1 328 1 79 1 54 1 309 2 279 1 106 1 310 1 352 1 281 2 85 1 270 2 86 2 92 1 213 2 341 1 122 1 143 1 361 2 317 1 193 1 
306 1 187 1 120 1 236 1 138 1 3 1 67 1 103 1 
187 4 236 4 348 1 347 1 288 1 238 1 239 2 67 4 304 1 306 4 142 1 204 1 3 4 333 1 
306 2 206 1 187 2 120 1 236 2 138 1 3 2 67 2 
139 1 264 1 95 1 
344 1 194 1 174 1 139 2 264 2 40 1 
139 1 264 1 
139 1 264 1 
194 1 40 1 
194 1 40 1 
194 1 40 1 
93 1 139 1 264 1 
93 1 139 1 264 1 
93 1 139 1 264 1 
139 1 264 1 291 1 
139 1 264 1 291 1 
139 1 264 1 291 1 
344 1 59 1 147 2 112 2 63 1 197 2 27 2 264 2 139 2 240 3 154 2 292 1 293 1 339 1 42 1 80 1 232 2 44 1 234 2 
147 1 236 2 27 1 197 1 150 1 264 1 240 1 154 1 306 2 104 1 333 1 3 2 187 2 112 1 58 1 246 1 139 1 67 2 116 1 68 1 339 1 234 1 123 1 95 1 
277 2 129 1 69 2 62 1 252 1 
69 1 62 1 160 1 
69 1 252 1 160 1 
277 1 129 1 69 3 62 2 252 1 128 1 
277 1 129 1 69 2 62 1 252 1 107 1 
97 1 100 2 50 1 301 1 237 1 263 1 29 4 202 1 30 1 328 1 104 1 82 2 310 1 352 1 311 1 112 5 35 3 287 1 209 1 290 3 116 1 68 1 173 1 118 1 177 1 321 1 44 2 21 2 234 5 274 2 96 1 75 1 
97 3 25 1 100 6 50 6 237 1 263 3 200 1 29 7 202 1 30 3 328 3 278 1 229 1 310 3 352 3 311 1 112 9 35 9 8 5 287 2 209 2 290 8 116 4 173 2 41 1 118 1 145 1 319 1 255 5 44 5 321 2 21 6 234 9 274 6 75 2 
97 1 100 2 263 1 29 2 202 1 30 2 328 1 82 1 310 1 352 1 112 3 35 4 287 1 209 1 290 3 116 1 173 1 177 1 44 3 321 1 319 1 234 3 21 2 274 2 96 1 75 1 
97 2 25 1 100 4 263 2 200 1 29 3 202 1 30 3 328 2 82 2 310 2 352 2 112 4 35 7 287 1 209 1 290 5 116 2 173 1 177 1 44 4 145 1 321 1 319 1 234 4 21 4 274 4 96 1 75 1 
298 1 
248 1 318 1 199 1 
235 1 318 1 
185 1 318 1 
15 1 185 1 248 2 318 3 297 1 0 1 
185 1 318 1 0 1 
324 1 318 1 
97 1 24 7 299 1 9 1 165 1 78 2 86 3 270 4 151 1 90 1 308 1 266 1 328 1 70 1 106 3 317 2 134 1 280 1 
97 4 24 31 299 1 78 3 151 2 263 3 308 1 266 2 79 1 328 4 54 1 279 1 55 1 134 2 106 10 310 3 281 2 352 3 7 1 9 5 165 2 86 15 270 16 210 1 37 1 90 1 140 1 171 4 271 3 92 1 70 1 315 1 19 1 317 5 
97 1 24 9 299 1 78 2 151 1 266 1 308 1 328 1 79 2 156 1 54 2 279 2 134 1 106 4 281 4 9 1 165 1 270 5 86 4 90 1 140 1 92 2 317 3 73 1 
97 1 24 7 299 1 9 1 165 1 78 2 86 3 270 4 151 1 90 1 266 1 308 1 328 1 70 1 106 3 317 2 134 1 
97 1 24 7 299 1 9 1 165 1 78 2 86 3 270 4 151 1 90 1 266 1 308 1 328 1 70 1 106 3 317 2 134 1 
99 2 223 1 126 2 307 1 157 1 185 1 351 1 161 1 6 1 61 1 64 1 357 1 89 2 17 1 253 1 215 1 316 1 318 1 254 2 45 1 46 1 23 1 323 1 
99 1 223 1 222 1 126 1 128 1 307 1 160 1 161 1 61 1 113 1 62 1 64 1 168 1 289 1 89 1 358 1 190 1 69 2 252 1 295 1 253 1 215 1 191 1 254 1 23 1 323 1 
99 1 223 1 222 1 126 1 128 1 305 1 307 1 33 1 160 1 161 2 61 1 113 1 62 1 313 1 64 1 168 1 88 1 89 1 358 1 190 1 69 2 252 1 295 1 296 1 253 1 215 1 191 1 254 1 23 1 323 2 
99 1 223 1 222 1 126 1 128 1 305 1 307 1 160 1 161 3 6 1 61 1 113 1 62 1 64 1 313 2 168 1 88 1 289 1 89 1 69 2 14 1 252 1 295 1 296 1 253 1 215 1 191 1 254 1 23 1 323 3 
99 1 223 1 126 1 128 1 305 1 307 1 160 1 161 2 113 1 62 1 313 2 168 1 88 1 289 1 89 1 69 2 14 1 252 1 296 1 253 1 215 1 191 1 254 1 23 1 323 2 
53 1 
50 2 125 1 348 1 237 1 302 1 223 2 201 1 307 2 185 1 135 1 108 1 57 1 112 2 287 1 209 1 357 2 290 1 173 1 118 1 272 1 253 1 215 1 318 1 321 1 45 1 46 1 234 2 21 1 23 2 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 2 50 1 125 1 348 1 237 1 135 1 47 1 234 2 201 1 74 1 
57 1 173 1 112 1 118 1 125 1 287 1 348 1 135 1 321 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 112 1 125 1 348 1 135 1 234 1 201 1 74 1 
57 1 173 1 112 1 118 1 125 1 287 1 348 1 135 1 321 1 234 1 201 1 74 1 
24 2 77 1 236 1 262 1 239 1 223 7 306 1 307 8 79 2 33 1 54 2 279 2 185 2 3 1 281 4 84 1 187 1 85 2 286 1 270 1 86 1 289 1 357 2 169 1 359 2 67 1 250 1 92 2 253 2 215 2 143 2 94 1 318 3 144 1 45 1 46 1 23 8 257 1 343 1 
97 1 24 3 148 1 236 1 238 1 263 1 304 1 306 1 79 1 328 1 54 1 309 1 279 1 106 1 3 1 310 1 281 2 352 1 187 1 85 1 270 1 86 2 337 1 67 1 92 1 213 1 361 1 143 1 317 1 
97 1 24 6 299 1 78 1 262 1 151 1 199 1 308 1 79 1 328 1 54 1 309 1 279 1 106 2 333 2 281 2 85 1 165 1 270 3 86 3 90 1 92 1 213 1 361 1 143 1 317 2 
97 2 24 14 148 1 263 2 181 1 79 2 328 1 130 1 54 2 309 11 2 1 279 2 106 2 333 1 310 2 281 4 352 1 85 2 7 1 9 1 208 1 86 6 270 8 171 3 271 3 92 2 213 4 315 1 143 1 361 11 144 1 317 1 257 1 
24 2 148 1 236 1 239 1 223 1 0 1 306 1 307 1 184 1 79 1 54 1 203 1 185 1 279 1 204 1 333 1 3 2 281 2 244 1 187 1 85 1 86 1 270 1 36 1 357 1 67 2 92 1 213 1 340 1 253 1 215 1 143 1 318 1 144 1 320 1 23 1 257 1 217 1 
97 3 148 1 236 1 151 1 152 1 239 1 0 2 328 3 54 3 204 1 279 3 205 2 106 8 333 2 3 3 281 6 56 2 114 1 9 4 165 1 289 1 67 3 213 7 253 2 340 2 215 2 257 1 23 3 217 2 24 20 299 1 219 2 78 1 263 2 223 3 182 1 306 1 308 1 307 3 32 2 79 3 184 2 309 7 185 2 310 2 352 2 187 1 85 3 86 10 87 2 270 10 357 1 90 1 92 3 143 3 361 7 144 1 317 4 318 2 
97 1 24 2 85 1 9 1 262 1 270 2 79 1 92 1 213 1 54 1 309 1 279 1 361 1 143 1 106 1 310 1 281 2 193 1 
24 2 85 1 262 1 86 2 79 1 92 1 328 1 213 1 54 1 309 1 279 1 361 1 143 1 122 1 106 1 317 1 281 2 352 1 
97 1 24 4 262 1 263 1 79 1 328 1 54 1 309 2 279 1 106 2 310 1 281 2 352 1 85 1 9 1 270 2 86 2 92 1 213 2 143 1 361 2 317 1 
97 1 24 2 85 1 9 1 286 1 270 2 79 1 92 1 213 1 54 1 309 1 279 1 361 1 143 1 106 1 310 1 281 2 193 1 
24 2 85 1 286 1 86 2 79 1 92 1 328 1 213 1 54 1 309 1 279 1 361 1 143 1 122 1 106 1 317 1 281 2 352 1 
97 1 24 4 263 1 79 1 328 1 54 1 309 2 279 1 106 2 310 1 281 2 352 1 85 1 9 1 286 1 270 2 86 2 92 1 213 2 143 1 361 2 317 1 
97 1 24 4 263 1 79 1 328 1 54 1 309 2 279 1 106 2 310 1 281 2 352 1 85 1 9 1 270 2 86 2 92 1 213 2 143 1 361 2 317 1 
24 2 219 1 223 1 0 1 307 1 184 1 79 1 54 1 185 1 279 1 333 1 3 1 281 2 85 1 270 1 86 1 357 1 67 1 92 1 340 1 253 1 215 1 143 1 144 1 318 1 23 1 257 1 217 1 
24 2 223 1 0 1 265 1 307 1 79 1 54 1 185 1 279 1 230 1 333 1 3 1 281 2 85 1 11 1 270 1 86 1 357 1 67 1 92 1 340 1 253 1 215 1 143 1 144 1 318 1 23 1 257 1 
97 1 24 4 148 1 263 1 79 1 328 1 54 1 309 2 279 1 106 2 310 1 281 2 352 1 85 1 9 1 270 2 86 2 92 1 213 2 143 1 361 2 317 1 
97 1 24 4 219 1 263 1 223 1 0 1 307 1 328 1 184 1 79 1 33 1 54 1 309 2 185 1 279 1 106 2 3 1 310 1 352 1 281 2 85 1 9 1 86 2 270 2 87 1 67 1 92 1 213 2 340 1 253 1 361 2 215 1 143 1 317 1 318 1 23 1 217 1 
97 1 24 3 148 1 236 1 238 1 263 1 153 1 304 1 306 1 328 1 79 1 54 1 309 1 279 1 106 1 3 1 310 1 352 1 281 2 187 1 85 1 9 1 86 1 270 2 67 1 92 1 213 1 143 1 361 1 
97 3 24 19 180 2 263 3 52 1 242 1 79 2 156 1 328 3 54 2 279 2 106 6 310 3 281 4 352 3 164 1 283 1 7 1 137 1 9 3 86 10 270 9 12 2 171 2 212 1 271 1 92 2 315 1 317 3 22 1 
97 3 24 26 260 1 101 1 180 4 263 3 52 1 242 1 328 2 79 3 156 1 54 3 279 3 106 4 310 3 281 6 352 2 164 2 282 1 9 2 335 1 86 12 270 14 314 1 12 1 140 2 212 1 171 2 271 2 92 3 315 2 317 2 342 1 22 2 
97 5 101 1 151 1 52 1 242 1 328 5 156 1 54 3 279 3 106 8 281 6 164 2 282 1 283 1 7 1 9 4 335 1 165 1 12 1 212 1 171 4 342 1 20 1 22 1 24 41 299 1 260 1 78 1 263 4 180 4 308 1 79 3 310 4 352 4 270 20 86 21 314 1 90 1 140 1 271 3 92 3 315 3 317 4 
97 5 24 38 299 1 260 1 78 1 101 1 151 1 180 4 263 4 52 1 242 1 308 1 79 4 156 1 328 4 54 4 279 4 106 7 310 4 281 8 352 3 282 1 164 2 283 1 7 1 335 1 9 3 165 1 86 18 270 20 314 1 12 1 90 1 140 2 171 4 212 1 271 3 92 4 315 3 317 4 20 1 342 1 22 1 
97 8 24 52 299 1 260 1 78 1 101 1 151 1 180 4 263 7 52 1 242 1 308 1 79 2 156 1 328 8 130 2 54 2 279 2 106 14 310 7 281 4 352 7 282 1 164 1 7 2 335 1 9 7 165 1 86 25 270 27 314 1 12 1 90 1 140 1 171 4 212 1 271 4 92 2 315 2 317 7 342 1 22 1 
293 1 344 1 147 1 195 1 63 1 27 1 197 1 139 1 264 1 154 1 
123 1 95 1 
338 1 147 1 27 1 197 1 261 1 18 1 139 1 264 1 154 1 
344 1 112 1 147 1 63 1 197 1 27 1 264 1 139 1 240 2 154 1 292 1 293 1 339 1 42 1 80 1 232 1 44 1 234 1 
344 1 112 1 147 1 63 1 197 1 27 1 264 1 139 1 240 2 154 1 292 1 293 1 339 1 42 1 80 1 232 1 44 1 234 1 
344 1 112 1 147 1 63 1 197 1 27 1 264 1 139 1 240 2 154 1 292 1 293 1 339 1 42 1 80 1 232 1 44 1 234 1 
155 1 174 1 93 1 
155 1 174 1 93 1 
178 1 291 1 
174 1 178 1 291 1 
246 1 150 1 
147 1 27 1 197 1 150 1 236 2 264 1 240 1 154 1 29 1 306 2 80 1 104 1 333 1 3 2 187 2 112 1 58 1 246 1 139 1 67 2 141 1 116 1 68 1 232 1 234 1 123 1 95 1 
155 1 93 1 
174 1 178 1 291 1 
24 2 148 1 223 2 307 2 79 1 54 1 34 1 131 1 185 1 279 1 133 1 3 2 281 2 187 2 85 1 270 1 86 1 169 1 115 1 359 2 67 2 92 1 253 1 215 1 143 1 318 1 144 1 256 1 23 2 257 1 343 1 
167 1 357 1 38 1 89 1 223 1 307 1 253 1 185 1 215 1 316 1 318 1 45 1 46 1 23 1 
146 1 113 1 62 1 168 1 289 1 38 1 89 1 223 1 128 1 307 1 69 2 252 1 295 1 253 1 215 1 160 1 23 1 218 1 
146 1 113 1 62 1 168 1 289 1 38 1 89 1 223 2 128 1 307 2 69 2 33 1 252 1 295 1 253 1 215 1 160 1 23 2 218 1 
113 1 62 1 221 1 168 1 289 1 89 1 223 1 128 1 307 1 69 2 252 1 295 1 253 1 215 1 160 1 23 1 218 1 
300 1 
287 1 290 1 202 1 173 1 117 1 118 1 321 1 44 1 21 1 162 1 
97 2 35 10 100 5 263 2 290 5 224 2 30 5 328 2 44 5 21 5 109 1 310 2 274 5 56 1 352 2 
112 1 50 1 237 1 44 1 234 1 202 1 
50 4 237 2 302 1 223 4 307 4 185 1 108 1 5 2 112 3 312 1 268 1 287 2 336 1 209 2 357 2 290 2 173 2 118 1 272 2 253 1 215 1 318 1 319 1 321 2 45 1 46 1 21 2 234 3 23 4 
117 1 290 1 44 1 199 1 21 1 202 1 162 1 
50 1 237 1 202 1 30 1 186 1 4 1 112 1 35 1 287 1 290 1 13 1 173 1 118 1 321 1 44 2 21 1 234 1 
97 2 49 2 324 2 235 3 275 2 50 5 100 6 237 3 325 2 0 3 202 2 328 2 331 2 109 2 56 2 5 1 162 1 163 1 112 5 207 2 287 4 336 1 209 2 248 2 290 9 173 4 117 1 118 4 253 3 215 4 297 1 21 8 23 3 179 1 345 2 263 2 223 3 224 2 30 6 307 3 33 1 185 3 310 2 352 2 35 12 357 1 272 1 273 2 318 10 321 4 44 8 234 5 362 1 274 6 
97 2 50 1 100 5 237 1 101 1 263 2 224 2 202 2 30 3 328 2 349 1 109 1 310 2 352 2 282 1 112 1 35 6 335 1 287 2 209 1 290 8 314 1 172 1 171 1 173 2 271 1 272 1 118 2 315 1 342 1 321 2 44 5 234 1 21 5 274 5 
97 2 299 1 236 1 151 1 28 1 127 1 224 2 304 1 306 1 328 1 227 1 3 1 109 1 206 1 187 1 112 1 165 1 287 1 138 1 356 1 290 2 67 1 251 1 173 1 118 1 321 1 234 1 21 2 
24 1 219 1 236 2 223 1 127 1 0 1 304 2 306 2 307 1 79 1 184 1 54 1 279 1 185 1 333 1 3 3 281 2 187 2 85 1 10 1 86 1 357 1 67 3 92 1 253 1 340 1 215 1 143 1 318 1 257 1 23 1 217 1 
35 4 100 2 287 1 78 1 209 1 290 1 202 2 30 2 173 1 118 1 272 1 321 1 44 4 21 2 274 2 
110 1 246 1 63 1 27 1 154 1 
76 1 27 1 154 1 
76 1 27 1 154 1 
76 1 27 1 154 1 
27 1 198 1 154 1 
27 1 198 1 154 1 
27 1 198 1 154 1 
27 1 154 1 
139 1 264 1 
97 2 24 10 299 1 9 2 165 2 270 5 86 5 151 2 356 1 92 1 79 1 156 1 328 2 54 1 279 1 317 3 106 5 281 2 
97 1 24 2 9 1 270 2 156 1 79 1 92 1 54 1 279 1 106 1 310 1 281 2 
97 1 24 4 9 1 86 2 270 2 263 1 328 1 156 1 79 1 92 1 54 1 279 1 317 1 106 2 310 1 352 1 281 2 
24 3 346 1 283 1 9 1 165 1 86 2 270 1 151 1 140 1 156 1 79 3 92 3 54 3 279 3 317 1 106 2 281 6 
97 5 24 34 346 1 299 2 78 1 151 3 263 3 308 1 79 5 156 1 328 5 54 5 55 1 279 5 106 12 310 3 281 10 352 3 283 1 189 1 7 1 9 5 165 3 86 18 270 16 37 1 90 1 140 2 171 4 271 3 92 5 315 1 19 1 317 7 
97 1 24 8 299 1 9 1 165 1 78 1 86 4 270 4 151 1 90 1 140 1 308 1 328 1 79 2 92 2 54 2 279 2 106 3 317 2 281 4 
97 1 24 6 299 1 165 1 78 1 86 3 270 3 151 1 199 1 90 1 308 1 328 1 317 2 106 2 
97 1 24 4 189 1 9 1 86 2 270 2 263 1 328 1 79 1 92 1 54 1 279 1 317 1 106 2 310 1 352 1 281 2 
97 1 24 7 7 1 9 1 86 4 270 3 263 1 171 2 271 1 328 1 315 1 317 1 106 2 310 1 352 1 
97 3 24 23 346 1 299 1 78 1 151 2 263 2 308 1 328 3 79 2 130 1 54 2 279 2 106 9 310 2 352 2 281 4 7 1 9 4 165 2 208 1 270 11 86 12 90 1 140 2 171 2 271 2 92 2 317 5 
24 1 86 1 171 1 
24 1 271 1 270 1 
97 1 24 6 189 1 9 1 86 3 270 3 263 1 92 1 79 1 328 1 54 1 279 1 106 3 317 2 310 1 281 2 56 1 352 1 
97 2 24 12 101 1 263 2 79 1 156 1 328 2 54 1 279 1 106 2 310 2 281 2 352 2 282 1 9 1 335 1 86 6 270 6 314 1 171 1 271 1 92 1 315 1 317 1 342 1 
97 1 24 6 299 1 9 1 165 1 270 3 86 3 151 1 328 1 317 1 106 2 
24 3 346 1 9 1 165 1 270 1 86 2 151 1 90 1 140 1 308 1 79 1 92 1 54 1 279 1 106 2 317 1 281 2 
97 1 24 8 299 1 78 1 151 1 308 1 328 1 79 1 156 1 54 1 279 1 106 2 281 2 165 1 86 4 270 4 90 1 171 1 271 1 92 1 315 1 317 2 342 1 
97 2 24 11 299 1 78 1 151 1 263 1 308 1 328 1 156 1 79 2 54 2 279 2 106 3 310 1 281 4 189 1 7 1 9 1 165 1 86 5 270 6 90 1 171 2 271 1 92 2 315 1 317 2 342 1 
97 3 24 19 299 1 78 1 101 1 151 1 263 2 308 1 79 3 156 1 328 3 54 3 279 3 106 4 310 2 281 6 352 2 282 1 189 1 9 1 335 1 165 1 86 10 270 9 314 1 90 1 140 1 171 1 271 1 92 3 315 1 317 3 342 1 
97 3 24 17 299 1 78 1 101 1 151 1 263 2 308 1 79 3 156 1 328 2 54 3 279 3 106 5 310 2 281 6 352 1 282 1 189 1 9 2 335 1 165 1 86 7 270 10 314 1 90 1 140 1 171 1 271 1 92 3 315 1 317 3 342 1 
97 1 24 8 299 1 78 1 151 1 308 1 328 1 79 1 156 1 54 1 279 1 106 2 281 2 165 1 86 4 270 4 90 1 171 1 271 1 92 1 315 1 317 2 342 1 
97 2 24 12 101 1 263 2 79 1 156 1 328 2 54 1 279 1 106 2 310 2 281 2 352 2 282 1 9 1 335 1 86 6 270 6 314 1 171 1 271 1 92 1 315 1 317 1 342 1 
97 3 24 18 299 1 78 1 101 1 151 1 263 2 308 1 79 4 156 1 328 2 54 4 279 4 106 5 310 2 281 8 352 1 282 1 189 1 9 2 335 1 165 1 86 8 270 10 314 1 90 1 140 2 171 1 271 1 92 4 315 1 317 3 342 1 
97 3 24 16 101 1 263 3 156 1 79 4 328 2 54 4 279 4 106 6 310 3 281 8 352 2 282 1 283 1 9 3 335 1 86 7 270 9 314 1 140 2 171 1 271 1 92 4 315 1 317 3 342 1 
97 1 24 7 299 1 9 3 165 3 86 4 270 3 151 3 90 1 308 2 328 1 317 3 106 6 
97 3 24 18 299 1 78 1 101 1 151 1 263 2 308 1 156 1 79 4 328 2 54 4 279 4 106 4 310 2 281 8 352 1 282 1 283 1 9 1 335 1 165 1 86 8 270 10 314 1 90 1 140 2 171 1 271 1 92 4 315 1 317 3 342 1 
348 1 347 1 158 1 
353 1 329 1 220 1 348 1 347 1 158 1 211 1 241 1 
284 1 357 1 249 1 223 4 307 4 33 1 185 1 253 1 215 1 318 1 45 1 46 1 23 4 
26 1 114 1 65 1 51 1 223 2 0 1 307 2 119 1 185 1 253 1 215 2 318 1 23 2 5 1 
307 1 69 1 252 1 253 1 168 1 215 1 160 1 357 1 223 1 23 1 
307 2 33 1 253 1 185 1 215 1 133 1 318 1 289 1 169 1 223 2 23 2 
357 1 249 1 223 4 169 1 250 1 307 5 33 1 185 2 253 2 215 2 318 3 46 1 45 1 23 5 5 1 84 1 
357 1 249 1 223 4 169 1 307 5 33 1 332 1 185 2 253 2 215 2 318 3 46 1 45 1 23 5 5 1 84 1 
307 1 253 1 185 1 215 1 318 1 46 1 45 1 199 1 357 1 223 1 23 1 
187 1 236 1 239 1 357 1 223 1 0 1 67 2 306 1 307 1 184 1 185 1 340 1 253 1 215 1 318 1 333 1 3 2 23 1 
324 1 259 1 236 1 239 1 223 1 0 2 103 1 306 2 307 1 184 1 185 2 333 1 3 2 5 1 187 2 207 1 138 1 67 2 253 1 340 1 215 1 318 3 23 1 
324 1 259 1 236 1 239 1 223 2 265 1 0 2 103 1 306 2 307 2 185 2 333 1 3 2 5 1 187 2 207 1 284 1 138 1 67 2 253 1 340 1 215 1 318 3 23 2 
49 1 324 1 235 1 50 1 223 3 0 1 202 1 307 3 185 1 5 1 112 2 207 1 284 1 166 1 248 1 357 1 214 1 253 1 215 1 318 4 44 1 234 2 23 3 
49 1 324 1 112 2 207 1 235 1 284 1 50 1 248 1 357 1 223 3 0 1 202 1 307 3 273 1 185 1 253 1 215 1 318 4 44 1 234 2 23 3 5 1 
307 1 77 1 253 1 215 1 223 1 23 1 
26 1 77 1 65 1 289 1 357 2 169 1 223 6 359 1 0 1 250 1 307 7 294 1 33 1 185 2 253 2 215 3 94 1 297 1 318 3 23 7 84 1 
97 1 24 6 299 1 148 1 219 1 236 1 78 1 151 1 239 1 223 1 0 1 306 1 308 1 307 1 328 1 79 2 184 1 54 2 33 1 309 1 185 1 279 2 205 1 106 2 333 2 3 2 281 4 187 1 85 2 165 1 86 3 270 3 87 1 90 1 67 2 92 2 213 1 340 1 253 1 361 1 215 1 143 2 317 2 318 1 256 1 23 1 217 1 
49 1 345 1 275 1 235 1 50 2 237 1 223 1 29 1 202 1 307 1 331 1 162 1 112 3 287 2 336 1 248 1 290 1 357 1 173 2 117 1 118 2 273 1 318 2 44 1 321 2 21 1 234 3 23 1 
77 1 248 1 223 2 0 1 307 2 33 1 185 1 253 1 215 2 297 1 318 2 23 2 163 1 
187 1 236 1 239 1 357 1 223 1 0 1 265 1 67 2 306 1 307 1 185 1 340 1 253 1 215 1 318 1 333 1 3 2 23 1 
26 1 65 1 223 1 0 1 307 1 294 1 185 1 253 1 215 2 297 1 318 1 23 1 5 1 
187 1 81 1 34 1 131 1 3 1 115 1 66 1 326 1 67 1 
354 1 81 1 159 1 
81 1 43 1 333 1 66 1 326 1 
49 1 354 1 112 2 259 1 138 1 326 2 66 2 29 1 202 1 103 1 31 1 81 1 43 2 71 1 159 1 44 1 333 1 234 2 48 1 
305 1 61 1 64 1 296 1 88 1 358 1 161 1 323 1 
136 1 61 1 149 1 269 1 313 2 64 1 88 3 102 1 305 2 243 1 296 2 322 1 323 4 161 4 
61 1 64 1 313 1 88 1 358 1 305 1 91 1 330 1 296 1 105 1 323 2 161 2 
136 1 61 1 64 1 88 1 358 1 102 2 305 1 243 2 296 1 267 1 323 3 161 3 
226 1 247 1 88 2 233 2 
61 1 64 1 358 1 334 1 161 1 323 1 
305 1 188 1 61 1 313 1 64 1 296 1 88 1 358 1 161 2 323 2 
39 1 
305 1 61 1 64 1 296 1 88 1 358 1 161 1 323 1 
305 1 296 1 88 1 199 1 
305 1 61 1 64 1 296 1 88 1 161 1 323 1 
99 1 254 1 161 1 
61 1 136 1 64 1 88 1 358 1 102 2 305 1 243 1 296 1 216 1 323 3 161 3 
305 1 61 1 313 1 64 1 296 1 88 1 161 2 323 2 327 1 
69 1 61 1 62 1 285 1 64 1 88 1 160 1 358 1 322 1 161 1 323 1 
61 1 64 1 296 1 88 1 358 1 161 1 323 1 
305 1 61 1 64 1 296 2 358 1 161 1 323 1 
111 1 61 2 64 2 88 1 358 1 176 1 296 1 228 1 323 2 161 2 
188 1 61 1 149 1 64 1 313 2 88 2 358 1 305 1 296 1 322 1 323 3 161 3 192 1 
61 1 62 1 64 1 313 1 88 1 358 1 128 1 305 1 69 2 252 1 296 1 121 1 160 1 323 2 161 2 
305 1 61 2 149 1 313 2 64 2 296 1 88 2 358 1 322 1 276 1 161 4 323 4 327 1 
188 1 61 1 313 1 64 1 88 1 358 1 102 1 305 1 296 1 323 3 161 3 
149 1 269 1 88 1 322 1 
296 1 88 1 
